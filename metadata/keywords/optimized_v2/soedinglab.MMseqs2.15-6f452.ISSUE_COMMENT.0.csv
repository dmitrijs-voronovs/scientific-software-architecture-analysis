quality_attribute,sentence,source,author,repo,version,id,keyword,matched_word,match_idx,wiki,url,total_similar,target_keywords,target_matched_words
Availability,	0.1; Seq. Id Threshold 	0; Seq. Id. Mode 	0; Alternative alignments 	0; Coverage threshold 	0; Coverage Mode 	0; Max. sequence length 	65535; Max. results per query 	1000; Compositional bias 	1; Realign hit 	true; Max Reject 	2147483647; Max Accept 	2147483647; Include identical Seq. Id.	false; No preload 	true; Pseudo count a 	1; Pseudo count b 	1.5; Score bias 	0; Gap open cost 	11; Gap extension cost 	1; Threads 	48; Verbosity 	3. Init data structures...; Compute score only.; Using 1 threads.; Query database type: Aminoacid; Target database type: Aminoacid; Calculation of Smith-Waterman alignments.; Time for merging files: 0h 0m 0s 14ms. All sequences processed. 1218 alignments calculated.; 266 sequence pairs passed the thresholds (0.218391 of overall calculated).; 266 hits per query sequence.; Time for processing: 0h 0m 15s 821ms; Program call:; result2profile geneC.db genes.db tmpC/10139724895635470572/aln_0 tmpC/10139724895635470572/profile_0 --sub-mat blosum62.out --mask-profile 1 --e-profile 0.1 --comp-bias-corr 1 --wg 0 --filter-msa 1 --max-seq-id 0.9 --qid 0 --qsc -20 --cov 0 --diff 1000 --pca 0 --pcb 1.5 --omit-consensus 0 --no-preload 1 --gap-open 11 --gap-extend 1 --threads 48 -v 3 . MMseqs Version: 	GITDIR-NOTFOUND; Sub Matrix 	blosum62.out; Mask profile 	1; Profile e-value threshold 	0.1; Compositional bias 	1; Use global sequence weighting 	false; Filter MSA 	1; Maximum sequence identity threshold	0.9; Minimum seq. id. 	0; Minimum score per column 	-20; Minimum coverage 	0; Select n most diverse seqs 	1000; Pseudo count a 	0; Pseudo count b 	1.5; Omit Consensus 	false; No preload 	true; Gap open cost 	11; Gap extension cost 	1; Threads 	48; Verbosity 	3. Start computing profiles.; Query database type: Aminoacid; Target database type: Aminoacid; Time for merging files: 0h 0m 0s 8ms; Time for merging files: 0h 0m 0s 7ms. Done.; Time for processing: 0h 0m 15s 770ms; Program call:; prefilter tmpC/10139724895635470572/profile_0 genes.db tmpC/1013972489563,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/160#issuecomment-461782109:43783,mask,mask-profile,43783,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/160#issuecomment-461782109,1,['mask'],['mask-profile']
Availability,	1; Use all table starts 	false; Offset of numeric ids 	0; Add Orf Stop 	false; Number search iterations 	3; Start sensitivity 	4; Search steps 	1; Run a seq-profile search in slice mode 	0; Sets the MPI runner 	; Remove Temporary Files 	false. Program call:; prefilter geneC.db genes.db tmpC/13630618462368123119/pref_0 --sub-mat blosum62.out -s 5.7 -k 0 --k-score 2147483647 --alph-size 21 --max-seq-len 65535 --max-seqs 1000 --offset-result 0 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --no-preload 1 --pca 1 --pcb 1.5 --threads 56 -v 3 . MMseqs Version: 	GITDIR-NOTFOUND; Sub Matrix 	blosum62.out; Sensitivity 	5.7; K-mer size 	0; K-score 	2147483647; Alphabet size 	21; Max. sequence length 	65535; Max. results per query 	1000; Offset result 	0; Split DB 	0; Split mode 	2; Split Memory Limit 	0; Coverage threshold 	0; Coverage Mode 	0; Compositional bias 	1; Diagonal Scoring 	1; Exact k-mer matching 	0; Mask Residues 	1; Minimum Diagonal score 	15; Include identical Seq. Id.	false; Spaced Kmer 	1; No preload 	true; Pseudo count a 	1; Pseudo count b 	1.5; Spaced k-mer pattern 	; Threads 	56; Verbosity 	3. Initialising data structures...; Using 56 threads.; Could not find precomputed index. Compute index.; Substitution matrices...; Use kmer size 7 and split 3 using Target split mode.; Needed memory (230985702428 byte) of total memory (364787254886 byte) Target database: genes.db(Size: 135880714) Query database type: Aminoacid Target database type: Aminoacid Time for init: 0h 0m 21s 978ms Query database: geneC.db(size=1) Process prefiltering step 1 of 3. Index table k-mer threshold: 99; Index table: counting k-mers...; ...................................................................................................	1 Mio. sequences processed; .............................................................................,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/160#issuecomment-461782109:127022,Mask,Mask,127022,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/160#issuecomment-461782109,1,['Mask'],['Mask']
Availability,"	2147483647; Max Accept 	2147483647; Include identical Seq. Id. 	false; No preload 	false; Early exit 	false; Pseudo count a 	1; Pseudo count b 	1.5; Alphabet size 	13; Kmer per sequence 	80; Mask Residues 	0; K-mer size 	0; Shift hash 	5; Split Memory Limit 	0; Include only extendable 	false; Skip sequence with n repeating k-mers 	0; Rescore mode 	0; Remove hits by seq.id. and coverage 	false; In substitution scoring mode, performs global alignment along the diagonal	false; Remove Temporary Files 	false; Sets the MPI runner 	. Program call:; panproteome.db /tmp/clu//9559457551393989073/linclust/16641318581476709947/pref --sub-mat blosum62.out --alph-size 13 --min-seq-id 0 --kmer-per-seq 80 --mask 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 5 --split-memory-limit 0 --skip-n-repeat-kmer 0 --threads 36 -v 3 . MMseqs Version: 	dfb5e6eb53ee034f02cc08d15513fb5ccce7cce7; Sub Matrix 	blosum62.out; Alphabet size 	13; Seq. Id Threshold 	0; Kmer per sequence 	80; Mask Residues 	0; Coverage Mode 	0; K-mer size 	10; Coverage threshold 	0.8; Max. sequence length 	65535; Shift hash 	5; Split Memory Limit 	0; Include only extendable 	false; Skip sequence with n repeating k-mers	0; Threads 	36; Verbosity 	3. Database type: Aminoacid; V -> I; M -> L; Q -> E; T -> S; R -> K; Y -> F; S -> A; N -> D; Reduced amino acid alphabet:; A C D E F G H I K L P W X . Needed memory (1384664272 byte) of total memory (365681509171 byte); Process file into 1 parts; Generate k-mers list 0; ...................................................................................................	1 Mio. sequences processed; .............; Time for fill: 0 h 0 m 2s; Done.; Sort kmer ... Done.; Time for sort: 0 h 0 m 3s; Sort by rep. sequence ... Done; Time for sort: 0 h 0 m 2s; Time for fill: 0 h 0 m 0s; Time for merging files: 0 h 0 m 0 s; Time for processing: 0 h 0 m 9s; Rescore diagonals.; Program call:; panproteome.db panproteome.db /tmp/clu//9559457551393989073/linclust/16641318581476709947",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/88#issuecomment-401138700:23471,Mask,Mask,23471,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/88#issuecomment-401138700,1,['Mask'],['Mask']
Availability,"	; Remove Temporary Files 	false; ```. And this the stderr:. ```; MCW rank 0 bound to socket 0[core 0[hwt 0-1]], socket 0[core 1[hwt 0-1]], socket 0[core 2[hwt 0-1]], socket 0[core 3[hwt 0-1]], socket 0[core 4[hwt 0-1]], socket 0[core 5[hwt 0-1]], socket 0[core 6[hwt 0-1]], socket 0[core 7[hwt 0-1]]: [BB/BB/BB/BB/BB/BB/BB/BB][../../../../../../../..][../../../../../../../..][../../../../../../../..]; + '[' -z /ngs/software/mmseqs/mmseqs-MPI ']'; + '[' 4 -ne 4 ']'; + '[' '!' -f mmseq-testDB ']'; + '[' '!' -f /junk/databases/mmseqs/test-nr-50m ']'; + '[' -f test-nr50-th32-MPI ']'; + '[' '!' -d tmp ']'; + export OMP_PROC_BIND=TRUE; + OMP_PROC_BIND=TRUE; ++ abspath mmseq-testDB; ++ '[' -d mmseq-testDB ']'; ++ '[' -f mmseq-testDB ']'; ++ [[ mmseq-testDB == */* ]]; +++ pwd; ++ echo /home/dabia/bench/mmseqs/mmseq-testDB; + INPUT=/home/dabia/bench/mmseqs/mmseq-testDB; ++ abspath /junk/databases/mmseqs/test-nr-50m; ++ '[' -d /junk/databases/mmseqs/test-nr-50m ']'; ++ '[' -f /junk/databases/mmseqs/test-nr-50m ']'; ++ [[ /junk/databases/mmseqs/test-nr-50m == */* ]]; +++ cd /junk/databases/mmseqs; +++ pwd; ++ echo /junk/databases/mmseqs/test-nr-50m; + TARGET=/junk/databases/mmseqs/test-nr-50m; ++ abspath tmp; ++ '[' -d tmp ']'; ++ cd tmp; ++ pwd; + TMP_PATH=/home/dabia/bench/mmseqs/tmp; + SENS=5; + '[' 5 -le 5 ']'; + notExists /home/dabia/bench/mmseqs/tmp/pref_5; + '[' '!' -f /home/dabia/bench/mmseqs/tmp/pref_5 ']'; + /ngs/software/mmseqs/mmseqs-MPI prefilter /home/dabia/bench/mmseqs/mmseq-testDB /junk/databases/mmseqs/test-nr-50m /home/dabia/bench/mmseqs/tmp/pref_5 --sub-mat blosum62.out -k 0 --k-score 2147483647 --alph-size 21 --max-seq-len 32000 --max-seqs 300 --offset-result 0 --split 0 --split-mode 2 -c 0 --comp-bias-corr 1 --diag-score 1 --mask 1 --min-ungapped-score 15 --spaced-kmer-mode 1 --threads 8 -v 3 -s 5; ```. It doesn't crash, but don't get any further. The process is using just 1 core.; Increasing --np to 4, results in 4 instances of mmseqs with 8 threads, that c",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/34#issuecomment-309699230:4100,echo,echo,4100,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/34#issuecomment-309699230,4,['echo'],['echo']
Availability,"	false; LCA Ranks 	kingdom:phylum:class:order:family:genus:species; Blacklisted Taxa 	12908,28384; LCA Mode 	3; Match sequences by their ID 	false; Remove Temporary Files 	false; Sets the MPI runner. Program call:; search clusters_rep-seqs_db_14_30 /ebio/abt3_projects/databases_no-backup/uniclust/uniclust50/mmseqs2_8.fac81/uniclust50_2018_08_consensus tmp_part-14/8093924424180559474/first tmp_part-14/8093924424180559474/tmp_hsp1 --sub-mat blosum62.out -a 0 --alignment-mode 2 -e 1e-05 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 1 --realign 0 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --gap-open 11 --gap-extend 1 --threads 24 --compressed 0 -v 3 --seed-sub-mat VTML80.out -s 5.7 -k 0 --k-score 2147483647 --alph-size 21 --max-seqs 200 --offset-result 0 --split 0 --split-mode 2 --split-memory-limit 0 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --spaced-kmer-mode 1 --rescore-mode 0 --filter-hits 0 --sort-results 0 --global-alignment 0 --mask-profile 1 --e-profile 0.001 --wg 0 --filter-msa 1 --max-seq-id 0.9 --qid 0 --qsc -20 --cov 0 --diff 1000 --omit-consensus 0 --min-length 30 --max-length 32734 --max-gaps 2147483647 --contig-start-mode 2 --contig-end-mode 2 --orf-start-mode 1 --forward-frames 1,2,3 --reverse-frames 1,2,3 --translation-table 1 --use-all-table-starts 0 --id-offset 0 --add-orf-stop 0 --chain-alignments 0 --search-type 0 --num-iterations 1 --start-sens 4 --sens-steps 1 --slice-search 0 --strand 1 --disk-space-limit 0 --force-reuse 0 --remove-tmp-files 0. Program call:; prefilter clusters_rep-seqs_db_14_30 /ebio/abt3_projects/databases_no-backup/uniclust/uniclust50/mmseqs2_8.fac81/uniclust50_2018_08_consensus tmp_part-14/8093924424180559474/tmp_hsp1/12507882511714639255/pref_0 --sub-mat blosum62.out --seed-sub-mat VTML80.out -k 0 --k-score 2147483647 --alph-size 21 ",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/221#issuecomment-516032943:4332,mask,mask,4332,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/221#issuecomment-516032943,3,['mask'],"['mask', 'mask-lower-case', 'mask-profile']"
Availability," 	0; Check compatible 	0; Search type 	0; Split database 	0; Split memory limit 	9G; Verbosity 	3; Threads 	8; Min codons in orf 	30; Max codons in length 	32734; Max orf gaps 	2147483647; Contig start mode 	2; Contig end mode 	2; Orf start mode 	1; Forward frames 	1,2,3; Reverse frames 	1,2,3; Translation table 	1; Translate orf 	0; Use all table starts 	false; Offset of numeric ids 	0; Create lookup 	0; Compressed 	0; Add orf stop 	false; Overlap between sequences	0; Sequence split mode 	1; Strand selection 	1; Remove temporary files 	false. indexdb eu-all-2020-02-06/mmseqs-EN-partial-2020-03-26-16-37-04/mmdb eu-all-2020-02-06/mmseqs-EN-partial-2020-03-26-16-37-04/mmdb --seed-sub-mat nucl:identity.out,aa:identity.out -k 5 --alph-size nucl:5,aa:21 --comp-bias-corr 0 --max-seq-len 65535 --max-seqs 300 --mask 0 --mask-lower-case 0 --spaced-kmer-mode 1 -s 1 --k-score 2147483647 --check-compatible 0 --search-type 0 --split 0 --split-memory-limit 9G -v 3 --threads 8 . Estimated memory consumption: 7G; Write VERSION (0); Write META (1); Write SCOREMATRIX3MER (4); Write SCOREMATRIX2MER (3); Write SCOREMATRIXNAME (2); Write SPACEDPATTERN (23); Write DBR1INDEX (5); Write DBR1DATA (6); Write HDR1INDEX (18); Write HDR1DATA (19); Write GENERATOR (22); Index table: counting k-mers; [=================================================================] 100.00% 10.04M 2s 583ms ; Index table: Masked residues: 0; Index table: fill; [=================================================================] 100.00% 10.04M 2s 281ms ; Index statistics; Entries: 298595; DB size: 26 MB; Avg k-mer size: 0.093311; Top 10 k-mers; PPHPH	8644; PPHKV	7060; PPHPT	4123; TVPLP	2413; PPVLP	1740; PPVPT	1290; HHPVP	1173; PPHLV	1150; KVPPP	915; PHHVP	868; Write ENTRIES (9); Write ENTRIESOFFSETS (10); Write SEQINDEXDATASIZE (15); Write SEQINDEXSEQOFFSET (16); Write SEQINDEXDATA (14); Write ENTRIESNUM (12); Write SEQCOUNT (13); Time for merging to mmdb.idx: 0h 0m 0s 0ms; Time for processing: 0h 0m 10s 928ms; ```",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/293#issuecomment-604476526:4443,Mask,Masked,4443,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/293#issuecomment-604476526,1,['Mask'],['Masked']
Availability," 	0; Threads 	256; Verbosity 	3; Taxon blacklist 	12908:unclassified sequences,28384:other sequences; Substitution matrix 	nucl:nucleotide.out,aa:blosum62.out; Add backtrace 	false; Alignment mode 	1; Alignment mode 	0; Allow wrapped scoring 	false; E-value threshold 	1; Seq. id. threshold 	0; Min alignment length 	0; Seq. id. mode 	0; Alternative alignments 	0; Coverage threshold 	0; Coverage mode 	0; Max sequence length 	65535; Compositional bias 	1; Max reject 	5; Max accept 	30; Include identical seq. id. 	false; Preload mode 	0; Pseudo count a 	1; Pseudo count b 	1.5; Score bias 	0; Realign hits 	false; Realign score bias 	-0.2; Realign max seqs 	2147483647; Gap open cost 	nucl:5,aa:11; Gap extension cost 	nucl:2,aa:1; Zdrop 	40; Seed substitution matrix 	nucl:nucleotide.out,aa:VTML80.out; Sensitivity 	2; k-mer length 	0; k-score 	2147483647; Alphabet size 	nucl:5,aa:21; Max results per query 	300; Split database 	0; Split mode 	2; Split memory limit 	0; Diagonal scoring 	true; Exact k-mer matching 	0; Mask residues 	1; Mask lower case residues 	0; Minimum diagonal score 	15; Spaced k-mers 	1; Spaced k-mer pattern 	; Local temporary path 	; Rescore mode 	0; Remove hits by seq. id. and coverage 	false; Sort results 	0; Mask profile 	1; Profile E-value threshold 	0.001; Global sequence weighting 	false; Allow deletions 	false; Filter MSA 	1; Maximum seq. id. threshold 	0.9; Minimum seq. id. 	0; Minimum score per column 	-20; Minimum coverage 	0; Select N most diverse seqs 	1000; Min codons in orf 	30; Max codons in length 	32734; Max orf gaps 	2147483647; Contig start mode 	2; Contig end mode 	2; Orf start mode 	1; Forward frames 	1,2,3; Reverse frames 	1,2,3; Translation table 	1; Translate orf 	0; Use all table starts 	false; Offset of numeric ids 	0; Create lookup 	0; Add orf stop 	false; Overlap between sequences 	0; Sequence split mode 	1; Header split mode 	0; Chain overlapping alignments 	0; Merge query 	1; Search type 	0; Search iterations 	1; Start sensit",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/441#issuecomment-823834129:1675,Mask,Mask,1675,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/441#issuecomment-823834129,2,['Mask'],['Mask']
Availability," 	0; Threads 	8; Verbosity 	3; Taxon blacklist 	12908:unclassified sequences,28384:other sequences; Substitution matrix 	nucl:nucleotide.out,aa:blosum62.out; Add backtrace 	false; Alignment mode 	1; Alignment mode 	0; Allow wrapped scoring 	false; E-value threshold 	1e-05; Seq. id. threshold 	0; Min alignment length 	0; Seq. id. mode 	0; Alternative alignments 	0; Coverage threshold 	0; Coverage mode 	0; Max sequence length 	65535; Compositional bias 	1; Max reject 	5; Max accept 	30; Include identical seq. id. 	false; Preload mode 	0; Pseudo count a 	1; Pseudo count b 	1.5; Score bias 	0; Realign hits 	false; Realign score bias 	-0.2; Realign max seqs 	2147483647; Gap open cost 	nucl:5,aa:11; Gap extension cost 	nucl:2,aa:1; Zdrop 	40; Seed substitution matrix 	nucl:nucleotide.out,aa:VTML80.out; Sensitivity 	6; k-mer length 	0; k-score 	2147483647; Alphabet size 	nucl:5,aa:21; Max results per query 	200; Split database 	0; Split mode 	2; Split memory limit 	0; Diagonal scoring 	true; Exact k-mer matching 	0; Mask residues 	1; Mask lower case residues 	0; Minimum diagonal score 	15; Spaced k-mers 	1; Spaced k-mer pattern; Local temporary path; Rescore mode 	0; Remove hits by seq. id. and coverage 	false; Sort results 	0; Mask profile 	1; Profile E-value threshold 	0.001; Global sequence weighting 	false; Allow deletions 	false; Filter MSA 	1; Maximum seq. id. threshold 	0.9; Minimum seq. id. 	0; Minimum score per column 	-20; Minimum coverage 	0; Select N most diverse seqs 	1000; Min codons in orf 	30; Max codons in length 	32734; Max orf gaps 	2147483647; Contig start mode 	2; Contig end mode 	2; Orf start mode 	1; Forward frames 	1,2,3; Reverse frames 	1,2,3; Translation table 	1; Translate orf 	0; Use all table starts 	false; Offset of numeric ids 	0; Create lookup 	0; Add orf stop 	false; Overlap between sequences 	0; Sequence split mode 	1; Header split mode 	0; Chain overlapping alignments 	0; Merge query 	1; Search type 	0; Search iterations 	2; Start sensitiv",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/432#issuecomment-813242194:2007,Mask,Mask,2007,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/432#issuecomment-813242194,2,['Mask'],['Mask']
Availability," 	1,2,3; Translation table 	1; Translate orf 	0; Use all table starts 	false; Offset of numeric ids 	0; Create lookup 	0; Compressed 	0; Add orf stop 	false; Overlap between sequences	0; Sequence split mode 	1; Strand selection 	1; Remove temporary files 	false. createindex eu-all-2020-02-06/mmseqs-EN-partial-2020-03-26-16-37-04/mmdb eu-all-2020-02-06/mmseqs-EN-partial-2020-03-26-16-37-04/tmp -k 5 --seed-sub-mat identity.out --split-memory-limit 9G -s 1.0 --comp-bias-corr 0 --mask 0 . MMseqs Version: 	12c499dcd647fb0d1c799bc5c6f9f25328ca3e09; Seed substitution matrix 	nucl:identity.out,aa:identity.out; k-mer length 	5; Alphabet size 	nucl:5,aa:21; Compositional bias 	0; Max sequence length 	65535; Max results per query 	300; Mask residues 	0; Mask lower case residues 	0; Spaced k-mers 	1; Spaced k-mer pattern 	; Sensitivity 	1; k-score 	0; Check compatible 	0; Search type 	0; Split database 	0; Split memory limit 	9G; Verbosity 	3; Threads 	8; Min codons in orf 	30; Max codons in length 	32734; Max orf gaps 	2147483647; Contig start mode 	2; Contig end mode 	2; Orf start mode 	1; Forward frames 	1,2,3; Reverse frames 	1,2,3; Translation table 	1; Translate orf 	0; Use all table starts 	false; Offset of numeric ids 	0; Create lookup 	0; Compressed 	0; Add orf stop 	false; Overlap between sequences	0; Sequence split mode 	1; Strand selection 	1; Remove temporary files 	false. indexdb eu-all-2020-02-06/mmseqs-EN-partial-2020-03-26-16-37-04/mmdb eu-all-2020-02-06/mmseqs-EN-partial-2020-03-26-16-37-04/mmdb --seed-sub-mat nucl:identity.out,aa:identity.out -k 5 --alph-size nucl:5,aa:21 --comp-bias-corr 0 --max-seq-len 65535 --max-seqs 300 --mask 0 --mask-lower-case 0 --spaced-kmer-mode 1 -s 1 --k-score 2147483647 --check-compatible 0 --search-type 0 --split 0 --split-memory-limit 9G -v 3 --threads 8 . Estimated memory consumption: 7G; Write VERSION (0); Write META (1); Write SCOREMATRIX3MER (4); Write SCOREMATRIX2MER (3); Write SCOREMATRIXNAME (2); Write SPACEDPATTERN (23);",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/293#issuecomment-604476526:2933,Mask,Mask,2933,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/293#issuecomment-604476526,2,['Mask'],['Mask']
Availability, 	3. Start computing profiles.; Query database type: Aminoacid; Target database type: Aminoacid; Time for merging files: 0h 0m 0s 8ms; Time for merging files: 0h 0m 0s 7ms. Done.; Time for processing: 0h 0m 15s 770ms; Program call:; prefilter tmpC/10139724895635470572/profile_0 genes.db tmpC/10139724895635470572/pref_1 --sub-mat blosum62.out -s 5.7 -k 0 --k-score 2147483647 --alph-size 21 --max-seq-len 65535 --max-seqs 1000 --offset-result 0 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --no-preload 1 --pca 1 --pcb 1.5 --threads 48 -v 3 . MMseqs Version: 	GITDIR-NOTFOUND; Sub Matrix 	blosum62.out; Sensitivity 	5.7; K-mer size 	0; K-score 	2147483647; Alphabet size 	21; Max. sequence length 	65535; Max. results per query 	1000; Offset result 	0; Split DB 	0; Split mode 	2; Split Memory Limit 	0; Coverage threshold 	0; Coverage Mode 	0; Compositional bias 	1; Diagonal Scoring 	1; Exact k-mer matching 	0; Mask Residues 	1; Minimum Diagonal score 	15; Include identical Seq. Id.	false; Spaced Kmer 	1; No preload 	true; Pseudo count a 	1; Pseudo count b 	1.5; Spaced k-mer pattern 	; Threads 	48; Verbosity 	3. Initialising data structures...; Using 48 threads.; Could not find precomputed index. Compute index.; Substitution matrices...; Use kmer size 7 and split 3 using Target split mode.; Needed memory (213441943732 byte) of total memory (243154317312 byte); Target database: genes.db(Size: 135880714); Query database type: Profile; Target database type: Aminoacid; Time for init: 0h 0m 15s 203ms; Query database: tmpC/10139724895635470572/profile_0(size=1); Process prefiltering step 1 of 3. Index table k-mer threshold: 0; Index table: counting k-mers...; ...................................................................................................	1 Mio. sequences processed; ...............................................,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/160#issuecomment-461782109:45558,Mask,Mask,45558,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/160#issuecomment-461782109,1,['Mask'],['Mask']
Availability," 	65535; Max results per query 	300; Mask residues 	0; Mask lower case residues 	0; Spaced k-mers 	1; Spaced k-mer pattern 	; Sensitivity 	1; k-score 	0; Check compatible 	0; Search type 	0; Split database 	0; Split memory limit 	9G; Verbosity 	3; Threads 	8; Min codons in orf 	30; Max codons in length 	32734; Max orf gaps 	2147483647; Contig start mode 	2; Contig end mode 	2; Orf start mode 	1; Forward frames 	1,2,3; Reverse frames 	1,2,3; Translation table 	1; Translate orf 	0; Use all table starts 	false; Offset of numeric ids 	0; Create lookup 	0; Compressed 	0; Add orf stop 	false; Overlap between sequences	0; Sequence split mode 	1; Strand selection 	1; Remove temporary files 	false. indexdb eu-all-2020-02-06/mmseqs-EN-partial-2020-03-26-16-37-04/mmdb eu-all-2020-02-06/mmseqs-EN-partial-2020-03-26-16-37-04/mmdb --seed-sub-mat nucl:identity.out,aa:identity.out -k 5 --alph-size nucl:5,aa:21 --comp-bias-corr 0 --max-seq-len 65535 --max-seqs 300 --mask 0 --mask-lower-case 0 --spaced-kmer-mode 1 -s 1 --k-score 2147483647 --check-compatible 0 --search-type 0 --split 0 --split-memory-limit 9G -v 3 --threads 8 . Estimated memory consumption: 7G; Write VERSION (0); Write META (1); Write SCOREMATRIX3MER (4); Write SCOREMATRIX2MER (3); Write SCOREMATRIXNAME (2); Write SPACEDPATTERN (23); Write DBR1INDEX (5); Write DBR1DATA (6); Write HDR1INDEX (18); Write HDR1DATA (19); Write GENERATOR (22); Index table: counting k-mers; [=================================================================] 100.00% 10.04M 2s 583ms ; Index table: Masked residues: 0; Index table: fill; [=================================================================] 100.00% 10.04M 2s 281ms ; Index statistics; Entries: 298595; DB size: 26 MB; Avg k-mer size: 0.093311; Top 10 k-mers; PPHPH	8644; PPHKV	7060; PPHPT	4123; TVPLP	2413; PPVLP	1740; PPVPT	1290; HHPVP	1173; PPHLV	1150; KVPPP	915; PHHVP	868; Write ENTRIES (9); Write ENTRIESOFFSETS (10); Write SEQINDEXDATASIZE (15); Write SEQINDEXSEQOFFSET (16); Write ",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/293#issuecomment-604476526:3860,mask,mask,3860,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/293#issuecomment-604476526,2,['mask'],"['mask', 'mask-lower-case']"
Availability," 	true; Cascaded clustering steps 	3; Remove Temporary Files 	false; Sets the MPI runner 	; Kmer per sequence 	80; Shift hash 	5; Include only extendable 	false; Skip sequence with n repeating k-mers 	0; Rescore mode 	0; Remove hits by seq.id. and coverage 	false; In substitution scoring mode, performs global alignment along the diagonal	false. Tmp /tmp/clu/ folder does not exist or is not a directory.; Created dir /tmp/clu/; Set cluster settings automatic to s=6; Set cluster mode SET COVER.; Set cluster iterations to 3; Program call:; panproteome.db /tmp/clu//9559457551393989073/clu_redundancy /tmp/clu//9559457551393989073/linclust --cluster-mode 0 -v 3 --max-iterations 1000 --similarity-type 2 --threads 36 --sub-mat blosum62.out --alignment-mode 3 -e 0.001 --min-seq-id 0 --alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-len 65535 --max-seqs 300 --comp-bias-corr 1 --max-rejected 2147483647 --max-accept 2147483647 --pca 1 --pcb 1.5 --alph-size 13 --kmer-per-seq 80 --mask 0 -k 0 --hash-shift 5 --split-memory-limit 0 --skip-n-repeat-kmer 0 --rescore-mode 0 . MMseqs Version: 	dfb5e6eb53ee034f02cc08d15513fb5ccce7cce7; Cluster mode 	0; Verbosity 	3; Max depth connected component 	1000; Similarity type 	2; Threads 	36; Sub Matrix 	blosum62.out; Add backtrace 	false; Alignment mode 	3; E-value threshold 	0.001; Seq. Id Threshold 	0; Alternative alignments 	0; Coverage threshold 	0.8; Coverage Mode 	0; Max. sequence length 	65535; Max. results per query 	300; Compositional bias 	1; Realign hit 	false; Max Reject 	2147483647; Max Accept 	2147483647; Include identical Seq. Id. 	false; No preload 	false; Early exit 	false; Pseudo count a 	1; Pseudo count b 	1.5; Alphabet size 	13; Kmer per sequence 	80; Mask Residues 	0; K-mer size 	0; Shift hash 	5; Split Memory Limit 	0; Include only extendable 	false; Skip sequence with n repeating k-mers 	0; Rescore mode 	0; Remove hits by seq.id. and coverage 	false; In substitution scoring mode, performs global alignment along the diagonal	false",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/88#issuecomment-401138700:21938,mask,mask,21938,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/88#issuecomment-401138700,1,['mask'],['mask']
Availability," 	true; Offset of numeric ids	0; Verbosity 	3. ...................................................................................................	1 Mio. sequences processed; ...................................................................................................	2 Mio. sequences processed; ................................................Time for merging files: 0 h 0 m 0 s; Time for merging files: 0 h 0 m 1 s; ```; Then I cluster the panproteome.db file. mkdir tmp; mmseqs cluster panproteome.db families.db tmp --min-seq-id 0.8 -c 0.8 --threads 10. ```; Program call:; panproteome.db families.db tmp --min-seq-id 0.8 -c 0.8 --threads 10 . MMseqs Version: 	GITDIR-NOTFOUND; Sub Matrix 	blosum62.out; Sensitivity 	4; K-mer size 	0; K-score 	2147483647; Alphabet size 	21; Max. sequence length 	32000; Max. results per query 	20; Offset result 	0; Split DB 	0; Split mode 	2; Split Memory Limit 	0; Coverage threshold 	0.8; Coverage Mode 	0; Compositional bias 	1; Diagonal Scoring 	1; Mask Residues 	1; Minimum Diagonal score 	15; Include identical Seq. Id. 	false; Spaced Kmer 	1; No preload 	false; Early exit 	false; Pseudo count a 	1; Pseudo count b 	1.5; Threads 	10; Verbosity 	3; Add backtrace 	false; Alignment mode 	3; E-value threshold 	0.001; Seq. Id Threshold 	0.8; Realign hit 	false; Max Reject 	2147483647; Max Accept 	2147483647; Cluster mode 	0; Max depth connected component 	1000; Similarity type 	2; Single step clustering 	true; Cascaded clustering steps 	3; Remove Temporary Files 	false; Sets the MPI runner 	; Kmer per sequence 	20; Shift hash 	5; Rescore mode 	0; Remove hits by seq.id. and coverage 	false; In substitution scoring mode, performs global alignment along the diagonal	false. Set cluster settings automatic to s=1; Set cluster mode SET COVER.; Set cluster iterations to 1; Program call:; panproteome.db tmp/425628692068579862/clu_redundancy tmp/425628692068579862/linclust --cluster-mode 0 -v 3 --max-iterations 1000 --similarity-type 2 --threads 1",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/88#issuecomment-391976251:92836,Mask,Mask,92836,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/88#issuecomment-391976251,1,['Mask'],['Mask']
Availability," --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --corr-score-weight 0 --gap-open aa:11,nucl:5 --gap-extend aa:1,nucl:2 --zdrop 40 --threads 128 --compressed 0 -v 3. Index version: 16; Generated by: 14.7e284; ScoreMatrix: VTML80.out; Compute score only; Query database size: 9 type: Aminoacid; Target database size: 713072 type: Aminoacid; [=================================================================] 100.00% 9 0s 44ms; Time for merging to first: 0h 0m 0s 37ms; 128 alignments calculated; 88 sequence pairs passed the thresholds (0.687500 of overall calculated); 9.777778 hits per query sequence; Time for processing: 0h 0m 0s 189ms; rmdb tmp//15404483323509150572/taxonomy_tmp/7054630145456894787/tmp_taxonomy/7007534916548188170/tmp_hsp1/11550195074827057389/pref_0 -v 3. Time for processing: 0h 0m 0s 18ms; rmdb tmp//15404483323509150572/taxonomy_tmp/7054630145456894787/tmp_taxonomy/7007534916548188170/tmp_hsp1/11550195074827057389/aln_0 -v 3. Time for processing: 0h 0m 0s 2ms; rmdb tmp//15404483323509150572/taxonomy_tmp/7054630145456894787/tmp_taxonomy/7007534916548188170/tmp_hsp1/11550195074827057389/input_0 -v 3. Time for processing: 0h 0m 0s 2ms; rmdb tmp//15404483323509150572/taxonomy_tmp/7054630145456894787/tmp_taxonomy/7007534916548188170/tmp_hsp1/11550195074827057389/aln_merge -v 3. Time for processing: 0h 0m 0s 2ms; lca MicroEuk100.eukaryota_odb10 tmp//15404483323509150572/taxonomy_tmp/7054630145456894787/tmp_taxonomy/7007534916548188170/first tmp//15404483323509150572/taxonomy_tmp/7054630145456894787/orfs_tax --blacklist '12908:unclassified sequences,28384:other sequences' --tax-lineage 0 --compressed 0 --threads 128 -v 3. MicroEuk100.eukaryota_odb10_mapping is empty. Rerun createtaxdb to recreate taxonomy mapping.; Error: Lca died; Error: taxonomy died; Error: Search died; ```. Is there any way around the missing taxonomy levels?",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/779#issuecomment-1872491640:13076,Error,Error,13076,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/779#issuecomment-1872491640,3,['Error'],['Error']
Availability," --max-gaps 2147483647 --contig-start-mode 2 --contig-end-mode 2 --orf-start-mode 0 --forward-frames 1,2,3 --reverse-frames 1,2,3 --translation-table 1 --use-all-table-starts 0 --id-offset 0 --add-orf-stop 0 --num-iterations 1 --start-sens 1 --sens-steps 3 --slice-search 0 --strand 1 --disk-space-limit 0 --remove-tmp-files 0. MMseqs Version: 	7.4e23d; Sub Matrix 	blosum62.out; Add backtrace 	false; Alignment mode 	2; E-value threshold 	1e-05; Seq. Id Threshold 	0; Seq. Id. Mode 	0; Alternative alignments 	0; Coverage threshold 	0; Coverage Mode 	0; Max. sequence length 	65535; Max. results per query 	300; Compositional bias 	1; Realign hit 	false; Max Reject 	2147483647; Max Accept 	2147483647; Include identical Seq. Id. 	false; Preload mode 	0; Pseudo count a 	1; Pseudo count b 	1.5; Score bias 	0; Gap open cost 	11; Gap extension cost 	1; Threads 	24; Verbosity 	3; Sensitivity 	6; K-mer size 	0; K-score 	2147483647; Alphabet size 	21; Offset result 	0; Split DB 	0; Split mode 	2; Split Memory Limit 	0; Diagonal Scoring 	1; Exact k-mer matching 	0; Mask Residues 	1; Minimum Diagonal score 	15; Spaced Kmer 	1; Spaced k-mer pattern; Local temporary path; Rescore mode 	0; Remove hits by seq.id. and coverage 	false; Sort results 	0; In substitution scoring mode, performs global alignment along the diagonal	false; Mask profile 	1; Profile e-value threshold 	0.001; Use global sequence weighting 	false; Filter MSA 	1; Maximum sequence identity threshold 	0.9; Minimum seq. id. 	0; Minimum score per column 	-20; Minimum coverage 	0; Select n most diverse seqs 	1000; Omit Consensus 	false; Min codons in orf 	30; Max codons in length 	32734; Max orf gaps 	2147483647; Contig start mode 	2; Contig end mode 	2; Orf start mode 	0; Forward Frames 	1,2,3; Reverse Frames 	1,2,3; Translation Table 	1; Use all table starts 	false; Offset of numeric ids 	0; Add Orf Stop 	false; Number search iterations 	1; Start sensitivity 	1; Search steps 	3; Run a seq-profile search in slice mode 	fa",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/147#issuecomment-452242032:4571,Mask,Mask,4571,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/147#issuecomment-452242032,1,['Mask'],['Mask']
Availability," -a 0 --alignment-mode 3 --wrapped-scoring 0 -e 0.001 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 1 --realign 0 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --zdrop 40 --alph-size nucl:5,aa:13 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 -k 0 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --rescore-mode 0 --filter-hits 0 --sort-results 0 --remove-tmp-files 0 --force-reuse 0. kmermatcher DB_in/fasta_in_db_HC tmpfiles//13298481167543164943/linclust/10229649346622198404/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-id 0 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 16 --compressed 0 -v 3. kmermatcher DB_in/fasta_in_db_HC tmpfiles//13298481167543164943/linclust/10229649346622198404/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-id 0 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 16 --compressed 0 -v 3. Database size: 303 type: Aminoacid; Reduced amino acid alphabet: (A S T) (C) (D B N) (E Q Z) (F Y) (G) (H) (I V) (K R) (L J M) (P) (W) (X). Generate k-mers list for 1 split; [=================================================================] 303 0s 51ms; Sort kmer 0h 0m 0s 3ms; Sort by rep. sequence 0h 0m 0s 0ms; Time for fill: 0h 0m",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-771572412:3169,mask,mask,3169,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-771572412,2,['mask'],"['mask', 'mask-lower-case']"
Availability, /usr/mpi/gcc/openmpi-1.6.5/lib/openmpi/mca_mtl_psm: libpsm_infinipath.so.1: cannot open shared object file: No such file or directory (ignored); MPI Init...; Rank: 0 Size: 1; Program call:; prefilter query_dbs/1000562_0 mmseqs_dir/profile/Tenericutes_profile tmp/14349913440832127037/pref --sub-mat blosum62.out -s 5.7 -k 5 --k-score 2147483647 --alph-size 21 --max-seq-len 65535 --max-seqs 300 --offset-result 0 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 8 --compressed 0 -v 3 . MMseqs Version: da6c1a5a7be5d82719f796b85ce9cbacf9f2162c-MPI; Sub Matrix blosum62.out; Sensitivity 5.7; K-mer size 5; K-score 2147483647; Alphabet size 21; Max. sequence length 65535; Max. results per query 300; Offset result 0; Split DB 0; Split mode 2; Split Memory Limit 0; Coverage threshold 0; Coverage Mode 0; Compositional bias 1; Diagonal Scoring 1; Exact k-mer matching 0; Mask Residues 1; Minimum Diagonal score 15; Include identical Seq. Id. false; Spaced Kmer 1; Preload mode 0; Pseudo count a 1; Pseudo count b 1.5; Spaced k-mer pattern ; Local temporary path ; Threads 8; Compressed 0; Verbosity 3. Initialising data structures...; Using 8 threads.; Could not find precomputed index. Compute index.; Touch data file mmseqs_dir/profile/Tenericutes_profile ... Done.; Substitution matrices...; Substitution matrices...; Use kmer size 5 and split 1 using Query split mode.; Needed memory (1005554861 byte) of total memory (487828463616 byte); Target database: mmseqs_dir/profile/Tenericutes_profile(Size: 8162); Index table k-mer threshold: 90; Index table: counting k-mers... Index table: Masked residues: 0; Index table: fill... Index table: removing duplicate entries...; Index table init done. DB statistic; Entries: 293010879; DB Size: 1790738082 (byte); Avg Kmer Size: 71.7443; Top 10 Kmers; KKKKK 155,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/164#issuecomment-463134521:3487,Mask,Mask,3487,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/164#issuecomment-463134521,1,['Mask'],['Mask']
Availability," 11ms; Time for processing: 0h 10m 41s 827ms; convert2fasta /hwfssz1/ST_DIVERSITY/P18Z10200N0197_temp/USER/tanshangjin/01_gene_cat/protein_cat/all_protein_final_95_rep /hwfssz1/ST_DIVERSITY/P18Z10200N0197_temp/USER/tanshangjin/01_gene_cat/protein_cat/all_protein_final_95_rep.fasta . MMseqs Version:	12.113e3; Use header DB	false; Verbosity 	3. Start writing file to /hwfssz1/ST_DIVERSITY/P18Z10200N0197_temp/USER/tanshangjin/01_gene_cat/protein_cat/all_protein_final_95_rep.fasta; Time for processing: 0h 54m 42s 51ms. log of linclust with `--kmer-per-seq to 80`. kmermatcher /hwfssz1/ST_DIVERSITY/P18Z10200N0197_temp/USER/tanshangjin/01_gene_cat/protein_cat/all_protein_merge_95.db /hwfssz1/ST_DIVERSITY/P18Z10200N0197_temp/USER/tanshangjin/01_gene_cat/protein_cat/tmp/14045843375066908893/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-id 0.95 --kmer-per-seq 80 --spaced-kmer-mode 0 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 1 -k 0 -c 0.9 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 600G --include-only-extendable 0 --ignore-multi-kmer 0 --threads 50 --compressed 0 -v 3 . kmermatcher /hwfssz1/ST_DIVERSITY/P18Z10200N0197_temp/USER/tanshangjin/01_gene_cat/protein_cat/all_protein_merge_95.db /hwfssz1/ST_DIVERSITY/P18Z10200N0197_temp/USER/tanshangjin/01_gene_cat/protein_cat/tmp/14045843375066908893/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-id 0.95 --kmer-per-seq 80 --spaced-kmer-mode 0 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 1 -k 0 -c 0.9 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 600G --include-only-extendable 0 --ignore-multi-kmer 0 --threads 50 --compressed 0 -v 3 . Database size: 773451991 type: Nucleotide. Not enough memory to process at once need to split; [=================================================================] 773.45M 1h 49m 44s 916ms; Pr",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/365#issuecomment-713411153:9624,mask,mask,9624,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/365#issuecomment-713411153,2,['mask'],"['mask', 'mask-lower-case']"
Availability," 3 --max-iterations 1000 --similarity-type 2 --threads 10 --sub-mat blosum62.out --alignment-mode 3 -e 0.001 --min-seq-id 0.8 -c 0.8 --cov-mode 0 --max-seq-len 32000 --max-seqs 20 --comp-bias-corr 0 --max-rejected 2147483647 --max-accept 2147483647 --pca 1 --pcb 1.5 --alph-size 13 --kmer-per-seq 20 --mask 0 -k 0 --hash-shift 5 --split-memory-limit 0 --rescore-mode 0 . MMseqs Version: 	GITDIR-NOTFOUND; Cluster mode 	0; Verbosity 	3; Max depth connected component 	1000; Similarity type 	2; Threads 	10; Sub Matrix 	blosum62.out; Add backtrace 	false; Alignment mode 	3; E-value threshold 	0.001; Seq. Id Threshold 	0.8; Coverage threshold 	0.8; Coverage Mode 	0; Max. sequence length 	32000; Max. results per query 	20; Compositional bias 	0; Realign hit 	false; Max Reject 	2147483647; Max Accept 	2147483647; Include identical Seq. Id. 	false; No preload 	false; Early exit 	false; Pseudo count a 	1; Pseudo count b 	1.5; Alphabet size 	13; Kmer per sequence 	20; Mask Residues 	0; K-mer size 	0; Shift hash 	5; Split Memory Limit 	0; Rescore mode 	0; Remove hits by seq.id. and coverage 	false; In substitution scoring mode, performs global alignment along the diagonal	false; Remove Temporary Files 	false; Sets the MPI runner 	. Program call:; panproteome.db tmp/425628692068579862/linclust/13628666274102407548/pref --sub-mat blosum62.out --alph-size 13 --min-seq-id 0.8 --kmer-per-seq 20 --mask 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 32000 --hash-shift 5 --split-memory-limit 0 --threads 10 -v 3 . MMseqs Version: 	GITDIR-NOTFOUND; Sub Matrix 	blosum62.out; Alphabet size 	13; Seq. Id Threshold 	0.8; Kmer per sequence 	20; Mask Residues 	0; Coverage Mode 	0; K-mer size 	0; Coverage threshold 	0.8; Max. sequence length	32000; Shift hash 	5; Split Memory Limit 	0; Threads 	10; Verbosity 	3. Alphabet size: 13 k-mer size: 10; V -> I; M -> L; Q -> E; T -> S; R -> K; Y -> F; S -> A; N -> D; Reduced amino acid alphabet:; A C D E F G H I K L P W X ; Checking requirements; Needed memory (7",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/88#issuecomment-391976251:94751,Mask,Mask,94751,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/88#issuecomment-391976251,1,['Mask'],['Mask']
Availability, 48 -v 3 . MMseqs Version: 	GITDIR-NOTFOUND; Sub Matrix 	blosum62.out; Mask profile 	1; Profile e-value threshold 	0.1; Compositional bias 	1; Use global sequence weighting 	false; Filter MSA 	1; Maximum sequence identity threshold	0.9; Minimum seq. id. 	0; Minimum score per column 	-20; Minimum coverage 	0; Select n most diverse seqs 	1000; Pseudo count a 	0; Pseudo count b 	1.5; Omit Consensus 	false; No preload 	true; Gap open cost 	11; Gap extension cost 	1; Threads 	48; Verbosity 	3. Start computing profiles.; Query database type: Profile; Target database type: Aminoacid; Time for merging files: 0h 0m 0s 112ms; Time for merging files: 0h 0m 0s 7ms. Done.; Time for processing: 0h 0m 16s 74ms; Program call:; prefilter tmpC/10139724895635470572/profile_1 genes.db tmpC/10139724895635470572/pref_2 --sub-mat blosum62.out -s 5.7 -k 0 --k-score 2147483647 --alph-size 21 --max-seq-len 65535 --max-seqs 1000 --offset-result 0 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --no-preload 1 --pca 1 --pcb 1.5 --threads 48 -v 3 . MMseqs Version: 	GITDIR-NOTFOUND; Sub Matrix 	blosum62.out; Sensitivity 	5.7; K-mer size 	0; K-score 	2147483647; Alphabet size 	21; Max. sequence length 	65535; Max. results per query 	1000; Offset result 	0; Split DB 	0; Split mode 	2; Split Memory Limit 	0; Coverage threshold 	0; Coverage Mode 	0; Compositional bias 	1; Diagonal Scoring 	1; Exact k-mer matching 	0; Mask Residues 	1; Minimum Diagonal score 	15; Include identical Seq. Id.	false; Spaced Kmer 	1; No preload 	true; Pseudo count a 	1; Pseudo count b 	1.5; Spaced k-mer pattern 	; Threads 	48; Verbosity 	3. Initialising data structures...; Using 48 threads.; Could not find precomputed index. Compute index.; Substitution matrices...; Use kmer size 7 and split 3 using Target split mode.; Needed memory (213441943732 byte) of total memory (243154,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/160#issuecomment-461782109:88792,mask,mask,88792,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/160#issuecomment-461782109,1,['mask'],['mask']
Availability," 531ms; Time for merging to aln_0: 0h 0m 0s 899ms. 1405837 alignments calculated.; 219658 sequence pairs passed the thresholds (0.156247 of overall calculated).; 0.086187 hits per query sequence.; Time for processing: 0h 0m 5s 264ms; createsubdb tmp/9700814981231218113/search_tmp/10627605686170015473/search/order_0 tmp/9700814981231218113/search_tmp/10627605686170015473/q_orfs_aa tmp/9700814981231218113/search_tmp/10627605686170015473/search/input_0 -v 3 --subdb-mode 1 . Time for merging to input_0: 0h 0m 0s 273ms; Time for processing: 0h 0m 0s 816ms; prefilter tmp/9700814981231218113/search_tmp/10627605686170015473/search/input_0 /d/Databases/Kegg/sram/mmseqs/kegg tmp/9700814981231218113/search_tmp/10627605686170015473/search/pref_1 --sub-mat nucl:nucleotide.out,aa:blosum62.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -k 0 --k-score 2147483647 --alph-size 21 --max-seq-len 65535 --max-seqs 1 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 40 --compressed 0 -v 3 -s 3.5 . Query database size: 2328975 type: Aminoacid; Estimated memory consumption: 68G; Target database size: 13003941 type: Aminoacid; Index table k-mer threshold: 146 at k-mer size 7 ; Index table: counting k-mers; [=================================================================] 13.00M 1m 31s 355ms; Index table: Masked residues: 71357266; Index table: fill; [=================================================================] 13.00M 1m 21s 643ms; Index statistics; Entries: 5077775275; DB size: 38820 MB; Avg k-mer size: 3.967012; Top 10 k-mers; SGQQRIA	74997; GPGGKLL	59639; GQQVARA	45640; GGQRVAR	38490; GKTLRAG	27665; LLGPGKT	25908; ALGSGKS	22863; GGRRVAR	21815; GRFVVEV	21110; AIGSGKS	20435; Time for index table init: 0h 3m 16s 755ms; Process prefiltering step 1 of 1. k-mer similarity ",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/231#issuecomment-535253491:7495,mask,mask,7495,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/231#issuecomment-535253491,2,['mask'],"['mask', 'mask-lower-case']"
Availability, 8 . MMseqs Version: c5615b34c686b1cf0f200670be8bc6cba76d90f9; Sub Matrix blosum62.out; K-mer size 0; Alphabet size 21; Max. sequence length 32000; Split DB 8; Spaced Kmer 1; Threads 8; Verbosity 3. Substitution matrices...; Use kmer size 7 and split 8 using split mode; Index table: counting k-mers...; .WARNING: Sequence (dbKey=10870) contains only ATGC. It might be a nucleotide sequence.; .................................................................................................. 1 Mio. sequences processed; ................................................................................................... 2 Mio. sequences processed; ................................................................................................... 3 Mio. sequences processed; ................................................................................................... 4 Mio. sequences processed; ..................................................................; Index table: Masked residues: 22642771; Index table: fill...; ................................................................................................... 1 Mio. sequences processed; ................................................................................................... 2 Mio. sequences processed; ................................................................................................... 3 Mio. sequences processed; ................................................................................................... 4 Mio. sequences processed; ..................................................................; Index table: removing duplicate entries...; Index table init done. Write 10; Write 20; Write 60; Write 70; Write 80; Write 30; Write 40; Index table: counting k-mers...; ................................................................................................... 1 Mio. sequences processed; ....WARNING: Sequence (dbKey=5712154) contains only ATGC. It might be a nucleotide seque,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/3#issuecomment-251876135:2672,Mask,Masked,2672,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/3#issuecomment-251876135,1,['Mask'],['Masked']
Availability," > ""$TMPPATH/order_step$STEP""; mmseqs createsubdb ""$TMPPATH/order_step$STEP"" $INPUT ""$TMPPATH/input_step2"". # now we cluster down to 30% sequence id to produce a 30% and 50% clustering; STEP=2; INPUT=$TMPPATH/input_step2; $RUNNER mmseqs prefilter $INPUT $INPUT ""$TMPPATH/pref_step$STEP"" ${PREFILTER2_PAR}; $RUNNER mmseqs align $INPUT $INPUT ""$TMPPATH/pref_step$STEP"" ""$TMPPATH/aln_step$STEP"" ${ALIGNMENT2_PAR}. # cluster down to 50%; mmseqs filterdb ""$TMPPATH/aln_step$STEP"" ""$TMPPATH/aln_uniclust50"" \; --filter-column 3 --filter-regex '(0\.[5-9][0-9]{2}|1\.000)'; mmseqs cluster $INPUT ""$TMPPATH/aln_uniclust50"" ""$TMPPATH/clu_uniclust50"" ${CLUSTER2_PAR}; mmseqs mergeclusters ""${SEQUENCE_DB}"" $OUTDIR/uniclust50_$RELEASE \; ""$TMPPATH/clu_frag"" ""$TMPPATH/clu_redundancy"" $TMPPATH/clu_step0 $TMPPATH/clu_step1 $TMPPATH/clu_uniclust50. STEP=2; INPUT=$TMPPATH/input_step2; # cluster down to 30%; mmseqs cluster $INPUT ""$TMPPATH/aln_step$STEP"" ""$TMPPATH/clu_uniclust30"" ${CLUSTER2_PAR}; mmseqs mergeclusters ""${SEQUENCE_DB}"" $OUTDIR/uniclust30_$RELEASE \; ""$TMPPATH/clu_frag"" ""$TMPPATH/clu_redundancy"" $TMPPATH/clu_step0 $TMPPATH/clu_step1 $TMPPATH/clu_uniclust30; ```. However, I experience another error in step 2 `cluster`. ; ```; linclust /home/outdir/2023_06/tmp/input_step2 /home/outdir/2023_06/tmp/clu_uniclust30/13156544047496927710/clu_redundancy /home/outdir/2023_06/tmp/clu_uniclust30/13156544047496927710/linclust --cluster-mode 0 --max-iter; ations 1000 --similarity-type 2 --threads 6 --compressed 0 -v 3 --sub-mat 'aa:blosum62.out,nucl:nucle; otide.out' -a 0 --alignment-mode 3 --alignment-output-mode 0 --wrapped-scoring 0 -e 0.001 --min-seq-i; d 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-len 65535 --comp-bias-c; orr 1 --comp-bias-corr-scale 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0; --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --sco; re-bias 0 --realign 0 --realign-sc",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/700#issuecomment-1589819536:5056,down,down,5056,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/700#issuecomment-1589819536,1,['down'],['down']
Availability," > MMseqs Version: 	8c0c7fb86ce154b236d6fe294811de3b09850fba; > Sub Matrix 	blosum62.out; > Alphabet size 	13; > Seq. Id Threshold 	0.8; > Kmer per sequence 	20; > Mask Residues 	0; > Coverage Mode 	0; > K-mer size 	10; > Coverage threshold 	0.8; > Max. sequence length 	32000; > Shift hash 	5; > Split Memory Limit 	0; > Include only extendable	false; > Threads 	20; > Verbosity 	3; > ; > Database type: Aminoacid; > V -> I; > M -> L; > Q -> E; > T -> S; > R -> K; > Y -> F; > S -> A; > N -> D; > Reduced amino acid alphabet:; > A C D E F G H I K L P W X ; > ; > Needed memory (4160 byte) of total memory (243728993894 byte); > Process file into 1 parts; > Generate k-mers list 0; > ; > Time for fill: 0 h 0 m 0s; > Done.; > Sort kmer ... Done.; > Time for sort: 0 h 0 m 0s; > Sort by rep. sequence ... Done; > Time for sort: 0 h 0 m 0s; > Time for fill: 0 h 0 m 0s; > Time for merging files: 0 h 0 m 0 s; > Time for processing: 0 h 0 m 0s; > Rescore diagonals. However, I get the following error when there are some identical sequences:. > MMseqs Version: 	8c0c7fb86ce154b236d6fe294811de3b09850fba; > Sub Matrix 	blosum62.out; > Alphabet size 	13; > Seq. Id Threshold 	0.8; > Kmer per sequence 	20; > Mask Residues 	0; > Coverage Mode 	0; > K-mer size 	10; > Coverage threshold 	0.8; > Max. sequence length 	32000; > Shift hash 	5; > Split Memory Limit 	0; > Include only extendable	false; > Threads 	20; > Verbosity 	3; > ; > Database type: Aminoacid; > V -> I; > M -> L; > Q -> E; > T -> S; > R -> K; > Y -> F; > S -> A; > N -> D; > Reduced amino acid alphabet:; > A C D E F G H I K L P W X ; > ; > Needed memory (3200 byte) of total memory (243728993894 byte); > Process file into 1 parts; > Generate k-mers list 0; > ; > Time for fill: 0 h 0 m 0s; > Done.; > Sort kmer ... Done.; > Time for sort: 0 h 0 m 0s; > Sort by rep. sequence ... Done; > Time for sort: 0 h 0 m 0s; > ~/tmp/2230240821590219627/linclust/10911929691229894817/linclust.sh: line 18: 28296 Segmentation fault (core dumped) $MMS",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/4#issuecomment-384867282:1066,error,error,1066,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/4#issuecomment-384867282,1,['error'],['error']
Availability, CN:5 DL:110MiB ETA:18s]; [#156257 3.8GiB/5.7GiB(66%) CN:5 DL:110MiB ETA:17s]; [#156257 3.9GiB/5.7GiB(68%) CN:5 DL:110MiB ETA:16s]; [#156257 4.0GiB/5.7GiB(70%) CN:5 DL:110MiB ETA:15s]; [#156257 4.1GiB/5.7GiB(72%) CN:5 DL:111MiB ETA:14s]; [#156257 4.2GiB/5.7GiB(74%) CN:5 DL:111MiB ETA:13s]; [#156257 4.3GiB/5.7GiB(76%) CN:5 DL:111MiB ETA:12s]; [#156257 4.4GiB/5.7GiB(77%) CN:5 DL:111MiB ETA:11s]; [#156257 4.5GiB/5.7GiB(79%) CN:5 DL:111MiB ETA:10s]; [#156257 4.6GiB/5.7GiB(81%) CN:5 DL:111MiB ETA:9s]; [#156257 4.7GiB/5.7GiB(83%) CN:5 DL:111MiB ETA:8s]; [#156257 4.8GiB/5.7GiB(85%) CN:5 DL:111MiB ETA:7s]; [#156257 4.9GiB/5.7GiB(87%) CN:5 DL:111MiB ETA:6s]; [#156257 5.0GiB/5.7GiB(89%) CN:5 DL:111MiB ETA:5s]; [#156257 5.2GiB/5.7GiB(91%) CN:5 DL:111MiB ETA:4s]; [#156257 5.3GiB/5.7GiB(92%) CN:5 DL:111MiB ETA:3s]; [#156257 5.4GiB/5.7GiB(94%) CN:5 DL:111MiB ETA:2s]; [#156257 5.5GiB/5.7GiB(96%) CN:5 DL:111MiB ETA:1s]; [#156257 5.6GiB/5.7GiB(98%) CN:5 DL:111MiB]. 10/13 10:50:57 [NOTICE] Download complete: tmp/3093587253482177683/bacteria.tar. Download Results:; gid |stat|avg speed |path/URI; ======+====+===========+=======================================================; 156257|OK | 110MiB/s|tmp/3093587253482177683/bacteria.tar. Status Legend:; (OK):download completed. 10/13 10:50:57 [NOTICE] Downloading 1 item(s); [#8c18ae 81MiB/85MiB(95%) CN:3 DL:90MiB]. 10/13 10:50:58 [NOTICE] Download complete: tmp/3093587253482177683/archea.tar. Download Results:; gid |stat|avg speed |path/URI; ======+====+===========+=======================================================; 8c18ae|OK | 87MiB/s|tmp/3093587253482177683/archea.tar. Status Legend:; (OK):download completed. 10/13 10:50:58 [NOTICE] Downloading 1 item(s); [#e1fc78 82MiB/2.7GiB(2%) CN:5 DL:89MiB ETA:30s]; [#e1fc78 182MiB/2.7GiB(6%) CN:5 DL:95MiB ETA:27s]; [#e1fc78 283MiB/2.7GiB(10%) CN:5 DL:97MiB ETA:26s]; [#e1fc78 387MiB/2.7GiB(13%) CN:5 DL:99MiB ETA:24s]; [#e1fc78 497MiB/2.7GiB(17%) CN:5 DL:101MiB ETA:22s]; [#e1fc78 606MiB/2.7GiB(21,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/762#issuecomment-1761245149:3289,Down,Download,3289,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/762#issuecomment-1761245149,1,['Down'],['Download']
Availability, CN:5 DL:111MiB ETA:12s]; [#156257 4.4GiB/5.7GiB(77%) CN:5 DL:111MiB ETA:11s]; [#156257 4.5GiB/5.7GiB(79%) CN:5 DL:111MiB ETA:10s]; [#156257 4.6GiB/5.7GiB(81%) CN:5 DL:111MiB ETA:9s]; [#156257 4.7GiB/5.7GiB(83%) CN:5 DL:111MiB ETA:8s]; [#156257 4.8GiB/5.7GiB(85%) CN:5 DL:111MiB ETA:7s]; [#156257 4.9GiB/5.7GiB(87%) CN:5 DL:111MiB ETA:6s]; [#156257 5.0GiB/5.7GiB(89%) CN:5 DL:111MiB ETA:5s]; [#156257 5.2GiB/5.7GiB(91%) CN:5 DL:111MiB ETA:4s]; [#156257 5.3GiB/5.7GiB(92%) CN:5 DL:111MiB ETA:3s]; [#156257 5.4GiB/5.7GiB(94%) CN:5 DL:111MiB ETA:2s]; [#156257 5.5GiB/5.7GiB(96%) CN:5 DL:111MiB ETA:1s]; [#156257 5.6GiB/5.7GiB(98%) CN:5 DL:111MiB]. 10/13 10:50:57 [NOTICE] Download complete: tmp/3093587253482177683/bacteria.tar. Download Results:; gid |stat|avg speed |path/URI; ======+====+===========+=======================================================; 156257|OK | 110MiB/s|tmp/3093587253482177683/bacteria.tar. Status Legend:; (OK):download completed. 10/13 10:50:57 [NOTICE] Downloading 1 item(s); [#8c18ae 81MiB/85MiB(95%) CN:3 DL:90MiB]. 10/13 10:50:58 [NOTICE] Download complete: tmp/3093587253482177683/archea.tar. Download Results:; gid |stat|avg speed |path/URI; ======+====+===========+=======================================================; 8c18ae|OK | 87MiB/s|tmp/3093587253482177683/archea.tar. Status Legend:; (OK):download completed. 10/13 10:50:58 [NOTICE] Downloading 1 item(s); [#e1fc78 82MiB/2.7GiB(2%) CN:5 DL:89MiB ETA:30s]; [#e1fc78 182MiB/2.7GiB(6%) CN:5 DL:95MiB ETA:27s]; [#e1fc78 283MiB/2.7GiB(10%) CN:5 DL:97MiB ETA:26s]; [#e1fc78 387MiB/2.7GiB(13%) CN:5 DL:99MiB ETA:24s]; [#e1fc78 497MiB/2.7GiB(17%) CN:5 DL:101MiB ETA:22s]; [#e1fc78 606MiB/2.7GiB(21%) CN:5 DL:103MiB ETA:21s]; [#e1fc78 709MiB/2.7GiB(25%) CN:5 DL:103MiB ETA:20s]; [#e1fc78 810MiB/2.7GiB(28%) CN:5 DL:103MiB ETA:19s]; [#e1fc78 913MiB/2.7GiB(32%) CN:5 DL:103MiB ETA:18s]; [#e1fc78 0.9GiB/2.7GiB(35%) CN:5 DL:103MiB ETA:17s]; [#e1fc78 1.0GiB/2.7GiB(39%) CN:5 DL:105MiB ETA:16s]; [#e1fc78 1.1GiB/2.7GiB(43,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/762#issuecomment-1761245149:3601,Down,Downloading,3601,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/762#issuecomment-1761245149,1,['Down'],['Downloading']
Availability," CXX=""$(brew --prefix)/bin/gcc-6"" cmake -DCMAKE_BUILD_TYPE=RELEASE -DCMAKE_INSTALL_PREFIX=. ..; -- The CXX compiler identification is GNU 6.2.0; -- Checking whether CXX compiler has -isysroot; -- Checking whether CXX compiler has -isysroot - yes; -- Checking whether CXX compiler supports OSX deployment target flag; -- Checking whether CXX compiler supports OSX deployment target flag - yes; -- Check for working CXX compiler: /usr/local/bin/gcc-6; -- Check for working CXX compiler: /usr/local/bin/gcc-6 -- works; -- Detecting CXX compiler ABI info; -- Detecting CXX compiler ABI info - done; -- Detecting CXX compile features; -- Detecting CXX compile features - done; -- Sourcedir /Users/moorer/Downloads/mmseqs2; -- Projectdir /Users/moorer/Downloads/mmseqs2; -- Compiler is GNU; -- Try OpenMP CXX flag = [-fopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Success; -- Found OpenMP: -fopenmp; -- Performing Test HAVE_POSIX_FADVISE; -- Performing Test HAVE_POSIX_FADVISE - Failed; -- Performing Test HAVE_MM_MALLOC; -- Performing Test HAVE_MM_MALLOC - Success; -- Performing Test HAVE_POSIX_MEMALIGN; -- Performing Test HAVE_POSIX_MEMALIGN - Success; -- Performing Test HAVE_AVX2_EXTENSIONS; -- Performing Test HAVE_AVX2_EXTENSIONS - Failed; -- Performing Test HAVE_AVX_EXTENSIONS; -- Performing Test HAVE_AVX_EXTENSIONS - Failed; -- Performing Test HAVE_SSE4_2_EXTENSIONS; -- Performing Test HAVE_SSE4_2_EXTENSIONS - Success; -- Performing Test HAVE_SSE4_1_EXTENSIONS; -- Performing Test HAVE_SSE4_1_EXTENSIONS - Success; -- Performing Test HAVE_SSE3_EXTENSIONS; -- Performing Test HAVE_SSE3_EXTENSIONS - Success; -- Performing Test HAVE_SSE2_EXTENSIONS; -- Performing Test HAVE_SSE2_EXTENSIONS - Success; -- Performing Test HAVE_SSE_EXTENSIONS; -- Performing Test HAVE_SSE_EXTENSIONS - Success; -- Found SSE4.2 extensions, using flags: -msse4.2 -mfpmath=sse; -- Could NOT find GTest (missing: GTEST_LIBRARY GTEST_INCLUDE_DIR GTEST_MAIN_LIBRARY); -- Co",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/7#issuecomment-265028472:838,Down,Downloads,838,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/7#issuecomment-265028472,2,['Down'],['Downloads']
Availability," Cluster mode 	0; Verbosity 	3; Max depth connected component 	1000; Similarity type 	2; Threads 	10; Sub Matrix 	blosum62.out; Add backtrace 	false; Alignment mode 	3; E-value threshold 	0.001; Seq. Id Threshold 	0.8; Coverage threshold 	0.8; Coverage Mode 	0; Max. sequence length 	32000; Max. results per query 	20; Compositional bias 	0; Realign hit 	false; Max Reject 	2147483647; Max Accept 	2147483647; Include identical Seq. Id. 	false; No preload 	false; Early exit 	false; Pseudo count a 	1; Pseudo count b 	1.5; Alphabet size 	13; Kmer per sequence 	20; Mask Residues 	0; K-mer size 	0; Shift hash 	5; Split Memory Limit 	0; Rescore mode 	0; Remove hits by seq.id. and coverage 	false; In substitution scoring mode, performs global alignment along the diagonal	false; Remove Temporary Files 	false; Sets the MPI runner 	. Program call:; panproteome.db tmp/425628692068579862/linclust/13628666274102407548/pref --sub-mat blosum62.out --alph-size 13 --min-seq-id 0.8 --kmer-per-seq 20 --mask 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 32000 --hash-shift 5 --split-memory-limit 0 --threads 10 -v 3 . MMseqs Version: 	GITDIR-NOTFOUND; Sub Matrix 	blosum62.out; Alphabet size 	13; Seq. Id Threshold 	0.8; Kmer per sequence 	20; Mask Residues 	0; Coverage Mode 	0; K-mer size 	0; Coverage threshold 	0.8; Max. sequence length	32000; Shift hash 	5; Split Memory Limit 	0; Threads 	10; Verbosity 	3. Alphabet size: 13 k-mer size: 10; V -> I; M -> L; Q -> E; T -> S; R -> K; Y -> F; S -> A; N -> D; Reduced amino acid alphabet:; A C D E F G H I K L P W X ; Checking requirements; Needed memory (795683200 byte) of total memory (365681560780 byte); Process file into 1 parts; Generate k-mers list 0; ...................................................................................................	1 Mio. sequences processed; ...................................................................................................	2 Mio. sequences processed; .............................................",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/88#issuecomment-391976251:95182,mask,mask,95182,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/88#issuecomment-391976251,1,['mask'],['mask']
Availability," MPI runner; Remove Temporary Files 	false; LCA Ranks 	phylum:superphylum:subkingdom:kingdom:superkingdom; Blacklisted Taxa 	12908,28384; LCA Mode 	2; Remove Temporary Files 	false; Sets the MPI runner. Program call:; search /tmp/global2/nyoungblut/LLMGAG_27929269397/linclust/genes_db /ebio/abt3_projects/databases_no-backup/uniclust/uniclust90_2018_08_db /tmp/global2/nyoungblut/LLMGAG_27929269397/taxonomy/tmp//15538800487586745695/first /tmp/global2/nyoungblut/LLMGAG_27929269397/taxonomy/tmp//15538800487586745695/tmp_hsp1 --sub-mat blosum62.out -a 0 --alignment-mode 2 -e 1e-05 --min-seq-id 0 --seq-id-mode 0 --alt-ali 0 -c 0 --cov-mode 0 --max-seq-len 65535 --max-seqs 300 --comp-bias-corr 1 --realign 0 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --gap-open 11 --gap-extend 1 --threads 24 -v 3 -s 6 -k 0 --k-score 2147483647 --alph-size 21 --offset-result 0 --split 0 --split-mode 2 --split-memory-limit 0 --diag-score 1 --exact-kmer-matching 0 --mask 1 --min-ungapped-score 15 --spaced-kmer-mode 1 --rescore-mode 0 --filter-hits 0 --sort-results 0 --global-alignment 0 --mask-profile 1 --e-profile 0.001 --wg 0 --filter-msa 1 --max-seq-id 0.9 --qid 0 --qsc -20 --cov 0 --diff 1000 --omit-consensus 0 --min-length 30 --max-length 32734 --max-gaps 2147483647 --contig-start-mode 2 --contig-end-mode 2 --orf-start-mode 0 --forward-frames 1,2,3 --reverse-frames 1,2,3 --translation-table 1 --use-all-table-starts 0 --id-offset 0 --add-orf-stop 0 --num-iterations 1 --start-sens 1 --sens-steps 3 --slice-search 0 --strand 1 --disk-space-limit 0 --remove-tmp-files 0. MMseqs Version: 	7.4e23d; Sub Matrix 	blosum62.out; Add backtrace 	false; Alignment mode 	2; E-value threshold 	1e-05; Seq. Id Threshold 	0; Seq. Id. Mode 	0; Alternative alignments 	0; Coverage threshold 	0; Coverage Mode 	0; Max. sequence length 	65535; Max. results per query 	300; Compositional bias 	1; Realign hit 	false; Max Reject 	2147483647; M",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/147#issuecomment-452242032:3217,mask,mask,3217,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/147#issuecomment-452242032,2,['mask'],"['mask', 'mask-profile']"
Availability," Q R S T V W Y X""); #print("""",*alph,sep="" ""); for idx,l in enumerate(alph):; scores=[random.uniform(-1.0-disperse,-1.0+disperse) for _ in alph]; if l!=""X"":; scores[idx]=random.uniform(7.0-disperse,7.0+disperse); else:; scores[idx]=random.uniform(-1.0-disperse,-1.0+disperse); print(l,*(""{0:.4f}"".format(s) for s in scores),sep="" ""); ```. Then `identity.out` is produced by `python3 print_identity.py | ../MMseqs2/util/format_substitution_matrix.R > identity.out`. MMseqs call is; 1. `mmseqs createdb data.fasta mydb/mmdb --dbtype 1`; 2. `mmseqs createindex mydb/mmdb mydb/tmp -k 5 --seed-sub-mat identity.out --split-memory-limit 9G -s 1.0 --comp-bias-corr 0 --mask 0`. And here's the output of the 2nd command:. ```; Create dir eu-all-2020-02-06/mmseqs-EN-partial-2020-03-26-16-37-04/tmp; createindex eu-all-2020-02-06/mmseqs-EN-partial-2020-03-26-16-37-04/mmdb eu-all-2020-02-06/mmseqs-EN-partial-2020-03-26-16-37-04/tmp -k 5 --seed-sub-mat identity.out --split-memory-limit 9G -s 1.0 --comp-bias-corr 0 --mask 0 . MMseqs Version: 	12c499dcd647fb0d1c799bc5c6f9f25328ca3e09; Seed substitution matrix 	nucl:identity.out,aa:identity.out; k-mer length 	5; Alphabet size 	nucl:5,aa:21; Compositional bias 	0; Max sequence length 	65535; Max results per query 	300; Mask residues 	0; Mask lower case residues 	0; Spaced k-mers 	1; Spaced k-mer pattern 	; Sensitivity 	1; k-score 	0; Check compatible 	0; Search type 	0; Split database 	0; Split memory limit 	9G; Verbosity 	3; Threads 	8; Min codons in orf 	30; Max codons in length 	32734; Max orf gaps 	2147483647; Contig start mode 	2; Contig end mode 	2; Orf start mode 	1; Forward frames 	1,2,3; Reverse frames 	1,2,3; Translation table 	1; Translate orf 	0; Use all table starts 	false; Offset of numeric ids 	0; Create lookup 	0; Compressed 	0; Add orf stop 	false; Overlap between sequences	0; Sequence split mode 	1; Strand selection 	1; Remove temporary files 	false. createindex eu-all-2020-02-06/mmseqs-EN-partial-2020-03-26-16-37-04/mmdb eu-a",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/293#issuecomment-604476526:1545,mask,mask,1545,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/293#issuecomment-604476526,1,['mask'],['mask']
Availability," Taxon blacklist 	12908:unclassified sequences,28384:other sequences; Substitution matrix 	nucl:nucleotide.out,aa:blosum62.out; Add backtrace 	false; Alignment mode 	0; Alignment mode 	0; Allow wrapped scoring 	false; E-value threshold 	0.001; Seq. id. threshold 	0; Min alignment length 	0; Seq. id. mode 	0; Alternative alignments 	0; Coverage threshold 	0; Coverage mode 	0; Max sequence length 	65535; Compositional bias 	1; Max reject 	2147483647; Max accept 	2147483647; Include identical seq. id. 	false; Preload mode 	0; Pseudo count a 	1; Pseudo count b 	1.5; Score bias 	0; Realign hits 	false; Realign score bias 	-0.2; Realign max seqs 	2147483647; Gap open cost 	nucl:5,aa:11; Gap extension cost 	nucl:2,aa:1; Zdrop 	40; Seed substitution matrix 	nucl:nucleotide.out,aa:VTML80.out; Sensitivity 	0.5; k-mer length 	0; k-score 	2147483647; Alphabet size 	nucl:5,aa:21; Max results per query 	300; Split database 	0; Split mode 	0; Split memory limit 	0; Diagonal scoring 	true; Exact k-mer matching 	0; Mask residues 	1; Mask lower case residues 	0; Minimum diagonal score 	15; Spaced k-mers 	1; Spaced k-mer pattern 	; Local temporary path 	; Rescore mode 	0; Remove hits by seq. id. and coverage 	false; Sort results 	0; Mask profile 	1; Profile E-value threshold 	0.001; Global sequence weighting 	false; Allow deletions 	false; Filter MSA 	1; Maximum seq. id. threshold 	0.9; Minimum seq. id. 	0; Minimum score per column 	-20; Minimum coverage 	0; Select N most diverse seqs 	1000; Min codons in orf 	30; Max codons in length 	32734; Max orf gaps 	2147483647; Contig start mode 	2; Contig end mode 	2; Orf start mode 	1; Forward frames 	1,2,3; Reverse frames 	1,2,3; Translation table 	1; Translate orf 	0; Use all table starts 	false; Offset of numeric ids 	0; Create lookup 	0; Add orf stop 	false; Overlap between sequences 	0; Sequence split mode 	1; Header split mode 	0; Chain overlapping alignments 	0; Merge query 	1; Search type 	0; Search iterations 	1; Start sensitivity 	4;",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/422#issuecomment-795325591:1394,Mask,Mask,1394,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/422#issuecomment-795325591,2,['Mask'],['Mask']
Availability," [=================================================================] 100.00% 276 0s 54ms; Write merged clustering; [=================================================================] 100.00% 303 0s 67ms; Time for merging to clu_redundancy: 0h 0m 0s 5ms; Time for processing: 0h 0m 0s 121ms; createsubdb tmp//538598962955004214/clu_redundancy ../DB_in/fasta_in_db_HC tmp//538598962955004214/input_step_redundancy -v 3 --subdb-mode 1. Time for merging to input_step_redundancy: 0h 0m 0s 0ms; Time for processing: 0h 0m 0s 0ms; prefilter tmp//538598962955004214/input_step_redundancy tmp//538598962955004214/input_step_redundancy tmp//538598962955004214/pref_step0 --sub-mat nucl:nucleotide.out,aa:blosum62.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -s 1 -k 0 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 65535 --max-seqs 20 --split 0 --split-mode 2 --split-memory-limit 0 -c 0.8 --cov-mode 0 --comp-bias-corr 0 --diag-score 0 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 0 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 16 --compressed 0 -v 3. Query database size: 276 type: Aminoacid; Estimated memory consumption: 978M; Target database size: 276 type: Aminoacid; Index table k-mer threshold: 154 at k-mer size 6; Index table: counting k-mers; [=================================================================] 100.00% 276 0s 26ms; Index table: Masked residues: 0; Index table: fill; [=================================================================] 100.00% 276 0s 6ms; Index statistics; Entries: 1187; DB size: 488 MB; Avg k-mer size: 0.000019; Top 10 k-mers; XXXXXX 7; XXXXXX 4; XXXXXX 4; XXXXXX 4; XXXXXX 4; XXXXXX 3; XXXXXX 3; XXXXXX 3; XXXXXX 3; XXXXXX 3; Time for index table init: 0h 0m 1s 58ms; Process prefiltering step 1 of 1. k-mer similarity threshold: 154; Starting prefiltering scores calculation (step 1 of 1); Query db start 1 to 276; Target db start 1 to 276; [==========================",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-773234853:11394,mask,mask,11394,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-773234853,2,['mask'],"['mask', 'mask-lower-case']"
Availability," a 64GB RAM node typical of our cluster. My first attempt consisted (retrospectively naively) in using the UniRef90 indexes created (without any --split option) on the 132GB server, which caused a crash after a useful warning `MMseqs processes needs more main memory than available.Increase the size of --split` as seen below in the first output. I therefore attempted to index the database on the 64GB RAM node directly with no explicit --split option, or by specifying`--split 6` (an explicit split is useful to index the database taking into account the fact that some of the cluster nodes have less than the 64GB RAM of the machine I'm indexing on). But this indexing fails with the second output provided below? In fact the indexing fails also without the --split option (see third output below). All tests have been carried out using a compiled mmseqs cloned from a fresh git clone. The work directory has 76TB of free space. I'm really at a loss as to what the `Could not write to data file /` error message might indicate?; - Searching with the oversized index:. ```; -bash-4.2$ mmseqs search subseq_Mms.1 uniref90.mms toto.mms tmp/ --max-seqs 100000 --threads 8 -a true -e 1E-10 -s 1 ; Program call:; subseq_Mms.1 uniref90.mms toto.mms tmp/ --max-seqs 100000 --threads 8 -a true -e 1E-10 -s 1 . MMseqs Version: c5615b34c686b1cf0f200670be8bc6cba76d90f9; Sub Matrix blosum62.out; Add backtrace true; Alignment mode 0; E-value threshold 1e-10; Seq. Id Threshold 0; Coverage threshold 0; Max. sequence length 32000; Max. results per query 100000; Compositional bias 1; Profile false; Realign hit false; Max Reject 2147483647; Detect fragments false; Include identical Seq. Id. false; Threads 8; Verbosity 3; Sensitivity 1; K-mer size 0; K-score 2147483647; Alphabet size 21; Offset result 0; Split DB 0; Split mode 2; Diagonal Scoring 1; Minimum Diagonal score 15; Spaced Kmer 1; Profile e-value threshold 0.001; Use global sequence weighting false; Maximum sequence identity threshold 0.9; Minim",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/3#issuecomment-251733349:1133,error,error,1133,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/3#issuecomment-251733349,1,['error'],['error']
Availability," blosum70.out to /Users/moorer/Downloads/mmseqs2/src/generatedfiles/blosum70.out.h; -- Compile blosum75.out to /Users/moorer/Downloads/mmseqs2/src/generatedfiles/blosum75.out.h; -- Compile blosum80.out to /Users/moorer/Downloads/mmseqs2/src/generatedfiles/blosum80.out.h; -- Compile blosum85.out to /Users/moorer/Downloads/mmseqs2/src/generatedfiles/blosum85.out.h; -- Compile blosum90.out to /Users/moorer/Downloads/mmseqs2/src/generatedfiles/blosum90.out.h; -- Compile blosum95.out to /Users/moorer/Downloads/mmseqs2/src/generatedfiles/blosum95.out.h; -- Compile cascaded_clustering.sh to /Users/moorer/Downloads/mmseqs2/src/generatedfiles/cascaded_clustering.sh.h; -- Compile clustering.sh to /Users/moorer/Downloads/mmseqs2/src/generatedfiles/clustering.sh.h; -- Compile update_clustering.sh to /Users/moorer/Downloads/mmseqs2/src/generatedfiles/update_clustering.sh.h; -- Configuring done; -- Generating done; -- Build files have been written to: /Users/moorer/Downloads/mmseqs2/build; Zebulon | build -> make; Scanning dependencies of target prefiltering; [ 0%] Building CXX object src/prefiltering/CMakeFiles/prefiltering.dir/ExtendedSubstitutionMatrix.cpp.o; [ 1%] Building CXX object src/prefiltering/CMakeFiles/prefiltering.dir/Indexer.cpp.o; [ 2%] Building CXX object src/prefiltering/CMakeFiles/prefiltering.dir/KmerGenerator.cpp.o; [ 3%] Building CXX object src/prefiltering/CMakeFiles/prefiltering.dir/Main.cpp.o; /Users/moorer/Downloads/mmseqs2/src/prefiltering/Main.cpp: In function 'int prefilter(int, const char**, const Command&)':; /Users/moorer/Downloads/mmseqs2/src/prefiltering/Main.cpp:72:12: warning: unused variable 'splitMode' [-Wunused-variable]; size_t splitMode = pref->getSplitMode();; ^~~~~~~~~; [ 4%] Building CXX object src/prefiltering/CMakeFiles/prefiltering.dir/Prefiltering.cpp.o; /var/folders/hr/x60c91mj5l1c8gy_6lyhl5l80000gn/T//ccAwPztQ.s:4152:suffix or operands invalid for `movq'; /var/folders/hr/x60c91mj5l1c8gy_6lyhl5l80000gn/T//ccAwPztQ.s:6032:suffix or ",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/7#issuecomment-265028472:4319,Down,Downloads,4319,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/7#issuecomment-265028472,1,['Down'],['Downloads']
Availability," different one, but I'm getting a similar error when using a different taxonomy database:. ```; Loading NCBI taxonomy...; Computing LCA...; Segmentation fault; Error: Lca died; ```. The database creation was (using version 8.fac81):. ```; ## downloading uniclust db; wget http://gwdu111.gwdg.de/~compbiol/uniclust/2018_08/uniclust50_2018_08.tar.gz; uncomp uniclust50_2018_08.tar.gz; mv uniclust50_2018_08/uniclust50_2018_08_consensus.fasta . ## creating seq db; mmseqs createdb --dbtype 1 uniclust50_2018_08_consensus.fasta uniclust50_2018_08_consensus. ## creating tax db; mmseqs createtaxdb uniclust50_2018_08_consensus tmp; ```. The taxonomy classify command (using version 8.fac81):. ```; mmseqs taxonomy -e 1e-5 --max-seqs 200 --lca-ranks ""kingdom:phylum:class:order:family:genus:species"" --threads 24 clusters_rep-seqs_db_14_30 /ebio/abt3_projects/databases_no-backup/uniclust/uniclust50/mmseqs2_8.fac81/uniclust50_2018_08_consensus clusters_rep-seqs.part-14_tax_db tmp_part-14; ```. The run log w/ error:. ```; Program call:; taxonomy -e 1e-5 --max-seqs 200 --lca-ranks kingdom:phylum:class:order:family:genus:species --threads 24 clusters_rep-seqs_db_14_30 /ebio/abt3_projects/databases_no-backup/uniclust/uniclust50/mmseqs2_8.fac81/uniclust50_2018_08_consensus clusters_rep-seqs.part-14_tax_db tmp_part-14. MMseqs Version: 	8.fac81; Substitution Matrix 	blosum62.out; Add backtrace 	false; Alignment mode 	2; E-value threshold 	1e-05; Seq. Id Threshold 	0; Min. alignment length 	0; Seq. Id. Mode 	0; Alternative alignments 	0; Coverage threshold 	0; Coverage Mode 	0; Max. sequence length 	65535; Compositional bias 	1; Realign hit 	false; Max Reject 	2147483647; Max Accept 	2147483647; Include identical Seq. Id. 	false; Preload mode 	0; Pseudo count a 	1; Pseudo count b 	1.5; Score bias 	0; Gap open cost 	11; Gap extension cost 	1; Threads 	24; Compressed 	0; Verbosity 	3; Seed Substitution Matrix 	VTML80.out; Sensitivity 	5.7; K-mer size 	0; K-score 	2147483647; Alphabet size 	21; M",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/221#issuecomment-516032943:1050,error,error,1050,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/221#issuecomment-516032943,1,['error'],['error']
Availability," in: 0h 0m 0s 60ms; connected component mode; Total time: 0h 0m 0s 84ms. Size of the sequence database: 237; Size of the alignment database: 237; Number of clusters: 218. Writing results 0h 0m 0s 2ms; Time for merging to clu_step1: 0h 0m 0s 0ms; Time for processing: 0h 0m 0s 89ms; createsubdb tmpfiles//13298481167543164943/clu_step1 tmpfiles//13298481167543164943/input_step1 tmpfiles//13298481167543164943/input_step2 -v 3 --subdb-mode 1. Time for merging to input_step2: 0h 0m 0s 0ms; Time for processing: 0h 0m 0s 0ms; prefilter tmpfiles//13298481167543164943/input_step2 tmpfiles//13298481167543164943/input_step2 tmpfiles//13298481167543164943/pref_step2 --sub-mat nucl:nucleotide.out,aa:blosum62.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -s 6 -k 0 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 65535 --max-seqs 20 --split 0 --split-mode 2 --split-memory-limit 0 -c 0.8 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 16 --compressed 0 -v 3. Query database size: 218 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 218 type: Aminoacid; Index table k-mer threshold: 109 at k-mer size 6; Index table: counting k-mers; [=================================================================] 218 0s 31ms; Index table: Masked residues: 0; Index table: fill; [=================================================================] 218 0s 4ms; Index statistics; Entries: 1318; DB size: 488 MB; Avg k-mer size: 0.000021; Top 10 k-mers; XXXXXX 3; XXXXXX 3; XXXXXX 2; XXXXXX 2; XXXXXX 2; XXXXXX 2; XXXXXX 2; XXXXXX 2; XXXXXX 2; XXXXXX 2; Time for index table init: 0h 0m 0s 994ms; Process prefiltering step 1 of 1. k-mer similarity threshold: 109; Starting prefiltering scores calculation (step 1 of 1); Query db start 1 to 218; Target db start 1 to 218; [=========================================",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-771572412:19620,mask,mask,19620,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-771572412,2,['mask'],"['mask', 'mask-lower-case']"
Availability," input_step1: 0h 0m 0s 0ms; Time for processing: 0h 0m 0s 1ms; prefilter tmp//538598962955004214/input_step1 tmp//538598962955004214/input_step1 tmp//538598962955004214/pref_step1 --sub-mat nucl:nucleotide.out,aa:blosum62.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -s 3.5 -k 0 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 65535 --max-seqs 20 --split 0 --split-mode 2 --split-memory-limit 0 -c 0.8 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 16 --compressed 0 -v 3. Query database size: 239 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 239 type: Aminoacid; Index table k-mer threshold: 131 at k-mer size 6; Index table: counting k-mers; [=================================================================] 100.00% 239 0s 13ms; Index table: Masked residues: 0; Index table: fill; [=================================================================] 100.00% 239 0s 2ms; Index statistics; Entries: 1414; DB size: 488 MB; Avg k-mer size: 0.000022; Top 10 k-mers; XXXXXX 3; XXXXXX 3; XXXXXX 2; XXXXXX 2; XXXXXX 2; XXXXXX 2; XXXXXX 2; XXXXXX 2; XXXXXX 2; XXXXXX 2; Time for index table init: 0h 0m 1s 51ms; Process prefiltering step 1 of 1. k-mer similarity threshold: 131; Starting prefiltering scores calculation (step 1 of 1); Query db start 1 to 239; Target db start 1 to 239; [=================================================================] 100.00% 239 0s 23ms; [============================================================> ] 92.44% 221 eta 0s; 20.598031 k-mers per position; 6 DB matches per sequence; 0 overflows; 0 queries produce too many hits (truncated result); 1 sequences passed prefiltering per query sequence; 1 median result list length; 0 sequences with 0 size result lists; Time for merging to pref_step1: 0h 0m 0s 2ms; Time for processing: 0h 0m 1s 760ms; align tmp",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-773234853:15960,Mask,Masked,15960,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-773234853,1,['Mask'],['Masked']
Availability, k-mer similarity threshold: 90; k-mer match probability: 0. Starting prefiltering scores calculation (step 1 of 1); Query db start 1 to 1364570; Target db start 1 to 17772; ................................................................................................... 1 Mio. sequences processed; ....................................; 0 k-mers per position.; 49304 DB matches per sequence.; 1 Overflows.; 286 sequences passed prefiltering per query sequence.; Median result list size: 300; 11 sequences with 0 size result lists. Time for prefiltering scores calculation: 0h 3m 59s 38ms; Time for merging files: 0h 0m 1s 745ms; Time for processing: 0h 8m 22s 701ms; Program call:; swapresults pbps.neighbors.DB pfam_profile.idx tmp/6822607060114486044/pref tmp/6822607060114486044/pref_swapped --sub-mat blosum62.out -e 0.001 --split-memory-limit 0 --gap-open 11 --gap-extend 1 --threads 10 --compressed 0 --db-load-mode 0 -v 3 ; Index version: 15; Generated by: 8-fac81; MaxSeqLength: 65535; KmerSize: 6; CompBiasCorr: 1; AlphabetSize: 21; Masked: 0; Spaced: 1; KmerScore: 90; SequenceType: Profile; SourcSeqType: Profile; Headers1: 1; Headers2: 0; ScoreMatrix: VTML80.out; Result database: tmp/6822607060114486044/pref; Computing offsets.; ................................................................................................... 1 Mio. sequences processed; ....................................; Reading results.; ................................................................................................... 1 Mio. sequences processed; ....................................; Output database: tmp/6822607060114486044/pref_swapped; .; Time for merging files: 0h 0m 0s 23ms; Time for processing: 0h 0m 46s 63ms; Program call:; align pfam_profile.idx pbps.neighbors.DB tmp/6822607060114486044/pref_swapped tmp/6822607060114486044/aln_swapped --sub-mat blosum62.out -a 0 --alignment-mode 2 -e 0.001 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0 --cov-mode 0 --max-se,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/189#issuecomment-483627132:4384,Mask,Masked,4384,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/189#issuecomment-483627132,1,['Mask'],['Masked']
Availability," length 	0; Seq. id. mode 	0; Alternative alignments 	0; Coverage threshold 	0; Coverage mode 	0; Max sequence length 	65535; Compositional bias 	1; Max reject 	2147483647; Max accept 	2147483647; Include identical seq. id. 	false; Preload mode 	0; Pseudo count a 	1; Pseudo count b 	1.5; Score bias 	0; Realign hits 	false; Realign score bias 	-0.2; Realign max seqs 	2147483647; Gap open cost 	nucl:5,aa:11; Gap extension cost 	nucl:2,aa:1; Zdrop 	40; Threads 	256; Compressed 	0; Verbosity 	3; Seed substitution matrix 	nucl:nucleotide.out,aa:VTML80.out; Sensitivity 	5.7; k-mer length 	0; k-score 	2147483647; Alphabet size 	nucl:5,aa:21; Max results per query 	300; Split database 	0; Split mode 	2; Split memory limit 	0; Diagonal scoring 	true; Exact k-mer matching 	0; Mask residues 	1; Mask lower case residues 	0; Minimum diagonal score 	15; Spaced k-mers 	1; Spaced k-mer pattern 	; Local temporary path 	; Rescore mode 	0; Remove hits by seq. id. and coverage	false; Sort results 	0; Mask profile 	1; Profile E-value threshold 	0.001; Global sequence weighting 	false; Allow deletions 	false; Filter MSA 	1; Maximum seq. id. threshold 	0.9; Minimum seq. id. 	0; Minimum score per column 	-20; Minimum coverage 	0; Select N most diverse seqs 	1000; Min codons in orf 	30; Max codons in length 	32734; Max orf gaps 	2147483647; Contig start mode 	2; Contig end mode 	2; Orf start mode 	1; Forward frames 	1,2,3; Reverse frames 	1,2,3; Translation table 	1; Translate orf 	0; Use all table starts 	false; Offset of numeric ids 	0; Create lookup 	0; Add orf stop 	false; Overlap between sequences 	0; Sequence split mode 	1; Header split mode 	0; Chain overlapping alignments 	0; Merge query 	1; Search type 	3; Search iterations 	1; Start sensitivity 	4; Search steps 	1; Slice search mode 	true; Strand selection 	1; LCA search mode 	false; Disk space limit 	0; MPI runner 	; Force restart with latest tmp 	false; Remove temporary files 	true; Alignment format 	0; Format alignment output 	",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/394#issuecomment-782439476:2680,Mask,Mask,2680,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/394#issuecomment-782439476,1,['Mask'],['Mask']
Availability," mmseq-testDB ']'; ++ [[ mmseq-testDB == */* ]]; +++ pwd; ++ echo /home/dabia/bench/mmseqs/mmseq-testDB; + INPUT=/home/dabia/bench/mmseqs/mmseq-testDB; ++ abspath /junk/databases/mmseqs/test-nr-50m; ++ '[' -d /junk/databases/mmseqs/test-nr-50m ']'; ++ '[' -f /junk/databases/mmseqs/test-nr-50m ']'; ++ [[ /junk/databases/mmseqs/test-nr-50m == */* ]]; +++ cd /junk/databases/mmseqs; +++ pwd; ++ echo /junk/databases/mmseqs/test-nr-50m; + TARGET=/junk/databases/mmseqs/test-nr-50m; ++ abspath tmp; ++ '[' -d tmp ']'; ++ cd tmp; ++ pwd; + TMP_PATH=/home/dabia/bench/mmseqs/tmp; + SENS=5; + '[' 5 -le 5 ']'; + notExists /home/dabia/bench/mmseqs/tmp/pref_5; + '[' '!' -f /home/dabia/bench/mmseqs/tmp/pref_5 ']'; + /ngs/software/mmseqs/mmseqs-MPI prefilter /home/dabia/bench/mmseqs/mmseq-testDB /junk/databases/mmseqs/test-nr-50m /home/dabia/bench/mmseqs/tmp/pref_5 --sub-mat blosum62.out -k 0 --k-score 2147483647 --alph-size 21 --max-seq-len 32000 --max-seqs 300 --offset-result 0 --split 0 --split-mode 2 -c 0 --comp-bias-corr 1 --diag-score 1 --mask 1 --min-ungapped-score 15 --spaced-kmer-mode 1 --threads 8 -v 3 -s 5; ```. It doesn't crash, but don't get any further. The process is using just 1 core.; Increasing --np to 4, results in 4 instances of mmseqs with 8 threads, that crashes with error:. ```; -------------------------------------------------------; Primary job terminated normally, but 1 process returned; a non-zero exit code.. Per user-direction, the job has been aborted.; -------------------------------------------------------; --------------------------------------------------------------------------; mpirun detected that one or more processes exited with non-zero status, thus causing; the job to be terminated. The first process to do so was:. Process name: [[33336,1],0]; Exit code: 255; --------------------------------------------------------------------------. ```; And this is the core assignment:; ```; MCW rank 2 bound to socket 2[core 16[hwt 0-1]], socket 2[core 17[hwt ",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/34#issuecomment-309699230:5082,mask,mask,5082,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/34#issuecomment-309699230,2,['mask'],['mask']
Availability, output directory:; -rw-r--r-- 1 gnii0001 pc77 0 Jan 27 16:54 GTDB; -rw-r--r-- 1 gnii0001 pc77 4 Jan 27 16:54 GTDB.dbtype; -rw-r--r-- 1 gnii0001 pc77 0 Jan 27 16:54 GTDB_h; -rw-r--r-- 1 gnii0001 pc77 4 Jan 27 16:54 GTDB_h.dbtype; -rw-r--r-- 1 gnii0001 pc77 0 Jan 27 16:54 GTDB_h.index; -rw-r--r-- 1 gnii0001 pc77 0 Jan 27 16:54 GTDB.index; -rw-r--r-- 1 gnii0001 pc77 0 Jan 27 17:33 GTDB_mapping; -rw-r--r-- 1 gnii0001 pc77 0 Jan 27 16:54 GTDB.source; -rw-r--r-- 1 gnii0001 pc77 25771406 Jan 27 17:33 GTDB_taxonomy. # slurm error; awk: cmd. line:1: fatal: cannot open file `/home/gnii0001/pc77/scratch_nobackup/Database/mmseqs_formatted/GTDB.lookup' for reading: No such file or directory. # slurm standard output:; ....; Download Results:; gid |stat|avg speed |path/URI; ======+====+===========+=======================================================; 94ce2b|OK | 88MiB/s|/home/gnii0001/pc77/scratch_nobackup/Database/mmseqs_formatted/tmp/13846894499670505008/bac120_taxonomy.tsv. Status Legend:; (OK):download completed. 01/27 17:33:08 [NOTICE] Downloading 1 item(s). 01/27 17:33:09 [NOTICE] Download complete: /home/gnii0001/pc77/scratch_nobackup/Database/mmseqs_formatted/tmp/13846894499670505008/ar53_taxonomy.tsv. Download Results:; gid |stat|avg speed |path/URI; ======+====+===========+=======================================================; 13f000|OK | 6.3MiB/s|/home/gnii0001/pc77/scratch_nobackup/Database/mmseqs_formatted/tmp/13846894499670505008/ar53_taxonomy.tsv. Status Legend:; (OK):download completed.; Create directory /home/gnii0001/pc77/scratch_nobackup/Database/mmseqs_formatted/tmp/13846894499670505008/taxdb; createtaxdb /home/gnii0001/pc77/scratch_nobackup/Database/mmseqs_formatted/GTDB /home/gnii0001/pc77/scratch_nobackup/Database/mmseqs_formatted/tmp/13846894499670505008/taxdb --ncbi-tax-dump /home/gnii0001/pc77/scratch_nobackup/Database/mmseqs_formatted/tmp/13846894499670505008/taxonomy --tax-mapping-file /home/gnii0001/pc77/scratch_nobackup/Database/mmseqs_formatted/,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/758#issuecomment-1913045806:1290,down,download,1290,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/758#issuecomment-1913045806,1,['down'],['download']
Availability," threshold 	0; Coverage mode 	0; Max sequence length 	65535; Compositional bias 	1; Compositional bias 	1; Max reject 	2147483647; Max accept 	2147483647; Include identical seq. id. 	false; Preload mode 	0; Pseudo count a 	substitution:1.100,context:1.400; Pseudo count b 	substitution:4.100,context:5.800; Score bias 	0; Realign hits 	false; Realign score bias 	-0.2; Realign max seqs 	2147483647; Correlation score weight 	0; Gap open cost 	aa:11,nucl:5; Gap extension cost 	aa:1,nucl:2; Zdrop 	40; Threads 	32; Compressed 	0; Verbosity 	3; Seed substitution matrix 	aa:VTML80.out,nucl:nucleotide.out; Sensitivity 	7; k-mer length 	0; Target search mode 	0; k-score 	seq:2147483647,prof:2147483647; Alphabet size 	aa:21,nucl:5; Max results per query 	300; Split database 	0; Split mode 	2; Split memory limit 	0; Diagonal scoring 	true; Exact k-mer matching 	0; Mask residues 	1; Mask residues probability 	0.9; Mask lower case residues 	0; Minimum diagonal score 	15; Selected taxa 	; Spaced k-mers 	1; Spaced k-mer pattern 	; Local temporary path 	; Rescore mode 	0; Remove hits by seq. id. and coverage 	false; Sort results 	0; Mask profile 	1; Profile E-value threshold 	0.001; Global sequence weighting 	false; Allow deletions 	false; Filter MSA 	1; Use filter only at N seqs 	0; Maximum seq. id. threshold 	0.9; Minimum seq. id. 	0.0; Minimum score per column 	-20; Minimum coverage 	0; Select N most diverse seqs 	1000; Pseudo count mode 	0; Min codons in orf 	30; Max codons in length 	32734; Max orf gaps 	2147483647; Contig start mode 	2; Contig end mode 	2; Orf start mode 	1; Forward frames 	1,2,3; Reverse frames 	1,2,3; Translation table 	1; Translate orf 	0; Use all table starts 	false; Offset of numeric ids 	0; Create lookup 	0; Add orf stop 	false; Overlap between sequences 	0; Sequence split mode 	1; Header split mode 	0; Chain overlapping alignments 	0; Merge query 	1; Search type 	0; Search iterations 	1; Start sensitivity 	4; Search steps 	1; Prefilter mode 	0; Exhaustive",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/805#issuecomment-1899655257:1483,Mask,Mask,1483,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/805#issuecomment-1899655257,1,['Mask'],['Mask']
Availability," tmpfiles//13298481167543164943/input_step2 -v 3 --subdb-mode 1. Time for merging to input_step2: 0h 0m 0s 0ms; Time for processing: 0h 0m 0s 0ms; prefilter tmpfiles//13298481167543164943/input_step2 tmpfiles//13298481167543164943/input_step2 tmpfiles//13298481167543164943/pref_step2 --sub-mat nucl:nucleotide.out,aa:blosum62.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -s 6 -k 0 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 65535 --max-seqs 20 --split 0 --split-mode 2 --split-memory-limit 0 -c 0.8 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 16 --compressed 0 -v 3. Query database size: 218 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 218 type: Aminoacid; Index table k-mer threshold: 109 at k-mer size 6; Index table: counting k-mers; [=================================================================] 218 0s 31ms; Index table: Masked residues: 0; Index table: fill; [=================================================================] 218 0s 4ms; Index statistics; Entries: 1318; DB size: 488 MB; Avg k-mer size: 0.000021; Top 10 k-mers; XXXXXX 3; XXXXXX 3; XXXXXX 2; XXXXXX 2; XXXXXX 2; XXXXXX 2; XXXXXX 2; XXXXXX 2; XXXXXX 2; XXXXXX 2; Time for index table init: 0h 0m 0s 994ms; Process prefiltering step 1 of 1. k-mer similarity threshold: 109; Starting prefiltering scores calculation (step 1 of 1); Query db start 1 to 218; Target db start 1 to 218; [=================================================================] 218 0s 55ms. 193.314206 k-mers per position; 8 DB matches per sequence; 0 overflows; 0 queries produce too many hits (truncated result); 1 sequences passed prefiltering per query sequence; 1 median result list length; 0 sequences with 0 size result lists; Time for merging to pref_step2: 0h 0m 0s 4ms; Time for processing: 0h 0m 1s 763ms; align tmpfil",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-771572412:20077,Mask,Masked,20077,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-771572412,1,['Mask'],['Masked']
Availability," with lengths ranging from 987 bp to 12,136 bp. mmseqs createindex target_sequencesDB tmp --spaced-kmer-mode 0 -k 0 -s 7.5 --search-type 3. #I also tried to run the createindex with the parameters --max-seq-len 15000 and --mask 0 and received similar errors to the ones showed below.; ```. ### MMseqs Output (for bugs); Createdb works fine, but indexdb crashes. These are the last few lines of the output:. splitsequence target_sequencesDB tmp/12611708828474015781/nucl_split_seq --max-seq-len 10000 --sequence-overlap 0 --sequence-split-mode 1 --create-lookup 0 --threads 64 --compressed 0 -v 3. [=================================================================] 67.68K 0s 28ms; Time for merging to nucl_split_seq_h: 0h 0m 0s 59ms; Time for merging to nucl_split_seq: 0h 0m 0s 49ms; Time for processing: 0h 0m 0s 257ms; indexdb tmp/12611708828474015781/nucl_split_seq target_sequencesDB --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -k 0 --alph-size nucl:5,aa:21 --comp-bias-corr 1 --max-seq-len 10000 --max-seqs 300 --mask 1 --mask-lower-case 0 --spaced-kmer-mode 0 -s 7.5 --k-score 2147483647 --check-compatible 0 --search-type 3 --split 0 --split-memory-limit 0 -v 3 --threads 64. Estimated memory consumption: 1G; Write VERSION (0); Write META (1); Write SCOREMATRIX3MER (4); Write SCOREMATRIX2MER (3); Write SCOREMATRIXNAME (2); Write SPACEDPATTERN (23); Write DBR1INDEX (5); Write DBR1DATA (6); Write DBR2INDEX (7); Write DBR2DATA (8); Write HDR1INDEX (18); Write HDR1DATA (19); Write HDR2INDEX (20); Write HDR2DATA (21); Write GENERATOR (22); Index table: counting k-mers; [=================================================================] 67.72K 1s 204ms; Index table: Masked residues: 41849; No k-mer could be extracted for the database tmp/12611708828474015781/nucl_split_seq.; Maybe the sequences length is less than 14 residues.; Error: indexdb died. ### Your Environment; MMseqs version: 3513001d33301f7eaaf58e60a1376488ff017354; Operating system and version: CentOS Linux 7 (Core)",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/149#issuecomment-1129947528:1349,mask,mask,1349,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/149#issuecomment-1129947528,4,"['Error', 'Mask', 'mask']","['Error', 'Masked', 'mask', 'mask-lower-case']"
Availability,"% 4.0[=================================================================] 100.00% 4.00K 0s 55ms; Time for merging to query_seqs_h: 0h 0m 0s 10ms; Time for merging to query_seqs: 0h 0m 0s 19ms; Time for processing: 0h 0m 0s 164ms; splitsequence tmp/14943602774421092333/tmp_hsp1/7440312624435503015/query_seqs tmp/14943602774421092333/tmp_hsp1/7440312624435503015/query_seqs_split --max-seq-len 10000 --sequence-overlap 0 --sequence-split-mode 1 --headers-split-mode 0 --create-lookup 0 --threads 72 --compressed 0 -v 3 . Time for processing: 0h 0m 0s 1ms; prefilter tmp/14943602774421092333/tmp_hsp1/7440312624435503015/query_seqs_split /home/kabru/datenbank/silvadb.idx tmp/14943602774421092333/tmp_hsp1/7440312624435503015/search/pref_0 --sub-mat nucl:nucleotide.out,aa:blosum62.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -k 15 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 10000 --max-seqs 300 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 1 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 72 --compressed 0 -v 3 -s 2.0 . Index version: 16; Generated by: b1704ccc17f3814a1d640a83c6aa925bb0406809; ScoreMatrix: nucleotide.out; Query database size: 8000 type: Nucleotide; Estimated memory consumption: 14G; Target database size: 510984 type: Nucleotide; Process prefiltering step 1 of 1. k-mer similarity threshold: 0; Starting prefiltering scores calculation (step 1 of 1); Query db start 1 to 8000; Target db start 1 to 510984; [> ] 0.00% 1 et[> ] 1.00% 81 e[> ] 1.03% 83 e[> ] 1.01% 82 e[> ] 1.04% 84 e[> ] 1.05% 85 e[=> ] 2.05% 165 [=> ] 3.05% 245 [==> ] 4.05% 325 [===> ] 5.05% 405 [===> ] 6.05% 485 [====> ] 7.05% 565 [=====> ] 8.05% 645 [=====> ] 9.05% 725 [======> ] 10.05% 805[=======> ] 11.05% 885[=======> ] 12.05% 965[========> ] 13.05% 1.0[=========> ] 14.05% 1.1[=========> ] 15.05% 1.2[========",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/441#issuecomment-823834129:89201,mask,mask,89201,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/441#issuecomment-823834129,2,['mask'],"['mask', 'mask-lower-case']"
Availability,"+ '[' -f /junk/databases/mmseqs/test-nr-50m ']'; ++ [[ /junk/databases/mmseqs/test-nr-50m == */* ]]; +++ cd /junk/databases/mmseqs; +++ pwd; ++ echo /junk/databases/mmseqs/test-nr-50m; + TARGET=/junk/databases/mmseqs/test-nr-50m; ++ abspath tmp; ++ '[' -d tmp ']'; ++ cd tmp; ++ pwd; + TMP_PATH=/home/dabia/bench/mmseqs/tmp; + SENS=5; + '[' 5 -le 5 ']'; + notExists /home/dabia/bench/mmseqs/tmp/pref_5; + '[' '!' -f /home/dabia/bench/mmseqs/tmp/pref_5 ']'; + /ngs/software/mmseqs/mmseqs-MPI prefilter /home/dabia/bench/mmseqs/mmseq-testDB /junk/databases/mmseqs/test-nr-50m /home/dabia/bench/mmseqs/tmp/pref_5 --sub-mat blosum62.out -k 0 --k-score 2147483647 --alph-size 21 --max-seq-len 32000 --max-seqs 300 --offset-result 0 --split 0 --split-mode 2 -c 0 --comp-bias-corr 1 --diag-score 1 --mask 1 --min-ungapped-score 15 --spaced-kmer-mode 1 --threads 8 -v 3 -s 5; ```. It doesn't crash, but don't get any further. The process is using just 1 core.; Increasing --np to 4, results in 4 instances of mmseqs with 8 threads, that crashes with error:. ```; -------------------------------------------------------; Primary job terminated normally, but 1 process returned; a non-zero exit code.. Per user-direction, the job has been aborted.; -------------------------------------------------------; --------------------------------------------------------------------------; mpirun detected that one or more processes exited with non-zero status, thus causing; the job to be terminated. The first process to do so was:. Process name: [[33336,1],0]; Exit code: 255; --------------------------------------------------------------------------. ```; And this is the core assignment:; ```; MCW rank 2 bound to socket 2[core 16[hwt 0-1]], socket 2[core 17[hwt 0-1]], socket 2[core 18[hwt 0-1]], socket 2[core 19[hwt 0-1]], socket 2[core 20[hwt 0-1]], socket 2[core 21[hwt 0-1]], socket 2[core 22[hwt 0-1]], socket 2[core 23[hwt 0-1]]: [../../../../../../../..][../../../../../../../..][BB/BB/BB/BB/BB/BB/BB/BB",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/34#issuecomment-309699230:5331,error,error,5331,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/34#issuecomment-309699230,2,['error'],['error']
Availability,",28384:other sequences; Substitution matrix 	aa:blosum62.out,nucl:nucleotide.out; Add backtrace 	false; Alignment mode 	0; Alignment mode 	0; Allow wrapped scoring 	false; E-value threshold 	0.001; Seq. id. threshold 	0; Min alignment length 	0; Seq. id. mode 	0; Alternative alignments 	0; Coverage threshold 	0; Coverage mode 	0; Max sequence length 	65535; Compositional bias 	1; Compositional bias 	1; Max reject 	2147483647; Max accept 	2147483647; Include identical seq. id. 	false; Preload mode 	0; Pseudo count a 	substitution:1.100,context:1.400; Pseudo count b 	substitution:4.100,context:5.800; Score bias 	0; Realign hits 	false; Realign score bias 	-0.2; Realign max seqs 	2147483647; Correlation score weight 	0; Gap open cost 	aa:11,nucl:5; Gap extension cost 	aa:1,nucl:2; Zdrop 	40; Seed substitution matrix 	aa:VTML80.out,nucl:nucleotide.out; Sensitivity 	4; k-mer length 	0; k-score 	seq:2147483647,prof:2147483647; Alphabet size 	aa:21,nucl:5; Max results per query 	300; Split database 	0; Split mode 	2; Split memory limit 	0; Diagonal scoring 	true; Exact k-mer matching 	0; Mask residues 	1; Mask residues probability 	0.9; Mask lower case residues 	0; Minimum diagonal score 	15; Selected taxa; Spaced k-mers 	1; Spaced k-mer pattern; Local temporary path; Rescore mode 	0; Remove hits by seq. id. and coverage 	false; Sort results 	0; Mask profile 	1; Profile E-value threshold 	0.001; Global sequence weighting 	false; Allow deletions 	false; Filter MSA 	1; Use filter only at N seqs 	0; Maximum seq. id. threshold 	0.9; Minimum seq. id. 	0.0; Minimum score per column 	-20; Minimum coverage 	0; Select N most diverse seqs 	1000; Pseudo count mode 	0; Gap pseudo count 	10; Min codons in orf 	30; Max codons in length 	32734; Max orf gaps 	2147483647; Contig start mode 	2; Contig end mode 	2; Orf start mode 	1; Forward frames 	1,2,3; Reverse frames 	1,2,3; Translation table 	1; Translate orf 	0; Use all table starts 	false; Offset of numeric ids 	0; Create lookup 	0; Ad",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/779#issuecomment-1872491640:1563,Mask,Mask,1563,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/779#issuecomment-1872491640,2,['Mask'],['Mask']
Availability,"-----------; Primary job terminated normally, but 1 process returned; a non-zero exit code. Per user-direction, the job has been aborted.; --------------------------------------------------------------------------; --------------------------------------------------------------------------; mpirun noticed that process rank 89 with PID 0 on node cpu-23-1 exited on signal 7 (Bus error).; --------------------------------------------------------------------------. And this one a couple more times:. --------------------------------------------------------------------------; Primary job terminated normally, but 1 process returned; a non-zero exit code. Per user-direction, the job has been aborted.; --------------------------------------------------------------------------; slurmstepd: error: *** JOB 1369194 ON cpu-25-49 CANCELLED AT 2021-05-17T19:07:03 DUE TO NODE FAILURE, SEE SLURMCTLD LOG FOR DETAILS ***; --------------------------------------------------------------------------; mpirun noticed that process rank 65 with PID 0 on node cpu-25-49 exited on signal 9 (Killed).; --------------------------------------------------------------------------. Now I'm trying to run the job using the script you also include in your manual . mmseqs createdb ""${QUERYFASTA}"" ""${QUERYDB}""; mmseqs splitdb ""${QUERYDB}"" ""${QUERYDB}_split"" --split $SPLITS. for file in $(ls ""${QUERYDB}_split""_*_$SPLITS); do; mmseqs createsubdb ""${file}.index"" ""${QUERYDB}_h"" ""${file}_h""; done. split=0; for file in $(ls ""${QUERYDB}_split""_*_$SPLITS); do; RUNNER=""mpirun -np 128 -p nocona"" bsub mmseqs cluster ""${file}"" chiropteraDB aln_${split} tmp --cov-mode 1 -c 0.9 --threads 128; ((split++)); done. So far I don't have a result out of it because the job is waiting for resources, I just added the -p nocona argument because I got an error stating that the job couldn't be batched if I didn't mention the partition. . I don't understand where I should the -c argument, I'm already using -c 0.9 , is that what you mean?",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/455#issuecomment-843668604:2575,error,error,2575,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/455#issuecomment-843668604,1,['error'],['error']
Availability,"---------. ```. It failed in the last step. ```; mpirun -np 4 cstranslate -i subset.MSA_ca3m.ffdata -o subset.MSA_cs219 -A /home/linuxbrew/anaconda3/data/cs219.lib -D /home/linuxbrew/anaconda3/data/context_data.lib -x 0.4 -c 4 -I ca3m; ```. The complete steps I used are described in this script. ```; #!/usr/bin/env bash. ## define files and parameters here; ## sequence file name like ""NAME.fa"" use only the base name NAME and the script will add the ""*.fa"" grob; BASE=""subset""; HH_CONTEXT_DATA=""/home/linuxbrew/anaconda3/data/context_data.lib""; HH_LIB=""/home/linuxbrew/anaconda3/data/cs219.lib""; THREADS=4; SENSITIVITY=7.5; IDENTITY=0; COVERAGE=0.8; EVALUE=0.00001. CLU_MODE=1. FILE=""${BASE}.fa""; MMSEQDB=""${BASE}DB""; MMSEQPREF=""${BASE}PREFILTER""; MMSEQALN=""${BASE}ALN""; MMSEQCLU=""${BASE}CLU""; MMSEQMSA=""${BASE}MSA""; FILELOG=""job.log"". echo '#:: CREATEDB' &>> ${FILELOG} ;; mmseqs createdb ${FILE} ${MMSEQDB} &>> ${FILELOG}. echo '#:: PREFILTER' &>> ${FILELOG} ;; mmseqs prefilter ${MMSEQDB} ${MMSEQDB} ${MMSEQPREF} -s ${SENSITIVITY} --threads ${THREADS} &>> ${FILELOG}. echo '#:: ALING' &>> ${FILELOG} ;; mmseqs align ${MMSEQDB} ${MMSEQDB} ${MMSEQPREF} ${MMSEQALN} -e ${EVALUE} \; --min-seq-id ${IDENTITY} -c ${COVERAGE} --threads ${THREADS} &>> ${FILELOG}; echo '#:: CLUST' &>> ${FILELOG} ;; mmseqs clust ${MMSEQDB} ${MMSEQALN} ${MMSEQCLU} --cluster-mode ${CLU_MODE} --threads ${THREADS} &> ${FILELOG} &>> ${FILELOG}. echo '#:: RESULT2MSA' &>> ${FILELOG} ;; mmseqs result2msa ${MMSEQDB} ${MMSEQDB} ${MMSEQCLU} ${MMSEQMSA} --compress --threads ${THREADS} &>> ${FILELOG}. echo '#:: CREATE LINKS' &>> ${FILELOG} ;; ln -s ${MMSEQDB}_h ${MMSEQMSA}_header.ffdata &>> ${FILELOG}; ln -s ${MMSEQDB}_h.index ${MMSEQMSA}_header.ffindex &>> ${FILELOG}; ln -s ${MMSEQDB} ${MMSEQMSA}_sequence.ffdata &>> ${FILELOG}; ln -s ${MMSEQDB}.index ${MMSEQMSA}_sequence.ffindex &>> ${FILELOG}. echo '#:: BUILD HHBLITS COMPATIBLE' &>> ${FILELOG} ;; mpirun -np ${THREADS} cstranslate -i ${MMSEQMSA}_ca3m.ffdata -o ${MMSEQ",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/174#issuecomment-492826081:2009,echo,echo,2009,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/174#issuecomment-492826081,1,['echo'],['echo']
Availability,"--alignment-mode 3 --wrapped-scoring 0 -e 0.001 --min-seq-id 0.9 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 0 --realign 0 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --zdrop 40 --alph-size nucl:5,aa:13 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 -k 0 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --rescore-mode 0 --filter-hits 0 --sort-results 0 --remove-tmp-files 0 --force-reuse 0. kmermatcher DB_in/shuffle_in DB_clustered/tmp/17526443716087640986/linclust/4509971647793470292/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-id 0.9 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 16 --compressed 0 -v 3. kmermatcher DB_in/shuffle_in DB_clustered/tmp/17526443716087640986/linclust/4509971647793470292/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-id 0.9 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 16 --compressed 0 -v 3. Database size: 1951 type: Aminoacid; Reduced amino acid alphabet: (A S T) (C) (D B N) (E Q Z) (F Y) (G) (H) (I V) (K R) (L J M) (P) (W) (X). Generate k-mers list for 1 split; [=================================================================] 1.95K 0s 41ms; Sort kmer 0h 0m 0s 1ms; Sort by rep. sequence 0h 0m 0s 0ms; Time for fill",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/398#issuecomment-767060093:3123,mask,mask,3123,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/398#issuecomment-767060093,2,['mask'],"['mask', 'mask-lower-case']"
Availability,"--alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-len 65535 --max-seqs 300 --comp-bias-corr 0 --max-rejected 2147483647 --max-accept 2147483647 --pca 1 --pcb 1.5 --alph-size 13 --kmer-per-seq 80 --mask 0 -k 0 --hash-shift 5 --split-memory-limit 0 --skip-n-repeat-kmer 0 --rescore-mode 0 . MMseqs Version: 	dfb5e6eb53ee034f02cc08d15513fb5ccce7cce7; Cluster mode 	0; Verbosity 	3; Max depth connected component 	1000; Similarity type 	2; Threads 	10; Sub Matrix 	blosum62.out; Add backtrace 	false; Alignment mode 	3; E-value threshold 	0.001; Seq. Id Threshold 	0.8; Alternative alignments 	0; Coverage threshold 	0.8; Coverage Mode 	0; Max. sequence length 	65535; Max. results per query 	300; Compositional bias 	0; Realign hit 	false; Max Reject 	2147483647; Max Accept 	2147483647; Include identical Seq. Id. 	false; No preload 	false; Early exit 	false; Pseudo count a 	1; Pseudo count b 	1.5; Alphabet size 	13; Kmer per sequence 	80; Mask Residues 	0; K-mer size 	0; Shift hash 	5; Split Memory Limit 	0; Include only extendable 	false; Skip sequence with n repeating k-mers 	0; Rescore mode 	0; Remove hits by seq.id. and coverage 	false; In substitution scoring mode, performs global alignment along the diagonal	false; Remove Temporary Files 	false; Sets the MPI runner 	. Program call:; panproteome.db /tmp/test/9465698490903227639/linclust/831108043510341376/pref --sub-mat blosum62.out --alph-size 13 --min-seq-id 0.8 --kmer-per-seq 80 --mask 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 5 --split-memory-limit 0 --skip-n-repeat-kmer 0 --threads 10 -v 3 . MMseqs Version: 	dfb5e6eb53ee034f02cc08d15513fb5ccce7cce7; Sub Matrix 	blosum62.out; Alphabet size 	13; Seq. Id Threshold 	0.8; Kmer per sequence 	80; Mask Residues 	0; Coverage Mode 	0; K-mer size 	10; Coverage threshold 	0.8; Max. sequence length 	65535; Shift hash 	5; Split Memory Limit 	0; Include only extendable 	false; Skip sequence with n repeating k-mers	0; Threads 	10; Verbosity 	3. Database type: Aminoacid; V ->",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/88#issuecomment-401138700:3173,Mask,Mask,3173,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/88#issuecomment-401138700,1,['Mask'],['Mask']
Availability,"--mask 0 --mask-lower-case 0 -k 0 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --rescore-mode 0 --filter-hits 0 --sort-results 0 --remove-tmp-files 0 --force-reuse 0. kmermatcher DB_in/shuffle_in DB_clustered/tmp/17526443716087640986/linclust/4509971647793470292/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-id 0.9 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 16 --compressed 0 -v 3. kmermatcher DB_in/shuffle_in DB_clustered/tmp/17526443716087640986/linclust/4509971647793470292/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-id 0.9 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 16 --compressed 0 -v 3. Database size: 1951 type: Aminoacid; Reduced amino acid alphabet: (A S T) (C) (D B N) (E Q Z) (F Y) (G) (H) (I V) (K R) (L J M) (P) (W) (X). Generate k-mers list for 1 split; [=================================================================] 1.95K 0s 41ms; Sort kmer 0h 0m 0s 1ms; Sort by rep. sequence 0h 0m 0s 0ms; Time for fill: 0h 0m 0s 0ms; Time for merging to pref: 0h 0m 0s 0ms; Time for processing: 0h 0m 0s 156ms; rescorediagonal DB_in/shuffle_in DB_in/shuffle_in DB_clustered/tmp/17526443716087640986/linclust/4509971647793470292/pref DB_clustered/tmp/17526443716087640986/linclust/4509971647793470292/pref_rescore1 --sub-mat nucl:nucleotide.out,aa:blosum62.out --rescore-mode 0 --wrapped-scoring 0 --filter-hits 0 -e 0.001 -c 0.8 -a 0 --cov-mode 0 --min-seq-id 0.9 --min-aln-len 0 --seq-id-mode 0 --add-se",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/398#issuecomment-767060093:3609,mask,mask,3609,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/398#issuecomment-767060093,2,['mask'],"['mask', 'mask-lower-case']"
Availability,"--pca 0 --pcb 1.5 --db-load-mode 0 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --threads 8 --compressed 0 -v 3. MMseqs Version: 	a6cab565c98376623e82c3a04d186219d4c2f10c; Substitution matrix 	nucl:nucleotide.out,aa:blosum62.out; E-value threshold 	1e-05; Mask profile 	1; Profile E-value threshold 	1e-05; Compositional bias 	1; Global sequence weighting 	false; Allow deletions 	false; Filter MSA 	1; Maximum seq. id. threshold	0.9; Minimum seq. id. 	0; Minimum score per column 	-20; Minimum coverage 	0; Select N most diverse seqs	1000; Pseudo count a 	0; Pseudo count b 	1.5; Preload mode 	0; Gap open cost 	nucl:5,aa:11; Gap extension cost 	nucl:2,aa:1; Threads 	8; Compressed 	0; Verbosity 	3. Query database size: 1151 type: Aminoacid; Target database size: 41195879 type: Aminoacid; ================================================================= ] 46.43% 535 eta 0s; ==71239==ERROR: AddressSanitizer: heap-buffer-overflow on address 0x61a0000233e0 at pc 0x55c61d242cd7 bp 0x7fc0f27db1b0 sp 0x7fc0f27db1a0; WRITE of size 1 at 0x61a0000233e0 thread T3; ==71239==AddressSanitizer: while reporting a bug found another one. Ignoring.08K eta 0s; #0 0x55c61d242cd6 in MultipleAlignment::updateGapsInSequenceSet(char**, unsigned long, std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > > const&, std::vector<Matcher::result_t, std::allocator<Matcher::result_t> > const&, unsigned int*, bool) /ebio/abt3_projects/software/dev/ll_pipelines/llcds/tmp/mmseqs_taxonomy/MMseqs2/src/alignment/MultipleAlignment.cpp:168; #1 0x55c61d2432cc in MultipleAlignment::computeMSA(Sequence*, std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > > const&, std::vector<Matcher::result_t, std::allocator<Matcher::result_t> > const&, bool) /ebio/abt3_projects/software/dev/ll_pipelines/llcds/tmp/mmseqs_taxonomy/MMseqs2/sr",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/432#issuecomment-814682245:2354,ERROR,ERROR,2354,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/432#issuecomment-814682245,1,['ERROR'],['ERROR']
Availability,"-corr 1 --comp-bias-corr-scale 1 --wg 0 --allow-deletion 0 --filter-msa 1 --filter-min-enable 0 --max-seq-id 0.9 --qid '0.0' --qsc -20 --cov 0 --diff 1000 --pseudo-cnt-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --db-load-mode 2 --gap-open aa:11,nucl:5 --gap-extend aa:1,nucl:2 --gap-pc 10 --threads 96 --compressed 0 -v 3. prefilter result_query_20230412_142303/tmp/18292001434761310910/profile_1 /home/username/project/my_local_DB/target_DB.idx result_query_20230412_142303/tmp/18292001434761310910/pref_tmp_2 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --seed-sub-mat 'aa:VTML80.out,nucl:nucleotide.out' -s 8 -k 0 --k-score seq:2147483647,prof:2147483647 --alph-size aa:21,nucl:5 --max-seq-len 65535 --max-seqs 10000 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --comp-bias-corr-scale 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-prob 0.9 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 2 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --threads 96 --compressed 0 -v 3. subtractdbs result_query_20230412_142303/tmp/18292001434761310910/pref_tmp_2 result_query_20230412_142303/tmp/18292001434761310910/aln_1 result_query_20230412_142303/tmp/18292001434761310910/pref_2 --threads 96 --e-profile 0.1 -e 0.1 --compressed 0 -v 3. subtractdbs result_query_20230412_142303/tmp/18292001434761310910/pref_tmp_2 result_query_20230412_142303/tmp/18292001434761310910/aln_1 result_query_20230412_142303/tmp/18292001434761310910/pref_2 --threads 96 --e-profile 0.1 -e 0.1 --compressed 0 -v 3. align result_query_20230412_142303/tmp/18292001434761310910/profile_1 /home/username/project/my_local_DB/target_DB.idx result_query_20230412_142303/tmp/18292001434761310910/pref_2 result_query_20230412_142303/tmp/18292001434761310910/aln_tmp_2 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' -a 1 --alignment-mode 2 --alignment-output-m",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/64#issuecomment-1507273856:7190,mask,mask-lower-case,7190,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/64#issuecomment-1507273856,2,['mask'],['mask-lower-case']
Availability,"-db2 ''; --use-env '0'; --db3 ''; --filter '1'; --mmseqs 'mmseqs'; --expand-eval '1.7e+308'; --align-eval '10'; --diff '3000'; --qsc '-20.0'; --max-accept '1000000'; --db-load-mode '2'; --threads '96'; query.fasta; /home/username/project/my_local_DB; result_query_20230412_142303. createdb result_query_20230412_142303/query.fas result_query_20230412_142303/qdb --shuffle 0. search result_query_20230412_142303/qdb /home/username/project/my_local_DB/target_DB result_query_20230412_142303/res result_query_20230412_142303/tmp --threads 96 --num-iterations 3 --db-load-mode 2 -a -s 8 -e 0.1 --max-seqs 10000. prefilter result_query_20230412_142303/qdb /home/username/project/my_local_DB/target_DB.idx result_query_20230412_142303/tmp/18292001434761310910/pref_0 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --seed-sub-mat 'aa:VTML80.out,nucl:nucleotide.out' -s 8 -k 0 --k-score seq:2147483647,prof:2147483647 --alph-size aa:21,nucl:5 --max-seq-len 65535 --max-seqs 10000 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --comp-bias-corr-scale 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-prob 0.9 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 2 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --threads 96 --compressed 0 -v 3. align result_query_20230412_142303/qdb /home/username/project/my_local_DB/target_DB.idx result_query_20230412_142303/tmp/18292001434761310910/pref_0 result_query_20230412_142303/tmp/18292001434761310910/aln_0 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' -a 1 --alignment-mode 2 --alignment-output-mode 0 --wrapped-scoring 0 -e 0.1 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 1 --comp-bias-corr-scale 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 2 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.8",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/64#issuecomment-1507273856:2356,mask,mask,2356,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/64#issuecomment-1507273856,4,['mask'],"['mask', 'mask-prob']"
Availability,"-min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --zdrop 40 --alph-size nucl:5,aa:13 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 -k 0 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --rescore-mode 0 --filter-hits 0 --sort-results 0 --remove-tmp-files 0 --force-reuse 0. kmermatcher artificial2/DB_artificial tmp//7897776346521331899/linclust/17269245559208916342/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-id 0 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 16 --compressed 0 -v 3. kmermatcher artificial2/DB_artificial tmp//7897776346521331899/linclust/17269245559208916342/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-id 0 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 16 --compressed 0 -v 3. Database size: 136 type: Aminoacid; Reduced amino acid alphabet: (A S T) (C) (D B N) (E Q Z) (F Y) (G) (H) (I V) (K R) (L J M) (P) (W) (X). Generate k-mers list for 1 split; [=================================================================] 100.00% 136 0s 41ms; Sort kmer 0h 0m 0s 0ms; Sort by rep. sequence 0h 0m 0s 0ms; Time for fill",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-775778998:3442,mask,mask,3442,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-775778998,2,['mask'],"['mask', 'mask-lower-case']"
Availability,"-mode 2 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --corr-score-weight 0 --gap-open aa:11,nucl:5 --gap-extend aa:1,nucl:2 --zdrop 40 --threads 96 --compressed 0 -v 3. mergedbs result_query_20230412_142303/tmp/18292001434761310910/profile_0 result_query_20230412_142303/tmp/18292001434761310910/aln_1 result_query_20230412_142303/tmp/18292001434761310910/aln_0 result_query_20230412_142303/tmp/18292001434761310910/aln_tmp_1. rmdb result_query_20230412_142303/tmp/18292001434761310910/aln_0. rmdb result_query_20230412_142303/tmp/18292001434761310910/aln_tmp_1. result2profile result_query_20230412_142303/tmp/18292001434761310910/profile_0 /home/username/project/my_local_DB/target_DB.idx result_query_20230412_142303/tmp/18292001434761310910/aln_1 result_query_20230412_142303/tmp/18292001434761310910/profile_1 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' -e 0.1 --mask-profile 1 --e-profile 0.1 --comp-bias-corr 1 --comp-bias-corr-scale 1 --wg 0 --allow-deletion 0 --filter-msa 1 --filter-min-enable 0 --max-seq-id 0.9 --qid '0.0' --qsc -20 --cov 0 --diff 1000 --pseudo-cnt-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --db-load-mode 2 --gap-open aa:11,nucl:5 --gap-extend aa:1,nucl:2 --gap-pc 10 --threads 96 --compressed 0 -v 3. prefilter result_query_20230412_142303/tmp/18292001434761310910/profile_1 /home/username/project/my_local_DB/target_DB.idx result_query_20230412_142303/tmp/18292001434761310910/pref_tmp_2 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --seed-sub-mat 'aa:VTML80.out,nucl:nucleotide.out' -s 8 -k 0 --k-score seq:2147483647,prof:2147483647 --alph-size aa:21,nucl:5 --max-seq-len 65535 --max-seqs 10000 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --comp-bias-corr-scale 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-prob 0.9 --mask-lower-case 0 --min-ungapp",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/64#issuecomment-1507273856:6207,mask,mask-profile,6207,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/64#issuecomment-1507273856,2,['mask'],['mask-profile']
Availability,"-subdb-mode 1. Time for merging to input_step_redundancy: 0h 0m 0s 0ms; Time for processing: 0h 0m 0s 1ms; prefilter DB_clustered/tmp/17526443716087640986/input_step_redundancy DB_clustered/tmp/17526443716087640986/input_step_redundancy DB_clustered/tmp/17526443716087640986/pref_step0 --sub-mat nucl:nucleotide.out,aa:blosum62.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -s 1 -k 0 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 65535 --max-seqs 20 --split 0 --split-mode 2 --split-memory-limit 0 -c 0.8 --cov-mode 0 --comp-bias-corr 0 --diag-score 0 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 0 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 16 --compressed 0 -v 3. Query database size: 416 type: Aminoacid; Estimated memory consumption: 978M; Target database size: 416 type: Aminoacid; Index table k-mer threshold: 154 at k-mer size 6; Index table: counting k-mers; [=================================================================] 416 0s 41ms; Index table: Masked residues: 0; Index table: fill; [=================================================================] 416 0s 6ms; Index statistics; Entries: 125; DB size: 488 MB; Avg k-mer size: 0.000002; Top 10 k-mers; XXXXXX 6; XXXXXX 6; XXXXXX 4; XXXXXX 2; XXXXXX 2; XXXXXX 2; XXXXXX 2; XXXXXX 2; XXXXXX 2; XXXXXX 1; Time for index table init: 0h 0m 1s 308ms; Process prefiltering step 1 of 1. k-mer similarity threshold: 154; Starting prefiltering scores calculation (step 1 of 1); Query db start 1 to 416; Target db start 1 to 416; [=================================================================] 416 0s 20ms. 0.116417 k-mers per position; 0 DB matches per sequence; 0 overflows; 0 queries produce too many hits (truncated result); 1 sequences passed prefiltering per query sequence; Time for processing: 0h 0m 2s 35ms; align DB_clustered/tmp/17526443716087640986/input_step_redundancy DB_clustered/tmp/17526443716087640986/input_step_redundancy DB",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/398#issuecomment-767060093:11848,Mask,Masked,11848,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/398#issuecomment-767060093,1,['Mask'],['Masked']
Availability,"-threads 8 /nfs/brubeck.bx.psu.edu/scratch6/ksahlin/preclust_eval/ccs/ENSEMBL/1000000/ccs.fasta /nfs/brubeck.bx.psu.edu/scratch6/ksahlin/preclust_eval/cluster/linclust/ENSEMBL/1000000/linclust_out /nfs/brubeck.bx.psu.edu/scratch6/ksahlin/preclust_eval/cluster/linclust/ENSEMBL/1000000/linclust_tmpdir<200b>. MMseqs Version: 016429915362d184505627148d07f11c9ccc1aeb; Cluster mode 0; Max depth connected component 1000; Similarity type 2; Threads 8; Verbosity 3; Sub Matrix blosum62.out; Add backtrace false; Alignment mode 3; E-value threshold 0.001; Seq. Id Threshold 0; Seq. Id. Mode 0; Alternative alignments 0; Coverage threshold 0.8; Coverage Mode 0; Max. sequence length 65535; Max. results per query 300; Compositional bias 1; Realign hit false; Max Reject 2147483647; Max Accept 2147483647; Include identical Seq. Id. false; No preload false; Pseudo count a 1; Pseudo count b 1.5; Score bias 0; Alphabet size 21; Kmer per sequence 21; Mask Residues 1; K-mer size 0; Shift hash 5; Split Memory Limit 0; Include only extendable false; Skip sequence with n repeating k-mers 0; Rescore mode 0; Remove hits by seq.id. and coverage false; Sort results 0; In substitution scoring mode, performs global alignment along the diagonal false; Remove Temporary Files false; Sets the MPI runner. Program call:; /nfs/brubeck.bx.psu.edu/scratch6/ksahlin/preclust_eval/ccs/ENSEMBL/1000000/ccs.fasta /nfs/brubeck.bx.psu.edu/scratch6/ksahlin/preclust_eval/cluster/linclust/ENSEMBL/1000000/linclust_tmpdir<200b>/12158280734806148968/input --max-seq-len 65535 --dont-split-seq-by-len --dont-shuffle --id-offset 0 -v 3. MMseqs Version: 016429915362d184505627148d07f11c9ccc1aeb; Max. sequence length 65535; Split Seq. by len false; Do not shuffle input database false; Offset of numeric ids 0; Verbosity 3. ...................................................................................................Time for merging files: 0h 0m 1s 611ms; Time for merging files: 0h 0m 1s 458ms; Time for processing: 0h 1m 30s ",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/111#issuecomment-418161120:1293,Mask,Mask,1293,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/111#issuecomment-418161120,1,['Mask'],['Mask']
Availability,...................	38 Mio. sequences processed; ...................................................................................................	39 Mio. sequences processed; ...................................................................................................	40 Mio. sequences processed; ...................................................................................................	41 Mio. sequences processed; ...................................................................................................	42 Mio. sequences processed; ...................................................................................................	43 Mio. sequences processed; ...................................................................................................	44 Mio. sequences processed; ...................................................................................................	45 Mio. sequences processed; ..................; Index table: Masked residues: 139540524; Index table: fill...; ...................................................................................................	1 Mio. sequences processed; ...................................................................................................	2 Mio. sequences processed; ...................................................................................................	3 Mio. sequences processed; ...................................................................................................	4 Mio. sequences processed; ...................................................................................................	5 Mio. sequences processed; ...................................................................................................	6 Mio. sequences processed; ...................................................................................................	7 Mio. sequences processed; ......................................................................,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/160#issuecomment-461782109:21932,Mask,Masked,21932,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/160#issuecomment-461782109,3,['Mask'],['Masked']
Availability,......................	39 Mio. sequences processed; ...................................................................................................	40 Mio. sequences processed; ...................................................................................................	41 Mio. sequences processed; ...................................................................................................	42 Mio. sequences processed; ...................................................................................................	43 Mio. sequences processed; ...................................................................................................	44 Mio. sequences processed; ...................................................................................................	45 Mio. sequences processed; ...................................................................................................	46 Mio. sequences processed; ...............; Index table: Masked residues: 131143401; Index table: fill...; ...................................................................................................	1 Mio. sequences processed; ...................................................................................................	2 Mio. sequences processed; ...................................................................................................	3 Mio. sequences processed; ...................................................................................................	4 Mio. sequences processed; ...................................................................................................	5 Mio. sequences processed; ...................................................................................................	6 Mio. sequences processed; ...................................................................................................	7 Mio. sequences processed; ......................................................................,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/160#issuecomment-461782109:34869,Mask,Masked,34869,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/160#issuecomment-461782109,3,['Mask'],['Masked']
Availability,..............................................................	78 Mio. sequences processed; ...................................................................................................	79 Mio. sequences processed; ...................................................................................................	80 Mio. sequences processed; ...................................................................................................	81 Mio. sequences processed; ...................................................................................................	82 Mio. sequences processed; ...................................................................................................	83 Mio. sequences processed; ...................................................................................................	84 Mio. sequences processed; ...................................................................................................	85 Mio. sequences processed; ...................................................................................................	86 Mio. sequences processed; ...................................................................................................	87 Mio. sequences processed; ...................................................................................................	88 Mio. sequences processed; ...................................................................................................	89 Mio. sequences processed; ...................................................................................................	90 Mio. sequences processed; ...................................................................................................	91 Mio. sequences processed; ........................................................................Time for merging files: 0h 43m 22s 698ms; Time for processing: 0h 44m 6s 639ms; Please provide <queryDB> <targetDB> <outDB> <tmp>; Error: Search step died; ```,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/144#issuecomment-448559651:19373,Error,Error,19373,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/144#issuecomment-448559651,1,['Error'],['Error']
Availability,".....................................................................	22 Mio. sequences processed; .....................User defined signal 2. ```. **Second run:**. ```; call:; search geneC.db genes.db geneC-v-all_3itr.db tmpC --no-preload --max-seqs 1000 --num-iterations 3 . MMseqs Version: 	GITDIR-NOTFOUND; Sub Matrix 	blosum62.out; Add backtrace 	true; Alignment mode 	2; E-value threshold 	0.001; Seq. Id Threshold 	0; Seq. Id. Mode 	0; Alternative alignments 	0; Coverage threshold 	0; Coverage Mode 	0; Max. sequence length 	65535; Max. results per query 	1000; Compositional bias 	1; Realign hit 	false; Max Reject 	2147483647; Max Accept 	2147483647; Include identical Seq. Id. 	false; No preload 	true; Pseudo count a 	1; Pseudo count b 	1.5; Score bias 	0; Gap open cost 	11; Gap extension cost 	1; Threads 	56; Verbosity 	3; Sensitivity 	5.7; K-mer size 	0; K-score 	2147483647; Alphabet size 	21; Offset result 	0; Split DB 	0; Split mode 	2; Split Memory Limit 	0; Diagonal Scoring 	1; Exact k-mer matching 	0; Mask Residues 	1; Minimum Diagonal score 	15; Spaced Kmer 	1; Spaced k-mer pattern 	; Rescore mode 	0; Remove hits by seq.id. and coverage 	false; Sort results 	0; In substitution scoring mode, performs global alignment along the diagonal	false; Mask profile 	1; Profile e-value threshold 	0.1; Use global sequence weighting 	false; Filter MSA 	1; Maximum sequence identity threshold 	0.9; Minimum seq. id. 	0; Minimum score per column 	-20; Minimum coverage 	0; Select n most diverse seqs 	1000; Omit Consensus 	false; Min codons in orf 	30; Max codons in length 	32734; Max orf gaps 	2147483647; Contig start mode 	2; Contig end mode 	2; Orf start mode 	0; Forward Frames 	1,2,3; Reverse Frames 	1,2,3; Translation Table 	1; Use all table starts 	false; Offset of numeric ids 	0; Add Orf Stop 	false; Number search iterations 	3; Start sensitivity 	4; Search steps 	1; Run a seq-profile search in slice mode 	0; Sets the MPI runner 	; Remove Temporary Files 	false. Program",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/160#issuecomment-461782109:125230,Mask,Mask,125230,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/160#issuecomment-461782109,1,['Mask'],['Mask']
Availability,...................................................................................... 1 Mio. sequences processed; ....................................; Output database: tmp/6822607060114486044/pref_swapped; .; Time for merging files: 0h 0m 0s 23ms; Time for processing: 0h 0m 46s 63ms; Program call:; align pfam_profile.idx pbps.neighbors.DB tmp/6822607060114486044/pref_swapped tmp/6822607060114486044/aln_swapped --sub-mat blosum62.out -a 0 --alignment-mode 2 -e 0.001 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 1 --realign 0 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --gap-open 11 --gap-extend 1 --threads 10 --compressed 0 -v 3 . Init data structures...; Touch data file pbps.neighbors.DB ... Done.; Use index pfam_profile.idx; Index version: 15; Generated by: 8-fac81; MaxSeqLength: 65535; KmerSize: 6; CompBiasCorr: 1; AlphabetSize: 21; Masked: 0; Spaced: 1; KmerScore: 90; SequenceType: Profile; SourcSeqType: Profile; Headers1: 1; Headers2: 0; ScoreMatrix: VTML80.out; Compute score and coverage.; Query database type: Profile; Target database type: Aminoacid; Calculation of Smith-Waterman alignments.; .Time for merging files: 0h 0m 0s 23ms. All sequences processed. 390452377 alignments calculated.; 1899900 sequence pairs passed the thresholds (0.00486589 of overall calculated).; 106.904 hits per query sequence.; Time for processing: 0h 32m 50s 752ms; Program call:; swapresults pfam_profile.idx pbps.neighbors.DB tmp/6822607060114486044/aln_swapped result --sub-mat blosum62.out -e 0.001 --split-memory-limit 0 --gap-open 11 --gap-extend 1 --threads 10 --compressed 0 --db-load-mode 0 -v 3 . Query database: pfam_profile.idx; Use index pfam_profile.idx; Index version: 15; Generated by: 8-fac81; MaxSeqLength: 65535; KmerSize: 6; CompBiasCorr: 1; AlphabetSize: 21; Masked: 0; Spaced: 1; KmerScore: 90; SequenceType: Profile; SourcSeqTy,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/189#issuecomment-483627132:5776,Mask,Masked,5776,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/189#issuecomment-483627132,1,['Mask'],['Masked']
Availability,....................................................................................... 4 Mio. sequences processed; ................................................................................................... 5 Mio. sequences processed; .......................................................................WARNING: Sequence (dbKey=5712154) contains only ATGC. It might be a nucleotide sequence.; ............................ 6 Mio. sequences processed; ......................................WARNING: Sequence (dbKey=6387662) contains only ATGC. It might be a nucleotide sequence.; ............................................................. 7 Mio. sequences processed; ................................................................................................... 8 Mio. sequences processed; ................................................................................................... 9 Mio. sequences processed; ..................................; Index table: Masked residues: 70834663; Index table: fill...; ................................................................................................... 1 Mio. sequences processed; ................................................................................................... 2 Mio. sequences processed; ................................................................................................... 3 Mio. sequences processed; ................................................................................................... 4 Mio. sequences processed; ................................................................................................... 5 Mio. sequences processed; ................................................................................................... 6 Mio. sequences processed; ................................................................................................... 7 Mio. sequences processed; ......................................................................,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/3#issuecomment-251733349:9066,Mask,Masked,9066,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/3#issuecomment-251733349,1,['Mask'],['Masked']
Availability,....................................................................................... 4 Mio. sequences processed; ................................................................................................... 5 Mio. sequences processed; .......................................................................WARNING: Sequence (dbKey=5712154) contains only ATGC. It might be a nucleotide sequence.; ............................ 6 Mio. sequences processed; ......................................WARNING: Sequence (dbKey=6387662) contains only ATGC. It might be a nucleotide sequence.; ............................................................. 7 Mio. sequences processed; ................................................................................................... 8 Mio. sequences processed; ................................................................................................... 9 Mio. sequences processed; ..................................; Index table: Masked residues: 99295754; Index table: fill...; ................................................................................................... 1 Mio. sequences processed; ................................................................................................... 2 Mio. sequences processed; ................................................................................................... 3 Mio. sequences processed; ................................................................................................... 4 Mio. sequences processed; ................................................................................................... 5 Mio. sequences processed; ................................................................................................... 6 Mio. sequences processed; ................................................................................................... 7 Mio. sequences processed; ......................................................................,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/3#issuecomment-251310375:4549,Mask,Masked,4549,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/3#issuecomment-251310375,1,['Mask'],['Masked']
Availability,......................................................................................... 3 Mio. sequences processed; ................................................................................................... 4 Mio. sequences processed; ..................................................................; Index table: removing duplicate entries...; Index table init done. Write 10; Write 20; Write 60; Write 70; Write 80; Write 30; Write 40; Index table: counting k-mers...; ................................................................................................... 1 Mio. sequences processed; ....WARNING: Sequence (dbKey=5712154) contains only ATGC. It might be a nucleotide sequence.; ...................................................................WARNING: Sequence (dbKey=6387662) contains only ATGC. It might be a nucleotide sequence.; ............................ 2 Mio. sequences processed; ................................................................................................... 3 Mio. sequences processed; ................................................................................................... 4 Mio. sequences processed; ...................................................................; Index table: Masked residues: 48191892; Index table: fill...; ................................................................................................... 1 Mio. sequences processed; ................................................................................................... 2 Mio. sequences processed; ................................................................................................... 3 Mio. sequences processed; ................................................................................................... 4 Mio. sequences processed; ...................................................................; Index table: removing duplicate entries...; Index table init done. Write 11; Could not write to data file /; ```,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/3#issuecomment-251876135:4245,Mask,Masked,4245,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/3#issuecomment-251876135,1,['Mask'],['Masked']
Availability,".001; Seq. Id Threshold 	0.8; Realign hit 	false; Max Reject 	2147483647; Max Accept 	2147483647; Cluster mode 	0; Max depth connected component 	1000; Similarity type 	2; Single step clustering 	true; Cascaded clustering steps 	3; Remove Temporary Files 	false; Sets the MPI runner 	; Kmer per sequence 	20; Shift hash 	5; Rescore mode 	0; Remove hits by seq.id. and coverage 	false; In substitution scoring mode, performs global alignment along the diagonal	false. Set cluster settings automatic to s=1; Set cluster mode SET COVER.; Set cluster iterations to 1; Program call:; panproteome.db tmp/425628692068579862/clu_redundancy tmp/425628692068579862/linclust --cluster-mode 0 -v 3 --max-iterations 1000 --similarity-type 2 --threads 10 --sub-mat blosum62.out --alignment-mode 3 -e 0.001 --min-seq-id 0.8 -c 0.8 --cov-mode 0 --max-seq-len 32000 --max-seqs 20 --comp-bias-corr 0 --max-rejected 2147483647 --max-accept 2147483647 --pca 1 --pcb 1.5 --alph-size 13 --kmer-per-seq 20 --mask 0 -k 0 --hash-shift 5 --split-memory-limit 0 --rescore-mode 0 . MMseqs Version: 	GITDIR-NOTFOUND; Cluster mode 	0; Verbosity 	3; Max depth connected component 	1000; Similarity type 	2; Threads 	10; Sub Matrix 	blosum62.out; Add backtrace 	false; Alignment mode 	3; E-value threshold 	0.001; Seq. Id Threshold 	0.8; Coverage threshold 	0.8; Coverage Mode 	0; Max. sequence length 	32000; Max. results per query 	20; Compositional bias 	0; Realign hit 	false; Max Reject 	2147483647; Max Accept 	2147483647; Include identical Seq. Id. 	false; No preload 	false; Early exit 	false; Pseudo count a 	1; Pseudo count b 	1.5; Alphabet size 	13; Kmer per sequence 	20; Mask Residues 	0; K-mer size 	0; Shift hash 	5; Split Memory Limit 	0; Rescore mode 	0; Remove hits by seq.id. and coverage 	false; In substitution scoring mode, performs global alignment along the diagonal	false; Remove Temporary Files 	false; Sets the MPI runner 	. Program call:; panproteome.db tmp/425628692068579862/linclust/1362866627410240754",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/88#issuecomment-391976251:94084,mask,mask,94084,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/88#issuecomment-391976251,1,['mask'],['mask']
Availability,.WARNING: Sequence (dbKey=10870) contains only ATGC. It might be a nucleotide sequence.; .................................................................................................. 1 Mio. sequences processed; ................................................................................................... 2 Mio. sequences processed; ................................................................................................... 3 Mio. sequences processed; ................................................................................................... 4 Mio. sequences processed; ................................................................................................... 5 Mio. sequences processed; .......................................................................WARNING: Sequence (dbKey=5712154) contains only ATGC. It might be a nucleotide sequence.; ............................ 6 Mio. sequences processed; ........................; Index table: Masked residues: 40394498; Index table: fill...; ................................................................................................... 1 Mio. sequences processed; ................................................................................................... 2 Mio. sequences processed; ................................................................................................... 3 Mio. sequences processed; ................................................................................................... 4 Mio. sequences processed; ................................................................................................... 5 Mio. sequences processed; ................................................................................................... 6 Mio. sequences processed; ........................; Index table: removing duplicate entries...; Index table init done. Write 10; Write 20; Write 60; Could not write to data file /; ```; - Local indexing on 64GB node with no ,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/3#issuecomment-251733349:6189,Mask,Masked,6189,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/3#issuecomment-251733349,1,['Mask'],['Masked']
Availability,.db tmp/425628692068579862/input_step_redundancy . MMseqs Version:	GITDIR-NOTFOUND; Verbosity	3. Start writing to file tmp/425628692068579862/input_step_redundancy; Time for merging files: 0 h 0 m 0 s; Program call:; tmp/425628692068579862/input_step_redundancy tmp/425628692068579862/input_step_redundancy tmp/425628692068579862/pref_step0 --sub-mat blosum62.out -s 1 -k 0 --k-score 2147483647 --alph-size 21 --max-seq-len 32000 --max-seqs 20 --offset-result 0 --split 0 --split-mode 2 --split-memory-limit 0 -c 0.8 --cov-mode 0 --comp-bias-corr 0 --diag-score 0 --mask 1 --min-ungapped-score 0 --spaced-kmer-mode 1 --pca 1 --pcb 1.5 --threads 10 -v 3 . MMseqs Version: 	GITDIR-NOTFOUND; Sub Matrix 	blosum62.out; Sensitivity 	1; K-mer size 	0; K-score 	2147483647; Alphabet size 	21; Max. sequence length 	32000; Max. results per query 	20; Offset result 	0; Split DB 	0; Split mode 	2; Split Memory Limit 	0; Coverage threshold 	0.8; Coverage Mode 	0; Compositional bias 	0; Diagonal Scoring 	0; Mask Residues 	1; Minimum Diagonal score 	0; Include identical Seq. Id.	false; Spaced Kmer 	1; No preload 	false; Early exit 	false; Pseudo count a 	1; Pseudo count b 	1.5; Threads 	10; Verbosity 	3. Initialising data structures...; Using 10 threads.; Could not find precomputed index. Compute index.; Substitution matrices...; Use kmer size 6 and split 1 using Target split mode.; Needed memory (1294083635 byte) of total memory (365681560780 byte); Target database: tmp/425628692068579862/input_step_redundancy(Size: 77285); Query database type: Aminoacid; Target database type: Aminoacid; Time for init: 0 h 0 m 0s. Query database: tmp/425628692068579862/input_step_redundancy(size=77285); Process prefiltering step 1 of 1. Index table: counting k-mers...; .......; Index table: Masked residues: 509041; Index table: fill...; .......; Index table: removing duplicate entries...; Index table init done. DB statistic; Entries: 5293618; DB Size: 543761708 (byte); Avg Kmer Size: 0.0827128; Top 10 Kmer,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/88#issuecomment-391976251:106095,Mask,Mask,106095,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/88#issuecomment-391976251,1,['Mask'],['Mask']
Availability,.sh.h; -- Compile blastpgp.sh to /Users/moorer/Downloads/mmseqs2/src/generatedfiles/blastpgp.sh.h; -- Compile blosum100.out to /Users/moorer/Downloads/mmseqs2/src/generatedfiles/blosum100.out.h; -- Compile blosum30.out to /Users/moorer/Downloads/mmseqs2/src/generatedfiles/blosum30.out.h; -- Compile blosum35.out to /Users/moorer/Downloads/mmseqs2/src/generatedfiles/blosum35.out.h; -- Compile blosum40.out to /Users/moorer/Downloads/mmseqs2/src/generatedfiles/blosum40.out.h; -- Compile blosum45.out to /Users/moorer/Downloads/mmseqs2/src/generatedfiles/blosum45.out.h; -- Compile blosum50.out to /Users/moorer/Downloads/mmseqs2/src/generatedfiles/blosum50.out.h; -- Compile blosum55.out to /Users/moorer/Downloads/mmseqs2/src/generatedfiles/blosum55.out.h; -- Compile blosum60.out to /Users/moorer/Downloads/mmseqs2/src/generatedfiles/blosum60.out.h; -- Compile blosum62.out to /Users/moorer/Downloads/mmseqs2/src/generatedfiles/blosum62.out.h; -- Compile blosum65.out to /Users/moorer/Downloads/mmseqs2/src/generatedfiles/blosum65.out.h; -- Compile blosum70.out to /Users/moorer/Downloads/mmseqs2/src/generatedfiles/blosum70.out.h; -- Compile blosum75.out to /Users/moorer/Downloads/mmseqs2/src/generatedfiles/blosum75.out.h; -- Compile blosum80.out to /Users/moorer/Downloads/mmseqs2/src/generatedfiles/blosum80.out.h; -- Compile blosum85.out to /Users/moorer/Downloads/mmseqs2/src/generatedfiles/blosum85.out.h; -- Compile blosum90.out to /Users/moorer/Downloads/mmseqs2/src/generatedfiles/blosum90.out.h; -- Compile blosum95.out to /Users/moorer/Downloads/mmseqs2/src/generatedfiles/blosum95.out.h; -- Compile cascaded_clustering.sh to /Users/moorer/Downloads/mmseqs2/src/generatedfiles/cascaded_clustering.sh.h; -- Compile clustering.sh to /Users/moorer/Downloads/mmseqs2/src/generatedfiles/clustering.sh.h; -- Compile update_clustering.sh to /Users/moorer/Downloads/mmseqs2/src/generatedfiles/update_clustering.sh.h; -- Configuring done; -- Generating done; -- Build files have been written to,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/7#issuecomment-265028472:3290,Down,Downloads,3290,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/7#issuecomment-265028472,1,['Down'],['Downloads']
Availability,/5.7GiB(74%) CN:5 DL:111MiB ETA:13s]; [#156257 4.3GiB/5.7GiB(76%) CN:5 DL:111MiB ETA:12s]; [#156257 4.4GiB/5.7GiB(77%) CN:5 DL:111MiB ETA:11s]; [#156257 4.5GiB/5.7GiB(79%) CN:5 DL:111MiB ETA:10s]; [#156257 4.6GiB/5.7GiB(81%) CN:5 DL:111MiB ETA:9s]; [#156257 4.7GiB/5.7GiB(83%) CN:5 DL:111MiB ETA:8s]; [#156257 4.8GiB/5.7GiB(85%) CN:5 DL:111MiB ETA:7s]; [#156257 4.9GiB/5.7GiB(87%) CN:5 DL:111MiB ETA:6s]; [#156257 5.0GiB/5.7GiB(89%) CN:5 DL:111MiB ETA:5s]; [#156257 5.2GiB/5.7GiB(91%) CN:5 DL:111MiB ETA:4s]; [#156257 5.3GiB/5.7GiB(92%) CN:5 DL:111MiB ETA:3s]; [#156257 5.4GiB/5.7GiB(94%) CN:5 DL:111MiB ETA:2s]; [#156257 5.5GiB/5.7GiB(96%) CN:5 DL:111MiB ETA:1s]; [#156257 5.6GiB/5.7GiB(98%) CN:5 DL:111MiB]. 10/13 10:50:57 [NOTICE] Download complete: tmp/3093587253482177683/bacteria.tar. Download Results:; gid |stat|avg speed |path/URI; ======+====+===========+=======================================================; 156257|OK | 110MiB/s|tmp/3093587253482177683/bacteria.tar. Status Legend:; (OK):download completed. 10/13 10:50:57 [NOTICE] Downloading 1 item(s); [#8c18ae 81MiB/85MiB(95%) CN:3 DL:90MiB]. 10/13 10:50:58 [NOTICE] Download complete: tmp/3093587253482177683/archea.tar. Download Results:; gid |stat|avg speed |path/URI; ======+====+===========+=======================================================; 8c18ae|OK | 87MiB/s|tmp/3093587253482177683/archea.tar. Status Legend:; (OK):download completed. 10/13 10:50:58 [NOTICE] Downloading 1 item(s); [#e1fc78 82MiB/2.7GiB(2%) CN:5 DL:89MiB ETA:30s]; [#e1fc78 182MiB/2.7GiB(6%) CN:5 DL:95MiB ETA:27s]; [#e1fc78 283MiB/2.7GiB(10%) CN:5 DL:97MiB ETA:26s]; [#e1fc78 387MiB/2.7GiB(13%) CN:5 DL:99MiB ETA:24s]; [#e1fc78 497MiB/2.7GiB(17%) CN:5 DL:101MiB ETA:22s]; [#e1fc78 606MiB/2.7GiB(21%) CN:5 DL:103MiB ETA:21s]; [#e1fc78 709MiB/2.7GiB(25%) CN:5 DL:103MiB ETA:20s]; [#e1fc78 810MiB/2.7GiB(28%) CN:5 DL:103MiB ETA:19s]; [#e1fc78 913MiB/2.7GiB(32%) CN:5 DL:103MiB ETA:18s]; [#e1fc78 0.9GiB/2.7GiB(35%) CN:5 DL:103MiB ETA:17s]; [#e1fc78 1.0G,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/762#issuecomment-1761245149:3557,down,download,3557,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/762#issuecomment-1761245149,1,['down'],['download']
Availability,"/Struo2_122419461619/cluster_update/11607510948275416679/toBeClusteredSeparately /ebio/abt3_scratch/nyoungblut/Struo2_122419461619/cluster_update/11607510948275416679/cluster/3119053913462861916/linclust/8450400992607156393/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size 13 --min-seq-id 0.9 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale 0 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 12 --compressed 0 -v 3. kmermatcher /ebio/abt3_scratch/nyoungblut/Struo2_122419461619/cluster_update/11607510948275416679/toBeClusteredSeparately /ebio/abt3_scratch/nyoungblut/Struo2_122419461619/cluster_update/11607510948275416679/cluster/3119053913462861916/linclust/8450400992607156393/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size 13 --min-seq-id 0.9 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale 0 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 12 --compressed 0 -v 3. Database size: 6 type: Aminoacid; Reduced amino acid alphabet: (A S T) (C) (D B N) (E Q Z) (F Y) (G) (H) (I V) (K R) (L J M) (P) (W) (X). Generate k-mers list for 1 split; [=================================================================] 6 0s 1ms; Sort kmer 0h 0m 0s 0ms; Sort by rep. sequence 0h 0m 0s 0ms; Time for fill: 0h 0m 0s 0ms; Time for merging to pref: 0h 0m 0s 2ms; Time for processing: 0h 0m 0s 22ms; rescorediagonal /ebio/abt3_scratch/nyoungblut/Struo2_122419461619/cluster_update/11607510948275416679/toBeClusteredSeparately /ebio/abt3_scratch/nyoungblut/Struo2_122419461619/cluster_update/11607510948275416679/toBeClusteredSeparately /ebio/abt3_scratch/nyoungblut/Struo2_122419461619/cluster_update/11607510948275416679/cluster/3119053913462861916/linclust/8450400992607",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/333#issuecomment-663145167:8356,mask,mask,8356,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/333#issuecomment-663145167,2,['mask'],"['mask', 'mask-lower-case']"
Availability,"/home/linuxbrew/anaconda3/data/context_data.lib""; HH_LIB=""/home/linuxbrew/anaconda3/data/cs219.lib""; THREADS=4; SENSITIVITY=7.5; IDENTITY=0; COVERAGE=0.8; EVALUE=0.00001. CLU_MODE=1. FILE=""${BASE}.fa""; MMSEQDB=""${BASE}DB""; MMSEQPREF=""${BASE}PREFILTER""; MMSEQALN=""${BASE}ALN""; MMSEQCLU=""${BASE}CLU""; MMSEQMSA=""${BASE}MSA""; FILELOG=""job.log"". echo '#:: CREATEDB' &>> ${FILELOG} ;; mmseqs createdb ${FILE} ${MMSEQDB} &>> ${FILELOG}. echo '#:: PREFILTER' &>> ${FILELOG} ;; mmseqs prefilter ${MMSEQDB} ${MMSEQDB} ${MMSEQPREF} -s ${SENSITIVITY} --threads ${THREADS} &>> ${FILELOG}. echo '#:: ALING' &>> ${FILELOG} ;; mmseqs align ${MMSEQDB} ${MMSEQDB} ${MMSEQPREF} ${MMSEQALN} -e ${EVALUE} \; --min-seq-id ${IDENTITY} -c ${COVERAGE} --threads ${THREADS} &>> ${FILELOG}; echo '#:: CLUST' &>> ${FILELOG} ;; mmseqs clust ${MMSEQDB} ${MMSEQALN} ${MMSEQCLU} --cluster-mode ${CLU_MODE} --threads ${THREADS} &> ${FILELOG} &>> ${FILELOG}. echo '#:: RESULT2MSA' &>> ${FILELOG} ;; mmseqs result2msa ${MMSEQDB} ${MMSEQDB} ${MMSEQCLU} ${MMSEQMSA} --compress --threads ${THREADS} &>> ${FILELOG}. echo '#:: CREATE LINKS' &>> ${FILELOG} ;; ln -s ${MMSEQDB}_h ${MMSEQMSA}_header.ffdata &>> ${FILELOG}; ln -s ${MMSEQDB}_h.index ${MMSEQMSA}_header.ffindex &>> ${FILELOG}; ln -s ${MMSEQDB} ${MMSEQMSA}_sequence.ffdata &>> ${FILELOG}; ln -s ${MMSEQDB}.index ${MMSEQMSA}_sequence.ffindex &>> ${FILELOG}. echo '#:: BUILD HHBLITS COMPATIBLE' &>> ${FILELOG} ;; mpirun -np ${THREADS} cstranslate -i ${MMSEQMSA}_ca3m.ffdata -o ${MMSEQMSA}_cs219 \; -A ${HH_LIB} \; -D ${HH_CONTEXT_DATA} \; -x 0.3 -c 4 -I ca3m &>> ${FILELOG}; ```. Quiet the same of the previous one. If I change the last step to; ```; cstranslate -f -i ${MMSEQMSA}_ca3m.ffdata -o ${MMSEQMSA}_cs219 -A ${HH_LIB} -D ${HH_CONTEXT_DATA} -x 0.3 -c 4 -I ca3m; ```; I got; ```; Reading context library for pseudocounts from internal ...; Reading abstract state alphabet from internal ...; - 18:29:11.260 ERROR: In /opt/conda/conda-bld/hhsuite_1554456729008/work/src/ffindex",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/174#issuecomment-492826081:2504,echo,echo,2504,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/174#issuecomment-492826081,1,['echo'],['echo']
Availability,"/mmseqs_tax.db /ebio/abt3_scratch/nyoungblut/LLCDS_126702996474/mmseqs_tax/06/TMP/14652724320229658153/first /ebio/abt3_scratch/nyoungblut/LLCDS_126702996474/mmseqs_tax/06/TMP/14652724320229658153/tmp_hsp1 --alignment-mode 1 -e 1e-05 --max-rejected 5 --max-accept 30 --threads 8 -s 6 --max-seqs 200 --spaced-kmer-mode 1 --min-length 30 --max-length 32734 --orf-start-mode 1 --num-iterations 2 --start-sens 1 --sens-steps 3 --lca-search 1. prefilter /ebio/abt3_scratch/nyoungblut/LLCDS_126702996474/mmseqs_tax_query/06/seqs_db /ebio/abt3_scratch/nyoungblut/LLCDS_126702996474/mmseqs_tax_target/mmseqs_tax.db.idx /ebio/abt3_scratch/nyoungblut/LLCDS_126702996474/mmseqs_tax/06/TMP/14652724320229658153/tmp_hsp1/11598483508011826746/pref_0 --sub-mat nucl:nucleotide.out,aa:blosum62.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -s 6 -k 0 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 65535 --max-seqs 200 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 8 --compressed 0 -v 3. Index version: 16; Generated by: 13.45111; ScoreMatrix: VTML80.out; Query database size: 1075 type: Aminoacid; Target split mode. Searching through 16 splits; Estimated memory consumption: 8G; Target database size: 41195879 type: Aminoacid; Process prefiltering step 1 of 16. k-mer similarity threshold: 109; Starting prefiltering scores calculation (step 1 of 16); Query db start 1 to 1075; Target db start 1 to 2572505; [=================================================================] 1.08K 2s 989ms. 390.206187 k-mers per position; 423278 DB matches per sequence; 0 overflows; 0 queries produce too many hits (truncated result); 25 sequences passed prefiltering per query sequence; 26 median result list length; 0 sequences with 0 size result lists; Time for merging to pref_0_tmp_0: 0h",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/432#issuecomment-813242194:4542,mask,mask,4542,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/432#issuecomment-813242194,2,['mask'],"['mask', 'mask-lower-case']"
Availability,"/mmseqs_tax_query/06/seqs_db /ebio/abt3_scratch/nyoungblut/LLCDS_126702996474/mmseqs_tax_target/mmseqs_tax.db.idx /ebio/abt3_scratch/nyoungblut/LLCDS_126702996474/mmseqs_tax/06/TMP/14652724320229658153/tmp_hsp1/11598483508011826746/aln_0 /ebio/abt3_scratch/nyoungblut/LLCDS_126702996474/mmseqs_tax/06/TMP/14652724320229658153/tmp_hsp1/11598483508011826746/profile_0 --sub-mat nucl:nucleotide.out,aa:blosum62.out -e 1e-05 --mask-profile 1 --e-profile 0.1 --comp-bias-corr 1 --wg 0 --allow-deletion 0 --filter-msa 1 --max-seq-id 0.9 --qid 0 --qsc -20 --cov 0 --diff 1000 --pca 0 --pcb 1.5 --db-load-mode 0 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --threads 8 --compressed 0 -v 3. Index version: 16; Generated by: 13.45111; ScoreMatrix: VTML80.out; Query database size: 1075 type: Aminoacid; Target database size: 41195879 type: Aminoacid; [========================================Segmentation fault; Error: Create profile died; Error: First search died; ```. Note that sometimes when I re-run the command, I instead get the error:. ```; Index version: 16; Generated by: 13.45111; ScoreMatrix: VTML80.out; Query database size: 1075 type: Aminoacid; Target database size: 41195879 type: Aminoacid; [=======================================================]; free(): invalid next size (normal); Aborted; Error: Create profile died; Error: First search died; ```. System memory should not be the cause; I've got ~800 Gb free. . Maybe I'm missing a ""hidden"" input file (ie., one of the files associated with the main input files, which are generally no mentioned in any of the docs). The input files that are present:. * /ebio/abt3_scratch/nyoungblut/LLCDS_126702996474/mmseqs_tax_query/06/seqs_db; * /ebio/abt3_scratch/nyoungblut/LLCDS_126702996474/mmseqs_tax_query/06/seqs_db.dbtype; * /ebio/abt3_scratch/nyoungblut/LLCDS_126702996474/mmseqs_tax_query/06/seqs_db.index; * /ebio/abt3_scratch/nyoungblut/LLCDS_126702996474/mmseqs_tax_query/06/seqs_db_h; * /ebio/abt3_scratch/nyoungblut/LLCDS_126702996",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/432#issuecomment-813242194:17795,error,error,17795,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/432#issuecomment-813242194,1,['error'],['error']
Availability,"/tmp_taxonomy/7007534916548188170/tmp_hsp1; search tmp//15404483323509150572/taxonomy_tmp/7054630145456894787/orfs_filter MicroEuk100.eukaryota_odb10 tmp//15404483323509150572/taxonomy_tmp/7054630145456894787/tmp_taxonomy/7007534916548188170/first tmp//15404483323509150572/taxonomy_tmp/7054630145456894787/tmp_taxonomy/7007534916548188170/tmp_hsp1 --alignment-mode 1 -e 1 --max-rejected 5 --max-accept 30 -s 2 --spaced-kmer-mode 1 --min-length 30 --max-length 32734 --orf-start-mode 1 --lca-search 1 --remove-tmp-files 1. prefilter tmp//15404483323509150572/taxonomy_tmp/7054630145456894787/orfs_filter MicroEuk100.eukaryota_odb10.idx tmp//15404483323509150572/taxonomy_tmp/7054630145456894787/tmp_taxonomy/7007534916548188170/tmp_hsp1/11550195074827057389/pref_0 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --seed-sub-mat 'aa:VTML80.out,nucl:nucleotide.out' -k 0 --k-score seq:2147483647,prof:2147483647 --alph-size aa:21,nucl:5 --max-seq-len 65535 --max-seqs 300 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --comp-bias-corr-scale 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-prob 0.9 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --threads 128 --compressed 0 -v 3 -s 2.0. Index version: 16; Generated by: 14.7e284; ScoreMatrix: VTML80.out; Query database size: 9 type: Aminoacid; Estimated memory consumption: 7G; Target database size: 713072 type: Aminoacid; Process prefiltering step 1 of 1. k-mer similarity threshold: 145; Starting prefiltering scores calculation (step 1 of 1); Query db start 1 to 9; Target db start 1 to 713072; [=================================================================] 100.00% 9 0s 6ms. 10.636821 k-mers per position; 10265 DB matches per sequence; 0 overflows; 0 queries produce too many hits (truncated result); 66 sequences passed prefiltering per query sequence; 36 me",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/779#issuecomment-1872491640:9513,mask,mask,9513,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/779#issuecomment-1872491640,2,['mask'],"['mask', 'mask-prob']"
Availability,"0 --alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-len 65535 --max-seqs 300 --comp-bias-corr 1 --max-rejected 2147483647 --max-accept 2147483647 --pca 1 --pcb 1.5 --alph-size 13 --kmer-per-seq 80 --mask 0 -k 0 --hash-shift 5 --split-memory-limit 0 --skip-n-repeat-kmer 0 --rescore-mode 0 . MMseqs Version: 	dfb5e6eb53ee034f02cc08d15513fb5ccce7cce7; Cluster mode 	0; Verbosity 	3; Max depth connected component 	1000; Similarity type 	2; Threads 	36; Sub Matrix 	blosum62.out; Add backtrace 	false; Alignment mode 	3; E-value threshold 	0.001; Seq. Id Threshold 	0; Alternative alignments 	0; Coverage threshold 	0.8; Coverage Mode 	0; Max. sequence length 	65535; Max. results per query 	300; Compositional bias 	1; Realign hit 	false; Max Reject 	2147483647; Max Accept 	2147483647; Include identical Seq. Id. 	false; No preload 	false; Early exit 	false; Pseudo count a 	1; Pseudo count b 	1.5; Alphabet size 	13; Kmer per sequence 	80; Mask Residues 	0; K-mer size 	0; Shift hash 	5; Split Memory Limit 	0; Include only extendable 	false; Skip sequence with n repeating k-mers 	0; Rescore mode 	0; Remove hits by seq.id. and coverage 	false; In substitution scoring mode, performs global alignment along the diagonal	false; Remove Temporary Files 	false; Sets the MPI runner 	. Program call:; panproteome.db /tmp/clu//9559457551393989073/linclust/16641318581476709947/pref --sub-mat blosum62.out --alph-size 13 --min-seq-id 0 --kmer-per-seq 80 --mask 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 5 --split-memory-limit 0 --skip-n-repeat-kmer 0 --threads 36 -v 3 . MMseqs Version: 	dfb5e6eb53ee034f02cc08d15513fb5ccce7cce7; Sub Matrix 	blosum62.out; Alphabet size 	13; Seq. Id Threshold 	0; Kmer per sequence 	80; Mask Residues 	0; Coverage Mode 	0; K-mer size 	10; Coverage threshold 	0.8; Max. sequence length 	65535; Shift hash 	5; Split Memory Limit 	0; Include only extendable 	false; Skip sequence with n repeating k-mers	0; Threads 	36; Verbosity 	3. Database type: Aminoacid; V -> I",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/88#issuecomment-401138700:22679,Mask,Mask,22679,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/88#issuecomment-401138700,1,['Mask'],['Mask']
Availability,"0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0-9905_Chr45|568425:56822533|53080,53342+,53347+,53350+,53351+,53353+,53354+,53355+,53357+,53359+,53361+,53362+,53365+,53352567+,53369+,53370+,53372+,53373+,53374+,53375+,53378+,53379+,53380+,53382+,53390+,53391+,53393+,53322494+,53397+,53423401+,53222402+,53444203+,53404+,53405+,53408+,53409; >16234445566.0.0.0.0.0.0.0.0.0.1.0.0.0.0.0.0.0.0.0.0.0.0.0.0-10024_Chr111|648475:649290|62018,62021+,62022+,62027+,62029+,62030+,62032+,62033+,62035+,62036+,62038+,62039+,62040+,644043+,62044+,62046+,62047+,62050+,62051+,62052+,62071+,62073+,62074+,62076+,62078+,62079+,62080+,620312+,62084+,62086+,62087+,62088+,62089+,62090+,62091+,62093+,62094+,62095+,62096+,62098+,62099+,621111+,62103+,62104+,62105+,62107+,62108+,62110+,62112+,62113+,62114+,62117+,62119+,62120+,62121+,62123+,62125+,62127+,62128+,62129+,62132+,62133+,62135+,62136+,62139+,62140+,62141+,62142+,62144+,62146+,62147+,62148+,62149+,62151+,62152+,62154+,62155+,62157+,62159+,62160+,62161+,62163+,62165+,62166+,62168+,62169+,62171+,62172+,62173+,62174+,62177+,62178+,62179+,62182+,62188+,62189+,62191+,62193+,62194+,62195+,62196+,62197+,62198+,62199+,62201+,62202+,62204+,62205+,62207+,62208+,62210+,62213+,62214+,62215+,62216+,62217+,62219+,62220+,62221+,62223+,62224+,62225+,62227+,62381+,62383+,62384+,62386+,62387+,62389+,62390+,62391+,62392+,62394+,62395+,62396+,62398+,62400+,62401+,62403+,62479+,62480+,62482+,62483+,62485+,62486+,62487+,62488+,62490+,62491+,62493+,62494+,62496+,62499+,62500+,62502+,62503+,62505+,62506+,62507+,62509+,62511+,62513+,62514+,62516+,62517+,62519+,62520+,62521+,62522+,62524+,62526+,62527+,62528+,62529+,62530+,62534+,62535+,62536+,62537+,62539+,62541+,62542+,62543+,62544+,62547+,62548+,62549+,62550+,62551+,62553+,62555+,62556+,62558+,62560+,62561+,62562+,62563+,62564+,62565+,62567+,62568+,62569+,62571+,62572+,62574+,62575+,62577+,62578+,62580+,62582+,62583+,62584+,62586+,62588+,62589+,62591+,62592+,61770; ```. The qheader bypass seems to issue the same error :-(",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/471#issuecomment-878872574:5158,error,error,5158,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/471#issuecomment-878872574,1,['error'],['error']
Availability,"0.001; Seq. id. threshold 	0; Min alignment length 	0; Seq. id. mode 	0; Alternative alignments 	0; Coverage threshold 	0; Coverage mode 	0; Max sequence length 	65535; Compositional bias 	1; Max reject 	2147483647; Max accept 	2147483647; Include identical seq. id. 	false; Preload mode 	0; Pseudo count a 	1; Pseudo count b 	1.5; Score bias 	0; Realign hits 	false; Realign score bias 	-0.2; Realign max seqs 	2147483647; Gap open cost 	nucl:5,aa:11; Gap extension cost 	nucl:2,aa:1; Zdrop 	40; Seed substitution matrix 	nucl:nucleotide.out,aa:VTML80.out; Sensitivity 	0.5; k-mer length 	0; k-score 	2147483647; Alphabet size 	nucl:5,aa:21; Max results per query 	300; Split database 	0; Split mode 	0; Split memory limit 	0; Diagonal scoring 	true; Exact k-mer matching 	0; Mask residues 	1; Mask lower case residues 	0; Minimum diagonal score 	15; Spaced k-mers 	1; Spaced k-mer pattern 	; Local temporary path 	; Rescore mode 	0; Remove hits by seq. id. and coverage 	false; Sort results 	0; Mask profile 	1; Profile E-value threshold 	0.001; Global sequence weighting 	false; Allow deletions 	false; Filter MSA 	1; Maximum seq. id. threshold 	0.9; Minimum seq. id. 	0; Minimum score per column 	-20; Minimum coverage 	0; Select N most diverse seqs 	1000; Min codons in orf 	30; Max codons in length 	32734; Max orf gaps 	2147483647; Contig start mode 	2; Contig end mode 	2; Orf start mode 	1; Forward frames 	1,2,3; Reverse frames 	1,2,3; Translation table 	1; Translate orf 	0; Use all table starts 	false; Offset of numeric ids 	0; Create lookup 	0; Add orf stop 	false; Overlap between sequences 	0; Sequence split mode 	1; Header split mode 	0; Chain overlapping alignments 	0; Merge query 	1; Search type 	0; Search iterations 	1; Start sensitivity 	4; Search steps 	1; Exhaustive search mode 	false; Filter results during exhaustive search	0; Strand selection 	1; LCA search mode 	false; Disk space limit 	0; MPI runner 	; Force restart with latest tmp 	false; Remove temporary files 	tru",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/422#issuecomment-795325591:1614,Mask,Mask,1614,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/422#issuecomment-795325591,1,['Mask'],['Mask']
Availability,"000562_0 mmseqs_dir/profile/Tenericutes_profile mmseqs_dir/search/1000562_0_search_Tenericute tmp; Program call:; search query_dbs/1000562_0 mmseqs_dir/profile/Tenericutes_profile mmseqs_dir/search/1000562_0_search_Tenericute tmp . MMseqs Version: da6c1a5a7be5d82719f796b85ce9cbacf9f2162c-MPI; Sub Matrix blosum62.out; Add backtrace false; Alignment mode 2; E-value threshold 0.001; Seq. Id Threshold 0; Min. alignment length 0; Seq. Id. Mode 0; Alternative alignments 0; Coverage threshold 0; Coverage Mode 0; Max. sequence length 65535; Max. results per query 300; Compositional bias 1; Realign hit false; Max Reject 2147483647; Max Accept 2147483647; Include identical Seq. Id. false; Preload mode 0; Pseudo count a 1; Pseudo count b 1.5; Score bias 0; Gap open cost 11; Gap extension cost 1; Threads 8; Compressed 0; Verbosity 3; Sensitivity 5.7; K-mer size 5; K-score 2147483647; Alphabet size 21; Offset result 0; Split DB 0; Split mode 2; Split Memory Limit 0; Diagonal Scoring 1; Exact k-mer matching 0; Mask Residues 1; Minimum Diagonal score 15; Spaced Kmer 1; Spaced k-mer pattern ; Local temporary path ; Rescore mode 0; Remove hits by seq.id. and coverage false; Sort results 0; In substitution scoring mode, performs global alignment along the diagonal false; Mask profile 1; Profile e-value threshold 0.1; Use global sequence weighting false; Filter MSA 1; Maximum sequence identity threshold 0.9; Minimum seq. id. 0; Minimum score per column -20; Minimum coverage 0; Select n most diverse seqs 1000; Omit Consensus false; Min codons in orf 30; Max codons in length 32734; Max orf gaps 2147483647; Contig start mode 2; Contig end mode 2; Orf start mode 1; Forward Frames 1,2,3; Reverse Frames 1,2,3; Translation Table 1; Use all table starts false; Offset of numeric ids 0; Add Orf Stop false; Number search iterations 1; Start sensitivity 4; Search steps 1; Run a seq-profile search in slice mode false; Strand selection 1; Disk space limit 0; Sets the MPI runner mpirun --pernode; Fo",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/164#issuecomment-463134521:1299,Mask,Mask,1299,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/164#issuecomment-463134521,1,['Mask'],['Mask']
Availability,"001 pc77 0 Jan 27 16:54 GTDB_h; -rw-r--r-- 1 gnii0001 pc77 4 Jan 27 16:54 GTDB_h.dbtype; -rw-r--r-- 1 gnii0001 pc77 0 Jan 27 16:54 GTDB_h.index; -rw-r--r-- 1 gnii0001 pc77 0 Jan 27 16:54 GTDB.index; -rw-r--r-- 1 gnii0001 pc77 0 Jan 27 17:33 GTDB_mapping; -rw-r--r-- 1 gnii0001 pc77 0 Jan 27 16:54 GTDB.source; -rw-r--r-- 1 gnii0001 pc77 25771406 Jan 27 17:33 GTDB_taxonomy. # slurm error; awk: cmd. line:1: fatal: cannot open file `/home/gnii0001/pc77/scratch_nobackup/Database/mmseqs_formatted/GTDB.lookup' for reading: No such file or directory. # slurm standard output:; ....; Download Results:; gid |stat|avg speed |path/URI; ======+====+===========+=======================================================; 94ce2b|OK | 88MiB/s|/home/gnii0001/pc77/scratch_nobackup/Database/mmseqs_formatted/tmp/13846894499670505008/bac120_taxonomy.tsv. Status Legend:; (OK):download completed. 01/27 17:33:08 [NOTICE] Downloading 1 item(s). 01/27 17:33:09 [NOTICE] Download complete: /home/gnii0001/pc77/scratch_nobackup/Database/mmseqs_formatted/tmp/13846894499670505008/ar53_taxonomy.tsv. Download Results:; gid |stat|avg speed |path/URI; ======+====+===========+=======================================================; 13f000|OK | 6.3MiB/s|/home/gnii0001/pc77/scratch_nobackup/Database/mmseqs_formatted/tmp/13846894499670505008/ar53_taxonomy.tsv. Status Legend:; (OK):download completed.; Create directory /home/gnii0001/pc77/scratch_nobackup/Database/mmseqs_formatted/tmp/13846894499670505008/taxdb; createtaxdb /home/gnii0001/pc77/scratch_nobackup/Database/mmseqs_formatted/GTDB /home/gnii0001/pc77/scratch_nobackup/Database/mmseqs_formatted/tmp/13846894499670505008/taxdb --ncbi-tax-dump /home/gnii0001/pc77/scratch_nobackup/Database/mmseqs_formatted/tmp/13846894499670505008/taxonomy --tax-mapping-file /home/gnii0001/pc77/scratch_nobackup/Database/mmseqs_formatted/tmp/13846894499670505008/taxonomy/mapping_genomes --tax-mapping-mode 1 --threads 128 -v 3 . Loading nodes file ... Done, got 113318 nodes; L",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/758#issuecomment-1913045806:1381,Down,Download,1381,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/758#issuecomment-1913045806,1,['Down'],['Download']
Availability,"001; Seq. id. threshold 0; Min alignment length 0; Seq. id. mode 0; Alternative alignments 0; Coverage threshold 0; Coverage mode 0; Max sequence length 65535; Compositional bias 1; Max reject 2147483647; Max accept 2147483647; Include identical seq. id. false; Preload mode 0; Pseudo count a 1; Pseudo count b 1.5; Score bias 0; Realign hits false; Realign score bias -0.2; Realign max seqs 2147483647; Gap open cost nucl:5,aa:11; Gap extension cost nucl:2,aa:1; Zdrop 40; Threads 96; Compressed 1; Verbosity 3; Seed substitution matrix nucl:nucleotide.out,aa:VTML80.out; Sensitivity 6; k-mer length 0; k-score 2147483647; Alphabet size nucl:5,aa:21; Max results per query 300; Split database 0; Split mode 2; Split memory limit 589824T; Diagonal scoring true; Exact k-mer matching 0; Mask residues 1; Mask lower case residues 0; Minimum diagonal score 15; Spaced k-mers 1; Spaced k-mer pattern ; Local temporary path ; Rescore mode 0; Remove hits by seq. id. and coverage false; Sort results 0; Mask profile 1; Profile E-value threshold 0.1; Global sequence weighting false; Allow deletions false; Filter MSA 1; Maximum seq. id. threshold 0.9; Minimum seq. id. 0; Minimum score per column -20; Minimum coverage 0; Select N most diverse seqs 1000; Min codons in orf 30; Max codons in length 32734; Max orf gaps 2147483647; Contig start mode 2; Contig end mode 2; Orf start mode 1; Forward frames 1,2,3; Reverse frames 1,2,3; Translation table 1; Translate orf 0; Use all table starts true; Offset of numeric ids 0; Create lookup 0; Add orf stop false; Overlap between sequences 0; Sequence split mode 1; Header split mode 0; Chain overlapping alignments 0; Merge query 1; Search type 0; Search iterations 1; Start sensitivity 4; Search steps 1; Exhaustive search mode false; Filter results during exhaustive search 0; Strand selection 1; LCA search mode false; Disk space limit 0; MPI runner ; Force restart with latest tmp false; Remove temporary files false. prefilter query_db/db /fsx/scratch/mmse",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/438#issuecomment-1176243510:1978,Mask,Mask,1978,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/438#issuecomment-1176243510,1,['Mask'],['Mask']
Availability,"0225373504351/tmp_hsp1/9650299475897910544/aln_0 \; > /ebio/abt3_scratch/nyoungblut/LLCDS_126702996474/mmseqs_tax/09/TMP/1355100225373504351/tmp_hsp1/9650299475897910544/profile_0 \; > --sub-mat nucl:nucleotide.out,aa:blosum62.out -e 1e-05 --mask-profile 1 --e-profile 0.1 --comp-bias-corr 1 --wg 0 --allow-deletion 0 \; > --filter-msa 1 --max-seq-id 0.9 --qid 0 --qsc -20 --cov 0 --diff 1000 --pca 0 --pcb 1.5 --db-load-mode 0 --gap-open nucl:5,aa:11 \; > --gap-extend nucl:2,aa:1 --threads 8 --compressed 0 -v 3; result2profile /ebio/abt3_scratch/nyoungblut/LLCDS_126702996474/mmseqs_tax_query/09/seqs_db /ebio/abt3_scratch/nyoungblut/LLCDS_126702996474/mmseqs_tax_target/mmseqs_tax.db /ebio/abt3_scratch/nyoungblut/LLCDS_126702996474/mmseqs_tax/09/TMP/1355100225373504351/tmp_hsp1/9650299475897910544/aln_0 /ebio/abt3_scratch/nyoungblut/LLCDS_126702996474/mmseqs_tax/09/TMP/1355100225373504351/tmp_hsp1/9650299475897910544/profile_0 --sub-mat nucl:nucleotide.out,aa:blosum62.out -e 1e-05 --mask-profile 1 --e-profile 0.1 --comp-bias-corr 1 --wg 0 --allow-deletion 0 --filter-msa 1 --max-seq-id 0.9 --qid 0 --qsc -20 --cov 0 --diff 1000 --pca 0 --pcb 1.5 --db-load-mode 0 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --threads 8 --compressed 0 -v 3. MMseqs Version: 	a6cab565c98376623e82c3a04d186219d4c2f10c; Substitution matrix 	nucl:nucleotide.out,aa:blosum62.out; E-value threshold 	1e-05; Mask profile 	1; Profile E-value threshold 	1e-05; Compositional bias 	1; Global sequence weighting 	false; Allow deletions 	false; Filter MSA 	1; Maximum seq. id. threshold	0.9; Minimum seq. id. 	0; Minimum score per column 	-20; Minimum coverage 	0; Select N most diverse seqs	1000; Pseudo count a 	0; Pseudo count b 	1.5; Preload mode 	0; Gap open cost 	nucl:5,aa:11; Gap extension cost 	nucl:2,aa:1; Threads 	8; Compressed 	0; Verbosity 	3. Query database size: 1151 type: Aminoacid; Target database size: 41195879 type: Aminoacid; =================================================================",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/432#issuecomment-814682245:1316,mask,mask-profile,1316,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/432#issuecomment-814682245,1,['mask'],['mask-profile']
Availability,"023_06/tmp/input_step2 /home/outdir/2023_06/tmp/clu_uniclust30/13156544047496927710/clu_redundancy /home/outdir/2023_06/tmp/clu_uniclust30/13156544047496927710/linclust --cluster-mode 0 --max-iter; ations 1000 --similarity-type 2 --threads 6 --compressed 0 -v 3 --sub-mat 'aa:blosum62.out,nucl:nucle; otide.out' -a 0 --alignment-mode 3 --alignment-output-mode 0 --wrapped-scoring 0 -e 0.001 --min-seq-i; d 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-len 65535 --comp-bias-c; orr 1 --comp-bias-corr-scale 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0; --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --sco; re-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --corr-score-weight 0 -; -gap-open aa:11,nucl:5 --gap-extend aa:1,nucl:2 --zdrop 40 --alph-size aa:13,nucl:5 --kmer-per-seq 21; --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-pr; ob 0.9 --mask-lower-case 0 -k 0 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --; ignore-multi-kmer 0 --rescore-mode 0 --filter-hits 0 --sort-results 0 --remove-tmp-files 0 --force-re; use 0 ; ; kmermatcher /home/outdir/2023_06/tmp/input_step2 /home/outdir/2023_06/tmp/clu_uniclust30/13156544047496927710/linclust/2296487886038157831/pref --; sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --alph-size aa:13,nucl:5 --min-seq-id 0 --kmer-per-seq ; 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-prob 0.9 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-mem; ory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 6 --compressed 0 -v 3 . kmermatcher /home/outdir/2023_06/tmp/input_step2 /home/outdir/2023_06/tmp/clu_uniclust30/13156544047496927710/linclust/2296487886038157831/pref --; sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --alph-size aa:13,nu",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/700#issuecomment-1589819536:6431,mask,mask,6431,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/700#issuecomment-1589819536,2,['mask'],"['mask', 'mask-pr']"
Availability,"03396435525/tmp_taxonomy/8588819485854123580/tmp_hsp1/1723886274502240713/pref_0 --sub-mat nucl:nucleotide.out,aa:blosum62.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -k 0 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 65535 --max-seqs 300 --split 0 --split-mode 0 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 26 --compressed 0 -v 3 -s 0.5 . Query database size: 695256546 type: Aminoacid; Target split mode. Searching through 6 splits; Estimated memory consumption: 232G; Target database size: 353572663 type: Aminoacid; Process prefiltering step 1 of 6. Index table k-mer threshold: 180 at k-mer size 7 ; Index table: counting k-mers; [=================================================================] 58.92M 1h 27m 43s 365ms; Index table: Masked residues: 338212106; Index table: fill; [=================================================================] 58.92M 2h 48m 44s 23ms; Index statistics; Entries: 10047647313; DB size: 67258 MB; Avg k-mer size: 7.849724; Top 10 k-mers; FSHAGSI	169128; AFRNNFW	161115; APMFPNN	145858; GGGWLLM	137963; NNSWLPS	137460; AHFMIMV	126820; MPMGGNW	126274; TMLDRNT	108816; TGTYPSS	94201; GDQYNVT	84229; Time for index table init: 4h 18m 41s 415ms; k-mer similarity threshold: 180; Starting prefiltering scores calculation (step 1 of 6); Query db start 1 to 695256546; Target db start 1 to 58919300; [=================================================================] 695.26M 61h 14m 42s 623ms. 2.307739 k-mers per position; 1254 DB matches per sequence; 0 overflows; 0 queries produce too many hits (truncated result); 11 sequences passed prefiltering per query sequence; 1 median result list length; 275899073 sequences with 0 size result lists; Time for merging to pref_0_tmp_0: 0h 16m 3s 814ms; Time for merging to pref_0_tmp_0_tmp: 0h 26m 19s 3",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/422#issuecomment-795325591:31551,Mask,Masked,31551,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/422#issuecomment-795325591,1,['Mask'],['Masked']
Availability,0; Coverage threshold 	0; Max. sequence length 	32000; Max. results per query 	300; Compositional bias 	0; Profile 	false; Realign hit 	false; Max Reject 	2147483647; Max Accept 	2147483647; Include identical Seq. Id. 	false; Threads 	4; Verbosity 	3; Sensitivity 	7.5; K-mer size 	0; K-score 	2147483647; Alphabet size 	21; Offset result 	0; Split DB 	0; Split mode 	2; Diagonal Scoring 	1; Mask Residues 	0; Minimum Diagonal score 	15; Spaced Kmer 	1; Profile e-value threshold 	0.001; Use global sequence weighting 	false; Maximum sequence identity threshold	0.9; Minimum seq. id. 	0; Minimum score per column 	-20; Minimum coverage 	0; Select n most diverse seqs 	100; Pseudo count a 	1; Pseudo count b 	1.5; Number search iterations 	1; Start sensitivity 	4; sensitivity step size 	1; Sets the MPI runner 	. /...; /...; Program call:; DB DB /.../tmp/pref_7 --sub-mat blosum62.out -k 0 --k-score 2147483647 --alph-size 21 --max-seq-len 32000 --max-seqs 300 --offset-result 0 --split 0 --split-mode 2 -c 0 --comp-bias-corr 0 --diag-score 1 --mask 0 --min-ungapped-score 15 --spaced-kmer-mode 1 --threads 4 -v 3 -s 7 . MMseqs Version: 	e2c8166b292d5e65271887cf4af568f32b346dd2; Sub Matrix 	blosum62.out; Sensitivity 	7; K-mer size 	0; K-score 	2147483647; Alphabet size 	21; Max. sequence length 	32000; Profile 	false; Max. results per query 	300; Offset result 	0; Split DB 	0; Split mode 	2; Coverage threshold 	0; Compositional bias 	0; Diagonal Scoring 	1; Mask Residues 	0; Minimum Diagonal score 	15; Include identical Seq. Id.	false; Spaced Kmer 	1; Threads 	4; Verbosity 	3. Initialising data structures...; Using 4 threads. Use index DB.sk6; Index version: 774909490; KmerSize: 6; AlphabetSize: 21; Skip: 0; Split: 0; Type: 1; Spaced: 1; Query database: DB(size=105589); Target database: DB(size=105589); Use kmer size 6 and split 1 using split mode 0; Needed memory (1603741184 byte) of total memory (8340369408 byte); Substitution matrices...; Time for init: 0 h 0 m 1s. Process prefilte,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/12#issuecomment-275642021:2910,mask,mask,2910,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/12#issuecomment-275642021,1,['mask'],['mask']
Availability,"0f129537ab954340eb44d8e99e4d69a1dfd3; Substitution matrix 	nucl:nucleotide.out,aa:blosum62.out; Add backtrace 	false; Alignment mode 	3; Alignment mode 	0; Allow wrapped scoring 	false; E-value threshold 	10000; Seq. id. threshold 	0; Min alignment length 	0; Seq. id. mode 	0; Alternative alignments 	0; Coverage threshold 	0; Coverage mode 	0; Max sequence length 	65535; Compositional bias 	1; Max reject 	2147483647; Max accept 	2147483647; Include identical seq. id. 	false; Preload mode 	0; Pseudo count a 	1; Pseudo count b 	1.5; Score bias 	0; Realign hits 	false; Realign score bias 	-0.2; Realign max seqs 	2147483647; Gap open cost 	nucl:5,aa:11; Gap extension cost 	nucl:2,aa:1; Zdrop 	40; Threads 	16; Compressed 	1; Verbosity 	3; Seed substitution matrix 	nucl:nucleotide.out,aa:VTML80.out; Sensitivity 	4; k-mer length 	0; k-score 	2147483647; Alphabet size 	nucl:5,aa:21; Max results per query 	4000; Split database 	0; Split mode 	2; Split memory limit 	0; Diagonal scoring 	true; Exact k-mer matching 	0; Mask residues 	1; Mask lower case residues 	0; Minimum diagonal score 	15; Spaced k-mers 	1; Spaced k-mer pattern 	; Local temporary path 	; Rescore mode 	0; Remove hits by seq. id. and coverage 	false; Sort results 	0; Mask profile 	1; Profile E-value threshold 	0.001; Global sequence weighting 	false; Allow deletions 	false; Filter MSA 	1; Maximum seq. id. threshold 	0.9; Minimum seq. id. 	0; Minimum score per column 	-20; Minimum coverage 	0; Select N most diverse seqs 	1000; Min codons in orf 	30; Max codons in length 	32734; Max orf gaps 	2147483647; Contig start mode 	2; Contig end mode 	2; Orf start mode 	1; Forward frames 	1,2,3; Reverse frames 	1,2,3; Translation table 	1; Translate orf 	0; Use all table starts 	false; Offset of numeric ids 	0; Create lookup 	0; Add orf stop 	false; Overlap between sequences 	0; Sequence split mode 	1; Header split mode 	0; Chain overlapping alignments 	0; Merge query 	1; Search type 	0; Search iterations 	2; Start sensi",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/460#issuecomment-869008777:1699,Mask,Mask,1699,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/460#issuecomment-869008777,2,['Mask'],['Mask']
Availability,"0m 0s 0ms; Time for processing: 0h 0m 0s 0ms; prefilter tmp//538598962955004214/input_step_redundancy tmp//538598962955004214/input_step_redundancy tmp//538598962955004214/pref_step0 --sub-mat nucl:nucleotide.out,aa:blosum62.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -s 1 -k 0 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 65535 --max-seqs 20 --split 0 --split-mode 2 --split-memory-limit 0 -c 0.8 --cov-mode 0 --comp-bias-corr 0 --diag-score 0 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 0 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 16 --compressed 0 -v 3. Query database size: 276 type: Aminoacid; Estimated memory consumption: 978M; Target database size: 276 type: Aminoacid; Index table k-mer threshold: 154 at k-mer size 6; Index table: counting k-mers; [=================================================================] 100.00% 276 0s 26ms; Index table: Masked residues: 0; Index table: fill; [=================================================================] 100.00% 276 0s 6ms; Index statistics; Entries: 1187; DB size: 488 MB; Avg k-mer size: 0.000019; Top 10 k-mers; XXXXXX 7; XXXXXX 4; XXXXXX 4; XXXXXX 4; XXXXXX 4; XXXXXX 3; XXXXXX 3; XXXXXX 3; XXXXXX 3; XXXXXX 3; Time for index table init: 0h 0m 1s 58ms; Process prefiltering step 1 of 1. k-mer similarity threshold: 154; Starting prefiltering scores calculation (step 1 of 1); Query db start 1 to 276; Target db start 1 to 276; [=================================================================] 100.00% 276 0s 31ms. 1.374916 k-mers per position; 5 DB matches per sequence; 0 overflows; 0 queries produce too many hits (truncated result); 1 sequences passed prefiltering per query sequence; 1 median result list length; 0 sequences with 0 size result lists; Time for merging to pref_step0: 0h 0m 0s 2ms; Time for processing: 0h 0m 1s 665ms; align tmp//538598962955004214/input_step_redundancy tmp//538598962955004214/input_step_redunda",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-773234853:11858,Mask,Masked,11858,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-773234853,1,['Mask'],['Masked']
Availability,"0m 0s 27ms; prefilter tmp1/15089590555632328148/search_tmp/16020913209305565279/q_orfs_aa pfama_20230914/pfam-a-full tmp1/15089590555632328148/search_tmp/16020913209305565279/search/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -s 5.7 -k 5 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 65535 --max-seqs 300 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 12 --compressed 1 -v 3 . Query database size: 0 type: Aminoacid; Estimated memory consumption: 557M; Target database size: 19482 type: Profile; Index table k-mer threshold: 90 at k-mer size 5 ; Index table: counting k-mers; [=================================================================] 100.00% 19.48K 4s 492ms ; Index table: Masked residues: 0; Index table: fill; [=================================================================] 100.00% 19.48K 11s 88ms ; Index statistics; Entries: 454766207; DB size: 2633 MB; Avg k-mer size: 111.350382; Top 10 k-mers; RRRRR 1414; QQQQQ 1135; RRRRQ 985; SPPPP 965; QRRRR 962; PPPPS 953; RQRRR 940; RRRQR 927; RHRRR 914; RKRRR 902; Time for index table init: 0h 0m 16s 838ms; Time for processing: 0h 0m 17s 228ms; swapresults tmp1/15089590555632328148/search_tmp/16020913209305565279/q_orfs_aa pfama_20230914/pfam-a-full tmp1/15089590555632328148/search_tmp/16020913209305565279/search/pref tmp1/15089590555632328148/search_tmp/16020913209305565279/search/pref_swapped --sub-mat nucl:nucleotide.out,aa:blosum62.out -e 0.001 --split-memory-limit 0 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --threads 12 --compressed 1 --db-load-mode 0 -v 3 . Input tmp1/15089590555632328148/search_tmp/16020913209305565279/search/pref does not exist; Error: Swapresults pref died; Error: Search step died; Error: Search died; ```",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/754#issuecomment-1725129947:4865,Mask,Masked,4865,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/754#issuecomment-1725129947,4,"['Error', 'Mask']","['Error', 'Masked']"
Availability,"0ms; Time for processing: 0h 0m 0s 1ms; prefilter tmp//10798751672030653963/input_step_redundancy tmp//10798751672030653963/input_step_redundancy tmp//10798751672030653963/pref_step0 --sub-mat nucl:nucleotide.out,aa:blosum62.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -s 1 -k 0 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 65535 --max-seqs 20 --split 0 --split-mode 2 --split-memory-limit 0 -c 0.8 --cov-mode 0 --comp-bias-corr 0 --diag-score 0 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 0 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 16 --compressed 0 -v 3. Query database size: 276 type: Aminoacid; Estimated memory consumption: 978M; Target database size: 276 type: Aminoacid; Index table k-mer threshold: 154 at k-mer size 6; Index table: counting k-mers; [=================================================================] 100.00% 276 0s 30ms; Index table: Masked residues: 0; Index table: fill; [=================================================================] 100.00% 276 0s 3ms; Index statistics; Entries: 1187; DB size: 488 MB; Avg k-mer size: 0.000019; Top 10 k-mers; XXXXXX 7; XXXXXX 4; XXXXXX 4; XXXXXX 4; XXXXXX 4; XXXXXX 3; XXXXXX 3; XXXXXX 3; XXXXXX 3; XXXXXX 3; Time for index table init: 0h 0m 0s 848ms; Process prefiltering step 1 of 1. k-mer similarity threshold: 154; Starting prefiltering scores calculation (step 1 of 1); Query db start 1 to 276; Target db start 1 to 276; [=================================================================] 100.00% 276 0s 19ms. 1.394095 k-mers per position; 5 DB matches per sequence; 0 overflows; 0 queries produce too many hits (truncated result); 1 sequences passed prefiltering per query sequence; 1 median result list length; 0 sequences with 0 size result lists; Time for merging to pref_step0: 0h 0m 0s 3ms; Time for processing: 0h 0m 1s 477ms; align tmp//10798751672030653963/input_step_redundancy tmp//10798751672030653963/input_step_re",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-775767472:11964,Mask,Masked,11964,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-775767472,1,['Mask'],['Masked']
Availability,"0s 0ms; Time for processing: 0h 0m 0s 0ms; prefilter tmp//7897776346521331899/input_step_redundancy tmp//7897776346521331899/input_step_redundancy tmp//7897776346521331899/pref_step0 --sub-mat nucl:nucleotide.out,aa:blosum62.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -s 1 -k 0 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 65535 --max-seqs 20 --split 0 --split-mode 2 --split-memory-limit 0 -c 0.8 --cov-mode 0 --comp-bias-corr 0 --diag-score 0 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 0 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 16 --compressed 0 -v 3. Query database size: 124 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 124 type: Aminoacid; Index table k-mer threshold: 154 at k-mer size 6; Index table: counting k-mers; [=================================================================] 100.00% 124 0s 51ms; Index table: Masked residues: 0; Index table: fill; [=================================================================] 100.00% 124 0s 1ms; Index statistics; Entries: 99; DB size: 488 MB; Avg k-mer size: 0.000002; Top 10 k-mers; FSMYPQ 6; HFVFHR 4; YQYPRV 3; LAMYPA 1; CHMEKC 1; VQRKKC 1; RGYLLC 1; MVQDRC 1; CEMRRC 1; ERIATC 1; Time for index table init: 0h 0m 1s 150ms; Process prefiltering step 1 of 1. k-mer similarity threshold: 154; Starting prefiltering scores calculation (step 1 of 1); Query db start 1 to 124; Target db start 1 to 124; [=================================================================] 100.00% 124 0s 29ms. 0.916862 k-mers per position; 1 DB matches per sequence; 0 overflows; 0 queries produce too many hits (truncated result); 1 sequences passed prefiltering per query sequence; 1 median result list length; 0 sequences with 0 size result lists; Time for merging to pref_step0: 0h 0m 0s 1ms; Time for processing: 0h 0m 1s 849ms; align tmp//7897776346521331899/input_step_redundancy tmp//7897776346521331899/input_step_redund",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-775778998:12123,Mask,Masked,12123,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-775778998,1,['Mask'],['Masked']
Availability,"1 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --zdrop 40 --alph-size nucl:5,aa:13 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 -k 0 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --rescore-mode 0 --filter-hits 0 --sort-results 0 --remove-tmp-files 0 --force-reuse 0. kmermatcher ../DB_in/fasta_in_db_HC tmp//538598962955004214/linclust/16628284907041385511/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-id 0 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 16 --compressed 0 -v 3. kmermatcher ../DB_in/fasta_in_db_HC tmp//538598962955004214/linclust/16628284907041385511/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-id 0 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 16 --compressed 0 -v 3. Database size: 303 type: Aminoacid; Reduced amino acid alphabet: (A S T) (C) (D B N) (E Q Z) (F Y) (G) (H) (I V) (K R) (L J M) (P) (W) (X). Generate k-mers list for 1 split; [=================================================================] 100.00% 303 0s 29ms; Sort kmer 0h 0m 0s 2ms; Sort by rep. sequence 0h 0m 0s 0ms; Time for fill: 0",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-773234853:3218,mask,mask,3218,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-773234853,2,['mask'],"['mask', 'mask-lower-case']"
Availability,"1 --realign 0 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --gap-open 11 --gap-extend 1 --threads 24 --compressed 0 -v 3. Compute score and coverage; Query database size: 31979 type: Aminoacid; Target database size: 119988216 type: Aminoacid; Calculation of alignments; [=================================================================] 100.00% 31.98K 20s 768ms; Time for merging files: 0h 0m 0s 85ms. 4578438 alignments calculated.; 4551951 sequence pairs passed the thresholds (0.994215 of overall calculated).; 142.341873 hits per query sequence.; Time for processing: 0h 0m 36s 82ms; mergedbs tmp_part-14/17957680840564044329/top1 tmp_part-14/17957680840564044329/merged tmp_part-14/17957680840564044329/top1 tmp_part-14/17957680840564044329/round2. Merging the results to tmp_part-14/17957680840564044329/merged; Time for merging files: 0h 0m 0s 11ms; Time for processing: 0h 0m 0s 699ms; filterdb tmp_part-14/17957680840564044329/merged tmp_part-14/17957680840564044329/2b_ali --beats-first --filter-column 4 --comparison-operator le. Filter by numerical comparison to first row.; [=================================================================] 100.00% 40.62K 0s 991ms; Time for merging files: 0h 0m 0s 235ms; Time for processing: 0h 0m 1s 633ms; lca /ebio/abt3_projects/databases_no-backup/uniclust/mmseqs2_8.fac81/uniclust90_2018_08_db tmp_part-14/17957680840564044329/2b_ali clusters_rep-seqs.part-14_tax_db --compressed 0 --lca-ranks kingdom:phylum:class:order:family:genus:species --blacklist 12908,28384 --tax-lineage 0 --threads 24 -v 3. Loading NCBI taxonomy; Loading nodes file ... Done, got 2043406 nodes; Loading merged file ... Done, added 52532 merged nodes.; Loading names file ... Done; Making matrix ... Done; Init RMQ ...Done; Computing LCA; terminate called after throwing an instance of 'std::out_of_range'] 0.11% 0.46 eta 1h 20m 23s; terminate called recursively; Aborted; Error: Lca died; ```",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/221#issuecomment-515936587:10653,Error,Error,10653,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/221#issuecomment-515936587,1,['Error'],['Error']
Availability,"100.00% 124 0s 19ms; Time for merging to clu_accepted: 0h 0m 0s 6ms; Time for processing: 0h 0m 0s 37ms; createsubdb tmp//7897776346521331899/clu_not_accepted_swap artificial2/DB_artificial tmp//7897776346521331899/seq_wrong_assigned -v 3. Time for merging to seq_wrong_assigned: 0h 0m 0s 0ms; Time for processing: 0h 0m 0s 0ms; createsubdb tmp//7897776346521331899/clu artificial2/DB_artificial tmp//7897776346521331899/seq_seeds -v 3. Time for merging to seq_seeds: 0h 0m 0s 0ms; Time for processing: 0h 0m 0s 0ms; prefilter tmp//7897776346521331899/seq_wrong_assigned tmp//7897776346521331899/seq_seeds.merged tmp//7897776346521331899/seq_wrong_assigned_pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -s 6 -k 0 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 65535 --max-seqs 20 --split 0 --split-mode 2 --split-memory-limit 0 -c 0.8 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 16 --compressed 0 -v 3. Query database size: 2 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 126 type: Aminoacid; Index table k-mer threshold: 109 at k-mer size 6; Index table: counting k-mers; [=================================================================] 100.00% 126 0s 29ms; Index table: Masked residues: 0; Index table: fill; [=================================================================] 100.00% 126 0s 1ms; Index statistics; Entries: 116; DB size: 488 MB; Avg k-mer size: 0.000002; Top 10 k-mers; FSMYPQ 6; HFVFHR 4; YQYPRV 3; LAMYPA 1; ARPIVA 1; CHMEKC 1; VQRKKC 1; RGYLLC 1; MVQDRC 1; CEMRRC 1; Time for index table init: 0h 0m 0s 981ms; Process prefiltering step 1 of 1. k-mer similarity threshold: 109; Starting prefiltering scores calculation (step 1 of 1); Query db start 1 to 2; Target db start 1 to 126; [==============================",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-775778998:28012,mask,mask,28012,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-775778998,2,['mask'],"['mask', 'mask-lower-case']"
Availability,"10948275416679/cluster/3119053913462861916/input_step1 /ebio/abt3_scratch/nyoungblut/Struo2_122419461619/cluster_update/11607510948275416679/cluster/3119053913462861916/input_step2 -v 3 --subdb-mode 1. Time for merging to input_step2: 0h 0m 0s 1ms; Time for processing: 0h 0m 0s 4ms; prefilter /ebio/abt3_scratch/nyoungblut/Struo2_122419461619/cluster_update/11607510948275416679/cluster/3119053913462861916/input_step2 /ebio/abt3_scratch/nyoungblut/Struo2_122419461619/cluster_update/11607510948275416679/cluster/3119053913462861916/input_step2 /ebio/abt3_scratch/nyoungblut/Struo2_122419461619/cluster_update/11607510948275416679/cluster/3119053913462861916/pref_step2 --sub-mat nucl:nucleotide.out,aa:blosum62.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -s 4 -k 0 --k-score 2147483647 --alph-size 21 --max-seq-len 65535 --max-seqs 300 --split 0 --split-mode 2 --split-memory-limit 0 -c 0.8 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 12 --compressed 0 -v 3. Query database size: 6 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 6 type: Aminoacid; Index table k-mer threshold: 127 at k-mer size 6; Index table: counting k-mers; [=================================================================] 6 0s 1ms; Index table: Masked residues: 0; Index table: fill; [=================================================================] 6 0s 0ms; Index statistics; Entries: 542; DB size: 488 MB; Avg k-mer size: 0.000008; Top 10 k-mers; GMTEEA	1; LHNWEA	1; SRLLFA	1; VRGIGA	1; LSLTGA	1; ERIAKA	1; TEVGKA	1; NKEIKA	1; GIKKKA	1; DVSNKA	1; Time for index table init: 0h 0m 0s 907ms; Process prefiltering step 1 of 1. k-mer similarity threshold: 127; Starting prefiltering scores calculation (step 1 of 1); Query db start 1 to 6; Target db start 1 to 6; =[======================================================",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/333#issuecomment-663145167:29051,mask,mask,29051,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/333#issuecomment-663145167,2,['mask'],"['mask', 'mask-lower-case']"
Availability,"1194185237556116514/linclust --cluster-mode 0 --max-iterations 1000 --similarity-type 2 --threads 24 --compressed 0 -v 3 --cluster-weight-threshold 0.9 --sub-mat aa:blosum62.out,nucl:nucleotide.out -a 0 --alignment-mode 3 --alignment-output-mode 0 --wrapped-scoring 0 -e 0.001 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 1 --comp-bias-corr-scale 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --corr-score-weight 0 --gap-open aa:11,nucl:5 --gap-extend aa:1,nucl:2 --zdrop 40 --alph-size aa:13,nucl:5 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-prob 0.9 --mask-lower-case 0 -k 0 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --rescore-mode 0 --filter-hits 0 --sort-results 0 --remove-tmp-files 1 --force-reuse 0. MMseqs Version: 	6b9388469a41935813f5d207d6d149767feb4c42-MPI; Cluster mode 	0; Max connected component depth 	1000; Similarity type 	2; Threads 	24; Compressed 	0; Verbosity 	3; Weight file name; Cluster Weight threshold 	0.9; Substitution matrix 	aa:blosum62.out,nucl:nucleotide.out; Add backtrace 	false; Alignment mode 	3; Alignment mode 	0; Allow wrapped scoring 	false; E-value threshold 	0.001; Seq. id. threshold 	0; Min alignment length 	0; Seq. id. mode 	0; Alternative alignments 	0; Coverage threshold 	0.8; Coverage mode 	0; Max sequence length 	65535; Compositional bias 	1; Compositional bias 	1; Max reject 	2147483647; Max accept 	2147483647; Include identical seq. id. 	false; Preload mode 	0; Pseudo count a 	substitution:1.100,context:1.400; Pseudo count b 	substitution:4.100,context:5.800; Score bias 	0; Realign hits 	false; Realign score bias 	-0.2; Realign max seqs 	214748",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/679#issuecomment-1461610364:2536,mask,mask-lower-case,2536,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/679#issuecomment-1461610364,1,['mask'],['mask-lower-case']
Availability,"147483647 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --gap-open 11 --gap-extend 1 --threads 10 --compressed 0 -v 3 . Init data structures...; Touch data file pbps.neighbors.DB ... Done.; Use index pfam_profile.idx; Index version: 15; Generated by: 8-fac81; MaxSeqLength: 65535; KmerSize: 6; CompBiasCorr: 1; AlphabetSize: 21; Masked: 0; Spaced: 1; KmerScore: 90; SequenceType: Profile; SourcSeqType: Profile; Headers1: 1; Headers2: 0; ScoreMatrix: VTML80.out; Compute score and coverage.; Query database type: Profile; Target database type: Aminoacid; Calculation of Smith-Waterman alignments.; .Time for merging files: 0h 0m 0s 23ms. All sequences processed. 390452377 alignments calculated.; 1899900 sequence pairs passed the thresholds (0.00486589 of overall calculated).; 106.904 hits per query sequence.; Time for processing: 0h 32m 50s 752ms; Program call:; swapresults pfam_profile.idx pbps.neighbors.DB tmp/6822607060114486044/aln_swapped result --sub-mat blosum62.out -e 0.001 --split-memory-limit 0 --gap-open 11 --gap-extend 1 --threads 10 --compressed 0 --db-load-mode 0 -v 3 . Query database: pfam_profile.idx; Use index pfam_profile.idx; Index version: 15; Generated by: 8-fac81; MaxSeqLength: 65535; KmerSize: 6; CompBiasCorr: 1; AlphabetSize: 21; Masked: 0; Spaced: 1; KmerScore: 90; SequenceType: Profile; SourcSeqType: Profile; Headers1: 1; Headers2: 0; ScoreMatrix: VTML80.out; Target database: pbps.neighbors.DB; Result database: tmp/6822607060114486044/aln_swapped; Computing offsets.; .; Reading results.; .; Output database: result; ................................................................................................... 1 Mio. sequences processed; ....................................; Time for merging files: 0h 0m 0s 545ms; Time for processing: 0h 0m 1s 451ms; ```. It ran really fast but even with k-mar 6, I don't know about the sensitivity if it is equivalent. . The ScoreMatrix reported is VTML80.out, this should be the Blosum62?",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/189#issuecomment-483627132:6713,Mask,Masked,6713,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/189#issuecomment-483627132,1,['Mask'],['Masked']
Availability,"147483647; Max Accept 2147483647; Include identical Seq. Id. false; No preload false; Pseudo count a 1; Pseudo count b 1.5; Score bias 0; Alphabet size 21; Kmer per sequence 21; Mask Residues 0; K-mer size 0; Shift hash 5; Split Memory Limit 0; Include only extendable false; Skip sequence with n repeating k-mers 0; Rescore mode 0; Remove hits by seq.id. and coverage false; Sort results 0; In substitution scoring mode, performs global alignment along the diagonal false; Remove Temporary Files false; Sets the MPI runner. Set cluster mode SET COVER.; Program call:; /nfs/brubeck.bx.psu.edu/scratch6/ksahlin/preclust_eval/cluster/linclust/ENSEMBL/1000000/linclust_tmpdir<200b>/12158280734806148968/input /nfs/brubeck.bx.psu.edu/scratch6/ksahlin/preclust_eval/cluster/linclust/ENSEMBL/1000000/linclust_tmpdir<200b>/12158280734806148968/input /nfs/brubeck.bx.psu.edu/scratch6/ksahlin/preclust_eval/cluster/linclust/ENSEMBL/1000000/linclust_tmpdir<200b>/12158280734806148968/clu_tmp/13736030087838361561/pref /nfs/brubeck.bx.psu.edu/scratch6/ksahlin/preclust_eval/cluster/linclust/ENSEMBL/1000000/linclust_tmpdir<200b>/12158280734806148968/clu_tmp/13736030087838361561/pref_rescore1 --sub-mat blosum62.out --rescore-mode 0 -e 0.001 -c 0.8 --cov-mode 0 --min-seq-id 0.9 --seq-id-mode 0 --sort-results 0 --threads 64 -v 3. MMseqs Version: 016429915362d184505627148d07f11c9ccc1aeb; Sub Matrix blosum62.out; Rescore mode 0; Remove hits by seq.id. and coverage false; E-value threshold 0.001; Coverage threshold 0.8; Coverage Mode 0; Seq. Id Threshold 0.9; Seq. Id. Mode 0; Include identical Seq. Id. false; Sort results 0; In substitution scoring mode, performs global alignment along the diagonal false; No preload false; Threads 64; Verbosity 3. Prefilter database: /nfs/brubeck.bx.psu.edu/scratch6/ksahlin/preclust_eval/cluster/linclust/ENSEMBL/1000000/linclust_tmpdir<200b>/12158280734806148968/clu_tmp/13736030087838361561/pref; Error: Rescore with hamming distance step died; Error: Search died; ```",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/111#issuecomment-418161120:5174,Error,Error,5174,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/111#issuecomment-418161120,2,['Error'],['Error']
Availability,"14_30 /ebio/abt3_projects/databases_no-backup/uniclust/uniclust50/mmseqs2_8.fac81/uniclust50_2018_08_consensus clusters_rep-seqs.part-14_tax_db tmp_part-14. MMseqs Version: 	8.fac81; Substitution Matrix 	blosum62.out; Add backtrace 	false; Alignment mode 	2; E-value threshold 	1e-05; Seq. Id Threshold 	0; Min. alignment length 	0; Seq. Id. Mode 	0; Alternative alignments 	0; Coverage threshold 	0; Coverage Mode 	0; Max. sequence length 	65535; Compositional bias 	1; Realign hit 	false; Max Reject 	2147483647; Max Accept 	2147483647; Include identical Seq. Id. 	false; Preload mode 	0; Pseudo count a 	1; Pseudo count b 	1.5; Score bias 	0; Gap open cost 	11; Gap extension cost 	1; Threads 	24; Compressed 	0; Verbosity 	3; Seed Substitution Matrix 	VTML80.out; Sensitivity 	5.7; K-mer size 	0; K-score 	2147483647; Alphabet size 	21; Max. results per query 	200; Offset result 	0; Split DB 	0; Split mode 	2; Split Memory Limit 	0; Diagonal Scoring 	1; Exact k-mer matching 	0; Mask Residues 	1; Mask lower case residues 	0; Minimum Diagonal score 	15; Spaced Kmer 	1; Spaced k-mer pattern; Local temporary path; Rescore mode 	0; Remove hits by seq.id. and coverage 	false; Sort results 	0; In substitution scoring mode, performs global alignment along the diagonal	false; Mask profile 	1; Profile e-value threshold 	0.001; Use global sequence weighting 	false; Filter MSA 	1; Maximum sequence identity threshold 	0.9; Minimum seq. id. 	0; Minimum score per column 	-20; Minimum coverage 	0; Select n most diverse seqs 	1000; Omit Consensus 	false; Min codons in orf 	30; Max codons in length 	32734; Max orf gaps 	2147483647; Contig start mode 	2; Contig end mode 	2; Orf start mode 	1; Forward Frames 	1,2,3; Reverse Frames 	1,2,3; Translation Table 	1; Use all table starts 	false; Offset of numeric ids 	0; Add Orf Stop 	false; Chain overlapping alignments 	0; Search type 	0; Number search iterations 	1; Start sensitivity 	4; Search steps 	1; Run a seq-profile search in slice mode 	false",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/221#issuecomment-516032943:2189,Mask,Mask,2189,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/221#issuecomment-516032943,2,['Mask'],['Mask']
Availability,"16679/cluster/3119053913462861916/input_step1 /ebio/abt3_scratch/nyoungblut/Struo2_122419461619/cluster_update/11607510948275416679/cluster/3119053913462861916/input_step1 /ebio/abt3_scratch/nyoungblut/Struo2_122419461619/cluster_update/11607510948275416679/cluster/3119053913462861916/pref_step1 --sub-mat nucl:nucleotide.out,aa:blosum62.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -s 2.5 -k 0 --k-score 2147483647 --alph-size 21 --max-seq-len 65535 --max-seqs 300 --split 0 --split-mode 2 --split-memory-limit 0 -c 0.8 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 12 --compressed 0 -v 3. Query database size: 6 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 6 type: Aminoacid; Index table k-mer threshold: 140 at k-mer size 6; Index table: counting k-mers; [=================================================================] 6 0s 1ms; Index table: Masked residues: 0; Index table: fill; [=================================================================] 6 0s 0ms; Index statistics; Entries: 497; DB size: 488 MB; Avg k-mer size: 0.000008; Top 10 k-mers; GMTEEA	1; LHNWEA	1; SRLLFA	1; VRGIGA	1; ERIAKA	1; TEVGKA	1; NKEIKA	1; GIKKKA	1; DVSNKA	1; INISKA	1; Time for index table init: 0h 0m 0s 885ms; Process prefiltering step 1 of 1. k-mer similarity threshold: 140; Starting prefiltering scores calculation (step 1 of 1); Query db start 1 to 6; Target db start 1 to 6; [=================================================================] 6 0s 1ms. 7.473668 k-mers per position; 69 DB matches per sequence; 0 overflows; 0 queries produce too much hits (truncated result); 1 sequences passed prefiltering per query sequence; 1 median result list length; 0 sequences with 0 size result lists; Time for merging to pref_step1: 0h 0m 0s 25ms; Time for processing: 0h 0m 1s 533ms; align /ebio/abt3_scratch",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/333#issuecomment-663145167:24450,Mask,Masked,24450,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/333#issuecomment-663145167,1,['Mask'],['Masked']
Availability,"1:104233] Failing at address: 0x151209f6d9c4; --------------------------------------------------------------------------; Primary job terminated normally, but 1 process returned; a non-zero exit code. Per user-direction, the job has been aborted.; --------------------------------------------------------------------------; --------------------------------------------------------------------------; mpirun noticed that process rank 89 with PID 0 on node cpu-23-1 exited on signal 7 (Bus error).; --------------------------------------------------------------------------. And this one a couple more times:. --------------------------------------------------------------------------; Primary job terminated normally, but 1 process returned; a non-zero exit code. Per user-direction, the job has been aborted.; --------------------------------------------------------------------------; slurmstepd: error: *** JOB 1369194 ON cpu-25-49 CANCELLED AT 2021-05-17T19:07:03 DUE TO NODE FAILURE, SEE SLURMCTLD LOG FOR DETAILS ***; --------------------------------------------------------------------------; mpirun noticed that process rank 65 with PID 0 on node cpu-25-49 exited on signal 9 (Killed).; --------------------------------------------------------------------------. Now I'm trying to run the job using the script you also include in your manual . mmseqs createdb ""${QUERYFASTA}"" ""${QUERYDB}""; mmseqs splitdb ""${QUERYDB}"" ""${QUERYDB}_split"" --split $SPLITS. for file in $(ls ""${QUERYDB}_split""_*_$SPLITS); do; mmseqs createsubdb ""${file}.index"" ""${QUERYDB}_h"" ""${file}_h""; done. split=0; for file in $(ls ""${QUERYDB}_split""_*_$SPLITS); do; RUNNER=""mpirun -np 128 -p nocona"" bsub mmseqs cluster ""${file}"" chiropteraDB aln_${split} tmp --cov-mode 1 -c 0.9 --threads 128; ((split++)); done. So far I don't have a result out of it because the job is waiting for resources, I just added the -p nocona argument because I got an error stating that the job couldn't be batched if I didn't mention the part",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/455#issuecomment-843668604:1548,error,error,1548,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/455#issuecomment-843668604,2,"['FAILURE', 'error']","['FAILURE', 'error']"
Availability,21331899/seq_wrong_assigned_pref_swaped_aln tmp//7897776346521331899/seq_wrong_assigned_pref_swaped_aln_ocol --trim-to-one-column --threads 16 --compressed 0 -v 3. Filtering using regular expression; mergedbs tmp//7897776346521331899/seq_seeds.merged tmp//7897776346521331899/clu_accepted_plus_wrong tmp//7897776346521331899/clu_accepted tmp//7897776346521331899/seq_wrong_assigned_pref_swaped_aln_ocol --merge-stop-empty 0 --compressed 0 -v 3. Merging the results to tmp//7897776346521331899/clu_accepted_plus_wrong; [=================================================================] 100.00% 126 0s 2ms; Time for merging to clu_accepted_plus_wrong: 0h 0m 0s 0ms; Time for processing: 0h 0m 0s 4ms; tsv2db tmp//7897776346521331899/missing.single.seqs tmp//7897776346521331899/missing.single.seqs.db --output-dbtype 6 --compressed 0 -v 3. Output database type: Clustering; Time for merging to missing.single.seqs.db: 0h 0m 0s 0ms; Time for processing: 0h 0m 0s 1ms; mergedbs artificial2/DB_artificial tmp//7897776346521331899/clu_accepted_plus_wrong_plus_single tmp//7897776346521331899/clu_accepted_plus_wrong tmp//7897776346521331899/missing.single.seqs.db --merge-stop-empty 0 --compressed 0 -v 3. Merging the results to tmp//7897776346521331899/clu_accepted_plus_wrong_plus_single; [=================================================================] 100.00% 136 0s 0ms; Time for merging to clu_accepted_plus_wrong_plus_single: 0h 0m 0s 0ms; Time for processing: 0h 0m 0s 2ms; clust artificial2/DB_artificial tmp//7897776346521331899/clu_accepted_plus_wrong_plus_single db_clu --cluster-mode 0 --max-iterations 1000 --similarity-type 2 --threads 16 --compressed 0 -v 3. Clustering mode: Set Cover; [=================================================================] 100.00% 136 0s 3ms; Sort entries; Find missing connections; Found 10 new connections.; Reconstruct initial order; Alignment format is not supported! ] 0.00% 1 eta -; Alignment format is not supported!; Error: Clustering step 2 died,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-775778998:32628,Error,Error,32628,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-775778998,1,['Error'],['Error']
Availability,"230412_142303/tmp/18292001434761310910/aln_1 result_query_20230412_142303/tmp/18292001434761310910/profile_1 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' -e 0.1 --mask-profile 1 --e-profile 0.1 --comp-bias-corr 1 --comp-bias-corr-scale 1 --wg 0 --allow-deletion 0 --filter-msa 1 --filter-min-enable 0 --max-seq-id 0.9 --qid '0.0' --qsc -20 --cov 0 --diff 1000 --pseudo-cnt-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --db-load-mode 2 --gap-open aa:11,nucl:5 --gap-extend aa:1,nucl:2 --gap-pc 10 --threads 96 --compressed 0 -v 3. prefilter result_query_20230412_142303/tmp/18292001434761310910/profile_1 /home/username/project/my_local_DB/target_DB.idx result_query_20230412_142303/tmp/18292001434761310910/pref_tmp_2 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --seed-sub-mat 'aa:VTML80.out,nucl:nucleotide.out' -s 8 -k 0 --k-score seq:2147483647,prof:2147483647 --alph-size aa:21,nucl:5 --max-seq-len 65535 --max-seqs 10000 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --comp-bias-corr-scale 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-prob 0.9 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 2 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --threads 96 --compressed 0 -v 3. subtractdbs result_query_20230412_142303/tmp/18292001434761310910/pref_tmp_2 result_query_20230412_142303/tmp/18292001434761310910/aln_1 result_query_20230412_142303/tmp/18292001434761310910/pref_2 --threads 96 --e-profile 0.1 -e 0.1 --compressed 0 -v 3. subtractdbs result_query_20230412_142303/tmp/18292001434761310910/pref_tmp_2 result_query_20230412_142303/tmp/18292001434761310910/aln_1 result_query_20230412_142303/tmp/18292001434761310910/pref_2 --threads 96 --e-profile 0.1 -e 0.1 --compressed 0 -v 3. align result_query_20230412_142303/tmp/18292001434761310910/profile_1 /home/username/project/my_local_DB/target_DB.idx result_qu",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/64#issuecomment-1507273856:7165,mask,mask,7165,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/64#issuecomment-1507273856,4,['mask'],"['mask', 'mask-prob']"
Availability,"231218113/search_tmp/10627605686170015473/q_orfs_aa --min-length 30 --max-length 32734 --max-gaps 2147483647 --contig-start-mode 2 --contig-end-mode 2 --orf-start-mode 1 --forward-frames 1,2,3 --reverse-frames 1,2,3 --translation-table 1 --translate 1 --use-all-table-starts 0 --id-offset 0 --create-lookup 0 --threads 40 --compressed 0 -v 3 . [=================================================================] 516.30K 0s 579ms; Time for merging to q_orfs_aa_h: 0h 0m 0s 661ms; Time for merging to q_orfs_aa: 0h 0m 0s 709ms; Time for processing: 0h 0m 3s 128ms; prefilter tmp/9700814981231218113/search_tmp/10627605686170015473/q_orfs_aa /d/Databases/Kegg/sram/mmseqs/kegg tmp/9700814981231218113/search_tmp/10627605686170015473/search/pref_0 --sub-mat nucl:nucleotide.out,aa:blosum62.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -k 0 --k-score 2147483647 --alph-size 21 --max-seq-len 65535 --max-seqs 1 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 40 --compressed 0 -v 3 -s 1.000 . Query database size: 2548633 type: Aminoacid; Estimated memory consumption: 68G; Target database size: 13003941 type: Aminoacid; Index table k-mer threshold: 174 at k-mer size 7 ; Index table: counting k-mers; [=================================================================] 13.00M 1m 24s 806ms; Index table: Masked residues: 71357266; Index table: fill; [=================================================================] 13.00M 50s 887ms; Index statistics; Entries: 3111458326; DB size: 27569 MB; Avg k-mer size: 2.430827; Top 10 k-mers; SGQQRIA	74997; GPGGKLL	59639; GGQRVAR	38490; LLGPGKT	25908; YDYAIPL	22840; GGRRVAR	21815; PHLGGQR	19799; TPHDFEV	17697; PSLGGQR	13748; FSCSHVV	12988; Time for index table init: 0h 2m 34s 667ms; Process prefiltering step 1 of 1. k-mer similarity t",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/231#issuecomment-535253491:4118,mask,mask,4118,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/231#issuecomment-535253491,2,['mask'],"['mask', 'mask-lower-case']"
Availability,"24 --threads 96 . MMseqs Version: 45111b641859ed0ddd875b94d6fd1aef1a675b7e; Substitution matrix nucl:nucleotide.out,aa:blosum62.out; Add backtrace true; Alignment mode 2; Alignment mode 0; Allow wrapped scoring false; E-value threshold 0.001; Seq. id. threshold 0; Min alignment length 0; Seq. id. mode 0; Alternative alignments 0; Coverage threshold 0; Coverage mode 0; Max sequence length 65535; Compositional bias 1; Max reject 2147483647; Max accept 2147483647; Include identical seq. id. false; Preload mode 0; Pseudo count a 1; Pseudo count b 1.5; Score bias 0; Realign hits false; Realign score bias -0.2; Realign max seqs 2147483647; Gap open cost nucl:5,aa:11; Gap extension cost nucl:2,aa:1; Zdrop 40; Threads 96; Compressed 1; Verbosity 3; Seed substitution matrix nucl:nucleotide.out,aa:VTML80.out; Sensitivity 6; k-mer length 0; k-score 2147483647; Alphabet size nucl:5,aa:21; Max results per query 300; Split database 0; Split mode 2; Split memory limit 589824T; Diagonal scoring true; Exact k-mer matching 0; Mask residues 1; Mask lower case residues 0; Minimum diagonal score 15; Spaced k-mers 1; Spaced k-mer pattern ; Local temporary path ; Rescore mode 0; Remove hits by seq. id. and coverage false; Sort results 0; Mask profile 1; Profile E-value threshold 0.1; Global sequence weighting false; Allow deletions false; Filter MSA 1; Maximum seq. id. threshold 0.9; Minimum seq. id. 0; Minimum score per column -20; Minimum coverage 0; Select N most diverse seqs 1000; Min codons in orf 30; Max codons in length 32734; Max orf gaps 2147483647; Contig start mode 2; Contig end mode 2; Orf start mode 1; Forward frames 1,2,3; Reverse frames 1,2,3; Translation table 1; Translate orf 0; Use all table starts true; Offset of numeric ids 0; Create lookup 0; Add orf stop false; Overlap between sequences 0; Sequence split mode 1; Header split mode 0; Chain overlapping alignments 0; Merge query 1; Search type 0; Search iterations 1; Start sensitivity 4; Search steps 1; Exhaustive searc",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/438#issuecomment-1176243510:1767,Mask,Mask,1767,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/438#issuecomment-1176243510,2,['Mask'],['Mask']
Availability,"25 million MSAs is quite considerable. Following is a brain dump of some things to consider. Sorry it’s not super organized. You can scale down sensitivity. `-s 6` might be sufficient and much faster than the default. You can consider searching only against the uniref and omitting the colabfold db. I think a batch size of 50k-100k queries is probably going to work to be sufficient. I have also recently tweaked the setup_databases.sh script to not store the databases in a compressed form, this will increase RAM use but avoid constant decompression. However, I’ve not commited this change yet. Storage space is likely going to be one of the bigger issues, since 25M MSA will be quite large. You might want to extract the mmseqs shell commands from the colabfold_search python script (https://github.com/sokrypton/ColabFold/blob/main/colabfold/mmseqs/search.py) so you have an easier time tweaking them. One option might be to run all searches in batches, but not run the final result2msa and unpackdb steps yet, as they are comparatively cheap and the filesize increases a lot from the internal result format to the MSA a3m format. You can also run another mmseqs module here (filterdb --extract-lines) to return only a maximum number hits to be converted to a MSA. Currently, colabfold_search materializes each MSA as an individual file to the file system (through the unpackdb) call. We have been meaning to make colabfold_batch work directly with the internal database format. I assume you don’t actually want to ran 25M structure predictions and instead want to run something else that is faster. You might want to implement something that reads from the MMseqs2 databases directly, this will save a lot of filesystem headache.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/897#issuecomment-2427904599:139,down,down,139,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/897#issuecomment-2427904599,1,['down'],['down']
Availability,"2531703396435525/tmp_taxonomy/8588819485854123580/tmp_hsp1; search /tmp/7059426268546109220/taxonomy_tmp/13812531703396435525/orfs_aa /nr /tmp/7059426268546109220/taxonomy_tmp/13812531703396435525/tmp_taxonomy/8588819485854123580/first /tmp/7059426268546109220/taxonomy_tmp/13812531703396435525/tmp_taxonomy/8588819485854123580/tmp_hsp1 --alignment-mode 1 -e 1 --max-rejected 5 --max-accept 30 -s 0.5 --split-mode 0 --spaced-kmer-mode 1 --min-length 30 --max-length 32734 --orf-start-mode 1 --lca-search 1 --remove-tmp-files 1 . prefilter /tmp/7059426268546109220/taxonomy_tmp/13812531703396435525/orfs_aa /nr /tmp/7059426268546109220/taxonomy_tmp/13812531703396435525/tmp_taxonomy/8588819485854123580/tmp_hsp1/1723886274502240713/pref_0 --sub-mat nucl:nucleotide.out,aa:blosum62.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -k 0 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 65535 --max-seqs 300 --split 0 --split-mode 0 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 26 --compressed 0 -v 3 -s 0.5 . Query database size: 695256546 type: Aminoacid; Target split mode. Searching through 6 splits; Estimated memory consumption: 232G; Target database size: 353572663 type: Aminoacid; Process prefiltering step 1 of 6. Index table k-mer threshold: 180 at k-mer size 7 ; Index table: counting k-mers; [=================================================================] 58.92M 1h 27m 43s 365ms; Index table: Masked residues: 338212106; Index table: fill; [=================================================================] 58.92M 2h 48m 44s 23ms; Index statistics; Entries: 10047647313; DB size: 67258 MB; Avg k-mer size: 7.849724; Top 10 k-mers; FSHAGSI	169128; AFRNNFW	161115; APMFPNN	145858; GGGWLLM	137963; NNSWLPS	137460; AHFMIMV	126820; MPMGGNW	126274; TMLDRNT	108816; TGTYPSS	94201; GD",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/422#issuecomment-795325591:30980,mask,mask,30980,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/422#issuecomment-795325591,2,['mask'],"['mask', 'mask-lower-case']"
Availability,"2704); at /mnt/disks/kc-ssd/MMseqs2/src/commons/tantan.cpp:373; #2 0x0000555555a8bf6b in tantan::getProbabilities (; seqBeg=0x5555564e06c0 ""\025\025\025\025\025\025\025\n\f\003\v\020\f\016\020\020\016\017"", seqEnd=0x5555564e07b9 """",; maxRepeatOffset=50, likelihoodRatioMatrix=0x55555643d8f0, repeatProb=0.0050000000000000001, repeatEndProb=0.050000000000000003,; repeatOffsetProbDecay=0.90000000000000002, firstGapProb=0, otherGapProb=0, probabilities=0x555556582700); at /mnt/disks/kc-ssd/MMseqs2/src/commons/tantan.cpp:470; #3 0x0000555555a8be5f in tantan::maskSequences (; seqBeg=0x5555564e06c0 ""\025\025\025\025\025\025\025\n\f\003\v\020\f\016\020\020\016\017"", seqEnd=0x5555564e07b9 """",; maxRepeatOffset=50, likelihoodRatioMatrix=0x55555643d8f0, repeatProb=0.0050000000000000001, repeatEndProb=0.050000000000000003,; repeatOffsetProbDecay=0.90000000000000002, firstGapProb=0, otherGapProb=0, minMaskProb=0.89999997615814209,; maskTable=0x7ffffffdc530 '\024' <repeats 200 times>...) at /mnt/disks/kc-ssd/MMseqs2/src/commons/tantan.cpp:449; #4 0x000055555597de7b in PSSMMasker::mask (this=0x7ffffffbaca0, centerSequence=..., maskProb=0.899999976, pssmRes=...); at /mnt/disks/kc-ssd/MMseqs2/src/alignment/PSSMMasker.h:25; #5 0x00005555559f916b in result2profile () at /mnt/disks/kc-ssd/MMseqs2/src/util/result2profile.cpp:262; #6 0x00007ffff7c7c4c2 in GOMP_parallel () from /lib/x86_64-linux-gnu/libgomp.so.1; #7 0x00005555559f86b7 in result2profile (argc=54, argv=0x7fffffffe138, command=..., returnAlnRes=false); at /mnt/disks/kc-ssd/MMseqs2/src/util/result2profile.cpp:140; #8 0x00005555559f885c in result2profile (argc=54, argv=0x7fffffffe138, command=...); at /mnt/disks/kc-ssd/MMseqs2/src/util/result2profile.cpp:311; #9 0x00005555557ea0b5 in runCommand (p=0x55555641eac0, argc=54, argv=0x7fffffffe138); at /mnt/disks/kc-ssd/MMseqs2/src/commons/Application.cpp:40; #10 0x00005555557eafea in main (argc=56, argv=0x7fffffffe128) at /mnt/disks/kc-ssd/MMseqs2/src/commons/Application.cpp:203; ```",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/592#issuecomment-1214486961:1698,mask,mask,1698,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/592#issuecomment-1214486961,2,['mask'],"['mask', 'maskProb']"
Availability,30 /ebio/abt3_projects/databases_no-backup/uniclust/mmseqs2_8.fac81/uniclust90_2018_08_db tmp_part-14/17957680840564044329/tmp_hsp1/2842639954524457022/pref_0 --sub-mat blosum62.out --seed-sub-mat VTML80.out -k 0 --k-score 2147483647 --alph-size 21 --max-seq-len 65535 --max-seqs 200 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 24 --compressed 0 -v 3 -s 5.7. Using 24 threads.; Estimated memory consumption 413414 MB; Target database size: 119988216 type: Aminoacid; Query database size: 40624 type: Aminoacid; Process prefiltering step 1 of 1. Index table k-mer threshold: 122 at k-mer size 7; Index table: counting k-mers; [=================================================================] 100.00% 119.99M 14m 40s 186ms; Index table: Masked residues: 372860390; Index table: fill; [=================================================================] 100.00% 119.99M 20m 55s 996ms; Index statistics; Entries: 38076912867; DB size: 227643 MB; Avg k-mer size: 29.747588; Top 10 k-mers; SGQQRIA	281769; GPGGKLL	259328; GQQVARA	172987; YTGTGKG	166889; GGQRVAR	143134; LLGPGKT	113836; LSGQQAI	94348; GGRRVAR	94149; ALGSGKS	92540; GRFVVEV	90006; Time for index table init: 0h 36m 49s 783ms; k-mer similarity threshold: 122; Starting prefiltering scores calculation (step 1 of 1); Query db start 1 to 40624; Target db start 1 to 119988216; [=================================================================] 100.00% 40.62K 15m 11s 627ms. 2741.257489 k-mers per position; 7347947 DB matches per sequence; 0 overflows; 199 sequences passed prefiltering per query sequence; 200 median result list length; 0 sequences with 0 size result lists. Time for prefiltering scores calculation: 0h 15m 16s 157ms; Time for merging files: 0h 0m 0s 63ms; Time for processing: 0h 53m 6s 0ms; align cluste,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/221#issuecomment-515936587:5255,Mask,Masked,5255,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/221#issuecomment-515936587,1,['Mask'],['Masked']
Availability,"34761310910/pref_0 result_query_20230412_142303/tmp/18292001434761310910/aln_0 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' -a 1 --alignment-mode 2 --alignment-output-mode 0 --wrapped-scoring 0 -e 0.1 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 1 --comp-bias-corr-scale 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 2 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --score-bias 0 --realign 1 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --corr-score-weight 0 --gap-open aa:11,nucl:5 --gap-extend aa:1,nucl:2 --zdrop 40 --threads 96 --compressed 0 -v 3. result2profile result_query_20230412_142303/qdb /home/username/project/my_local_DB/target_DB.idx result_query_20230412_142303/tmp/18292001434761310910/aln_0 result_query_20230412_142303/tmp/18292001434761310910/profile_0 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' -e 0.1 --mask-profile 1 --e-profile 0.1 --comp-bias-corr 1 --comp-bias-corr-scale 1 --wg 0 --allow-deletion 0 --filter-msa 1 --filter-min-enable 0 --max-seq-id 0.9 --qid '0.0' --qsc -20 --cov 0 --diff 1000 --pseudo-cnt-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --db-load-mode 2 --gap-open aa:11,nucl:5 --gap-extend aa:1,nucl:2 --gap-pc 10 --threads 96 --compressed 0 -v 3. subtractdbs result_query_20230412_142303/tmp/18292001434761310910/pref_tmp_1 result_query_20230412_142303/tmp/18292001434761310910/aln_0 result_query_20230412_142303/tmp/18292001434761310910/pref_1 --threads 96 --e-profile 0.1 -e 0.1 --compressed 0 -v 3. subtractdbs result_query_20230412_142303/tmp/18292001434761310910/pref_tmp_1 result_query_20230412_142303/tmp/18292001434761310910/aln_0 result_query_20230412_142303/tmp/18292001434761310910/pref_1 --threads 96 --e-profile 0.1 -e 0.1 --compressed 0 -v 3. align result_query_20230412_142303/tmp/18292001434761310910/profile_0 /home/username/project/my_",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/64#issuecomment-1507273856:3712,mask,mask-profile,3712,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/64#issuecomment-1507273856,2,['mask'],['mask-profile']
Availability,48 -v 3 . MMseqs Version: 	GITDIR-NOTFOUND; Sub Matrix 	blosum62.out; Mask profile 	1; Profile e-value threshold 	0.1; Compositional bias 	1; Use global sequence weighting 	false; Filter MSA 	1; Maximum sequence identity threshold	0.9; Minimum seq. id. 	0; Minimum score per column 	-20; Minimum coverage 	0; Select n most diverse seqs 	1000; Pseudo count a 	0; Pseudo count b 	1.5; Omit Consensus 	false; No preload 	true; Gap open cost 	11; Gap extension cost 	1; Threads 	48; Verbosity 	3. Start computing profiles.; Query database type: Aminoacid; Target database type: Aminoacid; Time for merging files: 0h 0m 0s 8ms; Time for merging files: 0h 0m 0s 7ms. Done.; Time for processing: 0h 0m 15s 770ms; Program call:; prefilter tmpC/10139724895635470572/profile_0 genes.db tmpC/10139724895635470572/pref_1 --sub-mat blosum62.out -s 5.7 -k 0 --k-score 2147483647 --alph-size 21 --max-seq-len 65535 --max-seqs 1000 --offset-result 0 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --no-preload 1 --pca 1 --pcb 1.5 --threads 48 -v 3 . MMseqs Version: 	GITDIR-NOTFOUND; Sub Matrix 	blosum62.out; Sensitivity 	5.7; K-mer size 	0; K-score 	2147483647; Alphabet size 	21; Max. sequence length 	65535; Max. results per query 	1000; Offset result 	0; Split DB 	0; Split mode 	2; Split Memory Limit 	0; Coverage threshold 	0; Coverage Mode 	0; Compositional bias 	1; Diagonal Scoring 	1; Exact k-mer matching 	0; Mask Residues 	1; Minimum Diagonal score 	15; Include identical Seq. Id.	false; Spaced Kmer 	1; No preload 	true; Pseudo count a 	1; Pseudo count b 	1.5; Spaced k-mer pattern 	; Threads 	48; Verbosity 	3. Initialising data structures...; Using 48 threads.; Could not find precomputed index. Compute index.; Substitution matrices...; Use kmer size 7 and split 3 using Target split mode.; Needed memory (213441943732 byte) of total memory (243154,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/160#issuecomment-461782109:45061,mask,mask,45061,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/160#issuecomment-461782109,1,['mask'],['mask']
Availability,5 DL:111MiB ETA:8s]; [#156257 4.8GiB/5.7GiB(85%) CN:5 DL:111MiB ETA:7s]; [#156257 4.9GiB/5.7GiB(87%) CN:5 DL:111MiB ETA:6s]; [#156257 5.0GiB/5.7GiB(89%) CN:5 DL:111MiB ETA:5s]; [#156257 5.2GiB/5.7GiB(91%) CN:5 DL:111MiB ETA:4s]; [#156257 5.3GiB/5.7GiB(92%) CN:5 DL:111MiB ETA:3s]; [#156257 5.4GiB/5.7GiB(94%) CN:5 DL:111MiB ETA:2s]; [#156257 5.5GiB/5.7GiB(96%) CN:5 DL:111MiB ETA:1s]; [#156257 5.6GiB/5.7GiB(98%) CN:5 DL:111MiB]. 10/13 10:50:57 [NOTICE] Download complete: tmp/3093587253482177683/bacteria.tar. Download Results:; gid |stat|avg speed |path/URI; ======+====+===========+=======================================================; 156257|OK | 110MiB/s|tmp/3093587253482177683/bacteria.tar. Status Legend:; (OK):download completed. 10/13 10:50:57 [NOTICE] Downloading 1 item(s); [#8c18ae 81MiB/85MiB(95%) CN:3 DL:90MiB]. 10/13 10:50:58 [NOTICE] Download complete: tmp/3093587253482177683/archea.tar. Download Results:; gid |stat|avg speed |path/URI; ======+====+===========+=======================================================; 8c18ae|OK | 87MiB/s|tmp/3093587253482177683/archea.tar. Status Legend:; (OK):download completed. 10/13 10:50:58 [NOTICE] Downloading 1 item(s); [#e1fc78 82MiB/2.7GiB(2%) CN:5 DL:89MiB ETA:30s]; [#e1fc78 182MiB/2.7GiB(6%) CN:5 DL:95MiB ETA:27s]; [#e1fc78 283MiB/2.7GiB(10%) CN:5 DL:97MiB ETA:26s]; [#e1fc78 387MiB/2.7GiB(13%) CN:5 DL:99MiB ETA:24s]; [#e1fc78 497MiB/2.7GiB(17%) CN:5 DL:101MiB ETA:22s]; [#e1fc78 606MiB/2.7GiB(21%) CN:5 DL:103MiB ETA:21s]; [#e1fc78 709MiB/2.7GiB(25%) CN:5 DL:103MiB ETA:20s]; [#e1fc78 810MiB/2.7GiB(28%) CN:5 DL:103MiB ETA:19s]; [#e1fc78 913MiB/2.7GiB(32%) CN:5 DL:103MiB ETA:18s]; [#e1fc78 0.9GiB/2.7GiB(35%) CN:5 DL:103MiB ETA:17s]; [#e1fc78 1.0GiB/2.7GiB(39%) CN:5 DL:105MiB ETA:16s]; [#e1fc78 1.1GiB/2.7GiB(43%) CN:5 DL:105MiB ETA:15s]; [#e1fc78 1.2GiB/2.7GiB(46%) CN:5 DL:105MiB ETA:14s]; [#e1fc78 1.4GiB/2.7GiB(50%) CN:5 DL:105MiB ETA:13s]; [#e1fc78 1.5GiB/2.7GiB(54%) CN:5 DL:105MiB ETA:12s]; [#e1fc78 1.6GiB/2.7GiB(58%) ,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/762#issuecomment-1761245149:3745,Down,Download,3745,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/762#issuecomment-1761245149,1,['Down'],['Download']
Availability,513fb5ccce7cce7; Verbosity	3. Start writing to file /tmp/clu//9559457551393989073/input_step1; Time for merging files: 0 h 0 m 0 s; Program call:; /tmp/clu//9559457551393989073/input_step1 /tmp/clu//9559457551393989073/input_step1 /tmp/clu//9559457551393989073/pref_step1 --sub-mat blosum62.out -s 3.5 -k 0 --k-score 2147483647 --alph-size 21 --max-seq-len 65535 --max-seqs 300 --offset-result 0 --split 0 --split-mode 2 --split-memory-limit 0 -c 0.8 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --min-ungapped-score 15 --spaced-kmer-mode 1 --pca 1 --pcb 1.5 --threads 36 -v 3 . MMseqs Version: 	dfb5e6eb53ee034f02cc08d15513fb5ccce7cce7; Sub Matrix 	blosum62.out; Sensitivity 	3.5; K-mer size 	0; K-score 	2147483647; Alphabet size 	21; Max. sequence length 	65535; Max. results per query 	300; Offset result 	0; Split DB 	0; Split mode 	2; Split Memory Limit 	0; Coverage threshold 	0.8; Coverage Mode 	0; Compositional bias 	1; Diagonal Scoring 	1; Exact k-mer matching 	0; Mask Residues 	1; Minimum Diagonal score 	15; Include identical Seq. Id.	false; Spaced Kmer 	1; No preload 	false; Early exit 	false; Pseudo count a 	1; Pseudo count b 	1.5; Threads 	36; Verbosity 	3. Initialising data structures...; Using 36 threads.; Could not find precomputed index. Compute index.; Substitution matrices...; Use kmer size 6 and split 1 using Target split mode.; Needed memory (1084772113 byte) of total memory (365681509171 byte); Target database: /tmp/clu//9559457551393989073/input_step1(Size: 18417); Query database type: Aminoacid; Target database type: Aminoacid; Time for init: 0 h 0 m 0s. Query database: /tmp/clu//9559457551393989073/input_step1(size=18417); Process prefiltering step 1 of 1. Index table: counting k-mers...; .; Index table: Masked residues: 68609; Index table: fill...; .; Index table: removing duplicate entries...; Index table init done. DB statistic; Entries: 3040468; DB Size: 530242808 (byte); Avg Kmer Size: 0.0475073; Top 10 Kmers; 	VT,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/88#issuecomment-401138700:39398,Mask,Mask,39398,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/88#issuecomment-401138700,1,['Mask'],['Mask']
Availability,"5416679/cluster/3119053913462861916/input_step2 /ebio/abt3_scratch/nyoungblut/Struo2_122419461619/cluster_update/11607510948275416679/cluster/3119053913462861916/input_step2 /ebio/abt3_scratch/nyoungblut/Struo2_122419461619/cluster_update/11607510948275416679/cluster/3119053913462861916/pref_step2 --sub-mat nucl:nucleotide.out,aa:blosum62.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -s 4 -k 0 --k-score 2147483647 --alph-size 21 --max-seq-len 65535 --max-seqs 300 --split 0 --split-mode 2 --split-memory-limit 0 -c 0.8 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 12 --compressed 0 -v 3. Query database size: 6 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 6 type: Aminoacid; Index table k-mer threshold: 127 at k-mer size 6; Index table: counting k-mers; [=================================================================] 6 0s 1ms; Index table: Masked residues: 0; Index table: fill; [=================================================================] 6 0s 0ms; Index statistics; Entries: 542; DB size: 488 MB; Avg k-mer size: 0.000008; Top 10 k-mers; GMTEEA	1; LHNWEA	1; SRLLFA	1; VRGIGA	1; LSLTGA	1; ERIAKA	1; TEVGKA	1; NKEIKA	1; GIKKKA	1; DVSNKA	1; Time for index table init: 0h 0m 0s 907ms; Process prefiltering step 1 of 1. k-mer similarity threshold: 127; Starting prefiltering scores calculation (step 1 of 1); Query db start 1 to 6; Target db start 1 to 6; =[================================================================] 6 0s 2ms. 37.492909 k-mers per position; 87 DB matches per sequence; 0 overflows; 0 queries produce too much hits (truncated result); 1 sequences passed prefiltering per query sequence; 1 median result list length; 0 sequences with 0 size result lists; Time for merging to pref_step2: 0h 0m 0s 3ms; Time for processing: 0h 0m 1s 474ms; align /ebio/abt3_scratch",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/333#issuecomment-663145167:29501,Mask,Masked,29501,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/333#issuecomment-663145167,1,['Mask'],['Masked']
Availability,5535; Max. results per query 	300; Offset result 	0; Split DB 	0; Split mode 	2; Split Memory Limit 	0; Coverage threshold 	0.8; Coverage Mode 	0; Compositional bias 	1; Diagonal Scoring 	1; Exact k-mer matching 	0; Mask Residues 	1; Minimum Diagonal score 	15; Include identical Seq. Id.	false; Spaced Kmer 	1; No preload 	false; Early exit 	false; Pseudo count a 	1; Pseudo count b 	1.5; Threads 	36; Verbosity 	3. Initialising data structures...; Using 36 threads.; Could not find precomputed index. Compute index.; Substitution matrices...; Use kmer size 6 and split 1 using Target split mode.; Needed memory (1079694853 byte) of total memory (365681509171 byte); Target database: /tmp/clu//9559457551393989073/input_step2(Size: 16967); Query database type: Aminoacid; Target database type: Aminoacid; Time for init: 0 h 0 m 1s. Query database: /tmp/clu//9559457551393989073/input_step2(size=16967); Process prefiltering step 1 of 1. Index table: counting k-mers...; .; Index table: Masked residues: 66554; Index table: fill...; .; Index table: removing duplicate entries...; Index table init done. DB statistic; Entries: 3321711; DB Size: 531930266 (byte); Avg Kmer Size: 0.0519017; Top 10 Kmers; 	VGSIGF		153; 	LIVVIG		153; 	VLVLVG		153; 	LIVFLI		153; 	IIGSGL		153; 	LFVIGV		153; 	IVFVIV		152; 	VVIVSY		152; 	GEGGTL		13; 	REYQYN		13; Min Kmer Size: 0; Empty list: 61430525. Time for index table init: 0h 0m 0s. k-mer similarity threshold: 86; k-mer match probability: 0. Starting prefiltering scores calculation (step 1 of 1); Query db start 1 to 16967; Target db start 1 to 16967; .; 703 k-mers per position.; 5949 DB matches per sequence.; 0 Overflows.; 76 sequences passed prefiltering per query sequence.; Median result list size: 56; 0 sequences with 0 size result lists. Time for prefiltering scores calculation: 0 h 0 m 8s; Time for merging files: 0 h 0 m 0 s. Overall time for prefiltering run: 0 h 0 m 9s; Program call:; /tmp/clu//9559457551393989073/input_step2 /tmp/clu//9559457551393,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/88#issuecomment-401138700:45314,Mask,Masked,45314,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/88#issuecomment-401138700,1,['Mask'],['Masked']
Availability,5535; Max. results per query 	300; Offset result 	0; Split DB 	0; Split mode 	2; Split Memory Limit 	0; Coverage threshold 	0.8; Coverage Mode 	0; Compositional bias 	1; Diagonal Scoring 	1; Exact k-mer matching 	0; Mask Residues 	1; Minimum Diagonal score 	15; Include identical Seq. Id.	false; Spaced Kmer 	1; No preload 	false; Early exit 	false; Pseudo count a 	1; Pseudo count b 	1.5; Threads 	36; Verbosity 	3. Initialising data structures...; Using 36 threads.; Could not find precomputed index. Compute index.; Substitution matrices...; Use kmer size 6 and split 1 using Target split mode.; Needed memory (1084772113 byte) of total memory (365681509171 byte); Target database: /tmp/clu//9559457551393989073/input_step1(Size: 18417); Query database type: Aminoacid; Target database type: Aminoacid; Time for init: 0 h 0 m 0s. Query database: /tmp/clu//9559457551393989073/input_step1(size=18417); Process prefiltering step 1 of 1. Index table: counting k-mers...; .; Index table: Masked residues: 68609; Index table: fill...; .; Index table: removing duplicate entries...; Index table init done. DB statistic; Entries: 3040468; DB Size: 530242808 (byte); Avg Kmer Size: 0.0475073; Top 10 Kmers; 	VTDTGV		157; 	RITYTD		155; 	TEAYVE		155; 	AYTDLI		155; 	GTYTRI		155; 	RIITQN		155; 	KQYLTN		155; 	IGAGDR		155; 	TVQYFT		155; 	IRGATT		155; Min Kmer Size: 0; Empty list: 61632943. Time for index table init: 0h 0m 1s. k-mer similarity threshold: 108; k-mer match probability: 0. Starting prefiltering scores calculation (step 1 of 1); Query db start 1 to 18417; Target db start 1 to 18417; .; 32 k-mers per position.; 436 DB matches per sequence.; 0 Overflows.; 5 sequences passed prefiltering per query sequence.; Median result list size: 3; 0 sequences with 0 size result lists. Time for prefiltering scores calculation: 0 h 0 m 1s; Time for merging files: 0 h 0 m 0 s. Overall time for prefiltering run: 0 h 0 m 2s; Program call:; /tmp/clu//9559457551393989073/input_step1 /tmp/clu//95594575513939,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/88#issuecomment-401138700:40169,Mask,Masked,40169,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/88#issuecomment-401138700,1,['Mask'],['Masked']
Availability,56257 4.5GiB/5.7GiB(79%) CN:5 DL:111MiB ETA:10s]; [#156257 4.6GiB/5.7GiB(81%) CN:5 DL:111MiB ETA:9s]; [#156257 4.7GiB/5.7GiB(83%) CN:5 DL:111MiB ETA:8s]; [#156257 4.8GiB/5.7GiB(85%) CN:5 DL:111MiB ETA:7s]; [#156257 4.9GiB/5.7GiB(87%) CN:5 DL:111MiB ETA:6s]; [#156257 5.0GiB/5.7GiB(89%) CN:5 DL:111MiB ETA:5s]; [#156257 5.2GiB/5.7GiB(91%) CN:5 DL:111MiB ETA:4s]; [#156257 5.3GiB/5.7GiB(92%) CN:5 DL:111MiB ETA:3s]; [#156257 5.4GiB/5.7GiB(94%) CN:5 DL:111MiB ETA:2s]; [#156257 5.5GiB/5.7GiB(96%) CN:5 DL:111MiB ETA:1s]; [#156257 5.6GiB/5.7GiB(98%) CN:5 DL:111MiB]. 10/13 10:50:57 [NOTICE] Download complete: tmp/3093587253482177683/bacteria.tar. Download Results:; gid |stat|avg speed |path/URI; ======+====+===========+=======================================================; 156257|OK | 110MiB/s|tmp/3093587253482177683/bacteria.tar. Status Legend:; (OK):download completed. 10/13 10:50:57 [NOTICE] Downloading 1 item(s); [#8c18ae 81MiB/85MiB(95%) CN:3 DL:90MiB]. 10/13 10:50:58 [NOTICE] Download complete: tmp/3093587253482177683/archea.tar. Download Results:; gid |stat|avg speed |path/URI; ======+====+===========+=======================================================; 8c18ae|OK | 87MiB/s|tmp/3093587253482177683/archea.tar. Status Legend:; (OK):download completed. 10/13 10:50:58 [NOTICE] Downloading 1 item(s); [#e1fc78 82MiB/2.7GiB(2%) CN:5 DL:89MiB ETA:30s]; [#e1fc78 182MiB/2.7GiB(6%) CN:5 DL:95MiB ETA:27s]; [#e1fc78 283MiB/2.7GiB(10%) CN:5 DL:97MiB ETA:26s]; [#e1fc78 387MiB/2.7GiB(13%) CN:5 DL:99MiB ETA:24s]; [#e1fc78 497MiB/2.7GiB(17%) CN:5 DL:101MiB ETA:22s]; [#e1fc78 606MiB/2.7GiB(21%) CN:5 DL:103MiB ETA:21s]; [#e1fc78 709MiB/2.7GiB(25%) CN:5 DL:103MiB ETA:20s]; [#e1fc78 810MiB/2.7GiB(28%) CN:5 DL:103MiB ETA:19s]; [#e1fc78 913MiB/2.7GiB(32%) CN:5 DL:103MiB ETA:18s]; [#e1fc78 0.9GiB/2.7GiB(35%) CN:5 DL:103MiB ETA:17s]; [#e1fc78 1.0GiB/2.7GiB(39%) CN:5 DL:105MiB ETA:16s]; [#e1fc78 1.1GiB/2.7GiB(43%) CN:5 DL:105MiB ETA:15s]; [#e1fc78 1.2GiB/2.7GiB(46%) CN:5 DL:105MiB ETA:14s]; [,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/762#issuecomment-1761245149:3690,Down,Download,3690,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/762#issuecomment-1761245149,1,['Down'],['Download']
Availability,"572/query tmp//15404483323509150572/taxonomy_tmp/7054630145456894787/orfs_aa --min-length 30 --max-length 32734 --max-gaps 2147483647 --contig-start-mode 2 --contig-end-mode 2 --orf-start-mode 1 --forward-frames 1,2,3 --reverse-frames 1,2,3 --translation-table 1 --translate 1 --use-all-table-starts 0 --id-offset 0 --create-lookup 0 --threads 128 --compressed 0 -v 3. [=================================================================] 100.00% 10 0s 71ms; Time for merging to orfs_aa_h: 0h 0m 0s 759ms; Time for merging to orfs_aa: 0h 0m 0s 726ms; Time for processing: 0h 0m 3s 54ms; prefilter tmp//15404483323509150572/taxonomy_tmp/7054630145456894787/orfs_aa MicroEuk100.eukaryota_odb10.idx tmp//15404483323509150572/taxonomy_tmp/7054630145456894787/orfs_pref --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --seed-sub-mat 'aa:VTML80.out,nucl:nucleotide.out' -s 2 -k 0 --k-score seq:2147483647,prof:2147483647 --alph-size aa:21,nucl:5 --max-seq-len 65535 --max-seqs 1 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --comp-bias-corr-scale 1 --diag-score 0 --exact-kmer-matching 0 --mask 1 --mask-prob 0.9 --mask-lower-case 0 --min-ungapped-score 3 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --threads 128 --compressed 0 -v 3. Index version: 16; Generated by: 14.7e284; ScoreMatrix: VTML80.out; Query database size: 2310 type: Aminoacid; Estimated memory consumption: 7G; Target database size: 713072 type: Aminoacid; Process prefiltering step 1 of 1. k-mer similarity threshold: 145; Starting prefiltering scores calculation (step 1 of 1); Query db start 1 to 2310; Target db start 1 to 713072; [=================================================================] 100.00% 2.31K 0s 200ms. 8.191356 k-mers per position; 1212 DB matches per sequence; 0 overflows; 0 queries produce too many hits (truncated result); 0 sequences passed prefiltering per query sequence; 0 ",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/779#issuecomment-1872491640:5190,mask,mask,5190,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/779#issuecomment-1872491640,2,['mask'],"['mask', 'mask-prob']"
Availability,59457551393989073/linclust/16641318581476709947/clust . MMseqs Version:	dfb5e6eb53ee034f02cc08d15513fb5ccce7cce7; Threads 	36; Merge by DB	false. List amount 1132486; Clustering step 1...; Clustering step 2...; Writing the results...; Time for merging files: 0 h 0 m 0 s; ...done.; Program call:; /tmp/clu//9559457551393989073/clu_redundancy panproteome.db /tmp/clu//9559457551393989073/input_step_redundancy . MMseqs Version:	dfb5e6eb53ee034f02cc08d15513fb5ccce7cce7; Verbosity	3. Start writing to file /tmp/clu//9559457551393989073/input_step_redundancy; Time for merging files: 0 h 0 m 0 s; Program call:; /tmp/clu//9559457551393989073/input_step_redundancy /tmp/clu//9559457551393989073/input_step_redundancy /tmp/clu//9559457551393989073/pref_step0 --sub-mat blosum62.out -s 1 -k 0 --k-score 2147483647 --alph-size 21 --max-seq-len 65535 --max-seqs 300 --offset-result 0 --split 0 --split-mode 2 --split-memory-limit 0 -c 0.8 --cov-mode 0 --comp-bias-corr 0 --diag-score 0 --exact-kmer-matching 0 --mask 1 --min-ungapped-score 0 --spaced-kmer-mode 1 --pca 1 --pcb 1.5 --threads 36 -v 3 . MMseqs Version: 	dfb5e6eb53ee034f02cc08d15513fb5ccce7cce7; Sub Matrix 	blosum62.out; Sensitivity 	1; K-mer size 	0; K-score 	2147483647; Alphabet size 	21; Max. sequence length 	65535; Max. results per query 	300; Offset result 	0; Split DB 	0; Split mode 	2; Split Memory Limit 	0; Coverage threshold 	0.8; Coverage Mode 	0; Compositional bias 	0; Diagonal Scoring 	0; Exact k-mer matching 	0; Mask Residues 	1; Minimum Diagonal score 	0; Include identical Seq. Id.	false; Spaced Kmer 	1; No preload 	false; Early exit 	false; Pseudo count a 	1; Pseudo count b 	1.5; Threads 	36; Verbosity 	3. Initialising data structures...; Using 36 threads.; Could not find precomputed index. Compute index.; Substitution matrices...; Use kmer size 6 and split 1 using Target split mode.; Needed memory (1100935225 byte) of total memory (365681509171 byte); Target database: /tmp/clu//9559457551393989073/input_step_red,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/88#issuecomment-401138700:33617,mask,mask,33617,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/88#issuecomment-401138700,1,['mask'],['mask']
Availability,"5; Compositional bias 1; Realign hits false; Max reject 2147483647; Max accept 2147483647; Include identical seq. id. false; Preload mode 0; Pseudo count a 1; Pseudo count b 1.5; Score bias 0; Gap open cost 11; Gap extension cost 1; Zdrop 40; Alphabet size nucl:5,aa:21; k-mers per sequence 40; Spaced k-mers 0; Spaced k-mer pattern; Scale k-mers per sequence nucl:0.200,aa:0.000; Adjust k-mer length false; Mask residues 0; Mask lower case residues 0; k-mer length 0; Shift hash 67; Split memory limit 0; Include only extendable false; Skip repeating k-mers false; Rescore mode 0; Remove hits by seq. id. and coverage false; Sort results 0; Remove temporary files false; Force restart with latest tmp false; MPI runner. Set cluster mode SET COVER.; kmermatcher inDB tmp/18375844090983922724/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-id 0.9 --kmer-per-seq 40 --spaced-kmer-mode 0 --kmer-per-seq-scale; nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.9 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-mul; ti-kmer 0 --threads 160 --compressed 0 -v 3. kmermatcher inDB tmp/18375844090983922724/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-id 0.9 --kmer-per-seq 40 --spaced-kmer-mode 0 --kmer-per-seq-scale; nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.9 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-mul; ti-kmer 0 --threads 160 --compressed 0 -v 3. Database size: 2830651961 type: Aminoacid; Reduced amino acid alphabet: (A S T) (C) (D B N) (E Q Z) (F Y) (G) (H) (I V) (K R) (L J M) (P) (W) (X). Generate k-mers list for 1 split; [=================================================================] 100.00% 2.83B 2h 28m 50s 478ms. Sort kmer 1h 11m 10s 680ms; Time for fill: 0h 14m 35s 645ms; Time for merging to pref: 0h 31m 17s",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/303#issuecomment-625917311:1919,mask,mask,1919,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/303#issuecomment-625917311,2,['mask'],"['mask', 'mask-lower-case']"
Availability,"62.out,nucl:nucleotide.out; Add backtrace 	false; Alignment mode 	3; Alignment mode 	0; Allow wrapped scoring 	false; E-value threshold 	0.001; Seq. id. threshold 	0; Min alignment length 	0; Seq. id. mode 	0; Alternative alignments 	0; Coverage threshold 	0; Coverage mode 	0; Max sequence length 	65535; Compositional bias 	1; Compositional bias 	1; Max reject 	2147483647; Max accept 	2147483647; Include identical seq. id. 	false; Preload mode 	0; Pseudo count a 	substitution:1.100,context:1.400; Pseudo count b 	substitution:4.100,context:5.800; Score bias 	0; Realign hits 	false; Realign score bias 	-0.2; Realign max seqs 	2147483647; Correlation score weight 	0; Gap open cost 	aa:11,nucl:5; Gap extension cost 	aa:1,nucl:2; Zdrop 	40; Threads 	32; Compressed 	0; Verbosity 	3; Seed substitution matrix 	aa:VTML80.out,nucl:nucleotide.out; Sensitivity 	7; k-mer length 	0; Target search mode 	0; k-score 	seq:2147483647,prof:2147483647; Alphabet size 	aa:21,nucl:5; Max results per query 	300; Split database 	0; Split mode 	2; Split memory limit 	0; Diagonal scoring 	true; Exact k-mer matching 	0; Mask residues 	1; Mask residues probability 	0.9; Mask lower case residues 	0; Minimum diagonal score 	15; Selected taxa 	; Spaced k-mers 	1; Spaced k-mer pattern 	; Local temporary path 	; Rescore mode 	0; Remove hits by seq. id. and coverage 	false; Sort results 	0; Mask profile 	1; Profile E-value threshold 	0.001; Global sequence weighting 	false; Allow deletions 	false; Filter MSA 	1; Use filter only at N seqs 	0; Maximum seq. id. threshold 	0.9; Minimum seq. id. 	0.0; Minimum score per column 	-20; Minimum coverage 	0; Select N most diverse seqs 	1000; Pseudo count mode 	0; Min codons in orf 	30; Max codons in length 	32734; Max orf gaps 	2147483647; Contig start mode 	2; Contig end mode 	2; Orf start mode 	1; Forward frames 	1,2,3; Reverse frames 	1,2,3; Translation table 	1; Translate orf 	0; Use all table starts 	false; Offset of numeric ids 	0; Create lookup 	0; Add or",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/805#issuecomment-1899655257:1433,Mask,Mask,1433,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/805#issuecomment-1899655257,2,['Mask'],['Mask']
Availability,6257 4.0GiB/5.7GiB(70%) CN:5 DL:110MiB ETA:15s]; [#156257 4.1GiB/5.7GiB(72%) CN:5 DL:111MiB ETA:14s]; [#156257 4.2GiB/5.7GiB(74%) CN:5 DL:111MiB ETA:13s]; [#156257 4.3GiB/5.7GiB(76%) CN:5 DL:111MiB ETA:12s]; [#156257 4.4GiB/5.7GiB(77%) CN:5 DL:111MiB ETA:11s]; [#156257 4.5GiB/5.7GiB(79%) CN:5 DL:111MiB ETA:10s]; [#156257 4.6GiB/5.7GiB(81%) CN:5 DL:111MiB ETA:9s]; [#156257 4.7GiB/5.7GiB(83%) CN:5 DL:111MiB ETA:8s]; [#156257 4.8GiB/5.7GiB(85%) CN:5 DL:111MiB ETA:7s]; [#156257 4.9GiB/5.7GiB(87%) CN:5 DL:111MiB ETA:6s]; [#156257 5.0GiB/5.7GiB(89%) CN:5 DL:111MiB ETA:5s]; [#156257 5.2GiB/5.7GiB(91%) CN:5 DL:111MiB ETA:4s]; [#156257 5.3GiB/5.7GiB(92%) CN:5 DL:111MiB ETA:3s]; [#156257 5.4GiB/5.7GiB(94%) CN:5 DL:111MiB ETA:2s]; [#156257 5.5GiB/5.7GiB(96%) CN:5 DL:111MiB ETA:1s]; [#156257 5.6GiB/5.7GiB(98%) CN:5 DL:111MiB]. 10/13 10:50:57 [NOTICE] Download complete: tmp/3093587253482177683/bacteria.tar. Download Results:; gid |stat|avg speed |path/URI; ======+====+===========+=======================================================; 156257|OK | 110MiB/s|tmp/3093587253482177683/bacteria.tar. Status Legend:; (OK):download completed. 10/13 10:50:57 [NOTICE] Downloading 1 item(s); [#8c18ae 81MiB/85MiB(95%) CN:3 DL:90MiB]. 10/13 10:50:58 [NOTICE] Download complete: tmp/3093587253482177683/archea.tar. Download Results:; gid |stat|avg speed |path/URI; ======+====+===========+=======================================================; 8c18ae|OK | 87MiB/s|tmp/3093587253482177683/archea.tar. Status Legend:; (OK):download completed. 10/13 10:50:58 [NOTICE] Downloading 1 item(s); [#e1fc78 82MiB/2.7GiB(2%) CN:5 DL:89MiB ETA:30s]; [#e1fc78 182MiB/2.7GiB(6%) CN:5 DL:95MiB ETA:27s]; [#e1fc78 283MiB/2.7GiB(10%) CN:5 DL:97MiB ETA:26s]; [#e1fc78 387MiB/2.7GiB(13%) CN:5 DL:99MiB ETA:24s]; [#e1fc78 497MiB/2.7GiB(17%) CN:5 DL:101MiB ETA:22s]; [#e1fc78 606MiB/2.7GiB(21%) CN:5 DL:103MiB ETA:21s]; [#e1fc78 709MiB/2.7GiB(25%) CN:5 DL:103MiB ETA:20s]; [#e1fc78 810MiB/2.7GiB(28%) CN:5 DL:103MiB ETA:19s]; [,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/762#issuecomment-1761245149:3346,Down,Download,3346,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/762#issuecomment-1761245149,1,['Down'],['Download']
Availability,"64721939282577716/input tmp2/6664721939282577716/clu_tmp/1194185237556116514/clu_redundancy tmp2/6664721939282577716/clu_tmp/1194185237556116514/linclust --cluster-mode 0 --max-iterations 1000 --similarity-type 2 --threads 24 --compressed 0 -v 3 --cluster-weight-threshold 0.9 --sub-mat aa:blosum62.out,nucl:nucleotide.out -a 0 --alignment-mode 3 --alignment-output-mode 0 --wrapped-scoring 0 -e 0.001 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 1 --comp-bias-corr-scale 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --corr-score-weight 0 --gap-open aa:11,nucl:5 --gap-extend aa:1,nucl:2 --zdrop 40 --alph-size aa:13,nucl:5 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-prob 0.9 --mask-lower-case 0 -k 0 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --rescore-mode 0 --filter-hits 0 --sort-results 0 --remove-tmp-files 1 --force-reuse 0. MMseqs Version: 	6b9388469a41935813f5d207d6d149767feb4c42-MPI; Cluster mode 	0; Max connected component depth 	1000; Similarity type 	2; Threads 	24; Compressed 	0; Verbosity 	3; Weight file name; Cluster Weight threshold 	0.9; Substitution matrix 	aa:blosum62.out,nucl:nucleotide.out; Add backtrace 	false; Alignment mode 	3; Alignment mode 	0; Allow wrapped scoring 	false; E-value threshold 	0.001; Seq. id. threshold 	0; Min alignment length 	0; Seq. id. mode 	0; Alternative alignments 	0; Coverage threshold 	0.8; Coverage mode 	0; Max sequence length 	65535; Compositional bias 	1; Compositional bias 	1; Max reject 	2147483647; Max accept 	2147483647; Include identical seq. id. 	false; Preload mode 	0; Pseudo count a 	substitution:1.100,context:1.400; Pseudo coun",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/679#issuecomment-1461610364:2511,mask,mask,2511,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/679#issuecomment-1461610364,2,['mask'],"['mask', 'mask-prob']"
Availability,"67; Include only extendable false; Skip repeating k-mers false. Set cluster sensitivity to -s 6.000000; Set cluster iterations to 3; linclust DB_in tmp//10798751672030653963/clu_redundancy tmp//10798751672030653963/linclust --cluster-mode 0 --max-iterations 1000 --similarity-type 2 --threads 16 --compressed 0 -v 3 --sub-mat nucl:nucleotide.out,aa:blosum62.out -a 0 --alignment-mode 3 --wrapped-scoring 0 -e 0.001 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --zdrop 40 --alph-size nucl:5,aa:13 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 -k 0 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --rescore-mode 0 --filter-hits 0 --sort-results 0 --remove-tmp-files 0 --force-reuse 0. kmermatcher DB_in tmp//10798751672030653963/linclust/5052420726377277994/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-id 0 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 16 --compressed 0 -v 3. kmermatcher DB_in tmp//10798751672030653963/linclust/5052420726377277994/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-id 0 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-k",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-775767472:2910,mask,mask,2910,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-775767472,2,['mask'],"['mask', 'mask-lower-case']"
Availability,68579862/linclust/13628666274102407548/clu tmp/425628692068579862/linclust/13628666274102407548/pre_clust tmp/425628692068579862/linclust/13628666274102407548/clust . MMseqs Version:	GITDIR-NOTFOUND; Threads 	36; Verbosity	3. List amount 2486510; Clustering step 1...; Clustering step 2...; Writing the results...; Time for merging files: 0 h 0 m 1 s; ...done.; Program call:; tmp/425628692068579862/clu_redundancy panproteome.db tmp/425628692068579862/input_step_redundancy . MMseqs Version:	GITDIR-NOTFOUND; Verbosity	3. Start writing to file tmp/425628692068579862/input_step_redundancy; Time for merging files: 0 h 0 m 0 s; Program call:; tmp/425628692068579862/input_step_redundancy tmp/425628692068579862/input_step_redundancy tmp/425628692068579862/pref_step0 --sub-mat blosum62.out -s 1 -k 0 --k-score 2147483647 --alph-size 21 --max-seq-len 32000 --max-seqs 20 --offset-result 0 --split 0 --split-mode 2 --split-memory-limit 0 -c 0.8 --cov-mode 0 --comp-bias-corr 0 --diag-score 0 --mask 1 --min-ungapped-score 0 --spaced-kmer-mode 1 --pca 1 --pcb 1.5 --threads 10 -v 3 . MMseqs Version: 	GITDIR-NOTFOUND; Sub Matrix 	blosum62.out; Sensitivity 	1; K-mer size 	0; K-score 	2147483647; Alphabet size 	21; Max. sequence length 	32000; Max. results per query 	20; Offset result 	0; Split DB 	0; Split mode 	2; Split Memory Limit 	0; Coverage threshold 	0.8; Coverage Mode 	0; Compositional bias 	0; Diagonal Scoring 	0; Mask Residues 	1; Minimum Diagonal score 	0; Include identical Seq. Id.	false; Spaced Kmer 	1; No preload 	false; Early exit 	false; Pseudo count a 	1; Pseudo count b 	1.5; Threads 	10; Verbosity 	3. Initialising data structures...; Using 10 threads.; Could not find precomputed index. Compute index.; Substitution matrices...; Use kmer size 6 and split 1 using Target split mode.; Needed memory (1294083635 byte) of total memory (365681560780 byte); Target database: tmp/425628692068579862/input_step_redundancy(Size: 77285); Query database type: Aminoacid; Target database ,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/88#issuecomment-391976251:105662,mask,mask,105662,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/88#issuecomment-391976251,1,['mask'],['mask']
Availability,"69/search_tmp/17414849138893322762/search/aln_merged -v 3 . Time for processing: 0h 0m 0s 881ms; mvdb /tmp/tmp_MMSeq2//17595625152138277869/search_tmp/17414849138893322762/search/aln_merged_new /tmp/tmp_MMSeq2//17595625152138277869/search_tmp/17414849138893322762/search/aln_merged -v 3 . Time for processing: 0h 0m 0s 0ms; rmdb /tmp/tmp_MMSeq2//17595625152138277869/search_tmp/17414849138893322762/search/aln_swap -v 3 . Time for processing: 0h 0m 36s 927ms; prefilter /tmp/tmp_MMSeq2//17595625152138277869/search_tmp/17414849138893322762/search/profileDB /tmp/tmp_MMSeq2//17595625152138277869/search_tmp/17414849138893322762/query_seqs_split /tmp/tmp_MMSeq2//17595625152138277869/search_tmp/17414849138893322762/search/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -s 5.7 -k 15 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 10000 --max-seqs 2147483647 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 1 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 256 --compressed 0 -v 3 . Query database size: 23551830 type: Nucleotide; Estimated memory consumption: 9G; Target database size: 69220 type: Nucleotide; Index table k-mer threshold: 0 at k-mer size 15 ; Index table: counting k-mers; [=================================================================] 69.22K 0s 211ms; Index table: Masked residues: 724; Index table: fill; [=================================================================] 69.22K 0s 73ms; Index statistics; Entries: 15985099; DB size: 8283 MB; Avg k-mer size: 0.014887; Top 10 k-mers; CCCTCGCTCCGTTCG	31729; GGGGAAAGGTTGGGG	31239; ATTCGGTGAGTAATG	31054; CTCGCCCTCCCCAGC	31010; CGACCTACCACCCCT	31003; CGGGAGCGTGTCGAG	30951; GGGCGAGGAACGGGG	30939; GCCCACCGACACTGG	30933; ACCACTTGGTGAGGG	30876; AAGGTATCGGGTTGG	30837; Time for index table init: 0h 0",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/394#issuecomment-782439476:18791,mask,mask,18791,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/394#issuecomment-782439476,4,['mask'],"['mask', 'mask-lower-case']"
Availability,"721939282577716/input tmp2/6664721939282577716/clu_tmp/1194185237556116514/clu_redundancy tmp2/6664721939282577716/clu_tmp/1194185237556116514/linclust --cluster-mode 0 --max-iterations 1000 --similarity-type 2 --threads 24 --compressed 0 -v 3 --cluster-weight-threshold 0.9 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' -a 0 --alignment-mode 3 --alignment-output-mode 0 --wrapped-scoring 0 -e 0.001 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 1 --comp-bias-corr-scale 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --corr-score-weight 0 --gap-open aa:11,nucl:5 --gap-extend aa:1,nucl:2 --zdrop 40 --alph-size aa:13,nucl:5 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-prob 0.9 --mask-lower-case 0 -k 0 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --rescore-mode 0 --filter-hits 0 --sort-results 0 --remove-tmp-files 1 --force-reuse 0; ```. Output:; ```; linclust tmp2/6664721939282577716/input tmp2/6664721939282577716/clu_tmp/1194185237556116514/clu_redundancy tmp2/6664721939282577716/clu_tmp/1194185237556116514/linclust --cluster-mode 0 --max-iterations 1000 --similarity-type 2 --threads 24 --compressed 0 -v 3 --cluster-weight-threshold 0.9 --sub-mat aa:blosum62.out,nucl:nucleotide.out -a 0 --alignment-mode 3 --alignment-output-mode 0 --wrapped-scoring 0 -e 0.001 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 1 --comp-bias-corr-scale 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --score-bias 0 --realign 0 ",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/679#issuecomment-1461610364:1248,mask,mask,1248,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/679#issuecomment-1461610364,2,['mask'],"['mask', 'mask-prob']"
Availability,77 0 Jan 27 16:54 GTDB; -rw-r--r-- 1 gnii0001 pc77 4 Jan 27 16:54 GTDB.dbtype; -rw-r--r-- 1 gnii0001 pc77 0 Jan 27 16:54 GTDB_h; -rw-r--r-- 1 gnii0001 pc77 4 Jan 27 16:54 GTDB_h.dbtype; -rw-r--r-- 1 gnii0001 pc77 0 Jan 27 16:54 GTDB_h.index; -rw-r--r-- 1 gnii0001 pc77 0 Jan 27 16:54 GTDB.index; -rw-r--r-- 1 gnii0001 pc77 0 Jan 27 17:33 GTDB_mapping; -rw-r--r-- 1 gnii0001 pc77 0 Jan 27 16:54 GTDB.source; -rw-r--r-- 1 gnii0001 pc77 25771406 Jan 27 17:33 GTDB_taxonomy. # slurm error; awk: cmd. line:1: fatal: cannot open file `/home/gnii0001/pc77/scratch_nobackup/Database/mmseqs_formatted/GTDB.lookup' for reading: No such file or directory. # slurm standard output:; ....; Download Results:; gid |stat|avg speed |path/URI; ======+====+===========+=======================================================; 94ce2b|OK | 88MiB/s|/home/gnii0001/pc77/scratch_nobackup/Database/mmseqs_formatted/tmp/13846894499670505008/bac120_taxonomy.tsv. Status Legend:; (OK):download completed. 01/27 17:33:08 [NOTICE] Downloading 1 item(s). 01/27 17:33:09 [NOTICE] Download complete: /home/gnii0001/pc77/scratch_nobackup/Database/mmseqs_formatted/tmp/13846894499670505008/ar53_taxonomy.tsv. Download Results:; gid |stat|avg speed |path/URI; ======+====+===========+=======================================================; 13f000|OK | 6.3MiB/s|/home/gnii0001/pc77/scratch_nobackup/Database/mmseqs_formatted/tmp/13846894499670505008/ar53_taxonomy.tsv. Status Legend:; (OK):download completed.; Create directory /home/gnii0001/pc77/scratch_nobackup/Database/mmseqs_formatted/tmp/13846894499670505008/taxdb; createtaxdb /home/gnii0001/pc77/scratch_nobackup/Database/mmseqs_formatted/GTDB /home/gnii0001/pc77/scratch_nobackup/Database/mmseqs_formatted/tmp/13846894499670505008/taxdb --ncbi-tax-dump /home/gnii0001/pc77/scratch_nobackup/Database/mmseqs_formatted/tmp/13846894499670505008/taxonomy --tax-mapping-file /home/gnii0001/pc77/scratch_nobackup/Database/mmseqs_formatted/tmp/13846894499670505008/taxonomy/mapping_ge,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/758#issuecomment-1913045806:1334,Down,Downloading,1334,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/758#issuecomment-1913045806,1,['Down'],['Downloading']
Availability,"787/tmp_taxonomy/7007534916548188170/first tmp//15404483323509150572/taxonomy_tmp/7054630145456894787/tmp_taxonomy/7007534916548188170/tmp_hsp1 --alignment-mode 1 -e 1 --max-rejected 5 --max-accept 30 -s 2 --spaced-kmer-mode 1 --min-length 30 --max-length 32734 --orf-start-mode 1 --lca-search 1 --remove-tmp-files 1. prefilter tmp//15404483323509150572/taxonomy_tmp/7054630145456894787/orfs_filter MicroEuk100.eukaryota_odb10.idx tmp//15404483323509150572/taxonomy_tmp/7054630145456894787/tmp_taxonomy/7007534916548188170/tmp_hsp1/11550195074827057389/pref_0 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --seed-sub-mat 'aa:VTML80.out,nucl:nucleotide.out' -k 0 --k-score seq:2147483647,prof:2147483647 --alph-size aa:21,nucl:5 --max-seq-len 65535 --max-seqs 300 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --comp-bias-corr-scale 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-prob 0.9 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --threads 128 --compressed 0 -v 3 -s 2.0. Index version: 16; Generated by: 14.7e284; ScoreMatrix: VTML80.out; Query database size: 9 type: Aminoacid; Estimated memory consumption: 7G; Target database size: 713072 type: Aminoacid; Process prefiltering step 1 of 1. k-mer similarity threshold: 145; Starting prefiltering scores calculation (step 1 of 1); Query db start 1 to 9; Target db start 1 to 713072; [=================================================================] 100.00% 9 0s 6ms. 10.636821 k-mers per position; 10265 DB matches per sequence; 0 overflows; 0 queries produce too many hits (truncated result); 66 sequences passed prefiltering per query sequence; 36 median result list length; 0 sequences with 0 size result lists; Time for merging to pref_0: 0h 0m 0s 38ms; Time for processing: 0h 0m 0s 251ms; lcaalign tmp//15404483323509150572/taxonomy_tmp/7054630145456",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/779#issuecomment-1872491640:9538,mask,mask-lower-case,9538,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/779#issuecomment-1872491640,1,['mask'],['mask-lower-case']
Availability,"79/cluster/3119053913462861916/input_step_redundancy /ebio/abt3_scratch/nyoungblut/Struo2_122419461619/cluster_update/11607510948275416679/cluster/3119053913462861916/input_step1 -v 3 --subdb-mode 1. Time for merging to input_step1: 0h 0m 0s 1ms; Time for processing: 0h 0m 0s 4ms; prefilter /ebio/abt3_scratch/nyoungblut/Struo2_122419461619/cluster_update/11607510948275416679/cluster/3119053913462861916/input_step1 /ebio/abt3_scratch/nyoungblut/Struo2_122419461619/cluster_update/11607510948275416679/cluster/3119053913462861916/input_step1 /ebio/abt3_scratch/nyoungblut/Struo2_122419461619/cluster_update/11607510948275416679/cluster/3119053913462861916/pref_step1 --sub-mat nucl:nucleotide.out,aa:blosum62.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -s 2.5 -k 0 --k-score 2147483647 --alph-size 21 --max-seq-len 65535 --max-seqs 300 --split 0 --split-mode 2 --split-memory-limit 0 -c 0.8 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 12 --compressed 0 -v 3. Query database size: 6 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 6 type: Aminoacid; Index table k-mer threshold: 140 at k-mer size 6; Index table: counting k-mers; [=================================================================] 6 0s 1ms; Index table: Masked residues: 0; Index table: fill; [=================================================================] 6 0s 0ms; Index statistics; Entries: 497; DB size: 488 MB; Avg k-mer size: 0.000008; Top 10 k-mers; GMTEEA	1; LHNWEA	1; SRLLFA	1; VRGIGA	1; ERIAKA	1; TEVGKA	1; NKEIKA	1; GIKKKA	1; DVSNKA	1; INISKA	1; Time for index table init: 0h 0m 0s 885ms; Process prefiltering step 1 of 1. k-mer similarity threshold: 140; Starting prefiltering scores calculation (step 1 of 1); Query db start 1 to 6; Target db start 1 to 6; [=======================================================",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/333#issuecomment-663145167:24000,mask,mask,24000,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/333#issuecomment-663145167,2,['mask'],"['mask', 'mask-lower-case']"
Availability,"7; Max Accept 	2147483647; Include identical Seq. Id. 	false; No preload 	false; Early exit 	false; Pseudo count a 	1; Pseudo count b 	1.5; Alphabet size 	13; Kmer per sequence 	80; Mask Residues 	0; K-mer size 	0; Shift hash 	5; Split Memory Limit 	0; Include only extendable 	false; Skip sequence with n repeating k-mers 	0; Rescore mode 	0; Remove hits by seq.id. and coverage 	false; In substitution scoring mode, performs global alignment along the diagonal	false; Remove Temporary Files 	false; Sets the MPI runner 	. Program call:; panproteome.db /tmp/test/9465698490903227639/linclust/831108043510341376/pref --sub-mat blosum62.out --alph-size 13 --min-seq-id 0.8 --kmer-per-seq 80 --mask 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 5 --split-memory-limit 0 --skip-n-repeat-kmer 0 --threads 10 -v 3 . MMseqs Version: 	dfb5e6eb53ee034f02cc08d15513fb5ccce7cce7; Sub Matrix 	blosum62.out; Alphabet size 	13; Seq. Id Threshold 	0.8; Kmer per sequence 	80; Mask Residues 	0; Coverage Mode 	0; K-mer size 	10; Coverage threshold 	0.8; Max. sequence length 	65535; Shift hash 	5; Split Memory Limit 	0; Include only extendable 	false; Skip sequence with n repeating k-mers	0; Threads 	10; Verbosity 	3. Database type: Aminoacid; V -> I; M -> L; Q -> E; T -> S; R -> K; Y -> F; S -> A; N -> D; Reduced amino acid alphabet:; A C D E F G H I K L P W X . Needed memory (1384664272 byte) of total memory (365681509171 byte); Process file into 1 parts; Generate k-mers list 0; ...................................................................................................	1 Mio. sequences processed; .............; Time for fill: 0 h 0 m 2s; Done.; Sort kmer ... Done.; Time for sort: 0 h 0 m 7s; Sort by rep. sequence ... Done; Time for sort: 0 h 0 m 4s; Time for fill: 0 h 0 m 0s; Time for merging files: 0 h 0 m 0 s; Time for processing: 0 h 0 m 14s; Rescore diagonals.; Program call:; panproteome.db panproteome.db /tmp/test/9465698490903227639/linclust/831108043510341376/pref /t",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/88#issuecomment-401138700:3967,Mask,Mask,3967,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/88#issuecomment-401138700,1,['Mask'],['Mask']
Availability,"85237556116514/linclust --cluster-mode 0 --max-iterations 1000 --similarity-type 2 --threads 24 --compressed 0 -v 3 --cluster-weight-threshold 0.9 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' -a 0 --alignment-mode 3 --alignment-output-mode 0 --wrapped-scoring 0 -e 0.001 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 1 --comp-bias-corr-scale 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --corr-score-weight 0 --gap-open aa:11,nucl:5 --gap-extend aa:1,nucl:2 --zdrop 40 --alph-size aa:13,nucl:5 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-prob 0.9 --mask-lower-case 0 -k 0 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --rescore-mode 0 --filter-hits 0 --sort-results 0 --remove-tmp-files 1 --force-reuse 0; ```. Output:; ```; linclust tmp2/6664721939282577716/input tmp2/6664721939282577716/clu_tmp/1194185237556116514/clu_redundancy tmp2/6664721939282577716/clu_tmp/1194185237556116514/linclust --cluster-mode 0 --max-iterations 1000 --similarity-type 2 --threads 24 --compressed 0 -v 3 --cluster-weight-threshold 0.9 --sub-mat aa:blosum62.out,nucl:nucleotide.out -a 0 --alignment-mode 3 --alignment-output-mode 0 --wrapped-scoring 0 -e 0.001 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 1 --comp-bias-corr-scale 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --corr-score-weight 0 --gap-open aa:11,nucl:5 --gap-extend aa:1,nucl:2 ",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/679#issuecomment-1461610364:1273,mask,mask-lower-case,1273,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/679#issuecomment-1461610364,1,['mask'],['mask-lower-case']
Availability,"893322762/search/pref /tmp/tmp_MMSeq2//17595625152138277869/search_tmp/17414849138893322762/search/pref_count.tsv --stat linecount --tsv --threads 256 --compressed 0 -v 3 . [=================================================================] 23.55M 2s 494ms; Time for merging to pref_count.tsv: 0h 0m 8s 27ms; Time for processing: 0h 0m 21s 772ms; align /tmp/tmp_MMSeq2//17595625152138277869/search_tmp/17414849138893322762/search/profileDB /tmp/tmp_MMSeq2//17595625152138277869/search_tmp/17414849138893322762/query_seqs_split /tmp/tmp_MMSeq2//17595625152138277869/search_tmp/17414849138893322762/search/pref /tmp/tmp_MMSeq2//17595625152138277869/search_tmp/17414849138893322762/search/aln --sub-mat nucl:nucleotide.out,aa:blosum62.out -a 0 --alignment-mode 3 --wrapped-scoring 0 -e 5.25861e-07 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0 --cov-mode 0 --max-seq-len 10000 --comp-bias-corr 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --zdrop 40 --threads 256 --compressed 0 -v 3 . Compute score, coverage and sequence identity; Query database size: 23551830 type: Nucleotide; Target database size: 69220 type: Nucleotide; Calculation of alignments; [===============================Can not write to data file /tmp/tmp_MMSeq2//17595625152138277869/search_tmp/17414849138893322762/search/aln.200; Can not write to data file /tmp/tmp_MMSeq2//17595625152138277869/search_tmp/17414849138893322762/search/aln.166; free(): corrupted unsorted chunks; Can not write to data file /tmp/tmp_MMSeq2//17595625152138277869/search_tmp/17414849138893322762/search/aln.241; Can not write to data file /tmp/tmp_MMSeq2//17595625152138277869/search_tmp/17414849138893322762/search/aln.167; Can not write to data file ?; Segmentation fault; Error: align died; Error: Search step died; Error: Search died; ```",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/394#issuecomment-782439476:22634,fault,fault,22634,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/394#issuecomment-782439476,5,"['Error', 'fault']","['Error', 'fault']"
Availability,8d15513fb5ccce7cce7; Verbosity	3. Start writing to file /tmp/clu//9559457551393989073/input_step2; Time for merging files: 0 h 0 m 0 s; Program call:; /tmp/clu//9559457551393989073/input_step2 /tmp/clu//9559457551393989073/input_step2 /tmp/clu//9559457551393989073/pref_step2 --sub-mat blosum62.out -s 6 -k 0 --k-score 2147483647 --alph-size 21 --max-seq-len 65535 --max-seqs 300 --offset-result 0 --split 0 --split-mode 2 --split-memory-limit 0 -c 0.8 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --min-ungapped-score 15 --spaced-kmer-mode 1 --pca 1 --pcb 1.5 --threads 36 -v 3 . MMseqs Version: 	dfb5e6eb53ee034f02cc08d15513fb5ccce7cce7; Sub Matrix 	blosum62.out; Sensitivity 	6; K-mer size 	0; K-score 	2147483647; Alphabet size 	21; Max. sequence length 	65535; Max. results per query 	300; Offset result 	0; Split DB 	0; Split mode 	2; Split Memory Limit 	0; Coverage threshold 	0.8; Coverage Mode 	0; Compositional bias 	1; Diagonal Scoring 	1; Exact k-mer matching 	0; Mask Residues 	1; Minimum Diagonal score 	15; Include identical Seq. Id.	false; Spaced Kmer 	1; No preload 	false; Early exit 	false; Pseudo count a 	1; Pseudo count b 	1.5; Threads 	36; Verbosity 	3. Initialising data structures...; Using 36 threads.; Could not find precomputed index. Compute index.; Substitution matrices...; Use kmer size 6 and split 1 using Target split mode.; Needed memory (1079694853 byte) of total memory (365681509171 byte); Target database: /tmp/clu//9559457551393989073/input_step2(Size: 16967); Query database type: Aminoacid; Target database type: Aminoacid; Time for init: 0 h 0 m 1s. Query database: /tmp/clu//9559457551393989073/input_step2(size=16967); Process prefiltering step 1 of 1. Index table: counting k-mers...; .; Index table: Masked residues: 66554; Index table: fill...; .; Index table: removing duplicate entries...; Index table init done. DB statistic; Entries: 3321711; DB Size: 531930266 (byte); Avg Kmer Size: 0.0519017; Top 10 Kmers; 	VG,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/88#issuecomment-401138700:44543,Mask,Mask,44543,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/88#issuecomment-401138700,1,['Mask'],['Mask']
Availability,"9053913462861916/input_step_redundancy /ebio/abt3_scratch/nyoungblut/Struo2_122419461619/cluster_update/11607510948275416679/cluster/3119053913462861916/input_step_redundancy /ebio/abt3_scratch/nyoungblut/Struo2_122419461619/cluster_update/11607510948275416679/cluster/3119053913462861916/pref_step0 --sub-mat nucl:nucleotide.out,aa:blosum62.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -s 1 -k 0 --k-score 2147483647 --alph-size 21 --max-seq-len 65535 --max-seqs 300 --split 0 --split-mode 2 --split-memory-limit 0 -c 0.8 --cov-mode 0 --comp-bias-corr 0 --diag-score 0 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 0 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 12 --compressed 0 -v 3. Query database size: 6 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 6 type: Aminoacid; Index table k-mer threshold: 154 at k-mer size 6; Index table: counting k-mers; [=================================================================] 6 0s 1ms; Index table: Masked residues: 0; Index table: fill; [=================================================================] 6 0s 0ms; Index statistics; Entries: 237; DB size: 488 MB; Avg k-mer size: 0.000004; Top 10 k-mers; LHNWEA	1; NCKEQA	1; VLRCRA	1; VTFMDC	1; RAHQKC	1; KRKVLC	1; ESKRNC	1; KRHLRC	1; GKKFSC	1; HYKKSC	1; Time for index table init: 0h 0m 0s 897ms; Process prefiltering step 1 of 1. k-mer similarity threshold: 154; Starting prefiltering scores calculation (step 1 of 1); Query db start 1 to 6; Target db start 1 to 6; [=================================================================] 6 0s 0ms. 1.337707 k-mers per position; 39 DB matches per sequence; 0 overflows; 0 queries produce too much hits (truncated result); 1 sequences passed prefiltering per query sequence; 1 median result list length; 0 sequences with 0 size result lists; Time for merging to pref_step0: 0h 0m 0s 3ms; Time for processing: 0h 0m 1s 473ms; align /ebio/abt3_scratch/",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/333#issuecomment-663145167:19358,Mask,Masked,19358,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/333#issuecomment-663145167,1,['Mask'],['Masked']
Availability,9465698490903227639/linclust/831108043510341376/clust . MMseqs Version:	dfb5e6eb53ee034f02cc08d15513fb5ccce7cce7; Threads 	36; Merge by DB	false. List amount 1132486; Clustering step 1...; Clustering step 2...; Writing the results...; Time for merging files: 0 h 0 m 0 s; ...done.; Program call:; /tmp/test/9465698490903227639/clu_redundancy panproteome.db /tmp/test/9465698490903227639/input_step_redundancy . MMseqs Version:	dfb5e6eb53ee034f02cc08d15513fb5ccce7cce7; Verbosity	3. Start writing to file /tmp/test/9465698490903227639/input_step_redundancy; Time for merging files: 0 h 0 m 0 s; Program call:; /tmp/test/9465698490903227639/input_step_redundancy /tmp/test/9465698490903227639/input_step_redundancy /tmp/test/9465698490903227639/pref_step0 --sub-mat blosum62.out -s 1 -k 0 --k-score 2147483647 --alph-size 21 --max-seq-len 65535 --max-seqs 300 --offset-result 0 --split 0 --split-mode 2 --split-memory-limit 0 -c 0.8 --cov-mode 0 --comp-bias-corr 0 --diag-score 0 --exact-kmer-matching 0 --mask 1 --min-ungapped-score 0 --spaced-kmer-mode 1 --pca 1 --pcb 1.5 --threads 10 -v 3 . MMseqs Version: 	dfb5e6eb53ee034f02cc08d15513fb5ccce7cce7; Sub Matrix 	blosum62.out; Sensitivity 	1; K-mer size 	0; K-score 	2147483647; Alphabet size 	21; Max. sequence length 	65535; Max. results per query 	300; Offset result 	0; Split DB 	0; Split mode 	2; Split Memory Limit 	0; Coverage threshold 	0.8; Coverage Mode 	0; Compositional bias 	0; Diagonal Scoring 	0; Exact k-mer matching 	0; Mask Residues 	1; Minimum Diagonal score 	0; Include identical Seq. Id.	false; Spaced Kmer 	1; No preload 	false; Early exit 	false; Pseudo count a 	1; Pseudo count b 	1.5; Threads 	10; Verbosity 	3. Initialising data structures...; Using 10 threads.; Could not find precomputed index. Compute index.; Substitution matrices...; Use kmer size 6 and split 1 using Target split mode.; Needed memory (1094599205 byte) of total memory (365681509171 byte); Target database: /tmp/test/9465698490903227639/input_step_red,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/88#issuecomment-401138700:13974,mask,mask,13974,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/88#issuecomment-401138700,1,['mask'],['mask']
Availability,"95.out.h; -- Compile cascaded_clustering.sh to /Users/moorer/Downloads/mmseqs2/src/generatedfiles/cascaded_clustering.sh.h; -- Compile clustering.sh to /Users/moorer/Downloads/mmseqs2/src/generatedfiles/clustering.sh.h; -- Compile update_clustering.sh to /Users/moorer/Downloads/mmseqs2/src/generatedfiles/update_clustering.sh.h; -- Configuring done; -- Generating done; -- Build files have been written to: /Users/moorer/Downloads/mmseqs2/build; Zebulon | build -> make; Scanning dependencies of target prefiltering; [ 0%] Building CXX object src/prefiltering/CMakeFiles/prefiltering.dir/ExtendedSubstitutionMatrix.cpp.o; [ 1%] Building CXX object src/prefiltering/CMakeFiles/prefiltering.dir/Indexer.cpp.o; [ 2%] Building CXX object src/prefiltering/CMakeFiles/prefiltering.dir/KmerGenerator.cpp.o; [ 3%] Building CXX object src/prefiltering/CMakeFiles/prefiltering.dir/Main.cpp.o; /Users/moorer/Downloads/mmseqs2/src/prefiltering/Main.cpp: In function 'int prefilter(int, const char**, const Command&)':; /Users/moorer/Downloads/mmseqs2/src/prefiltering/Main.cpp:72:12: warning: unused variable 'splitMode' [-Wunused-variable]; size_t splitMode = pref->getSplitMode();; ^~~~~~~~~; [ 4%] Building CXX object src/prefiltering/CMakeFiles/prefiltering.dir/Prefiltering.cpp.o; /var/folders/hr/x60c91mj5l1c8gy_6lyhl5l80000gn/T//ccAwPztQ.s:4152:suffix or operands invalid for `movq'; /var/folders/hr/x60c91mj5l1c8gy_6lyhl5l80000gn/T//ccAwPztQ.s:6032:suffix or operands invalid for `movq'; /var/folders/hr/x60c91mj5l1c8gy_6lyhl5l80000gn/T//ccAwPztQ.s:6048:suffix or operands invalid for `movq'; /var/folders/hr/x60c91mj5l1c8gy_6lyhl5l80000gn/T//ccAwPztQ.s:6075:suffix or operands invalid for `movq'; /var/folders/hr/x60c91mj5l1c8gy_6lyhl5l80000gn/T//ccAwPztQ.s:6103:suffix or operands invalid for `movq'; /var/folders/hr/x60c91mj5l1c8gy_6lyhl5l80000gn/T//ccAwPztQ.s:6172:suffix or operands invalid for `movq'; /var/folders/hr/x60c91mj5l1c8gy_6lyhl5l80000gn/T//ccAwPztQ.s:6183:suffix or operands invalid fo",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/7#issuecomment-265028472:4919,Down,Downloads,4919,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/7#issuecomment-265028472,1,['Down'],['Downloads']
Availability,": 0h 0m 0s 19ms; Time for merging to query_seqs: 0h 0m 0s 29ms; Time for processing: 0h 0m 0s 419ms; splitsequence /tmp/tmp_MMSeq2//17595625152138277869/search_tmp/17414849138893322762/query_seqs /tmp/tmp_MMSeq2//17595625152138277869/search_tmp/17414849138893322762/query_seqs_split --max-seq-len 10000 --sequence-overlap 0 --sequence-split-mode 1 --headers-split-mode 0 --create-lookup 0 --threads 256 --compressed 0 -v 3 . Time for processing: 0h 0m 0s 3ms; prefilter /tmp/tmp_MMSeq2//17595625152138277869/search_tmp/17414849138893322762/search/profileDB /tmp/tmp_MMSeq2//17595625152138277869/search_tmp/17414849138893322762/query_seqs_split /tmp/tmp_MMSeq2//17595625152138277869/search_tmp/17414849138893322762/search/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -s 5.7 -k 15 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 10000 --max-seqs 2147483647 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 1 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 256 --compressed 0 -v 3 . Query database size: 280714 type: Nucleotide; Estimated memory consumption: 9G; Target database size: 69220 type: Nucleotide; Index table k-mer threshold: 0 at k-mer size 15 ; Index table: counting k-mers; [=================================================================] 69.22K 0s 80ms; Index table: Masked residues: 724; Index table: fill; [=================================================================] 69.22K 0s 68ms; Index statistics; Entries: 15985099; DB size: 8283 MB; Avg k-mer size: 0.014887; Top 10 k-mers; CCCTCGCTCCGTTCG	31729; GGGGAAAGGTTGGGG	31239; ATTCGGTGAGTAATG	31054; CTCGCCCTCCCCAGC	31010; CGACCTACCACCCCT	31003; CGGGAGCGTGTCGAG	30951; GGGCGAGGAACGGGG	30939; GCCCACCGACACTGG	30933; ACCACTTGGTGAGGG	30876; AAGGTATCGGGTTGG	30837; Time for index table init: 0h 0m 5",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/394#issuecomment-782439476:6559,mask,mask,6559,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/394#issuecomment-782439476,4,['mask'],"['mask', 'mask-lower-case']"
Availability,": forward algorithm total: 0.985075; tantan: backward algorithm total: 0.985076; tantan: warning: possible numeric inaccuracy; tantan: forward algorithm total: 0.985076; tantan: backward algorithm total: 0.985075; tantan: warning: possible numeric inaccuracy; tantan: forward algorithm total: 0.985075; tantan: backward algorithm total: 0.985076; [New LWP 39935]. Program received signal SIGSEGV, Segmentation fault.; [Switching to LWP 39935]; 0x00000000005ca2a1 in calcEmissionProbs (this=0x2ab9698c8900); at /home/vsts/work/1/s/src/commons/tantan.cpp:273; 273	/home/vsts/work/1/s/src/commons/tantan.cpp: No such file or directory.; (gdb) ; (gdb) bt; #0 0x00000000005ca2a1 in calcEmissionProbs (this=0x2ab9698c8900); at /home/vsts/work/1/s/src/commons/tantan.cpp:273; #1 calcRepeatProbs (letterProbs=0x2ab9b800f7cc, this=0x2ab9698c8900); at /home/vsts/work/1/s/src/commons/tantan.cpp:310; #2 tantan::getProbabilities (; seqBeg=seqBeg@entry=0x2ab9b8000c70 ""\004\004\003 \004"", ; seqEnd=seqEnd@entry=0x2ab9b8000c76 """", maxRepeatOffset=<optimized out>, ; likelihoodRatioMatrix=<optimized out>, repeatProb=<optimized out>, ; repeatEndProb=<optimized out>, repeatOffsetProbDecay=<optimized out>, ; firstGapProb=<optimized out>, otherGapProb=<optimized out>, ; probabilities=probabilities@entry=0x2ab9b800f7c0); at /home/vsts/work/1/s/src/commons/tantan.cpp:375; #3 0x00000000005cabf8 in tantan::maskSequences (; seqBeg=0x2ab9b8000c70 ""\004\004\003 \004"", seqEnd=0x2ab9b8000c76 """", ; maxRepeatOffset=<optimized out>, likelihoodRatioMatrix=0xc570a0, ; repeatProb=0.0050000000000000001, repeatEndProb=0.050000000000000003, ; repeatOffsetProbDecay=0.90000000000000002, firstGapProb=0, otherGapProb=0, ; minMaskProb=0.90000000000000002, ; maskTable=0xc57f30 '\004' <repeats 200 times>...); at /home/vsts/work/1/s/src/commons/tantan.cpp:357; #4 0x00000000005de120 in IndexBuilder::fillDatabase (); at /home/vsts/work/1/s/src/prefiltering/IndexBuilder.cpp:144; #5 0x000000000076baee in gomp_thread_start (). ```",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/280#issuecomment-591529323:2769,mask,maskSequences,2769,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/280#issuecomment-591529323,2,['mask'],"['maskSequences', 'maskTable']"
Availability,; -rw-r--r-- 1 user user 4 Aug 4 15:19 gtdb.dbtype; -rw-r--r-- 1 user user 0 Aug 4 15:19 gtdb_h; -rw-r--r-- 1 user user 4 Aug 4 15:19 gtdb_h.dbtype; -rw-r--r-- 1 user user 0 Aug 4 15:19 gtdb_h.index; -rw-r--r-- 1 user user 0 Aug 4 15:19 gtdb.index; -rw-r--r-- 1 user user 0 Aug 4 15:19 gtdb.source; drwxr-xr-x 3 user user 4.0K Aug 4 13:37 tmp_gtdb; ``` ; ## MMseqs Output (for bugs); '''; Create directory databases/tmp_gtdb; databases GTDB databases/gtdb databases/tmp_gtdb . MMseqs Version: 13.45111; Force restart with latest tmp false; Remove temporary files false; Compressed 0; Threads 32; Verbosity 3. % Total % Received % Xferd Average Speed Time Time Time Current; Dload Upload Total Spent Left Speed; 100 30 100 30 0 0 21 0 0:00:01 0:00:01 --:--:-- 21; % Total % Received % Xferd Average Speed Time Time Time Current; Dload Upload Total Spent Left Speed; 100 40.2G 100 40.2G 0 0 6909k 0 1:41:44 1:41:44 --:--:-- 5539k; % Total % Received % Xferd Average Speed Time Time Time Current; Dload Upload Total Spent Left Speed; 100 43.1M 100 43.1M 0 0 4473k 0 0:00:09 0:00:09 --:--:-- 8160k; % Total % Received % Xferd Average Speed Time Time Time Current; Dload Upload Total Spent Left Speed; 100 334 100 334 0 0 190 0 0:00:01 0:00:01 --:--:-- 190; tar2db databases/tmp_gtdb/14203905869062371748/gtdb.tar.gz databases/tmp_gtdb/14203905869062371748/tardb --tar-include faa$ --threads 32 -v 3 . Time for merging to tardb: 0h 0m 0s 1ms; Time for merging to tardb.lookup: 0h 0m 0s 2ms; Time for processing: 0h 0m 0s 36ms; createdb databases/tmp_gtdb/14203905869062371748/tardb databases/gtdb --compressed 0 -v 3 . Converting sequences. Time for merging to gtdb_h: 0h 0m 0s 2ms; Time for merging to gtdb: 0h 0m 0s 1ms; Database type: Nucleotide; The input files have no entry: - databases/tmp_gtdb/14203905869062371748/tardb; Please check your input files. Only files in fasta/fastq[.gz|bz2] are supported; Error: createdb died; '''. ## Your Environment; - Debian 11 Bullseye ; - 32 vCPU; - 212992 MiB,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/561#issuecomment-1205418161:2223,Error,Error,2223,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/561#issuecomment-1205418161,1,['Error'],['Error']
Availability,"============; createsubdb /ebio/abt3_scratch/nyoungblut/Struo2_122419461619/cluster_update/11607510948275416679/noHitSeqList /ebio/abt3_scratch/nyoungblut/Struo2_122419461619/cluster_updated/genes_db /ebio/abt3_scratch/nyoungblut/Struo2_122419461619/cluster_update/11607510948275416679/toBeClusteredSeparately -v 3 --subdb-mode 1. Time for merging to toBeClusteredSeparately: 0h 0m 0s 2ms; Time for processing: 0h 0m 0s 114ms; ===================================================; ===== Cluster separately the alone sequences ======; ===================================================; kmermatcher /ebio/abt3_scratch/nyoungblut/Struo2_122419461619/cluster_update/11607510948275416679/toBeClusteredSeparately /ebio/abt3_scratch/nyoungblut/Struo2_122419461619/cluster_update/11607510948275416679/cluster/3119053913462861916/linclust/8450400992607156393/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size 13 --min-seq-id 0.9 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale 0 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 12 --compressed 0 -v 3. kmermatcher /ebio/abt3_scratch/nyoungblut/Struo2_122419461619/cluster_update/11607510948275416679/toBeClusteredSeparately /ebio/abt3_scratch/nyoungblut/Struo2_122419461619/cluster_update/11607510948275416679/cluster/3119053913462861916/linclust/8450400992607156393/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size 13 --min-seq-id 0.9 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale 0 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 12 --compressed 0 -v 3. Database size: 6 type: Aminoacid; Reduced amino acid alphabet: (A S T) (C) (D B N) (E Q Z) (F Y) (G) (H) (I V) (K R) (L J M) (P) (W) (X). Generate k-mers list f",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/333#issuecomment-663145167:7729,mask,mask,7729,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/333#issuecomment-663145167,2,['mask'],"['mask', 'mask-lower-case']"
Availability,"==================; result2repseq /ebio/abt3_projects/software/dev/Struo2/tests/output_n10/genes/cluster/genes_db /ebio/abt3_projects/software/dev/Struo2/tests/output_n10/genes/cluster/clusters_db /ebio/abt3_scratch/nyoungblut/Struo2_122419461619/cluster_update/7316799743718053916/OLDDB.repSeq. Invalid database read for database data file=/ebio/abt3_projects/software/dev/Struo2/tests/output_n10/genes/cluster/clusters_db, database index=/ebio/abt3_projects/software/dev/Struo2/tests/output_n10/genes/cluster/clusters_db.index; 31mInvalid database read for database data file=/ebio/abt3_projects/software/dev/Struo2/tests/output_n10/genes/cluster/clusters_db, database index=/ebio/abt3_projects/software/dev/Struo2/tests/output_n10/genes/cluster/clusters_db.index. [... a lot of output ...]. 31mSize of data: 363542; mRequested offset: 412570; Requested offset: 399738; 31mRequested offset: 367758; Requested offset: 408364; 31mRequested offset: 386682; 39mRequested offset: 393723; mRequested offset: 403458; Requested offset: 381782; 39mRequested offset: 413970; mRequested offset: 406964; m31Requested offset: 398528; Requested offset: 367053; mRequested offset: 415370; Error: result2repseq died; ```. conda env:. ```; # Name Version Build Channel; _libgcc_mutex 0.1 conda_forge conda-forge; _openmp_mutex 4.5 0_gnu conda-forge; bzip2 1.0.8 h516909a_2 conda-forge; ca-certificates 2020.6.20 hecda079_0 conda-forge; certifi 2020.6.20 py38h32f6830_0 conda-forge; fasta-splitter 0.2.6 0 bioconda; gawk 5.1.0 h516909a_0 conda-forge; gettext 0.19.8.1 hc5be6a0_1002 conda-forge; ld_impl_linux-64 2.34 h53a641e_7 conda-forge; libblas 3.8.0 17_openblas conda-forge; libcblas 3.8.0 17_openblas conda-forge; libffi 3.2.1 he1b5a44_1007 conda-forge; libgcc-ng 9.2.0 h24d8f2e_2 conda-forge; libgfortran-ng 7.5.0 hdf63c60_6 conda-forge; libgomp 9.2.0 h24d8f2e_2 conda-forge; libidn2 2.3.0 h516909a_0 conda-forge; liblapack 3.8.0 17_openblas conda-forge; libopenblas 0.3.10 pthreads_hb3c22a3_3 conda-forge; li",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/272#issuecomment-662482914:2442,Error,Error,2442,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/272#issuecomment-662482914,1,['Error'],['Error']
Availability,"=============================================================] 100.00% 124 0s 23ms; Write merged clustering; [=================================================================] 100.00% 136 0s 37ms; Time for merging to clu_redundancy: 0h 0m 0s 3ms; Time for processing: 0h 0m 0s 54ms; createsubdb tmp//7897776346521331899/clu_redundancy artificial2/DB_artificial tmp//7897776346521331899/input_step_redundancy -v 3 --subdb-mode 1. Time for merging to input_step_redundancy: 0h 0m 0s 0ms; Time for processing: 0h 0m 0s 0ms; prefilter tmp//7897776346521331899/input_step_redundancy tmp//7897776346521331899/input_step_redundancy tmp//7897776346521331899/pref_step0 --sub-mat nucl:nucleotide.out,aa:blosum62.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -s 1 -k 0 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 65535 --max-seqs 20 --split 0 --split-mode 2 --split-memory-limit 0 -c 0.8 --cov-mode 0 --comp-bias-corr 0 --diag-score 0 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 0 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 16 --compressed 0 -v 3. Query database size: 124 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 124 type: Aminoacid; Index table k-mer threshold: 154 at k-mer size 6; Index table: counting k-mers; [=================================================================] 100.00% 124 0s 51ms; Index table: Masked residues: 0; Index table: fill; [=================================================================] 100.00% 124 0s 1ms; Index statistics; Entries: 99; DB size: 488 MB; Avg k-mer size: 0.000002; Top 10 k-mers; FSMYPQ 6; HFVFHR 4; YQYPRV 3; LAMYPA 1; CHMEKC 1; VQRKKC 1; RGYLLC 1; MVQDRC 1; CEMRRC 1; ERIATC 1; Time for index table init: 0h 0m 1s 150ms; Process prefiltering step 1 of 1. k-mer similarity threshold: 154; Starting prefiltering scores calculation (step 1 of 1); Query db start 1 to 124; Target db start 1 to 124; [===========================",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-775778998:11659,mask,mask,11659,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-775778998,2,['mask'],"['mask', 'mask-lower-case']"
Availability,"===================================================] 276 0s 37ms; Write merged clustering; [=================================================================] 303 0s 48ms; Time for merging to clu_redundancy: 0h 0m 0s 1ms; Time for processing: 0h 0m 0s 102ms; createsubdb tmpfiles//13298481167543164943/clu_redundancy DB_in/fasta_in_db_HC tmpfiles//13298481167543164943/input_step_redundancy -v 3 --subdb-mode 1. Time for merging to input_step_redundancy: 0h 0m 0s 0ms; Time for processing: 0h 0m 0s 0ms; prefilter tmpfiles//13298481167543164943/input_step_redundancy tmpfiles//13298481167543164943/input_step_redundancy tmpfiles//13298481167543164943/pref_step0 --sub-mat nucl:nucleotide.out,aa:blosum62.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -s 1 -k 0 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 65535 --max-seqs 20 --split 0 --split-mode 2 --split-memory-limit 0 -c 0.8 --cov-mode 0 --comp-bias-corr 0 --diag-score 0 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 0 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 16 --compressed 0 -v 3. Query database size: 276 type: Aminoacid; Estimated memory consumption: 978M; Target database size: 276 type: Aminoacid; Index table k-mer threshold: 154 at k-mer size 6; Index table: counting k-mers; [=================================================================] 276 0s 28ms; Index table: Masked residues: 0; Index table: fill; [=================================================================] 276 0s 5ms; Index statistics; Entries: 1187; DB size: 488 MB; Avg k-mer size: 0.000019; Top 10 k-mers; XXXXXX 7; XXXXXX 4; XXXXXX 4; XXXXXX 4; XXXXXX 4; XXXXXX 3; XXXXXX 3; XXXXXX 3; XXXXXX 3; XXXXXX 3; Time for index table init: 0h 0m 1s 36ms; Process prefiltering step 1 of 1. k-mer similarity threshold: 154; Starting prefiltering scores calculation (step 1 of 1); Query db start 1 to 276; Target db start 1 to 276; [==========================================",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-771572412:11427,mask,mask,11427,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-771572412,2,['mask'],"['mask', 'mask-lower-case']"
Availability,"=================================] 100.00% 239 0s 0ms. Time for read in: 0h 0m 0s 74ms; Total time: 0h 0m 0s 89ms. Size of the sequence database: 239; Size of the alignment database: 239; Number of clusters: 221. Writing results 0h 0m 0s 0ms; Time for merging to clu_step1: 0h 0m 0s 0ms; Time for processing: 0h 0m 0s 92ms; createsubdb tmp//538598962955004214/clu_step1 tmp//538598962955004214/input_step1 tmp//538598962955004214/input_step2 -v 3 --subdb-mode 1. Time for merging to input_step2: 0h 0m 0s 0ms; Time for processing: 0h 0m 0s 1ms; prefilter tmp//538598962955004214/input_step2 tmp//538598962955004214/input_step2 tmp//538598962955004214/pref_step2 --sub-mat nucl:nucleotide.out,aa:blosum62.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -s 6 -k 0 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 65535 --max-seqs 20 --split 0 --split-mode 2 --split-memory-limit 0 -c 0.8 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 16 --compressed 0 -v 3. Query database size: 221 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 221 type: Aminoacid; Index table k-mer threshold: 109 at k-mer size 6; Index table: counting k-mers; [=================================================================] 100.00% 221 0s 29ms; Index table: Masked residues: 0; Index table: fill; [=================================================================] 100.00% 221 0s 17ms; Index statistics; Entries: 1337; DB size: 488 MB; Avg k-mer size: 0.000021; Top 10 k-mers; XXXXXX 3; XXXXXX 3; XXXXXX 2; XXXXXX 2; XXXXXX 2; XXXXXX 2; XXXXXX 2; XXXXXX 2; XXXXXX 2; XXXXXX 2; Time for index table init: 0h 0m 0s 985ms; Process prefiltering step 1 of 1. k-mer similarity threshold: 109; Starting prefiltering scores calculation (step 1 of 1); Query db start 1 to 221; Target db start 1 to 221; [========================",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-773234853:19637,mask,mask,19637,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-773234853,2,['mask'],"['mask', 'mask-lower-case']"
Availability,"===============================] 100.00% 200 0s 22ms; Time for merging to clu_accepted: 0h 0m 0s 4ms; Time for processing: 0h 0m 0s 40ms; createsubdb tmp//10798751672030653963/clu_not_accepted_swap DB_in tmp//10798751672030653963/seq_wrong_assigned -v 3. Time for merging to seq_wrong_assigned: 0h 0m 0s 0ms; Time for processing: 0h 0m 0s 0ms; createsubdb tmp//10798751672030653963/clu DB_in tmp//10798751672030653963/seq_seeds -v 3. Time for merging to seq_seeds: 0h 0m 0s 0ms; Time for processing: 0h 0m 0s 2ms; prefilter tmp//10798751672030653963/seq_wrong_assigned tmp//10798751672030653963/seq_seeds.merged tmp//10798751672030653963/seq_wrong_assigned_pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -s 6 -k 0 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 65535 --max-seqs 20 --split 0 --split-mode 2 --split-memory-limit 0 -c 0.8 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 16 --compressed 0 -v 3. Query database size: 14 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 214 type: Aminoacid; Index table k-mer threshold: 109 at k-mer size 6; Index table: counting k-mers; [=================================================================] 100.00% 214 0s 24ms; Index table: Masked residues: 0; Index table: fill; [=================================================================] 100.00% 214 0s 9ms; Index statistics; Entries: 1312; DB size: 488 MB; Avg k-mer size: 0.000021; Top 10 k-mers; XXXXXX 3; XXXXXX 3; XXXXXX 2; XXXXXX 2; XXXXXX 2; XXXXXX 2; XXXXXX 2; XXXXXX 2; XXXXXX 2; XXXXXX 2; Time for index table init: 0h 0m 0s 857ms; Process prefiltering step 1 of 1. k-mer similarity threshold: 109; Starting prefiltering scores calculation (step 1 of 1); Query db start 1 to 14; Target db start 1 to 214; [===========================",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-775767472:27879,mask,mask,27879,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-775767472,2,['mask'],"['mask', 'mask-lower-case']"
Availability,"==============================] 34.26K 0s 16ms; Time for merging to OLDDB.repSeq: 0h 0m 0s 253ms; Time for processing: 0h 0m 0s 470ms; ===================================================; ======== Search the new sequences against =========; ========= previous (rep seq of) clusters ==========; ===================================================; prefilter /ebio/abt3_scratch/nyoungblut/Struo2_122419461619/cluster_update/11607510948275416679/NEWDB.newSeqs /ebio/abt3_scratch/nyoungblut/Struo2_122419461619/cluster_update/11607510948275416679/OLDDB.repSeq /ebio/abt3_scratch/nyoungblut/Struo2_122419461619/cluster_update/11607510948275416679/search/9308835922661050105/pref_0 --sub-mat nucl:nucleotide.out,aa:blosum62.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -k 0 --k-score 2147483647 --alph-size 21 --max-seq-len 65535 --max-seqs 300 --split 0 --split-mode 2 --split-memory-limit 0 -c 0.8 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 12 --compressed 0 -v 3 -s 4.0. Query database size: 6 type: Aminoacid; Estimated memory consumption: 1G; Target database size: 34258 type: Aminoacid; Index table k-mer threshold: 127 at k-mer size 6; Index table: counting k-mers; [=================================================================] 34.26K 0s 519ms; Index table: Masked residues: 72412; Index table: fill; [=================================================================] 34.26K 0s 429ms; Index statistics; Entries: 9905952; DB size: 544 MB; Avg k-mer size: 0.154780; Top 10 k-mers; GPGGTL	164; GQQVAR	114; GLGNGK	80; GEGGVV	73; GPGGTT	69; LLDPAL	54; SGGSLR	53; LLGPGK	49; GQQIAR	49; GQQLAR	48; Time for index table init: 0h 0m 1s 840ms; Process prefiltering step 1 of 1. k-mer similarity threshold: 127; Starting prefiltering scores calculation (step 1 of 1); Query db start 1 to 6; Target db start 1 to 34258; [========",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/333#issuecomment-663145167:2901,mask,mask,2901,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/333#issuecomment-663145167,2,['mask'],"['mask', 'mask-lower-case']"
Availability,============================] 22 0s 20ms; Time for merging to seq_wrong_assigned_pref_swaped_aln_ocol: 0h 0m 0s 2ms; Time for processing: 0h 0m 0s 57ms; mergedbs tmpfiles//13298481167543164943/seq_seeds.merged tmpfiles//13298481167543164943/clu_accepted_plus_wrong tmpfiles//13298481167543164943/clu_accepted tmpfiles//13298481167543164943/seq_wrong_assigned_pref_swaped_aln_ocol --compressed 0 -v 3. Merging the results to tmpfiles//13298481167543164943/clu_accepted_plus_wrong; [=================================================================] 210 0s 0ms; Time for merging to clu_accepted_plus_wrong: 0h 0m 0s 0ms; Time for processing: 0h 0m 0s 1ms; tsv2db tmpfiles//13298481167543164943/missing.single.seqs tmpfiles//13298481167543164943/missing.single.seqs.db --output-dbtype 6 --compressed 0 -v 3. Output database type: Clustering; Time for merging to missing.single.seqs.db: 0h 0m 0s 0ms; Time for processing: 0h 0m 0s 0ms; mergedbs DB_in/fasta_in_db_HC tmpfiles//13298481167543164943/clu_accepted_plus_wrong_plus_single tmpfiles//13298481167543164943/clu_accepted_plus_wrong tmpfiles//13298481167543164943/missing.single.seqs.db --compressed 0 -v 3. Merging the results to tmpfiles//13298481167543164943/clu_accepted_plus_wrong_plus_single; [=================================================================] 303 0s 0ms; Time for merging to clu_accepted_plus_wrong_plus_single: 0h 0m 0s 0ms; Time for processing: 0h 0m 0s 0ms; clust DB_in/fasta_in_db_HC tmpfiles//13298481167543164943/clu_accepted_plus_wrong_plus_single DB_clustered/clustered_HC --cluster-mode 1 --max-iterations 1000 --similarity-type 2 --threads 16 --compressed 0 -v 3. Clustering mode: Connected Component; [=================================================================Alignment format is not supported!; Alignment format is not supported!; Alignment format is not supported!; ] 303 0s 0ms; Sort entries; Find missing connections; Found 100 new connections.; Reconstruct initial order; [Error: Clustering step 2 died,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-771572412:33244,Error,Error,33244,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-771572412,1,['Error'],['Error']
Availability,"=========================] 100.00% 124 0s 0ms. Time for read in: 0h 0m 0s 87ms; Total time: 0h 0m 0s 107ms. Size of the sequence database: 124; Size of the alignment database: 124; Number of clusters: 124. Writing results 0h 0m 0s 0ms; Time for merging to clu_step1: 0h 0m 0s 0ms; Time for processing: 0h 0m 0s 110ms; createsubdb tmp//7897776346521331899/clu_step1 tmp//7897776346521331899/input_step1 tmp//7897776346521331899/input_step2 -v 3 --subdb-mode 1. Time for merging to input_step2: 0h 0m 0s 0ms; Time for processing: 0h 0m 0s 1ms; prefilter tmp//7897776346521331899/input_step2 tmp//7897776346521331899/input_step2 tmp//7897776346521331899/pref_step2 --sub-mat nucl:nucleotide.out,aa:blosum62.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -s 6 -k 0 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 65535 --max-seqs 20 --split 0 --split-mode 2 --split-memory-limit 0 -c 0.8 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 16 --compressed 0 -v 3. Query database size: 124 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 124 type: Aminoacid; Index table k-mer threshold: 109 at k-mer size 6; Index table: counting k-mers; [=================================================================] 100.00% 124 0s 19ms; Index table: Masked residues: 0; Index table: fill; [=================================================================] 100.00% 124 0s 3ms; Index statistics; Entries: 116; DB size: 488 MB; Avg k-mer size: 0.000002; Top 10 k-mers; FSMYPQ 6; HFVFHR 4; YQYPRV 3; LAMYPA 1; ARPIVA 1; CHMEKC 1; VQRKKC 1; RGYLLC 1; MVQDRC 1; CEMRRC 1; Time for index table init: 0h 0m 0s 975ms; Process prefiltering step 1 of 1. k-mer similarity threshold: 109; Starting prefiltering scores calculation (step 1 of 1); Query db start 1 to 124; Target db start 1 to 124; [==========================",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-775778998:19881,mask,mask,19881,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-775778998,2,['mask'],"['mask', 'mask-lower-case']"
Availability,"=====================] 100.00% 239 0s 0ms. Time for read in: 0h 0m 0s 50ms; Total time: 0h 0m 0s 71ms. Size of the sequence database: 239; Size of the alignment database: 239; Number of clusters: 222. Writing results 0h 0m 0s 0ms; Time for merging to clu_step1: 0h 0m 0s 0ms; Time for processing: 0h 0m 0s 73ms; createsubdb tmp//10798751672030653963/clu_step1 tmp//10798751672030653963/input_step1 tmp//10798751672030653963/input_step2 -v 3 --subdb-mode 1. Time for merging to input_step2: 0h 0m 0s 0ms; Time for processing: 0h 0m 0s 1ms; prefilter tmp//10798751672030653963/input_step2 tmp//10798751672030653963/input_step2 tmp//10798751672030653963/pref_step2 --sub-mat nucl:nucleotide.out,aa:blosum62.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -s 6 -k 0 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 65535 --max-seqs 20 --split 0 --split-mode 2 --split-memory-limit 0 -c 0.8 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 16 --compressed 0 -v 3. Query database size: 222 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 222 type: Aminoacid; Index table k-mer threshold: 109 at k-mer size 6; Index table: counting k-mers; [=================================================================] 100.00% 222 0s 24ms; Index table: Masked residues: 0; Index table: fill; [=================================================================] 100.00% 222 0s 3ms; Index statistics; Entries: 1342; DB size: 488 MB; Avg k-mer size: 0.000021; Top 10 k-mers; XXXXXX 3; XXXXXX 3; XXXXXX 2; XXXXXX 2; XXXXXX 2; XXXXXX 2; XXXXXX 2; XXXXXX 2; XXXXXX 2; XXXXXX 2; Time for index table init: 0h 0m 0s 970ms; Process prefiltering step 1 of 1. k-mer similarity threshold: 109; Starting prefiltering scores calculation (step 1 of 1); Query db start 1 to 222; Target db start 1 to 222; [=========================",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-775767472:19802,mask,mask,19802,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-775767472,2,['mask'],"['mask', 'mask-lower-case']"
Availability,"====================] 100.00% 276 0s 4ms. Time for read in: 0h 0m 0s 76ms; Total time: 0h 0m 0s 99ms. Size of the sequence database: 276; Size of the alignment database: 276; Number of clusters: 239. Writing results 0h 0m 0s 0ms; Time for merging to clu_step0: 0h 0m 0s 0ms; Time for processing: 0h 0m 0s 111ms; createsubdb tmp//538598962955004214/clu_step0 tmp//538598962955004214/input_step_redundancy tmp//538598962955004214/input_step1 -v 3 --subdb-mode 1. Time for merging to input_step1: 0h 0m 0s 0ms; Time for processing: 0h 0m 0s 1ms; prefilter tmp//538598962955004214/input_step1 tmp//538598962955004214/input_step1 tmp//538598962955004214/pref_step1 --sub-mat nucl:nucleotide.out,aa:blosum62.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -s 3.5 -k 0 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 65535 --max-seqs 20 --split 0 --split-mode 2 --split-memory-limit 0 -c 0.8 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 16 --compressed 0 -v 3. Query database size: 239 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 239 type: Aminoacid; Index table k-mer threshold: 131 at k-mer size 6; Index table: counting k-mers; [=================================================================] 100.00% 239 0s 13ms; Index table: Masked residues: 0; Index table: fill; [=================================================================] 100.00% 239 0s 2ms; Index statistics; Entries: 1414; DB size: 488 MB; Avg k-mer size: 0.000022; Top 10 k-mers; XXXXXX 3; XXXXXX 3; XXXXXX 2; XXXXXX 2; XXXXXX 2; XXXXXX 2; XXXXXX 2; XXXXXX 2; XXXXXX 2; XXXXXX 2; Time for index table init: 0h 0m 1s 51ms; Process prefiltering step 1 of 1. k-mer similarity threshold: 131; Starting prefiltering scores calculation (step 1 of 1); Query db start 1 to 239; Target db start 1 to 239; [==========================",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-773234853:15495,mask,mask,15495,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-773234853,2,['mask'],"['mask', 'mask-lower-case']"
Availability,"===================] 416 0s 33ms; Write merged clustering; [=================================================================] 1.95K 0s 45ms; Time for merging to clu_redundancy: 0h 0m 0s 2ms; Time for processing: 0h 0m 0s 69ms; createsubdb DB_clustered/tmp/17526443716087640986/clu_redundancy DB_in/shuffle_in DB_clustered/tmp/17526443716087640986/input_step_redundancy -v 3 --subdb-mode 1. Time for merging to input_step_redundancy: 0h 0m 0s 0ms; Time for processing: 0h 0m 0s 1ms; prefilter DB_clustered/tmp/17526443716087640986/input_step_redundancy DB_clustered/tmp/17526443716087640986/input_step_redundancy DB_clustered/tmp/17526443716087640986/pref_step0 --sub-mat nucl:nucleotide.out,aa:blosum62.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -s 1 -k 0 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 65535 --max-seqs 20 --split 0 --split-mode 2 --split-memory-limit 0 -c 0.8 --cov-mode 0 --comp-bias-corr 0 --diag-score 0 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 0 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 16 --compressed 0 -v 3. Query database size: 416 type: Aminoacid; Estimated memory consumption: 978M; Target database size: 416 type: Aminoacid; Index table k-mer threshold: 154 at k-mer size 6; Index table: counting k-mers; [=================================================================] 416 0s 41ms; Index table: Masked residues: 0; Index table: fill; [=================================================================] 416 0s 6ms; Index statistics; Entries: 125; DB size: 488 MB; Avg k-mer size: 0.000002; Top 10 k-mers; XXXXXX 6; XXXXXX 6; XXXXXX 4; XXXXXX 2; XXXXXX 2; XXXXXX 2; XXXXXX 2; XXXXXX 2; XXXXXX 2; XXXXXX 1; Time for index table init: 0h 0m 1s 308ms; Process prefiltering step 1 of 1. k-mer similarity threshold: 154; Starting prefiltering scores calculation (step 1 of 1); Query db start 1 to 416; Target db start 1 to 416; [==========================================",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/398#issuecomment-767060093:11392,mask,mask,11392,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/398#issuecomment-767060093,2,['mask'],"['mask', 'mask-lower-case']"
Availability,"===============] 100.00% 124 0s 0ms. Time for read in: 0h 0m 0s 46ms; Total time: 0h 0m 0s 72ms. Size of the sequence database: 124; Size of the alignment database: 124; Number of clusters: 124. Writing results 0h 0m 0s 0ms; Time for merging to clu_step0: 0h 0m 0s 0ms; Time for processing: 0h 0m 0s 75ms; createsubdb tmp//7897776346521331899/clu_step0 tmp//7897776346521331899/input_step_redundancy tmp//7897776346521331899/input_step1 -v 3 --subdb-mode 1. Time for merging to input_step1: 0h 0m 0s 0ms; Time for processing: 0h 0m 0s 1ms; prefilter tmp//7897776346521331899/input_step1 tmp//7897776346521331899/input_step1 tmp//7897776346521331899/pref_step1 --sub-mat nucl:nucleotide.out,aa:blosum62.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -s 3.5 -k 0 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 65535 --max-seqs 20 --split 0 --split-mode 2 --split-memory-limit 0 -c 0.8 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 16 --compressed 0 -v 3. Query database size: 124 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 124 type: Aminoacid; Index table k-mer threshold: 131 at k-mer size 6; Index table: counting k-mers; [=================================================================] 100.00% 124 0s 30ms; Index table: Masked residues: 0; Index table: fill; [=================================================================] 100.00% 124 0s 5ms; Index statistics; Entries: 116; DB size: 488 MB; Avg k-mer size: 0.000002; Top 10 k-mers; FSMYPQ 6; HFVFHR 4; YQYPRV 3; LAMYPA 1; ARPIVA 1; CHMEKC 1; VQRKKC 1; RGYLLC 1; MVQDRC 1; CEMRRC 1; Time for index table init: 0h 0m 0s 908ms; Process prefiltering step 1 of 1. k-mer similarity threshold: 131; Starting prefiltering scores calculation (step 1 of 1); Query db start 1 to 124; Target db start 1 to 124; [==========================",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-775778998:15769,mask,mask,15769,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-775778998,2,['mask'],"['mask', 'mask-lower-case']"
Availability,=======] 100.00% 18 0s 13ms; Time for merging to seq_wrong_assigned_pref_swaped_aln_ocol: 0h 0m 0s 5ms; Time for processing: 0h 0m 0s 61ms; mergedbs tmp//538598962955004214/seq_seeds.merged tmp//538598962955004214/clu_accepted_plus_wrong tmp//538598962955004214/clu_accepted tmp//538598962955004214/seq_wrong_assigned_pref_swaped_aln_ocol --merge-stop-empty 0 --compressed 0 -v 3. Merging the results to tmp//538598962955004214/clu_accepted_plus_wrong; [=================================================================] 100.00% 210 0s 1ms; Time for merging to clu_accepted_plus_wrong: 0h 0m 0s 0ms; Time for processing: 0h 0m 0s 3ms; tsv2db tmp//538598962955004214/missing.single.seqs tmp//538598962955004214/missing.single.seqs.db --output-dbtype 6 --compressed 0 -v 3. Output database type: Clustering; Time for merging to missing.single.seqs.db: 0h 0m 0s 0ms; Time for processing: 0h 0m 0s 0ms; mergedbs ../DB_in/fasta_in_db_HC tmp//538598962955004214/clu_accepted_plus_wrong_plus_single tmp//538598962955004214/clu_accepted_plus_wrong tmp//538598962955004214/missing.single.seqs.db --merge-stop-empty 0 --compressed 0 -v 3. Merging the results to tmp//538598962955004214/clu_accepted_plus_wrong_plus_single; [=================================================================] 100.00% 303 0s 2ms; Time for merging to clu_accepted_plus_wrong_plus_single: 0h 0m 0s 0ms; Time for processing: 0h 0m 0s 4ms; clust ../DB_in/fasta_in_db_HC tmp//538598962955004214/clu_accepted_plus_wrong_plus_single DB_clu --cluster-mode 0 --max-iterations 1000 --similarity-type 2 --threads 16 --compressed 0 -v 3. Clustering mode: Set Cover; [=================================================================] 100.00% 303 0s 10ms; Sort entries; Find missing connections; Found 98 new connections.; Reconstruct initial order; Alignment format is not supported! ] 0.00% 1 eta -; Alignment format is not supported!; Alignment format is not supported!; 31mAlignment format is not supported!; Error: Clustering step 2 died,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-773234853:33291,Error,Error,33291,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-773234853,1,['Error'],['Error']
Availability,"=======] 100.00% 276 0s 0ms. Time for read in: 0h 0m 0s 83ms; Total time: 0h 0m 0s 118ms. Size of the sequence database: 276; Size of the alignment database: 276; Number of clusters: 239. Writing results 0h 0m 0s 0ms; Time for merging to clu_step0: 0h 0m 0s 0ms; Time for processing: 0h 0m 0s 125ms; createsubdb tmp//10798751672030653963/clu_step0 tmp//10798751672030653963/input_step_redundancy tmp//10798751672030653963/input_step1 -v 3 --subdb-mode 1. Time for merging to input_step1: 0h 0m 0s 0ms; Time for processing: 0h 0m 0s 2ms; prefilter tmp//10798751672030653963/input_step1 tmp//10798751672030653963/input_step1 tmp//10798751672030653963/pref_step1 --sub-mat nucl:nucleotide.out,aa:blosum62.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -s 3.5 -k 0 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 65535 --max-seqs 20 --split 0 --split-mode 2 --split-memory-limit 0 -c 0.8 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 16 --compressed 0 -v 3. Query database size: 239 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 239 type: Aminoacid; Index table k-mer threshold: 131 at k-mer size 6; Index table: counting k-mers; [=================================================================] 100.00% 239 0s 16ms; Index table: Masked residues: 0; Index table: fill; [=================================================================] 100.00% 239 0s 6ms; Index statistics; Entries: 1415; DB size: 488 MB; Avg k-mer size: 0.000022; Top 10 k-mers; XXXXXX 3; XXXXXX 3; XXXXXX 2; XXXXXX 2; XXXXXX 2; XXXXXX 2; XXXXXX 2; XXXXXX 2; XXXXXX 2; XXXXXX 2; Time for index table init: 0h 0m 1s 50ms; Process prefiltering step 1 of 1. k-mer similarity threshold: 131; Starting prefiltering scores calculation (step 1 of 1); Query db start 1 to 239; Target db start 1 to 239; [==========================",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-775767472:15629,mask,mask,15629,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-775767472,2,['mask'],"['mask', 'mask-lower-case']"
Availability,"====] 69.22K 3s 841ms. Time for merging to aln_swap: 0h 0m 0s 23ms; Time for processing: 0h 0m 12s 313ms; rmdb /tmp/tmp_MMSeq2//17595625152138277869/search_tmp/17414849138893322762/search/aln -v 3 . Time for processing: 0h 0m 11s 128ms; mvdb /tmp/tmp_MMSeq2//17595625152138277869/search_tmp/17414849138893322762/search/aln_swap /tmp/tmp_MMSeq2//17595625152138277869/search_tmp/17414849138893322762/search/aln_merged -v 3 . Time for processing: 0h 0m 0s 176ms; prefilter /tmp/tmp_MMSeq2//17595625152138277869/search_tmp/17414849138893322762/search/profileDB /tmp/tmp_MMSeq2//17595625152138277869/search_tmp/17414849138893322762/query_seqs_split /tmp/tmp_MMSeq2//17595625152138277869/search_tmp/17414849138893322762/search/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -s 5.7 -k 15 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 10000 --max-seqs 2147483647 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 1 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 256 --compressed 0 -v 3 . Query database size: 15288254 type: Nucleotide; Estimated memory consumption: 9G; Target database size: 69220 type: Nucleotide; Index table k-mer threshold: 0 at k-mer size 15 ; Index table: counting k-mers; [=================================================================] 69.22K 0s 75ms; Index table: Masked residues: 724; Index table: fill; [=================================================================] 69.22K 0s 73ms; Index statistics; Entries: 15985099; DB size: 8283 MB; Avg k-mer size: 0.014887; Top 10 k-mers; CCCTCGCTCCGTTCG	31729; GGGGAAAGGTTGGGG	31239; ATTCGGTGAGTAATG	31054; CTCGCCCTCCCCAGC	31010; CGACCTACCACCCCT	31003; CGGGAGCGTGTCGAG	30951; GGGCGAGGAACGGGG	30939; GCCCACCGACACTGG	30933; ACCACTTGGTGAGGG	30876; AAGGTATCGGGTTGG	30837; Time for index table init: 0h 0m",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/394#issuecomment-782439476:12137,mask,mask,12137,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/394#issuecomment-782439476,4,['mask'],"['mask', 'mask-lower-case']"
Availability,"=] 100.00% 284 0s 5ms. Time for merging to clu_not_accepted_swap: 0h 0m 0s 2ms; Time for processing: 0h 0m 0s 66ms; createsubdb tmp//538598962955004214/clu_not_accepted_swap ../DB_in/fasta_in_db_HC tmp//538598962955004214/seq_wrong_assigned -v 3. Time for merging to seq_wrong_assigned: 0h 0m 0s 0ms; Time for processing: 0h 0m 0s 0ms; createsubdb tmp//538598962955004214/clu ../DB_in/fasta_in_db_HC tmp//538598962955004214/seq_seeds -v 3. Time for merging to seq_seeds: 0h 0m 0s 0ms; Time for processing: 0h 0m 0s 1ms; prefilter tmp//538598962955004214/seq_wrong_assigned tmp//538598962955004214/seq_seeds.merged tmp//538598962955004214/seq_wrong_assigned_pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -s 6 -k 0 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 65535 --max-seqs 20 --split 0 --split-mode 2 --split-memory-limit 0 -c 0.8 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 16 --compressed 0 -v 3. Query database size: 9 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 210 type: Aminoacid; Index table k-mer threshold: 109 at k-mer size 6; Index table: counting k-mers; [=================================================================] 100.00% 210 0s 27ms; Index table: Masked residues: 0; Index table: fill; [=================================================================] 100.00% 210 0s 8ms; Index statistics; Entries: 1285; DB size: 488 MB; Avg k-mer size: 0.000020; Top 10 k-mers; XXXXXX 3; XXXXXX 3; XXXXXX 2; XXXXXX 2; XXXXXX 2; XXXXXX 2; XXXXXX 2; XXXXXX 2; XXXXXX 2; XXXXXX 2; Time for index table init: 0h 0m 1s 174ms; Process prefiltering step 1 of 1. k-mer similarity threshold: 109; Starting prefiltering scores calculation (step 1 of 1); Query db start 1 to 9; Target db start 1 to 210; [=============================",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-773234853:27722,mask,mask,27722,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-773234853,2,['mask'],"['mask', 'mask-lower-case']"
Availability,> #Download nr; wget ftp://ftp.ncbi.nih.gov/blast/db/FASTA/nr.gz; gunzip nr.gz. > #Make a blastdb and diamond db of nr; makeblastdb -in nr -dbtype prot. It's probably because there're no taxidmapping information the way you make blastdb without `-taxid_map`.; Read this [Building a BLAST database with your (local) sequences](https://www.ncbi.nlm.nih.gov/books/NBK569841/). or you could download preformatted nr (https://ftp.ncbi.nlm.nih.gov/blast/db/nr.00.tar.gz ~ https://ftp.ncbi.nlm.nih.gov/blast/db/nr.79.tar.gz the numbers may change by time) and try again. It works for me.,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/701#issuecomment-1653495108:3,Down,Download,3,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/701#issuecomment-1653495108,2,"['Down', 'down']","['Download', 'download']"
Availability,"> . > Ah! How right you are. So it was all my fault. I hope I didn't waste too much of your time. I met the same problem with you, can you show the details step by step how to fix up the issue, thanks!",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/480#issuecomment-1175725479:46,fault,fault,46,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/480#issuecomment-1175725479,1,['fault'],['fault']
Availability,"> ; Thank you for your repley! I didn't use it initially, but then I noticed this , it still not work ,with some errors. It seems that some files are missing and can't build the database successfully. I should have recorded the error info, it's a pity . Finally I gave in and just use the `createtaxdb` command with the aria2c, it did fastaer than wget (although it's still a long time )",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/542#issuecomment-1058730626:113,error,errors,113,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/542#issuecomment-1058730626,2,['error'],"['error', 'errors']"
Availability,"> @juliacpowell1999 Yes you can get the target sequences by adding `tseq` to the `--format-output` options. For example:; > ; > ```; > easy-search query target result tmp --format-output query,target,tseq; > ```. Thank you! I now need to convert those sequences in the file to fasta format, how would I do that. I tried to using the convert2fasta command but an error keeps occuring because the file does not contain header information.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/492#issuecomment-935634337:362,error,error,362,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/492#issuecomment-935634337,1,['error'],['error']
Availability,"> Also interesting, a lot of over represented k-mers (same prefix/suffix?); > ; > ```; > Query database size: 3083342 type: Nucleotide; > Estimated memory consumption: 12G; > Target database size: 1541671 type: Nucleotide; > Index table k-mer threshold: 0 at k-mer size 15; > Index table: counting k-mers; > [=================================================================] 100.00% 1.54M 2m 38s 193ms; > Index table: Masked residues: 141067; > Index table: fill; > [=================================================================] 100.00% 1.54M 1m 10s 152ms; > Index statistics; > Entries: 516344842; > DB size: 11146 MB; > Avg k-mer size: 0.480884; > Top 10 k-mers; > GGGCTCAGGATTCTG	1282098; > CTGCTCTGGGCGCGT	1167098; > TGAGCTGGGCATGAG	1134437; > AAGTTCCTCACTCGG	1086133; > CTGTAAGCTGCTCGT	966085; > AGCTACATTGATCGC	943599; > CAGCGACACTGCTTG	913837; > CCTCGCACGCCTGAG	883990; > CCTCTGCACTCGCTG	827574; > GAGCTGGAAGCTGGT	791516; > ```. @milot-mirdita . That is correct: these millions of sequences are derived from a small set of common ancestor sequences. In short, they are very similar to one another in some portions.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/822#issuecomment-2000616856:419,Mask,Masked,419,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/822#issuecomment-2000616856,1,['Mask'],['Masked']
Availability,"> Can you write down the steps you execute after the taxonomy filtering? I am not sure how to reproduce the issue. After filter the keyword ""Candidatus"", ""bacterium"", ""uncultured"" etc...; ```bash; mmseqs filtertaxseqdb /shared/projects/phycovir/FORMATED_DB/UniRef90/UniRef90 mmseq2DB/uniref90_cleaned_DB_v5 --taxon-list ${keyword} ## the taxon id list is too long so I didn't write it; mmseqs createtaxdb mmseq2DB/uniref90_cleaned_DB_v5 result/tmp_createdb. # taxonomy assignment; mmseqs createdb result/${task_id}_prokka/${task_id}.faa queryDB/${task_id}_prokka_queryDB; mmseqs taxonomy queryDB/${task_id}_prokka_queryDB mmseq2DB/uniref90_cleaned_DB_v5 result/taxonomyResult_prokka_${task_id}/taxonomyResult_${task_id}_prokka result/tmp_prokka. mmseqs createtsv queryDB/${task_id}_prokka_queryDB result/taxonomyResult_prokka_${task_id}/taxonomyResult_${task_id}_prokka result/taxonomyResult_prokka_${taski_id}/taxonomyResult_${task_id}_prokka_cleanDB_v5.tsv; # report; mmseqs taxonomyreport mmseq2DB/uniref90_cleaned_DB_v5 result/taxonomyResult_prokka_${task_id}/taxonomyResult_${task_id}_prokka result/taxonomyResult_prokka_${task_id}_cleanDB_report_v5; # to krona; mmseqs taxonomyreport mmseq2DB/uniref90_cleaned_DB_v5 result/taxonomyResult_prokka_${task_id}/taxonomyResult_${task_id}_prokka result/taxonomyResult_${task_id}_prokka_cleanDB_v5.html --report-mode 1; ``` . Part of the report shows:; ```commandline; 0.0989	1	0	genus	2903100	 Mariniplasma; 0.0989	1	1	species	2735436	 Mariniplasma anaerobium; 0.0989	1	0	class	1912503	 Candidatus Izimaplasma; 0.0989	1	0	order	2975519	 Candidatus Izemoplasmatales; 0.0989	1	0	family	2975520	 Candidatus Izemoplasmataceae; 0.0989	1	0	genus	2975521	 Xianfuyuplasma; 0.0989	1	1	species	2782163	 Xianfuyuplasma coldseepsis; ```; In theory the ""Candidatus"" should be removed by filter. (just in case, I have checked other Candidatus exist in DB is already removed); ; I search if the ""Candidatus Izimaplasma"" is in uniref90.fsa, but there is not. ; (And th",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/676#issuecomment-1458067706:16,down,down,16,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/676#issuecomment-1458067706,2,['down'],['down']
Availability,"> Does the issue also happen if you don't set that?. If I don't set `h_vmem` then the default is used (2G), and I definitely get the mmap error. . The nodes are running `Ubuntu 18.04.5`.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/338#issuecomment-741765898:138,error,error,138,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/338#issuecomment-741765898,1,['error'],['error']
Availability,> Does this happen with the `databases` download of the uniprot or only if you call `createtaxdb` manually?; > ; > `databases` goes through a separate branch to extract taxonomic information from uniprot based databases and should not be affected. Thanks for supporting us! This happens when calling createtaxdb manually. . Would you please elaborate on what `databases download` entails in this context?. To zoom out a bit: is there a feasible mmseqs2 command to generate .a3m files with correct UniRef100 taxonomy identifiers without going through this custom database setup procedure?,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/871#issuecomment-2285392321:40,down,download,40,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/871#issuecomment-2285392321,2,['down'],['download']
Availability,"> First question: do you have specific recommendations when dealing with a transcriptome as the query? For example taking into account the rather short contigs and splicing. I am not super familiar with transcriptomics datasets. Depending on the length of your queries you might want to turn of the early ORF filter (`--orf-filter 0`) as it can sometimes reject too many ORFs if the sequences are short. We also have a different project that deals with contamination: https://github.com/martin-steinegger/conterminator; Though that tool is currently only for all-vs-all genome contamination annotations. But Martin was planning to build a scan mode for one-vs-RefSeq/GenBank. > Second question: There are no genome assemblies form closely related species available. What are your thoughts regarding nucl-nucl search VS translated_nucl-prot search in this case?. Generally our nucl-nucl searching capabilities are less developed than than anything-prot. In the taxonomy assignment, nucl-nucl still uses top-hit taxon assignment instead of LCA. We haven't gotten around to thoroughly benchmark the nucl-nucl homology search and publish it (it does work quite well in the preliminary tests). And nucl-nucl homology search is limited to around ~80% sequence identity (which is usually more than enough for taxonomy though). Also building a taxonomy database for the NT is painful and the database might get extremely large (haven't tried it in a while though). I'd be quite interested in what you find out in your experiments with it though. We do plan to develop this part further. > Third questions: In case I do a translated_nucl-prot search how do I deal with the fact that my queries are both from Euk. and Prok. origin? I mean regarding translation table. Would you worry about this?. By default, we extract fragments from any codon to a stop codon and repeat the procedure. So the translation table matters a bit less (only affected by alternative stop codons). And since we only do local alignment",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/444#issuecomment-824083071:755,avail,available,755,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/444#issuecomment-824083071,1,['avail'],['available']
Availability,"> Here is some other person having issues with this header:; > https://apple.stackexchange.com/questions/355049/compilation-error-with-mojave-error-atomic-does-not-name-a-type. Yep. I saw that. I already have brew gcc, and it doesn't solve the problem. I'd guess that gcc-8 would use its own libraries, but I have not found a way to ignore mac's own libraries yet. At least to ignore that ucred.h thing.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/182#issuecomment-477718528:124,error,error-with-mojave-error-atomic-does-not-name-a-type,124,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/182#issuecomment-477718528,1,['error'],['error-with-mojave-error-atomic-does-not-name-a-type']
Availability,"> Hi Florian,; > ; > Thanks a lot for your pull request. I added some comments. One thing that I am unsure about is the removal of delnodes however. I added that explicitly since an old Uniclust release can have taxids that are already removed in the latest NCBI taxonomy. Then we either get an error or we ignore the protein in Uniprot/Uniclust. Hi Milot, thansk for looking through it! Re deleted nodes: Does it matter whether a taxon that is encountered in a result, but is not in the taxonomy database, is from a deleted taxon or a new taxon (which is not in the taxonomy database)? In both cases the taxon can be ignored (or an error can be thrown). I do agree it can be useful to know whether it's the one case or the other.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/pull/197#issuecomment-487404454:295,error,error,295,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/pull/197#issuecomment-487404454,2,['error'],['error']
Availability,"> Hi, I got the same problem. When I run the commands in [Create a seqTaxDB for GTDB] I got this error: **mmseqs createdb ssu.fna ssu130.102.99.4 Connecting to data.ace.uq.edu.au (data.ace.uq.edu.au)|130.102.99.4|:443... connected. HTTP request sent, awaiting response... 404 Not Found 2022-04-01 08:59:20 ERROR 404: Not Found.** ... ... **awk -F'\[loc' '{ print $1}' ssu.fna | awk ""$buildNCBITax"" awk: fatal: cannot open file `ssu.fna' for reading (No such file or directory)**; > ; > Any help on this will be appreciated. Hi，; How did you resolve this issue at the time, until today I have also encountered this problem and this site is not working; https://data.ace.uq.edu.au/public/gtdb/data/releases/latest/ssu.fna; Can you give me some advice? Thanks a lot.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/548#issuecomment-1663347073:97,error,error,97,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/548#issuecomment-1663347073,2,"['ERROR', 'error']","['ERROR', 'error']"
Availability,"> Since my goal right now is to build a container that includes MMseqs2 + additional tooling, biocontainers is not an ideal solution for me. The only way I could use it is if I manage to extract the compiled MMseqs files from the container and include that into another one. However that might be rather fragile and complex. For this use-case I would recommend to download the statically compiled MMseqs2 binaries from [mmseqs.com/latest](https://mmseqs.com/latest) into the Docker container.; See an example here:; https://github.com/soedinglab/MMseqs2-App/blob/master/Dockerfile.backend",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/541#issuecomment-1181485012:364,down,download,364,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/541#issuecomment-1181485012,1,['down'],['download']
Availability,> So i fixed this error. Thanks!. > But other failures are way worse. Okay. Do you want to officially not support 32-bit architectures?,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/418#issuecomment-786501424:18,error,error,18,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/418#issuecomment-786501424,2,"['error', 'failure']","['error', 'failures']"
Availability,"> Sorry, not sure if I follow. Am I supposed to do any differently from what I described above to filter NR by taxonomy info?. I think that what they are saying is that one should download the `accession2taxid` files from NCBI. Then you can somehow run `mmseqs nrtotaxmapping` to create the mapping. . >Maybe related to this issue: I'm having a similar issue with creating a NT taxonomy db so I found this thread. I think that the createtaxdb does not complete in my case despite not printing any errors/warnings. It just eats a lot of RAM and then seemingly finishes, however, the nt_mapping is empty. EDIT: I solved _my_ problem with nt_mapping being empty. The problem was that I was using the `accession` column instead of the `accession.version` column from the `nucl_gb.accession2taxid` file I had downloaded from NCBI as input for `mmseqs createtaxdb`. mmseqs then produced an empty mapping since it tried matching `accession` numbers I provided with `accession.version` obtained from the nt database and of course couldn't find any matches to make the taxid mapping.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/824#issuecomment-2213485010:180,down,download,180,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/824#issuecomment-2213485010,3,"['down', 'error']","['download', 'downloaded', 'errors']"
Availability,"> This looks like it installed a really old version of MMseqs2. Did you install the software through conda into a new environment?. Yes, i used conda to install. I also tried reinstalling and ran the codes. the error repeats.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/823#issuecomment-2002309687:211,error,error,211,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/823#issuecomment-2002309687,1,['error'],['error']
Availability,"> You can use https://gist.github.com to post the log.; > ; > Alternatively, the call to MMseqs2 alone would already help with diagnosing the issue.; ============================================================; Thank you very much for your reply.; I just solved the bug very fortunatelly; The method is to install mpich ; ============================; Download hydra-3.3.1(https://www.mpich.org/downloads/); ./configure --prefix=$DIR/mpich; make; make install; add the mpirun in the end of your .bashrc; =============================; Best wishes",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/213#issuecomment-506283448:353,Down,Download,353,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/213#issuecomment-506283448,2,"['Down', 'down']","['Download', 'downloads']"
Availability,"> You probably should not place the tmp folder inside `/dev/shm`. The intermediate results will compete with the database index and bring everything to a crawl. Thank you for the answer! Indeed, I tried several paths for tmp - in the working directory, the` /tmp `path of our cluster which should be fast to read and write, and also the` /dev/shm` which was suggested somewhere in the issues. Can you confirm that this is indeed not the expected speed and we should look for the problem that slows it down?",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/214#issuecomment-897055038:501,down,down,501,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/214#issuecomment-897055038,1,['down'],['down']
Availability,"> ```; > mmseqs databases UniProtKB uniprot tmp; > ```; > ; > should download the latest uniprot and set it up correctly for use with MMseqs2 including taxonomy information. Thanks for this - we ran this command and obtained main database files containing `uniprot_h`, `uniprot.index` etc. However we probably still need some help to understand the next steps to assign taxonomy IDs to alignments. Following https://github.com/sokrypton/ColabFold/issues/216, here is what we tried:; ```; mmseqs convertalis test/qdb uniprot test/res_exp test/res_exp_realign.m8 --format-output query,target,taxid,taxname,taxlineage,fident,alnlen,mismatch,gapopen,qstart,qend,tstart,tend,evalue,bits,cigar; ```; and it raised the following error:; ```; Loading NCBI taxonomy; names.dmp, nodes.dmp, merged.dmp from NCBI taxdump could not be found!; ```; Is there something that we are missing here? Thanks!",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/871#issuecomment-2293140070:69,down,download,69,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/871#issuecomment-2293140070,2,"['down', 'error']","['download', 'error']"
Availability,"> `mmseqs extractalignedregion test/S29DEC19 db/nt test/tophitaln test/tophitseq`; > ; > MMseqs Version: 12.113e3; > Compressed 0; > Extract mode 2; > Preload mode 0; > Threads 40; > Verbosity 3; > ; > Can not write to data file test/tophitseq.14 ] 0.00% 1 eta -. I tried to reproduce the above error on a different target database to see if its something to do with the sequences and got the same error with the following additional error messages. Just thought reporting it might help to figure out what's wrong. `free(): corrupted unsorted chunks`; `Aborted (core dumped)`. @milot-mirdita or @martin-steinegger do you have any idea what's going on? Any help is appreciated. . Thanks,; Manu",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/368#issuecomment-716374568:295,error,error,295,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/368#issuecomment-716374568,3,['error'],['error']
Availability,"> result2msa can do everything `filterresult` can do, you don't need it.; > ; > Also its more comfortable to not use `easy-search` if you want to create an MSA:; > ; > ```; > mmseqs createdb query.fasta qdb; > mmseqs search qdb target result tmp; > mmseqs result2msa qdb target result result_msa; > mmseqs unpackdb result_msa outdir; > ```; > ; > Then you don't have to go spelunking deep into the tmp folder to find the intermediate alignment result file. I found an error when calling 'mmseqs unpackdb result_msa outdir' for . `No datafile could be found for result_msa `",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/693#issuecomment-1519543477:468,error,error,468,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/693#issuecomment-1519543477,1,['error'],['error']
Availability,">@colinbrislawn I have tested linclust with ONT reads. It should be possible to cluster them. However, we needed to tweak the parameters used for the banded alignment to account for the high error rate. Awesome!. >How do you want to use MMseqs2?. Existing Qiime 2 plugins offer several options for clustering and classifying short RNA sequences... but no plugins support clustering or classifying long, noisy sequences, or proteins of any kind. I think an MMseqs2 plugin could bring a ton of functionality to Qiime 2. A method for taxonomic classification of ONT reads would help @splaisan and others.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/235#issuecomment-579894942:191,error,error,191,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/235#issuecomment-579894942,1,['error'],['error']
Availability,"?Dear Milot,. I restarted the clustering to make a new DB, EarthMicrobiomeDB20200910, that includes previous representative DNA gene sequences (~800 million) and recently obtained redundant sequences (around 12 million), using the following command:. mmseqs cluster EarthICEmetagenomesDB EarthICEmetagenomesDB_clu EarthICEmetagenomesDB.tmp --min-seq-id 0.95 --cov-mode 2 -c 0.8 --max-seq-len 132768 --threads 32 >EarthICEmetagenomesDB_clu.log 2>&1 &. It is running since September 10, attached is the log, what do you think how long it will take to finish?. ?Many Thanks,. IA. --; --; Intikhab Alam, PhD. Research Scientist; Computational Bioscience Research Centre (CBRC), Building #3, Office #4328; 4700 King Abdullah University of Science and Technology (KAUST); Thuwal 23955-6900, KSA; W: http://www.kaust.edu.sa<https://webmail.kaust.edu.sa/owa/redir.aspx?C=wkduJ0ChSE-OkyUQwL9vutDH6L5Gg9EImiJ7GyYOxcPLuActd9iwo85DHDgQZup2zR1MyXCk7as.&URL=http%3a%2f%2fwww.kaust.edu.sa>; T +966 (0) 2 808-2423 F +966 (2) 802 0127; ________________________________; From: Intikhab S. Alam; Sent: 10 September 2020 00:45; To: soedinglab/MMseqs2; soedinglab/MMseqs2; Cc: Author; Subject: Re: [soedinglab/MMseqs2] updating a near complete mmseq clustered db (#348). Dear Milot,. I provided all result files from previous easy-linclust of 3 billion sequences. As I understand, if you use the rep_seq based new database, the update of additional sequence will not place newer sequences to any existing clusters, is this right?. The only option seems to add newer redundant sequences to previous version of redundant sequences, create a database and start a fresh linclust session. You mentioned new versions of mmseq is now much faster, I will give it a go but do you think is there a way to extract the cluster db of my previous run where I used easy-linclust?. Please provide some useful advice as these are computationally heavy tasks. Best,. IA. --; --; Intikhab Alam, PhD. Research Scientist; Computational Bioscie",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/348#issuecomment-699923180:180,redundant,redundant,180,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/348#issuecomment-699923180,1,['redundant'],['redundant']
Availability,@CHEN-Zhihan I really do not know what could be the problem. The only thing I could think off is the input file. Maybe it got corrupted before and now it produces this strange error. The wrong values that are read from the `.index` file.,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/64#issuecomment-376404561:176,error,error,176,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/64#issuecomment-376404561,1,['error'],['error']
Availability,@ChiaraVanni I have tested the slice-search/iterative-search using the most recent version of mmseqs but I can not reproduce the error. Maybe it was solved in the mean time. Would you mind testing it again please?,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/121#issuecomment-581268504:129,error,error,129,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/121#issuecomment-581268504,1,['error'],['error']
Availability,@ChiaraVanni does the error still exist?,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/121#issuecomment-498860204:22,error,error,22,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/121#issuecomment-498860204,1,['error'],['error']
Availability,"@adriaaula Would it be possible to send me the `top1` input (including `.[0-9]`, `.index` `.dbtype`) of the LCA module? So that I do not need to download the full sequences of gtdb. You can find it by looking at the input parameter for the LCA call. The call should look similar to this:. lca gtdb_54kDB tmp/3061363735539572485/top1 taxresdb --compressed 0 --blacklist 12908,28384 --tax-lineage 0 --threads 12 -v 3. @genomewalker thank you a lot! I would add it to the user guide. I am sure many user would profit from it",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/256#issuecomment-570666774:145,down,download,145,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/256#issuecomment-570666774,2,['down'],['download']
Availability,"@apcamargo Thanks for opening this PR. In order for this code to work, I think one more change is also needed, in line 139 (`VERSION` has now become `VERSION.txt`):. Current code:; ```; downloadFile ""https://data.ace.uq.edu.au/public/gtdb/data/releases/latest/VERSION"" ""${TMP_PATH}/version""; ```. Revised:; ```; downloadFile ""https://data.ace.uq.edu.au/public/gtdb/data/releases/latest/VERSION.txt"" ""${TMP_PATH}/version""; ```. Mind making this change as well? Thanks!",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/pull/742#issuecomment-1692621476:186,down,downloadFile,186,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/pull/742#issuecomment-1692621476,2,['down'],['downloadFile']
Availability,@bresyd only `linclust` and `easy-linclust` supports nucleotide and should be also sensitive enough to cluster down to 75% sequence identity. I would recommend the following parameter for your use case: ; ```; mmseqs liniclust ../so245_combined_assembly_mmseqDB so245_combined_assembly_mmseq_clustered cluster_tmp --kmer-per-seq-scale 0.2 --cluster-mode 2 --alignment-mode 3 --cov-mode 1 -c 0.99 --min-seq-id 0.99 --max-seq-len 10000000 --cluster-reassign 1 --threads 40; ```; I have just added `--kmer-per-seq-scale 0.2`,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/301#issuecomment-616662747:111,down,down,111,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/301#issuecomment-616662747,1,['down'],['down']
Availability,"@colinbrislawn I have tested `linclust` with ONT reads. It should be possible to cluster them. However, we needed to tweak the parameters used for the banded alignment to account for the high error rate. . How do you want to use MMseqs2?",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/235#issuecomment-579879522:192,error,error,192,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/235#issuecomment-579879522,1,['error'],['error']
Availability,"@dnieuw actually you encountered two separate issues. . (1) MMseqs2 performs a cascaded clustering (in default in 3 steps). This means that the centroid of a cluster can change with every iteration. So if an centroid changes then it is possible that some members that were already close to the e-value criteria do not fulfill the clustering criteria anymore. However, we do have an mode called `--cluster-reassign`. This mode removes sequences from the cascaded cluster result that do not fulfill the cluster criteria and reassigns them (if possible) to a different cluster. But this is only supported for protein sequences. This brings us already to issue (2). (2) It is currently not possible to realign DNA sequences from a clustering. The problem is, we need an anchoring point to perform a banded nucleotide alignment. The clustering format does not contain an anchor. The reason why you actually can realign some of the sequences is because In default we assume diagonal 0. . The current behavior is not good. I will add an error if cluster results are used in the alignment. Unfortunately I do not have any solution for this problem at the moment. I will keep you posted once I come up with something.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/268#issuecomment-580534070:1030,error,error,1030,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/268#issuecomment-580534070,1,['error'],['error']
Availability,"@dnieuw not performing cascaded clustering will lead to a higher hard disk requirement since you need to keep the all against all results on disk. Also for the protein clustering it would slow it down significantly because you need to search with a high sensitivity all against all, while the cascaded increases sensitivity every iteration. The nucleotide clustering should not be affected by the sensitivity only the hard disk issue. For issue 2, I currently do not have any direct solution. It might be possible to use the normal smith waterman, but it might be very slow. How long are you sequences?",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/268#issuecomment-580977887:196,down,down,196,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/268#issuecomment-580977887,1,['down'],['down']
Availability,"@fstrozzi thank you for providing this file. I was only able to detect four sequences that could not find themselves by searching the subset against itself,. ```; mmseqs search missed_exact_matches_mmseqs2 missed_exact_matches_mmseqs2_second aln_s4 tmp -s 4 --max-seqs 4000; ```. The sequences are:; (1) `LINRKREKKERKKERKKERKKERKKERKKERKKERKKGRKKERKKERKKERKKERKKERKKERKKERKKERKKERKKEKRKEETKEGRKEGRKRKKEKRKKQANKQIE`; (2) `MAVGTGVAVADGTAVGVGLGVGIGVSLGVAVGVGTRVGARVAVGAEVGVGARVGGTAVGLGAAVAVGVGSGVMVGVGCP`; (3) `TTTPTTTPSTTTLTKTPTTTTTATTTPTTTTPSTTTPTTTTTTTTKPTTITPTATTPTTTTPTTTPTTTTPTTTSLTTTTPTRTKQPTTTPTKTPSTTTPTTTPKTTPSTTTPTTTTPTTTTPTTTTPTTTTPTTTIPTKTTTTAPTTTTSTTTTPTTTPSTTTPTTTTPTTTTPITTTPTTTPTTTTPTTTPSTTTPTTTTHTTTTHTTTTPTKTTPTTTTPTTTTPTTTIPTKTTTTAPTTTTSTTTTPTTTPSTTTPTTTTPTTTTPTTTTPTTTPTTTSTTTPSTTRLTTTTPSTTTPTTTTPTTTSPTTTTSTTTPTTTTPTTTPTTTPTTTPTTTTPTTTPSTTTLTKTPTTTTPATTTTTTTTPSTTTPTTTTTITTKPTTITPTATTPTTTIPTTTTPTSTTPTTTKPTTTTPTTTTPITIIPITSTPTTLTPTTTTSTTTKPTTTHSTNTPTTTTP`; (4) `MLTKSRQIISS`. Sequence (1) could not find a hit mostly because of the low complexity repeat of the pattern ""KKER""; `LINRKREKKERKKERKKERKKERKKERKKERKKERKKGRKKERKKERKKERKKERKKERKKERKKERKKERKKERKKEKRKEETKEGRKEGRKRKKEKRKKQANKQIE`. Tantan masks nearly the whole sequence:; `; LINRKREXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXIE; `. The compositional bias correction of MMseqs2 further punishes this hit. If you turn off masking and composition bias correction this hit will be found (`--mask 0 --comp-bias-corr 0`). ; We apply these strict criteria to avoid high scoring false positives. . Masking and low composition bias correction are also the reason for (1), (2), (3) to miss the self-hits. . Sequence (4) does not fulfill the e-value criteria, probably because of its length.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/91#issuecomment-394397871:1215,mask,masks,1215,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/91#issuecomment-394397871,4,"['Mask', 'mask']","['Masking', 'mask', 'masking', 'masks']"
Availability,"@genomewalker the bug reported by @Kouroshb26 was a bug occuring because of an error in the translated (blastx) search. Did you also run an translated search? If not, could you please open a new ticket for this? Could you give us some more information please?",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/55#issuecomment-357825675:79,error,error,79,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/55#issuecomment-357825675,1,['error'],['error']
Availability,"@linsalrob Thanks for opening this issue. I am not very familiar with snakemake but we intentionally do not produce a single file with these modules since this would cost extra IO and slow down the software. Why do you need exactly one output file? The modules that produce output for consumption by other software (e.g. `convertalis`) already produce single files. As a workaround for your Snakemake issue, you can check if a process was successfully by checking if the `.dbtype` file exists. If you want a set of stickers (see https://twitter.com/thesteinegger/status/1201076220957315074), send your address to themartinsteinegger gmail com",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/292#issuecomment-604419252:189,down,down,189,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/292#issuecomment-604419252,1,['down'],['down']
Availability,"@martin-steinegger ; Hi， ; I download the newest version of mmseqs2, the biggest value is 7.5 from software help information:; -s FLOAT Sensitivity: 1.0 faster; 4.0 fast; 7.5 sensitive [5.700]; but on the description from wiki is 8.5, so which one is correct?. And, I would like get same sensitive as PSI-BLAST, if the following parameter is OK:; mmseqs search -a -s 7 --num-iterations 2",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/240#issuecomment-842066270:29,down,download,29,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/240#issuecomment-842066270,1,['down'],['download']
Availability,"@martin-steinegger ; Tried the easy-linclust as suggested on the server described before, with the latest version ( 55bcdd303972bcc8a281954d199ad8013b62c673 ); I receive the following error:; `Time for merging to clu_rep: 0h 0m 21s 931ms`; `Time for processing: 0h 0m 39s 80ms`; `result2flat tmp/6767229871110119818/input tmp/6767229871110119818/input tmp/6767229871110119818/clu_rep tmp/6767229871110119818/rep_seq.fasta --use-fasta-header -v 3 `. `tmp/6767229871110119818/easycluster.sh: line 38: 4147 Segmentation fault ""$MMSEQS"" result2flat ""${TMP_PATH}/input"" ""${TMP_PATH}/input"" ""${TMP_PATH}/clu_rep"" ""${TMP_PATH}/rep_seq.fasta"" --use-fasta-header ${VERBOSITY_PAR}`; `Error: result2flat died`",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/261#issuecomment-570894592:184,error,error,184,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/261#issuecomment-570894592,3,"['Error', 'error', 'fault']","['Error', 'error', 'fault']"
Availability,"@martin-steinegger ; ```; * thread #5, stop reason = EXC_BAD_ACCESS (code=1, address=0x5a7684002); frame #0: 0x0000000100169b58 mmseqs`CacheFriendlyOperations<2u>::findDuplicates(this=0x0000600000c08090, output=0x00000005a72a2336, outputSize=580749, computeTotalScore=true) at CacheFriendlyOperations.cpp:229:50; 226 	 const unsigned int element = tmpElementBuffer[n].id;; 227 	 const unsigned int hashBinElement = element >> (MASK_0_5_BIT);; 228 	 output[doubleElementCount].id = element;; -> 229 	 output[doubleElementCount].count = duplicateBitArray[hashBinElement];; 230 	 output[doubleElementCount].diagonal = tmpElementBuffer[n].diagonal;; 231. (lldb) p hashBinElement; (const unsigned int) 742456; (lldb) p duplicateBitArray; (unsigned char *) 0x00000005b8008000 """"; (lldb) p doubleElementCount; (size_t) 581514; (lldb) p duplicateBitArray; (unsigned char *) 0x00000005b8008000 """"; (lldb) p output[doubleElementCount]; error: Couldn't apply expression side effects : Couldn't dematerialize a result variable: couldn't read its memory; (lldb) p output; (CounterResult *) 0x00000005a72a2336; (lldb) p duplicateBitArray[hashBinElement]; (unsigned char) '\x01'; ```",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/822#issuecomment-1999011060:926,error,error,926,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/822#issuecomment-1999011060,1,['error'],['error']
Availability,"@martin-steinegger I am encountering a similar error when using a custom database to generate the MSA to be used by Colabfold for structure prediction. . `Invalid database read for database data file=/media/data/Databases/database_50_db.idx, database index=/media/data/Databases/database_50_db.idx.index; getData: local id (4294967295) >= db size (50); Traceback (most recent call last):; File ""/media/data/tools/ColabFold/colabfold/mmseqs/search.py"", line 487, in <module>; main(); File ""/media/data/tools/ColabFold/colabfold/mmseqs/search.py"", line 427, in main; mmseqs_search_monomer(; File ""/media/data/tools/ColabFold/colabfold/mmseqs/search.py"", line 108, in mmseqs_search_monomer; run_mmseqs(mmseqs, [""expandaln"", base.joinpath(""prof_res""), dbbase.joinpath(f""{metagenomic_db}{dbSuffix1}""), base.joinpath(""res_env""), dbbase.joinpath(f""{metagenomic_db}{dbSuffix2}""), base.joinpath(""res_env_exp""), ""-e"", str(expand_eval), ""--expansion-mode"", ""0"", ""--db-load-mode"", str(db_load_mode), ""--threads"", str(threads)]); File ""/media/data/tools/ColabFold/colabfold/mmseqs/search.py"", line 23, in run_mmseqs; subprocess.check_call([mmseqs] + params); File ""/media/data/tools/ColabFold/localcolabfold/colabfold-conda/lib/python3.10/subprocess.py"", line 369, in check_call; raise CalledProcessError(retcode, cmd); subprocess.CalledProcessError: Command '[PosixPath('mmseqs'), 'expandaln', PosixPath('test_msa/prof_res'), PosixPath('/media/data/Databases/database_50_db.idx'), PosixPath('test_msa/res_env'), PosixPath('/media/data/Databases/database_50_db.idx'), PosixPath('test_msa/res_env_exp'), '-e', 'inf', '--expansion-mode', '0', '--db-load-mode', '0', '--threads', '96']' returned non-zero exit status 1.` . I have replaced the third metagenomic database with a custom database, any suggestions on how I could fix this issue would be highly appreciated.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/64#issuecomment-1706126605:47,error,error,47,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/64#issuecomment-1706126605,1,['error'],['error']
Availability,"@martin-steinegger I have tested by passing the same `-s` when creating the indexes, following are the results: . >Using same `-s` as `search` in `createindex` . | Alignment | count | seconds |; | ----------- | ----------- | ----------- |; | a*-a* | 10107 | 23.81 |; | b*-b* | 23206 | 42.43 |; | a*-b* | 8155 | 26.46 |; | b*-a* | 8390 | 37.12 |. They are just slightly different. > If you index a database with MMseqs2 then all k-mers are stored if no sensitivity -s is provided to createindex ; ; Actually I thought that could have been the problem. . In the early versions of MMseqs I had noticed the difference when running without the indexed DBs, but it was not that much, and the only side-effect was a slight increase in the overall execution time (maybe 10~20% slower).; Nevertheless, now it runs faster and matches less, which is caused from what you explained about I guess. . > Do you have a small example that I could use the reproduce this issue? . Yes, get the 2 small proteomes I used from the following link ; https://send.firefox.com/download/8d4ac7f72e90671b/#ioryCshD4vIZCAPxd30CCw. I will do another couple of tests to see if I can increase the accuracy when no indexing is performed. . `UPDATE`; @martin-steinegger I think just found the problem... ; When running `search` without selecting the matrix for pre-filtering the number of hits, as well as the running times, go back to what expect. The differences are caused in this case by the use of the default VTML in the prefiltering step. As you can see from the following table, the results are much more reasonable. >Without `--seed-sub-mat nucl:nucleotide.out,aa:blosum62.ou` in `search` . | Alignment | count | seconds |; | ----------- | ----------- | ----------- |; | a-a | 10209 | 29.87 |; | b-b | 23523 | 52.05 |; | a-b | 8281 | 32.13 |; | b-a | 8533 | 45.62 |; ; I confirm this is only happening when using blosum62 in the `prefilter` step",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/318#issuecomment-644526537:1051,down,download,1051,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/318#issuecomment-644526537,1,['down'],['download']
Availability,"@martin-steinegger Thanks for providing the help.; What I am looking for is: I have 2M sequences containing from ~100 species. For each of 2M sequence, I want to find out ALL the hits/similar sequences within the given threshold, such as evalue 0.01, NOT the best hit. ; I tested the following approach: ; First I build the targetDB using 2M sequence. Then I created the index. Then for each query species (~20K sequence), I created the queryDB, then I use MMseqs search with the parameters --max-seqs num_DB_Seq, -s 7.5 -e 0.01. The program call is:; ~/db_mmseqs/10141 ~/db_mmseqs/AllDB ~/db_mmseqs/tmp/8799019798690856849/pref_7.5 --sub-mat blosum62.out -k 0 --k-score 2147483647 --alph-size 21 --max-seq-len 65535 --max-seqs 2264996 --offset-result 0 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 ; --min-ungapped-score 15 --spaced-kmer-mode 1 --pca 1 --pcb 1.5 --threads 64 -v 3 -s 7.5 . How long do you think it takes for 64 cores to get the results for 2M vs. 2M sequences with all the possible hits?",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/107#issuecomment-407667120:880,mask,mask,880,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/107#issuecomment-407667120,1,['mask'],['mask']
Availability,"@martin-steinegger That makes sense, although it also happens with Set Cover (it's --cluster-reassign, right? --reassign-cluster is not recognized):. Create directory tmp/; cluster ../DB_in/fasta_in_db_HC DB_clu tmp/ --cov-mode 0 --cluster-mode 0 --cluster-reassign 1. MMseqs Version: 0828d86539a4b6d7f64bc369a5b29920862afc5a; Substitution matrix nucl:nucleotide.out,aa:blosum62.out; Seed substitution matrix nucl:nucleotide.out,aa:VTML80.out; Sensitivity 4; k-mer length 0; k-score 2147483647; Alphabet size nucl:5,aa:21; Max sequence length 65535; Max results per query 20; Split database 0; Split mode 2; Split memory limit 0; Coverage threshold 0.8; Coverage mode 0; Compositional bias 1; Diagonal scoring true; Exact k-mer matching 0; Mask residues 1; Mask lower case residues 0; Minimum diagonal score 15; Include identical seq. id. false; Spaced k-mers 1; Preload mode 0; Pseudo count a 1; Pseudo count b 1.5; Spaced k-mer pattern; Local temporary path; Threads 16; Compressed 0; Verbosity 3; Add backtrace false; Alignment mode 3; Allow wrapped scoring false; E-value threshold 0.001; Seq. id. threshold 0; Min alignment length 0; Seq. id. mode 0; Alternative alignments 0; Max reject 2147483647; Max accept 2147483647; Score bias 0; Realign hits false; Realign score bias -0.2; Realign max seqs 2147483647; Gap open cost nucl:5,aa:11; Gap extension cost nucl:2,aa:1; Zdrop 40; Rescore mode 0; Remove hits by seq. id. and coverage false; Sort results 0; Cluster mode 0; Max connected component depth 1000; Similarity type 2; Single step clustering false; Cascaded clustering steps 3; Cluster reassign true; Remove temporary files false; Force restart with latest tmp false; MPI runner; k-mers per sequence 21; Scale k-mers per sequence nucl:0.200,aa:0.000; Adjust k-mer length false; Shift hash 67; Include only extendable false; Skip repeating k-mers false. Set cluster sensitivity to -s 6.000000; Set cluster iterations to 3; linclust ../DB_in/fasta_in_db_HC tmp//538598962955004214/clu_redu",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-773234853:740,Mask,Mask,740,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-773234853,2,['Mask'],['Mask']
Availability,"@martin-steinegger sorry for the delay. I ran the regression (using`mmseqs2 8.fac81 hf3e9acd_1 bioconda`), and it appears that some tests failed. The end of the test output:. ```; Tmp resultFolder/LINSEARCH_NUCLNUCL_TARNS_SEARCH/tmp folder does not exist or is not a directory.; Created dir resultFolder/LINSEARCH_NUCLNUCL_TARNS_SEARCH/tmp; Program call:; extractorfs resultFolder/LINSEARCH_NUCLNUCL_TARNS_SEARCH/targetannotation_nucl resultFolder/LINSEARCH_NUCLNUCL_TARNS_SEARCH/tmp/4434917762398107271/orfs --min-length 30 --max-length 98202 --max-gaps 2147483647 --contig-start-mode 2 --contig-end-mode 2 --orf-start-mode 1 --forward-frames 1,2,3 --reverse-frames 1,2,3 --translation-table 1 --use-all-table-starts 0 --id-offset 0 --threads 80 --compressed 0 -v 3. No datafile could be found for resultFolder/LINSEARCH_NUCLNUCL_TARNS_SEARCH/targetannotation_nucl_h!; Error: extractorfs died; Command exited with non-zero status 1; 40.25user 1.33system 0:02.64elapsed 1570%CPU (0avgtext+0avgdata 178744maxresident)k; 154744inputs+244552outputs (605major+33470minor)pagefaults 0swaps. LINSEARCH_NUCLNUCL_TARNS_SEARCH; TEST FAILED (NO REPORT). DBPROFILE_INDEX; TEST FAILED (NO REPORT). NUCLPROTTAX_SEARCH; TEST FAILED (NO REPORT). PROTNUCL_SEARCH; TEST FAILED (NO REPORT). EASY_LINCLUST; TEST SUCCESS; GOOD; Expected: 26523; Actual: 26523. LINCLUST; TEST SUCCESS; GOOD; Expected: 26523; Actual: 26523. EASY_CLUSTER; TEST SUCCESS; GOOD; Expected: 15682; Actual: 15682. CLUSTER; TEST SUCCESS; GOOD; Expected: 15682; Actual: 15682. NUCLNUCL_TRANS_SEARCH; TEST FAILED (NO REPORT). NUCLNUCL_SEARCH; TEST FAILED (NO REPORT). NUCLPROT_SEARCH; TEST FAILED (NO REPORT). DBPROFILE; TEST SUCCESS; GOOD; Expected: 0.142; Actual: 0.182019. SLICEPROFILE; TEST SUCCESS; GOOD; Expected: 0.140; Actual: 0.147729. EASY_PROFILE; TEST SUCCESS; GOOD; Expected: 0.334; Actual: 0.338768. PROFILE; TEST FAILED; BAD; Expected: 0.367; Actual: 0.324652. EASY_SEARCH; TEST SUCCESS; GOOD; Expected: 0.235; Actual: 0.238355. SEARCH",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/188#issuecomment-488073098:870,Error,Error,870,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/188#issuecomment-488073098,1,['Error'],['Error']
Availability,"@milot-mirdita . The least version works nice with default parameters, the most recent version at linux brew are still running, but since the prefilter are finished and the alignment are running, I presume it is working without default parameters. ```; Program call:; prefilter pbps.neighbors.DB pfam_profile.idx tmp/6822607060114486044/pref --sub-mat blosum62.out --seed-sub-mat VTML80.out -s 7.5 -k 6 --k-score 2147483647 --alph-size 21 --max-seq-len 65535 --max-seqs 300 --offset-result 0 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 10 --compressed 0 -v 3 ; ``` . Thanks.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/189#issuecomment-483366690:618,mask,mask,618,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/189#issuecomment-483366690,2,['mask'],"['mask', 'mask-lower-case']"
Availability,"@milot-mirdita I also got indexing error. OS: elementary OS 6; Tool: MMseqs2 13.45111; Source: Conda. Indexed data: chrY sequence taken from the reference human genome. Command:; `mmseqs createindex chrY tmp --search-type 3`. Error log:; ```; createindex chrY tmp --search-type 3 . MMseqs Version: 	13.45111; Seed substitution matrix 	nucl:nucleotide.out,aa:VTML80.out; k-mer length 	0; Alphabet size 	nucl:5,aa:21; Compositional bias 	1; Max sequence length 	65535; Max results per query 	300; Mask residues 	1; Mask lower case residues 	0; Spaced k-mers 	1; Spaced k-mer pattern 	; Sensitivity 	7.5; k-score 	0; Check compatible 	0; Search type 	3; Split database 	0; Split memory limit 	0; Verbosity 	3; Threads 	8; Min codons in orf 	30; Max codons in length 	32734; Max orf gaps 	2147483647; Contig start mode 	2; Contig end mode 	2; Orf start mode 	1; Forward frames 	1,2,3; Reverse frames 	1,2,3; Translation table 	1; Translate orf 	0; Use all table starts 	false; Offset of numeric ids 	0; Create lookup 	0; Compressed 	0; Add orf stop 	false; Overlap between sequences	0; Sequence split mode 	1; Header split mode 	0; Strand selection 	1; Remove temporary files 	false. createindex chrY tmp --search-type 3 . MMseqs Version: 	13.45111; Seed substitution matrix 	nucl:nucleotide.out,aa:VTML80.out; k-mer length 	15; Alphabet size 	nucl:5,aa:21; Compositional bias 	1; Max sequence length 	10000; Max results per query 	300; Mask residues 	1; Mask lower case residues 	0; Spaced k-mers 	1; Spaced k-mer pattern 	; Sensitivity 	7.5; k-score 	0; Check compatible 	0; Search type 	3; Split database 	0; Split memory limit 	0; Verbosity 	3; Threads 	8; Min codons in orf 	30; Max codons in length 	32734; Max orf gaps 	2147483647; Contig start mode 	2; Contig end mode 	2; Orf start mode 	1; Forward frames 	1; Reverse frames 	; Translation table 	1; Translate orf 	0; Use all table starts 	false; Offset of numeric ids 	0; Create lookup 	0; Compressed 	0; Add orf stop 	false; Overlap between seq",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/280#issuecomment-981845082:35,error,error,35,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/280#issuecomment-981845082,4,"['Error', 'Mask', 'error']","['Error', 'Mask', 'error']"
Availability,@milot-mirdita I'm running into `segmentation fault` issues when running with 2 Nodes carrying 128 cpus each - total memory == 448G. Further review revealed that i'm running out of memory. Any recommendations on what kind of `reasonable-sized server` you are referring to? Any by 'normal clustering' you mean the `mmseqs cluster`? . I'm trying to reproduce the `cascaded-clustering` approach described here: https://elifesciences.org/articles/67667#bib118. Which might that be?. Thank you!,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/608#issuecomment-1252070551:46,fault,fault,46,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/608#issuecomment-1252070551,1,['fault'],['fault']
Availability,@milot-mirdita Is that the correct formatting for the file? I suspect that it has to do with some taxonomic levels missing. Could that be throwing the error?,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/779#issuecomment-1876141284:151,error,error,151,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/779#issuecomment-1876141284,1,['error'],['error']
Availability,"@milot-mirdita Your fix works for the artificial set, but unfortunately, not for my own set. I guess the artificial set has very little similarity between sequences, which should explain the differences in behaviour:. ~ See newest comment below for log with reproducible data ~. `mmseqs cluster DB_in DB_clu tmp/ --cluster-reassign 1 --cluster-mode 0 --cov-mode 0`. Create directory tmp/; cluster DB_in DB_clu tmp/ --cluster-reassign 1 --cluster-mode 0 --cov-mode 0. MMseqs Version: 9290a2b529da9763992bde2e6e0f95c61b003123; Substitution matrix nucl:nucleotide.out,aa:blosum62.out; Seed substitution matrix nucl:nucleotide.out,aa:VTML80.out; Sensitivity 4; k-mer length 0; k-score 2147483647; Alphabet size nucl:5,aa:21; Max sequence length 65535; Max results per query 20; Split database 0; Split mode 2; Split memory limit 0; Coverage threshold 0.8; Coverage mode 0; Compositional bias 1; Diagonal scoring true; Exact k-mer matching 0; Mask residues 1; Mask lower case residues 0; Minimum diagonal score 15; Include identical seq. id. false; Spaced k-mers 1; Preload mode 0; Pseudo count a 1; Pseudo count b 1.5; Spaced k-mer pattern; Local temporary path; Threads 16; Compressed 0; Verbosity 3; Add backtrace false; Alignment mode 3; Allow wrapped scoring false; E-value threshold 0.001; Seq. id. threshold 0; Min alignment length 0; Seq. id. mode 0; Alternative alignments 0; Max reject 2147483647; Max accept 2147483647; Score bias 0; Realign hits false; Realign score bias -0.2; Realign max seqs 2147483647; Gap open cost nucl:5,aa:11; Gap extension cost nucl:2,aa:1; Zdrop 40; Rescore mode 0; Remove hits by seq. id. and coverage false; Sort results 0; Cluster mode 0; Max connected component depth 1000; Similarity type 2; Single step clustering false; Cascaded clustering steps 3; Cluster reassign true; Remove temporary files false; Force restart with latest tmp false; MPI runner; k-mers per sequence 21; Scale k-mers per sequence nucl:0.200,aa:0.000; Adjust k-mer length false; Shift hash ",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-775767472:938,Mask,Mask,938,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-775767472,2,['Mask'],['Mask']
Availability,@milot-mirdita i've seen that error here: https://github.com/soedinglab/MMseqs2/issues/170; and have checked to make sure there are no spaces after `>`,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/763#issuecomment-1759870452:30,error,error,30,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/763#issuecomment-1759870452,1,['error'],['error']
Availability,"@milot-mirdita sorry, search also crashes - Tried ; `mmseqs search $querydb $targetdb $resultsdb ./tmp/ --threads $THREADS --search-type 3 -s 1 --min-seq-id 0.79 --min-aln-len 119 -e 0.00001 --max-seqs 50 --max-accept 10`; crashed with the :; ```; Target database size: 288915877 type: Nucleotide; Process prefiltering step 1 of 7. Index table k-mer threshold: 0 at k-mer size 15 ; Index table: counting k-mers; [> ] 0.00% 1 eta /scratch200/urineri/tmp2//10416504770660353718/blastp.sh: line 99: 25242 Segmentation fault $RUNNER ""$MMSEQS"" prefilter ""$INPUT"" ""$TARGET"" ""$TMP_PATH/pref_$STEP"" $PREFILTER_PAR -s ""$SENS""; Error: Prefilter died; Error: Search step died. ```",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/280#issuecomment-591413045:515,fault,fault,515,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/280#issuecomment-591413045,3,"['Error', 'fault']","['Error', 'fault']"
Availability,@milot-mirdita things are not getting much more logical:. `mmseqs cluster ../DB_in/fasta_in_db_HC DB_clu tmp/ --mask 0 -k 5 --spaced-kmer-pattern 110111 --cov-mode 0 --cluster-mode 0 --cluster-reassign 1`. output:; `User-specified k-mer pattern is not consistent with stated k-mer size`,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-773242753:112,mask,mask,112,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-773242753,1,['mask'],['mask']
Availability,"@milot-mirdita yes, i installed the latest version (from https://mmseqs.com/latest/mmseqs-linux-avx2.tar.gz ) and see the same error.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/763#issuecomment-1759783355:127,error,error,127,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/763#issuecomment-1759783355,1,['error'],['error']
Availability,"@milot-mirdita — Thank you for the reply. . > The --global-alignment parameter is really badly named and does something unrelated for normal searches. We really should remove it. Ah ok, that's good to know. > Either opal or parasail might serve as the base for the implementation. If you are interested in contributing this feature we could help guide you through. Thank you for the references and the offer to assist me in contributing. Currently my language comfortability extends only to Python and Rust, so it'd be a stretch for me at the moment. I don't want to close this issue in the case you want to keep it open to consider down the line, but I consider it addressed. Thanks again!",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/223#issuecomment-518761178:633,down,down,633,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/223#issuecomment-518761178,2,['down'],['down']
Availability,"@mlcoleman ; I have the same problem after executing the shell commands in `download.sh` manually.; For the `gtdb.lookup` file, did you just fix the third column to not start at 1 again after 65535? How did you create and use the `gtdb.taxid.mapping` file (do you mean adding the tax-ids to `gtdb_mapping` which has only 1 column now?):; I would make a protein-id vs genome table and then (fasta headers from `protein_faa_reps`) and merge with the proteins IDs in the new `gtdb.lookup` and the tax-ids in `tmp/taxonomy/mapping_genomes`; edit: I renumbered the genome ids in `gtdb.lookup` to go from 1 to 85205 and then replaced the `gtdb_mapping` file with one that links each protein-id (column1) to the tax-id of the corresponding genome (column2), tax-ids are from `taxonomy/mapping_genomes`. I hope that is what it is supposed to be",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/729#issuecomment-1647988602:76,down,download,76,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/729#issuecomment-1647988602,1,['down'],['download']
Availability,"@nick-youngblut I have added a taxonomy regression test to our test suite. I could not reproduce your error. But we found a critical error, caused by multi threading ,in one modules involved in the 2bLCA search. This issues should be fixed in the main branch. Could you try to run the regression? . git clone https://bitbucket.org/martin_steinegger/mmseqs-benchmark; cd mmseqs-benchmark; ./run_regression.sh mmseqs resultFolder",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/188#issuecomment-484996995:102,error,error,102,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/188#issuecomment-484996995,2,['error'],['error']
Availability,"@ppflrs I have rebuilt the metaclust database by adding new identifier and reclustering everything. Every protein source should be now labeled with uniq identifier which can be used to traced the protein to the JGI, OM-RGC, Uniprot or NCBI. ; The new release is available here https://metaclust.mmseqs.com/2018_06/ ; ; The identifier looks like this now. >RifCSPlowO2_12_1023861.scaffolds.fasta_scaffold367679_1 # 24 # 428 # -1 # ID=367679_1;partial=00;start_type=ATG;rbs_motif=None;rbs_spacer=None;gc_cont=0.435. `RifCSPlowO2_12` identifies the JGI project. The project can be accessed the following way (you need an JGI account): . https://genome.jgi.doe.gov/portal/pages/dynamicOrganismDownload.jsf?organism=RifCSPlowO2_12. Within the project the contig is contained in the file `1023861.scaffolds.fasta` at fasta record `scaffold367679_1`. . The rest of the header contains the prodigal prediction information. . I have also added a file metaclust_50_cluster.fasta.gz which contains all cluster member in a fasta like fromat https://github.com/soedinglab/MMseqs2/wiki#cluster-fasta-like-format.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/87#issuecomment-399853855:262,avail,available,262,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/87#issuecomment-399853855,1,['avail'],['available']
Availability,@salvoc81 The PfamA HH-suite database had one broken entry that was causing hhsearch to always fail and hhblits to possibly sometimes fail. Please download it again.,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/130#issuecomment-458939545:147,down,download,147,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/130#issuecomment-458939545,1,['down'],['download']
Availability,"A quick comment, in case it should help other users in a similar situation: it took me a while to understand why the performance of mmseqs2 search speed was at least an order of magnitude slower on our compute cluster than it was on a single server. It turns out the UniRef90 target DB index file with sufficient split (16) to accommodate the modest node RAM (32GB) was over 200GB in size and therefore too large to fit on the limited node local disks, so it stayed on the network shared disk bay (nonetheless with reasonable Infiniband 40Gb/s connection to the nodes). With such a configuration the mmseqs2 search jobs on the nodes were endlessly I/O bound, using a ~20% fraction of a core instead of the 16 cores available. As soon as I deleted the target DB index files (_sk7_), the mmseqs2 search jobs distributed on the cluster nodes performed again really well!; So in a nutshell, I would recommend not using pre-indexed DB files on a compute cluster when these large files can't reside on a local disk, and instead use on the fly indexing which of course induces a significant overhead, but orders of magnitude less significant than the actual index file access on shared network storage. And of course this on the fly indexing overhead becomes less important as the query DB gets larger :) With large query DBs, I'm very impressed by the speed of (non MPI) distributed mmeseqs on our modest cluster (whilst providing excellent sensitivity of course)!",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/3#issuecomment-252239392:715,avail,available,715,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/3#issuecomment-252239392,1,['avail'],['available']
Availability,ARNING: Sequence (dbKey=105583) contains only ATGC. It might be a nucleotide sequence. Index table: Masked residues: 239357; Index table: fill...; ..........; Index table: removing duplicate entries...; Index table init done. Write 10; Write 20; Write 60; Write 70; Write 80; Write 30; Write 40; Write 5; Write 0; Write MMSEQSFFINDEX ; Time for merging files: 0 h 0 m 0 s; Done. ; Program call:; DB DB resultDB tmp -a -s 7.5 --mask 0 --comp-bias-corr 0 . MMseqs Version: 	e2c8166b292d5e65271887cf4af568f32b346dd2; Sub Matrix 	blosum62.out; Add backtrace 	true; Alignment mode 	0; E-value threshold 	0.001; Seq. Id Threshold 	0; Coverage threshold 	0; Max. sequence length 	32000; Max. results per query 	300; Compositional bias 	0; Profile 	false; Realign hit 	false; Max Reject 	2147483647; Max Accept 	2147483647; Include identical Seq. Id. 	false; Threads 	4; Verbosity 	3; Sensitivity 	7.5; K-mer size 	0; K-score 	2147483647; Alphabet size 	21; Offset result 	0; Split DB 	0; Split mode 	2; Diagonal Scoring 	1; Mask Residues 	0; Minimum Diagonal score 	15; Spaced Kmer 	1; Profile e-value threshold 	0.001; Use global sequence weighting 	false; Maximum sequence identity threshold	0.9; Minimum seq. id. 	0; Minimum score per column 	-20; Minimum coverage 	0; Select n most diverse seqs 	100; Pseudo count a 	1; Pseudo count b 	1.5; Number search iterations 	1; Start sensitivity 	4; sensitivity step size 	1; Sets the MPI runner 	. /...; /...; Program call:; DB DB /.../tmp/pref_7 --sub-mat blosum62.out -k 0 --k-score 2147483647 --alph-size 21 --max-seq-len 32000 --max-seqs 300 --offset-result 0 --split 0 --split-mode 2 -c 0 --comp-bias-corr 0 --diag-score 1 --mask 0 --min-ungapped-score 15 --spaced-kmer-mode 1 --threads 4 -v 3 -s 7 . MMseqs Version: 	e2c8166b292d5e65271887cf4af568f32b346dd2; Sub Matrix 	blosum62.out; Sensitivity 	7; K-mer size 	0; K-score 	2147483647; Alphabet size 	21; Max. sequence length 	32000; Profile 	false; Max. results per query 	300; Offset result 	0; Split ,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/12#issuecomment-275642021:2257,Mask,Mask,2257,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/12#issuecomment-275642021,1,['Mask'],['Mask']
Availability,"Add backtrace 	false; Alignment mode 	3; E-value threshold 	0.001; Seq. id. threshold 	0; Min. alignment length 	0; Seq. id. mode 	0; Alternative alignments 	0; Coverage threshold 	0; Coverage mode 	0; Max sequence length 	65535; Compositional bias 	1; Realign hits 	false; Max reject 	2147483647; Max accept 	2147483647; Include identical seq. id. 	false; Preload mode 	0; Pseudo count a 	1; Pseudo count b 	1.5; Score bias 	0; Gap open cost 	11; Gap extension cost 	1; Threads 	40; Compressed 	0; Verbosity 	3; Seed substitution matrix 	nucl:nucleotide.out,aa:VTML80.out; Sensitivity 	6; K-mer size 	0; K-score 	2147483647; Alphabet size 	21; Max results per query 	1; Split database 	0; Split mode 	2; Split memory limit 	0; Diagonal scoring 	true; Exact k-mer matching 	0; Mask residues 	1; Mask lower case residues 	0; Minimum diagonal score 	15; Spaced k-mers 	1; Spaced k-mer pattern 	; Local temporary path 	; Rescore mode 	0; Remove hits by seq. id. and coverage 	false; Sort results 	0; Mask profile 	1; Profile e-value threshold 	0.001; Use global sequence weighting 	false; Filter MSA 	1; Maximum seq. id. threshold 	0.9; Minimum seq. id. 	0; Minimum score per column 	-20; Minimum coverage 	0; Select N most diverse seqs 	1000; Omit consensus 	false; Min codons in orf 	30; Max codons in length 	32734; Max orf gaps 	2147483647; Contig start mode 	2; Contig end mode 	2; Orf start mode 	1; Forward frames 	1,2,3; Reverse frames 	1,2,3; Translation table 	1; Translate orf 	0; Use all table starts 	false; Offset of numeric ids 	0; Create lookup 	0; Add orf stop 	false; Chain overlapping alignments 	0; Merge query 	1; Search type 	0; Number search iterations 	1; Start sensitivity 	1; Search steps 	3; Run a seq-profile search in slice mode	false; Strand selection 	2; Disk space limit 	0; MPI runner 	; Force restart with latest tmp 	false; Remove temporary files 	true; Alignment format 	0; Format alignment output 	query,target,pident,alnlen,mismatch,gapopen,qstart,qend,tstart,tend,e",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/231#issuecomment-535253491:1308,Mask,Mask,1308,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/231#issuecomment-535253491,1,['Mask'],['Mask']
Availability,"After looking through the input results, I think I have an idea of what the issue might be: the new database consisted of the original database + a completely separate out-group, with no sequences that clustered at all with the original. Once I added in some new sequences that joined existing clusters, the code appeared to run without issue. . Is it problematic to add a new database where the new sequences do not overlap at all with the original, otherwise it will lead to an error?",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/103#issuecomment-404956954:480,error,error,480,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/103#issuecomment-404956954,1,['error'],['error']
Availability,After testing few strategies I zipped all the commands along with logs for you to have a look after which commands and in which moments the errors occurred. I also attach those with comments to show how the clustering went and with what time efficiency. I understand that I should patch the source and run the software again in the suspected steps to printout the problems?. [logs.zip](https://github.com/soedinglab/MMseqs2/files/1815637/logs.zip),MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/72#issuecomment-373386179:140,error,errors,140,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/72#issuecomment-373386179,1,['error'],['errors']
Availability,Ah good that there is no seg. fault anymore. Could you attach the log output?,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/187#issuecomment-484315440:30,fault,fault,30,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/187#issuecomment-484315440,1,['fault'],['fault']
Availability,"Ah interesting, thank you for the explanation. Alternatively, having an informative error message that explains the failure would be helpful!",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/682#issuecomment-1473740986:84,error,error,84,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/682#issuecomment-1473740986,2,"['error', 'failure']","['error', 'failure']"
Availability,"Ah that makes sense, sorry.; You need to copy the call to the prefilter module from the output log and only run that in GDB. E.g. from what you posted above from createindex, you would look for a line starting with prefilter and copy that full line:; ```; Time for processing: 0h 23m 17s 335ms; indexdb ./tmp/11929725182862116610/nucl_split_seq ./MMseqs2DB/MMseqs2DB --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -k 15 --alph-size 21 --comp-bias-corr 1 --max-seq-len 10000 --max-seqs 300 --mask 1 --mask-lower-case 0 --spaced-kmer-mode 1 -s 7.5 --k-score 0 --check-compatible 0 --search-type 3 --split 0 --split-memory-limit 0 --threads 48 -v 3 ; =>; gdb --args mmseqs indexdb ....; ```",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/280#issuecomment-591468961:493,mask,mask,493,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/280#issuecomment-591468961,2,['mask'],"['mask', 'mask-lower-case']"
Availability,"Ah the nucl-nucl test are very likely to fail as they include statically compiled binaries for samtools (for linux, windows and macos). I would need to add a statically compiled binary for freebsd too. `SLICEPROFILE` is odd however. The `posix_madvice` error is annoying but can be ignored. I don't see anything special in the freebsd man page that would indicate that this might fail/behave differently. . I am downloading a VM and I'll take a look at these issues.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/460#issuecomment-868528400:253,error,error,253,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/460#issuecomment-868528400,2,"['down', 'error']","['downloading', 'error']"
Availability,Ah! How right you are. So it was all my fault. I hope I didn't waste too much of your time.,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/480#issuecomment-895356292:40,fault,fault,40,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/480#issuecomment-895356292,1,['fault'],['fault']
Availability,"Ah, yes that was it. I had changed it to a number 0-100 when trying to fix some other error and then kept it when it ran successfully.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/33#issuecomment-305596006:86,error,error,86,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/33#issuecomment-305596006,1,['error'],['error']
Availability,"Also interesting, a lot of over represented k-mers (same prefix/suffix?). ```; Query database size: 3083342 type: Nucleotide; Estimated memory consumption: 12G; Target database size: 1541671 type: Nucleotide; Index table k-mer threshold: 0 at k-mer size 15; Index table: counting k-mers; [=================================================================] 100.00% 1.54M 2m 38s 193ms; Index table: Masked residues: 141067; Index table: fill; [=================================================================] 100.00% 1.54M 1m 10s 152ms; Index statistics; Entries: 516344842; DB size: 11146 MB; Avg k-mer size: 0.480884; Top 10 k-mers; GGGCTCAGGATTCTG	1282098; CTGCTCTGGGCGCGT	1167098; TGAGCTGGGCATGAG	1134437; AAGTTCCTCACTCGG	1086133; CTGTAAGCTGCTCGT	966085; AGCTACATTGATCGC	943599; CAGCGACACTGCTTG	913837; CCTCGCACGCCTGAG	883990; CCTCTGCACTCGCTG	827574; GAGCTGGAAGCTGGT	791516; ```",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/822#issuecomment-1999016296:397,Mask,Masked,397,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/822#issuecomment-1999016296,1,['Mask'],['Masked']
Availability,"An issue here is `--match-mode 1`, as evident from the error output; `--match-mode 0` for the profile database construction fixes the issue downstream. Does this affect the results?",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/641#issuecomment-1331406529:55,error,error,55,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/641#issuecomment-1331406529,2,"['down', 'error']","['downstream', 'error']"
Availability,"An issue with the associated files (eg., `.index`) is that if >=1 of them are missing, the errors are often cryptic and not just ""File X is missing"".",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/333#issuecomment-662996304:91,error,errors,91,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/333#issuecomment-662996304,1,['error'],['errors']
Availability,"And FYI, SLICEPROFILE succeeded on my 4-core Phenom workstation. The failure occurred on a 16C/32T PowerEdge server. Full output from another run with ```|& tee log``` attached. [log.gz](https://github.com/soedinglab/MMseqs2/files/6717081/log.gz)",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/460#issuecomment-868563538:69,failure,failure,69,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/460#issuecomment-868563538,1,['failure'],['failure']
Availability,"And the full output of a clustering run:. Tmp DB_clustered/tmp folder does not exist or is not a directory.; Create dir DB_clustered/tmp; cluster DB_in/shuffle_in DB_clustered/shuffle_cl DB_clustered/tmp --min-seq-id 0.9. MMseqs Version: 96d452cb432fc4674991a48952deaf24d1787e77; Substitution matrix nucl:nucleotide.out,aa:blosum62.out; Seed substitution matrix nucl:nucleotide.out,aa:VTML80.out; Sensitivity 4; k-mer length 0; k-score 2147483647; Alphabet size nucl:5,aa:21; Max sequence length 65535; Max results per query 20; Split database 0; Split mode 2; Split memory limit 0; Coverage threshold 0.8; Coverage mode 0; Compositional bias 1; Diagonal scoring true; Exact k-mer matching 0; Mask residues 1; Mask lower case residues 0; Minimum diagonal score 15; Include identical seq. id. false; Spaced k-mers 1; Preload mode 0; Pseudo count a 1; Pseudo count b 1.5; Spaced k-mer pattern; Local temporary path; Threads 16; Compressed 0; Verbosity 3; Add backtrace false; Alignment mode 3; Allow wrapped scoring false; E-value threshold 0.001; Seq. id. threshold 0.9; Min alignment length 0; Seq. id. mode 0; Alternative alignments 0; Realign hits false; Max reject 2147483647; Max accept 2147483647; Score bias 0; Gap open cost nucl:5,aa:11; Gap extension cost nucl:2,aa:1; Zdrop 40; Rescore mode 0; Remove hits by seq. id. and coverage false; Sort results 0; Cluster mode 0; Max connected component depth 1000; Similarity type 2; Single step clustering false; Cascaded clustering steps 3; Cluster reassign false; Remove temporary files false; Force restart with latest tmp false; MPI runner; k-mers per sequence 21; Scale k-mers per sequence nucl:0.200,aa:0.000; Adjust k-mer length false; Shift hash 67; Include only extendable false; Skip repeating k-mers false. Set cluster sensitivity to -s 1.000000; Set cluster mode SET COVER; Set cluster iterations to 1; linclust DB_in/shuffle_in DB_clustered/tmp/17526443716087640986/clu_redundancy DB_clustered/tmp/17526443716087640986/linclust --cluster",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/398#issuecomment-767060093:693,Mask,Mask,693,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/398#issuecomment-767060093,2,['Mask'],['Mask']
Availability,"Any updates on this? I've tried a couple of things, but I still got the ""Invalid database read for database data file"" error. Do I have to somehow subset the *_h and *.index files in addition to the database file?",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/168#issuecomment-471331643:119,error,error,119,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/168#issuecomment-471331643,1,['error'],['error']
Availability,Any updates on what caused the issue? I'm running into the same error with protein fastas I downloaded from ncbi's ftp for bacterial proteins: https://ftp.ncbi.nlm.nih.gov/refseq/release/bacteria/*.faa.gz,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/763#issuecomment-2079914524:64,error,error,64,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/763#issuecomment-2079914524,2,"['down', 'error']","['downloaded', 'error']"
Availability,Apologies but it appears that this is not a real issue. The errors in the alignment were artifacts of extracting alignment data from a cluster_DB not the underlying alignment_DB. Proper association of alignment data with the cluster sequences reveals that the coverage parameter works as intended. . This issue can be closed and deleted. Best; Victor,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/698#issuecomment-1526483865:60,error,errors,60,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/698#issuecomment-1526483865,1,['error'],['errors']
Availability,Artificial fasta with short (10 AA) sequences:. [artificial.txt](https://github.com/soedinglab/MMseqs2/files/5926176/artificial.txt). commands:. `mmseqs createdb artificial.fasta DB_artificial/artificial_DB`; `mmseqs cluster DB_artificial/artificial_DB db_clu tmp/ -k 5 --spaced-kmer-pattern 110111`. output ends with:. `User-specified k-mer pattern is not consistent with stated k-mer size; User-specified k-mer pattern is not consistent with stated k-mer size; Error: kmermatcher died`,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-773323042:463,Error,Error,463,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-773323042,1,['Error'],['Error']
Availability,"At least for one dataset that I'm working on, I seem to still be getting this error even though I'm using `MMseqs2 Version: 10.6d92c`:. ```; rescorediagonal /tmp/global/nyoungblut/LLMGAG_274879977417/linclust/genes_db /tmp/global/nyoungblut/LLMGAG_274879977417/linclust/genes_db /tmp/global/nyoungblut/LLMGAG_274879977417/linclust_tmp//7142606106325398954/pref /tmp/global/nyoungblut/LLMGAG_274879977417/linclust_tmp//7142606106325398954/pref_rescore1 --sub-mat nucl:nucleotide.out,aa:blosum62.out --rescore-mode 0 --filter-hits 0 -e 0.001 -c 0.9 -a 0 --cov-mode 0 --min-seq-id 0.9 --min-aln-len 0 --seq-id-mode 0 --add-self-matches 0 --sort-results 0 --db-load-mode 0 --threads 24 --compressed 0 -v 3. [Invalid database read for database data file=/tmp/global/nyoungblut/LLMGAG_274879977417/linclust/genes_db, database index=/tmp/global/nyoungblut/LLMGAG_274879977417/linclust/genes_db.index; Invalid database read for database data file=/tmp/global/nyoungblut/LLMGAG_274879977417/linclust/genes_db, database index=/tmp/global/nyoungblut/LLMGAG_274879977417/linclust/genes_db.index; Invalid database read for database data file=/tmp/global/nyoungblut/LLMGAG_274879977417/linclust/genes_db, database index=/tmp/global/nyoungblut/LLMGAG_274879977417/linclust/genes_db.index; Invalid database read for database data file=/tmp/global/nyoungblut/LLMGAG_274879977417/linclust/genes_db, database index=/tmp/global/nyoungblut/LLMGAG_274879977417/linclust/genes_db.index; Invalid database read for database data file=/tmp/global/nyoungblut/LLMGAG_274879977417/linclust/genes_db, database index=/tmp/global/nyoungblut/LLMGAG_274879977417/linclust/genes_db.index; Invalid database read for database data file=/tmp/global/nyoungblut/LLMGAG_274879977417/linclust/genes_db, database index=/tmp/global/nyoungblut/LLMGAG_274879977417/linclust/genes_db.index; getData: local id (4294967295) >= db size (184470); Invalid database read for database data file=/tmp/global/nyoungblut/LLMGAG_274879977417/linclust/genes_db",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/208#issuecomment-537552315:78,error,error,78,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/208#issuecomment-537552315,1,['error'],['error']
Availability,"Awesome! I pulled down the new commit, removed the old build directory and followed the installation instructions in the readme but run into an error ( cmake 3.7.1 and g++ v4.9). Should I remove the whole github repo for a clean installation or is this compilation error something that was introduced in the commit?; See log below. ```; [ksahlin@desmond build]$ cmake -DCMAKE_BUILD_TYPE=RELEASE -DCMAKE_INSTALL_PREFIX=. ..; -- The CXX compiler identification is GNU 4.9.2; -- Check for working CXX compiler: /usr/bin/c++; -- Check for working CXX compiler: /usr/bin/c++ -- works; -- Detecting CXX compiler ABI info; -- Detecting CXX compiler ABI info - done; -- Detecting CXX compile features; -- Detecting CXX compile features - done; -- Source Directory: /galaxy/home/ksahlin/prefix/source/MMseqs2; -- Project Directory: /galaxy/home/ksahlin/prefix/source/MMseqs2; -- Compiler is GNU ; -- ShellCheck disabled; -- Performing Test HAVE_POSIX_FADVISE; -- Performing Test HAVE_POSIX_FADVISE - Success; -- Using CPU native flags for SSE optimization: -march=native; -- Performing Test HAVE_MM_MALLOC; -- Performing Test HAVE_MM_MALLOC - Success; -- Performing Test HAVE_POSIX_MEMALIGN; -- Performing Test HAVE_POSIX_MEMALIGN - Success; -- Performing Test HAVE_AVX2_EXTENSIONS; -- Performing Test HAVE_AVX2_EXTENSIONS - Failed; -- Performing Test HAVE_AVX_EXTENSIONS; -- Performing Test HAVE_AVX_EXTENSIONS - Failed; -- Performing Test HAVE_SSE4_2_EXTENSIONS; -- Performing Test HAVE_SSE4_2_EXTENSIONS - Failed; -- Performing Test HAVE_SSE4_1_EXTENSIONS; -- Performing Test HAVE_SSE4_1_EXTENSIONS - Success; -- Performing Test HAVE_SSE3_EXTENSIONS; -- Performing Test HAVE_SSE3_EXTENSIONS - Success; -- Performing Test HAVE_SSE2_EXTENSIONS; -- Performing Test HAVE_SSE2_EXTENSIONS - Success; -- Performing Test HAVE_SSE_EXTENSIONS; -- Performing Test HAVE_SSE_EXTENSIONS - Success; -- Found SSE4.1 extensions, using flags: -march=native -msse4.1 -mfpmath=sse; -- Found ZLIB; -- Performing Test HAVE_ZLIB_C",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/111#issuecomment-418140145:18,down,down,18,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/111#issuecomment-418140145,3,"['down', 'error']","['down', 'error']"
Availability,"Based on your previous suggestion, I simply downloaded the PDB using Foldseek via the following command; `foldseek databases PDB pdb tmp `. Then I used mmseqs to filter for the tax I wanted. ; `mmseqs filtertaxseqdb pdb pdb_human --taxon-list 9606`. Were you suggesting something different from this? ; Thanks!",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/821#issuecomment-1999758919:44,down,downloaded,44,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/821#issuecomment-1999758919,2,['down'],['downloaded']
Availability,"Based on your suggestions, I have made a few little changes to the original script. In particular, I turned off `OMP_PROC_BIND` and changed the `--max-seq-len` and `--target-cov 0.95` flags. I didn't yet replace line 112-114 with cluster reassignment.; ```; #!/bin/bash -ex; [ ""$#"" -lt 2 ] && echo ""Please provide <sequenceDB> <outDir>"" && exit 1;; [ ! -f ""$1"" ] && echo ""Sequence database $1 not found!"" && exit 1;; [ -d ""$2"" ] && echo ""Output directory $2 exists already!"" && exit 1;. function abspath() {; if [ -d ""$1"" ]; then; (cd ""$1""; pwd); elif [ -f ""$1"" ]; then; if [[ $1 == */* ]]; then; echo ""$(cd ""${1%/*}""; pwd)/${1##*/}""; else; echo ""$(pwd)/$1""; fi; fi; }. RELEASE=""${3:-$(date ""+%Y_%m"")}""; SHORTRELEASE=""${4:-$(date ""+%y%m"")}"". INPUT=$1; OUTDIR=$2/$RELEASE. TMPPATH=$OUTDIR/tmp; mkdir -p $TMPPATH. OUTDIR=$(abspath $OUTDIR); TMPPATH=$(abspath $TMPPATH). PREFILTER_COMMON=""$COMMON""; PREFILTER_FRAG_PAR=""--min-ungapped-score 100 --comp-bias-corr 0 -s 1 ${PREFILTER_COMMON}""; PREFILTER1_PAR=""-c 0.9 --comp-bias-corr 1 -s 2 ${PREFILTER_COMMON}""; PREFILTER2_PAR=""-c 0.8 --comp-bias-corr 1 -s 6 ${PREFILTER_COMMON}""; ALIGNMENT_COMMON=""$COMMON -e 0.001 --max-seq-len 32768 --max-rejected 2147483647""; ALIGNMENT0_PAR=""-c 0.9 --alignment-mode 2 --min-seq-id 0.9 --comp-bias-corr 0 ${ALIGNMENT_COMMON}""; ALIGNMENT1_PAR=""-c 0.8 --alignment-mode 2 --min-seq-id 0.9 --comp-bias-corr 1 ${ALIGNMENT_COMMON}""; ALIGNMENT2_PAR=""-c 0.8 --alignment-mode 3 --min-seq-id 0.3 --comp-bias-corr 1 ${ALIGNMENT_COMMON}""; CLUSTER_FRAG_PAR=""--cluster-mode 2""; CLUSTER0_PAR=""--cluster-mode 2""; CLUSTER1_PAR=""--cluster-mode 0""; CLUSTER2_PAR=""--cluster-mode 0""; SEARCH_PAR=""$COMMON --profile --k-score 100""; CSTRANSLATE_PAR=""-x 0.3 -c 4 -A $HHLIB/data/cs219.lib -D $HHLIB/data/context_data.lib -I ca3m -f -b"". SEQUENCE_DB=""$OUTDIR/uniprot_db"". export OMP_PROC_BIND=false; mmseqs createdb ""$INPUT"" ""${SEQUENCE_DB}"". STEP=""_FRAG""; INPUT=""${SEQUENCE_DB}""; $RUNNER mmseqs prefilter ""$INPUT"" ""$INPUT"" ""$TMPPATH/pref_step$STE",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/700#issuecomment-1589819536:293,echo,echo,293,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/700#issuecomment-1589819536,5,['echo'],['echo']
Availability,"Because we don't develop the .sh script anymore and it's not up-to-date. The development is happening in the python version now. If you want to use the server - with fast response times, like our has - you need a server with ~1TB permanently committed RAM. Anything less will not work.; `colabfold_search` does not have this issue, however, it has slightly different performance pitfalls to look out for. Single query searches will remain slow, with `colabfold_search`. Our proposed workflow is to gather a few hundred to thousands of queries. Do the MSA generation stage with `colabfold_search` and then batch predict them with `colabfold_batch`. Edit: the python `colabfold_search` is also pip-installed together with `colabfold_batch`. If you installed with localcolabfold (recommended) or with pip. You will have both available.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/690#issuecomment-1495427497:822,avail,available,822,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/690#issuecomment-1495427497,1,['avail'],['available']
Availability,CN:5 DL:103MiB ETA:18s]; [#e1fc78 0.9GiB/2.7GiB(35%) CN:5 DL:103MiB ETA:17s]; [#e1fc78 1.0GiB/2.7GiB(39%) CN:5 DL:105MiB ETA:16s]; [#e1fc78 1.1GiB/2.7GiB(43%) CN:5 DL:105MiB ETA:15s]; [#e1fc78 1.2GiB/2.7GiB(46%) CN:5 DL:105MiB ETA:14s]; [#e1fc78 1.4GiB/2.7GiB(50%) CN:5 DL:105MiB ETA:13s]; [#e1fc78 1.5GiB/2.7GiB(54%) CN:5 DL:105MiB ETA:12s]; [#e1fc78 1.6GiB/2.7GiB(58%) CN:5 DL:105MiB ETA:11s]; [#e1fc78 1.7GiB/2.7GiB(61%) CN:5 DL:105MiB ETA:10s]; [#e1fc78 1.8GiB/2.7GiB(65%) CN:5 DL:106MiB ETA:9s]; [#e1fc78 1.9GiB/2.7GiB(69%) CN:5 DL:106MiB ETA:8s]; [#e1fc78 2.0GiB/2.7GiB(73%) CN:5 DL:106MiB ETA:7s]; [#e1fc78 2.1GiB/2.7GiB(77%) CN:5 DL:107MiB ETA:6s]; [#e1fc78 2.2GiB/2.7GiB(80%) CN:5 DL:107MiB ETA:5s]; [#e1fc78 2.3GiB/2.7GiB(84%) CN:5 DL:107MiB ETA:4s]; [#e1fc78 2.4GiB/2.7GiB(88%) CN:5 DL:108MiB ETA:3s]; [#e1fc78 2.5GiB/2.7GiB(92%) CN:5 DL:108MiB ETA:2s]; [#e1fc78 2.6GiB/2.7GiB(95%) CN:5 DL:108MiB ETA:1s]; [#e1fc78 2.7GiB/2.7GiB(99%) CN:1 DL:107MiB]. 10/13 10:51:26 [NOTICE] Download complete: tmp/3093587253482177683/eukaryota.tar. Download Results:; gid |stat|avg speed |path/URI; ======+====+===========+=======================================================; e1fc78|OK | 105MiB/s|tmp/3093587253482177683/eukaryota.tar. Status Legend:; (OK):download completed. 10/13 10:51:26 [NOTICE] Downloading 1 item(s). 10/13 10:51:26 [NOTICE] Download complete: tmp/3093587253482177683/viruses.tar. Download Results:; gid |stat|avg speed |path/URI; ======+====+===========+=======================================================; 0f25a5|OK | 40MiB/s|tmp/3093587253482177683/viruses.tar. Status Legend:; (OK):download completed.; tar2db tmp/3093587253482177683/bacteria.tar tmp/3093587253482177683/archea.tar tmp/3093587253482177683/eukaryota.tar tmp/3093587253482177683/viruses.tar tmp/3093587253482177683/msa --output-dbtype 11 --tar-include \.raw_alg\.faa\.gz$ --threads 64 -v 3 . [==================================Time for merging to msa: 0h 0m 0s 94ms; Time for merging to msa.lookup: 0h 0m ,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/762#issuecomment-1761245149:5451,Down,Download,5451,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/762#issuecomment-1761245149,1,['Down'],['Download']
Availability,"Can you post the output of the second run? If its still available, the output of the first run would also be very useful to track down what might be going wrong.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/160#issuecomment-461755591:56,avail,available,56,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/160#issuecomment-461755591,2,"['avail', 'down']","['available', 'down']"
Availability,Can you write down the steps you execute after the taxonomy filtering? I am not sure how to reproduce the issue.,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/676#issuecomment-1457901465:14,down,down,14,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/676#issuecomment-1457901465,1,['down'],['down']
Availability,Compiling from zip results in this `GITDIR-NOTFOUND`.; I would recommend to download MMseqs2 again (the latest release from conda or from github releases or compile from source) and try again.,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/503#issuecomment-965838444:76,down,download,76,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/503#issuecomment-965838444,1,['down'],['download']
Availability,Compression is a good hint for where to look for the problem. I'll see if I can track down whats wrong in the next few days. Thanks.,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/438#issuecomment-820762317:86,down,down,86,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/438#issuecomment-820762317,1,['down'],['down']
Availability,Could you also provide the log please? The `--max-seqs num_DB_Seq` slows down the search.,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/107#issuecomment-408819810:73,down,down,73,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/107#issuecomment-408819810,1,['down'],['down']
Availability,Could you download the binary from https://mmseqs.com/archive/113e3212c137d026e297c7540e1fcd039f6812b1/mmseqs-linux-avx2.tar.gz and rerun it with this binary? It includes Debug symbols. The backtrace should be a bit more informative.,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/394#issuecomment-762396410:10,down,download,10,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/394#issuecomment-762396410,1,['down'],['download']
Availability,"Could you give us a short description of what you want to achieve?. We do not support using MMseqs2 as a shared library, especially since we use exit() for aborting in error conditions. You probably don't want your libraries to kill your application.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/81#issuecomment-381911141:168,error,error,168,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/81#issuecomment-381911141,1,['error'],['error']
Availability,Could you list all steps you did in order you executed them and also copy paste the corresponding output on the terminal here? We fixed this issue with `result2flat` quite a while ago and it shouldn't happen in the version you downloaded.,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/429#issuecomment-809843104:227,down,downloaded,227,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/429#issuecomment-809843104,1,['down'],['downloaded']
Availability,Could you please provide a sample set to reproduce the error?,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/224#issuecomment-519295003:55,error,error,55,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/224#issuecomment-519295003,1,['error'],['error']
Availability,Could you please run `cat /proc/cpuinfo` or `lscpu` on the 64GB node? ; If you were using the binary with the wrong instruction set (e.g. AVX2 on a CPU that does not support AVX2) it should give an error message way earlier.,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/310#issuecomment-626718710:198,error,error,198,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/310#issuecomment-626718710,1,['error'],['error']
Availability,Could you please try the newest commit? Milot fixed some segmentation fault in the lca module https://github.com/soedinglab/MMseqs2/issues/212 but the fix is only in the master branch.,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/221#issuecomment-516198421:70,fault,fault,70,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/221#issuecomment-516198421,1,['fault'],['fault']
Availability,"Could you please upload some of those 500 sequences that did not find themselves?. There are primarily three reasons why they couldn't be found:. - The sequences might be locally biased, and the compositional bias correction will then get rid of them (`--comp-bias-corr 0` to disable this behavior) ; - The masking might mask out all the low complexity regions and basically mask out the whole sequence and won't be able to find anything (`--mask 0`); - The sequence identity approximation might not be good enough for the self-match, add the `-a` parameter to compute the full backtrace including the exact sequence identity. Other options you can use for trying to recover self-matches are `--exact-kmer-matching 1`, which will disable the similar k-mer generator and only use the exact k-mer for searching.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/91#issuecomment-393926958:307,mask,masking,307,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/91#issuecomment-393926958,5,"['mask', 'recover']","['mask', 'masking', 'recover']"
Availability,Could you please use the most recent version? I was not able to reproduce the error.,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/79#issuecomment-382482371:78,error,error,78,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/79#issuecomment-382482371,1,['error'],['error']
Availability,Could you post the full log please? This error invalid read error usually means some step before went wrong.,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/208#issuecomment-537566846:41,error,error,41,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/208#issuecomment-537566846,2,['error'],['error']
Availability,Could you post the output of `lscpu` running on this compute node please? It looks like your compute node does not support AVX2. Could you download the SSE41 build and try again?,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/90#issuecomment-392930624:139,down,download,139,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/90#issuecomment-392930624,1,['down'],['download']
Availability,"Could you run something like this to check if the sequence database is in someway unusual:. ```; awk 'BEGIN { min = 2^32; } $3 < min { min = $3 }; $3 > max { max = $3 } { sum = sum + $3; n = n + 1; } END { print sum/n,min,max; }' ${output}/plass_assembly_noclust.index; ```. We might have an issue with our split logic for databases larger than the available system memory. . Edit: Do the same for the offset column too please:; ```; awk 'BEGIN { min = 2^32; } $2 < min { min = $2 }; $2 > max { max = $2 } { sum = sum + $2; n = n + 1; } END { print sum/n,min,max; }' ${output}/plass_assembly_noclust.index; ```",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/208#issuecomment-497691622:349,avail,available,349,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/208#issuecomment-497691622,1,['avail'],['available']
Availability,"Could you send me your _nodes.dmp, _mapping, _names.dmp? Then I could create a fake database and check if I can reproduce the error.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/256#issuecomment-569549630:126,error,error,126,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/256#issuecomment-569549630,1,['error'],['error']
Availability,Could you try to update to the latest release and see if the error still happens? I cannot reproduce it locally.,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/427#issuecomment-804121974:61,error,error,61,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/427#issuecomment-804121974,1,['error'],['error']
Availability,"Currently still no, however I just added an environment variable to prohibit MMseqs2 to create split databases. ; If you `export MMSEQS_FORCE_MERGE=1` split databases will not be produced anymore. This might slow down some intermediate steps somewhat though. I might also build a module to merge databases when I have time.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/362#issuecomment-734828336:213,down,down,213,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/362#issuecomment-734828336,1,['down'],['down']
Availability,"Currently, I think it should crash no matter what since there is an index present that doesn't fit into RAM. The error message for that is very useless. You have to either recreate the index with a certain memory limit in mind or remove it (actually rename just the `.idx.dbtype` to something else and it won't be able to find and use it anymore, then you can name it back again later if you still need it).",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/338#issuecomment-665032064:113,error,error,113,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/338#issuecomment-665032064,1,['error'],['error']
Availability,"Dear Christoph,. This can be somewhat dangerous, since blast databases can be masked during their creation. MMseqs2 does its own masking using the TanTan masker. Masking again might degrade sensitivity. If you are sure that the original sequences are available in your blast database, then you can use a command like the following to convert a blast db to fasta:; ```; blastdbcmd -entry all -db [blast_database] -out [blast_database].fasta; ```. Then you can convert this fasta with `mmmseqs createdb` again. Best regards,. Milot",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/47#issuecomment-341402041:78,mask,masked,78,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/47#issuecomment-341402041,5,"['Mask', 'avail', 'mask']","['Masking', 'available', 'masked', 'masker', 'masking']"
Availability,"Dear Milot,. I provided all result files from previous easy-linclust of 3 billion sequences. As I understand, if you use the rep_seq based new database, the update of additional sequence will not place newer sequences to any existing clusters, is this right?. The only option seems to add newer redundant sequences to previous version of redundant sequences, create a database and start a fresh linclust session. You mentioned new versions of mmseq is now much faster, I will give it a go but do you think is there a way to extract the cluster db of my previous run where I used easy-linclust?. Please provide some useful advice as these are computationally heavy tasks. Best,. IA. --; --; Intikhab Alam, PhD. Research Scientist; Computational Bioscience Research Centre (CBRC), Building #3, Office #4328; 4700 King Abdullah University of Science and Technology (KAUST); Thuwal 23955-6900, KSA; W: http://www.kaust.edu.sa<https://webmail.kaust.edu.sa/owa/redir.aspx?C=wkduJ0ChSE-OkyUQwL9vutDH6L5Gg9EImiJ7GyYOxcPLuActd9iwo85DHDgQZup2zR1MyXCk7as.&URL=http%3a%2f%2fwww.kaust.edu.sa>; T +966 (0) 2 808-2423 F +966 (2) 802 0127; ________________________________; From: Milot Mirdita <notifications@github.com>; Sent: 08 September 2020 18:53; To: soedinglab/MMseqs2; Cc: Intikhab S. Alam; Author; Subject: Re: [soedinglab/MMseqs2] updating a near complete mmseq clustered db (#348). I think it's probably salvageable. I'll need to look over your output in detail. Another question: This was clustered using easy-linclust not using easy-cluster right? Cluster update currently will try to use the normal clustering for the sequences that cannot be assigned to an existing cluster. This will also likely be very slow (probably slower than clustering anew using linclust). We will have to build support for updating with linclust. -; You are receiving this because you authored the thread.; Reply to this email directly, view it on GitHub<https://github.com/soedinglab/MMseqs2/issues/348#issuecomment-688971058",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/348#issuecomment-689838616:295,redundant,redundant,295,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/348#issuecomment-689838616,2,['redundant'],['redundant']
Availability,"Depending on, how strict you are with the pairwise sequence identity between cluster members, I have two different answers for you. You can start with the highest sequence identity threshold (e.g. 90%) and then continue clustering that clustering down to the next lowest threshold (e.g. 50%) and then the next one (e.g. 30%). However, while that approach will be fast. When two 50% sequence identity clusters are merged into one 30% cluster. The sequence identity of the new representative with the merged members can drop below 30%. For our Uniclust databases, we solved the issue by clustering straight down to 30%, and then reusing the alignment results to also produce a 50% clustering, but the step from 90% to 30% is quite a bit slower than 90%->50%->30%:; https://github.com/soedinglab/uniclust-pipeline/blob/develop/uniclust_workflow.sh#L143",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/84#issuecomment-384807058:247,down,down,247,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/84#issuecomment-384807058,2,['down'],['down']
Availability,Do you happen to know in which of these FASTA files the error occurs? That would help me reproduce the issue.,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/763#issuecomment-2082277114:56,error,error,56,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/763#issuecomment-2082277114,1,['error'],['error']
Availability,"Do you have macports installed by chance?; Might be a conflict between it and homebrew, you should use either or, not both. (https://github.com/Homebrew/legacy-homebrew/issues/45258). Another thing that you can try to install `binutils` from homebrew, but I don't think thats it. And a second thing: Try updating your xcode to the latest available version, it might also ship a newer assembler and linker (as/ld). I think the brew gcc still uses the system assembler and linker.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/7#issuecomment-265058952:338,avail,available,338,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/7#issuecomment-265058952,1,['avail'],['available']
Availability,Do you still have the full log?. Could you show the first few lines of these files:. ```; head -n 3 tmpP/10678025033020444421/clu_tmp/1344998481088077811/input_step_redundancy*; head -n 3 tmpP/10678025033020444421/clu_tmp/1344998481088077811/pref_rescore2*; head -n 3 tmpP/10678025033020444421/clu_tmp/1344998481088077811/aln*; ```. That's a very weird error. It seems to be crashing in calculating E-values. That would only be possible if it's fed some corrupted input.,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/265#issuecomment-574644066:353,error,error,353,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/265#issuecomment-574644066,1,['error'],['error']
Availability,Does the issue also happen if you don't set that? What linux kernel version are your nodes running?; I am super surprised that linux seems to be enforcing this limit. We should be able to allocate a lot more virtual memory than physically available one.,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/338#issuecomment-741764936:239,avail,available,239,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/338#issuecomment-741764936,1,['avail'],['available']
Availability,Does this happen with the `databases` download of the uniprot or only if you call `createtaxdb` manually?. `databases` goes through a separate branch to extract taxonomic information from uniprot based databases and should not be affected.,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/871#issuecomment-2285363375:38,down,download,38,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/871#issuecomment-2285363375,1,['down'],['download']
Availability,"ER/tanshangjin/01_gene_cat/protein_cat/all_protein_merge_95.db /hwfssz1/ST_DIVERSITY/P18Z10200N0197_temp/USER/tanshangjin/01_gene_cat/protein_cat/tmp/10916148350968526968/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-id 0.95 --kmer-per-seq 21 --spaced-kmer-mode 0 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 1 -k 0 -c 0.9 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 1T --include-only-extendable 0 --ignore-multi-kmer 0 --threads 100 --compressed 0 -v 3 . kmermatcher /hwfssz1/ST_DIVERSITY/P18Z10200N0197_temp/USER/tanshangjin/01_gene_cat/protein_cat/all_protein_merge_95.db /hwfssz1/ST_DIVERSITY/P18Z10200N0197_temp/USER/tanshangjin/01_gene_cat/protein_cat/tmp/10916148350968526968/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-id 0.95 --kmer-per-seq 21 --spaced-kmer-mode 0 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 1 -k 0 -c 0.9 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 1T --include-only-extendable 0 --ignore-multi-kmer 0 --threads 100 --compressed 0 -v 3 . Database size: 773451991 type: Nucleotide. Generate k-mers list for 1 split; [=================================================================] 773.45M 1h 49m 32s 108ms. Adjusted k-mer length 18; Sort kmer 0h 0m 4s 610ms; Sort by rep. sequence 0h 0m 0s 325ms; Time for fill: 0h 0m 4s 175ms; Time for merging to pref: 0h 0m 0s 16ms; Time for processing: 2h 3m 42s 6ms; rescorediagonal /hwfssz1/ST_DIVERSITY/P18Z10200N0197_temp/USER/tanshangjin/01_gene_cat/protein_cat/all_protein_merge_95.db /hwfssz1/ST_DIVERSITY/P18Z10200N0197_temp/USER/tanshangjin/01_gene_cat/protein_cat/all_protein_merge_95.db /hwfssz1/ST_DIVERSITY/P18Z10200N0197_temp/USER/tanshangjin/01_gene_cat/protein_cat/tmp/10916148350968526968/pref /hwfssz1/ST_DIVERSITY/P18Z10200N0197_temp/USER/tanshangjin/01_gene_cat/protein_cat/tmp/109161483509685",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/365#issuecomment-713411153:1277,mask,mask,1277,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/365#issuecomment-713411153,2,['mask'],"['mask', 'mask-lower-case']"
Availability,ETA:6s]; [#156257 5.0GiB/5.7GiB(89%) CN:5 DL:111MiB ETA:5s]; [#156257 5.2GiB/5.7GiB(91%) CN:5 DL:111MiB ETA:4s]; [#156257 5.3GiB/5.7GiB(92%) CN:5 DL:111MiB ETA:3s]; [#156257 5.4GiB/5.7GiB(94%) CN:5 DL:111MiB ETA:2s]; [#156257 5.5GiB/5.7GiB(96%) CN:5 DL:111MiB ETA:1s]; [#156257 5.6GiB/5.7GiB(98%) CN:5 DL:111MiB]. 10/13 10:50:57 [NOTICE] Download complete: tmp/3093587253482177683/bacteria.tar. Download Results:; gid |stat|avg speed |path/URI; ======+====+===========+=======================================================; 156257|OK | 110MiB/s|tmp/3093587253482177683/bacteria.tar. Status Legend:; (OK):download completed. 10/13 10:50:57 [NOTICE] Downloading 1 item(s); [#8c18ae 81MiB/85MiB(95%) CN:3 DL:90MiB]. 10/13 10:50:58 [NOTICE] Download complete: tmp/3093587253482177683/archea.tar. Download Results:; gid |stat|avg speed |path/URI; ======+====+===========+=======================================================; 8c18ae|OK | 87MiB/s|tmp/3093587253482177683/archea.tar. Status Legend:; (OK):download completed. 10/13 10:50:58 [NOTICE] Downloading 1 item(s); [#e1fc78 82MiB/2.7GiB(2%) CN:5 DL:89MiB ETA:30s]; [#e1fc78 182MiB/2.7GiB(6%) CN:5 DL:95MiB ETA:27s]; [#e1fc78 283MiB/2.7GiB(10%) CN:5 DL:97MiB ETA:26s]; [#e1fc78 387MiB/2.7GiB(13%) CN:5 DL:99MiB ETA:24s]; [#e1fc78 497MiB/2.7GiB(17%) CN:5 DL:101MiB ETA:22s]; [#e1fc78 606MiB/2.7GiB(21%) CN:5 DL:103MiB ETA:21s]; [#e1fc78 709MiB/2.7GiB(25%) CN:5 DL:103MiB ETA:20s]; [#e1fc78 810MiB/2.7GiB(28%) CN:5 DL:103MiB ETA:19s]; [#e1fc78 913MiB/2.7GiB(32%) CN:5 DL:103MiB ETA:18s]; [#e1fc78 0.9GiB/2.7GiB(35%) CN:5 DL:103MiB ETA:17s]; [#e1fc78 1.0GiB/2.7GiB(39%) CN:5 DL:105MiB ETA:16s]; [#e1fc78 1.1GiB/2.7GiB(43%) CN:5 DL:105MiB ETA:15s]; [#e1fc78 1.2GiB/2.7GiB(46%) CN:5 DL:105MiB ETA:14s]; [#e1fc78 1.4GiB/2.7GiB(50%) CN:5 DL:105MiB ETA:13s]; [#e1fc78 1.5GiB/2.7GiB(54%) CN:5 DL:105MiB ETA:12s]; [#e1fc78 1.6GiB/2.7GiB(58%) CN:5 DL:105MiB ETA:11s]; [#e1fc78 1.7GiB/2.7GiB(61%) CN:5 DL:105MiB ETA:10s]; [#e1fc78 1.8GiB/2.7GiB(65%) CN:5 DL:10,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/762#issuecomment-1761245149:3953,down,download,3953,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/762#issuecomment-1761245149,1,['down'],['download']
Availability,"EXTENSIONS; -- Performing Test HAVE_AVX_EXTENSIONS - Failed; -- Performing Test HAVE_SSE4_2_EXTENSIONS; -- Performing Test HAVE_SSE4_2_EXTENSIONS - Success; -- Performing Test HAVE_SSE4_1_EXTENSIONS; -- Performing Test HAVE_SSE4_1_EXTENSIONS - Success; -- Performing Test HAVE_SSE3_EXTENSIONS; -- Performing Test HAVE_SSE3_EXTENSIONS - Success; -- Performing Test HAVE_SSE2_EXTENSIONS; -- Performing Test HAVE_SSE2_EXTENSIONS - Success; -- Performing Test HAVE_SSE_EXTENSIONS; -- Performing Test HAVE_SSE_EXTENSIONS - Success; -- Found SSE4.2 extensions, using flags: -msse4.2 -mfpmath=sse; -- Could NOT find GTest (missing: GTEST_LIBRARY GTEST_INCLUDE_DIR GTEST_MAIN_LIBRARY); -- Could NOT find GMock (missing: GMOCK_LIBRARY GMOCK_INCLUDE_DIR GMOCK_MAIN_LIBRARY); -- Compile blastp.sh to /Users/moorer/Downloads/mmseqs2/src/generatedfiles/blastp.sh.h; -- Compile blastpgp.sh to /Users/moorer/Downloads/mmseqs2/src/generatedfiles/blastpgp.sh.h; -- Compile blosum100.out to /Users/moorer/Downloads/mmseqs2/src/generatedfiles/blosum100.out.h; -- Compile blosum30.out to /Users/moorer/Downloads/mmseqs2/src/generatedfiles/blosum30.out.h; -- Compile blosum35.out to /Users/moorer/Downloads/mmseqs2/src/generatedfiles/blosum35.out.h; -- Compile blosum40.out to /Users/moorer/Downloads/mmseqs2/src/generatedfiles/blosum40.out.h; -- Compile blosum45.out to /Users/moorer/Downloads/mmseqs2/src/generatedfiles/blosum45.out.h; -- Compile blosum50.out to /Users/moorer/Downloads/mmseqs2/src/generatedfiles/blosum50.out.h; -- Compile blosum55.out to /Users/moorer/Downloads/mmseqs2/src/generatedfiles/blosum55.out.h; -- Compile blosum60.out to /Users/moorer/Downloads/mmseqs2/src/generatedfiles/blosum60.out.h; -- Compile blosum62.out to /Users/moorer/Downloads/mmseqs2/src/generatedfiles/blosum62.out.h; -- Compile blosum65.out to /Users/moorer/Downloads/mmseqs2/src/generatedfiles/blosum65.out.h; -- Compile blosum70.out to /Users/moorer/Downloads/mmseqs2/src/generatedfiles/blosum70.out.h; -- Compile blosum75",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/7#issuecomment-265028472:2443,Down,Downloads,2443,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/7#issuecomment-265028472,1,['Down'],['Downloads']
Availability,"EXTENSIONS; -- Performing Test HAVE_SSE3_EXTENSIONS - Success; -- Performing Test HAVE_SSE2_EXTENSIONS; -- Performing Test HAVE_SSE2_EXTENSIONS - Success; -- Performing Test HAVE_SSE_EXTENSIONS; -- Performing Test HAVE_SSE_EXTENSIONS - Success; -- Found SSE4.2 extensions, using flags: -msse4.2 -mfpmath=sse; -- Could NOT find GTest (missing: GTEST_LIBRARY GTEST_INCLUDE_DIR GTEST_MAIN_LIBRARY); -- Could NOT find GMock (missing: GMOCK_LIBRARY GMOCK_INCLUDE_DIR GMOCK_MAIN_LIBRARY); -- Compile blastp.sh to /Users/moorer/Downloads/mmseqs2/src/generatedfiles/blastp.sh.h; -- Compile blastpgp.sh to /Users/moorer/Downloads/mmseqs2/src/generatedfiles/blastpgp.sh.h; -- Compile blosum100.out to /Users/moorer/Downloads/mmseqs2/src/generatedfiles/blosum100.out.h; -- Compile blosum30.out to /Users/moorer/Downloads/mmseqs2/src/generatedfiles/blosum30.out.h; -- Compile blosum35.out to /Users/moorer/Downloads/mmseqs2/src/generatedfiles/blosum35.out.h; -- Compile blosum40.out to /Users/moorer/Downloads/mmseqs2/src/generatedfiles/blosum40.out.h; -- Compile blosum45.out to /Users/moorer/Downloads/mmseqs2/src/generatedfiles/blosum45.out.h; -- Compile blosum50.out to /Users/moorer/Downloads/mmseqs2/src/generatedfiles/blosum50.out.h; -- Compile blosum55.out to /Users/moorer/Downloads/mmseqs2/src/generatedfiles/blosum55.out.h; -- Compile blosum60.out to /Users/moorer/Downloads/mmseqs2/src/generatedfiles/blosum60.out.h; -- Compile blosum62.out to /Users/moorer/Downloads/mmseqs2/src/generatedfiles/blosum62.out.h; -- Compile blosum65.out to /Users/moorer/Downloads/mmseqs2/src/generatedfiles/blosum65.out.h; -- Compile blosum70.out to /Users/moorer/Downloads/mmseqs2/src/generatedfiles/blosum70.out.h; -- Compile blosum75.out to /Users/moorer/Downloads/mmseqs2/src/generatedfiles/blosum75.out.h; -- Compile blosum80.out to /Users/moorer/Downloads/mmseqs2/src/generatedfiles/blosum80.out.h; -- Compile blosum85.out to /Users/moorer/Downloads/mmseqs2/src/generatedfiles/blosum85.out.h; -- Compile blosum90.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/7#issuecomment-265028472:2726,Down,Downloads,2726,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/7#issuecomment-265028472,1,['Down'],['Downloads']
Availability,"EXTENSIONS; -- Performing Test HAVE_SSE4_1_EXTENSIONS - Success; -- Performing Test HAVE_SSE3_EXTENSIONS; -- Performing Test HAVE_SSE3_EXTENSIONS - Success; -- Performing Test HAVE_SSE2_EXTENSIONS; -- Performing Test HAVE_SSE2_EXTENSIONS - Success; -- Performing Test HAVE_SSE_EXTENSIONS; -- Performing Test HAVE_SSE_EXTENSIONS - Success; -- Found SSE4.2 extensions, using flags: -msse4.2 -mfpmath=sse; -- Could NOT find GTest (missing: GTEST_LIBRARY GTEST_INCLUDE_DIR GTEST_MAIN_LIBRARY); -- Could NOT find GMock (missing: GMOCK_LIBRARY GMOCK_INCLUDE_DIR GMOCK_MAIN_LIBRARY); -- Compile blastp.sh to /Users/moorer/Downloads/mmseqs2/src/generatedfiles/blastp.sh.h; -- Compile blastpgp.sh to /Users/moorer/Downloads/mmseqs2/src/generatedfiles/blastpgp.sh.h; -- Compile blosum100.out to /Users/moorer/Downloads/mmseqs2/src/generatedfiles/blosum100.out.h; -- Compile blosum30.out to /Users/moorer/Downloads/mmseqs2/src/generatedfiles/blosum30.out.h; -- Compile blosum35.out to /Users/moorer/Downloads/mmseqs2/src/generatedfiles/blosum35.out.h; -- Compile blosum40.out to /Users/moorer/Downloads/mmseqs2/src/generatedfiles/blosum40.out.h; -- Compile blosum45.out to /Users/moorer/Downloads/mmseqs2/src/generatedfiles/blosum45.out.h; -- Compile blosum50.out to /Users/moorer/Downloads/mmseqs2/src/generatedfiles/blosum50.out.h; -- Compile blosum55.out to /Users/moorer/Downloads/mmseqs2/src/generatedfiles/blosum55.out.h; -- Compile blosum60.out to /Users/moorer/Downloads/mmseqs2/src/generatedfiles/blosum60.out.h; -- Compile blosum62.out to /Users/moorer/Downloads/mmseqs2/src/generatedfiles/blosum62.out.h; -- Compile blosum65.out to /Users/moorer/Downloads/mmseqs2/src/generatedfiles/blosum65.out.h; -- Compile blosum70.out to /Users/moorer/Downloads/mmseqs2/src/generatedfiles/blosum70.out.h; -- Compile blosum75.out to /Users/moorer/Downloads/mmseqs2/src/generatedfiles/blosum75.out.h; -- Compile blosum80.out to /Users/moorer/Downloads/mmseqs2/src/generatedfiles/blosum80.out.h; -- Compile blosum85.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/7#issuecomment-265028472:2632,Down,Downloads,2632,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/7#issuecomment-265028472,1,['Down'],['Downloads']
Availability,"Especially for this search you might want to run the new exhaustive search mode available through the `--slice-search` parameter. MMseqs2 has a limitation on the number of reported prefiltering hits (by default 300 with `--max-seqs`). Increasing this parameter could explode the disk space use though. We developed this exhaustive search mode to be more efficient with disk use, but trading off some runtime for that.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/277#issuecomment-594067890:80,avail,available,80,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/277#issuecomment-594067890,1,['avail'],['available']
Availability,"Even when removing the temp directory, I still get a very similar error, just further down in the process:. ```; mseqs map --threads 24 -s 2 -c 0 /tmp/global2/nyoungblut/LLMGA_27929269397/map/R1-R2_db /tmp/global2/nyoungblut/LLMGA_27929269397/linclust/genes_db /tmp/global2/nyoungblut/LLMGA_27929269397/map/R1-R2_v_genes_db /tmp/global2/nyoungblut/LLMGA_27929269397/map/tmp/; Program call:; map --threads 24 -s 2 -c 0 /tmp/global2/nyoungblut/LLMGA_27929269397/map/R1-R2_db /tmp/global2/nyoungblut/LLMGA_27929269397/linclust/genes_db /tmp/global2/nyoungblut/LLMGA_27929269397/map/R1-R2_v_genes_db /tmp/global2/nyoungblut/LLMGA_27929269397/map/tmp/. MMseqs Version: 	7.4e23d; Sub Matrix 	blosum62.out; Sensitivity 	2; K-mer size 	0; K-score 	2147483647; Alphabet size 	21; Max. sequence length 	65535; Max. results per query 	300; Offset result 	0; Split DB 	0; Split mode 	2; Split Memory Limit 	0; Coverage threshold 	0; Coverage Mode 	2; Compositional bias 	0; Diagonal Scoring 	1; Exact k-mer matching 	0; Mask Residues 	0; Minimum Diagonal score 	15; Include identical Seq. Id. 	false; Spaced Kmer 	1; Preload mode 	0; Pseudo count a 	1; Pseudo count b 	1.5; Spaced k-mer pattern; Local temporary path; Threads 	24; Verbosity 	3; Rescore mode 	2; Remove hits by seq.id. and coverage 	false; E-value threshold 	0.001; Seq. Id Threshold 	0.9; Seq. Id. Mode 	0; Sort results 	1; In substitution scoring mode, performs global alignment along the diagonal	false; Min codons in orf 	1; Max codons in length 	2147483647; Max orf gaps 	2147483647; Contig start mode 	2; Contig end mode 	2; Orf start mode 	0; Forward Frames 	1,2,3; Reverse Frames 	1,2,3; Translation Table 	1; Use all table starts 	false; Offset of numeric ids 	0; Add Orf Stop 	false; Start sensitivity 	4; Search steps 	1; Sets the MPI runner; Remove Temporary Files 	false. Program call:; search /tmp/global2/nyoungblut/LLMGA_27929269397/map/R1-R2_db /tmp/global2/nyoungblut/LLMGA_27929269397/linclust/genes_db /tmp/global2/nyoungblut/L",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/144#issuecomment-448559651:66,error,error,66,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/144#issuecomment-448559651,3,"['Mask', 'down', 'error']","['Mask', 'down', 'error']"
Availability,"Everything seems to be going alright. As this is a later clustering step, fewer sequences (~12M) remain to be clustered. The memory requirement goes down with the number of sequences remaining.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/397#issuecomment-765439644:149,down,down,149,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/397#issuecomment-765439644,1,['down'],['down']
Availability,"FYI, I built the pfam profile database the same way recently (today, 1-7-2020) and get the same error/segfault. I'm also on CentOS-7 searching a protein database against the pfam profiles derived as @galicae above:. MMseqs Version: 10.6d92c; Substitution matrix nucl:nucleotide.out,aa:blosum62.out; Add backtrace false; Alignment mode 2; E-value threshold 0.001; Seq. id. threshold . tmp/1941146063176889841/searchtargetprofile.sh: line 28: 48442 Segmentation fault $RUNNER ""$MMSEQS"" prefilter ""${INPUT}"" ""${2}"" ""${TMP_PATH}/pref"" ${PREFILTER_PAR}. Error: Prefilter died",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/259#issuecomment-571879342:96,error,error,96,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/259#issuecomment-571879342,3,"['Error', 'error', 'fault']","['Error', 'error', 'fault']"
Availability,"First: both the sensitivity parameter and the iteration parameter do not do anything for nucleotide MMseqs2 searches. sensitivity is the parameter for adjusting the length of the similar k-mer lists, which are not generated for nucleotides (all substitutions have the same score, so you can't generate similar k-mers). Profile searches are also not implemented for nucleotides. However, the error is still very surprising and should not happen. Could you share the sequences with us?",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/747#issuecomment-1706726437:391,error,error,391,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/747#issuecomment-1706726437,1,['error'],['error']
Availability,"Firstly I have converted the fasta format to ffindex ; fastatoffindex old_DB.fasta old_DB; fastatoffindex new_DB.fasta new_DB; mmseq_cluster old_DB old_DB_clu tmp/ --cascaded; Above generated old_DB_clu, I have given as oldDB_clustering to mmseq_update; mmseq_update old_DB new_DB old_DB_clu new_DB_clu tmp/; The above last command throws below error.; mmseqs_update: Problem with data file. Is it empty or is another process readning it?: Invalid argument; commons/DBReader.cpp:49 ffindex_index_parse: tmp//A.index: Invalid argument",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/4#issuecomment-251365922:345,error,error,345,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/4#issuecomment-251365922,1,['error'],['error']
Availability,"Fixed, thanks a lot!. http://gwdu111.gwdg.de/~compbiol/uniclust/current_release/ works for now. The normal download server has an issue for some reason.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/32#issuecomment-304410103:107,down,download,107,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/32#issuecomment-304410103,1,['down'],['download']
Availability,"For the `nr` we have the specialized `nrtotaxmapping` module. You give it the [accession2taxid](https://ftp.ncbi.nlm.nih.gov/pub/taxonomy/accession2taxid/) files and the NR sequence database (from `createdb`) and it will create the correct `_mapping` file. It should be quite a bit cheaper than the `awk` command used in `createtaxdb` (see https://github.com/soedinglab/MMseqs2/blob/master/data/workflow/databases.sh#L415 on how it's used). For that you have to upgrade to the latest MMseqs2 release though. The latest release also has the `nr` included in the `databases` downloader script, which utilizes this module internally.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/490#issuecomment-922868395:573,down,downloader,573,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/490#issuecomment-922868395,1,['down'],['downloader']
Availability,"Fortunately, the `--spaced-kmer-pattern` does not give errors anymore. Nonetheless, using this option with `-k 5` and `--mask 0` results in the same errors",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-775784541:55,error,errors,55,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-775784541,3,"['error', 'mask']","['errors', 'mask']"
Availability,"Glad you like it! I'll fix the compile error. > Can you check if the `type_info` field you added in `Parameters.h` is needed? Is seems to be unused. You are correct, it's not used and I'll get rid of it.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/pull/209#issuecomment-497949856:39,error,error,39,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/pull/209#issuecomment-497949856,1,['error'],['error']
Availability,"Good to know. Here is the output; ```; Thread 1 ""mmseqs"" received signal SIGSEGV, Segmentation fault.; 0x00005555555c0446 in doRescorediagonal(Parameters&, DBWriter&, DBReader<unsigned int>&, unsigned long, unsigned long) [clone ._omp_fn.0] (); (gdb) bt; #0 0x00005555555c0446 in doRescorediagonal(Parameters&, DBWriter&, DBReader<unsigned int>&, unsigned long, unsigned long) [clone ._omp_fn.0] (); #1 0x00007ffff726fecf in GOMP_parallel () from /usr/lib/x86_64-linux-gnu/libgomp.so.1; #2 0x00005555555bc7de in doRescorediagonal(Parameters&, DBWriter&, DBReader<unsigned int>&, unsigned long, unsigned long) (); #3 0x00005555555c2014 in rescorediagonal(int, char const**, Command const&) (); #4 0x00005555555ac4a5 in runCommand(Command*, int, char const**) (); #5 0x000055555559dfbc in main (); (gdb); ```",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/323#issuecomment-649895137:95,fault,fault,95,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/323#issuecomment-649895137,1,['fault'],['fault']
Availability,Got this error today on r4.4xlarge and [fusion](https://seqera.io/fusion/) via Nextflow on AWS Batch. Maybe it's a filesystem thing. [command.log](https://github.com/soedinglab/MMseqs2/files/13994933/command.log); [command.sh.txt](https://github.com/soedinglab/MMseqs2/files/13994938/command.sh.txt),MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/64#issuecomment-1901172701:9,error,error,9,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/64#issuecomment-1901172701,1,['error'],['error']
Availability,"H (Time: 27s); TEST SUCCESS; GOOD; Expected: 0.237504; Actual: 0.237504. NUCLPROTTAX_SEARCH (Time: 12s); TEST SUCCESS; GOOD; Expected: from filtertaxdb: 1023 181 1265; from taxonomyreport: 1023 181 1265; Actual: from filtertaxdb: 1023 181 1265; from taxonomyreport: 1023 181 1265. EASYNUCLPROTSEARCH_TAX (Time: 26s); TEST SUCCESS; GOOD; Expected: from filtertaxdb: 3626 680 1425;; Actual: from filtertaxdb: 3626 680 1425;. DBPROFILE_INDEX (Time: 50s); TEST SUCCESS; GOOD; Expected: 0.197552; Actual: 0.197552. LINSEARCH_NUCLNUCL_TARNS_SEARCH (Time: 15s); TEST FAILED (NO REPORT). LINSEARCH_NUCLNUCL_SEARCH (Time: 20s); TEST FAILED (NO REPORT). EASY_LINSEARCH_NUCLNUCL_SEARCH_SPLIT (Time: 29s); TEST SUCCESS; GOOD; Expected: 0.108903; Actual: 0.108903. LINCLUST_UPDATE (Time: 19s); TEST SUCCESS; GOOD; Expected: 32132 24732 32132; Actual: 32132 24732 32132. EASYNUCLNUCLTAX_SEARCH (Time: 55s); TEST SUCCESS; GOOD; Expected: from taxonomyreport: 2607 243 2624; Actual: from taxonomyreport: 2607 243 2624. EXTRACTORFS (Time: 0s); TEST SUCCESS; GOOD; Expected: 0; Actual: 0. RBH (Time: 5s); TEST SUCCESS; GOOD; Expected: 10; Actual: 10. APPLY (Time: 1s); TEST SUCCESS; GOOD; Expected: 2570583; Actual: 2570583. INDEX_COMPATIBLE (Time: 7s); TEST SUCCESS; GOOD; Expected: 0; Actual: 0. FILTERDB (Time: 1s); TEST SUCCESS; GOOD; Expected: 0; Actual: 0. PREF_DB_LOAD_MODE (Time: 18s); TEST SUCCESS; GOOD; Expected: 0.0856974; Actual: 0.0856974. FILTERTAXSEQDB (Time: 1s); TEST SUCCESS; GOOD; Expected: 0,1,2 0,1,2,3,4,5 3,4,5 ; Actual: 0,1,2 0,1,2,3,4,5 3,4,5 . NOMPI_TARGET_SPLIT (Time: 8s); TEST SUCCESS; GOOD; Expected: 500; Actual: 500. NOMPI_SLICE_TECH (Time: 13s); TEST SUCCESS; GOOD; Expected: 512,256,128,64,32; Actual: 512,256,128,64,32. In what little output didn't scroll away, I see a couple of messages like this:. posix_madvise returned an error /home/bacon/MMseqs2-Regression-2b20d2ba3533b6fd5343b78398b4df4d1c2e8f87/Temp/NOMPI_SLICE_TECH/DSL_17K_SPLIT_MODE_1/tmpFolder/4754201167969432722/pref",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/460#issuecomment-868511790:3497,error,error,3497,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/460#issuecomment-868511790,1,['error'],['error']
Availability,"HDIR/queryT.mmsq.outDB $SCRATCHDIR > $SCRATCHDIR/test.log. File $SCRATCHDIR/queryT.mmsq has 10000 lines, which I guess should confirm it has 10000 sequences. . prefilter /scratch/orakov/tmp/queryT.mmsq /scratch/orakov/tmp/queryT.mmsq /scratch/orakov/tmp/9822650028334564073/pref_0 --sub-mat nucl:nucleotide.out,aa:blosum62.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -k 0 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 65535 --max-seqs 300 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 0 --diag-score 1 --exact-kmer-matching 0 --mask 0 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 64 --compressed 0 -v 3 -s 4.0 . Query database size: 313 type: Aminoacid; Estimated memory consumption: 979M; Target database size: 313 type: Aminoacid; Index table k-mer threshold: 127 at k-mer size 6 ; Index table: counting k-mers; [=================================================================] 313 0s 11ms; Index table: Masked residues: 0; Index table: fill; [=================================================================] 313 0s 11ms; Index statistics; Entries: 99064; DB size: 488 MB; Avg k-mer size: 0.001548; Top 10 k-mers; GQQVAR 4; QRAALA 3; LSGRVA 3; LGEIVD 3; RELAEE 3; LAAAVG 3; SGQQAI 3; RAVSFK 3; AIGSGK 3; ALGSGK 3; Time for index table init: 0h 0m 0s 582ms; Process prefiltering step 1 of 1. k-mer similarity threshold: 127; Starting prefiltering scores calculation (step 1 of 1); Query db start 1 to 313; Target db start 1 to 313; [=================================================================] 313 0s 95ms. 46.584655 k-mers per position; 349 DB matches per sequence; 0 overflows; 0 queries produce too much hits (truncated result); 1 sequences passed prefiltering per query sequence; 1 median result list length; 0 sequences with 0 size result lists; Time for merging to pref_0: 0h 0m 0s 219ms; Time for processing: 0h 0m 6s 996ms; align /scra",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/283#issuecomment-593615497:1212,Mask,Masked,1212,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/283#issuecomment-593615497,1,['Mask'],['Masked']
Availability,"Happy to run any additional tests you might have in mind or provide any further info. ""Running only the MMseqs2 prefilter with perf might help debugging the performance issue."" . Happy to take your code if provided, but I assume just copying out the first prefilter command printed in the log would do? E.g. `prefilter out/qdb_multi /scratch-cbe/users/juraj.ahel/db_copy/uniref30_2202_db.idx out/tmp/13555276572390281633/pref_0 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --seed-sub-mat 'aa:VTML80.out,nucl:nucleotide.out' -s 8 -k 0 --k-score seq:2147483647,prof:2147483647 --alph-size aa:21,nucl:5 --max-seq-len 65535 --max-seqs 10000 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --comp-bias-corr-scale 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-prob 0.9 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 2 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --threads 2 --compressed 0 -v 3; `. If it would be about lack of SIMD support, could I somehow see it in the runtime, whether with existing compilation or some flag that makes it crash in absence of AVX2?. I just remembered the compilation was done on the login node of the cluster, possibly there is an issue with the compute nodes. Will try and rerun cmake there.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/658#issuecomment-1397194638:791,mask,mask,791,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/658#issuecomment-1397194638,3,['mask'],"['mask', 'mask-lower-case', 'mask-prob']"
Availability,"Having problems with this currently. Normal output from mmseqs cluster is. > MMseqs Version: 	8c0c7fb86ce154b236d6fe294811de3b09850fba; > Sub Matrix 	blosum62.out; > Alphabet size 	13; > Seq. Id Threshold 	0.8; > Kmer per sequence 	20; > Mask Residues 	0; > Coverage Mode 	0; > K-mer size 	10; > Coverage threshold 	0.8; > Max. sequence length 	32000; > Shift hash 	5; > Split Memory Limit 	0; > Include only extendable	false; > Threads 	20; > Verbosity 	3; > ; > Database type: Aminoacid; > V -> I; > M -> L; > Q -> E; > T -> S; > R -> K; > Y -> F; > S -> A; > N -> D; > Reduced amino acid alphabet:; > A C D E F G H I K L P W X ; > ; > Needed memory (4160 byte) of total memory (243728993894 byte); > Process file into 1 parts; > Generate k-mers list 0; > ; > Time for fill: 0 h 0 m 0s; > Done.; > Sort kmer ... Done.; > Time for sort: 0 h 0 m 0s; > Sort by rep. sequence ... Done; > Time for sort: 0 h 0 m 0s; > Time for fill: 0 h 0 m 0s; > Time for merging files: 0 h 0 m 0 s; > Time for processing: 0 h 0 m 0s; > Rescore diagonals. However, I get the following error when there are some identical sequences:. > MMseqs Version: 	8c0c7fb86ce154b236d6fe294811de3b09850fba; > Sub Matrix 	blosum62.out; > Alphabet size 	13; > Seq. Id Threshold 	0.8; > Kmer per sequence 	20; > Mask Residues 	0; > Coverage Mode 	0; > K-mer size 	10; > Coverage threshold 	0.8; > Max. sequence length 	32000; > Shift hash 	5; > Split Memory Limit 	0; > Include only extendable	false; > Threads 	20; > Verbosity 	3; > ; > Database type: Aminoacid; > V -> I; > M -> L; > Q -> E; > T -> S; > R -> K; > Y -> F; > S -> A; > N -> D; > Reduced amino acid alphabet:; > A C D E F G H I K L P W X ; > ; > Needed memory (3200 byte) of total memory (243728993894 byte); > Process file into 1 parts; > Generate k-mers list 0; > ; > Time for fill: 0 h 0 m 0s; > Done.; > Sort kmer ... Done.; > Time for sort: 0 h 0 m 0s; > Sort by rep. sequence ... Done; > Time for sort: 0 h 0 m 0s; > ~/tmp/2230240821590219627/linclust/109119296912",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/4#issuecomment-384867282:238,Mask,Mask,238,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/4#issuecomment-384867282,1,['Mask'],['Mask']
Availability,"Having the same issue when using ""mmseqs align"". When i use the command:; ```mpirun --pernode --bind-to none mmseqs align CORDclust/ClusterDB/CLUSTERDB_step1_redundancy CORDclust/ClusterDB/CLUSTERDB_step1_redundancy CORDclust/PrefilterDB/PREFILTER_step1_prefdb CORDclust/PrefilterDB/PREFILTER_step1_aln -c 0.9 --alignment-mode 2 --min-seq-id 0.9 --comp-bias-corr 0 -e 0.001 --max-seq-len 32768 --max-rejected 2147483647```. I encounter a error:; Invalid database read for database data file=CORDclust/ClusterDB/CLUSTERDB_step1_redundancy, database index=CORDclust/ClusterDB/CLUSTERDB_step1_redundancy.index; getData: local id (4294967295) >= db size (877192). The odd thing is that when I use a small data set as input, this error does not occur when I run the same script.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/64#issuecomment-1491224304:438,error,error,438,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/64#issuecomment-1491224304,2,['error'],['error']
Availability,"Hello @milot-mirdita and @martin-steinegger . ; Sorry if it took me some time to extra testing. As Milot was suggesting the problem happens when `createindex` and `search` are not set to use the Matrix.; Following I am showing the results alignments of a proteome against itself, using different combinations of of VTML80 and blosum62 for `createindex` and `search`. . | Pair | createindex | search | count | seconds |; | ------ | ------ | ------ | ------ | ------ |; | a-a | blosum62 | blosum62 | 10205 | 17.11 |; | a-a | VTML80 | blosum62 | 13962 | 91.36 |; | a-a | VTML80 | VTML80 | 14268 | 98.56 |; | a-a | blosum62 | VTML80 | 10709 | 16.5 |; | a-a | VTML40 | VTML40 | 14032 | 105.10 |. # Same alignments without indexing. | Pair | createindex | search | count | seconds |; | ------ | ------ | ------ | ------ | ------ |; | a-a | none | VTML80 | 14268 | 69.96 |; | a-a | none | blosum62 | 10205 | 13.66 |. As you can see from the second line, the results are same as in the first line of the fist table (in which only blosum62 was used). . I guess this solves the issue, and I am happy we found the problem :) ; Nevertheless, it would be very useful to have some kind of warning or even better, error message to avoid such things to happen (unless it is not the user's decision, in which case a ""--force-submat"" parameter might be handy). . Also, as I understand, among the `BLOSUM` matrixes only `blosum62` can be set at present, while different VTML matrixes can be set. . Could you please point me to somewhere I can see which MATRIXES can be used? ; Most matrixes files are under the `data` directory, but many did not work in my tests.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/318#issuecomment-674686756:1199,error,error,1199,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/318#issuecomment-674686756,1,['error'],['error']
Availability,"Hello Milot, thanks for your prompt reply. . I did try removing the suffix from the call when I received the traceback but I made the error of also deleting the suffix in the original file, which resulted in the same traceback. Now I kept the suffix in the file and removed the suffix from the call and it worked. Cheers!",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/535#issuecomment-1040718776:134,error,error,134,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/535#issuecomment-1040718776,1,['error'],['error']
Availability,"Hello again,. I've been revisiting `mmseqs` again for taxonomic assignment, and unwittingly ran into this problem again before finding my own Github issue (the circle of life!). I was just wondering whether by now there is any advice on creating a taxdb when RAM is limited? I;m working with a pre-clustered version of the NR database that is currently not available directly through `mmseqs databases`. After the standard `createdb` command, I ran the following:. ```; mmseqs createtaxdb nr_clustered_mmseqs ~/TMP --ncbi-tax-dump ~/.taxonkit/ --tax-mapping-file /data/clustered_nr/clustered_nr_taxmapping.tsv; ```. I get output as per the OP in this issue, until the process dies with:. ```; [truncated]; Loading names file ... Done; Init RMQ ...Done; Killed; ```. I can see that the problem was most likely the RAM being exhausted (I received exit status 137). My workstation has 64GB of RAM, and accessing a server with more RAM for the creation of this database is not likely to be feasible. Thanks. p.s. in case you've missed it for any reason, I would also like to point out that the current automated download of the NR/NT fasta files from NCBI using `mmseqs databases` might not work as desired moving forwards. As noted at https://ftp.ncbi.nlm.nih.gov/blast/db/FASTA/README.txt:. ```; In April 2024, the BLAST FASTA files in this directory will no longer be; available. You can easily generate FASTA files yourself from the formatted; BLAST databases by using the BLAST utility blastdbcmd that comes with the; standalone BLAST programs. See NCBI Insights for more details; https://ncbiinsights.ncbi.nlm.nih.gov/2024/01/25/blast-fasta-unavailable-on-ftp/; ```",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/811#issuecomment-2199281561:357,avail,available,357,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/811#issuecomment-2199281561,3,"['avail', 'down']","['available', 'download']"
Availability,"Hello everyone, I have one question related to the MMseq database.; I used this command: $ mmseqs databases NR NRdb tmpDir to custom NRdb. I left the computer run overnight. In the morning, the terminal has been off. I check the result folder there are several files such as (mmseqDB, mmseqDB.dbtype, etc). I attempt to open the mmseqDB to check only Chinese characters there instead of Sequences. Does anyone faced the same issue? I guess that is an error because I can't run further analysis with that DB. Many thanks!; ![Screenshot from 2024-07-16 13-38-42](https://github.com/user-attachments/assets/d1740899-a7c1-4d24-b2ab-2c40ae375032)",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/824#issuecomment-2230011728:451,error,error,451,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/824#issuecomment-2230011728,1,['error'],['error']
Availability,"Hello! . I wanted to use also the taxonomy database, but I think in a similar situation to the one described here: ; ```; -rw-r--r-- 1 aauladell bio 0 2 oct 14:46 DB_mapping; -rw-r--r-- 1 aauladell bio 3,8M 10 set 15:25 delnodes.dmp; -rw-r--r-- 1 aauladell bio 991K 10 set 15:25 merged.dmp; -rw-r--r-- 1 aauladell bio 175M 10 set 15:25 names.dmp; -rw-r--r-- 1 aauladell bio 139M 10 set 15:25 nodes.dmp; -rw-r--r-- 1 aauladell bio 0 10 set 19:38 targetDB_mapping; -rw-r--r-- 1 aauladell bio 0 10 set 19:43 targetDB_mapping.complete; -rw-r--r-- 1 aauladell bio 2,8G 2 oct 13:33 taxidmapping; -rw-r--r-- 1 aauladell bio 43G 9 set 18:15 uniref90.fasta; -rw-r--r-- 1 aauladell bio 32G 10 set 15:17 unirefDB; -rw-r--r-- 1 aauladell bio 4 10 set 15:18 unirefDB.dbtype; -rw-r--r-- 1 aauladell bio 3,8M 10 set 19:43 unirefDB_delnodes.dmp; -rw-r--r-- 1 aauladell bio 12G 10 set 15:12 unirefDB_h; -rw-r--r-- 1 aauladell bio 4 10 set 15:13 unirefDB_h.dbtype; -rw-r--r-- 1 aauladell bio 2,3G 10 set 15:19 unirefDB_h.index; -rw-r--r-- 1 aauladell bio 2,3G 10 set 15:18 unirefDB.index; -rw-r--r-- 1 aauladell bio 2,9G 10 set 15:23 unirefDB.lookup; -rw-r--r-- 1 aauladell bio 0 2 oct 14:47 unirefDB_mapping; -rw-r--r-- 1 aauladell bio 991K 10 set 19:43 unirefDB_merged.dmp; -rw-r--r-- 1 aauladell bio 175M 10 set 19:43 unirefDB_names.dmp; -rw-r--r-- 1 aauladell bio 139M 10 set 19:43 unirefDB_nodes.dmp; ```. My `_mapping` files are empty. . I tried to use the awk code you posted below but it didn't work. My opinion is that it is maybe I haven't downloaded the proper uniprot? In my case I downloaded `uniref90.fasta` . Maybe in the wiki page the example could be started with the specific ftp for uniprot, I don't know. . mmseqs2 version 15c7762",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/222#issuecomment-537485900:1532,down,downloaded,1532,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/222#issuecomment-537485900,2,['down'],['downloaded']
Availability,"Hello! . So I had some time to look it up. From the whole fasta I sent I had only problems with a subset of sequences. Out of the 2248 sequences I obtained the result for 2164, creating the report and the `*lca.tsv` file I am interested in. So there were 84 sequences without the taxonomy. Now the error was different and I think maybe more informative. [mmseqs_test_362352_4294967294.out.txt](https://github.com/soedinglab/MMseqs2/files/6467556/mmseqs_test_362352_4294967294.out.txt); [mmseqs_test_362352_4294967294.err.txt](https://github.com/soedinglab/MMseqs2/files/6467557/mmseqs_test_362352_4294967294.err.txt). You seem to not have any error for this sequences: . [the_no_taxonomoed.txt](https://github.com/soedinglab/MMseqs2/files/6467583/the_no_taxonomoed.txt). The database version I am using is downloaded through the last release. ; Could you share the DB you were using to check if that is the problem? . Or else we can try to arrange the interactive connection :)",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/447#issuecomment-839919421:298,error,error,298,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/447#issuecomment-839919421,3,"['down', 'error']","['downloaded', 'error']"
Availability,Hello!; Same error with nucleotide sequences.,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/765#issuecomment-2042208116:13,error,error,13,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/765#issuecomment-2042208116,1,['error'],['error']
Availability,"Hello,. In order to fix this error, I removed all sequences less than 50 aa long. I also put a ""*"" at the end of each sequence in order for the multiple to be equally divisible by 3. I now get the following error; `m313131mmAlignment format is not supported! ] 0.00% 1 eta -`; `3131mmAlignment format is not supported!`; `m3131Alignment format is not supported!`; `Alignment format is not supported!`; `Alignment format is not supported!`; `39lignment format is not supported!d!`; `Alignment format is not supported!`; `Alignment format is not supported!`; `mmAlignment format is not supported!`; `39m39mmAlignment format is not supported!`; `39mAlignment format is not supported!`; `Error: Clustering step 6 died`; `Error: Search died`; ; Please advice how to proceed. Thanks. -Abhijit",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/374#issuecomment-730183914:29,error,error,29,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/374#issuecomment-730183914,4,"['Error', 'error']","['Error', 'error']"
Availability,"Hello,. Just to report that this issue keeps happening with short sequences in version `14-7e284`. Here is the log file section:; ```; Query database size: 1 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 1 type: Aminoacid; Index table k-mer threshold: 154 at k-mer size 6 ; Index table: counting k-mers; [=================================================================] 1 0s 5ms; Index table: Masked residues: 52; No k-mer could be extracted for the database OG29842_tmp/9235789383789574915/clu_tmp/8036944701986152555/input_step_redundancy.; ```. I do not know if it has been addressed previously, but I have the feeling it's due to short sequences, mine are 55-60 AAs long.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/149#issuecomment-1781102918:424,Mask,Masked,424,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/149#issuecomment-1781102918,1,['Mask'],['Masked']
Availability,"Hello,. This functionality is very useful, and am glad that it has been added. Currently, I am finding that I need to decide between whether I want the sensitivity of profile search or the ability to find alternative alignments since I receive errors when attempting to retrieve alternative alignments with more than 1 iteration of profile search. . Do you have any plans to allow profile searches to have alternative alignments as well?. Regards,; Zac.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/86#issuecomment-410515402:244,error,errors,244,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/86#issuecomment-410515402,1,['error'],['errors']
Availability,"Hello,; I cannot reproduce the issue sadly. However I also don't have the NR available right now. Could you please compile MMseqs again in debug mode:; ``; cmake -DHAVE_MPI=0 -DCMAKE_BUILD_TYPE=Debug -DCMAKE_INSTALL_PREFIX=. ..; ``; (Also paste the cmake log please). And run only the crashing prefilter with a debugger:; ``; gdb --args PATH/TO/DEBUG/bin/mmseqs prefilter mmseq-testDB /junk/databases/mmseqs/nr /root/tmp/blast/tmp/pref_4 --sub-mat blosum62.out -k 0 --k-score 2147483647 --alph-size 21 --max-seq-len 32000 --max-seqs 300 --offset-result 0 --split 0 --split-mode 2 -c 0 --comp-bias-corr 1 --diag-score 1 --mask 1 --min-ungapped-score 15 --spaced-kmer-mode 1 --threads 64 -v 3 -s 4 ; ``. Then type run to start mmseqs and when it crashes type bt for a backtrace. Please paste the backtrace here. Edit: I am downloading the NR and will try to reproduce the issue using that too.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/31#issuecomment-301061921:77,avail,available,77,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/31#issuecomment-301061921,3,"['avail', 'down', 'mask']","['available', 'downloading', 'mask']"
Availability,"Hello,; I get the same error when trying the clustering of DNA sequences extracted from prokka annotation (.ffn). the command is : . $ mmseqs easy-cluster pacbio_assembly_protein_DNA_dereplicated.ffn clusterPacbio temp --min-seq-id 0.9. The error messages are after this step : ; ""; [=================================================================] 100.00% 245.49K 0s 110ms ; Add missing connections; [=================================================================] 100.00% 245.49K 0s 7ms . Time for read in: 0h 0m 0s 279ms; there must be an error: 138172 deleted from 117856 that now is empty, but not assigned to a cluster; there must be an error: 139364 deleted from 144033 that now is empty, but not assigned to a cluster; there must be an error: 119199 deleted from 119499 that now is empty, but not assigned to a cluster; there must be an error: 119078 deleted from 137716 that now is empty, but not assigned to a cluster; there must be an error: 120853 deleted from 137082 that now is empty, but not assigned to a cluster; there must be an error: 17414 deleted from 150027 that now is empty, but not assigned to a cluster; there must be an error: 119826 deleted from 117153 that now is empty, but not assigned to a cluster; there must be an error: 117154 deleted from 119723 that now is empty, but not assigned to a cluster; "". and before Clestering step 1. Those these errors affects the quality of the clustering ? . Thanks for your time. Aline. MMseqs Version: 5b03cdff7a91206bfd5db82b5b2f23bd6c8f0813. Complete log : [log_pacbio_error.txt](https://github.com/soedinglab/MMseqs2/files/5829621/log_pacbio_error.txt). The compressed 'pacbio_assembly_protein_DNA_dereplicated.ffn' input file can be found here https://enacshare.epfl.ch/dqTYpbvUuJiCnsktFWyfN",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/363#issuecomment-762165673:23,error,error,23,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/363#issuecomment-762165673,11,['error'],"['error', 'errors']"
Availability,Here is my initial clustering update:; `mmseqs clusterupdate Uniprot_Unreviewed_Zmays /home/ec2-user/MMSeqs2/Uniprot_Unreviewed_Zmays_Tomato_Dmagna_kmer20_results/Uniprot_Unreviewed_Zmays_Tomato_Dmagna Uniprot_Unreviewed_Zmays_clu Uniprot_Unreviewed_Zmays_updated_Tomato_Daphnia_NEWMAPDB Uniprot_Unreviewed_Zmays_updated_Tomato_Daphnia_NEWCLUST_clu ./tmp`. And the tsv generation:; `mmseqs createtsv ./Uniprot_Unreviewed_Zmays_updated_Tomato_Daphnia_NEWMAPDB Uniprot_Unreviewed_Zmays_updated_Tomato_Daphnia_NEWMAPDB Uniprot_Unreviewed_Zmays_updated_Tomato_Daphnia_NEWCLUST_clu Uniprot_Unreviewed_Zmays_updated_Tomato_Daphnia_NEWCLUST_clu.tsv`. tsv error message:; ```; MMseqs Version: f3b88f27def72ac5392131b98e079930f3b087c7; first sequence as respresentative false; Target column 0; Add Full Header false. Query file is ./Uniprot_Unreviewed_Zmays_updated_Tomato_Daphnia_NEWMAPDB; Target file is Uniprot_Unreviewed_Zmays_updated_Tomato_Daphnia_NEWMAPDB; Data file is Uniprot_Unreviewed_Zmays_updated_Tomato_Daphnia_NEWCLUST_clu; Start writing file to Uniprot_Unreviewed_Zmays_updated_Tomato_Daphnia_NEWCLUST_clu.tsv; terminate called after throwing an instance of 'std::logic_error'; what(): basic_string::_S_construct null not valid; Aborted; ```,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/103#issuecomment-404865556:648,error,error,648,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/103#issuecomment-404865556,1,['error'],['error']
Availability,Here is some other person having issues with this header:; https://apple.stackexchange.com/questions/355049/compilation-error-with-mojave-error-atomic-does-not-name-a-type,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/182#issuecomment-477714556:120,error,error-with-mojave-error-atomic-does-not-name-a-type,120,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/182#issuecomment-477714556,1,['error'],['error-with-mojave-error-atomic-does-not-name-a-type']
Availability,Here is the database : https://drive.google.com/file/d/1OXsgrc5_Slkf0jGujdXocRvnxO76DI9z/view?usp=sharing. Here is the query : . https://drive.google.com/file/d/1IasJ5oDoQKSYDQsSQvto4BJWSIqCIe_z/view?usp=sharing. What technical specifications does the machine have where MMseqs2 is running?:; It should not come from the machine since another run work for different data. . It looks like the error occurs when I create an index file of the database because if I just use `createdb` without using the `createindex` is seems to work.,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/234#issuecomment-543696987:392,error,error,392,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/234#issuecomment-543696987,1,['error'],['error']
Availability,"Here you go: ; mmseqs createdb seqdump.fasta (seqdump.fasta is my original database of proteins); mkdir tmp; mmseqs cluster seqdumpDB DB_cluster tmp --min-seq-id 0.7 (after this I get the list of cluster files and they have the file name like DB_cluster.#); mmseqs createseqfiledb seqdumpDB DB_cluster DB_clu_seq. After this last command, I get this error:; MMseqs Version:	fb39ca1ee88313974f285740faa856ea68509193; Min sequences	1; Max sequences	2147483647; HH format 	false; Preload mode 	0; Threads 	8; Compressed 	0; Verbosity 	3. Input database ""seqdumpDB"" has the wrong type (Generic); Allowed input:; - Index; - Nucleotide; - Profile; - Aminoacid. Hopefully this helps; I appreciate the help!",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/429#issuecomment-809861684:350,error,error,350,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/429#issuecomment-809861684,1,['error'],['error']
Availability,"Here's the output from the ASan run:. ```; ./build/src/mmseqs result2profile \; > /ebio/abt3_scratch/nyoungblut/LLCDS_126702996474/mmseqs_tax_query/09/seqs_db \; > /ebio/abt3_scratch/nyoungblut/LLCDS_126702996474/mmseqs_tax_target/mmseqs_tax.db \; > /ebio/abt3_scratch/nyoungblut/LLCDS_126702996474/mmseqs_tax/09/TMP/1355100225373504351/tmp_hsp1/9650299475897910544/aln_0 \; > /ebio/abt3_scratch/nyoungblut/LLCDS_126702996474/mmseqs_tax/09/TMP/1355100225373504351/tmp_hsp1/9650299475897910544/profile_0 \; > --sub-mat nucl:nucleotide.out,aa:blosum62.out -e 1e-05 --mask-profile 1 --e-profile 0.1 --comp-bias-corr 1 --wg 0 --allow-deletion 0 \; > --filter-msa 1 --max-seq-id 0.9 --qid 0 --qsc -20 --cov 0 --diff 1000 --pca 0 --pcb 1.5 --db-load-mode 0 --gap-open nucl:5,aa:11 \; > --gap-extend nucl:2,aa:1 --threads 8 --compressed 0 -v 3; result2profile /ebio/abt3_scratch/nyoungblut/LLCDS_126702996474/mmseqs_tax_query/09/seqs_db /ebio/abt3_scratch/nyoungblut/LLCDS_126702996474/mmseqs_tax_target/mmseqs_tax.db /ebio/abt3_scratch/nyoungblut/LLCDS_126702996474/mmseqs_tax/09/TMP/1355100225373504351/tmp_hsp1/9650299475897910544/aln_0 /ebio/abt3_scratch/nyoungblut/LLCDS_126702996474/mmseqs_tax/09/TMP/1355100225373504351/tmp_hsp1/9650299475897910544/profile_0 --sub-mat nucl:nucleotide.out,aa:blosum62.out -e 1e-05 --mask-profile 1 --e-profile 0.1 --comp-bias-corr 1 --wg 0 --allow-deletion 0 --filter-msa 1 --max-seq-id 0.9 --qid 0 --qsc -20 --cov 0 --diff 1000 --pca 0 --pcb 1.5 --db-load-mode 0 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --threads 8 --compressed 0 -v 3. MMseqs Version: 	a6cab565c98376623e82c3a04d186219d4c2f10c; Substitution matrix 	nucl:nucleotide.out,aa:blosum62.out; E-value threshold 	1e-05; Mask profile 	1; Profile E-value threshold 	1e-05; Compositional bias 	1; Global sequence weighting 	false; Allow deletions 	false; Filter MSA 	1; Maximum seq. id. threshold	0.9; Minimum seq. id. 	0; Minimum score per column 	-20; Minimum coverage 	0; Select N most diverse seqs	",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/432#issuecomment-814682245:565,mask,mask-profile,565,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/432#issuecomment-814682245,1,['mask'],['mask-profile']
Availability,Here's the reproducible example: [reprod_example.tar.gz](https://github.com/soedinglab/MMseqs2/files/4995028/reprod_example.tar.gz). I ran the following on it:. ```; mmseqs clusterupdate --threads 12 genes_db all_genes/genes_db clusters_db out_db clusters_out_db tmp; ```. ...and got the error:. ```; [...]; Clustering step 1; [=================================================================] 100.00% 6 0s 0ms; Clustering step 2; [=================================================================] 100.00% 6 0s 5ms; Clustering step 3; [=================================================================] 100.00% 6 0s 6ms; Clustering step 4; [=================================================================] 100.00% 6 0s 9ms; Write merged clustering; [=================================================================] 100.00% 6 0s 13ms; Time for merging to newClusters: 0h 0m 0s 5ms; Time for processing: 0h 0m 0s 25ms; ===================================================; ==== Merge the updated clustering together with ===; ===== the new clusters ======; ===================================================; concatdbs /ebio/abt3_projects/software/dev/Struo2/db_update/tmp/reprod_example/tmp/3735461810384044110/updatedClust /ebio/abt3_projects/software/dev/Struo2/db_update/tmp/reprod_example/tmp/3735461810384044110/newClusters /ebio/abt3_projects/software/dev/Struo2/db_update/tmp/reprod_example/clusters_out_db --preserve-keys. No datafile could be found for /ebio/abt3_projects/software/dev/Struo2/db_update/tmp/reprod_example/tmp/3735461810384044110/updatedClust!; Error: Dbconcat died; ```,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/333#issuecomment-665656135:288,error,error,288,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/333#issuecomment-665656135,2,"['Error', 'error']","['Error', 'error']"
Availability,"Hi . thanks for reporting this issues. Could you please provide the output of MMseqs2 and the how you called it?. I tried to reproduce Unexpected Behavior 1 by using this workflow. ```; mmseqs createdb test.fasta test; mmseqs search test test res /tmp/res/ -a; mmseqs convertalis test test res res.tsv; ```. The output is . ```. 0000_A 0000_A 1.000 25 26 0 1 26 1 26 9.85E-14 54; 0000_A 0002_A 1.000 25 26 0 1 26 1 26 9.85E-14 54; 0000_A 0001_A 1.000 25 26 0 1 26 1 26 9.85E-14 54; 0001_A 0001_A 1.000 25 26 0 1 26 1 26 9.85E-14 54; 0001_A 0000_A 1.000 25 26 0 1 26 1 26 9.85E-14 54; 0001_A 0002_A 1.000 25 26 0 1 26 1 26 9.85E-14 54; 0002_A 0002_A 1.000 25 26 0 1 26 1 26 9.85E-14 54; 0002_A 0000_A 1.000 25 26 0 1 26 1 26 9.85E-14 54; 0002_A 0001_A 1.000 25 26 0 1 26 1 26 9.85E-14 54; ```. Unexpected Behavior 3:; There is a sequence length limitation in MMseqs2. With 6-mer spaced it needs at least 13 residues to detect a hit, w/o spacing just 12.; I can run this example 3 without any error message.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/12#issuecomment-275014229:991,error,error,991,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/12#issuecomment-275014229,1,['error'],['error']
Availability,"Hi @ahof1704 ,; ```convertalis``` uses very little resources. I doubt this issue is a memory issue.; Actually, error messages in MMSeqs2 are quite uninformative. In my experience, if you get a 'Killed' message in a case where memory is surely involved, it doesn't mean that another 'Killed' means the same.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/829#issuecomment-2058366692:111,error,error,111,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/829#issuecomment-2058366692,1,['error'],['error']
Availability,"Hi @martin-steinegger ,; many thanks for the quick reply. Were you able to find these sequences against themselves in a full search against Uniref90 or did you perform a search of these sequences against a DB made of only these 500 sequences ? . In a search against the full Uniref90 we are not able to find the real best hit for many of these 500 sequences, which look like normal sequences for the majority and not corner cases like these 4 ones. Even if we turn off masking and bias correction the improvement seems very limited and for this group of 500 sequences we retrieve results that are not very close to the expected best hit (e.g. we see top results having 70%-75% identity).",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/91#issuecomment-394417327:469,mask,masking,469,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/91#issuecomment-394417327,1,['mask'],['masking']
Availability,"Hi @martin-steinegger . Thanks for the notice. I got a different error; ```; Reading context library for pseudocounts from context_data.lib ...; Reading context library for pseudocounts from context_data.lib ...; Reading context library for pseudocounts from context_data.lib ...; Reading context library for pseudocounts from context_data.lib ...; Reading abstract state alphabet from cs219.lib ...; Reading abstract state alphabet from cs219.lib ...; Reading abstract state alphabet from cs219.lib ...; Reading abstract state alphabet from cs219.lib ...; --------------------------------------------------------------------------; Primary job terminated normally, but 1 process returned; a non-zero exit code. Per user-direction, the job has been aborted.; --------------------------------------------------------------------------; --------------------------------------------------------------------------; mpirun noticed that process rank 0 with PID 0 on node haldane exited on signal 11 (Segmentation fault).; --------------------------------------------------------------------------. ```. It failed in the last step. ```; mpirun -np 4 cstranslate -i subset.MSA_ca3m.ffdata -o subset.MSA_cs219 -A /home/linuxbrew/anaconda3/data/cs219.lib -D /home/linuxbrew/anaconda3/data/context_data.lib -x 0.4 -c 4 -I ca3m; ```. The complete steps I used are described in this script. ```; #!/usr/bin/env bash. ## define files and parameters here; ## sequence file name like ""NAME.fa"" use only the base name NAME and the script will add the ""*.fa"" grob; BASE=""subset""; HH_CONTEXT_DATA=""/home/linuxbrew/anaconda3/data/context_data.lib""; HH_LIB=""/home/linuxbrew/anaconda3/data/cs219.lib""; THREADS=4; SENSITIVITY=7.5; IDENTITY=0; COVERAGE=0.8; EVALUE=0.00001. CLU_MODE=1. FILE=""${BASE}.fa""; MMSEQDB=""${BASE}DB""; MMSEQPREF=""${BASE}PREFILTER""; MMSEQALN=""${BASE}ALN""; MMSEQCLU=""${BASE}CLU""; MMSEQMSA=""${BASE}MSA""; FILELOG=""job.log"". echo '#:: CREATEDB' &>> ${FILELOG} ;; mmseqs createdb ${FILE} ${MMSEQDB} &>> ${FI",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/174#issuecomment-492826081:65,error,error,65,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/174#issuecomment-492826081,2,"['error', 'fault']","['error', 'fault']"
Availability,"Hi @martin-steinegger, I've been getting this exact same error, not sure what could be happening. I am using the latest version of mmseqs2 ([`14-7e284`](https://github.com/soedinglab/MMseqs2/releases/tag/14-7e284)). What other information could I provide to help debug?. Thank you,; Vini",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/258#issuecomment-1581777454:57,error,error,57,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/258#issuecomment-1581777454,1,['error'],['error']
Availability,"Hi @martin-steinegger,; I'm getting a similar (though not identical) error while trying to run indexdb on a nucleotide database that I would like to search repeatedly. ### Commands to reproduce:; ```; mmseqs createdb target_sequences.fa target_sequencesDB. #The 'target_sequences.fa' contains 67,880 nucleotide fasta records, with lengths ranging from 987 bp to 12,136 bp. mmseqs createindex target_sequencesDB tmp --spaced-kmer-mode 0 -k 0 -s 7.5 --search-type 3. #I also tried to run the createindex with the parameters --max-seq-len 15000 and --mask 0 and received similar errors to the ones showed below.; ```. ### MMseqs Output (for bugs); Createdb works fine, but indexdb crashes. These are the last few lines of the output:. splitsequence target_sequencesDB tmp/12611708828474015781/nucl_split_seq --max-seq-len 10000 --sequence-overlap 0 --sequence-split-mode 1 --create-lookup 0 --threads 64 --compressed 0 -v 3. [=================================================================] 67.68K 0s 28ms; Time for merging to nucl_split_seq_h: 0h 0m 0s 59ms; Time for merging to nucl_split_seq: 0h 0m 0s 49ms; Time for processing: 0h 0m 0s 257ms; indexdb tmp/12611708828474015781/nucl_split_seq target_sequencesDB --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -k 0 --alph-size nucl:5,aa:21 --comp-bias-corr 1 --max-seq-len 10000 --max-seqs 300 --mask 1 --mask-lower-case 0 --spaced-kmer-mode 0 -s 7.5 --k-score 2147483647 --check-compatible 0 --search-type 3 --split 0 --split-memory-limit 0 -v 3 --threads 64. Estimated memory consumption: 1G; Write VERSION (0); Write META (1); Write SCOREMATRIX3MER (4); Write SCOREMATRIX2MER (3); Write SCOREMATRIXNAME (2); Write SPACEDPATTERN (23); Write DBR1INDEX (5); Write DBR1DATA (6); Write DBR2INDEX (7); Write DBR2DATA (8); Write HDR1INDEX (18); Write HDR1DATA (19); Write HDR2INDEX (20); Write HDR2DATA (21); Write GENERATOR (22); Index table: counting k-mers; [=================================================================] 67.72K 1s 204ms; Index ",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/149#issuecomment-1129947528:69,error,error,69,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/149#issuecomment-1129947528,3,"['error', 'mask']","['error', 'errors', 'mask']"
Availability,"Hi @martin-steinegger; Hi @elileka ; splitting it manually works as expected. In our case, we also had to specify `--local-tmp` as it was giving the following error during the prefiltering: `Query sequence type not implemented!`",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/198#issuecomment-488036953:159,error,error,159,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/198#issuecomment-488036953,1,['error'],['error']
Availability,"Hi @milot-mirdita ,. Thank you, I installed the mpi version, but I used just the normal mode, let me try your advice.; And, I also get an another error:; /opt/gridengine/default/spool/cngb-compute-e05-9/job_scripts/6073613: line 1: /MMseqs2/build/bin/mmseqs: Unknown error 521; Do you have any idea about this **unknown error 521**?",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/469#issuecomment-876580228:146,error,error,146,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/469#issuecomment-876580228,3,['error'],['error']
Availability,"Hi @milot-mirdita ,; thanks for the reply, we are still testing the different options, for the moment we have seen a small improvement adding these parameters (e.g. we are able to find exact matches for 10-15 more sequences). . I have put online the almost 500 sequences for which we completely miss the exact match against themselves. You can download the Fasta file from here: https://www.dropbox.com/s/jf88389zuj2nddn/missed_exact_matches_mmseqs2.fasta.gz?dl=0. These are part of the UniRef90 2018_04 release.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/91#issuecomment-394364168:344,down,download,344,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/91#issuecomment-394364168,1,['down'],['download']
Availability,"Hi @milot-mirdita . I did:; ```; # download the NCBI NR; mmseqs databases NR nr tmp; # Create index; mmseqs createindex nr tmp; # Create linsearch index; mmseqs createlinindex nr tmp; ```. Perhaps I checked again, somehow the process has failed then I runner again the `createlinindex` and it created an index with `*.linidx`. Sorry, my mistake. Thanks",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/306#issuecomment-624790273:35,down,download,35,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/306#issuecomment-624790273,1,['down'],['download']
Availability,"Hi @milot-mirdita ; Thank you for your helpful reply, I change the node to run MMseqs2, and now, there is no ""core dumped"" problem. But, a new error exists:; I still run many jobs parallelly, and I assigned the tmp directory for each job (mmseqs search -a -s 7 --num-iterations 2 --search-type 2 sample/sample.DB DB/segmentNucDB sample/sample.result sample/sample.tmp), but some of jobs failed with the following error:. **A call to mkdir was unable to create the desired directory:. Directory: /tmp/6072204.1.st.q/openmpi-sessions-36903@cngb-compute-e04-2_0; Error: No space left on device. Please check to ensure you have adequate permissions to perform; the desired operation.**. It's strange that, I assigned the tmp directory, why MMseqs2 will mkdir a directory in the root diretory /tmp, is it still related to my compute node?. Looking forward to your reply",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/469#issuecomment-876341936:143,error,error,143,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/469#issuecomment-876341936,3,"['Error', 'error']","['Error', 'error']"
Availability,"Hi @milot-mirdita ; finally, we got our hands on the `filterresult`, and we have a couple of questions about how to proceed after the filtering.; After running:; ```; mmseqs filterresult seqDB seqDB cluDB cluDB-filt --threads 28; ```; we got few alignment DBs, the index and dbtype files. Looking at the alignment DB files, it seems that they have the cluster DB format, and the number of entries has decreased substantially. Any suggestions on converting the output of `filterresult` to a cluster DB we can use for updating? Here you can get the DB we are trying to slim down https://ndownloader.figshare.com/files/23066651. Many thanks!; Antonio",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/316#issuecomment-797630405:572,down,down,572,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/316#issuecomment-797630405,1,['down'],['down']
Availability,"Hi @milot-mirdita, @sanyalab,. > Maybe it works if you explicitly also add the conda-forge channel:; > ; > ```; > conda install -c conda-forge -c bioconda mmseqs2; > ```. Yes, this is exactly what is needed. Ideally, one would have the channel configuration set as described in https://bioconda.github.io/user/install.html#set-up-channels. > Your kernel/libc versions are very old. I am surprised that conda runs at all. We (Bioconda and conda-forge) currently support CentOS 6 (i.e., glibc 2.12, Linux 2.6.32 (w/ RHEL patches)) as the oldest supported system. We'll move to CentOS 7 in the future, but had/needed to delay that move because some of our users still use CentOS/RHEL 6. Due to the CentOS 8 Linux <> CentOS 8 Stream debacle this move has been delayed further.; (Read: At some point, maybe in half a year or so (no date set yet), Bioconda/conda-forge may build packages that would require you, @sanyalab, to run on an updated system.). > These error messages are thrown by MMseqs2 dependencies that are provided by conda-forge (libgomp/libstdc++), they require a newer glibc. The libstdc++/libgomp didn't come from `conda-forge` but most likely from `defaults`/`pkgs/main` which have packages provided by Anaconda. Anaconda started to compile against CentOS 7 (i.e., glibc 2.17) at some point (but in the meantime they also noticed customers still rely on CentOS 6). In any case, using `-c conda-forge -c bioconda` (or having those two in the Conda configuration beforehand) will yield glibc 2.12 compatible libstdc++/libgomp from `conda-forge`. ----; Overall, this isn't and upstream MMseqs2 issue but purely downstream and can be remedied by using the Conda channel order recommended in the Bioconda docs. Cheers,; Marcel",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/461#issuecomment-879787999:956,error,error,956,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/461#issuecomment-879787999,2,"['down', 'error']","['downstream', 'error']"
Availability,"Hi @milot-mirdita, thanks! I updated the mmseqs to the latest version and set the --split-memory-limit parameter to 250G, this time I didn't get that error, but it threw me another error:. ```. Not enough memory to process at once need to split; [=================================================================tmp/2319642838547372155/clu_tmp/15550839581876067830/linclust.sh: line 26: 344 Killed $RUNNER ""$MMSEQS"" kmermatcher ""$INPUT"" ""${TMP_PATH}/pref"" ${KMERMATCHER_PAR}; Error: kmermatcher died; Error: Search died; finished; slurmstepd: error: Detected 1 oom-kill event(s) in step 30119673.batch cgroup. Some of your processes may have been killed by the cgroup out-of-memory handler. ```; The command I'm using is like this:. `mmseqs easy-linclust ${sample}_R2.fastq.gz $OUT tmp -c 0.95 --split-memory-limit 250G`. Could you give me some help on that?. Thanks so much!",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/427#issuecomment-805847611:150,error,error,150,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/427#issuecomment-805847611,5,"['Error', 'error']","['Error', 'error']"
Availability,"Hi @milot-mirdita,. Actually I'm not using the easy-taxonomy module. This is what I used in my previous script:; ```; /home/leranwang/mmseqs/bin/mmseqs lca $DB $OUT/taxonomyResult $OUT/lcaDB --tax-lineage true \; --lca-ranks ""superkingdom:phylum:class:order:family:genus:species"";; ```. And here is what I modified:. ```; /home/leranwang/mmseqs/bin/mmseqs majoritylca $DB $OUT/taxonomyResult $OUT/lcaDB --tax-lineage true \; --lca-ranks ""superkingdom:phylum:class:order:family:genus:species"";; ```. So as you can see, I just switched from ""lca"" to ""majoritylca"", then I got this error. I was wondering if there were other modifications in my previous steps required before using this majoritylca module? . For our reference, the modules I have been using in my script are (in order):. mmseqs createdb; mmseqs taxonomy; mmseqs convertalis; mmseqs majoritylca; mmseqs createtsv; mmseqs taxonomyreport. Thank you!; Leran",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/387#issuecomment-759543900:579,error,error,579,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/387#issuecomment-759543900,1,['error'],['error']
Availability,"Hi @milot-mirdita,. I have successfully installed the precompiled version of the latest mmseqs. But when I run my script It keeps throwing me an error says:. ```; Input database ""./results/contigs/mmseqs_aa_out/taxonomyResult"" is wrong!; Current input: Taxonomy. Allowed input: Alignment; ```. when I switch to the old version, I don't see this error. . Is there any advice on that?. Thanks very much!!; Leran",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/387#issuecomment-756416360:145,error,error,145,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/387#issuecomment-756416360,2,['error'],['error']
Availability,"Hi @silvainp @milot-mirdita @martin-steinegger !. I came across this old issue while googling because I encountered pretty much the same problem and this didn't seem to have been resolved yet. I can confirm that I got very similar outputs to @silvainp in a clustering problem I've been working on. The issue persisted with the most recent release (15) of mmseqs2. After some I found that there was a (silent) issue in my input FAA files: they were corrupted due to a few binary characters that were accidentally introduced in an upstream step. **Once I manually cleared all binary characters, clustering worked as intended**. This may have been the issue here as well, although ofc hard to tell from a distance. What's important imo is that the `createdb` step did _not_ catch these and threw no error/warning. @milot-mirdita I don't want to tinker with the code for a pull request, but I'd suggest building in a check to validate the input fasta files in the db-building step. Best regards,. Sebastian",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/710#issuecomment-2425959129:796,error,error,796,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/710#issuecomment-2425959129,2,['error'],['error']
Availability,"Hi @zzsunday, i'm facing the same error. did you manage to figure out the solution?",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/697#issuecomment-1834394183:34,error,error,34,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/697#issuecomment-1834394183,1,['error'],['error']
Availability,"Hi Ana,. Thanks for your reply.; Best,; Ming. ------------------&nbsp;原始邮件&nbsp;------------------; 发件人: ""soedinglab/MMseqs2"" ***@***.***&gt;;; 发送时间:&nbsp;2023年8月3日(星期四) 晚上10:21; ***@***.***&gt;;; ***@***.******@***.***&gt;;; 主题:&nbsp;Re: [soedinglab/MMseqs2] the website to download ssu.fna for GTDB doesn't work (Issue #548). Hi, ; ; I’m sorry but I can’t help. I couldn't use it at the end because of that problem. ; Best, ; Ana ; ; &gt; On 3 Aug 2023, at 08:11, csm276 ***@***.*** ***@***.***&gt;&gt; wrote: ; &gt; ; &gt; ; &gt; Hi, I got the same problem. When I run the commands in [Create a seqTaxDB for GTDB] I got this error: mmseqs createdb ssu.fna ssu130.102.99.4 Connecting to data.ace.uq.edu.au <http://data.ace.uq.edu.au/&gt; (data.ace.uq.edu.au <http://data.ace.uq.edu.au/&gt;)|130.102.99.4|:443... connected. HTTP request sent, awaiting response... 404 Not Found 2022-04-01 08:59:20 ERROR 404: Not Found. ... ... awk -F'[loc' '{ print $1}' ssu.fna | awk ""$buildNCBITax"" awk: fatal: cannot open file `ssu.fna' for reading (No such file or directory) ; &gt; ; &gt; Any help on this will be appreciated ; &gt; ; &gt; Hi， ; &gt; How did you resolve this issue at the time, until today I have also encountered this problem and this site is not working ; &gt; https://data.ace.uq.edu.au/public/gtdb/data/releases/latest/ssu.fna <https://data.ace.uq.edu.au/public/gtdb/data/releases/latest/ssu.fna&gt; ; &gt; Can you give me some advice? Thanks a lot. ; &gt; ; &gt; — ; &gt; Reply to this email directly, view it on GitHub <https://github.com/soedinglab/MMseqs2/issues/548#issuecomment-1663347073&gt;, or unsubscribe <https://github.com/notifications/unsubscribe-auth/APMXFJCAL7ML33M3S4GNM33XTM6K3ANCNFSM5QJH4VIA&gt;. ; &gt; You are receiving this because you commented. ; &gt; ; ; ; ; --------------------------------------------- ; Ana María Cabello Pérez, PhD ; ; Centro Oceanográfico de Málaga (IEO-CSIC) ; Instituto Español de Oceanografía ; Puerto Pesquero s/n ; 29640 Fuengirola, Málag",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/548#issuecomment-1665018131:275,down,download,275,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/548#issuecomment-1665018131,3,"['ERROR', 'down', 'error']","['ERROR', 'download', 'error']"
Availability,"Hi Christoph,. We removed split index support from createindex a few months ago. The implementation was not really mature enough. If you want to use a precomputed index table, it currently has to fit into memory completely. . We wanted to reimplement that feature soonish (for our upcoming webserver manuscript), though i cannot give you a timeline for that. We should definitely give a good error message though, if createindex is going to fail anyway. Running your searches without a precomputed index will work. Also for sequence target databases, -s will not affect the required memory. For profile databases, it does (quite dramatically so). Best regards,; Milot",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/49#issuecomment-342828925:392,error,error,392,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/49#issuecomment-342828925,1,['error'],['error']
Availability,"Hi Clovis, I pulled the most recent version and recompiled it. ; Running the call; ```; mmseqs clusterupdate DB DB_dup clu1 DB_mapped clu3 tmp3 --min-seq-id 0.9 --cluster-mode 1; ```. resulted in the following error message:; ```; Please recreate your database or add a .dbtype file to your sequence/profile database.; Error: Search died; ```. ""DB.dbtype"" and ""DB_dup.dbtype"" were both present in the directory, but ""DB_mapped.dbtype"" was not, so I duplicated and renamed the ""DB_dup.dbtype"" file to ""DB_mapped.dbtype"", but that did not solve the issue. I don't have the option to reopen the issue, but that may not be necessary if this is an easily-fixed problem. Thanks",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/53#issuecomment-356634146:210,error,error,210,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/53#issuecomment-356634146,2,"['Error', 'error']","['Error', 'error']"
Availability,"Hi George,. I think the issue is that the internal MMseqs2 profile format has changed, the phrogs database needs to be rebuilt with the newest MMseqs2 version. I think we can download the MSA and convert them directly to a profile database within the `databases` module. . How/where do you download the phrogs in phrokka?",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/625#issuecomment-1288026735:175,down,download,175,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/625#issuecomment-1288026735,2,['down'],['download']
Availability,"Hi Joel,. You are running into several usability traps of MMseqs2, that we are currently thinking about how to solve. 1) The prefiltering will stop after --max-seqs sequences. Without any further filtering cut-offs (e.g. --min-ungapped-score) the prefiltering might miss the best hits. Raise the value for this parameter to something like 10000. 2) The default alignment mode uses a sequence identity estimation based on the score per column:; https://github.com/soedinglab/MMseqs2/wiki#how-is-mmseqs-computing-the-sequence-identity. The real sequence identity is not computed in this case. You can pass either pass --alignment-mode 3 or -a to compute the real sequence identity (and the full backtrace in the case of -a). Without the real sequence identity, it is very difficult to distinguish between a 99% and a 100% match. 3) Very short query sequences might not be able to gather enough statistical significance to pass the alignment. Raise the e-value cut-off (-e) for that. 4) Both masking (--mask) and composition bias correction (--comp-bias-corr) can cause a hit to not recognize itself. . Best regards,. Milot",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/48#issuecomment-342108067:989,mask,masking,989,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/48#issuecomment-342108067,4,['mask'],"['mask', 'masking']"
Availability,"Hi Martin, hi Milot,. I am currently playing around with the cascaded clustering of the SIMAP sequences. So far I failed in really modifying the sensitivity of the clustering. I could not use the --alph-size and --sub-mat parameters, get always errors like ""Could not find statistics for gapopen 11 and gapextend 1"". Is it impossible to combine --alph-size and --sub-mat with --cascaded, as in the example below?; ... --cascaded -s 7.5 --alph-size 11 --sub-mat blosum45.out -k 7 ...; (the matrix file blosum45.out was downloaded from the mmseqs2 repo). I've tried to figure this out with the manual, but could not find out what I did wrong. Thanks for your help,; best wishes; Thomas. > Am 03.02.2017 um 15:09 schrieb Rattei Thomas <thomas.rattei@univie.ac.at>:; > ; > Hi Martin,; > ; > I just recognized that mmseqs cluster only has a diag-score option, which already defaults to 1. No diag-mode option there. Should I change the diag-score option or is diag-mode a compile option that I should modify?; > ; > Best,; > Thomas; > ; > ; >> Am 03.02.2017 um 15:00 schrieb Rattei Thomas <thomas.rattei@univie.ac.at>:; >> ; >> Hi Martin,; >> ; >> thanks for the quick advice. Will now use --diag-mode 1 and will inform you if there are further issues.; >> ; >> Best,; >> Thomas; >> ; >> ; >>> Am 03.02.2017 um 13:14 schrieb Martin Steinegger <notifications@github.com>:; >>> ; >>> Hi Thomas,; >>> ; >>> thank you for reporting this bug. There is indeed an issues with using '--diag-mode 0', which is used automatically at the first cascaded clustering step. I temporarily switched it to '--diag-mode 1'. Diagonal mode 0 is turning off the ungapped alignment stage and changes the score to a probability over the sum of all double diagonal kmer matches. The change to '--diag-mode 1' will not affect the quality of the clustering.; >>> ; >>> I will fix the '--diag-mode 0' in the next days.; >>> ; >>> Best regrads,; >>> Martin; >>> ; >>> —; >>> You are receiving this because you authored the thread.; >>>",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/15#issuecomment-279686978:245,error,errors,245,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/15#issuecomment-279686978,2,"['down', 'error']","['downloaded', 'errors']"
Availability,"Hi Martin....the help files for colabfold_search says ""query doesn't support complexes yet"". colabfold_search works perfectly for me with a single sequence or a list of sequences. However when I try to run colabfold_search with a complex i.e.; `>trastuzumab; DIQMTQSPSSLSASVGDRVTITCRASQDVNTAVAWYQQKPGKAPKLLIYSASFLYSGVPSRFSGSRSGTDFTLTISSLQPEDFATYYCQQHYTTPPTFGQGTKVEIK:EVQLVESGGGLVQPGGSLRLSCAASGFNIKDTYIHWVRQAPGKGLEWVARIYPTNGYTRYADSVKGRFTISADTSKNTAYLQMNSLRAEDTAVYYCSRWGGDGFYAMDYWGQGTLVTVSS`; I get the Traceback error:; ``..../site-packages/colabfold/mmseqs/search.py, line 472 in; with args.base.joinpath(f""{id.paried.a3m"").open(""r"") as f:``. and then ; `FileNotFoundError: [Errno2] No such file or directory: 'msas/1.paired.a3m'`. can you help me to understand whether or not colab_search can take multimers as input and whether or not I am doing something incorrectly? Thanks!. Drew",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/521#issuecomment-1087105101:510,error,error,510,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/521#issuecomment-1087105101,1,['error'],['error']
Availability,"Hi Martin; ffindex_apply is awesome, I've been playing around and it is quite straight forward to plug it in our pipeline avoiding the generation of the files. Just for reference, a quick example on how to perform a MSA for each cluster with >= 10 members:; ```; #!/bin/bash. SEQS=$(perl -ne 'print $_' ""${1}""); if [ ""$(echo ""${SEQS}"" | grep -c '>')"" -ge 10 ]; then; echo ""Num seqs: $(echo ""${SEQS}"" | grep -c '>')""; REP=""$(echo ""${SEQS}"" | head -n 1 | cut -f 2 -d '|')""; ALN=cluster_""$(grep -n ""${REP}"" DB_clu_wide.tsv | cut -f1 -d ':')"".aln; famsa-1.2.1-osx <(echo ""${SEQS}"") ""${ALN}""; fi; ```; and we run it like:; ```; ffindex_apply DB_db_fa DB_db_fa.index -- bash aln.sh; ```. Many thanks!; Antonio",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/50#issuecomment-343730359:320,echo,echo,320,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/50#issuecomment-343730359,5,['echo'],['echo']
Availability,Hi Milot -- thank you so much for your help a few weeks ago. I just wanted to let you know that re-downloading MMSeqs2 helped fix this issue. Thanks again for your quick and detailed replies!,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/503#issuecomment-988254027:99,down,downloading,99,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/503#issuecomment-988254027,1,['down'],['downloading']
Availability,"Hi Milot,. Thank you so much for the explanation. I was not sure if it was the chain or KOG and did not want to misinterpret it. Kathie; ________________________________; From: Milot Mirdita <notifications@github.com>; Sent: Monday, January 18, 2021 8:31 AM; To: soedinglab/MMseqs2 <MMseqs2@noreply.github.com>; Cc: Mihindukulasuriya, Kathie <mihindu@wustl.edu>; Author <author@noreply.github.com>; Subject: Re: [soedinglab/MMseqs2] interpretation of web mmseqs2 output (#393). * External Email - Caution *. I am not sure which output this exactly is. The server at web output of search.mmseqs.com gives a slightly different presentation. But how you listed it, I think it should be these columns:. query,target,pident,alnlen,mismatch,gapopen,qstart,qend,tstart,tend,evalue,bits,qlen,tlen,qaln,taln. target is the target identifier, in this case it's just a PDB identifier. The part after the _ is the PDB chain. —; You are receiving this because you authored the thread.; Reply to this email directly, view it on GitHub<https://github.com/soedinglab/MMseqs2/issues/393#issuecomment-762286505>, or unsubscribe<https://github.com/notifications/unsubscribe-auth/ANDVLDIQ64ZCBT3HF3OERJDS2RA43ANCNFSM4WDGPERA>. ________________________________; The materials in this message are private and may contain Protected Healthcare Information or other information of a sensitive nature. If you are not the intended recipient, be advised that any unauthorized use, disclosure, copying or the taking of any action in reliance on the contents of this information is strictly prohibited. If you have received this email in error, please immediately notify the sender via telephone or return mail.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/393#issuecomment-762294329:1608,error,error,1608,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/393#issuecomment-762294329,1,['error'],['error']
Availability,"Hi Milot,. Thanks for the rapid reply!. I download the mmseqs2 formatted database from this link https://phrogs.lmge.uca.fr/downloads_from_website/phrogs_mmseqs_db.tar.gz found on this site https://phrogs.lmge.uca.fr/READMORE.php. The MSAs and other formats are available at the bottom of this link https://phrogs.lmge.uca.fr (specifically https://phrogs.lmge.uca.fr/downloads_from_website/MSA_phrogs.tar.gz). I'll absolutely give this a crack and let you know how I go. George",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/625#issuecomment-1288029355:42,down,download,42,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/625#issuecomment-1288029355,2,"['avail', 'down']","['available', 'download']"
Availability,"Hi Milot,. thanks for the super-quick fix. Have tried it with the new version and we don't get any error messages anymore :). Best,; Thomas. > Am 03.02.2017 um 16:24 schrieb Milot Mirdita <notifications@github.com>:; > ; > Hi Thomas,; > ; > Martin pushed an update earlier. Just pull the latest version and try again. You don't have to change anything else.; > ; > Best,; > Milot; > ; > —; > You are receiving this because you authored the thread.; > Reply to this email directly, view it on GitHub, or mute the thread.; >",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/15#issuecomment-277423828:99,error,error,99,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/15#issuecomment-277423828,1,['error'],['error']
Availability,"Hi Milot-mirdita and Martin,. Thank you for taking time to help. I tried the above steps, however while performing search, the following errors occur; `Segmentation fault (core dumped); Error: Prefilter died; Error: Search step died`. The scoring matrix that i used to replace the nucleotide.out is the EDNAFULL matrix (ftp://ftp.ncbi.nih.gov/blast/matrices/NUC.4.4) which i then used with the format_substitution_matrix.R to get it in the format for mmseqs ; [NUC_modified.txt](https://github.com/soedinglab/MMseqs2/files/3295544/NUC_modified.txt)",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/204#issuecomment-502556575:137,error,errors,137,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/204#issuecomment-502556575,4,"['Error', 'error', 'fault']","['Error', 'errors', 'fault']"
Availability,"Hi Raphael,. I think I fixed the issues we had. You can use the script below to create a profile database to search against. I hope that helps. Best regards,. Milot. ```; # download the latest version of the pfam in stockholm format; wget http://ftp.ebi.ac.uk/pub/databases/Pfam/current_release/Pfam-A.full.gz. # convert stockholm msas to a fasta msa db; # the pfam documentation says that the sequences in the pfam will not wrap around; # so the awk script does not wrapping stockholm entries; zcat Pfam-A.full.gz | tr '[a-z]' '[A-Z]' | awk -v db=pfam_msa \; 'BEGIN { idx = 1; offset = 0; } /^#=GF/ && $2 == ""AC"" { key=$3; next; } /^#/ { next; } /^\/\// { cnt = 0; res=""""; for (i in seq) { gsub(/\./, ""-"", seq[i]); if (cnt++ == 0) { res=res"">""key""\n""seq[i]""\n""; } else { res=res"">""i""\n""seq[i]""\n""; } } size=length(res) + 1; printf(""%s\0"", res) > db; print idx""\t""offset""\t""size > db"".index""; idx = idx + 1; offset = offset + size; delete seq; next; } { seq[$1] = $2; }'. # create profiles; # since pfam has no representative sequence use gap-rule for match mode; # that will filter out columns with more than 50% gaps (of weighted sequences); mmseqs msa2profile pfam_msa pfam_profile --match-mode 1. # precompute mmseqs index table (not required for a single search run); mmseqs createindex pfam_profile tmp -k 5 -s 7. # search; # use --no-preload flag, if using a precomputed index table ; # and query_db is small to medium sized. Without that the precomputed index table; # will be first read completely into memory (unnecessary overhead).; # If you want to annotate more than a few hundred thousand sequences, leave out that flag; mmseqs search query_db pfam_profile_new result tmp -k 5 -s 7; ```",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/59#issuecomment-363790772:173,down,download,173,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/59#issuecomment-363790772,1,['down'],['download']
Availability,"Hi Ryan, . Could you please delete and recreate the tmp folder for linclust, run it again and post the log?; It seems like there was already some broken output from a run before there and that is now masking the issue. We will try to improve the tmp folder handling in the future, sorry about that. Best regards,; Milot",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/10#issuecomment-282401035:200,mask,masking,200,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/10#issuecomment-282401035,1,['mask'],['masking']
Availability,"Hi There,. I'm having problems trying to install fix #309. https://github.com/soedinglab/MMseqs2/pull/309. When trying to checkout the fix code I get an error.; https://github.com/soedinglab/MMseqs2/pull/309/commits/bff2883f04c9afa8af78cf259c0c1a9f3f719fd1; It appear that this commit is not part of the mmeseq main branch. . see below:. # git clone https://github.com/soedinglab/MMseqs2.git; Cloning into 'MMseqs2'...; remote: Enumerating objects: 284, done.; remote: Counting objects: 100% (284/284), done.; remote: Compressing objects: 100% (206/206), done.; remote: Total 34346 (delta 175), reused 143 (delta 78), pack-reused 34062; Receiving objects: 100% (34346/34346), 27.68 MiB | 13.72 MiB/s, done.; Resolving deltas: 100% (26632/26632), done.; Checking out files: 100% (968/968), done. # git checkout bff2883f04c9afa8af78cf259c0c1a9f3f719fd1; fatal: Not a git repository (or any parent up to mount point /powerapps); Stopping at filesystem boundary (GIT_DISCOVERY_ACROSS_FILESYSTEM not set). I also tried to download the SIMD as a sub module.; https://github.com/simd-everywhere/simde; And integrated it with mmeseq with no success. Can you please share a guide on how to install mmesq2 from source with this fix. Your help is much appreciated. Thanks. BR,; Eyal.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/310#issuecomment-649299464:153,error,error,153,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/310#issuecomment-649299464,4,"['down', 'error']","['download', 'error']"
Availability,"Hi there, was wondering if this feature is in process of development? If so, any idea on timeline?; From doing a comparison analysis between mmseqs and taxonomic binning tool with frameshift-aware alignment (DIAMOND+MEGAN), we saw significantly improved results with this frameshift feature. Ex. In a metagenomic sample, 9 out of 10 organisms were correctly identified to species level with frameshift-corrected alignment, whereas mmseqs could only identify 6 out of 10 organisms to species level. Another feature that MEGAN provides (that would be very useful in mmseqs) is that it exports frameshift-corrected contigs, which is advantageous in performance improvement of downstream tools (ie. AMR detection).",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/417#issuecomment-805219866:673,down,downstream,673,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/417#issuecomment-805219866,1,['down'],['downstream']
Availability,"Hi! I also have this problem with slow searches after loading the DB to memory. I have 135,301,051 sequences in the targetDB (uniref90) and so far only trying to use one search sequence. I am using 40 threads and have more memory than the estimated memory consumption. I am using -s 1 and --db-load-mode 3, after doing touchdb. The database was automatically divided 17 splits. In 10 mins, the prefiltering step did not even finish with the first split. Is this the expected behavior? Is it only for the 1st sequence that takes too long? Do you have any suggestion to speed up the search?. The extended prefilter command:; `prefilter targetDB /vol/ek/share/alphafold/databases/uniref90/uniref90.idx /dev/shm//6569854898554735840/pref_0 --sub-mat nucl:nucleotide.out,aa:blosum62.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -k 0 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 65535 --max-seqs 300 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 3 --pca 1 --pcb 1.5 --threads 40 --compressed 0 -v 3 -s 1.0`. Thank you!",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/214#issuecomment-896539468:1043,mask,mask,1043,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/214#issuecomment-896539468,2,['mask'],"['mask', 'mask-lower-case']"
Availability,Hi! I have tried to use the `databases` module but it is still not available. Is the new MMseqs version not released yet or have you decided to not add this module?,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/271#issuecomment-847729258:67,avail,available,67,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/271#issuecomment-847729258,1,['avail'],['available']
Availability,"Hi, . I followed this thread and used the latest binary to run the following code, issues with GTDB.lookup. Downloading data from GTDB appeared to be fine. ```; # command:; mmseqs databases UniProtKB/Swiss-Prot ""$OUT_DIR""/uniprotkb_swissprot ""$TMP_DIR"" --threads 128 --remove-tmp-files. # output directory:; -rw-r--r-- 1 gnii0001 pc77 0 Jan 27 16:54 GTDB; -rw-r--r-- 1 gnii0001 pc77 4 Jan 27 16:54 GTDB.dbtype; -rw-r--r-- 1 gnii0001 pc77 0 Jan 27 16:54 GTDB_h; -rw-r--r-- 1 gnii0001 pc77 4 Jan 27 16:54 GTDB_h.dbtype; -rw-r--r-- 1 gnii0001 pc77 0 Jan 27 16:54 GTDB_h.index; -rw-r--r-- 1 gnii0001 pc77 0 Jan 27 16:54 GTDB.index; -rw-r--r-- 1 gnii0001 pc77 0 Jan 27 17:33 GTDB_mapping; -rw-r--r-- 1 gnii0001 pc77 0 Jan 27 16:54 GTDB.source; -rw-r--r-- 1 gnii0001 pc77 25771406 Jan 27 17:33 GTDB_taxonomy. # slurm error; awk: cmd. line:1: fatal: cannot open file `/home/gnii0001/pc77/scratch_nobackup/Database/mmseqs_formatted/GTDB.lookup' for reading: No such file or directory. # slurm standard output:; ....; Download Results:; gid |stat|avg speed |path/URI; ======+====+===========+=======================================================; 94ce2b|OK | 88MiB/s|/home/gnii0001/pc77/scratch_nobackup/Database/mmseqs_formatted/tmp/13846894499670505008/bac120_taxonomy.tsv. Status Legend:; (OK):download completed. 01/27 17:33:08 [NOTICE] Downloading 1 item(s). 01/27 17:33:09 [NOTICE] Download complete: /home/gnii0001/pc77/scratch_nobackup/Database/mmseqs_formatted/tmp/13846894499670505008/ar53_taxonomy.tsv. Download Results:; gid |stat|avg speed |path/URI; ======+====+===========+=======================================================; 13f000|OK | 6.3MiB/s|/home/gnii0001/pc77/scratch_nobackup/Database/mmseqs_formatted/tmp/13846894499670505008/ar53_taxonomy.tsv. Status Legend:; (OK):download completed.; Create directory /home/gnii0001/pc77/scratch_nobackup/Database/mmseqs_formatted/tmp/13846894499670505008/taxdb; createtaxdb /home/gnii0001/pc77/scratch_nobackup/Database/mmseqs_formatted/GTDB /",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/758#issuecomment-1913045806:108,Down,Downloading,108,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/758#issuecomment-1913045806,2,"['Down', 'error']","['Downloading', 'error']"
Availability,"Hi, ; I got the same problem. When I run the commands in [Create a seqTaxDB for GTDB] I got this error:; **mmseqs createdb ssu.fna ssu130.102.99.4; Connecting to data.ace.uq.edu.au (data.ace.uq.edu.au)|130.102.99.4|:443... connected.; HTTP request sent, awaiting response... 404 Not Found; 2022-04-01 08:59:20 ERROR 404: Not Found.**; ...; ...; **awk -F'\\[loc' '{ print $1}' ssu.fna | awk ""$buildNCBITax"" ; awk: fatal: cannot open file `ssu.fna' for reading (No such file or directory)**. Any help on this will be appreciated",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/548#issuecomment-1085528185:97,error,error,97,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/548#issuecomment-1085528185,2,"['ERROR', 'error']","['ERROR', 'error']"
Availability,"Hi, ; I'm running into the same error. My installation is via conda, so, has this been pushed to conda yet, or should I be compiling from source?. Thank you!",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/290#issuecomment-626146091:32,error,error,32,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/290#issuecomment-626146091,1,['error'],['error']
Availability,"Hi, Did you find a solution for this? I am after a similar output as I am keen for more taxnomy information and looking to filter the results based a on a taxID. However I am getting the same error as well. Any suggestions would be appreciated. ```; mmseqs convertalis T25_hifi_norm $NR_DB T25_hifi_norm_results test; convertalis T25_hifi_norm ncbi_nr T25_hifi_norm_results test. MMseqs Version: 	13.45111; Substitution matrix 	nucl:nucleotide.out,aa:blosum62.out; Alignment format 	0; Format alignment output	query,target,fident,alnlen,mismatch,gapopen,qstart,qend,tstart,tend,evalue,bits; Translation table 	1; Gap open cost 	nucl:5,aa:11; Gap extension cost 	nucl:2,aa:1; Database output 	false; Preload mode 	0; Search type 	0; Threads 	4; Compressed 	0; Verbosity 	3. Input database ""T25_hifi_norm_results"" has the wrong type (Taxonomy); Allowed input:; - Alignment; ```",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/491#issuecomment-1644795307:192,error,error,192,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/491#issuecomment-1644795307,1,['error'],['error']
Availability,"Hi, I am also finding mmseqs taxonomy runs much slower than expected. I have run a metagenome assembled genome (MAG) as a query (after turning it into a mmseqs database) against nr (created using `mmseqs databases`). The query is 4.3M and it took about 4hrs to complete running. @milot-mirdita could you explain which number you took 70-80% of? When I run free -h, I get:. ```; total used free shared buff/cache available; Mem: 188Gi 1.1Gi 939Mi 2.0Mi 186Gi 186Gi; Swap: 8.0Gi 85Mi 7.9Gi; ```. I have some memory intensive programs running right now (bwa mem and metaSPAdes), so maybe this is slowing things down?. Thank you!",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/479#issuecomment-1546719865:412,avail,available,412,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/479#issuecomment-1546719865,2,"['avail', 'down']","['available', 'down']"
Availability,"Hi, I do these ordinal names in Python when I run a pipeline that uses MMSeqs2 as a backend.; You need to rank the clusters by size, and top-down number it. This output:; ```; a a; a b; a c; a d; e e; e f; e h; i i; i j; ```; might become something like this:. ```; 0 a; 0 b; 0 c; 0 d; 1 e; 1 f; 1 h; 2 i; 2 j; ```. I hope I help someway.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/405#issuecomment-774499447:141,down,down,141,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/405#issuecomment-774499447,1,['down'],['down']
Availability,"Hi, I get the same error with the latest version:. ```; $ ./mmseqs/bin/mmseqs databases eggNOG mmseqs_eggNOG/mmseqs_eggNOG tmp --threads 64 --compressed 0. Create directory tmp; databases eggNOG mmseqs_eggNOG/mmseqs_eggNOG tmp --threads 64 --compressed 0 . MMseqs Version: bb0a1b3569b9fe115f3bf63e5ba1da234748de23; Tsv false; Force restart with latest tmp false; Remove temporary files false; Compressed 0; Threads 64; Verbosity 3. 10/13 10:50:03 [NOTICE] Downloading 1 item(s); [#156257 75MiB/5.7GiB(1%) CN:5 DL:91MiB ETA:1m3s]; [#156257 184MiB/5.7GiB(3%) CN:5 DL:101MiB ETA:55s]; [#156257 293MiB/5.7GiB(5%) CN:5 DL:104MiB ETA:53s]; [#156257 402MiB/5.7GiB(6%) CN:5 DL:106MiB ETA:51s]; [#156257 512MiB/5.7GiB(8%) CN:5 DL:107MiB ETA:49s]; [#156257 622MiB/5.7GiB(10%) CN:5 DL:107MiB ETA:48s]; [#156257 732MiB/5.7GiB(12%) CN:5 DL:108MiB ETA:47s]; [#156257 838MiB/5.7GiB(14%) CN:5 DL:108MiB ETA:46s]; [#156257 0.9GiB/5.7GiB(16%) CN:5 DL:108MiB ETA:45s]; [#156257 1.0GiB/5.7GiB(18%) CN:5 DL:108MiB ETA:44s]; [#156257 1.1GiB/5.7GiB(19%) CN:5 DL:110MiB ETA:42s]; [#156257 1.2GiB/5.7GiB(21%) CN:5 DL:110MiB ETA:41s]; [#156257 1.3GiB/5.7GiB(23%) CN:5 DL:110MiB ETA:40s]; [#156257 1.4GiB/5.7GiB(25%) CN:5 DL:110MiB ETA:39s]; [#156257 1.5GiB/5.7GiB(27%) CN:5 DL:109MiB ETA:38s]; [#156257 1.6GiB/5.7GiB(29%) CN:5 DL:108MiB ETA:38s]; [#156257 1.7GiB/5.7GiB(30%) CN:5 DL:108MiB ETA:37s]; [#156257 1.8GiB/5.7GiB(32%) CN:5 DL:109MiB ETA:35s]; [#156257 1.9GiB/5.7GiB(34%) CN:5 DL:109MiB ETA:34s]; [#156257 2.0GiB/5.7GiB(36%) CN:5 DL:109MiB ETA:33s]; [#156257 2.1GiB/5.7GiB(38%) CN:5 DL:109MiB ETA:32s]; [#156257 2.3GiB/5.7GiB(40%) CN:5 DL:109MiB ETA:31s]; [#156257 2.4GiB/5.7GiB(42%) CN:5 DL:109MiB ETA:30s]; [#156257 2.5GiB/5.7GiB(44%) CN:5 DL:109MiB ETA:29s]; [#156257 2.6GiB/5.7GiB(45%) CN:5 DL:110MiB ETA:28s]; [#156257 2.7GiB/5.7GiB(47%) CN:5 DL:110MiB ETA:27s]; [#156257 2.8GiB/5.7GiB(49%) CN:5 DL:110MiB ETA:26s]; [#156257 2.9GiB/5.7GiB(51%) CN:5 DL:110MiB ETA:25s]; [#156257 3.0GiB/5.7GiB(53%) CN:5 DL:110MiB E",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/762#issuecomment-1761245149:19,error,error,19,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/762#issuecomment-1761245149,2,"['Down', 'error']","['Downloading', 'error']"
Availability,"Hi, I rerun the search with this command line:; `mmseqs easy-search query.fasta individual.fna.tar.gz result.m8 tmp --cov-mode 0 -c 0.7 -e 0.00001 --split-memory-limit 60G`. This turned into another error:; `/scratch/yw/tmp/753367603623873521/search_tmp/4970649135515174898/translated_search.sh: line 45: 7447 Killed ""$MMSEQS"" extractorfs ""$2"" ""${TMP_PATH}/t_orfs_aa"" ${ORF_PAR}`. And in the log file, this search gave lots of warnings that the sequence is invalid:; ```; Invalid sequence with index 1463370!; =Error: extract target orfs step died; Error: Search died; ```. Could you please tell me what might be the cause? Thank you!",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/366#issuecomment-714505555:199,error,error,199,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/366#issuecomment-714505555,3,"['Error', 'error']","['Error', 'error']"
Availability,"Hi, it gave an error again. ; Here are my command lines:; ```; mmseqs tar2db individual.fna.tar.gz smdb --output-dbtype 11; mmseqs createdb smdb sm_mm_db; mmseqs easy-search query.fasta sm_mm_db result.m8 tmp --cov-mode 0 -c 0.7 -e 0.00001 --split-memory-limit 60G; ```. Here is the error:; `/scratch/yw14n20/gp44/tmp/9201396113348300296/search_tmp/11342421226002340810/translated_search.sh: line 45: 21293 Killed ""$MMSEQS"" extractorfs ""$2"" ""${TMP_PATH}/t_orfs_aa"" ${ORF_PAR} `",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/366#issuecomment-715265248:15,error,error,15,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/366#issuecomment-715265248,2,['error'],['error']
Availability,"Hi, it still can't work with mmseqs2 version 14.7e284. Additionally, the VERSION file cannot be downloaded successfully. It can be downloaded manually, suggesting the internet should be fine.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/561#issuecomment-1588654694:96,down,downloaded,96,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/561#issuecomment-1588654694,2,['down'],['downloaded']
Availability,"Hi, sorry for bringing up an old thread, but I came across this when looking for how to remove identical sequences, and tried following the steps mentioned above by @martin-steinegger, and am surprised with the results tbh... Not sure if this is an issue, but please could you be so kind as to confirm that the above/below options still do as intended in this thread? (If you'd prefer I open a new issue and link back to this one, please let me know 🙂) . Essentially I've got three proteomes from the same species, and I'd like to remove identical redundant proteins and fragments, keeping the longest protein only, discarding any fragments that are a subsequence of anything else. This is what I understand is effectively the method followed to create the UniRef100 database, but I'd like to do it just for these three proteomes... **Protein counts for source files**; ```; $ for f in *.fasta; do echo -n ""$f "" ; grep '^>' $f | wc -l ; done; proteome-1.fasta 23885; proteome-2.fasta 23758; proteome-3.fasta 28118; proteomes-appended.fasta 75761; ```. **Create database**; `$ mmseqs createdb proteomes-appended.fasta db`. **Remove redundant proteins** (using options mentioned above in https://github.com/soedinglab/MMseqs2/issues/104#issuecomment-411727699); `$ mmseqs cluster db db_clu tmp --min-seq-id 1.0 -c 0.9 --cov-mode 1`. Do these options still perform a bidirectional search, removing only redundant proteins with 100% identity? Any fragments of longer proteins should be removed. However `-c 0.9` doesn't seem correct.... **Export consensus sequences to fasta file**; ```; $ mmseqs result2repseq db db_clu db_clu_rep; $ mmseqs result2flat db db db_clu_rep db_clu_rep.fasta --use-fasta-header; ```. **How many sequences?**; ```; $ grep '^>' db_clu_rep.fasta | wc -l; 58339; ```. So this has removed 17422 sequences, but tbh I was expecting to have an end result closer to ~30k proteins. Please can you confirm if I have done as I intended?. Best,; Alex",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/104#issuecomment-1105387969:548,redundant,redundant,548,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/104#issuecomment-1105387969,4,"['echo', 'redundant']","['echo', 'redundant']"
Availability,"Hi, thanks for the quick response! Currently I'm not running any MP, and simply calling mmseqs directly after exporting the bin directory to my path.; When testing the MP mode, I used `srun --ntasks-per-node 1`, and recieved a similar error, however running it without any MP made me think the problem is likely upstream of this.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/679#issuecomment-1461538513:235,error,error,235,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/679#issuecomment-1461538513,2,['error'],['error']
Availability,"Hi,. After update to last version of mmseqs and hhsuite, I tried again.; I wrote this script inspired in [this tutorial](https://github.com/soedinglab/MMseqs2/wiki#how-to-create-a-hhblits-database). ```; #!/usr/bin/env bash. BASE=""subset""; FILE=""${BASE}.fa""; MMSEQDB=""${BASE}DB""; MMSEQPREF=""${BASE}PREFILTER""; MMSEQALN=""${BASE}ALN""; MMSEQCLU=""${BASE}CLU""; MMSEQMSA=""${BASE}MSA""; FILELOG=""job.log"". echo '#:: CREATEDB' &>> ${FILELOG} ;; mmseqs createdb ${FILE} ${MMSEQDB} &>> ${FILELOG}. echo '#:: PREFILTER' &>> ${FILELOG} ;; mmseqs prefilter ${MMSEQDB} ${MMSEQDB} ${MMSEQPREF} -s 7.5 &>> ${FILELOG}. echo '#:: ALING' &>> ${FILELOG} ;; mmseqs align ${MMSEQDB} ${MMSEQDB} ${MMSEQPREF} ${MMSEQALN} -e 0.00001 &>> ${FILELOG}. echo '#:: CLUST' &>> ${FILELOG} ;; mmseqs clust ${MMSEQDB} ${MMSEQALN} ${MMSEQCLU} &> ${FILELOG} &>> ${FILELOG}. echo '#:: RESULT2MSA' &>> ${FILELOG} ;; mmseqs result2msa ${MMSEQDB} ${MMSEQDB} ${MMSEQCLU} ${MMSEQMSA} --compress &>> ${FILELOG}. echo '#:: CREATE LINKS' &>> ${FILELOG} ;; ln -s ${MMSEQDB}_h ${MMSEQMSA}_header.ffdata &>> ${FILELOG}; ln -s ${MMSEQDB}_h.index ${MMSEQMSA}_header.ffindex &>> ${FILELOG}; ln -s ${MMSEQDB} ${MMSEQMSA}_sequence.ffdata &>> ${FILELOG}; ln -s ${MMSEQDB}.index ${MMSEQMSA}_sequence.ffindex &>> ${FILELOG}. echo '#:: BUILD HHBLITS COMPATIBLE' &>> ${FILELOG} ;; cstranslate -i ${MMSEQMSA} -o ${MMSEQMSA}_cs219 \; -A /home/linuxbrew/anaconda3/data/cs219.lib \; -D /home/linuxbrew/anaconda3/data/context_data.lib \; -x 0.3 -c 4 -I ca3m &>> ${FILELOG}; ```; It only fails on cstranslate with this error:; ```; ERROR: Unable to read input file 'subsetMSA'!; Reading context library for pseudocounts from context_data.lib ...; Reading abstract state alphabet from cs219.lib ...; ```. I'm attaching the the [sequence](https://github.com/soedinglab/MMseqs2/files/3095328/subset.fa.txt), [commands file (source)](https://github.com/soedinglab/MMseqs2/files/3095327/source.sh.txt) and [log file](https://github.com/soedinglab/MMseqs2/files/3095326/job",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/174#issuecomment-484587503:398,echo,echo,398,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/174#issuecomment-484587503,5,['echo'],['echo']
Availability,"Hi,. I am experiencing a similar/the same issue when running convertalis. I've used a previous version a few months ago with no issues, so this seems like it's been introduced since then. When using the latest release (2-23394, I tried both avx and sse) I receive this output. ```; n8942188@lyra03:~/test_mmseqs2> /home/n8942188/various_programs/mmseqs2/bin/mmseqs convertalis mmseqstest_nucl.fasta_QDB mmseqtest_prots.fasta_TDB mmseqtest_SDB mmseqtest_SDB.m8 --threads 1; Program call:; mmseqstest_nucl.fasta_QDB mmseqtest_prots.fasta_TDB mmseqtest_SDB mmseqtest_SDB.m8 --threads 1. MMseqs Version: 2339462c06eab0bee64e4fc0ebebf7707f6e53fd; Alignment Format 0; No preload false; Early exit false; Database Output false; Threads 1; Verbosity 3. Query Header file: mmseqstest_nucl.fasta_QDB_h; Use index mmseqstest_nucl.fasta_QDB.sk6; Index version: 5.0.0; Generated by: 2339462c06eab0bee64e4fc0ebebf7707f6e53fd; KmerSize: 6; AlphabetSize: 21; Mask: 1; Type: 1; Spaced: 1; KmerScore: 0; SequenceType: 0; Headers: 1; ScoreMatrix: blosum62.out; Target Header file: mmseqtest_prots.fasta_TDB_h; Use index mmseqtest_prots.fasta_TDB.sk6; Index version: 5.0.0; Generated by: 2339462c06eab0bee64e4fc0ebebf7707f6e53fd; KmerSize: 6; AlphabetSize: 21; Mask: 1; Type: 1; Spaced: 1; KmerScore: 0; SequenceType: 0; Headers: 1; ScoreMatrix: blosum62.out; Alignment database: mmseqtest_SDB; Start writing file to mmseqtest_SDB.m8; Invalid database read for database data file=mmseqstest_nucl.fasta_QDB_h, database index=; ```. All the previous steps seem to work correctly (createdb, createindex, search) and have contents inside their files. For example, running head on the _QDB_h and _TDB_h files return the below result (both _h files are identical since my query is the nucleotide version of the prot sequence). ```; evm.model.utg902.1.8.5abb479e; evm.model.utg902.1.9.5abb479e; evm.model.utg902.1.10.5abb479e; evm.model.utg1004.80; evm.model.utg8847.1_evm.model.utg8847.2.3.5abb479e; evm.model.utg8847.1_evm.mod",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/64#issuecomment-377736994:943,Mask,Mask,943,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/64#issuecomment-377736994,1,['Mask'],['Mask']
Availability,"Hi,. I have tried following the step described on the [wiki](https://github.com/soedinglab/mmseqs2/wiki#create-a-seqtaxdb-from-an-existing-blast-database) to create the mapping for NR. . I have download and ensured I have the taxonomy folder; ```; ls -lh /root/mmseqs2_db/taxonomy/; Permissions Size User Date Modified Name; drwxr-sr-x - root 25 Mar 13:35 .ipynb_checkpoints/; .rw-rw-r-- 20M 9019 12 Mar 21:27 citations.dmp; .rw-rw-r-- 4.7M 9019 12 Mar 21:25 delnodes.dmp; .rw-rw-r-- 452 9019 12 Mar 21:20 division.dmp; .rw-rw-r-- 16k 9019 12 Mar 21:27 gc.prt; .rw-rw-r-- 4.9k 9019 12 Mar 21:20 gencode.dmp; .rw-rw-r-- 3.9M 9019 12 Mar 21:25 images.dmp; .rw-rw-r-- 1.4M 9019 12 Mar 21:25 merged.dmp; .rw-rw-r-- 244M 9019 12 Mar 21:27 names.dmp; .rw-rw-r-- 194M 9019 12 Mar 21:27 nodes.dmp; .rw-rw---- 3.1k 4544 27 Apr 2023 readme.txt; .rw-rw-r-- 65M root 12 Mar 21:28 taxdump.tar.gz; ```. But when attempting to extract the fasta and the tax id mapping, I get the following error: ; ```; cd /root/mmseqs2_db; blastdbcmd -db nr -entry all > nr.fna; BLAST Database error: No alias or index file found for nucleotide database [nr] in search path [/root/mmseqs2_db::]; ```; I have ensured that the files for nr are available in that path; ```; ls -lh /root/mmseqs2_db/nr*; Permissions Size User Date Modified Name; .rw-rw-r-- 13G root 15 Mar 16:54 /root/mmseqs2_db/nr; .rw-rw-r-- 4 root 15 Mar 16:54 /root/mmseqs2_db/nr.dbtype; .rw-r--r-- 0 root 25 Mar 13:46 /root/mmseqs2_db/nr.fna; .rw-rw-r-- 779M root 15 Mar 16:54 /root/mmseqs2_db/nr.index; .rw-rw-r-- 790M root 15 Mar 16:55 /root/mmseqs2_db/nr.lookup; .rw-rw-r-- 8 root 15 Mar 16:52 /root/mmseqs2_db/nr.source; .rw-rw-r-- 11 root 15 Mar 17:03 /root/mmseqs2_db/nr.version; .rw-rw-r-- 4.0G root 15 Mar 16:52 /root/mmseqs2_db/nr_h; .rw-rw-r-- 4 root 15 Mar 16:52 /root/mmseqs2_db/nr_h.dbtype; .rw-rw-r-- 748M root 15 Mar 16:55 /root/mmseqs2_db/nr_h.index; .rw-rw-r-- 0 root 15 Mar 16:55 /root/mmseqs2_db/nr_mapping; .rw-rw-r-- 708M root 15 Mar 16:55 /ro",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/824#issuecomment-2018057250:194,down,download,194,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/824#issuecomment-2018057250,2,"['down', 'error']","['download', 'error']"
Availability,"Hi,. I see that in the Cluster module of MMseqs2, there is a function that converts sequence identity to a corresponding sensitivity value:; `. float setAutomaticThreshold(float seqId) {; float sens;; if (seqId <= 0.3) {; sens = 6;; } else if (seqId > 0.8) {; sens = 1.0;; } else {; sens = 1.0 + (1.0 * (0.7 - seqId) * 10);; }; return sens; }. `. So if you call it with seqId = 0.4, it would return `-s` as 4. But there are some caveats to this:; 1. This function is used for clustering, where the meaning of a slightly wrong `-s` value is slightly worse clustering, but not loss of information (as all the input will be clustered, no matter what `-s` value is selected). This is not the case here and a too low `-s` might cause losing hits.; 2. The function is not based on thorough benchmarking, it is more a ""rule of thumb"". Therefore, we recommend you:; 1. Easy: select a slightly higher `-s` than the seqId you are interested in, to be on the safe side; 2. Involved: keep an eye on the results and see if big things get lost.; 3. More involved: benchmark for your purposes. For example, create a dataset of homologous pairs at 40% id of taxa relevant for your study and see how many can be recovered using various `-s`",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/777#issuecomment-1849056333:1195,recover,recovered,1195,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/777#issuecomment-1849056333,1,['recover'],['recovered']
Availability,"Hi,. I’m sorry but I can’t help. I couldn't use it at the end because of that problem.; Best,; Ana. > On 3 Aug 2023, at 08:11, csm276 ***@***.*** ***@***.***>> wrote:; > ; > ; > Hi, I got the same problem. When I run the commands in [Create a seqTaxDB for GTDB] I got this error: mmseqs createdb ssu.fna ssu130.102.99.4 Connecting to data.ace.uq.edu.au <http://data.ace.uq.edu.au/> (data.ace.uq.edu.au <http://data.ace.uq.edu.au/>)|130.102.99.4|:443... connected. HTTP request sent, awaiting response... 404 Not Found 2022-04-01 08:59:20 ERROR 404: Not Found. ... ... awk -F'[loc' '{ print $1}' ssu.fna | awk ""$buildNCBITax"" awk: fatal: cannot open file `ssu.fna' for reading (No such file or directory); > ; > Any help on this will be appreciated; > ; > Hi，; > How did you resolve this issue at the time, until today I have also encountered this problem and this site is not working; > https://data.ace.uq.edu.au/public/gtdb/data/releases/latest/ssu.fna <https://data.ace.uq.edu.au/public/gtdb/data/releases/latest/ssu.fna>; > Can you give me some advice? Thanks a lot.; > ; > —; > Reply to this email directly, view it on GitHub <https://github.com/soedinglab/MMseqs2/issues/548#issuecomment-1663347073>, or unsubscribe <https://github.com/notifications/unsubscribe-auth/APMXFJCAL7ML33M3S4GNM33XTM6K3ANCNFSM5QJH4VIA>.; > You are receiving this because you commented.; > . ---------------------------------------------; Ana María Cabello Pérez, PhD. Centro Oceanográfico de Málaga (IEO-CSIC); Instituto Español de Oceanografía; Puerto Pesquero s/n; 29640 Fuengirola, Málaga, Spain ; Tel: +34 95 219 71 24 ; ***@***.***; ---------------------------------------------",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/548#issuecomment-1664078972:273,error,error,273,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/548#issuecomment-1664078972,2,"['ERROR', 'error']","['ERROR', 'error']"
Availability,"Hi,; I think the following error is related to this issue as well. When searching against Uniref90 on 31e1fddc9b9368570bb39be3051232d4e64f7ae9 I am getting the following error:; ```; *** Error in `*** Error in `mmseqs*** ; Error in `mmseqs': free(): invalid pointer: 0x0000000000ccb6d8 ***; *** Error in `tmp8/4822298374491924264/blastp.sh: line 86: 6866 Aborted ; $RUNNER $MMSEQS prefilter ""$INPUT"" ""$TARGET"" ""$TMP_PATH/pref_$SENS"" $PREFILTER_PAR -s $SENS; Error: Prefilter died; ```; Many thanks; Antonio",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/55#issuecomment-357820039:27,error,error,27,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/55#issuecomment-357820039,7,"['Error', 'error']","['Error', 'error']"
Availability,"Hi,; Sorry, I should have started from scratch with the new commit... I did it and I don't get that ""Invalid entry in cluster..."" error. However, the representatives of each cluster are not part of the elements of the cluster (see the .tsv and .fa in the results folder).; The code and datasets that I used are contained here:; https://www.dropbox.com/sh/pd9qdkrq084lu29/AACL60pabYsgUhqnCEnsASgea?dl=0. My results are:; https://www.dropbox.com/sh/umndghqhmibogdu/AADulxnmCH66-rtEAkjtBD9ga?dl=0",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/17#issuecomment-281057771:130,error,error,130,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/17#issuecomment-281057771,1,['error'],['error']
Availability,"Hi,; Thanks for reporting this.; The 3 error messages you get are not critical. It is due to a recent change in the default parameters of mmseqs that makes it not generating the aln_*, clu_* and input_* files. This shouldn't affect the workflow.; From your call, you should actually get a DB_clusterupdate database. Could you check if it is conform to what you expected ?. Concerning the ATCG warning, it is just a warning to the user in case there are some sequences containing only residues A, T, C and G. If sometimes you do not have the warning it may may be due to the fact the tmp folder was not empty and mmseqs did not perform the search again. Best,; Clovis.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/17#issuecomment-280642395:39,error,error,39,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/17#issuecomment-280642395,1,['error'],['error']
Availability,"Hi,; Thanks for your quick response. Anyhow the server had 35GB free memory.; Meanwhile we will try downloading the database using the database command. Thanks!. On Thu, 1 Apr, 2021, 7:10 pm Milot Mirdita, ***@***.***>; wrote:. > How much RAM does your server have? It seems like it ran out of RAM during; > construction of the database.; >; > You can try creating a NR with the databases command, it uses a slightly; > more efficient procedure than createtaxdb to create this mapping.; >; > —; > You are receiving this because you authored the thread.; > Reply to this email directly, view it on GitHub; > <https://github.com/soedinglab/MMseqs2/issues/431#issuecomment-811916088>,; > or unsubscribe; > <https://github.com/notifications/unsubscribe-auth/ATPTCL4PAS3IIYFWQZJIEHLTGRZV7ANCNFSM42GMDBGQ>; > .; >",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/431#issuecomment-812985934:100,down,downloading,100,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/431#issuecomment-812985934,1,['down'],['downloading']
Availability,"Hi; Kindly see the following example:; I am attaching the fasta files, the sequences contains ‘*’ stop codons as some of the sequences are pseudogenes, however the similarity that mmseqs misses is with intact genes.; The sequence cand_290 (file: macaque_oct20_input.fa.F) shares 90% sequence identity over 290 aa with OR51V1B_dog (file: all_ORs_pep_12Oct15.fa.F).; MMseqs didn’t find this similarity. I have tried several parameters. Commands:; mmseqs createdb macaque_oct20_input.fa.F macaqueDB; mmseqs createindex macaqueDB tmp; mmseqs createdb all_ORs_pep_12Oct15.fa.F all_ORsDB; mmseqs createindex all_ORsDB tmp; mmseqs search macaqueDB ../macaque_oct20/libs/all_ORs_pep_12Oct15.DB resultDB \; tmp --alignment-mode 3 --mask 0 --comp-bias-corr 0; mmseqs convertalis macaqueDB hordeDB resultDB resultFinal.txt. Result:; [lvzvia@molgen3 test]$ grep 'cand_290' finalResult.txt |grep '51V'; cand_290.fasta OR51V25_horse 0.884 309 35 0 2 311 3 312 6.26E-185 567; cand_290.fasta OR51V1_chimp 0.768 310 71 0 2 312 10 320 1.76E-159 495; cand_290.fasta OR51V1_dog 0.761 309 73 0 1 310 1 310 1.92E-159 494; cand_290.fasta OR51V22_cow 0.763 307 72 0 4 311 5 312 5.68E-159 494; cand_290.fasta OR51V28_horse 0.756 306 74 0 3 309 4 310 2.69E-158 491; cand_290.fasta OR51V21_dog 0.761 309 73 0 1 309 1 310 1.47E-156 486; cand_290.fasta OR51V19P_dog 0.750 303 75 0 9 312 10 313 5.17E-155 482; cand_290.fasta OR51V1_orang 0.750 311 77 0 1 312 7 318 1.09E-153 479; cand_290.fasta OR51V1D_cow 0.740 310 80 0 1 311 2 312 3.54E-153 477; cand_290.fasta OR51V30P_horse 0.743 311 79 0 1 311 3 314 4.03E-153 476; cand_290.fasta OR51V23_orang 0.750 303 75 0 9 312 10 313 1.43E-152 475. Blast Results:; [lvzvia@molgen3 test]$ grep 'cand_290' ../macaque_test/blast/macaque_test_vs_all.txt|grep '51V'; cand_290.fasta OR51V1B_dog 90.00 310 31 0 3 312 4 313 0.0 562; cand_290.fasta OR51V1B_cow 88.10 311 37 0 2 312 3 313 0.0 558; cand_290.fasta OR51V25_horse 88.39 310 36 0 2 311 3 312 0.0 556; cand_290.fasta OR51V27_horse 80.81",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/357#issuecomment-707026678:723,mask,mask,723,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/357#issuecomment-707026678,1,['mask'],['mask']
Availability,How do you check the release of MMSeqs2 that I am using? I just recently downloaded it a couple weeks ago.,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/429#issuecomment-809718243:73,down,downloaded,73,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/429#issuecomment-809718243,1,['down'],['downloaded']
Availability,"How many entries are there in the input database (`wc -l ${output_folder}/all_samples_oct31_db.index`)?. Try setting the memory-limit to about 2/3 of the available RAM (`--split-memory-limit 70G`). Also unrelated, but are you sure about `--min-seq-id 1.0`?; It will basically not be able to cluster anything except 100% identical substrings. If this is what you want you might want to also add `--cov-mode 1` (See https://github.com/soedinglab/MMseqs2/wiki#how-to-set-the-right-alignment-coverage-to-cluster).",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/238#issuecomment-549172895:154,avail,available,154,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/238#issuecomment-549172895,1,['avail'],['available']
Availability,"I [reposted this Issue here](https://github.com/soedinglab/MMseqs2/issues/616#issuecomment-1507286459) after noticing that this Issue was closed. I also get the ""Invalid database read for database data file"" error from `expandaln` when called by `colabfold_search`. ```; Invalid database read for database data file=/home/username/project/my_local_DB/target_DB.idx, database index=/home/username/project/my_local_DB/target_DB.idx.index; getData: local id (4294967295) >= db size (22); ```. I created `target_DB` from `target.fasta` which has 142 records in it:. ```; pwd; # /home/username/project/my_local_DB. mmseqs createdb target.fasta target_DB; mmseqs createindex target_DB tmp_createindex --threads 96. indexdb target_DB target_DB --seed-sub-mat 'aa:VTML80.out,nucl:nucleotide.out' -k 0 --alph-size aa:21,nucl:5 --comp-bias-corr 1 --comp-bias-corr-scale 1 --max-seq-len 65535 --max-seqs 300 --mask 1 --mask-prob 0.9 --mask-lower-case 0 --spaced-kmer-mode 1 -s 7.5 --k-score seq:0,prof:0 --check-compatible 0 --search-type 0 --split 0 --split-memory-limit 0 -v 3 --threads 96; ```. Then I ran `colabfold_search`. Output is below. ```; CUDA_VISIBLE_DEVICES='0' colabfold_search; -s '8'; --db1 'target_DB'; --use-templates '0'; --db2 ''; --use-env '0'; --db3 ''; --filter '1'; --mmseqs 'mmseqs'; --expand-eval '1.7e+308'; --align-eval '10'; --diff '3000'; --qsc '-20.0'; --max-accept '1000000'; --db-load-mode '2'; --threads '96'; query.fasta; /home/username/project/my_local_DB; result_query_20230412_142303. createdb result_query_20230412_142303/query.fas result_query_20230412_142303/qdb --shuffle 0. search result_query_20230412_142303/qdb /home/username/project/my_local_DB/target_DB result_query_20230412_142303/res result_query_20230412_142303/tmp --threads 96 --num-iterations 3 --db-load-mode 2 -a -s 8 -e 0.1 --max-seqs 10000. prefilter result_query_20230412_142303/qdb /home/username/project/my_local_DB/target_DB.idx result_query_20230412_142303/tmp/18292001434761310910/pref_0 --sub-ma",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/64#issuecomment-1507273856:208,error,error,208,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/64#issuecomment-1507273856,4,"['error', 'mask']","['error', 'mask', 'mask-lower-case', 'mask-prob']"
Availability,I added the CDD to the `databases` downloader. Thanks for the suggestion!,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/410#issuecomment-776955401:35,down,downloader,35,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/410#issuecomment-776955401,1,['down'],['downloader']
Availability,"I already tried it on the smallest dataset and it completed without errors. To confirm, is the <o:clusterPrefix>_cluster.tsv file that is generated in the format that the first column is the ""center"" (or unique cluster id) and the second column indicates that a sequence belongs to this center?",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/111#issuecomment-418152671:68,error,errors,68,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/111#issuecomment-418152671,1,['error'],['errors']
Availability,I also added VOGDB to the database downloader (https://github.com/soedinglab/MMseqs2/commit/7be4fca96e84fb3ef56c598967ae6a6925500b9c). You will be able to download and setup a VOGDB profile database with only one line now:; ```; mmseqs databases VOGDB vog tmp; mmseqs easy-search QUERY.fasta vog res.m8 tmp; ```,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/440#issuecomment-822443569:35,down,downloader,35,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/440#issuecomment-822443569,2,['down'],"['download', 'downloader']"
Availability,"I also encountered segment fault issue when clustering long nucleotide sequences (up to 99 million bases). Does anyone have luck with long sequences?. ==========Invalid database read for id=4294967295, database index=dump/9317603370475534640/input_step_redundancy.index; getSeqLen: local id (4294967295) >= db size (8247802); =====================Error: Offset step died; [===dump/16153251853230858118/linclust/13629425479186879042/linclust.sh: line 76: 195145 Segmentation fault (core dumped) $RUNNER ""$MMSEQS"" ""${ALIGN_MODULE}"" ""$INPUT"" ""$INPUT"" ""$RESULTDB"" ""${TMP_PATH}/aln"" ${ALIGNMENT_PAR}; Error: Alignment step died; Error: linclust died",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/297#issuecomment-1674167207:27,fault,fault,27,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/297#issuecomment-1674167207,5,"['Error', 'fault']","['Error', 'fault']"
Availability,"I also get the ""Invalid database read for database data file"" error from `expandaln` when called by `colabfold_search`. (I originally posted this on [Issue 64](https://github.com/soedinglab/MMseqs2/issues/64#issuecomment-1507273856) before I realized that that Issue was closed.). ```; Invalid database read for database data file=/home/username/project/my_local_DB/target_DB.idx, database index=/home/username/project/my_local_DB/target_DB.idx.index; getData: local id (4294967295) >= db size (22); ```. I created `target_DB` from `target.fasta` which has 142 records in it:. ```; pwd; # /home/username/project/my_local_DB. mmseqs createdb target.fasta target_DB; mmseqs createindex target_DB tmp_createindex --threads 96. indexdb target_DB target_DB --seed-sub-mat 'aa:VTML80.out,nucl:nucleotide.out' -k 0 --alph-size aa:21,nucl:5 --comp-bias-corr 1 --comp-bias-corr-scale 1 --max-seq-len 65535 --max-seqs 300 --mask 1 --mask-prob 0.9 --mask-lower-case 0 --spaced-kmer-mode 1 -s 7.5 --k-score seq:0,prof:0 --check-compatible 0 --search-type 0 --split 0 --split-memory-limit 0 -v 3 --threads 96; ```. Then I ran `colabfold_search`. Output is below. ```; CUDA_VISIBLE_DEVICES='0' colabfold_search; -s '8'; --db1 'target_DB'; --use-templates '0'; --db2 ''; --use-env '0'; --db3 ''; --filter '1'; --mmseqs 'mmseqs'; --expand-eval '1.7e+308'; --align-eval '10'; --diff '3000'; --qsc '-20.0'; --max-accept '1000000'; --db-load-mode '2'; --threads '96'; query.fasta; /home/username/project/my_local_DB; result_query_20230412_142303. createdb result_query_20230412_142303/query.fas result_query_20230412_142303/qdb --shuffle 0. search result_query_20230412_142303/qdb /home/username/project/my_local_DB/target_DB result_query_20230412_142303/res result_query_20230412_142303/tmp --threads 96 --num-iterations 3 --db-load-mode 2 -a -s 8 -e 0.1 --max-seqs 10000. prefilter result_query_20230412_142303/qdb /home/username/project/my_local_DB/target_DB.idx result_query_20230412_142303/tmp/18292001434761310910/",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/616#issuecomment-1507286459:62,error,error,62,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/616#issuecomment-1507286459,4,"['error', 'mask']","['error', 'mask', 'mask-lower-case', 'mask-prob']"
Availability,I also get the same error with the latest version compiled from source. Any advice would be much appreciated!,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/762#issuecomment-1768407343:20,error,error,20,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/762#issuecomment-1768407343,1,['error'],['error']
Availability,I am encountering the same error that @blauemond described (using MMseqs2 Version: 13.45111). Is there a solution?,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/508#issuecomment-1214164321:27,error,error,27,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/508#issuecomment-1214164321,1,['error'],['error']
Availability,"I am having a hard time creating a minimal reference sequence to reproduce the crash. If I reduce the target database down to only the aligned sequence, it doesn't happen. The command line in question is . ```mmseqs convertali querydb targetdb --format-output query,target,qstart,qend,tstart,tend,raw,cigar,qaln,taln,qlen --search-type 3```. I will continue to try and make a minimal reproducible example. I did notice that adding a `N` to the start of my query sequence solves the issue.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/863#issuecomment-2237061436:118,down,down,118,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/863#issuecomment-2237061436,1,['down'],['down']
Availability,"I am having a very similar error:. **Current behaviour**; After submitting a `mmseqs taxonomy` run, this sub command is being executed (and dies):. ```; aggregatetaxweights mmseqs_database/database tmp1/14824571404584235274/orfs_h_swapped tmp1/14824571404584235274/orfs_tax tmp1/14824571404584235274/orfs_tax_aln SWH_IN_taxonomy/SWH_IN --lca-ranks kingdom,phylum,class,order,family,genus,species --tax-lineage 1 --compressed 1 --threads 12 -v 3; ```. **MMseqs output**. ```; Missing key 0 in tax result; tmp1/14824571404584235274/taxpercontig.sh: line 85: 206297 Aborted (core dumped) ""$MMSEQS"" aggregatetaxweights ""${TAX_SEQ_DB}"" ""${TMP_PATH}/orfs_h_swapped"" ""${TMP_PATH}/orfs_tax"" ""${TMP_PATH}/orfs_tax_aln"" ""${RESULTS}"" ${AGGREGATETAX_PAR}; Error: aggregatetaxweights died; ```. **Environment**. - singularity container of mmseqs2 version 15.6f452 (build pl5321h6a68c12_0); - HPC (Linux + slurm); - 950 GB RAM. **Comment**; I know that for mmseqs taxonomy classification with GTDB at least 900 GB RAM are needed, so I am not surprised that your process died @AstrobioMike. And since I seem to have a very similar error (if not the same) maybe even my 950 GB RAM are not enough, I wonder...",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/806#issuecomment-2377150051:27,error,error,27,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/806#issuecomment-2377150051,3,"['Error', 'error']","['Error', 'error']"
Availability,"I am having the same issue when trying to cluster a catalog of bacterial proteins, namely [UHGP](https://www.ebi.ac.uk/metagenomics/genome-catalogues/human-gut-v2-0). . I have noticed that when I align assembled bacterial proteins from my dataset to UHGP reresentative sequences of clusters at 90% amino acid identity, some of them align to over 1200 representative sequences with identity over 90% and almost 100% coverage. The UHGP clusters were generated with `linclust`, so I attempted to cluster de-duplicated sequences from this catalogue with the `easy-cluster` workflow, hoping to improve the results. However, while there is an improvement, the situation is still far from ideal. ## Input data; 95,303,635 non-redundant proteins from UHGP v2.0 ([FTP link](http://ftp.ebi.ac.uk/pub/databases/metagenomics/mgnify_genomes/human-gut/v2.0/protein_catalogue/uhgp-100.tar.gz)). ## Expected behavior; Each protein from my assemblies will align to zero or one representative sequence with identity > 90% and coverage > 90%. Due to heuristics, I would not be surprised if there were a couple of such proteins, but with one standing out in terms of identity %. ## Current behavior. Some of the proteins align to many (more than 100) representative sequences with pident over 90%. ### Default easy-cluster. ```mmseqs easy-cluster uhgp-100/uhgp-100.faa easy-cluster/uhgp90 tmp --cov-mode 1 -c 0.8 --kmer-per-seq 80 --min-seq-id 0.9 ```. A single protein aligns up to 147 representative sequences with average pident of 97%. ### Cluster reassign. ```mmseqs easy-cluster uhgp-100/uhgp-100.faa cluster-reassign/uhgp90 tmp --cov-mode 1 -c 0.8 --kmer-per-seq 80 --min-seq-id 0.9 --cluster-reassign```. A single protein aligns up to 164 representative sequences with average pident of 97%. ### Single-step clustering. ```mmseqs easy-cluster uhgp-100/uhgp-100.faa single-step-clustering/uhgp90 tmp --cov-mode 1 -c 0.8 --kmer-per-seq 80 --min-seq-id 0.9 --single-step-clustering```. A single protein aligns up to ",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/612#issuecomment-1322374871:719,redundant,redundant,719,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/612#issuecomment-1322374871,1,['redundant'],['redundant']
Availability,"I am not 100% sure what you want, from here there are multiple ways you can go for downstream processing:. * You can use `unpackdb` to split a database into separate files; * You can use `createsubdb` to get only a smaller subset based on a list of database keys ; * You can use `view` to extract a single entry. For `createsubdb` and `view` you need to give the internal database identifiers (keys). You can get those from the `seqdumpDB.lookup` file. You can grep for your FASTA accession in the second column and take the number from the first column for `view`'s `--id-list` parameter or `createsubdbs` first input file. `unpackdb` will name the files based on this internal identifier, if no `.lookup` file is present. You can copy/symlink the `.lookup` file from the `seqdumpDB` to the `DB_clu_seq` to get better names, as these share the same database keys:; ```; ln -s seqdumpDB.lookup DB_clu_seq.lookup; mmseqs unpackdb DB_clu_seq unpackdir; ````",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/429#issuecomment-811947501:83,down,downstream,83,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/429#issuecomment-811947501,1,['down'],['downstream']
Availability,"I am not sure how the linuxbrew maintenance works. I think they occasionally merge back hombrew-core master into their repository. The new release is in homebrew-core, so it should appear sometime soonish in linuxbrew. Does the new release also work when you change the k-mer size?",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/189#issuecomment-483620666:32,mainten,maintenance,32,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/189#issuecomment-483620666,1,['mainten'],['maintenance']
Availability,"I am not sure how to tackle this, if this is indeed a NFS problem there is very little we can do. I would recommend to keep the temp directory (in this case `/pbi/flash/dportik/mmseqs`) on a local disk instead of NFS at least. The largest temporary database that should be created is this `pref_0` database everything else should be quite a bit smaller.; You can very roughly estimate its size with:; ```; numQueries * avgResultListLength * splits * 20 byte; ```; * `numQueries` are the query fragments left after the initial fast rejection stage (>300M down to 55.2M; see line ""Query database size: *55235334* type: Aminoacid"" in the second `prefilter` invocation).; * For `avgResultListLength` see e.g. ""*37* sequences passed prefiltering per query sequence"".; * For `splits` see e.g. ""Starting prefiltering scores calculation (step 1 of *8*)""; * 20 bytes per line in the prefiltering result. Resulting in about `55 * 10^6 * (40 * 8) * 20 byte ~= 325GB` total. Summing up sizes of the `pref_0_tmp_{0..7}` files (260GB) this seems to be about the right order of magnitude. . I agree that we need some lower level flow charts that explain more in detail what happens inside this module. I'll add some more details to the wiki soon.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/423#issuecomment-796297988:554,down,down,554,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/423#issuecomment-796297988,1,['down'],['down']
Availability,"I am not sure if that makes sense. Our alignments are always local and furthermore `result2msa` will never generate gap columns in the query(/representative) sequence. So the MSAs will never contain unaligned regions. You should also not add `--add-self-matches` that option only makes sense with clustering, where the query database is the same as the target database. ```; mmseqs search PROFILEDB /databases/fadb/freeze/all.mmseqs pbp.found_with_profile tmp --threads 10 -a -c 0.8 --cov-mode 2 ; mmseqs result2msa PROFILEDB /databases/fadb/freeze/all.mmseqs pbp.found_with_profile msa --threads 10; ```. This should already do what you want without adding further complicated steps. For downstream analysis you can use the `apply` module that will call an external program on each individual entry (passing the entry to stdin and writing the result from stdout to a new database). Or you could use the `ffindex_unpack` binary from the hh-suite to create separate files for each database entry.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/153#issuecomment-459320456:689,down,downstream,689,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/153#issuecomment-459320456,1,['down'],['downstream']
Availability,"I am not sure we deal well with 50-mers, the default nucleotide k-mer size is 14 or 15 (depending on the database size). ; Also, we have predefined spaced-kmer patterns only up to 30-mers, after that no spaced-kmers are used anymore.; Could you check if something more sensible happens if you leave out the k-mer size parameter?. We have commented out debug code interspersed in a lot of places to track down issues like that, however that's not very easy to use. Could you try to rule out the k-mer size issue first?",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/489#issuecomment-923016729:404,down,down,404,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/489#issuecomment-923016729,1,['down'],['down']
Availability,"I am still not 100% sure why the shared zstd works in debian. We use the zstd function `ZSTD_findDecompressedSize` that should only be available if `ZSTD_STATIC_LINKING_ONLY` is set and therefore zstd is linked statically. ; I just spent a few minutes trying to figure out how debian defeats this check, but didn't find where they do that. As we can't make sure that every native libzstd package does something similar, it's probably more appropriate to have distributions patch that themselves if they are confident it will work out fine. If `ZSTD_findDecompressedSize` becomes part of the stable zstd api, then we can provide as `USE_SYSTEM_ZSTD` option. Regarding xxhash I am very uncomfortable to encourage anyone to provide their own library. xxhash is a central part of the linclust algorithm and we have extensive tests to make sure that linclust produces exactly the same results on every platform/distribution/architecture. I think scientific reproducibility outweighs other concerns for our software.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/411#issuecomment-777511188:135,avail,available,135,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/411#issuecomment-777511188,1,['avail'],['available']
Availability,I am trying to reproduce the issue but can't manage to. Could you upload the files somewhere (or at least a small subset that also fails with this error message)?,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/334#issuecomment-665645856:147,error,error,147,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/334#issuecomment-665645856,1,['error'],['error']
Availability,"I appear to be getting a similar error: . ```; $ mmseqs clusterupdate --min-seq-id 0.9 -c 0.8 ../tests/output_n10/genes/cluster/genes_db /ebio/abt3_scratch/nyoungblut/user_genes/genes_db ../tests/output_n10/genes/cluster/clusters_db /ebio/abt3_scratch/nyoungblut/cluster_updated/genes_db /ebio/abt3_scratch/nyoungblut/cluster_updated/clusters_db.0 /ebio/abt3_scratch/nyoungblut/cluster_update; clusterupdate --min-seq-id 0.9 -c 0.8 ../tests/output_n10/genes/cluster/genes_db /ebio/abt3_scratch/nyoungblut/user_genes/genes_db ../tests/output_n10/genes/cluster/clusters_db /ebio/abt3_scratch/nyoungblut/cluster_updated/genes_db /ebio/abt3_scratch/nyoungblut/cluster_updated/clusters_db.0 /ebio/abt3_scratch/nyoungblut/cluster_update. MMseqs Version: 	11.e1a1c; Seq. id. threshold 	0.9; Coverage threshold 	0.8. ===================================================; === Update the new sequences with the old keys ====; ===================================================; ===================================================; ====== Filter out the new from old sequences ======; ===================================================; ===================================================; ======= Extract representative sequences ==========; ===================================================; result2repseq /ebio/abt3_projects/software/dev/Struo2/tests/output_n10/genes/cluster/genes_db /ebio/abt3_projects/software/dev/Struo2/tests/output_n10/genes/cluster/clusters_db /ebio/abt3_scratch/nyoungblut/Struo2_122419461619/cluster_update/7316799743718053916/OLDDB.repSeq. Invalid database read for database data file=/ebio/abt3_projects/software/dev/Struo2/tests/output_n10/genes/cluster/clusters_db, database index=/ebio/abt3_projects/software/dev/Struo2/tests/output_n10/genes/cluster/clusters_db.index; 31mInvalid database read for database data file=/ebio/abt3_projects/software/dev/Struo2/tests/output_n10/genes/cluster/clusters_db, database index=/ebio/abt3_projects/software/dev/Struo2/tests/output_n10/g",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/272#issuecomment-662482914:33,error,error,33,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/272#issuecomment-662482914,1,['error'],['error']
Availability,"I built mmseqs from the latest Git and the issue is solved. There is now another warning. ```; there must be an error: 37 deleted from 4 that now is empty, but not assigned to a cluster; there must be an error: 49 deleted from 80 that now is empty, but not assigned to a cluster; there must be an error: 42 deleted from 52 that now is empty, but not assigned to a cluster; there must be an error: 42 deleted from 27 that now is empty, but not assigned to a cluster; there must be an error: 128 deleted from 120 that now is empty, but not assigned to a cluster; Total time: 0h 0m 0s 170ms; ```. Interestingly it only happens at 50% level. Not 30% or 70%. Let me know if you identify it as a problem.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/700#issuecomment-1591903096:112,error,error,112,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/700#issuecomment-1591903096,5,['error'],['error']
Availability,I called it like that:; ```; mmseqs createdb fasta DB; mmseqs createindex DB; mkdir tmp; mmseqs search DB DB resultDB tmp -a -s 7.5 --mask 0 --comp-bias-corr 0; mmseqs convertalis DB DB resultDB resultDB.m8; ```. And here is the stdout:; ```; Program call:; /.../fasta.txt DB . MMseqs Version: 	e2c8166b292d5e65271887cf4af568f32b346dd2; Max. sequence length 	32000; Split Seq. by len 	true; Use fasta header 	false; Offset of numeric ids	0; Verbosity 	3. Time for merging files: 0 h 0 m 0 s; Time for merging files: 0 h 0 m 0 s; Program call:; DB . MMseqs Version: 	e2c8166b292d5e65271887cf4af568f32b346dd2; Sub Matrix 	blosum62.out; K-mer size 	0; Alphabet size 	21; Max. sequence length	32000; Mask Residues 	1; Split DB 	0; Spaced Kmer 	1; Threads 	4; Verbosity 	3. Substitution matrices...; Use kmer size 6 and split 1 using split mode; Index table: counting k-mers...; ........WARNING: Sequence (dbKey=82431) contains only ATGC. It might be a nucleotide sequence.; ..WARNING: Sequence (dbKey=102237) contains only ATGC. It might be a nucleotide sequence.; WARNING: Sequence (dbKey=105125) contains only ATGC. It might be a nucleotide sequence.; WARNING: Sequence (dbKey=105031) contains only ATGC. It might be a nucleotide sequence.; WARNING: Sequence (dbKey=105583) contains only ATGC. It might be a nucleotide sequence. Index table: Masked residues: 239357; Index table: fill...; ..........; Index table: removing duplicate entries...; Index table init done. Write 10; Write 20; Write 60; Write 70; Write 80; Write 30; Write 40; Write 5; Write 0; Write MMSEQSFFINDEX ; Time for merging files: 0 h 0 m 0 s; Done. ; Program call:; DB DB resultDB tmp -a -s 7.5 --mask 0 --comp-bias-corr 0 . MMseqs Version: 	e2c8166b292d5e65271887cf4af568f32b346dd2; Sub Matrix 	blosum62.out; Add backtrace 	true; Alignment mode 	0; E-value threshold 	0.001; Seq. Id Threshold 	0; Coverage threshold 	0; Max. sequence length 	32000; Max. results per query 	300; Compositional bias 	0; Profile 	false; Realign hit 	,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/12#issuecomment-275642021:134,mask,mask,134,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/12#issuecomment-275642021,2,"['Mask', 'mask']","['Mask', 'mask']"
Availability,"I can reproduce both of these issue, I'll fix them hopefully later today. Still quite puzzled where the error `Alignment format is not supported!` came from though.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-774090365:104,error,error,104,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-774090365,1,['error'],['error']
Availability,"I can't reproduce asan errors (on a simple search at least, the `run_search.sh` script in our regression). With neither gcc-12 nor clang-15. . I enabled the following asan options:; ```; ASAN_OPTIONS=abort_on_error=1:strict_string_checks=1:detect_stack_use_after_return=1:check_initialization_order=1:strict_init_order=1; ```",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/661#issuecomment-1408982829:23,error,errors,23,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/661#issuecomment-1408982829,2,['error'],['errors']
Availability,"I created an index for UniRef90 using `--split 4`, which produced 4 splits and required ~70G of memory to generate. Now I'm trying to run `mmseqs search` on that target database with the associated idx that I just created. My `mmseq search` cluster jobs all die (even when providing up to 200G of memory) with the following error: . ```; Failed to mmap memory dataSize=58928025600 File=/ebio/abt3_scratch/nyoungblut/Struo2_255873462447/humann3_search/mmseqs_search_db/db.idx. Error 12; ```. According to the error message, the database size is < 100G, so why am I getting an `mmap` error? . I also get this error when using `--db-load-mode 1`, which should use fread instead of mmap, according to the help docs, so I don't understand why I'm still getting the `Failed to mmap memory` in that situation. . I'm using mmseq2 12.113e3. The `mmseqs search` jobs complete successfully when running them locally (a server with plenty of memory). It appears to be something specific to the SGE cluster. Both local and cluster nodes are running `Ubuntu 18.04.5`",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/338#issuecomment-739947702:324,error,error,324,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/338#issuecomment-739947702,5,"['Error', 'error']","['Error', 'error']"
Availability,"I did what you suggested. It worked well. Thanks. On Fri, Jul 10, 2020, 16:44 Milot Mirdita <notifications@github.com> wrote:. > We introduced the module after the 11th release. It will be part of the; > next one.; >; > You can either use the non ""easy"" workflow, i.e. something like:; >; > mmseqs createdb query.fasta qdb; > mmseqs createdb target.fasta tdb; > mmseqs rbh qdb tdb res tmp; > mmseqs convertalis qdb tdb res res.m8; >; > or you can either download precompiled binaries from the latest git commit; > at https://mmseqs.com/latest or build the code from source.; >; > —; > You are receiving this because you authored the thread.; > Reply to this email directly, view it on GitHub; > <https://github.com/soedinglab/MMseqs2/issues/332#issuecomment-656621988>,; > or unsubscribe; > <https://github.com/notifications/unsubscribe-auth/AE545CK2WHJAOVZ6JC27IUDR23Z2BANCNFSM4OWPFQCA>; > .; >",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/332#issuecomment-656969705:454,down,download,454,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/332#issuecomment-656969705,1,['down'],['download']
Availability,"I didn't add the RefSeq yet, since it's kind of annoying to work with (no single FASTA download available) and I thought that the NR, NT or Uniprot would cover most use-cases already. I might take another look at the RefSeq in the next few days. No promises though for now. By the way, if you want a set of stickers (see https://twitter.com/thesteinegger/status/1201076220957315074), send me your address to milot at mirdita de.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/271#issuecomment-584098056:87,down,download,87,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/271#issuecomment-584098056,2,"['avail', 'down']","['available', 'download']"
Availability,"I don't know your exact use-case and if this is actually important for you, I am just warning you that how you are currently using MMseqs2, might be a bit problematic with this specific target database. The results you are already getting with your current usage might already by completely fine for your current use-case. I will just explain what you could do if you might want more ""complete"" results. Furthermore, this is unrelated to the stability problem (that one should now be solved). The very redundant target database you are using is a bit of a weak point in MMseqs2. ; The MMseqs2 prefiltering module reports all the best double-consecutive-kmer matches either down to the `--min-ungapped-score` threshold or as many as `--max-seqs` allows. The `--min-ungapped-score` criterion removes many hits that could never reach a good E-value anyway. . The `--max-seqs` parameters prevents a explosion of disk space while accepting the risk of losing some redundant hits. This is not that much of a problem since we normally search against the representatives of a clustered database, which are sufficiently dissimilar to not enter this case. Now you have a target database with many very similar sequence and will run into this case. The effect is that a good (maybe even the best) hit in the target database might not be found, since its outside the limit given by `--max-seqs`. We have a different search mode that accepts some inefficiency, while dealing with correctly with very redundant database and you can access this mode by passing the `--slice-search` parameter to either `easy-search` or `search`.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/277#issuecomment-597651917:502,redundant,redundant,502,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/277#issuecomment-597651917,4,"['down', 'redundant']","['down', 'redundant']"
Availability,"I downloaded NR on Jan 31, '17, and below is a single query sequence with correct output.; Let me know if there is anything else I can do to help. ```fasta; >TRINITY_DN100687_c2_g1_i1|m.89044 TRINITY_DN100687_c2_g1_i1|g.89044 ORF type:3prime_partial len:642 (+) TRINITY_DN100687_c2_g1_i1:370-2292(+); MKAFRDVVDQYDLSVLQMNFAATDPLFSSKKLHPDVFSLIPSFESLNTAIVHFFKKFNIK; RVGILFTTEFDFSSSDSEVKVVKHLNQVFKENNIEIVREISYQSKYLSRNDFFLSNKSKM; DLSQKLQEFKNEDIRIIVGVFREHNLKDVMCEAYKHNMTGSKYLWIISNYNLDIKFHERK; DTECTAAELSEASKNILFPRRVAKRLDYNTTIAEITGDEVWELIKEKRRTIEKKTVLEYN; DRSLYAYDTVWAVALALDRVIKKYNYTEDSFSYDHIDTSKNLIEEMEKVSYQGASGFIRF; GHNQRGRTVDYTKFEIYGINGTFTHVGTYDMVRDDIDYNLSYQKQLFSKDYRIPVDGIRT; TQLPEKFATTTVVLLWSFAVLATCLSLFFLAFNVSYRKELLIKMSSPNINNLIVAGCILC; YLAVVLYGLDAELINMNRIPMVCDAVVFCLTFGFTLAFGALFSKTWRIYRIFTSARTLQV; IVIKDFHLFGVIFFMLCLDSVILTIWMLTSPYELKIETVNFQVHADVDQIDETVIYRCSC; ELQLQFGVALFLYKGILLIFGLFLAWETRNIKVTAINDSKNIGLAVYNVGVLASIGSICS; LALYQTTFYTELYVVFALCILFCTTLTVMLVFVPKVIMKYK; ```. ```; TRINITY_DN100687_c2_g1_i1|m.89044	XP_012555926.1	0.334	772	214	0	0	636	0	772	1.44E-107	398; TRINITY_DN100687_c2_g1_i1|m.89044	XP_001638672.1	0.314	760	201	0	0	636	0	760	4.79E-95	357; TRINITY_DN100687_c2_g1_i1|m.89044	KXJ17628.1	0.323	707	207	0	0	636	0	707	2.91E-92	347; TRINITY_DN100687_c2_g1_i1|m.89044	XP_015754102.1	0.284	791	182	0	0	636	0	791	7.18E-83	316; TRINITY_DN100687_c2_g1_i1|m.89044	XP_015754103.1	0.284	791	182	0	0	636	0	791	7.18E-83	316; TRINITY_DN100687_c2_g1_i1|m.89044	XP_015754099.1	0.284	791	182	0	0	636	0	791	7.18E-83	316; TRINITY_DN100687_c2_g1_i1|m.89044	XP_015754100.1	0.284	791	182	0	0	636	0	791	7.18E-83	316; TRINITY_DN100687_c2_g1_i1|m.89044	XP_017103726.1	0.295	715	189	0	0	636	0	715	2.16E-79	305; TRINITY_DN100687_c2_g1_i1|m.89044	XP_017103725.1	0.295	715	189	0	0	636	0	715	2.16E-79	305; TRINITY_DN100687_c2_g1_i1|m.89044	XP_014766215.1	0.294	716	188	0	0	637	0	716	2.82E-79	304; TRINITY_DN100687_c2_g1_i1|m.89044	XP_001953981.1	0.294	716	188	0	0	637	0	716	2.82E-79	304; TRINITY_DN100687_c2_g1_i1|m.8",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/16#issuecomment-278948273:2,down,downloaded,2,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/16#issuecomment-278948273,1,['down'],['downloaded']
Availability,"I downloaded all NCBI phages and was able to trigger this error with them. MMseqs Version: 15.6f452. mmseqs search --search-type 3 -c 0.5 -v 3 --cov-mode 2 --alignment-mode 3 --threads 8 --headers-split-mode 1 --sort-results 1 --max-seq-len 10000000 --db-load-mode 2 /home/ubuntu/NCBI-phages-20231219.fa /home/ubuntu/allDB /home/ubuntu/mmseqs-results.tab /tmp/tmpbvzkw379. Input database ""/home/ubuntu/NCBI-phages-20231219.fa"" has the wrong type (Generic); Allowed input:; - Index; - Nucleotide; - Profile; - Aminoacid",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/429#issuecomment-1865071906:2,down,downloaded,2,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/429#issuecomment-1865071906,2,"['down', 'error']","['downloaded', 'error']"
Availability,I downloaded the latest official release (MMseqs2 Release 8-fac81) and everything works with that one.,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/195#issuecomment-485932290:2,down,downloaded,2,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/195#issuecomment-485932290,1,['down'],['downloaded']
Availability,"I encountered the `orf filter prefilter died` issue today. I suspect it might be due to insufficient memory available to the program, even though there was no indication of memory shortage. According to the MMseqs2 documentation, the program should automatically analyze the available memory and split the data accordingly to meet memory requirements. However, I suspect the program did not correctly identify the maximum memory I allocated for my task submitted to HPC (via `qsub`), and it may have mistakenly considered the total available memory in HPC as the memory accessible for the current task. I resolved this issue by adding the parameter `--split-memory-limit 80G`. Hope this helps you.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/556#issuecomment-1882560536:108,avail,available,108,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/556#issuecomment-1882560536,3,['avail'],['available']
Availability,"I encountered the same issue while working with mmseqs version [14-7e284](https://github.com/soedinglab/MMseqs2/tree/14-7e284) and GTDB r214, using a Linux server (Ubuntu 22.04 LTS; CPU with SSE/AVX2 support and 512 GB RAM). Although there is a lot of overlap with the post by @mlcoleman previously and the discussion by @mherold1 , I include some details below about the problems I ran into and how I addressed them. ## Problem description; After making a seqdb for the GTDB, there seems to be a collision of genome IDs between different genomes in the seqdb's `gdtb.lookup` file. As mentioned by @mlcoleman , these ID collisions seem to disrupt mmseqs taxonomy workflows downstream. ## Steps to reproduce; 1. Download `gtdb.tar.gz` as done in the `data/workflow/databases.sh` script (or you can just run: `wget -o gdtb.tar.gz https://data.ace.uq.edu.au/public/gtdb/data/releases/latest/genomic_files_reps/gtdb_proteins_aa_reps.tar.gz`); 2. Import `gtdb.tar.gz` as a tardb via `mmseqs tar2db gtdb.tar.gz tardb --tar-include 'faa.gz$'`; 3. Run `mmseqs createdb tardb gtdb`. `mmseqs createdb` finishes without error, but the resulting `gtdb.lookup` file seems to assign the wrong genome IDs (resulting in ID collisions) for any genomes with an ID over 65535. Meanwhile, the correct IDs seem to be assigned in `gtdb.source`. #### For example:. Last few lines of `gtdb.source` (`tail gtdb.source`):; ```; 85195 RS_GCF_014201515.1; 85196 RS_GCF_003977665.1; 85197 RS_GCF_007922615.2; 85198 GB_GCA_002389765.1; 85199 RS_GCF_001440475.1; 85200 GB_GCA_015059865.1; 85201 GB_GCA_900546895.1; 85202 GB_GCA_017621015.1; 85203 GB_GCA_015486425.1; 85204 GB_GCA_934565415.1; ```; It seems like the left column is the genome ID, and the right column is the genome name in the GTDB. Everything seems OK with this file. Last few lines of `gtdb.lookup` (`tail gtdb.lookup`); ```; 256163105 CAKTHQ010000047.1_16 19668; 256163106 CAKTHQ010000050.1_5 19668; 256163107 CAKTHQ010000052.1_8 19668; 256163108 CAKTHQ010000056.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/729#issuecomment-1691160625:673,down,downstream,673,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/729#issuecomment-1691160625,2,"['Down', 'down']","['Download', 'downstream']"
Availability,"I experience the same problem. After running linclust and extracting the representative sequences, I have duplicate IDs; ```; >k99_9972_2 # 266 # 886 # 1 # ID=81340_2;partial=00;start_type=GTG;rbs_motif=AGGAG;rbs_spacer=5-10bp;gc_cont=0.655; >k99_9972_2 # 500 # 1270 # 1 # ID=10959_2;partial=00;start_type=TTG;rbs_motif=GGxGG;rbs_spacer=5-10bp;gc_cont=0.471; ```; So reads mappings and downstream tools break because of this.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/224#issuecomment-1205142810:386,down,downstream,386,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/224#issuecomment-1205142810,1,['down'],['downstream']
Availability,"I figure out that I have a lot of file as `subsetMSA_ca3m.ffdata.{NUMBER}`, but only `subsetMSA_ca3m.ffdata.0` has data. ; So I remove all other files and rename `subsetMSA_ca3m.ffdata.0` to `subsetMSA_ca3m.ffdata`. I got other error.; command: ; `cstranslate -i subsetMSA_ca3m.ffdata -o subsetMSA_cs219 -A /home/linuxbrew/anaconda3/data/cs219.lib -D /home/linuxbrew/anaconda3/data/context_data.lib -x 0.3 -c 4 -I ca3m`; error:; ```; Reading context library for pseudocounts from context_data.lib ...; Reading abstract state alphabet from cs219.lib ...; malloc(): memory corruption; Aborted (core dumped); ```",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/174#issuecomment-484672522:228,error,error,228,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/174#issuecomment-484672522,2,['error'],['error']
Availability,"I fixed the taxonomy issue, we were using an unsigned short for the source file names. This changes was introduced a while ago and I had forgotten that we use this mechanism in GTDB and that this number can become large. Taxonomy should work now and thanks to @apcamargo downloads should also work (#742). . If you have an existing gtdb.lookup file, the following `awk` script should fix it in theory:. ```; awk 'BEGIN { threshold = 65535 } $3 == threshold && increment == 0 { increment = 1 } $3 == 0 && increment == 1 { increment = 0; overflow++; } { print $1""\t""$2""\t""$3 + (overflow * (threshold + 1)); }' gtdb.lookup > gtdb_fixed.lookup; mv gtdb_fixed.lookup gtdb.lookup; ```. However, I might have gotten it also wrong. I'd recommend to redownload with the latest MMseqs2 with the source fix included.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/729#issuecomment-1693307274:271,down,downloads,271,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/729#issuecomment-1693307274,1,['down'],['downloads']
Availability,"I fixed this issue recently in https://github.com/soedinglab/MMseqs2/issues/379. It will be part of the next release, which should happen somewhat soonish. In the meantime you can use the static precompiled binaries available at https://mmseqs.com/latest/.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/399#issuecomment-767474520:216,avail,available,216,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/399#issuecomment-767474520,1,['avail'],['available']
Availability,I found one memory issue when giving only extremely short sequences to MMseqs2.; You can probably work around this issue in release 13 by adding one fake sequence that is longer than 20 AA residues to the input file. . I would also recommend to use the following parameters `-k 5 --spaced-kmer-mode 0 --comp-bias-corr 0 --mask 0` for clustering such extremely short sequences. You might also want to add `-e inf` as E-values are essentially meaningless for such short sequences. In this case you would only cluster based on seq. id. and coverage.,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/449#issuecomment-833923971:322,mask,mask,322,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/449#issuecomment-833923971,1,['mask'],['mask']
Availability,"I found the issue, our split logic is indeed faulty and corrupting unrelated memory. ; We'll discuss the issue and try to resolve it.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/208#issuecomment-497726790:45,fault,faulty,45,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/208#issuecomment-497726790,1,['fault'],['faulty']
Availability,"I get the same type of error when using the parallel MPI version with ""RUNNER=mpirun -np 8"" . I only encountered this error while testing. I ideally would like to use a cluster configuration but will not be able to if this error persists.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/284#issuecomment-594847367:23,error,error,23,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/284#issuecomment-594847367,3,['error'],['error']
Availability,"I got a similar error with itsmisterbrown that **the LCA step dies due to a segmentation fault**. Here is my command line. And I also attached my log and error files.; [out.txt](https://github.com/soedinglab/MMseqs2/files/13608231/out.txt); [err.txt](https://github.com/soedinglab/MMseqs2/files/13608232/err.txt). ```; mmseqs easy-taxonomy \; test.fasta nr.smag.mmetsp.gvog.faaDB \; DB_NR.SMAG.DB_tax_result_test \; tmp \; --orf-filter 0 \; --threads 16 \; --lca-ranks superkingdom,phylum,class,order,family,genus \; --split-memory-limit 500G; ```. Please help me to find out what wrong with my command.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/703#issuecomment-1846457170:16,error,error,16,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/703#issuecomment-1846457170,3,"['error', 'fault']","['error', 'fault']"
Availability,"I got same error,how to fix? or fake_prefilter can not support for mmseqs search?",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/643#issuecomment-1614832031:11,error,error,11,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/643#issuecomment-1614832031,1,['error'],['error']
Availability,"I got the same error but in different place, I ran local colabfold API Server, the error message is . Invalid database read for database data file=/data/colabFold/MsaServer/databases/uniref30_2202_db.idx, database index=/data/colabFold/MsaServer/databases/uniref30_2202_db.idx.index; getData: local id (4294967295) >= db size (22). Thanks",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/616#issuecomment-1536475039:15,error,error,15,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/616#issuecomment-1536475039,2,['error'],['error']
Availability,"I guess we could remove the arm subfolder, however it's already part of the git history anyway, so it doesn't change that much anymore. It would be nice to have a repo similar to `simde-no-tests`, but I don't want these to become a maintenance burden for you.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/pull/389#issuecomment-756104658:232,mainten,maintenance,232,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/pull/389#issuecomment-756104658,1,['mainten'],['maintenance']
Availability,"I have a few missing fields in my taxonomy levels. I'm assuming that's what is causing this error: . ```; easy-taxonomy test_euk.fasta MicroEuk100.eukaryota_odb10 test_results/tax tmp/. MMseqs Version: 	14.7e284; ORF filter 	0; ORF filter e-value 	100; ORF filter sensitivity 	2; LCA mode 	3; Majority threshold 	0.5; Vote mode 	1; LCA ranks; Column with taxonomic lineage 	0; Compressed 	0; Threads 	128; Verbosity 	3; Taxon blacklist 	12908:unclassified sequences,28384:other sequences; Substitution matrix 	aa:blosum62.out,nucl:nucleotide.out; Add backtrace 	false; Alignment mode 	0; Alignment mode 	0; Allow wrapped scoring 	false; E-value threshold 	0.001; Seq. id. threshold 	0; Min alignment length 	0; Seq. id. mode 	0; Alternative alignments 	0; Coverage threshold 	0; Coverage mode 	0; Max sequence length 	65535; Compositional bias 	1; Compositional bias 	1; Max reject 	2147483647; Max accept 	2147483647; Include identical seq. id. 	false; Preload mode 	0; Pseudo count a 	substitution:1.100,context:1.400; Pseudo count b 	substitution:4.100,context:5.800; Score bias 	0; Realign hits 	false; Realign score bias 	-0.2; Realign max seqs 	2147483647; Correlation score weight 	0; Gap open cost 	aa:11,nucl:5; Gap extension cost 	aa:1,nucl:2; Zdrop 	40; Seed substitution matrix 	aa:VTML80.out,nucl:nucleotide.out; Sensitivity 	4; k-mer length 	0; k-score 	seq:2147483647,prof:2147483647; Alphabet size 	aa:21,nucl:5; Max results per query 	300; Split database 	0; Split mode 	2; Split memory limit 	0; Diagonal scoring 	true; Exact k-mer matching 	0; Mask residues 	1; Mask residues probability 	0.9; Mask lower case residues 	0; Minimum diagonal score 	15; Selected taxa; Spaced k-mers 	1; Spaced k-mer pattern; Local temporary path; Rescore mode 	0; Remove hits by seq. id. and coverage 	false; Sort results 	0; Mask profile 	1; Profile E-value threshold 	0.001; Global sequence weighting 	false; Allow deletions 	false; Filter MSA 	1; Use filter only at N seqs 	0; Maximum seq. id. thre",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/779#issuecomment-1872491640:92,error,error,92,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/779#issuecomment-1872491640,1,['error'],['error']
Availability,"I have an explanation for the above error message: even though there are TB of free space on the partition I'm using, I had reached my quota... After some spring cleaning, the above `mmseqs createindex uniref90.mms --split 8` command completed successfully! Sorry for the unnecessary last report.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/3#issuecomment-251897402:36,error,error,36,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/3#issuecomment-251897402,1,['error'],['error']
Availability,"I have clustered the swissprot at 90, 70 and 50% and the respective cluster sizes are `326642`, `209899` and `123019`. . ```; # 90%; easy-cluster /Users/mad/Downloads/uniprot_sprot.fasta.gz /tmp/uni_90 /tmp/uni_tmp --min-seq-id 0.9; grep -c "">"" /tmp/uni_90_rep_seq.fasta; 326642. # 70%; mmseqs easy-cluster /Users/mad/Downloads/uniprot_sprot.fasta.gz /tmp/uni_70 /tmp/uni_tmp --min-seq-id 0.7; grep -c "">"" /tmp/uni_70_rep_seq.fasta; 209899. # 50%; mmseqs easy-cluster ~/Downloads/uniprot_sprot.fasta.gz /tmp/uni_50 /tmp/uni_tmp/ --min-seq-id 0.5; grep -c "">"" /tmp/uni_50_rep_seq.fasta; 123019; ```. If you want to know the amount of clusters from the `cluster.tsv` file than you need to count how many identifiers are in the first column. ; E.g. ; `cut -f1 id90_cluster.tsv| uniq | wc -l `",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/220#issuecomment-514063618:157,Down,Downloads,157,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/220#issuecomment-514063618,3,['Down'],['Downloads']
Availability,"I have problems constructing a redundant database that reproduces this issue. Something is odd with this part of the output:; ```; 320.495474 k-mers per position; 1748306 DB matches per sequence; 674 overflows; ```. Can you share some approximate composition/construction of the database so I can try to make something from public data?. I improve the reliability of your own search, I would recommend to cluster your database at a high seq.id./coverage to collapse some of the redundancy. This will speed up the search and probably also not go into the possibly problematic code branch I suspect is causing the issue.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/277#issuecomment-592526278:31,redundant,redundant,31,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/277#issuecomment-592526278,2,"['redundant', 'reliab']","['redundant', 'reliability']"
Availability,I have pushed one fix that might already fix this error. But I will further improve the code.,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/208#issuecomment-498718970:50,error,error,50,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/208#issuecomment-498718970,1,['error'],['error']
Availability,"I have recently migrated the binary server to a different machine since the old one was full. The new server seems to have the issue that the first requests fails and then subsequent requests don't seem to have any issues. I think I have to coordinate with our University IT, I don't see any reason on the server why this should be happening. To fix your CI for now I would recommend to add curl retry flags `curl --retry 5 --retry-all-errors` (or the alternative wget flags). Sorry about this :/",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/706#issuecomment-1557635465:436,error,errors,436,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/706#issuecomment-1557635465,1,['error'],['errors']
Availability,"I have run into a new issue: the UniRef90 indexing and searching having been tested on a 132GB RAM server, I tested the searching on a 64GB RAM node typical of our cluster. My first attempt consisted (retrospectively naively) in using the UniRef90 indexes created (without any --split option) on the 132GB server, which caused a crash after a useful warning `MMseqs processes needs more main memory than available.Increase the size of --split` as seen below in the first output. I therefore attempted to index the database on the 64GB RAM node directly with no explicit --split option, or by specifying`--split 6` (an explicit split is useful to index the database taking into account the fact that some of the cluster nodes have less than the 64GB RAM of the machine I'm indexing on). But this indexing fails with the second output provided below? In fact the indexing fails also without the --split option (see third output below). All tests have been carried out using a compiled mmseqs cloned from a fresh git clone. The work directory has 76TB of free space. I'm really at a loss as to what the `Could not write to data file /` error message might indicate?; - Searching with the oversized index:. ```; -bash-4.2$ mmseqs search subseq_Mms.1 uniref90.mms toto.mms tmp/ --max-seqs 100000 --threads 8 -a true -e 1E-10 -s 1 ; Program call:; subseq_Mms.1 uniref90.mms toto.mms tmp/ --max-seqs 100000 --threads 8 -a true -e 1E-10 -s 1 . MMseqs Version: c5615b34c686b1cf0f200670be8bc6cba76d90f9; Sub Matrix blosum62.out; Add backtrace true; Alignment mode 0; E-value threshold 1e-10; Seq. Id Threshold 0; Coverage threshold 0; Max. sequence length 32000; Max. results per query 100000; Compositional bias 1; Profile false; Realign hit false; Max Reject 2147483647; Detect fragments false; Include identical Seq. Id. false; Threads 8; Verbosity 3; Sensitivity 1; K-mer size 0; K-score 2147483647; Alphabet size 21; Offset result 0; Split DB 0; Split mode 2; Diagonal Scoring 1; Minimum Diagonal score 15;",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/3#issuecomment-251733349:404,avail,available,404,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/3#issuecomment-251733349,1,['avail'],['available']
Availability,"I have similar problem when using mmseqs cluster (version 13.45111) to clustering RNA sequence downloaded from http://ftp.ebi.ac.uk/pub/databases/RNAcentral/current_release/sequences/by-database/rfam.fasta, while mmseqs linclust seems work fine... Really appreciate it if the developer could take a look ...",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/363#issuecomment-1081616830:95,down,downloaded,95,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/363#issuecomment-1081616830,1,['down'],['downloaded']
Availability,I have the same error when running a NT search in mmseq2 NT NCBI database. I am running on our internal server with 256 GB memory.,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/882#issuecomment-2351499214:16,error,error,16,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/882#issuecomment-2351499214,1,['error'],['error']
Availability,I have the same problem.; ## Expected Behavior; I want to download and use the GTDB database with ; ``` ; mkdir databases; mmseqs databases GTDB databases/gtdb databases/tmp_gtdb; ```; ## Current Behavior; The process is killed and the output remains empty.; ``` ; total 12K; -rw-r--r-- 1 user user 0 Aug 4 15:19 gtdb; -rw-r--r-- 1 user user 4 Aug 4 15:19 gtdb.dbtype; -rw-r--r-- 1 user user 0 Aug 4 15:19 gtdb_h; -rw-r--r-- 1 user user 4 Aug 4 15:19 gtdb_h.dbtype; -rw-r--r-- 1 user user 0 Aug 4 15:19 gtdb_h.index; -rw-r--r-- 1 user user 0 Aug 4 15:19 gtdb.index; -rw-r--r-- 1 user user 0 Aug 4 15:19 gtdb.source; drwxr-xr-x 3 user user 4.0K Aug 4 13:37 tmp_gtdb; ``` ; ## MMseqs Output (for bugs); '''; Create directory databases/tmp_gtdb; databases GTDB databases/gtdb databases/tmp_gtdb . MMseqs Version: 13.45111; Force restart with latest tmp false; Remove temporary files false; Compressed 0; Threads 32; Verbosity 3. % Total % Received % Xferd Average Speed Time Time Time Current; Dload Upload Total Spent Left Speed; 100 30 100 30 0 0 21 0 0:00:01 0:00:01 --:--:-- 21; % Total % Received % Xferd Average Speed Time Time Time Current; Dload Upload Total Spent Left Speed; 100 40.2G 100 40.2G 0 0 6909k 0 1:41:44 1:41:44 --:--:-- 5539k; % Total % Received % Xferd Average Speed Time Time Time Current; Dload Upload Total Spent Left Speed; 100 43.1M 100 43.1M 0 0 4473k 0 0:00:09 0:00:09 --:--:-- 8160k; % Total % Received % Xferd Average Speed Time Time Time Current; Dload Upload Total Spent Left Speed; 100 334 100 334 0 0 190 0 0:00:01 0:00:01 --:--:-- 190; tar2db databases/tmp_gtdb/14203905869062371748/gtdb.tar.gz databases/tmp_gtdb/14203905869062371748/tardb --tar-include faa$ --threads 32 -v 3 . Time for merging to tardb: 0h 0m 0s 1ms; Time for merging to tardb.lookup: 0h 0m 0s 2ms; Time for processing: 0h 0m 0s 36ms; createdb databases/tmp_gtdb/14203905869062371748/tardb databases/gtdb --compressed 0 -v 3 . Converting sequences. Time for merging to gtdb_h: 0h 0m 0s 2ms; Time f,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/561#issuecomment-1205418161:58,down,download,58,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/561#issuecomment-1205418161,1,['down'],['download']
Availability,I have tried the search against nucleotide db with the following error:; mmseqs search AthselfDBSEQ_profile Ath resdb tmp; Invalid input database and --search-type combination; queryDbType: Profile; targetDbType: Nucleotide; targetSrcDbType: Nucleotide; searchMode: 0. or with --search-type 3:; mmseqs search AthselfDBSEQ_profile Ath resdb tmp --search-type 3; Invalid input database and --search-type combination; queryDbType: Profile; targetDbType: Nucleotide; targetSrcDbType: Nucleotide; searchMode: 3. Is there any specific search-type when using profile against dna?,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/388#issuecomment-750402275:65,error,error,65,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/388#issuecomment-750402275,1,['error'],['error']
Availability,I have tried to update my clusters with the static compiled verison of mmseq2.; command used for updating clusters. ```; mmseqs clusterupdate old_DB new_DB old_DB_clu new_DB_clu tmp2/; ```. Errors noticed at various levels:. ```; Failed to mmap memory dataSize=0 File=tmp2//NEWDB.newSeqs; Failed to mmap memory dataSize=0 File=tmp2//NEWDB.newSeqs; mv: cannot stat `/tmp2/aln_4': No such file or directory; Failed to mmap memory dataSize=0 File=tmp2//NEWDB.newSeqs; Could not open data file tmp2//newSeqsHits.swapped.all!; awk: cmd. line:1: fatal: cannot open file `tmp2//newSeqsHits.index' for reading (No such file or directory); mv: cannot stat `tmp2//aln_*': No such file or directory; mv: cannot stat `tmp2//pref_*': No such file or directory; mv: cannot stat `tmp2//clu_*': No such file or directory; mv: cannot stat `tmp2//input_*': No such file or directory; Failed to mmap memory dataSize=0 File=tmp2//toBeClusteredSeparately; Failed to mmap memory dataSize=0 File=tmp2//toBeClusteredSeparately; awk: cmd. line:1: fatal: cannot open file `tmp2//clu_redundancy.index' for reading (No such file or directory); Failed to mmap memory dataSize=0 File=tmp2//toBeClusteredSeparately; Could not open data file tmp2//input_step_redundancy!; Could not open data file tmp2//input_step_redundancy!; Could not open data file tmp2//input_step_redundancy!; Failed to mmap memory dataSize=0 File=tmp2//toBeClusteredSeparately; mv: cannot stat `tmp2//clu': No such file or directory; mv: cannot stat `tmp2//clu.index': No such file or directory; ```,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/4#issuecomment-253194194:190,Error,Errors,190,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/4#issuecomment-253194194,1,['Error'],['Errors']
Availability,"I introduced the two additional splits because of https://github.com/soedinglab/MMseqs2/issues/338. Though that wasn't very effective to reduce peak memory use. . The error looks like a memory corruption though. I am not really sure how to reproduce the issue locally. ; Do you still have the tmp files? Could you try rerunning only the last step without the index:. ```; mmseqs result2profile /ebio/abt3_scratch/nyoungblut/LLCDS_126702996474/mmseqs_tax_query/06/seqs_db /ebio/abt3_scratch/nyoungblut/LLCDS_126702996474/mmseqs_tax_target/mmseqs_tax.db /ebio/abt3_scratch/nyoungblut/LLCDS_126702996474/mmseqs_tax/06/TMP/14652724320229658153/tmp_hsp1/11598483508011826746/aln_0 /ebio/abt3_scratch/nyoungblut/LLCDS_126702996474/mmseqs_tax/06/TMP/14652724320229658153/tmp_hsp1/11598483508011826746/profile_0 --sub-mat nucl:nucleotide.out,aa:blosum62.out -e 1e-05 --mask-profile 1 --e-profile 0.1 --comp-bias-corr 1 --wg 0 --allow-deletion 0 --filter-msa 1 --max-seq-id 0.9 --qid 0 --qsc -20 --cov 0 --diff 1000 --pca 0 --pcb 1.5 --db-load-mode 0 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --threads 8 --compressed 0 -v 3; ```. The only change was to remove the `.idx` suffix after `mmseqs_tax.db`.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/432#issuecomment-814300855:167,error,error,167,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/432#issuecomment-814300855,2,"['error', 'mask']","['error', 'mask-profile']"
Availability,"I just hit this as well. The error message doesn't make the formatting problem obvious, but after finding this thread it was a quick and easy fix to manually correct the fasta lines that start with `> ` to begin with `>`. If writing the logic to handle parsing both `> ` & `>` is more trouble than it is worth, revising the error message to indicate that the user may only need to fix the spacing issue and then try again would be very helpful! The file that caused the issue for me was downloaded from a small database maintained by an individual research lab, so I assume the issue was because the fasta file was likely manually updated at some point rather than machine-generated. That's just a suggestion though - I was able to find this thread and solution within easily enough and there seem to be a handful of existing fasta validator tools that could also help users identify the root cause of their issue without internalizing that logic into this suite of tools as well. P.S. thanks for MMSeqs!",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/446#issuecomment-2192800896:29,error,error,29,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/446#issuecomment-2192800896,3,"['down', 'error']","['downloaded', 'error']"
Availability,"I just successfully created, indexed, and searched NR, getting the 'expected' output, using a fresh download of the static build, but on looking at the output it seems that the static build is now at the same version as the last commit on GitHub. Unfortunately, I deleted the older version when I built from source.; Not sure what more I can do to help; the issue was either fixed in the new release or it was user error. Regardless, I'm glad it seems to be working now. I'm pretty excited about your software, so thanks for putting it out there.; -Steve",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/16#issuecomment-278849748:100,down,download,100,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/16#issuecomment-278849748,2,"['down', 'error']","['download', 'error']"
Availability,I just tried the `easy-search` with the same options with this version of MMseqs `dee959908c91eb72a1d91cd1a26303ea71f6e6e6` and got the same error again.,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/79#issuecomment-382469524:141,error,error,141,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/79#issuecomment-382469524,1,['error'],['error']
Availability,"I managed to solve my own problem and it ended up being something very silly. When using the `easy-taxonomy` workflow and getting to:. ```; Error: Lca died; Error: taxonomy died; Error: Search died; ```. My error output showed that my `DB_mapping` was empty. It was was empty because the `awk` command in the `createindex.sh` that populates it didn't find any matches between the `DB.lookup` and `taxidmapping`. This is because the UniProt IDs in the `DB.lookup` were prepended with `UniRef90_`. I guess if I used the full `databases` workflow that might have been removed, but because I needed to do things manually due to working on a cluster where compute nodes have no internet connection it wasn't. . Things are working great now! Thanks for this software!",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/838#issuecomment-2094340496:140,Error,Error,140,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/838#issuecomment-2094340496,4,"['Error', 'error']","['Error', 'error']"
Availability,I meant the SLURM parameter `--cpus-per-task` that is abbreviated to `-c`. Sorry for the confusion. . That seems like an extremely weird error. Is the working directory in which the command is running shared between all nodes (e.g. NFS etc)?,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/455#issuecomment-844021092:137,error,error,137,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/455#issuecomment-844021092,1,['error'],['error']
Availability,"I ran mmseqs2 on the web, choosing all databases and then clicked ""Download M8""; ________________________________; From: Milot Mirdita <notifications@github.com>; Sent: Monday, January 18, 2021 8:46 AM; To: soedinglab/MMseqs2 <MMseqs2@noreply.github.com>; Cc: Mihindukulasuriya, Kathie <mihindu@wustl.edu>; Author <author@noreply.github.com>; Subject: Re: [soedinglab/MMseqs2] interpretation of web mmseqs2 output (#393). * External Email - Caution *. Where exactly did you find this output? I probably should add an explanation there. —; You are receiving this because you authored the thread.; Reply to this email directly, view it on GitHub<https://github.com/soedinglab/MMseqs2/issues/393#issuecomment-762295185>, or unsubscribe<https://github.com/notifications/unsubscribe-auth/ANDVLDNB2TDE2GSSTSCIU6TS2RCU3ANCNFSM4WDGPERA>. ________________________________; The materials in this message are private and may contain Protected Healthcare Information or other information of a sensitive nature. If you are not the intended recipient, be advised that any unauthorized use, disclosure, copying or the taking of any action in reliance on the contents of this information is strictly prohibited. If you have received this email in error, please immediately notify the sender via telephone or return mail.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/393#issuecomment-762298123:67,Down,Download,67,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/393#issuecomment-762298123,2,"['Down', 'error']","['Download', 'error']"
Availability,"I ran the final command (result2profile) in gdb with. ```; gdb --args /mnt/disks/kc-ssd/MMseqs2/build/bin/mmseqs result2profile profiles/CLUSTER_100005_profile /mnt/disks/kc-ssd/GURARB/GURARB_cluster75_reps.idx /tmp/15358673946673749737/aln_0 /tmp/15358673946673749737/profile_0 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' -e 0.001 --mask-profile 1 --e-profile 0.1 --comp-bias-corr 1 --comp-bias-corr-scale 1 --wg 0 --allow-deletion 0 --filter-msa 1 --filter-min-enable 0 --max-seq-id 0.9 --qid '0.0' --qsc -20 --cov 0 --diff 1000 --pseudo-cnt-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --db-load-mode 2 --gap-open aa:11,nucl:5 --gap-extend aa:1,nucl:2 --gap-pc 10 --threads 32 --compressed 0 -v 3; ```. and got the following backtrace via `bt`. ```; (gdb) #0 0x0000555555a8d42b in tantan::Tantan::calcForwardTransitionAndEmissionProbs() (); #1 0x0000555555a8d865 in tantan::Tantan::calcRepeatProbs(float*) (); #2 0x0000555555a8bf8b in tantan::getProbabilities(char const*, char const*, int, double const* const*, double, double, double, double, double, float*) (); #3 0x0000555555a8be7f in tantan::maskSequences(char*, char*, int, double const* const*, double, double, double, double, double, double, char const*) (); #4 0x000055555597de9b in PSSMMasker::mask(Sequence&, float, PSSMCalculator::Profile&) (); #5 0x00005555559f918b in result2profile(int, char const**, Command const&, bool) [clone ._omp_fn.0] (); #6 0x00007ffff7c7c4c2 in GOMP_parallel () from /lib/x86_64-linux-gnu/libgomp.so.1; #7 0x00005555559f86d7 in result2profile(int, char const**, Command const&, bool) (); #8 0x00005555559f887c in result2profile(int, char const**, Command const&) (); #9 0x00005555557ea0d5 in runCommand(Command*, int, char const**) (); #10 0x00005555557eb00a in main (); ```",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/592#issuecomment-1214483106:338,mask,mask-profile,338,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/592#issuecomment-1214483106,3,['mask'],"['mask', 'mask-profile', 'maskSequences']"
Availability,"I re-ran from the very beginning (because it seems the temp files were auto-removed, e.g., `input_step_redundancy`). However, there is no backtrace output.; ```; Time for merging to pref_filter1: 0h 0m 45s 203ms; Time for processing: 0h 1m 56s 417ms; filterdb /export/tmp/MERC-gdb/7812673630337556672/clu_tmp/7630568140984029289/pref_filter1 /export/tmp/MERC-gdb/7812673630337556672/clu_tmp/7630568140984029289/pref_filter2 --filter-file /export/tmp/MERC-gdb/7812673630337556672/clu_tmp/7630568140984029289/order_redundancy --threads 96 --compressed 0 -v 3. Filtering using file(s); [=================================================================] 100.00% 245.75M 2m 6s 123ms; Time for merging to pref_filter2: 0h 2m 13s 365ms; Time for processing: 0h 6m 17s 259ms; rescorediagonal /export/tmp/MERC-gdb/7812673630337556672/clu_tmp/7630568140984029289/input_step_redundancy /export/tmp/MERC-gdb/7812673630337556672/clu_tmp/7630568140984029289/input_step_redundancy /export/tmp/MERC-gdb/7812673630337556672/clu_tmp/7630568140984029289/pref_filter2 /export/tmp/MERC-gdb/7812673630337556672/clu_tmp/7630568140984029289/pref_rescore2 --sub-mat nucl:nucleotide.out,aa:blosum62.out --rescore-mode 1 --wrapped-scoring 0 --filter-hits 1 -e 0.001 -c 0.9 -a 0; --cov-mode 1 --min-seq-id 0.5 --min-aln-len 0 --seq-id-mode 0 --add-self-matches 0 --sort-results 0 --db-load-mode 0 --threads 96 --compressed 0 -v 3. Segmentation fault (core dumped) ] 0.00% 1 eta -; Error: Ungapped alignment step died; Error: Search died; [Inferior 1 (process 161684) exited with code 01]; (gdb) bt; No stack.; ```; Let me know if there is something else I can test.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/323#issuecomment-649892972:1417,fault,fault,1417,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/323#issuecomment-649892972,3,"['Error', 'fault']","['Error', 'fault']"
Availability,"I remember `blastdbcmd` having issues, however, I don't remember what was wrong. We use a different workflow to assign taxids for the NR:; https://github.com/soedinglab/MMseqs2/blob/804bb2af6d1be4086252c46bf15f3c75a5d9e931/data/workflow/databases.sh#L419. The download part for the `accession2taxid` files:; https://github.com/soedinglab/MMseqs2/blob/804bb2af6d1be4086252c46bf15f3c75a5d9e931/data/workflow/databases.sh#L120",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/824#issuecomment-2033435054:260,down,download,260,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/824#issuecomment-2033435054,1,['down'],['download']
Availability,"I reopen this issue because the proposed solution did not solve my problem using another dataset. When I perform a mmseq2 clustering using the parameters --kmer-per-seq 80 and --max-seqs 300 several entries (GCF_002025345.1_ASM202534v1_genomic_04754, GCF_000742655.1_ASM74265v1_genomic_01763, GCF_000793565.1_ASM79356v1_genomic_02850, GCF_000782995.1_ASM78299v1_genomic_04822 and many others) having the same sequence (""MAEITIPLRDVIEVTEDATYAGVEVTSAIRIGTAYGTTDRILIKTVKQNYVLFTTNKVSILNAINA"") are not clustered together. I also tried to add the following parameters: --mask 0 --comp-bias-corr 0 --exact-kmer-matching 1 but it did not cluster together the entries above. I use MMseqs2-3-be8f6. Here is my sequence database: https://drive.google.com/file/d/1mkjX3Y01KecyZuDpQ0Z6H59JMm043ujH/view?usp=sharing. Thank you for your help.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/88#issuecomment-401039024:565,mask,mask,565,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/88#issuecomment-401039024,1,['mask'],['mask']
Availability,I see what is happening. you have to call createindex with `--mask`.; Does this solve your problem?,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/12#issuecomment-275646678:62,mask,mask,62,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/12#issuecomment-275646678,1,['mask'],['mask']
Availability,"I seem to be getting the same error when running `linclust`, but the error seems to occur during the `rescorediagonal` step. The log from my run:. ```; rescorediagonal /tmp/inclust/genes_db /tmp/genes_db /tmp/linclust_tmp/12839115596035141496/pref /tmp/linclust_tmp/12839115596035141496/pref_rescore1 --sub-mat nucl:nucleotide.out,aa:blosum62.out --rescore-mode 0 --filter-hits 0 -e 0.001 -c 0.9 -a 0 --cov-mode 0 --min-seq-id 0.9 --min-aln-len 0 --seq-id-mode 0 --add-self-matches 0 --sort-results 0 --global-alignment 0 --db-load-mode 0 --threads 24 --compressed 0 -v 3. [Invalid database read for database data file=/tmp/linclust/genes_db, database index=/tmp/linclust/genes_db.index; getData: local id (4294967295) >= db size (1084240); Invalid database read for database data file=/tmp/linclust/genes_db, database index=/tmp/linclust/genes_db.index; getData: local id (4294967295) >= db size (1084240); Invalid database read for database data file=/tmp/linclust/genes_db, database index=/tmp/linclust/genes_db.index; getData: local id (4294967295) >= db size (1084240); Invalid database read for database data file=/tmp/linclust/genes_db, database index=/tmp/linclust/genes_db.index; getData: local id (4294967295) >= db size (1084240); Invalid database read for database data file=/tmp/linclust/genes_db, database index=/tmp/linclust/genes_db.index; getData: local id (4294967295) >= db size (1084240); Error: Rescore with hamming distance step died; ```. My linclust job is the following:. ```; mmseqs linclust --threads 24 --min-seq-id 0.90 -c 0.9 --kmer-per-seq 50 /tmp/linclust/genes_db /tmp/linclust/clusters_db /tmp/linclust_tmp/; ```. I'm using `mmseqs2 9.d36de h76f5088_0 bioconda`",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/208#issuecomment-524198971:30,error,error,30,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/208#issuecomment-524198971,3,"['Error', 'error']","['Error', 'error']"
Availability,"I still can't manage to compile the code on our servers. I get many instances of this error (or similar):; ```; lib/simde/simde/x86/avx2.h:718:62: error: cannot convert ‘simd_int {aka __vector(4) long long int}’ to ‘__vector(4) long int’ for argument ‘1’ to ‘__vector(4) long int simde_mm256_cmpeq_epi8(__vector(4) long int, __vector(4) long int)’; ```. Any idea what's happening?. ```; $ gcc -v; Using built-in specs.; COLLECT_GCC=gcc; COLLECT_LTO_WRAPPER=/usr/lib/gcc/x86_64-linux-gnu/5/lto-wrapper; Target: x86_64-linux-gnu; Configured with: ../src/configure -v --with-pkgversion='Ubuntu 5.4.0-6ubuntu1~16.04.12' --with-bugurl=file:///usr/share/doc/gcc-5/README.Bugs --enable-languages=c,ada,c++,java,go,d,fortran,objc,obj-c++ --prefix=/usr --program-suffix=-5 --enable-shared --enable-linker-build-id --libexecdir=/usr/lib --without-included-gettext --enable-threads=posix --libdir=/usr/lib --enable-nls --with-sysroot=/ --enable-clocale=gnu --enable-libstdcxx-debug --enable-libstdcxx-time=yes --with-default-libstdcxx-abi=new --enable-gnu-unique-object --disable-vtable-verify --enable-libmpx --enable-plugin --with-system-zlib --disable-browser-plugin --enable-java-awt=gtk --enable-gtk-cairo --with-java-home=/usr/lib/jvm/java-1.5.0-gcj-5-amd64/jre --enable-java-home --with-jvm-root-dir=/usr/lib/jvm/java-1.5.0-gcj-5-amd64 --with-jvm-jar-dir=/usr/lib/jvm-exports/java-1.5.0-gcj-5-amd64 --with-arch-directory=amd64 --with-ecj-jar=/usr/share/java/eclipse-ecj.jar --enable-objc-gc --enable-multiarch --disable-werror --with-arch-32=i686 --with-abi=m64 --with-multilib-list=m32,m64,mx32 --enable-multilib --with-tune=generic --enable-checking=release --build=x86_64-linux-gnu --host=x86_64-linux-gnu --target=x86_64-linux-gnu; Thread model: posix; gcc version 5.4.0 20160609 (Ubuntu 5.4.0-6ubuntu1~16.04.12); ```",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/pull/309#issuecomment-630106495:86,error,error,86,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/pull/309#issuecomment-630106495,2,['error'],['error']
Availability,"I still cannot make it report at least one score per query after solving issue #283.; Here is the log. search -s 4 --threads 64 -e 100000 --comp-bias-corr 0 --mask 0 /tmp/56067190/queryT.fa.mmsq /tmp/56067190/queryT.fa.mmsq /tmp/56067190/queryT.fa.mmsq.outDB /scratch/jobs/56067190 . MMseqs Version: 	ca58693979f95537016a0454affcfd529dbde24d; Substitution matrix 	nucl:nucleotide.out,aa:blosum62.out; Add backtrace 	false; Alignment mode 	2; Allow wrapped scoring 	false; E-value threshold 	100000; Seq. id. threshold 	0; Min alignment length 	0; Seq. id. mode 	0; Alternative alignments 	0; Coverage threshold 	0; Coverage mode 	0; Max sequence length 	65535; Compositional bias 	0; Realign hits 	false; Max reject 	2147483647; Max accept 	2147483647; Include identical seq. id. 	false; Preload mode 	0; Pseudo count a 	1; Pseudo count b 	1.5; Score bias 	0; Gap open cost 	11; Gap extension cost 	1; zdrop 	40; Threads 	64; Compressed 	0; Verbosity 	3; Seed substitution matrix 	nucl:nucleotide.out,aa:VTML80.out; Sensitivity 	4; k-mer length 	0; k-score 	2147483647; Alphabet size 	nucl:5,aa:21; Max results per query 	300; Split database 	0; Split mode 	2; Split memory limit 	0; Diagonal scoring 	true; Exact k-mer matching 	0; Mask residues 	0; Mask lower case residues 	0; Minimum diagonal score 	15; Spaced k-mers 	1; Spaced k-mer pattern 	; Local temporary path 	; Rescore mode 	0; Remove hits by seq. id. and coverage	false; Sort results 	0; Mask profile 	1; Profile e-value threshold 	0.1; Global sequence weighting 	false; Allow deletions 	false; Filter MSA 	1; Maximum seq. id. threshold 	0.9; Minimum seq. id. 	0; Minimum score per column 	-20; Minimum coverage 	0; Select N most diverse seqs 	1000; Omit consensus 	false; Min codons in orf 	30; Max codons in length 	32734; Max orf gaps 	2147483647; Contig start mode 	2; Contig end mode 	2; Orf start mode 	1; Forward frames 	1,2,3; Reverse frames 	1,2,3; Translation table 	1; Translate orf 	0; Use all table starts 	false; Offset of ",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/281#issuecomment-593953276:159,mask,mask,159,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/281#issuecomment-593953276,1,['mask'],['mask']
Availability,"I still get both cases (example 1 and 2) when using `--mask 0 --comp-bias-corr 0`, if I understand the procedure correctly I shouldn't get cases of example 1 or am I missing something?",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/12#issuecomment-275629860:55,mask,mask,55,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/12#issuecomment-275629860,1,['mask'],['mask']
Availability,"I suspect that `forkmanager` does weird things to the CPU affinity of MMseqs2 (either on purpose or by accident). I wouldn't recommend running multiple MMseqs2 runs in paralle, since the crucial prefiltering step is quite sensitive to the available RAM bandwidth. I would recommend to do one large search that includes all samples in one database. With the recently implemented set ids this will then also become easy to unravel again:; You can use the `qset,qsetid,tset,tsetid` fields in the `convertalis`' `--format-output` parameter to resolve from which input file a result came from.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/214#issuecomment-539010161:239,avail,available,239,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/214#issuecomment-539010161,1,['avail'],['available']
Availability,I think I fixed the same issue recently. You can either compile from git or download the latest statically compiled binaries from mmseqs.com/latest. The fix will be part of the next release that will be available very soon.,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/415#issuecomment-781922599:76,down,download,76,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/415#issuecomment-781922599,2,"['avail', 'down']","['available', 'download']"
Availability,"I think the memory the cluster allocate to me is 250G since I set the header of the .sbatch file as:. ```; #SBATCH -p gpu; #SBATCH --gres=gpu; #SBATCH --cpus-per-task=8; **#SBATCH --mem=250G**. ```. Before I tried this parameter, my command was like:. `mmseqs easy-cluster $OUT/${sample}_subsampled_R2.fastq.gz $OUT tmp --min-seq-id 1`. and it didn't threw me any errors. (But note that I applied the previous command on a subset of my original data (extracted 1 million reads), but I applied the --split-memory-limit parameter on the entire dataset).",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/427#issuecomment-805861838:364,error,errors,364,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/427#issuecomment-805861838,1,['error'],['errors']
Availability,I think this error can happen if there is a space (or possible other whitespace) after the `>` and before the accession.,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/763#issuecomment-1759866280:13,error,error,13,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/763#issuecomment-1759866280,1,['error'],['error']
Availability,"I think we kept default sensitivity. I assume that sensitivity won't help a lot for short sequence search. The sensitivity parameter controls the number of similar k-mers generated for the double-consecutive-kmer-matching in the prefilter. I assume that using too dissimilar k-mers would result in low scores and e-values. Those would then be rejected anyway.; My assumption might be wrong though, I'd appreciate if you could report what you learn. . I don't think ` --exact-kmer-matching` would be useful as that would disable the similar k-mer generation completely. . `--comp-bias-corr 0` and `--mask 0` might be useful though. We suppress false positives homologes with these parameters. However, we didn't benchmark on super short sequences. They might be doing nothing (as both algorithms use a window-approach), they might work correctly or they might be suppressing true useful hits.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/373#issuecomment-728957193:599,mask,mask,599,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/373#issuecomment-728957193,2,['mask'],['mask']
Availability,"I think you can squash everything down to one commit soon. Only a few things remain to do I think. I wrote you in gitter, could you take a look when you have time?",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/pull/309#issuecomment-646683517:34,down,down,34,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/pull/309#issuecomment-646683517,1,['down'],['down']
Availability,"I think you have to download the NT first (e.g. with BLAST's `update_blastdb.pl`) and then you can theoretically use `blastdbcmd` for the remaining commands. However, I am not sure if the procedure described in the wiki still works with NCBI's recent change to the V5 database format. As far as I remember, it shouldn't work anymore. You might still be able to download the V4 format BLAST NT with `update_blastdb.pl`. By the way, the new algorithm described in the preprint currently only works against protein databases. The search against nucleotide databases (such as the NT) still uses the older slower algorithm.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/383#issuecomment-744474518:20,down,download,20,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/383#issuecomment-744474518,2,['down'],['download']
Availability,"I think you have to use the normal `search` workflow instead of the `map` workflow, as `map` uses an ungapped alignment (the `rescorediagonal` module) instead of a real SW (the `align` module). Make sure to also pass `--comp-bias-corr 0 --mask 0` when using the `search` workflow.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/487#issuecomment-920215894:239,mask,mask,239,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/487#issuecomment-920215894,1,['mask'],['mask']
Availability,I took a look at the issue yesterday. The problem should already be fixed in Git. Could you please try downloading the latest statically compiled version or build MMseqs2 yourself?. We will make a new release soon.,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/259#issuecomment-571942512:103,down,downloading,103,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/259#issuecomment-571942512,1,['down'],['downloading']
Availability,"I tried compiling your fork and the error/warning list seems quite daunting. Instead I took a look at what instructions are missing for SSE2 support and found we are using exactly three ones that are only available in SSS3/SSE4.1:; * _mm_shuffle_epi8; * _mm_minpos_epu16; * _mm_extract_epi8. Porting only these instructions back from SIMDe is super easy. For Debian we then would produce only three binaries: mmseqs-sse2 mmseqs-sse41 and mmseqs-avx2. Would that be okay?. How does Debian produce binaries for architectures other than x86(_64), ARM(64) and PPCLE? SIMDe seems to only support those (and ppcle only partially). https://packages.debian.org/sid/mmseqs2 shows a lot of architectures.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/pull/309#issuecomment-629809703:36,error,error,36,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/pull/309#issuecomment-629809703,2,"['avail', 'error']","['available', 'error']"
Availability,"I tried re-making both sequence databases via `mmseqs createdb`, and I now get a longer output, but it still dies with a `No datafile could be found` error. . <details>; <summary>The entire output</summary>. ```; diffseqdbs /ebio/abt3_projects/software/dev/Struo2/tests/output_n10/genes/cluster/genes_db /ebio/abt3_scratch/nyoungblut/Struo2_122419461619/all_genes/genes_db /ebio/abt3_scratch/nyoungblut/Struo2_122419461619/cluster_update/11607510948275416679/removedSeqs /ebio/abt3_scratch/nyoungblut/Struo2_122419461619/cluster_update/11607510948275416679/mappingSeqs /ebio/abt3_scratch/nyoungblut/Struo2_122419461619/cluster_update/11607510948275416679/newSeqs --use-seq-id 0 --threads 12 --compressed 0 -v 3. Time for processing: 0h 0m 0s 96ms; ===================================================; === Update the new sequences with the old keys ====; ===================================================; ===================================================; ====== Filter out the new from old sequences ======; ===================================================; createsubdb /ebio/abt3_scratch/nyoungblut/Struo2_122419461619/cluster_update/11607510948275416679/newSeqs /ebio/abt3_scratch/nyoungblut/Struo2_122419461619/cluster_updated/genes_db /ebio/abt3_scratch/nyoungblut/Struo2_122419461619/cluster_update/11607510948275416679/NEWDB.newSeqs -v 3 --subdb-mode 1. Time for merging to NEWDB.newSeqs: 0h 0m 0s 2ms; Time for processing: 0h 0m 0s 117ms; ===================================================; ======= Extract representative sequences ==========; ===================================================; result2repseq /ebio/abt3_projects/software/dev/Struo2/tests/output_n10/genes/cluster/genes_db /ebio/abt3_projects/software/dev/Struo2/tests/output_n10/genes/cluster/clusters_db /ebio/abt3_scratch/nyoungblut/Struo2_122419461619/cluster_update/11607510948275416679/OLDDB.repSeq. [=================================================================] 34.26K 0s 16ms; Time for merging to OLDDB.r",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/333#issuecomment-663145167:150,error,error,150,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/333#issuecomment-663145167,1,['error'],['error']
Availability,"I tried to reconstruct the command that probably crashed. Could you run it again inside a debugger to recover the backtrace? I have no clue what could have gone wrong so early in the command invocation (the running module had no output at all before it crashed).; 1) Run the following command; ```; gdb --args mmseqs rescorediagonal /export/tmp/MERC/4233864688410091672/input_step_redundancy /export/tmp/MERC/4233864688410091672/input_step_redundancy /export/tmp/MERC/4233864688410091672/clu_tmp/16445679162920043634/pref_filter2 /export/tmp/MERC/4233864688410091672/clu_tmp/16445679162920043634/pref_rescore2 --sub-mat nucl:nucleotide.out,aa:blosum62.out --rescore-mode 1 --wrapped-scoring 0 --filter-hits 1 -e 0.001 -c 0.9 -a 0 --cov-mode 1 --min-seq-id 0.5 --min-aln-len 0 --seq-id-mode 0 --add-self-matches 0 --sort-results 0 --db-load-mode 0 --threads 96 --compressed 0 -v 3; ```; 2) wait for a command prompt; 3) press `r` for run and then enter; 4) wait for the crash; 5) press `bt` for backtrace and then enter; 6) copy the output and paste it here. Thanks a lot for reporting the issue.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/323#issuecomment-649841049:102,recover,recover,102,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/323#issuecomment-649841049,1,['recover'],['recover']
Availability,"I tried to reproduce the issue. The `converalis` step for tblastn searches using an indexed is broken. . ```; mmseqs createdb input_sequence.txt query; mmseqs createdb TAIR10_chr_all.fas target; mmseqs createindex target tmp --comp-bias-corr 0 --mask 0; mmseqs search query target aln_index tmp -e 100.0 --threads 24 -s 8.5 -a --comp-bias-corr 0 --max-seqs 500 --mask 0 --orf-start-mode 1; mmseqs convertalis query target aln_index aln.m8 --format-output query,target,qstart,qend,tstart,tend,qaln,taln; ```. Searching without an index returns the correct results . [result.txt](https://github.com/soedinglab/MMseqs2/files/2659435/result.txt). ```; mmseqs createdb input_sequence.txt query; mmseqs createdb TAIR10_chr_all.fas target; mmseqs search query target aln_index tmp -e 100.0 --threads 24 -s 8.5 -a --comp-bias-corr 0 --max-seqs 500 --mask 0 --orf-start-mode 1; mmseqs convertalis query target aln_index aln.m8 --format-output query,target,qstart,qend,tstart,tend,qaln,taln; ```. I would recommend to search without a index for tblastn searches until this issues is resolved.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/142#issuecomment-445433643:246,mask,mask,246,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/142#issuecomment-445433643,3,['mask'],['mask']
Availability,"I tried using `mmseqs createsubdb` to create *_h and *_h.index files for each split, but that didn't help. I still got the error: . ```; Invalid database read for database data file={DB FILE}; Error: Prefilter died; Error: First search died; ```",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/168#issuecomment-471654371:123,error,error,123,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/168#issuecomment-471654371,3,"['Error', 'error']","['Error', 'error']"
Availability,"I use the source code available [here](https://github.com/soedinglab/MMseqs2/archive/12-113e3.tar.gz). . Here the specs : . Architecture: x86_64; CPU op-mode(s): 32-bit, 64-bit; Byte Order: Little Endian; CPU(s): 36; On-line CPU(s) list: 0-35; Thread(s) par coeur : 1; Coeur(s) par support CPU :18; Socket(s): 2; Noeud(s) NUMA : 2; ID du vendeur : GenuineIntel; Famille CPU : 6; Modèle : 79; Model name: Intel(R) Xeon(R) CPU E5-2697 v4 @ 2.30GHz; Version : 1; CPU MHz : 2300.113; BogoMIPS: 4599.34; Virtualisation : VT-x; L1d cache : 32K; L1i cache : 32K; L2 cache : 256K; L3 cache : 46080K; NUMA node0 CPU(s): 0,2,4,6,8,10,12,14,16,18,20,22,24,26,28,30,32,34; NUMA node1 CPU(s): 1,3,5,7,9,11,13,15,17,19,21,23,25,27,29,31,33,35",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/382#issuecomment-741805975:22,avail,available,22,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/382#issuecomment-741805975,1,['avail'],['available']
Availability,"I used mmseqs databases NR which re-downloaded NR from NCBI and prepared everything as databases which are now working fine. So, not sure why the above didn't work, but the workflow is now moving again.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/701#issuecomment-1546709197:36,down,downloaded,36,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/701#issuecomment-1546709197,1,['down'],['downloaded']
Availability,"I used the following command: . ```; zcat source_taxonomy.tsv.gz | cut -f1,5,6,7,8,9,10 | taxonkit create-taxdump -A 1 -O taxdump/; ```. My file looks like this: . ```; (base) zcat source_taxonomy.tsv.gz | cut -f1,5,6,7,8,9,10 | head; id_source	class	order	family	genus	species	strain; Aalte1	Dothideomycetes	Pleosporales	Pleosporaceae	Alternaria	Alternaria alternata; Aaoar1	Dothideomycetes	Pleosporales		Aaosphaeria	Aaosphaeria arxii; Abobi1	Agaricomycetes	Polyporales	Podoscyphaceae	Abortiporus	Abortiporus biennis; Abobie1	Agaricomycetes	Polyporales	Podoscyphaceae	Abortiporus	Abortiporus biennis; Abscae1	Mucoromycetes	Mucorales	Cunninghamellaceae	Absidia	Absidia caerulea; Absrep1	Mucoromycetes	Mucorales	Cunninghamellaceae	Absidia	Absidia repens; Acain1	Exobasidiomycetes	Exobasidiales	Cryptobasidiaceae	Acaromyces	Acaromyces ingoldii; acanthamoeba_castellanii_str_neff_gca_000313135		Longamoebia	Acanthamoebidae	Acanthamoeba	Acanthamoeba castellanii	Acanthamoeba castellanii str. Neff; Acastr1	Lecanoromycetes	Acarosporales	Acarosporaceae	Acarospora	Acarospora strigata; ```. However, further down in the file there are certain taxonomic fields that are missing. . Once I created my taxdump files. I used the following to convert my MMSEQS sequence database to a taxonomy database: . ```; mmseqs createtaxdb MicroEuk100.eukaryota_odb10 tmp/ --ncbi-tax-dump taxdump/ --tax-mapping-file taxdump/taxid.map; mmseqs createindex MicroEuk100.eukaryota_odb10 tmp/; ```",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/779#issuecomment-1872504249:1101,down,down,1101,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/779#issuecomment-1872504249,1,['down'],['down']
Availability,"I want to do multiple things.; First I want to reduce the redundancy of the DB by filtering out exact duplicates. ""Hashclust"" seems to detect exact duplicates after reducing the alphabet, which might be even better for my use case.; Later, I want to compare different clustering methods, including the ones provided by MMseqs. If I understand the module correctly, ""hashclust"" creates an alignmentDB that includes all exact matches between sequences that have had their alphabet reduced. This alignmentDB can then be used by ""clust"" to cluster the sequences. If I use sequence identity in ""clust"", which can only be 1 or 0 (not listed) when I use ""hashclust"" the resulting clusters should contain only said reduced-alphabet-exact-matches. Is that correct?. **Edit:** It seems that after using ""mmseqs createseqfiledb DB clu clu_seq"" every header in clu_seq containing a cluster representing sequence ID starts with a null byte. I used that to create a fasta file that only contains non-redundant (with regard to ""clusthash"") sequences.; I hope that what I got is what I think I got.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/6#issuecomment-263872227:986,redundant,redundant,986,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/6#issuecomment-263872227,1,['redundant'],['redundant']
Availability,"I'd love to see this option also, particularly in Foldseek (which I guess is somehow downstream of MMseqs2?).",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/505#issuecomment-1696163593:85,down,downstream,85,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/505#issuecomment-1696163593,1,['down'],['downstream']
Availability,"I'm also getting this error. What's the current workaround? . ```bash; Reading LCA results; [=================================================================] 100.00% 3.34M 0s 428ms . Found 34 different taxa for 3340500 different reads.; terminate called after throwing an instance of 'std::out_of_range'; what(): _Map_base::at; /tmp/6531700399628113911/easy-taxonomy.sh: line 39: 138605 Aborted (core dumped) ""$MMSEQS"" taxonomyreport ""${TARGET}"" ""${TMP_PATH}/result_lca"" ""${RESULTS}_report"" ${THREADS_PAR}; Error: taxonomyreport died; ```. EDIT: Same error, new microbe:. <details><summary>Ending error here:</summary>. ```bash; Loading NCBI taxonomy; Loading nodes file ... Done, got 2213844 nodes; Loading merged file ... Done, added 56043 merged nodes.; Loading names file ... Done; Making matrix ... Done; Init RMQ ...Done; Reading LCA results; [=================================================================] 100.00% 2.27K 0s 0ms . Found 2 different taxa for 2272 different reads.; terminate called after throwing an instance of 'std::out_of_range'; what(): _Map_base::at; /tmp/16886106523447294388/easy-taxonomy.sh: line 39: 11990 Aborted ""$MMSEQS"" taxonomyreport ""${TARGET}"" ""${TMP_PATH}/result_lca"" ""${RESULTS}_report"" ${THREADS_PAR}; Error: taxonomyreport died; ```; </details>",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/256#issuecomment-577254067:22,error,error,22,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/256#issuecomment-577254067,5,"['Error', 'error']","['Error', 'error']"
Availability,"I'm also was getting this error earlier...and interestingly only on Linux (seemed to work fine on MacOS for me). Strangely, it now seems to be working again for me since about a 10 minutes ago, despite having the exact same setup as I had when I was getting the error. `MMseqs2 Version: 45111b641859ed0ddd875b94d6fd1aef1a675b7e`",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/871#issuecomment-2284895285:26,error,error,26,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/871#issuecomment-2284895285,2,['error'],['error']
Availability,"I'm confronting same problem.; I tried **convertalis** and **convert2fasta** for the search result, and both commands make error; _'Database resultDB needs header information'._",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/600#issuecomment-1280541009:123,error,error,123,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/600#issuecomment-1280541009,1,['error'],['error']
Availability,"I'm getting a similar segemntation fault with a tblastn-style search against a taxonomy-annotated target database derived from BLAST NT. Interestingly, it looks like the prefilter step calculates the memory consumption at 60T but jumps right into prefiltering instead of splitting the database to handle the ~620G memory limit. I also used the --compressed flag, but will check to see if removing that flag fixes the problem for me too. @milot-mirdita It may be worth re-opening this issue. ```; search query_db/db target_db/db result_db/db /fsx/scratch/mmseqs/mmseqs-nf/d3d8e6be-a51b-4707-b105-d650f029c7be/MMSEQS/BLAST_DB_SEARCH/mmseqs_search -s 6 -a --num-iterations 1 --use-all-table-starts 1 --compressed 1 --split-memory-limit 618475290624 --threads 96 . MMseqs Version: 45111b641859ed0ddd875b94d6fd1aef1a675b7e; Substitution matrix nucl:nucleotide.out,aa:blosum62.out; Add backtrace true; Alignment mode 2; Alignment mode 0; Allow wrapped scoring false; E-value threshold 0.001; Seq. id. threshold 0; Min alignment length 0; Seq. id. mode 0; Alternative alignments 0; Coverage threshold 0; Coverage mode 0; Max sequence length 65535; Compositional bias 1; Max reject 2147483647; Max accept 2147483647; Include identical seq. id. false; Preload mode 0; Pseudo count a 1; Pseudo count b 1.5; Score bias 0; Realign hits false; Realign score bias -0.2; Realign max seqs 2147483647; Gap open cost nucl:5,aa:11; Gap extension cost nucl:2,aa:1; Zdrop 40; Threads 96; Compressed 1; Verbosity 3; Seed substitution matrix nucl:nucleotide.out,aa:VTML80.out; Sensitivity 6; k-mer length 0; k-score 2147483647; Alphabet size nucl:5,aa:21; Max results per query 300; Split database 0; Split mode 2; Split memory limit 589824T; Diagonal scoring true; Exact k-mer matching 0; Mask residues 1; Mask lower case residues 0; Minimum diagonal score 15; Spaced k-mers 1; Spaced k-mer pattern ; Local temporary path ; Rescore mode 0; Remove hits by seq. id. and coverage false; Sort results 0; Mask profile 1; Profile",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/438#issuecomment-1176243510:35,fault,fault,35,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/438#issuecomment-1176243510,1,['fault'],['fault']
Availability,"I'm getting the following error when creating the sam file and then converting to a bam via ; `samtools view -b -h {input.sam} > {output.bam}`: . ```; [E::sam_parse1] CIGAR and query sequence are of different length; [W::sam_read1] Parse error at line 740584; [main_samview] truncated file.; ```. mmseqs version: 8.fac81. For the alignment, I'm using:. ```; mmseqs search -a --alignment-mode 4 ; --threads {threads} -s 2 -c 0.9 --cov-mode 2 \; {input.reads_db} {input.genes_db} \; {output.db} {output.tmp_dir}; ```. For conversion of the alignment db to sam, I'm using:; ```; mmseqs convertalis \; --threads {threads} \; --format-mode 1 \; {input.query_db} {input.target_db} {input.aln_db} \; {output.sam}; ```",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/143#issuecomment-482798422:26,error,error,26,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/143#issuecomment-482798422,2,['error'],['error']
Availability,I'm guessing this comment is the reason you only supported static linking:. `We use ZSTD_findDecompressedSize which is only available with ZSTD_STATIC_LINKING_ONLY`. This hasn't been true since zstd 1.4.7 when it went from the experimental features into supported features.,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/411#issuecomment-777699694:124,avail,available,124,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/411#issuecomment-777699694,1,['avail'],['available']
Availability,"I'm not able to recreate this error with other data sets with the same configuration (i.e. adding the same data set + a completely separate outgroup). I was able to get concatdbs to run properly, so other runs have worked without issue.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/103#issuecomment-405613850:30,error,error,30,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/103#issuecomment-405613850,1,['error'],['error']
Availability,"I'm not sure if this is the same problem or a different one, but I'm getting a similar error when using a different taxonomy database:. ```; Loading NCBI taxonomy...; Computing LCA...; Segmentation fault; Error: Lca died; ```. The database creation was (using version 8.fac81):. ```; ## downloading uniclust db; wget http://gwdu111.gwdg.de/~compbiol/uniclust/2018_08/uniclust50_2018_08.tar.gz; uncomp uniclust50_2018_08.tar.gz; mv uniclust50_2018_08/uniclust50_2018_08_consensus.fasta . ## creating seq db; mmseqs createdb --dbtype 1 uniclust50_2018_08_consensus.fasta uniclust50_2018_08_consensus. ## creating tax db; mmseqs createtaxdb uniclust50_2018_08_consensus tmp; ```. The taxonomy classify command (using version 8.fac81):. ```; mmseqs taxonomy -e 1e-5 --max-seqs 200 --lca-ranks ""kingdom:phylum:class:order:family:genus:species"" --threads 24 clusters_rep-seqs_db_14_30 /ebio/abt3_projects/databases_no-backup/uniclust/uniclust50/mmseqs2_8.fac81/uniclust50_2018_08_consensus clusters_rep-seqs.part-14_tax_db tmp_part-14; ```. The run log w/ error:. ```; Program call:; taxonomy -e 1e-5 --max-seqs 200 --lca-ranks kingdom:phylum:class:order:family:genus:species --threads 24 clusters_rep-seqs_db_14_30 /ebio/abt3_projects/databases_no-backup/uniclust/uniclust50/mmseqs2_8.fac81/uniclust50_2018_08_consensus clusters_rep-seqs.part-14_tax_db tmp_part-14. MMseqs Version: 	8.fac81; Substitution Matrix 	blosum62.out; Add backtrace 	false; Alignment mode 	2; E-value threshold 	1e-05; Seq. Id Threshold 	0; Min. alignment length 	0; Seq. Id. Mode 	0; Alternative alignments 	0; Coverage threshold 	0; Coverage Mode 	0; Max. sequence length 	65535; Compositional bias 	1; Realign hit 	false; Max Reject 	2147483647; Max Accept 	2147483647; Include identical Seq. Id. 	false; Preload mode 	0; Pseudo count a 	1; Pseudo count b 	1.5; Score bias 	0; Gap open cost 	11; Gap extension cost 	1; Threads 	24; Compressed 	0; Verbosity 	3; Seed Substitution Matrix 	VTML80.out; Sensitivity 	5.7; K-mer size ",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/221#issuecomment-516032943:87,error,error,87,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/221#issuecomment-516032943,4,"['Error', 'down', 'error', 'fault']","['Error', 'downloading', 'error', 'fault']"
Availability,"I'm optimistic that this PR, a couple of typo fixes in the `README.md`, hasn't actually broken the build. I think the failed check is just due to an error in the package configuration of the Travis-CI instance in one of the Clang builds. I think that restarting that build will probably do the trick.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/pull/44#issuecomment-326970054:149,error,error,149,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/pull/44#issuecomment-326970054,1,['error'],['error']
Availability,"I'm pasting below the whole script I'm trying to run right now:. #!/bin/bash; #SBATCH --job-name=chiro_mt; #SBATCH --output=%x.%j.out; #SBATCH --error=%x.%j.err; #SBATCH --partition=nocona; #SBATCH --nodes=2; #SBATCH --ntasks=256; #SBATCH --reservation=benchmark. module --ignore-cache load gcc/10.2.0 openmpi/4.0.4 . INPUTDIR=~/input; MMSEQ=~/MMseqs2/bin; SPLITS=3; QUERYFASTA=all_species.fasta; QUERYDB=DB. cd $INPUTDIR. mmseqs createdb ""${QUERYFASTA}"" ""${QUERYDB}""; mmseqs splitdb ""${QUERYDB}"" ""${QUERYDB}_split"" --split $SPLITS. for file in $(ls ""$INPUTDIR/${QUERYDB}_split""_*_$SPLITS); do; mmseqs createsubdb ""${file}.index"" ""${QUERYDB}_h"" ""${file}_h""; done. split=0; for file in $(ls ""$INPUTDIR/${QUERYDB}_split""_*_$SPLITS); do; RUNNER=""mpirun -np 128"" bsub mmseqs cluster ""${file}"" DB aln_${split} tmp --cov-mode 1 -c 0.9 --threads 128; ((split++)); done. So far what I understand is that the MPI version is used to run MMseqs2 on multiple servers but to run it in multiple cores, will the ""simple"" version work? I think that for the kind of job I'm doing right now, being able to run it on 128 cores on a single node will be enough, or is the workflow the same for what I pasted above? Thanks a lot.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/455#issuecomment-844277969:145,error,error,145,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/455#issuecomment-844277969,2,['error'],['error']
Availability,"I'm running into a similar issue but with contigs. Samples with even only a handful of contigs larger than ~200,000 bp seem to crash mmseqs easy-clust because of memory (segmentation fault error). similarly getting poor memory efficiency . Job ID: 1002827; Cluster: tinkercliffs; User/Group: clb21565/clb21565; State: FAILED (exit code 1); Nodes: 1; Cores per node: 128; CPU Utilized: 03:00:21; CPU Efficiency: 25.62% of 11:44:00 core-walltime; Job Wall-clock time: 00:05:30; Memory Utilized: 13.43 GB; Memory Efficiency: 5.59% of 240.00 GB",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/608#issuecomment-1292341862:183,fault,fault,183,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/608#issuecomment-1292341862,2,"['error', 'fault']","['error', 'fault']"
Availability,"I've encountered segfault errors with mmseqs due to not enough memory (which is a valid reason for segfaults, according to quick web search). Large databases like NT/GTDB might need around 900GB RAM, so I would guess too little RAM is the reason in your cases as well.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/882#issuecomment-2376983474:26,error,errors,26,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/882#issuecomment-2376983474,1,['error'],['errors']
Availability,"I've found out that we are not dealing well with deleted sequences.; Their presence in the clustering is resulting in the error you are seeing. I am refactoring some code, but it turns out to be a bit more work.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/272#issuecomment-587062019:122,error,error,122,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/272#issuecomment-587062019,1,['error'],['error']
Availability,"I've found that GenBank allows me to download complete bacterial genome assembly fasta files, which I built into a database using 'createdb'. I downloaded a total of 19084 complete genomes and in my database.source file, I see 19084 rows in the file. When I look in the database.index file I have 38630 rows (as I understand it, createdb will break up long sequences into multiple entries to help processing speed). When I run a 'mmseqs search' function for my one query gene against this entire target database of bacterial genomes using a '--max-seqs' value of 40000 (well above the 38630 entries in my database index) and a '-s' value of 7.0 for full pre-filtering sensitivity, my final index statistics tell me that only 18615 alignments were calculated and that only 13173 sequences pairs passed the alignment threshold. . Is it true that a '-s' value of 7.0 applies a list of similar K-mers with only 7 entries for each K-mer during pre-filtering, or is the value 7.0 scaled differently? I ask because a float value seems weird for what would seem to be an integer parameter.. Also, I noticed that in my .m8 result file, none of my alignments have any gaps present. Is this normal? Is it advisable/possible to modify the Smith-Waterman alignment parameters to include gaps in my alignment algorithm to ensure that I'm not screening out a large number of false-negatives?. Also, is it possible to remove repeat rows (2 or more rows corresponding to the same original bacterial target genome) from my result .m8 file in order to determine the final number of bacterial genomes in the total original set (19084 genomes) that aligned successfully to my gene? (basically undoing the breaking up of sequences into multiple entries during 'createdb'). Thank you for all of your help!",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/341#issuecomment-670978160:37,down,download,37,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/341#issuecomment-670978160,4,['down'],"['download', 'downloaded']"
Availability,I've run into the same issue with our own slurm. You probably need to use `-c` (`--cpus-per-task`) instead of `--ntasks`. The later sets the CPU affinity mask so that all threads get assigned to the same core. . Try `--ntasks 1 -c 128`.,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/455#issuecomment-843099893:154,mask,mask,154,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/455#issuecomment-843099893,1,['mask'],['mask']
Availability,"I've tried this:; ```; gdb --args ~/git/MMseqs2/build/bin/mmseqs kmermatcher tmp/14020823439690622662/input tmp/14020823439690622662/clu_tmp/13817195423418140833/linclust/5869534598694216613/pref --sub-mat blosum62.out --alph-size 13 --min-seq-id 1 --kmer-per-seq 21 --mask 0 --cov-mode 0 -k 0 -c 0.9 --max-seq-len 65535 --hash-shift 5 --split-memory-limit 0 --include-only-extendable 0 --skip-n-repeat-kmer 0 --threads 6 -v 3; ```; and this is what I'm getting:; ```; Thread 1 ""mmseqs"" received signal SIGSEGV, Segmentation fault.; 0x00007ffff68c1c01 in __GI___libc_free (mem=0x7ffff3152010) at malloc.c:3123; 3123	malloc.c: No such file or directory.; (gdb) bt; #0 0x00007ffff68c1c01 in __GI___libc_free (mem=0x7ffff3152010) at malloc.c:3123; #1 0x000055555569ea2c in DBReader<unsigned int>::close (this=0x7fffffffdd90) at /home/jose/git/MMseqs2/src/commons/DBReader.cpp:353; #2 0x000055555572f571 in kmermatcher (argc=32, argv=0x7fffffffe1b8, command=...) at /home/jose/git/MMseqs2/src/linclust/kmermatcher.cpp:479; #3 0x0000555555692a63 in runCommand (p=..., argc=32, argv=0x7fffffffe1b8) at /home/jose/git/MMseqs2/src/commons/Application.cpp:62; #4 0x000055555569328d in main (argc=34, argv=0x7fffffffe1a8) at /home/jose/git/MMseqs2/src/commons/Application.cpp:135; ```",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/136#issuecomment-441416213:269,mask,mask,269,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/136#issuecomment-441416213,2,"['fault', 'mask']","['fault', 'mask']"
Availability,"INPUT=$TMPPATH/input_step2; $RUNNER mmseqs prefilter $INPUT $INPUT ""$TMPPATH/pref_step$STEP"" ${PREFILTER2_PAR}; $RUNNER mmseqs align $INPUT $INPUT ""$TMPPATH/pref_step$STEP"" ""$TMPPATH/aln_step$STEP"" ${ALIGNMENT2_PAR}. # cluster down to 50%; mmseqs filterdb ""$TMPPATH/aln_step$STEP"" ""$TMPPATH/aln_uniclust50"" \; --filter-column 3 --filter-regex '(0\.[5-9][0-9]{2}|1\.000)'; mmseqs cluster $INPUT ""$TMPPATH/aln_uniclust50"" ""$TMPPATH/clu_uniclust50"" ${CLUSTER2_PAR}; mmseqs mergeclusters ""${SEQUENCE_DB}"" $OUTDIR/uniclust50_$RELEASE \; ""$TMPPATH/clu_frag"" ""$TMPPATH/clu_redundancy"" $TMPPATH/clu_step0 $TMPPATH/clu_step1 $TMPPATH/clu_uniclust50. STEP=2; INPUT=$TMPPATH/input_step2; # cluster down to 30%; mmseqs cluster $INPUT ""$TMPPATH/aln_step$STEP"" ""$TMPPATH/clu_uniclust30"" ${CLUSTER2_PAR}; mmseqs mergeclusters ""${SEQUENCE_DB}"" $OUTDIR/uniclust30_$RELEASE \; ""$TMPPATH/clu_frag"" ""$TMPPATH/clu_redundancy"" $TMPPATH/clu_step0 $TMPPATH/clu_step1 $TMPPATH/clu_uniclust30; ```. However, I experience another error in step 2 `cluster`. ; ```; linclust /home/outdir/2023_06/tmp/input_step2 /home/outdir/2023_06/tmp/clu_uniclust30/13156544047496927710/clu_redundancy /home/outdir/2023_06/tmp/clu_uniclust30/13156544047496927710/linclust --cluster-mode 0 --max-iter; ations 1000 --similarity-type 2 --threads 6 --compressed 0 -v 3 --sub-mat 'aa:blosum62.out,nucl:nucle; otide.out' -a 0 --alignment-mode 3 --alignment-output-mode 0 --wrapped-scoring 0 -e 0.001 --min-seq-i; d 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-len 65535 --comp-bias-c; orr 1 --comp-bias-corr-scale 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0; --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --sco; re-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --corr-score-weight 0 -; -gap-open aa:11,nucl:5 --gap-extend aa:1,nucl:2 --zdrop 40 --alph-size aa:13,nucl:5 --kmer-per-seq 21; --spaced-kmer-mode 1 --",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/700#issuecomment-1589819536:5372,error,error,5372,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/700#issuecomment-1589819536,1,['error'],['error']
Availability,IN_LIBRARY); -- Compile blastp.sh to /Users/moorer/Downloads/mmseqs2/src/generatedfiles/blastp.sh.h; -- Compile blastpgp.sh to /Users/moorer/Downloads/mmseqs2/src/generatedfiles/blastpgp.sh.h; -- Compile blosum100.out to /Users/moorer/Downloads/mmseqs2/src/generatedfiles/blosum100.out.h; -- Compile blosum30.out to /Users/moorer/Downloads/mmseqs2/src/generatedfiles/blosum30.out.h; -- Compile blosum35.out to /Users/moorer/Downloads/mmseqs2/src/generatedfiles/blosum35.out.h; -- Compile blosum40.out to /Users/moorer/Downloads/mmseqs2/src/generatedfiles/blosum40.out.h; -- Compile blosum45.out to /Users/moorer/Downloads/mmseqs2/src/generatedfiles/blosum45.out.h; -- Compile blosum50.out to /Users/moorer/Downloads/mmseqs2/src/generatedfiles/blosum50.out.h; -- Compile blosum55.out to /Users/moorer/Downloads/mmseqs2/src/generatedfiles/blosum55.out.h; -- Compile blosum60.out to /Users/moorer/Downloads/mmseqs2/src/generatedfiles/blosum60.out.h; -- Compile blosum62.out to /Users/moorer/Downloads/mmseqs2/src/generatedfiles/blosum62.out.h; -- Compile blosum65.out to /Users/moorer/Downloads/mmseqs2/src/generatedfiles/blosum65.out.h; -- Compile blosum70.out to /Users/moorer/Downloads/mmseqs2/src/generatedfiles/blosum70.out.h; -- Compile blosum75.out to /Users/moorer/Downloads/mmseqs2/src/generatedfiles/blosum75.out.h; -- Compile blosum80.out to /Users/moorer/Downloads/mmseqs2/src/generatedfiles/blosum80.out.h; -- Compile blosum85.out to /Users/moorer/Downloads/mmseqs2/src/generatedfiles/blosum85.out.h; -- Compile blosum90.out to /Users/moorer/Downloads/mmseqs2/src/generatedfiles/blosum90.out.h; -- Compile blosum95.out to /Users/moorer/Downloads/mmseqs2/src/generatedfiles/blosum95.out.h; -- Compile cascaded_clustering.sh to /Users/moorer/Downloads/mmseqs2/src/generatedfiles/cascaded_clustering.sh.h; -- Compile clustering.sh to /Users/moorer/Downloads/mmseqs2/src/generatedfiles/clustering.sh.h; -- Compile update_clustering.sh to /Users/moorer/Downloads/mmseqs2/src/generatedfiles/update,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/7#issuecomment-265028472:3196,Down,Downloads,3196,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/7#issuecomment-265028472,1,['Down'],['Downloads']
Availability,"ITIVITY=7.5; IDENTITY=0; COVERAGE=0.8; EVALUE=0.00001. CLU_MODE=1. FILE=""${BASE}.fa""; MMSEQDB=""${BASE}DB""; MMSEQPREF=""${BASE}PREFILTER""; MMSEQALN=""${BASE}ALN""; MMSEQCLU=""${BASE}CLU""; MMSEQMSA=""${BASE}MSA""; FILELOG=""job.log"". echo '#:: CREATEDB' &>> ${FILELOG} ;; mmseqs createdb ${FILE} ${MMSEQDB} &>> ${FILELOG}. echo '#:: PREFILTER' &>> ${FILELOG} ;; mmseqs prefilter ${MMSEQDB} ${MMSEQDB} ${MMSEQPREF} -s ${SENSITIVITY} --threads ${THREADS} &>> ${FILELOG}. echo '#:: ALING' &>> ${FILELOG} ;; mmseqs align ${MMSEQDB} ${MMSEQDB} ${MMSEQPREF} ${MMSEQALN} -e ${EVALUE} \; --min-seq-id ${IDENTITY} -c ${COVERAGE} --threads ${THREADS} &>> ${FILELOG}; echo '#:: CLUST' &>> ${FILELOG} ;; mmseqs clust ${MMSEQDB} ${MMSEQALN} ${MMSEQCLU} --cluster-mode ${CLU_MODE} --threads ${THREADS} &> ${FILELOG} &>> ${FILELOG}. echo '#:: RESULT2MSA' &>> ${FILELOG} ;; mmseqs result2msa ${MMSEQDB} ${MMSEQDB} ${MMSEQCLU} ${MMSEQMSA} --compress --threads ${THREADS} &>> ${FILELOG}. echo '#:: CREATE LINKS' &>> ${FILELOG} ;; ln -s ${MMSEQDB}_h ${MMSEQMSA}_header.ffdata &>> ${FILELOG}; ln -s ${MMSEQDB}_h.index ${MMSEQMSA}_header.ffindex &>> ${FILELOG}; ln -s ${MMSEQDB} ${MMSEQMSA}_sequence.ffdata &>> ${FILELOG}; ln -s ${MMSEQDB}.index ${MMSEQMSA}_sequence.ffindex &>> ${FILELOG}. echo '#:: BUILD HHBLITS COMPATIBLE' &>> ${FILELOG} ;; mpirun -np ${THREADS} cstranslate -i ${MMSEQMSA}_ca3m.ffdata -o ${MMSEQMSA}_cs219 \; -A ${HH_LIB} \; -D ${HH_CONTEXT_DATA} \; -x 0.3 -c 4 -I ca3m &>> ${FILELOG}; ```. Quiet the same of the previous one. If I change the last step to; ```; cstranslate -f -i ${MMSEQMSA}_ca3m.ffdata -o ${MMSEQMSA}_cs219 -A ${HH_LIB} -D ${HH_CONTEXT_DATA} -x 0.3 -c 4 -I ca3m; ```; I got; ```; Reading context library for pseudocounts from internal ...; Reading abstract state alphabet from internal ...; - 18:29:11.260 ERROR: In /opt/conda/conda-bld/hhsuite_1554456729008/work/src/ffindexdatabase.cpp:11: FFindexDatabase:. - 18:29:11.260 ERROR: 	could not open file 'subsetMSA_ca3m.ffdata.ffdata'; ```. It",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/174#issuecomment-492826081:2656,echo,echo,2656,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/174#issuecomment-492826081,1,['echo'],['echo']
Availability,"If you have MMseqs2 release 14 installed, then `--msa-format-mode 6` should be available in the `result2msa` module. Could you please post the full terminal output?",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/681#issuecomment-1465528470:79,avail,available,79,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/681#issuecomment-1465528470,1,['avail'],['available']
Availability,"If you have `aria2c` installed, it will prefer that over `curl` or `wget` and use multiple download connections. This should speed up downloads quite a bit.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/542#issuecomment-1054055542:91,down,download,91,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/542#issuecomment-1054055542,2,['down'],"['download', 'downloads']"
Availability,"If you provide me the mmseqs command call for your search an the log of the run then I can tell you why MMseqs2 is not much faster and what parameter you can tweak to be faster. My assumption is that you waste a lot of time on alignments that do not have to be computed since the chance of being homologous is not high. . The warning ""Sequence XXX produces too many hits. Results might be truncated"" indicates that their are too many high scoring diagonal (> target database size / 2). Is your database highly redundant?. MMseqs2 produces in default only one smith-waterman alignment per sequence. You can increase the alignments with` --alt-ali`. If you want just the best hit than you could use `filterdb` to reduce just extract the first line of each query result. Also if you are just interested at the top hit than you can speed up MMseqs2 quite a lot by using an iterative search. See https://github.com/soedinglab/mmseqs2/wiki#how-to-find-the-best-hit-the-fastest-way . In my example MMseqs2 was able to detect the sequence pair you mentioned. I search sequence `10141.SETX` (query) against sequence `6334.TSP_11650` (target) and both could be detect by MMseqs2. . The command I used was . mmseqs search query target aln tmp -a -s 7.5",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/107#issuecomment-407433121:510,redundant,redundant,510,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/107#issuecomment-407433121,1,['redundant'],['redundant']
Availability,"In my search, I am interested only in exact matches to known human proteins, regardless of the significance (which seems to be conditioned on the length of the sequence). For that, I have changed the significance threshold, k-mer size and spacer. This is the search command I am using: ; `mmseqs search /tmp/queryDB /root/mmseqs2_db/swissprot /tmp/resultDB tmp -a --max-seqs 1000 -s 7.5 --comp-bias-corr 0 --mask 0 --split-memory-limit 120G -e 10000 -k 7 --spaced-kmer-mode 0`. To create the human subset of the swissprot, I used the following commands to download and filter the dataset:; `mmseqs databases UniProtKB/Swiss-Prot /root/mmseqs2_db/swissprot tmp`; `mmseqs filtertaxseqdb /root/mmseqs2_db/swissprot /root/mmseqs2_db/swissprot_human --taxon-list 9606`",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/827#issuecomment-2022831191:408,mask,mask,408,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/827#issuecomment-2022831191,2,"['down', 'mask']","['download', 'mask']"
Availability,"In order to identify the best settings I have changed the search conditions. Now looking for a set of ~11K peptides (8-15 mers) against the human proteome. All the peptides are known to occur at least once in the target database. . My findings over the last week:; 1. not running `createindex` helps; 2. In order to find 8-mer peptides the `--spaced-kmer-pattern 110111 -k 5` or any other with 1 non-informative positions works. When increasing the number of non-informative positions or using 6-mers, numbers of detected 8-mer peptides drop dramatically. Changing the non-informative position leads to different peptides not being found. ; 3. Masking and compositional bias correction at 0 helps; 4. `--exact-kmer-matching` increases the numbers of detected peptides, alternatively I was able to reach similar numbers of detected peptides by running an iterative search with a lot of iterative searches which was slower. ; 5. `mmseqs search` was producing false-positive mappings, fixed by using `map`. These I have identified manually. . As a result, the current command looks like this:; ```; mmseqs map --comp-bias-corr 0 --mask 0 -e inf --max-seqs 300 --exact-kmer-matching 1 \; --spaced-kmer-pattern 110111 -k 5 -a 1 --min-seq-id 1 \; IP_nonspliced_DB/IP_nonspliced_DB proteome_DB/proteome_DB result_DB/result_DB tmp; ```. This yields 98-99% of the peptides mapped to the proteome. ; When using the translated genome database which is the actual target I see ~90% peptides mapped.; 100% true positive mapping without mismatches is my main goal when using mmseqs, because in the experiment context it is very important to find peptides even if they are mapped only to a single location and all the other locations for multi-mappers. . Can this result be improved to 100% or is this the limit in your opinion?",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/391#issuecomment-767698082:644,Mask,Masking,644,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/391#issuecomment-767698082,2,"['Mask', 'mask']","['Masking', 'mask']"
Availability,"In this case with 512GB of RAM, and NR with it's current size (~69GB of raw sequences), --split 2 and 32 threads is what gives best performance results. Reducing the number of database chunks doesn't allow to keep the index file in cache when 'mmseqs search' is running, what forces reading from the file system, increasing the sys CPU time and degrading performance. Using 62 threads (32 real cores plus 32 from HT), looks like that puts too much pressure on available memory bandwith and hurts performance too (in my tests, it goes from 4' to 4'30'')",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/31#issuecomment-301212554:460,avail,available,460,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/31#issuecomment-301212554,1,['avail'],['available']
Availability,"Indeed - I just downloaded the latest stable version with wget and it works fine! Thanks :); The problem persists in the latest conda version though, so it may be worth updating that one.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/428#issuecomment-809672213:16,down,downloaded,16,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/428#issuecomment-809672213,1,['down'],['downloaded']
Availability,"Intikhab Alam, PhD. Research Scientist; Computational Bioscience Research Centre (CBRC), Building #3, Office #4328; 4700 King Abdullah University of Science and Technology (KAUST); Thuwal 23955-6900, KSA; W: http://www.kaust.edu.sa<https://webmail.kaust.edu.sa/owa/redir.aspx?C=wkduJ0ChSE-OkyUQwL9vutDH6L5Gg9EImiJ7GyYOxcPLuActd9iwo85DHDgQZup2zR1MyXCk7as.&URL=http%3a%2f%2fwww.kaust.edu.sa>; T +966 (0) 2 808-2423 F +966 (2) 802 0127; ________________________________; From: Intikhab S. Alam; Sent: 10 September 2020 00:45; To: soedinglab/MMseqs2; soedinglab/MMseqs2; Cc: Author; Subject: Re: [soedinglab/MMseqs2] updating a near complete mmseq clustered db (#348). Dear Milot,. I provided all result files from previous easy-linclust of 3 billion sequences. As I understand, if you use the rep_seq based new database, the update of additional sequence will not place newer sequences to any existing clusters, is this right?. The only option seems to add newer redundant sequences to previous version of redundant sequences, create a database and start a fresh linclust session. You mentioned new versions of mmseq is now much faster, I will give it a go but do you think is there a way to extract the cluster db of my previous run where I used easy-linclust?. Please provide some useful advice as these are computationally heavy tasks. Best,. IA. --; --; Intikhab Alam, PhD. Research Scientist; Computational Bioscience Research Centre (CBRC), Building #3, Office #4328; 4700 King Abdullah University of Science and Technology (KAUST); Thuwal 23955-6900, KSA; W: http://www.kaust.edu.sa<https://webmail.kaust.edu.sa/owa/redir.aspx?C=wkduJ0ChSE-OkyUQwL9vutDH6L5Gg9EImiJ7GyYOxcPLuActd9iwo85DHDgQZup2zR1MyXCk7as.&URL=http%3a%2f%2fwww.kaust.edu.sa>; T +966 (0) 2 808-2423 F +966 (2) 802 0127; ________________________________; From: Milot Mirdita <notifications@github.com>; Sent: 08 September 2020 18:53; To: soedinglab/MMseqs2; Cc: Intikhab S. Alam; Author; Subject: Re: [soedinglab/MMseqs2] updating a ",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/348#issuecomment-699923180:1545,redundant,redundant,1545,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/348#issuecomment-699923180,2,['redundant'],['redundant']
Availability,Is it possible for you to provide the database? I would like to reproduce the error.,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/259#issuecomment-569139201:78,error,error,78,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/259#issuecomment-569139201,1,['error'],['error']
Availability,Is it possible to provide an md5 check sum for for bfd database? I want to check the integrity of my tarball download for bfd_metaclust_clu_complete_id30_c90_final_seq.sorted_opt.tar.gz .; Thank you.,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/24#issuecomment-525803520:109,down,download,109,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/24#issuecomment-525803520,1,['down'],['download']
Availability,"Is there a way of merging them after the run is done? It’s not a big deal; it’s just a little less cluttered. I really appreciate the software. I’ve been using the taxonomy module extensively with impressive results. Thank you!. > On Dec 3, 2022, at 20:39, Milot Mirdita ***@***.***> wrote:; > ; > ; > You can set the MMSEQS_FORCE_MERGE environment variable (e.g. export MMSEQS_FORCE_MERGE=1). The split databases are, however, an IO optimization and not related to memory. Merging after every module invocation can slow MMseqs2 down considerably.; > ; > —; > Reply to this email directly, view it on GitHub <https://github.com/soedinglab/MMseqs2/issues/644#issuecomment-1336320279>, or unsubscribe <https://github.com/notifications/unsubscribe-auth/ABMXPRTD22DUCKCKPGRBEPLWLQOAZANCNFSM6AAAAAASRJ3OC4>.; > You are receiving this because you authored the thread.; >",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/644#issuecomment-1336345981:529,down,down,529,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/644#issuecomment-1336345981,1,['down'],['down']
Availability,Is there an error message or anything else? MMseqs2 works fine on my Apple Silicon MacBook,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/834#issuecomment-2070153790:12,error,error,12,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/834#issuecomment-2070153790,1,['error'],['error']
Availability,Is this still relevant? There don't seem to be failure on MIPS anymore. The two remaining failures (on hurd and sparc) should be covered by this commit https://github.com/soedinglab/MMseqs2/commit/1f302134aa1c6c7c4e2b9da272fd26af33860780. Actually the sparc failure probably won't be covered as Debian is using `-DNATIVE_ARCH=0`. I think you have to add a `-DDISABLE_IPS4O=1` for the sparc failure.,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/358#issuecomment-762352047:47,failure,failure,47,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/358#issuecomment-762352047,4,['failure'],"['failure', 'failures']"
Availability,"It didn't cause a crash ! . So now I had the same log error: ; ```; data/04_taxgenes/contigs_tax/14073767031253215106/easy-taxonomy.sh: line 55: 19300 Segmentation fault ""$MMSEQS"" addtaxonomy ""${TARGET}"" ""${TMP_PATH}/result_aln_swapped_sum"" ""${TMP_PATH}/result_aln_swapped_sum_tax"" ${ADDTAXONOMY_PAR}; ```. In output: ; ```; Time for merging to result_aln_swapped_sum: 0h 0m 48s 61ms; Time for processing: 0h 1m 27s 597ms; Error: filterdb died; ```. But doing the `gdb` run in our master node it worked without any problem. . In my cluster we work through module installation for the programs, but I wanted to try out beforehand a local copy of the bin without being properly compiled in the system. Could that be the problem?. (I am basically running `mmseqs2` executing the script as follows: `./scripts/mmseqs_latest/mmseqs/bin/mmseqs <opts>`",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/447#issuecomment-831942921:54,error,error,54,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/447#issuecomment-831942921,3,"['Error', 'error', 'fault']","['Error', 'error', 'fault']"
Availability,"It doesn't look like the MSAs for the KOFAM profiles are available for download, we can't create profiles for MMseqs2 without the original MSAs. I don't have specific recommendations for replacing HMMER. Generally, a high sensitivity search against the pfam profiles should work pretty well. As these are different algorithms, MMseqs2 will never 100% match HMMER or the other way around, so it depends on your application if this is good enough or not. The searching against the Pfam profiles with `--exhaustive-search` will use a different search mode that might be more sensitive since it internally swaps Pfam database to the query side and can generate similar k-mers based on the Pfam profiles, but we never thoroughly tested this.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/771#issuecomment-1785450124:57,avail,available,57,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/771#issuecomment-1785450124,2,"['avail', 'down']","['available', 'download']"
Availability,"It is always crashing with a `segmentation fault`, yup. Maybe I should re-download the taxonomic database and rerun everything? ; Some of the samples did not presented the same problem.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/447#issuecomment-831988024:43,fault,fault,43,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/447#issuecomment-831988024,2,"['down', 'fault']","['download', 'fault']"
Availability,It is possible to benchmark out software with our regression benchmark. It can be downloaded here https://bitbucket.org/martin_steinegger/mmseqs-benchmark,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/25#issuecomment-283914103:82,down,downloaded,82,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/25#issuecomment-283914103,1,['down'],['downloaded']
Availability,"It is very long so I prefer to give to you all the log in a file. You can find the search step from line 723 or below, but I prefer to give to you everything. ; ```; prefilter /env/cns/bigtmp2/PANFAM/PipelineProteome//CLUST/PANFAM80/panfam_subDB /env/cns/bigtmp2/PANFAM/PipelineProteome//CLUST/PANFAM80/panfam_subDB /env/cns/bigtmp2/PANFAM/PipelineProteome//ALIGN/635041581728617992/pref_0 --sub-mat nucl:nucleotide.out,aa:blosum62.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -k 0 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 65535 --max-seqs 1000 --split 0 --split-mode 2 --split-memory-limit 0 -c 0.8 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 36 --compressed 0 -v 3 -s 7.0 . Query database size: 12187255 type: Aminoacid; Estimated memory consumption: 42G; Target database size: 12187255 type: Aminoacid; Index table k-mer threshold: 100 at k-mer size 6 ; Index table: counting k-mers; [=================================================================] 12.19M 26s 362ms; Index table: Masked residues: 43826477; Index table: fill; [=================================================================] 12.19M 38s 306ms; Index statistics; Entries: 3083105370; DB size: 18129 MB; Avg k-mer size: 48.173521; Top 10 k-mers; GPGGTL	40332; GQQVAR	22194; GEGGVV	20313; NAIAAG	18525; YTGTPK	18522; ALAIAR	16978; GFVAVR	15587; GPGGTT	14728; GEGGTL	13758; LAMHRT	13125; Time for index table init: 0h 1m 7s 827ms; Process prefiltering step 1 of 1. k-mer similarity threshold: 100; Starting prefiltering scores calculation (step 1 of 1); Query db start 1 to 12187255; Target db start 1 to 12187255; [======; ```; [pipeline.log](https://github.com/soedinglab/MMseqs2/files/5856223/pipeline.log); Thanks",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/397#issuecomment-765417034:700,mask,mask,700,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/397#issuecomment-765417034,3,"['Mask', 'mask']","['Masked', 'mask', 'mask-lower-case']"
Availability,It is. The container was created by the [BioContainers](biocontainers.pro) people. Although I can never get their registry to load. So I downloaded it from quay.io using this link: https://quay.io/repository/biocontainers/mmseqs2?tab=tags,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/494#issuecomment-941179852:137,down,downloaded,137,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/494#issuecomment-941179852,1,['down'],['downloaded']
Availability,"It looks like multiple downloads have failed before you the MMseqs2 calls. I would recommend downloading the files again (taxdump and also recreating the NR fasta) and try again. However, I am not sure how well this procedure will work at all since I think something in the the blast database format has changed and the `blastdbcmd` might run into issues. The NR is now also available in our `databases` workflow you can let MMseqs2 download the NR and create all the associated taxonomy files. The latest git MMseqs2 also has a a faster version with a few more kinks ironed out (you can download binaries at https://mmseqs.com/latest). The call for that would be:; ```; mmseqs databases NR nrdb tmp; ```",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/352#issuecomment-696712051:23,down,downloads,23,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/352#issuecomment-696712051,5,"['avail', 'down']","['available', 'download', 'downloading', 'downloads']"
Availability,"It seems like your clustering step does not need to align a lot. Single node alignment time is ~50 sec, multi node is 10 sec. So there is not much speed up when using MPI. However if you cluster large database down to 30% sequence identity using `easy-cluster` then it should significantly faster.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/331#issuecomment-658817648:210,down,down,210,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/331#issuecomment-658817648,1,['down'],['down']
Availability,"It turns out that I just need ~300G of memory for the job in order to not get the `Failed to mmap memory` error, even though the `mmseq search` job states: `Estimated memory consumption: 122G`",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/338#issuecomment-740157233:106,error,error,106,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/338#issuecomment-740157233,1,['error'],['error']
Availability,"It turns out that the error was caused by me symlinking the full db *.index file along with all of the files that I was symlinking. I re-ran `mmseqs taxonomy` on the splits without symlinking the *.index file, and everything worked. Sorry to waste your time on this.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/168#issuecomment-473275559:22,error,error,22,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/168#issuecomment-473275559,1,['error'],['error']
Availability,"It turns out that the issue wasn't a memory error, but instead a bug in my pipeline code that killed the job prematurely. Sorry to waste your time on this.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/147#issuecomment-453225786:44,error,error,44,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/147#issuecomment-453225786,1,['error'],['error']
Availability,It's available since a while. Are you running the latest release?,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/271#issuecomment-849728070:5,avail,available,5,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/271#issuecomment-849728070,1,['avail'],['available']
Availability,"Just a heads up, I downloaded the precompiled linux binary today and I think I got the same problem. . ```; Clustering step 1...; Could not open data file p.aa_orfs/tmp/clu_step0!; mv: cannot stat ‘p.aa_orfs/tmp/clu’: No such file or directory; mv: cannot stat ‘p.aa_orfs/tmp/clu.index’: No such file or directory; Could not move result to p.aa_orfs/p.aa_orfs.DB.mmseqs_linclust; ```. The version is d879ce2fa8d1ef3b0aa89d23e8988dad729cc5a6. Tried this with both `linclust` and `cluster`.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/10#issuecomment-282220322:19,down,downloaded,19,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/10#issuecomment-282220322,1,['down'],['downloaded']
Availability,"Just for inform. Three days ago, I use the --max-seq-len parameter with the large of the longest scaffold as the limit. It works in terms of the segmentation fault don't appear, but, it's still running...so, I'm not sure whether I'm processing data or in an infinite loop. Processors are all (64) running at 100% and 8Gb of memory are used. ; Greetings,; Christian.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/187#issuecomment-484313243:158,fault,fault,158,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/187#issuecomment-484313243,1,['fault'],['fault']
Availability,"Just to better clarify why I want to inspect the taxonomy database created by `mmseqs createtaxdb`:. The docs state that `mmseqs createtaxdb` will automatically create the taxDB by downloading NCBI taxdump and getting uniprot taxID mapping. It seems to do this and then state ""Database created"", but I don't know if any of my sequences were actually mapped to any taxonomy info. All my sequences should just be uniprot IDs; for example:. ```; >A0A1Q6BRU5; MAKITVFSPVKNFSGVSVGITFSHGVGVVEEGSAAHKYFQRRGYAFSLEEDRASQSPGASQDLPEGGKTAEKEGASTPPDIDIPGMPGAKALRSEWIAFAESLGIETESLTIPQIRERIIVEHLNAPNV; >A0A2V1A9G4; MSSRNQFRKNIGSVGPFGEPFLNGVPGFGENFTIPFALCDKDEYLLWLFHFIGQLRTQYGENVARYVVEYINGNDVQQIMIRNLASSVIYSTLGYGVCMVYNQKYCDTALGPMDCFRKFHQNFCKYKLEDLEEWFSNWAVVMTKLRAEGEIEAYEFSQELNGFTDEELELMDNMQYGLYDKKELIRRYLQGSGSDVIDLSKRAYDVNSKHGQPPLHKKAIDGSWFLSKPLSEAVGPE; >A0A0A9U2E6; MLDALSIFSKVSLGLVVVREPLGRSLSLSLVAALPIALQHGSEWCRMALAQTRMLS; ```. but I don't know `mmseqs createtaxdb` is actually parsing these UniProt IDs correctly and mapping them to taxonomy info.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/222#issuecomment-516455736:181,down,downloading,181,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/222#issuecomment-516455736,1,['down'],['downloading']
Availability,"LLMGAG_27929269397/taxonomy/tmp/. MMseqs Version: 	7.4e23d; Sub Matrix 	blosum62.out; Add backtrace 	false; Alignment mode 	2; E-value threshold 	1e-05; Seq. Id Threshold 	0; Seq. Id. Mode 	0; Alternative alignments 	0; Coverage threshold 	0; Coverage Mode 	0; Max. sequence length 	65535; Max. results per query 	300; Compositional bias 	1; Realign hit 	false; Max Reject 	2147483647; Max Accept 	2147483647; Include identical Seq. Id. 	false; Preload mode 	0; Pseudo count a 	1; Pseudo count b 	1.5; Score bias 	0; Gap open cost 	11; Gap extension cost 	1; Threads 	24; Verbosity 	3; Sensitivity 	6; K-mer size 	0; K-score 	2147483647; Alphabet size 	21; Offset result 	0; Split DB 	0; Split mode 	2; Split Memory Limit 	0; Diagonal Scoring 	1; Exact k-mer matching 	0; Mask Residues 	1; Minimum Diagonal score 	15; Spaced Kmer 	1; Spaced k-mer pattern; Local temporary path; Rescore mode 	0; Remove hits by seq.id. and coverage 	false; Sort results 	0; In substitution scoring mode, performs global alignment along the diagonal	false; Mask profile 	1; Profile e-value threshold 	0.001; Use global sequence weighting 	false; Filter MSA 	1; Maximum sequence identity threshold 	0.9; Minimum seq. id. 	0; Minimum score per column 	-20; Minimum coverage 	0; Select n most diverse seqs 	1000; Omit Consensus 	false; Min codons in orf 	30; Max codons in length 	32734; Max orf gaps 	2147483647; Contig start mode 	2; Contig end mode 	2; Orf start mode 	0; Forward Frames 	1,2,3; Reverse Frames 	1,2,3; Translation Table 	1; Use all table starts 	false; Offset of numeric ids 	0; Add Orf Stop 	false; Number search iterations 	1; Start sensitivity 	1; Search steps 	3; Run a seq-profile search in slice mode 	false; Strand selection 	1; Disk space limit 	0; Sets the MPI runner; Remove Temporary Files 	false; LCA Ranks 	phylum:superphylum:subkingdom:kingdom:superkingdom; Blacklisted Taxa 	12908,28384; LCA Mode 	2; Remove Temporary Files 	false; Sets the MPI runner. Program call:; search /tmp/global2/n",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/147#issuecomment-452242032:1461,Mask,Mask,1461,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/147#issuecomment-452242032,1,['Mask'],['Mask']
Availability,"LOG=""job.log"". echo '#:: CREATEDB' &>> ${FILELOG} ;; mmseqs createdb ${FILE} ${MMSEQDB} &>> ${FILELOG}. echo '#:: PREFILTER' &>> ${FILELOG} ;; mmseqs prefilter ${MMSEQDB} ${MMSEQDB} ${MMSEQPREF} -s ${SENSITIVITY} --threads ${THREADS} &>> ${FILELOG}. echo '#:: ALING' &>> ${FILELOG} ;; mmseqs align ${MMSEQDB} ${MMSEQDB} ${MMSEQPREF} ${MMSEQALN} -e ${EVALUE} \; --min-seq-id ${IDENTITY} -c ${COVERAGE} --threads ${THREADS} &>> ${FILELOG}; echo '#:: CLUST' &>> ${FILELOG} ;; mmseqs clust ${MMSEQDB} ${MMSEQALN} ${MMSEQCLU} --cluster-mode ${CLU_MODE} --threads ${THREADS} &> ${FILELOG} &>> ${FILELOG}. echo '#:: RESULT2MSA' &>> ${FILELOG} ;; mmseqs result2msa ${MMSEQDB} ${MMSEQDB} ${MMSEQCLU} ${MMSEQMSA} --compress --threads ${THREADS} &>> ${FILELOG}. echo '#:: CREATE LINKS' &>> ${FILELOG} ;; ln -s ${MMSEQDB}_h ${MMSEQMSA}_header.ffdata &>> ${FILELOG}; ln -s ${MMSEQDB}_h.index ${MMSEQMSA}_header.ffindex &>> ${FILELOG}; ln -s ${MMSEQDB} ${MMSEQMSA}_sequence.ffdata &>> ${FILELOG}; ln -s ${MMSEQDB}.index ${MMSEQMSA}_sequence.ffindex &>> ${FILELOG}. echo '#:: BUILD HHBLITS COMPATIBLE' &>> ${FILELOG} ;; mpirun -np ${THREADS} cstranslate -i ${MMSEQMSA}_ca3m.ffdata -o ${MMSEQMSA}_cs219 \; -A ${HH_LIB} \; -D ${HH_CONTEXT_DATA} \; -x 0.3 -c 4 -I ca3m &>> ${FILELOG}; ```. Quiet the same of the previous one. If I change the last step to; ```; cstranslate -f -i ${MMSEQMSA}_ca3m.ffdata -o ${MMSEQMSA}_cs219 -A ${HH_LIB} -D ${HH_CONTEXT_DATA} -x 0.3 -c 4 -I ca3m; ```; I got; ```; Reading context library for pseudocounts from internal ...; Reading abstract state alphabet from internal ...; - 18:29:11.260 ERROR: In /opt/conda/conda-bld/hhsuite_1554456729008/work/src/ffindexdatabase.cpp:11: FFindexDatabase:. - 18:29:11.260 ERROR: 	could not open file 'subsetMSA_ca3m.ffdata.ffdata'; ```. It seems that cstranslate is trying to look in a wrong place, I do not have this file `/opt/conda/conda-bld/hhsuite_1554456729008/work/src/ffindexdatabase.cpp` and also I didn't find how to set to the right path",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/174#issuecomment-492826081:2956,echo,echo,2956,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/174#issuecomment-492826081,3,"['ERROR', 'echo']","['ERROR', 'echo']"
Availability,"Listing the gtdb.tar.gz It seems that removing the $ will not affect the number of files used in the tardb because all files are .faa, so I have edited the download.sh script and I am building the database in this way while a fix is released:. ```; /localscratch/users/latest # diff download.sh ../*bkp/download.sh; 6c6; < MMSEQS=mmseqs # add this or define it as an ENV variable.; ---; > ; 374,376c374; < #""${MMSEQS}"" tar2db ""${TMP_PATH}/gtdb.tar.gz"" ""${TMP_PATH}/tardb"" --tar-include 'faa$' ${THREADS_PAR} \; < ; < ""${MMSEQS}"" tar2db ""${TMP_PATH}/gtdb.tar.gz"" ""${TMP_PATH}/tardb"" --tar-include 'faa' ${THREADS_PAR} \; ---; > ""${MMSEQS}"" tar2db ""${TMP_PATH}/gtdb.tar.gz"" ""${TMP_PATH}/tardb"" --tar-include 'faa$' ${THREADS_PAR} \; ```. Also it seems to fail in servers with 512 GB of RAM due a some mapping of the files into memory, so I have used one with 2TB, it seems that the program is using. Using MMseqs2 Version: 92deb92fb46583b4c68932111303d12dfa121364",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/561#issuecomment-1120795799:156,down,download,156,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/561#issuecomment-1120795799,3,['down'],['download']
Availability,"MMSeqs2 considers only hits with two k-mers on a diagonal. In default MMSeqs2 uses spaced k-mers of length 13 (mask: 11010110011). This means that we can only find hits of at least 14 length. It is possible to turn off spaced k-mers `--spaced-kmer-mode 0`, this makes it possible to detect 8 residue long sequences. You could also define your own more compact spaced pattern using `--spaced-kmer-pattern`. Another option is to decrease the k-mer length using `-k`. Changing the substitution matrix also helps to detect shorter sequences. You might want to look into the publication ""Selecting the Right Similarity-Scoring Matrix"" from Pearson et al (https://www.ncbi.nlm.nih.gov/pmc/articles/PMC3848038/)",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/125#issuecomment-581274532:111,mask,mask,111,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/125#issuecomment-581274532,1,['mask'],['mask']
Availability,"MMseqs2 can now compute alternative alignments. MMseqs2 only produces the best scoring alignment by default. However it is possible to create alternative alignments using the parameter `--alt-ali`. It adjust the number of alternative alignments that should be computed. We report only alternative hits that fulfill the alignment criteria: coverage `-c`, sequence identity `--min-seq-id`, max accept `--max-accept`, and e-value `-e`. Suppose we have two sequences:; (1) query sequence with domains A, B and C; (2) target sequence with homologous domains B' and A' C' . MMseqs2 will first align the highest scoring domain B and B'. For the next `--alt-ali` iteration we mask region B' in the target and align again. Now the alignment detects A and A'. Then we mask region B' and A' in the target and align again. resulting in an alignment of C and C'. I will add the support to switch the masking between target and query in future.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/86#issuecomment-393068844:668,mask,mask,668,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/86#issuecomment-393068844,3,['mask'],"['mask', 'masking']"
Availability,"MMseqs2 default k-mer sizes and spaced-k-mer patterns are too long to match such short sequences. . Using a shorter k-mer size and pattern should enable you to match them:; ```; -k 5 --spaced-kmer-pattern 110111; ```. I would additionally disable masking and compositional bias filtering, as this is not really a homology search anymore and doesn't benefit from false positive suppression:; ```; --mask 0 --comp-bias-corr 0; ```. In the same vain, you might not want to generate similar k-mers at all and only do exact matching:; ```; --exact-kmer-matching 1; ```",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/569#issuecomment-1173284596:247,mask,masking,247,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/569#issuecomment-1173284596,2,['mask'],"['mask', 'masking']"
Availability,"MMseqs2 does not know about SLURM memory limits, you can force the prefilter to use less memory (and process the search in multiple steps) with `--split-memory-limit`:. ```; mmseqs taxonomy --search-type 3 --split-memory-limit 100G ...; ```. Alternatively, you can increase the SLURM memory limit to allow it to use everything. `--split-memory-limit` should be about 80% of the total RAM you are willing to commit to MMseqs2. So in your case I took ~80% of 144GB (144179200 in the SLURM error message).",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/232#issuecomment-536568505:487,error,error,487,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/232#issuecomment-536568505,1,['error'],['error']
Availability,"MMseqs2 uses by default spaced double consecutive 15-mer matches for prefiltering in the nucleotide search. Since they are spaced (i.e. are actually 22-mers with 15 informative and 7 ignored position) we can still find non-exact matches. . For your sequences this is still much to long of a k-mer and it did not stand a chance to find a match. The 5-mers (actually 11 mer with 5 informative and 6 ignored positions) were able to find this, however this will increase the number of false positive matches that have to rejected by the alignment stage by a lot and therefore slow down the search by quite a bit. You can play with k-mers and k-mer pattern parameters (`-k`, `--spaced-kmer-mode`, `--spaced-kmer-pattern`). `-s` doesn't do anything for nucleotide searches we don't have real substitution matrices so we cannot generate similar k-mers. . You might want to do a translated-translated search (`--search-type 2`) though, there you will probably be able to find a lot more since synonymous mutations disappear and we can generate similar k-mers (`-s` sensitivity parameter). I am not 100% sure why the alignment is truncated though since I am not super familiar with the nucleotide search code, but It might be to the `--zdrop` parameter which stops nucleotide alignments early if they become to bad. See the documentation of minimap2 for how it works (https://lh3.github.io/minimap2/minimap2.html, we use the alignment algorithm implemented by minimap2).",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/327#issuecomment-653693937:577,down,down,577,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/327#issuecomment-653693937,1,['down'],['down']
Availability,"Martin did some refactoring to speed up slice search (now called exhaustive search) and get it to use less space during the run last week. However, in the end it will still need quite a lot of space. A more general question: Are you sure you need the slice/exhaustive search? A normal nucl-nucl search will be much much faster and use less disk space. If you want to keep using the exhaustive search:; You could use the `--compressed` parameter to get it to write zstd compressed output databases, that would help get the output down to a more manageable size. `--max-accept` kind of defeats the purpose of the exhaustive search, `--max-rejected` however could be very valuable to save time and disk space.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/394#issuecomment-782444789:529,down,down,529,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/394#issuecomment-782444789,1,['down'],['down']
Availability,"Maybe I should note that I'm splitting the query fasta into subsets, creating mmseqs dbs for each, and searching against UniRef90 (with the pre-generated idx). I know that I could use openmpi for scaling on a cluster, but splitting and running all of the queries in parallel with snakemake is more fault-tolerant. . Having to request ~300G per cluster job greatly limits the number of parallel jobs that will run on the cluster at the same time, so I'd prefer to reduce the memory requirements, if possible. It seems that the first split stays fairly large in size regardless of the total number of splits. I'd try ~30 splits, but I'm guessing that I will still be stuck with a split file that's ~70G.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/338#issuecomment-741772613:298,fault,fault-tolerant,298,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/338#issuecomment-741772613,1,['fault'],['fault-tolerant']
Availability,"Maybe I'm tired but i it is very strange because when i used mmseqs2 using:. `mmseqs cluster panproteome.db families_kmer-per-seq80_max-seqs300_2.db /tmp/test --kmer-per-seq 80 --max-seqs 300 --min-seq-id 0.8 -c 0.8 --threads 10`. It produces the following output:; ```; mmseqs cluster panproteome.db families_kmer-per-seq80_max-seqs300_2.db /tmp/test --kmer-per-seq 80 --max-seqs 300 --min-seq-id 0.8 -c 0.8 --threads 10; Program call:; panproteome.db families_kmer-per-seq80_max-seqs300_2.db /tmp/test --kmer-per-seq 80 --max-seqs 300 --min-seq-id 0.8 -c 0.8 --threads 10 . MMseqs Version: 	dfb5e6eb53ee034f02cc08d15513fb5ccce7cce7; Sub Matrix 	blosum62.out; Sensitivity 	4; K-mer size 	0; K-score 	2147483647; Alphabet size 	21; Max. sequence length 	65535; Max. results per query 	300; Offset result 	0; Split DB 	0; Split mode 	2; Split Memory Limit 	0; Coverage threshold 	0.8; Coverage Mode 	0; Compositional bias 	1; Diagonal Scoring 	1; Exact k-mer matching 	0; Mask Residues 	1; Minimum Diagonal score 	15; Include identical Seq. Id. 	false; Spaced Kmer 	1; No preload 	false; Early exit 	false; Pseudo count a 	1; Pseudo count b 	1.5; Threads 	10; Verbosity 	3; Add backtrace 	false; Alignment mode 	3; E-value threshold 	0.001; Seq. Id Threshold 	0.8; Alternative alignments 	0; Realign hit 	false; Max Reject 	2147483647; Max Accept 	2147483647; Cluster mode 	0; Max depth connected component 	1000; Similarity type 	2; Single step clustering 	true; Cascaded clustering steps 	3; Remove Temporary Files 	false; Sets the MPI runner 	; Kmer per sequence 	80; Shift hash 	5; Include only extendable 	false; Skip sequence with n repeating k-mers 	0; Rescore mode 	0; Remove hits by seq.id. and coverage 	false; In substitution scoring mode, performs global alignment along the diagonal	false. Tmp /tmp/test folder does not exist or is not a directory.; Created dir /tmp/test; Set cluster settings automatic to s=1; Set cluster mode SET COVER.; Set cluster iterations to 1; Program call:; panp",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/88#issuecomment-401138700:971,Mask,Mask,971,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/88#issuecomment-401138700,1,['Mask'],['Mask']
Availability,Merged the validation regexes (we will still have to improve their errors in the future).,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/33#issuecomment-307105278:67,error,errors,67,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/33#issuecomment-307105278,1,['error'],['errors']
Availability,"My point of view is that of a computational biologist who is both an end-user and developer of software that includes mmseqs as a dependency. As a developer myself, I view end users who are sophisticated enough to say things about builds as a fairly precious resource. So let me make my point one more time before I accept your decision and move on. . While I admit there are things that suck about semantic versioning, it has two outstanding qualities: (1) it has a controlled syntax that is widely used, and (2) it's easy to determine whether software that follow the pattern is older, newer, or equal to a reference version that someone else tested. Among the three recipes shown above and the binaries available for download, it seems that there are 3 different versioning schemes in use that will show up as the output of ""mmseqs version"" (12.11e3, 12-11e3, and the full SHA1). If I add my software (which uses VERSION_OVERRIDE=12.0 internally for compatibility with python semantic versioning), that's a 4th. My install code can't easily determine if a binary of unknown provenance is lower, equal, or higher than the recommended version. Neither can any downstream users without the sophistication to look at your repository's version tags. Using semantic versioning as a standard (that can be overridden by packagers or users if needed) would avoid this issue. To finish with something nice, your build system is well-done and build are smooth on the various linux and macos BigSur platforms I've tested it on. Feel free to close this issue after reading.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/396#issuecomment-767031559:706,avail,available,706,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/396#issuecomment-767031559,3,"['avail', 'down']","['available', 'download', 'downstream']"
Availability,"New artificial set, with a few highly similar sequences added (10 AA and 7 AA long); [artificial2.txt](https://github.com/soedinglab/MMseqs2/files/5950067/artificial2.txt). commands: ; `mmseqs createdb artificial2.fasta artificial2/DB_artificial`; `mmseqs cluster artificial2/DB_artificial db_clu tmp/ --cluster-reassign 1 --cov-mode 0 --cluster-mode 0`. output: . Create directory tmp/; cluster artificial2/DB_artificial db_clu tmp/ --cluster-reassign 1 --cov-mode 0 --cluster-mode 0. MMseqs Version: 9290a2b529da9763992bde2e6e0f95c61b003123; Substitution matrix nucl:nucleotide.out,aa:blosum62.out; Seed substitution matrix nucl:nucleotide.out,aa:VTML80.out; Sensitivity 4; k-mer length 0; k-score 2147483647; Alphabet size nucl:5,aa:21; Max sequence length 65535; Max results per query 20; Split database 0; Split mode 2; Split memory limit 0; Coverage threshold 0.8; Coverage mode 0; Compositional bias 1; Diagonal scoring true; Exact k-mer matching 0; Mask residues 1; Mask lower case residues 0; Minimum diagonal score 15; Include identical seq. id. false; Spaced k-mers 1; Preload mode 0; Pseudo count a 1; Pseudo count b 1.5; Spaced k-mer pattern; Local temporary path; Threads 16; Compressed 0; Verbosity 3; Add backtrace false; Alignment mode 3; Allow wrapped scoring false; E-value threshold 0.001; Seq. id. threshold 0; Min alignment length 0; Seq. id. mode 0; Alternative alignments 0; Max reject 2147483647; Max accept 2147483647; Score bias 0; Realign hits false; Realign score bias -0.2; Realign max seqs 2147483647; Gap open cost nucl:5,aa:11; Gap extension cost nucl:2,aa:1; Zdrop 40; Rescore mode 0; Remove hits by seq. id. and coverage false; Sort results 0; Cluster mode 0; Max connected component depth 1000; Similarity type 2; Single step clustering false; Cascaded clustering steps 3; Cluster reassign true; Remove temporary files false; Force restart with latest tmp false; MPI runner; k-mers per sequence 21; Scale k-mers per sequence nucl:0.200,aa:0.000; Adjust k-mer length",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-775778998:957,Mask,Mask,957,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-775778998,2,['Mask'],['Mask']
Availability,"No issues with uniref100 (took 2.5 days to download), so am using that.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/668#issuecomment-1448105726:43,down,download,43,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/668#issuecomment-1448105726,1,['down'],['download']
Availability,No preload 	true; Pseudo count a 	1; Pseudo count b 	1.5; Score bias 	0; Gap open cost 	11; Gap extension cost 	1; Threads 	48; Verbosity 	3. Init data structures...; Compute score only.; Using 1 threads.; Query database type: Aminoacid; Target database type: Aminoacid; Calculation of Smith-Waterman alignments.; Time for merging files: 0h 0m 0s 14ms. All sequences processed. 1218 alignments calculated.; 266 sequence pairs passed the thresholds (0.218391 of overall calculated).; 266 hits per query sequence.; Time for processing: 0h 0m 15s 821ms; Program call:; result2profile geneC.db genes.db tmpC/10139724895635470572/aln_0 tmpC/10139724895635470572/profile_0 --sub-mat blosum62.out --mask-profile 1 --e-profile 0.1 --comp-bias-corr 1 --wg 0 --filter-msa 1 --max-seq-id 0.9 --qid 0 --qsc -20 --cov 0 --diff 1000 --pca 0 --pcb 1.5 --omit-consensus 0 --no-preload 1 --gap-open 11 --gap-extend 1 --threads 48 -v 3 . MMseqs Version: 	GITDIR-NOTFOUND; Sub Matrix 	blosum62.out; Mask profile 	1; Profile e-value threshold 	0.1; Compositional bias 	1; Use global sequence weighting 	false; Filter MSA 	1; Maximum sequence identity threshold	0.9; Minimum seq. id. 	0; Minimum score per column 	-20; Minimum coverage 	0; Select n most diverse seqs 	1000; Pseudo count a 	0; Pseudo count b 	1.5; Omit Consensus 	false; No preload 	true; Gap open cost 	11; Gap extension cost 	1; Threads 	48; Verbosity 	3. Start computing profiles.; Query database type: Aminoacid; Target database type: Aminoacid; Time for merging files: 0h 0m 0s 8ms; Time for merging files: 0h 0m 0s 7ms. Done.; Time for processing: 0h 0m 15s 770ms; Program call:; prefilter tmpC/10139724895635470572/profile_0 genes.db tmpC/10139724895635470572/pref_1 --sub-mat blosum62.out -s 5.7 -k 0 --k-score 2147483647 --alph-size 21 --max-seq-len 65535 --max-seqs 1000 --offset-result 0 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --min-ungapped-score 15 ,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/160#issuecomment-461782109:44071,Mask,Mask,44071,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/160#issuecomment-461782109,1,['Mask'],['Mask']
Availability,No problem. I know that the errors are not very clear. We'll try to improve that. :),MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/11#issuecomment-274594720:28,error,errors,28,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/11#issuecomment-274594720,2,['error'],['errors']
Availability,No the issue is (probably) that it’s using too much memory and runtime is thus degrading heavily. Larger chunks would mean a faster runtime if enough RAM was available. But with limited RAM smaller chunks will require less RAM and thus process quicker.,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/479#issuecomment-894204152:158,avail,available,158,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/479#issuecomment-894204152,1,['avail'],['available']
Availability,"No worries! Always a good exercise to figure things out myself. I'm sure you're very busy and this was a problem of my own making by not using the intended workflow. I did try to use the `databases` workflow initially but unfortunately the login nodes that have connection to the internet on the cluster I am using don't have the resources to deal with the size of the databases I wanted to use. In the future I'll look to find a better workaround. With `metabuli` I just downloaded the pre-built database. I don't know if the resources for this are available but perhaps it would be worthwhile to do a similar thing here? Either way, thanks again for providing this excellent resource and good luck with CASP16! :)",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/838#issuecomment-2094347095:472,down,downloaded,472,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/838#issuecomment-2094347095,2,"['avail', 'down']","['available', 'downloaded']"
Availability,"No. . I took a 100 of my query sequences and it jumped to the error pretty quick. ; ```; terminate called after throwing an instance of 'std::out_of_range'; terminate called recursively; terminate called recursively; ```. So maybe it's something related with the internal structure of the names, yup. Any idea about what I should try to find? . With the subset you mean of the GTDB taxonomic database? Bc I guess that the problem is on this side. Which would be the best way of sending it? . ( I would love some stickers! Sending the mail right away :)",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/256#issuecomment-565441236:62,error,error,62,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/256#issuecomment-565441236,1,['error'],['error']
Availability,"OK, I cloned from the master branch (MMseqs2 Version: d990a0fb4bba9193b8aadc699a614303a57792f2) and re-ran the tests. During the testing, the following warning/error kept appearing: `No datafile could be found for resultFolder/NUCLPROTTAX_SEARCH/query_nucl_h!`. Here's the tail of the output:. ```; No datafile could be found for resultFolder/LINSEARCH_NUCLNUCL_TARNS_SEARCH/targetannotation_nucl_h!; Error: extractorfs died; Command exited with non-zero status 1; 37.62user 1.04system 0:02.30elapsed 1676%CPU (0avgtext+0avgdata 57204maxresident)k; 156904inputs+244464outputs (603major+36363minor)pagefaults 0swaps. LINSEARCH_NUCLNUCL_TARNS_SEARCH; TEST FAILED (NO REPORT). DBPROFILE_INDEX; TEST SUCCESS; GOOD; Expected: 0.142; Actual: 0.197554. NUCLPROTTAX_SEARCH; TEST FAILED (NO REPORT). PROTNUCL_SEARCH; TEST FAILED (NO REPORT). EASY_LINCLUST; TEST SUCCESS; GOOD; Expected: 26523; Actual: 26523. LINCLUST; TEST SUCCESS; GOOD; Expected: 26523; Actual: 26523. EASY_CLUSTER; TEST FAILED; BAD; Expected: 15682; Actual: 15675. CLUSTER; TEST FAILED; BAD; Expected: 15682; Actual: 15675. NUCLNUCL_TRANS_SEARCH; TEST FAILED (NO REPORT). NUCLNUCL_SEARCH; TEST FAILED (NO REPORT). NUCLPROT_SEARCH; TEST FAILED (NO REPORT). DBPROFILE; TEST SUCCESS; GOOD; Expected: 0.142; Actual: 0.182019. SLICEPROFILE; TEST SUCCESS; GOOD; Expected: 0.140; Actual: 0.147729. EASY_PROFILE; TEST SUCCESS; GOOD; Expected: 0.334; Actual: 0.338757. PROFILE; TEST SUCCESS; GOOD; Expected: 0.367; Actual: 0.367423. EASY_SEARCH; TEST SUCCESS; GOOD; Expected: 0.235; Actual: 0.238355. SEARCH; TEST SUCCESS; GOOD; Expected: 0.235; Actual: 0.238355; ```",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/188#issuecomment-488222298:160,error,error,160,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/188#issuecomment-488222298,2,"['Error', 'error']","['Error', 'error']"
Availability,"Oh damn, that's a bit embarrassing, I was using this build: `8bd3de3e35c91c0723517a964efc3223682c3bb5`, which I installed early January. I didn't expect there to be this much difference, but the current build works correctly in the ""unexpected behavior 1"" case. I compiled and ran MMseqs on openSUSE. Running make produced a lot of warnings, I don't know if this is expected and I can provide the output if you want to. The behavior of case 2 and 3 is unchanged. Case 2 still shows only 3 rows and case 3 still results in an error.; Here is the stdout when running case 2 (outer paths obfuscated):. ```; Program call:; /.../fasta.txt DB . MMseqs Version: 	e5e41af867c566f3fffe479d30bfaa10de77517c; Max. sequence length 	32000; Split Seq. by len 	true; Use fasta header 	false; Offset of numeric ids	0; Verbosity 	3. Time for merging files: 0 h 0 m 0 s; Time for merging files: 0 h 0 m 0 s; Program call:; DB . MMseqs Version: 	e5e41af867c566f3fffe479d30bfaa10de77517c; Sub Matrix 	blosum62.out; K-mer size 	0; Alphabet size 	21; Max. sequence length	32000; Split DB 	0; Spaced Kmer 	1; Threads 	4; Verbosity 	3. Substitution matrices...; Use kmer size 6 and split 1 using split mode; Index table: counting k-mers... Index table: Masked residues: 18; Index table: fill...; Index table: removing duplicate entries...; Index table init done. Write 10; Write 20; Write 60; Write 70; Write 80; Write 30; Write 40; Write 5; Write 0; Write MMSEQSFFINDEX ; Time for merging files: 0 h 0 m 0 s; Done. ; Program call:; DB DB resultDB tmp -a -s 7.5 . MMseqs Version: 	e5e41af867c566f3fffe479d30bfaa10de77517c; Sub Matrix 	blosum62.out; Add backtrace 	true; Alignment mode 	0; E-value threshold 	0.001; Seq. Id Threshold 	0; Coverage threshold 	0; Max. sequence length 	32000; Max. results per query 	300; Compositional bias 	1; Profile 	false; Realign hit 	false; Max Reject 	2147483647; Max Accept 	2147483647; Include identical Seq. Id. 	false; Threads 	4; Verbosity 	3; Sensitivity 	7.5; K-mer size 	0; K-scor",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/12#issuecomment-275107869:525,error,error,525,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/12#issuecomment-275107869,1,['error'],['error']
Availability,"Oh gosh yes, my fault, it seems like I specificed a wrong limit. . Thanks for the fast response",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/232#issuecomment-537486096:16,fault,fault,16,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/232#issuecomment-537486096,1,['fault'],['fault']
Availability,"Okay I am not sure how to reproduce the issue. It doesn't crash here. ; Does it crash consistently? . Can you please repeat only the linclust call with the same tmp files:; ```; mmseqs linclust tmp2/6664721939282577716/input tmp2/6664721939282577716/clu_tmp/1194185237556116514/clu_redundancy tmp2/6664721939282577716/clu_tmp/1194185237556116514/linclust --cluster-mode 0 --max-iterations 1000 --similarity-type 2 --threads 24 --compressed 0 -v 3 --cluster-weight-threshold 0.9 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' -a 0 --alignment-mode 3 --alignment-output-mode 0 --wrapped-scoring 0 -e 0.001 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 1 --comp-bias-corr-scale 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --corr-score-weight 0 --gap-open aa:11,nucl:5 --gap-extend aa:1,nucl:2 --zdrop 40 --alph-size aa:13,nucl:5 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-prob 0.9 --mask-lower-case 0 -k 0 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --rescore-mode 0 --filter-hits 0 --sort-results 0 --remove-tmp-files 1 --force-reuse 0; ```",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/679#issuecomment-1461591707:1206,mask,mask,1206,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/679#issuecomment-1461591707,3,['mask'],"['mask', 'mask-lower-case', 'mask-prob']"
Availability,"Okay, I did some looking and found that our cluster is capable of also running openmpi instead of mvapich2. Unsurpisingly, after loading this and recompiling the program, it works as you said. Thank you!. Fyi if you all are looking to debug for the mvapich2 system, this is the error that comes after running those commands on this system (happy to test any issues/fixes here if it's useful to you):; ```; (gdb) bt; #0 0x00007ffff7186abc in MPID_Abort () from /usr/local/pace-apps/spack/packages/linux-rhel7-x86_64/gcc-10.3.0/mvapich2-2.3.6-ouywalrqjnakjlhjxgunwqssb3iongrc/lib/libmpi.so.12; #1 0x00007ffff71419db in MPIR_Handle_fatal_error () from /usr/local/pace-apps/spack/packages/linux-rhel7-x86_64/gcc-10.3.0/mvapich2-2.3.6-ouywalrqjnakjlhjxgunwqssb3iongrc/lib/libmpi.so.12; #2 0x00007ffff7141b59 in MPIR_Err_return_comm () from /usr/local/pace-apps/spack/packages/linux-rhel7-x86_64/gcc-10.3.0/mvapich2-2.3.6-ouywalrqjnakjlhjxgunwqssb3iongrc/lib/libmpi.so.12; #3 0x00007ffff70fa699 in PMPI_Init () from /usr/local/pace-apps/spack/packages/linux-rhel7-x86_64/gcc-10.3.0/mvapich2-2.3.6-ouywalrqjnakjlhjxgunwqssb3iongrc/lib/libmpi.so.12; #4 0x0000000000479714 in MMseqsMPI::init(int, char const**) (); #5 0x00000000005d44a1 in kmermatcher(int, char const**, Command const&) (); #6 0x000000000046f2f9 in runCommand(Command*, int, char const**) (); #7 0x000000000045af9b in main (); ```",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/679#issuecomment-1461685569:278,error,error,278,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/679#issuecomment-1461685569,1,['error'],['error']
Availability,"Okay, so the option is actually available and should be usable, but we have a bug in the parameter list display and its not shown. I will look into it.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/75#issuecomment-375242026:32,avail,available,32,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/75#issuecomment-375242026,2,['avail'],['available']
Availability,"Okay, the standard output is here https://gist.github.com/bastian-wur/1b978870a88c3ead69f51e77e65b4696 ; You can see that ""sequence pairs passed the thresholds"" is different for all 3 of them. Maybe of importance, not sure: The used database is pretty redundant. Not sure if there are many identical matches in there, but many which are pretty close to each other.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/277#issuecomment-590294564:252,redundant,redundant,252,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/277#issuecomment-590294564,1,['redundant'],['redundant']
Availability,One of my students might be down for it. Let me know how best to proceed.,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/93#issuecomment-553705377:28,down,down,28,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/93#issuecomment-553705377,1,['down'],['down']
Availability,Opened one: #773 . Also compiled and tested downloading PDB database and it works fine. @milot-mirdita,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/772#issuecomment-1796590369:44,down,downloading,44,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/772#issuecomment-1796590369,1,['down'],['downloading']
Availability,"PATH/pref_step$STEP"" ${PREFILTER1_PAR}; $RUNNER mmseqs align ""$INPUT"" ""$INPUT"" ""$TMPPATH/pref_step$STEP"" ""$TMPPATH/aln_step$STEP"" ${ALIGNMENT1_PAR}; mmseqs cluster $INPUT ""$TMPPATH/aln_step$STEP"" ""$TMPPATH/clu_step$STEP"" ${CLUSTER1_PAR}. # create database unicluster 90% (we need to merge redundancy, step_0 and step_1); mmseqs mergeclusters ""${SEQUENCE_DB}"" $OUTDIR/uniclust90_$RELEASE \; ""$TMPPATH/clu_frag"" ""$TMPPATH/clu_redundancy"" $TMPPATH/clu_step0 $TMPPATH/clu_step1. awk '{ print $1 }' ""$TMPPATH/clu_step$STEP.index"" > ""$TMPPATH/order_step$STEP""; mmseqs createsubdb ""$TMPPATH/order_step$STEP"" $INPUT ""$TMPPATH/input_step2"". # now we cluster down to 30% sequence id to produce a 30% and 50% clustering; STEP=2; INPUT=$TMPPATH/input_step2; $RUNNER mmseqs prefilter $INPUT $INPUT ""$TMPPATH/pref_step$STEP"" ${PREFILTER2_PAR}; $RUNNER mmseqs align $INPUT $INPUT ""$TMPPATH/pref_step$STEP"" ""$TMPPATH/aln_step$STEP"" ${ALIGNMENT2_PAR}. # cluster down to 50%; mmseqs filterdb ""$TMPPATH/aln_step$STEP"" ""$TMPPATH/aln_uniclust50"" \; --filter-column 3 --filter-regex '(0\.[5-9][0-9]{2}|1\.000)'; mmseqs cluster $INPUT ""$TMPPATH/aln_uniclust50"" ""$TMPPATH/clu_uniclust50"" ${CLUSTER2_PAR}; mmseqs mergeclusters ""${SEQUENCE_DB}"" $OUTDIR/uniclust50_$RELEASE \; ""$TMPPATH/clu_frag"" ""$TMPPATH/clu_redundancy"" $TMPPATH/clu_step0 $TMPPATH/clu_step1 $TMPPATH/clu_uniclust50. STEP=2; INPUT=$TMPPATH/input_step2; # cluster down to 30%; mmseqs cluster $INPUT ""$TMPPATH/aln_step$STEP"" ""$TMPPATH/clu_uniclust30"" ${CLUSTER2_PAR}; mmseqs mergeclusters ""${SEQUENCE_DB}"" $OUTDIR/uniclust30_$RELEASE \; ""$TMPPATH/clu_frag"" ""$TMPPATH/clu_redundancy"" $TMPPATH/clu_step0 $TMPPATH/clu_step1 $TMPPATH/clu_uniclust30; ```. However, I experience another error in step 2 `cluster`. ; ```; linclust /home/outdir/2023_06/tmp/input_step2 /home/outdir/2023_06/tmp/clu_uniclust30/13156544047496927710/clu_redundancy /home/outdir/2023_06/tmp/clu_uniclust30/13156544047496927710/linclust --cluster-mode 0 --max-iter; ations 1000 --similarity",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/700#issuecomment-1589819536:4596,down,down,4596,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/700#issuecomment-1589819536,1,['down'],['down']
Availability,"POSIX_MEMALIGN; -- Performing Test HAVE_POSIX_MEMALIGN - Success; -- Performing Test HAVE_AVX2_EXTENSIONS; -- Performing Test HAVE_AVX2_EXTENSIONS - Failed; -- Performing Test HAVE_AVX_EXTENSIONS; -- Performing Test HAVE_AVX_EXTENSIONS - Failed; -- Performing Test HAVE_SSE4_2_EXTENSIONS; -- Performing Test HAVE_SSE4_2_EXTENSIONS - Success; -- Performing Test HAVE_SSE4_1_EXTENSIONS; -- Performing Test HAVE_SSE4_1_EXTENSIONS - Success; -- Performing Test HAVE_SSE3_EXTENSIONS; -- Performing Test HAVE_SSE3_EXTENSIONS - Success; -- Performing Test HAVE_SSE2_EXTENSIONS; -- Performing Test HAVE_SSE2_EXTENSIONS - Success; -- Performing Test HAVE_SSE_EXTENSIONS; -- Performing Test HAVE_SSE_EXTENSIONS - Success; -- Found SSE4.2 extensions, using flags: -msse4.2 -mfpmath=sse; -- Could NOT find GTest (missing: GTEST_LIBRARY GTEST_INCLUDE_DIR GTEST_MAIN_LIBRARY); -- Could NOT find GMock (missing: GMOCK_LIBRARY GMOCK_INCLUDE_DIR GMOCK_MAIN_LIBRARY); -- Compile blastp.sh to /Users/moorer/Downloads/mmseqs2/src/generatedfiles/blastp.sh.h; -- Compile blastpgp.sh to /Users/moorer/Downloads/mmseqs2/src/generatedfiles/blastpgp.sh.h; -- Compile blosum100.out to /Users/moorer/Downloads/mmseqs2/src/generatedfiles/blosum100.out.h; -- Compile blosum30.out to /Users/moorer/Downloads/mmseqs2/src/generatedfiles/blosum30.out.h; -- Compile blosum35.out to /Users/moorer/Downloads/mmseqs2/src/generatedfiles/blosum35.out.h; -- Compile blosum40.out to /Users/moorer/Downloads/mmseqs2/src/generatedfiles/blosum40.out.h; -- Compile blosum45.out to /Users/moorer/Downloads/mmseqs2/src/generatedfiles/blosum45.out.h; -- Compile blosum50.out to /Users/moorer/Downloads/mmseqs2/src/generatedfiles/blosum50.out.h; -- Compile blosum55.out to /Users/moorer/Downloads/mmseqs2/src/generatedfiles/blosum55.out.h; -- Compile blosum60.out to /Users/moorer/Downloads/mmseqs2/src/generatedfiles/blosum60.out.h; -- Compile blosum62.out to /Users/moorer/Downloads/mmseqs2/src/generatedfiles/blosum62.out.h; -- Compile blosum65.ou",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/7#issuecomment-265028472:2259,Down,Downloads,2259,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/7#issuecomment-265028472,1,['Down'],['Downloads']
Availability,Parallelization across compute nodes should work without issue by using MPI/OpenMP hybrid parallelization:; https://github.com/soedinglab/MMseqs2/wiki#how-to-run-mmseqs2-on-multiple-servers-using-mpi. (Setting the RUNNER environment variable with the mpirun envocation). Regarding the memory usage: MMseqs2 will use as much memory as the compute node has available. You can force it to split the target database into chunks to reduce the peak memory usage at the cost of slight increase in run time. Use either the `--split` or the `--split-memory-limit` for that.,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/168#issuecomment-467835630:355,avail,available,355,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/168#issuecomment-467835630,1,['avail'],['available']
Availability,Perhaps one option would be to raise an error in `convertmsa` with a helpful message when the user specifies an identifier field that is absent from the stockholm file?,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/pull/96#issuecomment-397010828:40,error,error,40,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/pull/96#issuecomment-397010828,1,['error'],['error']
Availability,"Please download the latest git mmseqs as prebuilt binaries from https://mmseqs.com/latest or compile from source. The issue is already fixed there, however it’s not part of a release yet.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/762#issuecomment-1759207874:7,down,download,7,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/762#issuecomment-1759207874,1,['down'],['download']
Availability,Please download the latest precompiled static binaries from https://mmseqs.com/latest. GTDB download should work with these,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/561#issuecomment-1206685952:7,down,download,7,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/561#issuecomment-1206685952,2,['down'],['download']
Availability,Please reopen if the error still occurs.,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/224#issuecomment-581269379:21,error,error,21,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/224#issuecomment-581269379,1,['error'],['error']
Availability,Please try the git version of MMseqs2 (either compile from source or download from https://mmseqs.com/latest). The recent changes from the just published preprint or not part of the latest released version yet.,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/385#issuecomment-742763807:69,down,download,69,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/385#issuecomment-742763807,1,['down'],['download']
Availability,"Problem solved by downloading the PDB via Foldseek, as specified here #821",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/820#issuecomment-2007500677:18,down,downloading,18,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/820#issuecomment-2007500677,1,['down'],['downloading']
Availability,"R/tanshangjin/01_gene_cat/protein_cat/all_protein_merge_95.db /hwfssz1/ST_DIVERSITY/P18Z10200N0197_temp/USER/tanshangjin/01_gene_cat/protein_cat/tmp/14045843375066908893/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-id 0.95 --kmer-per-seq 80 --spaced-kmer-mode 0 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 1 -k 0 -c 0.9 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 600G --include-only-extendable 0 --ignore-multi-kmer 0 --threads 50 --compressed 0 -v 3 . kmermatcher /hwfssz1/ST_DIVERSITY/P18Z10200N0197_temp/USER/tanshangjin/01_gene_cat/protein_cat/all_protein_merge_95.db /hwfssz1/ST_DIVERSITY/P18Z10200N0197_temp/USER/tanshangjin/01_gene_cat/protein_cat/tmp/14045843375066908893/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-id 0.95 --kmer-per-seq 80 --spaced-kmer-mode 0 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 1 -k 0 -c 0.9 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 600G --include-only-extendable 0 --ignore-multi-kmer 0 --threads 50 --compressed 0 -v 3 . Database size: 773451991 type: Nucleotide. Not enough memory to process at once need to split; [=================================================================] 773.45M 1h 49m 44s 916ms; Process file into 1 parts; Generate k-mers list for 1 split; [=================================================================] 773.45M 3m 43s 762ms. Adjusted k-mer length 18; Sort kmer 0h 0m 8s 851ms; Sort by rep. sequence 0h 0m 0s 535ms; Merge splits ... Time for fill: 0h 0m 8s 279ms; Time for merging to pref: 0h 0m 0s 18ms; Time for processing: 2h 8m 37s 699ms; rescorediagonal /hwfssz1/ST_DIVERSITY/P18Z10200N0197_temp/USER/tanshangjin/01_gene_cat/protein_cat/all_protein_merge_95.db /hwfssz1/ST_DIVERSITY/P18Z10200N0197_temp/USER/tanshangjin/01_gene_cat/protein_cat/all_protein_merge_95.db /hwfssz1/ST_DIVERSITY/P18Z",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/365#issuecomment-713411153:10246,mask,mask,10246,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/365#issuecomment-713411153,2,['mask'],"['mask', 'mask-lower-case']"
Availability,"Recompiled in Debug mode, more details. ```; Thread 1 ""mmseqs"" received signal SIGSEGV, Segmentation fault.; 0x0000555555a8d40b in tantan::Tantan::calcForwardTransitionAndEmissionProbs (this=0x7ffffffbaaa0); at /mnt/disks/kc-ssd/MMseqs2/src/commons/tantan.cpp:319; 319	 foregroundBeg[i] = (b * b2fProbs[i] + f * f2f0) * lrRow[(int)seqPtr[-i-1]];; (gdb) bt; #0 0x0000555555a8d40b in tantan::Tantan::calcForwardTransitionAndEmissionProbs (this=0x7ffffffbaaa0); at /mnt/disks/kc-ssd/MMseqs2/src/commons/tantan.cpp:319; #1 0x0000555555a8d845 in tantan::Tantan::calcRepeatProbs (this=0x7ffffffbaaa0, letterProbs=0x555556582704); at /mnt/disks/kc-ssd/MMseqs2/src/commons/tantan.cpp:373; #2 0x0000555555a8bf6b in tantan::getProbabilities (; seqBeg=0x5555564e06c0 ""\025\025\025\025\025\025\025\n\f\003\v\020\f\016\020\020\016\017"", seqEnd=0x5555564e07b9 """",; maxRepeatOffset=50, likelihoodRatioMatrix=0x55555643d8f0, repeatProb=0.0050000000000000001, repeatEndProb=0.050000000000000003,; repeatOffsetProbDecay=0.90000000000000002, firstGapProb=0, otherGapProb=0, probabilities=0x555556582700); at /mnt/disks/kc-ssd/MMseqs2/src/commons/tantan.cpp:470; #3 0x0000555555a8be5f in tantan::maskSequences (; seqBeg=0x5555564e06c0 ""\025\025\025\025\025\025\025\n\f\003\v\020\f\016\020\020\016\017"", seqEnd=0x5555564e07b9 """",; maxRepeatOffset=50, likelihoodRatioMatrix=0x55555643d8f0, repeatProb=0.0050000000000000001, repeatEndProb=0.050000000000000003,; repeatOffsetProbDecay=0.90000000000000002, firstGapProb=0, otherGapProb=0, minMaskProb=0.89999997615814209,; maskTable=0x7ffffffdc530 '\024' <repeats 200 times>...) at /mnt/disks/kc-ssd/MMseqs2/src/commons/tantan.cpp:449; #4 0x000055555597de7b in PSSMMasker::mask (this=0x7ffffffbaca0, centerSequence=..., maskProb=0.899999976, pssmRes=...); at /mnt/disks/kc-ssd/MMseqs2/src/alignment/PSSMMasker.h:25; #5 0x00005555559f916b in result2profile () at /mnt/disks/kc-ssd/MMseqs2/src/util/result2profile.cpp:262; #6 0x00007ffff7c7c4c2 in GOMP_parallel () from /lib/x86",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/592#issuecomment-1214486961:101,fault,fault,101,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/592#issuecomment-1214486961,1,['fault'],['fault']
Availability,"Replacing the `util/regression/samtools/samtools.sh` with the following works:; ```; #!/bin/sh -e; SELF=""$( cd ""$(dirname ""$0"")"" ; pwd -P )""; SUFFIX=""""; case ""$(uname -m)"" in; arm*|aarch*) SUFFIX=""-aarch64"" ;;; ppc*) SUFFIX=""-ppc64le"" ;;; esac; case ""$(echo ""$OSTYPE"" | tr '[:upper:]' '[:lower:]')"" in; linux*) exec ""$SELF/samtools-linux$SUFFIX"" ""$@"" ;;; darwin*) exec ""$SELF/samtools-darwin"" ""$@"" ;;; msys*|cygwin*) exec ""$SELF/samtools-windows"" ""$@"" ;;; esac; samtools ""$@""; ```; I don't want to push that commit that right now since we are in the process of some bigger refactoring. `SLICEPROFILE` is a bit fickle about RAM available per core used. That seems to have been the problem:; ```; [=======mem_align could not allocate memory.; ```. I also fixed the bogus error messages in https://github.com/soedinglab/MMseqs2/commit/15ace29a276be54fee6b9aedd7a1e814a3c7769b",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/460#issuecomment-868662414:253,echo,echo,253,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/460#issuecomment-868662414,3,"['avail', 'echo', 'error']","['available', 'echo', 'error']"
Availability,"Rescore mode 	0; Remove hits by seq. id. and coverage	false; Sort results 	0; Mask profile 	1; Profile e-value threshold 	0.1; Global sequence weighting 	false; Allow deletions 	false; Filter MSA 	1; Maximum seq. id. threshold 	0.9; Minimum seq. id. 	0; Minimum score per column 	-20; Minimum coverage 	0; Select N most diverse seqs 	1000; Omit consensus 	false; Min codons in orf 	30; Max codons in length 	32734; Max orf gaps 	2147483647; Contig start mode 	2; Contig end mode 	2; Orf start mode 	1; Forward frames 	1,2,3; Reverse frames 	1,2,3; Translation table 	1; Translate orf 	0; Use all table starts 	false; Offset of numeric ids 	0; Create lookup 	0; Add orf stop 	false; Chain overlapping alignments 	0; Merge query 	1; Search type 	0; Search iterations 	1; Start sensitivity 	4; Search steps 	1; Slice search mode 	false; Strand selection 	1; Disk space limit 	0; MPI runner 	; Force restart with latest tmp 	false; Remove temporary files 	false. search -s 4 --threads 64 -e 100000 --comp-bias-corr 0 --mask 0 /tmp/56067190/queryT.fa.mmsq /tmp/56067190/queryT.fa.mmsq /tmp/56067190/queryT.fa.mmsq.outDB /scratch/jobs/56067190 . MMseqs Version: 	ca58693979f95537016a0454affcfd529dbde24d; Substitution matrix 	nucl:nucleotide.out,aa:blosum62.out; Add backtrace 	false; Alignment mode 	2; Allow wrapped scoring 	false; E-value threshold 	100000; Seq. id. threshold 	0; Min alignment length 	0; Seq. id. mode 	0; Alternative alignments 	0; Coverage threshold 	0; Coverage mode 	0; Max sequence length 	65535; Compositional bias 	0; Realign hits 	false; Max reject 	2147483647; Max accept 	2147483647; Include identical seq. id. 	false; Preload mode 	0; Pseudo count a 	1; Pseudo count b 	1.5; Score bias 	0; Gap open cost 	11; Gap extension cost 	1; zdrop 	40; Threads 	64; Compressed 	0; Verbosity 	3; Seed substitution matrix 	nucl:nucleotide.out,aa:VTML80.out; Sensitivity 	4; k-mer length 	0; k-score 	2147483647; Alphabet size 	nucl:5,aa:21; Max results per query 	300; Split database 	0;",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/281#issuecomment-593953276:2389,mask,mask,2389,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/281#issuecomment-593953276,1,['mask'],['mask']
Availability,"SIONS; -- Performing Test HAVE_SSE_EXTENSIONS - Success; -- Found SSE4.2 extensions, using flags: -msse4.2 -mfpmath=sse; -- Could NOT find GTest (missing: GTEST_LIBRARY GTEST_INCLUDE_DIR GTEST_MAIN_LIBRARY); -- Could NOT find GMock (missing: GMOCK_LIBRARY GMOCK_INCLUDE_DIR GMOCK_MAIN_LIBRARY); -- Compile blastp.sh to /Users/moorer/Downloads/mmseqs2/src/generatedfiles/blastp.sh.h; -- Compile blastpgp.sh to /Users/moorer/Downloads/mmseqs2/src/generatedfiles/blastpgp.sh.h; -- Compile blosum100.out to /Users/moorer/Downloads/mmseqs2/src/generatedfiles/blosum100.out.h; -- Compile blosum30.out to /Users/moorer/Downloads/mmseqs2/src/generatedfiles/blosum30.out.h; -- Compile blosum35.out to /Users/moorer/Downloads/mmseqs2/src/generatedfiles/blosum35.out.h; -- Compile blosum40.out to /Users/moorer/Downloads/mmseqs2/src/generatedfiles/blosum40.out.h; -- Compile blosum45.out to /Users/moorer/Downloads/mmseqs2/src/generatedfiles/blosum45.out.h; -- Compile blosum50.out to /Users/moorer/Downloads/mmseqs2/src/generatedfiles/blosum50.out.h; -- Compile blosum55.out to /Users/moorer/Downloads/mmseqs2/src/generatedfiles/blosum55.out.h; -- Compile blosum60.out to /Users/moorer/Downloads/mmseqs2/src/generatedfiles/blosum60.out.h; -- Compile blosum62.out to /Users/moorer/Downloads/mmseqs2/src/generatedfiles/blosum62.out.h; -- Compile blosum65.out to /Users/moorer/Downloads/mmseqs2/src/generatedfiles/blosum65.out.h; -- Compile blosum70.out to /Users/moorer/Downloads/mmseqs2/src/generatedfiles/blosum70.out.h; -- Compile blosum75.out to /Users/moorer/Downloads/mmseqs2/src/generatedfiles/blosum75.out.h; -- Compile blosum80.out to /Users/moorer/Downloads/mmseqs2/src/generatedfiles/blosum80.out.h; -- Compile blosum85.out to /Users/moorer/Downloads/mmseqs2/src/generatedfiles/blosum85.out.h; -- Compile blosum90.out to /Users/moorer/Downloads/mmseqs2/src/generatedfiles/blosum90.out.h; -- Compile blosum95.out to /Users/moorer/Downloads/mmseqs2/src/generatedfiles/blosum95.out.h; -- Compile cascaded_",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/7#issuecomment-265028472:2914,Down,Downloads,2914,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/7#issuecomment-265028472,1,['Down'],['Downloads']
Availability,Same error as https://github.com/soedinglab/MMseqs2/issues/181,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/180#issuecomment-477696768:5,error,error,5,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/180#issuecomment-477696768,1,['error'],['error']
Availability,"Same error on clustering protein sequences with `easy-cluster`, command I used: ; ```bash; mmseqs easy-cluster raw/proteins.faa.gz processed/proteins.id50.c90 tmp \; -c 0.9 --min-seq-id 0.5 --threads 16 --cluster-reassign; ```",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/765#issuecomment-2036788882:5,error,error,5,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/765#issuecomment-2036788882,1,['error'],['error']
Availability,Same error. Hope it will be fixed.,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/765#issuecomment-1879609708:5,error,error,5,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/765#issuecomment-1879609708,1,['error'],['error']
Availability,"Same here, has tracked it down to this command:. mmseqs tar2db /localscratch/users/latest/gtdb.tar.gz /localscratch/users/latest/tardb --tar-include faa$. The problem comes with the regular expresion used in the option --tar-include, I cannot find why, but if you set it with the $ at the end, it doesn't works. If you remove it it works but obviously it is going to accept more files than desired. . I have tried with different regular expressions, scaping the $, quoting it, etc... no one works, it seems like the tar2db is silently failing when you use there any regular expression, but works when you use a simple string.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/561#issuecomment-1120775763:26,down,down,26,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/561#issuecomment-1120775763,2,['down'],['down']
Availability,"Seq. Id Threshold 	0.8; > Kmer per sequence 	20; > Mask Residues 	0; > Coverage Mode 	0; > K-mer size 	10; > Coverage threshold 	0.8; > Max. sequence length 	32000; > Shift hash 	5; > Split Memory Limit 	0; > Include only extendable	false; > Threads 	20; > Verbosity 	3; > ; > Database type: Aminoacid; > V -> I; > M -> L; > Q -> E; > T -> S; > R -> K; > Y -> F; > S -> A; > N -> D; > Reduced amino acid alphabet:; > A C D E F G H I K L P W X ; > ; > Needed memory (4160 byte) of total memory (243728993894 byte); > Process file into 1 parts; > Generate k-mers list 0; > ; > Time for fill: 0 h 0 m 0s; > Done.; > Sort kmer ... Done.; > Time for sort: 0 h 0 m 0s; > Sort by rep. sequence ... Done; > Time for sort: 0 h 0 m 0s; > Time for fill: 0 h 0 m 0s; > Time for merging files: 0 h 0 m 0 s; > Time for processing: 0 h 0 m 0s; > Rescore diagonals. However, I get the following error when there are some identical sequences:. > MMseqs Version: 	8c0c7fb86ce154b236d6fe294811de3b09850fba; > Sub Matrix 	blosum62.out; > Alphabet size 	13; > Seq. Id Threshold 	0.8; > Kmer per sequence 	20; > Mask Residues 	0; > Coverage Mode 	0; > K-mer size 	10; > Coverage threshold 	0.8; > Max. sequence length 	32000; > Shift hash 	5; > Split Memory Limit 	0; > Include only extendable	false; > Threads 	20; > Verbosity 	3; > ; > Database type: Aminoacid; > V -> I; > M -> L; > Q -> E; > T -> S; > R -> K; > Y -> F; > S -> A; > N -> D; > Reduced amino acid alphabet:; > A C D E F G H I K L P W X ; > ; > Needed memory (3200 byte) of total memory (243728993894 byte); > Process file into 1 parts; > Generate k-mers list 0; > ; > Time for fill: 0 h 0 m 0s; > Done.; > Sort kmer ... Done.; > Time for sort: 0 h 0 m 0s; > Sort by rep. sequence ... Done; > Time for sort: 0 h 0 m 0s; > ~/tmp/2230240821590219627/linclust/10911929691229894817/linclust.sh: line 18: 28296 Segmentation fault (core dumped) $MMSEQS kmermatcher ""$INPUT"" ""$3/pref"" ${KMERMATCHER_PAR}; > Rescore diagonals. Has anyone seen this before? Thanks!",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/4#issuecomment-384867282:1277,Mask,Mask,1277,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/4#issuecomment-384867282,2,"['Mask', 'fault']","['Mask', 'fault']"
Availability,Should be fixed now. Statically built binaries with the fix will be available at http://mmseqs.com/latest/ in about an hour. We will also make a new release in the next few weeks.,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/379#issuecomment-735712461:68,avail,available,68,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/379#issuecomment-735712461,1,['avail'],['available']
Availability,So far so good. The program is running smoothly and the kmermatcher step is ended without errors. . ```; kmermatcher data/02_geneclust/plass_assembly_noclust /mnt/lustre/scratch/aauladell/9518450204626139512/pref --sub-mat blosum62.out --alph-size 13 --min-seq-id 0.95 --kmer-per-seq 21 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-m; ode 0 -k 0 -c 0.9 --max-seq-len 65535 --hash-shift 5 --split-memory-limit 0 --include-only-extendable 0 --skip-n-repeat-kmer 0 --threads 48 --compressed 0 -v 3. Database size: 823952135 type: Aminoacid; Reduced amino acid alphabet: (A S T) (C) (D B N) (E Q Z) (F Y) (G) (H) (I V) (K R) (L J M) (P) (W) (X). Estimated memory consumption 263893 MB; Generate k-mers list for 1 split; [=================================================================] 823.95M 37m 20s 931ms; Sort kmer 0h 11m 29s 726ms; Sort by rep. sequence 0h 2m 46s 392ms; Time for fill: 0h 3m 48s 1ms; Time for merging files: 0h 4m 55s 350ms; Time for processing: 1h 13m 27s 843ms; ```. Thanks!,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/208#issuecomment-499063090:90,error,errors,90,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/208#issuecomment-499063090,3,"['error', 'mask']","['errors', 'mask', 'mask-lower-case']"
Availability,"So i fixed this error (https://github.com/soedinglab/MMseqs2/commit/d9744e3c28dadd2cc8c03c8c5c8179400d8fb55a + https://github.com/soedinglab/MMseqs2/commit/852f04de365a377b0d24b8382b51c281933d8250). I ran the regression test and there are a lot of failures. I guess some are related to https://github.com/soedinglab/MMseqs2/issues/253 as nucleotide 13-mers (or even worse by default 15-mers) require more than 4GB RAM. But other failures are way worse:; The sensitivity changes slightly in many tests, meaning 32-bit MMseqs2 produces different than 64-bit MMseqs2. This is pretty bad and would require to go through every module invocation separately to track where differences first happen and then find the root cause. This would be very time consuming and for an architecture where you can barely search against any realistically sized database.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/418#issuecomment-786279748:16,error,error,16,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/418#issuecomment-786279748,3,"['error', 'failure']","['error', 'failures']"
Availability,"So pretty sure I know what's going on. Doing a tblastx style search against the NT results in over 4B fragments (slightly over 7B). MMseqs2 can search at most against 4B (UINT_MAX) fragments at a time. You could use the `--min-length` parameter to increase the minimum fragment length to cut down on the number of ORFs produced. By default it will extract fragments of at least 30 codons (30*3 nucleotides) long. Getting around this limitation is a longer term goal, that we haven't really decided how to tackle yet.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/426#issuecomment-802035102:292,down,down,292,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/426#issuecomment-802035102,1,['down'],['down']
Availability,Solved. Filesystem error.,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/784#issuecomment-1828998769:19,error,error,19,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/784#issuecomment-1828998769,1,['error'],['error']
Availability,Some sequences in there are proprietary. But I can get some public sequences and recreate the error. Those I can send to you.,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/374#issuecomment-730411136:94,error,error,94,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/374#issuecomment-730411136,1,['error'],['error']
Availability,"Somehow downloading trough `conda` always downloaded an old version of the package, using `wget` solved my problem! Thanks again for the help.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/681#issuecomment-1480966168:8,down,downloading,8,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/681#issuecomment-1480966168,2,['down'],"['downloaded', 'downloading']"
Availability,"Sorry I was traveling. I don't see anything out of the ordinary in your screenshot. ; I still don't really have an idea whats going on. I repeated the UniRef search with your query on the MSA server:; ```; Command being timed: ""mmseqs search mmseq_in_db uniref30_2202_db mmseq_in_res mmseq_in_tmp --threads 1 --num-iterations 3 --db-load-mode 2 -a -s 8 -e 0.1 --max-seqs 10000""; User time (seconds): 13.10; System time (seconds): 21.13; Percent of CPU this job got: 99%; Elapsed (wall clock) time (h:mm:ss or m:ss): 0:34.23; Average shared text size (kbytes): 0; Average unshared data size (kbytes): 0; Average stack size (kbytes): 0; Average total size (kbytes): 0; Maximum resident set size (kbytes): 19188072; Average resident set size (kbytes): 0; Major (requiring I/O) page faults: 0; Minor (reclaiming a frame) page faults: 9091215; Voluntary context switches: 57; Involuntary context switches: 503; Swaps: 0; File system inputs: 0; File system outputs: 8888; Socket messages sent: 0; Socket messages received: 0; Signals delivered: 0; Page size (bytes): 4096; Exit status: 0; ```. One thing we do differently since we still have enough spare CPU capacity on the server is enable some limited multithreading and parallel processing. We use `--threads 2`, which will hide quite a bit of overhead in your use-case:; ```; User time (seconds): 12.32; System time (seconds): 20.86; Percent of CPU this job got: 132%; Elapsed (wall clock) time (h:mm:ss or m:ss): 0:25.12; ```. And we also start the env-db and template search in parallel to the expand-align steps. ; (`path.colabfold.parallelstages` parameter in the API server). This will hide quite a bit of latency. However, the initial search is still a lot faster for us despite worse CPU/RAM specs. . Can you check if `vmtouch` has actually but everything into RAM? `htop` should look something like this:; ```; root 20 0 605G 605G 605G S 0.0 15.0 6:22.98 /home/steineggerlab/miniforge3/bin/vmtouch -f -t -l -m 4000 colabfold_envdb_202108.idx pd",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/658#issuecomment-1407974953:779,fault,faults,779,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/658#issuecomment-1407974953,2,['fault'],['faults']
Availability,"Sorry for the confusion, I'll repeat from the start:. ```; # download PDB with Foldseek; foldseek databases PDB pdb tmp. #; # The command above will download and create many files (might not be exactly the same as listed here):; # pdb prefix:; # pdb, pdb.index, pdb.dbtype <- MMseqs2 DB; # pdb_h, pdb_h.index, pdb_h.dbtype <- MMseqs2 DB; # pdb_ss, pdb_ss.index, pdb_ss.dbtype <- Foldseek specific part; # pdb_ca, pdb_ca.index, pdb_ca.dbtype <- Foldseek specific part; #; # pdb_seq prefix:; # pdb_seq, pdb_seq.index, pdb_seq.dbtype <- MMseqs2 DB; # pdb_seq_h, pdb_seq_h.index, pdb_seq_h.dbtype <- MMseqs2 DB; # pdb_seq_ss, pdb_seq_ss.index, pdb_seq_ss.dbtype <- Foldseek specific; # pdb_seq_ca, pdb_seq_ca.index, pdb_seq_ca.dbtype <- Foldseek specific. # pdb prefix contains only cluster representatives; # pdb_seq prefix contains all entries, therefore use this one for MMseqs2 searches:; mmseqs easy-search query.fasta pdb_seq res.m8 tmp. ```",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/821#issuecomment-2002540638:61,down,download,61,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/821#issuecomment-2002540638,2,['down'],['download']
Availability,"Sorry for the delay, I am currently quite busy finishing another project. I can't reproduce your issue on our machines.; Since the prefilter call doesn't produce any output at all from mmseqs it looks like its crashing in `MMseqsMPI::init`. ```; void MMseqsMPI::init(int argc, const char **argv) {; #ifdef HAVE_MPI; MPI_Init(&argc, const_cast<char ***>(&argv));; MPI_Comm_rank(MPI_COMM_WORLD, &rank);; MPI_Comm_size(MPI_COMM_WORLD, &numProc);. active = true;. if(!isMaster()) {; Parameters& par = Parameters::getInstance();; par.verbosity = Debug::ERROR;; Debug::setDebugLevel(Debug::ERROR);; }. Debug(Debug::INFO) << ""MPI Init...\n"";; Debug(Debug::INFO) << ""Rank: "" << rank << "" Size: "" << numProc << ""\n"";; #endif; }; ```. This is how it looks like. Since we don't even see the ""MPI Init..."" string. It is probably crashing in `MPI_Init`, `MPI_Comm_rank`, or `MPI_Comm_size`. This points to a faulty OpenMPI installation. Can you run other MPI programs on your machine?. You can also contact me at milot [at] mirdita . de and we can try to debug the issue in a chat session with faster turnaround times. Best regards,; Milot",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/34#issuecomment-311062480:548,ERROR,ERROR,548,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/34#issuecomment-311062480,3,"['ERROR', 'fault']","['ERROR', 'faulty']"
Availability,"Sorry for the delay. I think the commit https://github.com/soedinglab/MMseqs2/commit/c5594768f9ea8070deeecc329e33d3a486bc95d7 should improve the situation. If no comment fields exist, the name of the first sequence will be chosen. I am not quite happy with the error, since it might be a pretty common use case.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/pull/96#issuecomment-400233226:261,error,error,261,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/pull/96#issuecomment-400233226,1,['error'],['error']
Availability,Sorry for the delay. I was dealing with some private stuff :/. I would drop 32-bit support. Even with the patch it doesn't pass the integration tests and tracking down why would be very low priority as we require a >4GB address space for everything except small databases anyway.,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/418#issuecomment-794112505:163,down,down,163,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/418#issuecomment-794112505,1,['down'],['down']
Availability,Sorry for the late answer. Milot and I have some deadlines approaching soon. . I could not reproduce the error. The error indicates that MMseqs2 tries to access an out of range offset in the data file `/tmp/global2/nyoungblut/LLMGAG_27929269397/clusters_rep-seqs_db_3_1`. Could you please check the size of this file? Is there any entry in the second column of `/tmp/global2/nyoungblut/LLMGAG_27929269397/clusters_rep-seqs_db_3_1.index` that is greater than the data file size?,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/168#issuecomment-472642101:105,error,error,105,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/168#issuecomment-472642101,2,['error'],['error']
Availability,"Sorry for the late reply, . Currently the version of mmseqs I have is `MMseqs2 Version: 13.45111`. The messages I get for the functions are. ```; --msa-format-mode INT Format MSA as: 0: binary cA3M DB; 1: binary ca3m w. consensus DB; 2: aligned FASTA DB; 3: aligned FASTA w. header summary; 4: STOCKHOLM flat file [0]; ```; While for `mmseqs unpackdb` I have; ```; usage: mmseqs unpackdb <i:DB> <o:outDir> [options]; By Milot Mirdita <milot@mirdita.de>; options: common:; -v INT Verbosity level: 0: quiet, 1: +errors, 2: +warnings, 3: +info [3]; ```. Do you think that just updating the version will solve the problem? I downloaded the library using the suggested conda command of the github page.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/681#issuecomment-1471607391:510,error,errors,510,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/681#issuecomment-1471607391,2,"['down', 'error']","['downloaded', 'errors']"
Availability,"Sorry for the late reply. Using wrapped-scoring was originally only supported with `RESCORE_MODE_HAMMING` by now, it should work with all rescore modes, but the error message you have mentioned was unfortunately left in. At that point in the code, `rescorediagonal` is always called with `RESCORE_MODE_ALIGNMENT`, whereas linclust always calls rescorediagonal with `RESCORE_MODE_HAMMING`, which is why you did not see this issue using linclust. I have removed the error message now. Can you check again with the latest version (bfc6f85)?",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/509#issuecomment-986305087:161,error,error,161,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/509#issuecomment-986305087,2,['error'],['error']
Availability,"Sorry to send you too late. ; Would you check if you may download the data from [here](https://drive.google.com/open?id=1pqUXLM6MT1cQVyQkccNDecMRdwNA8Osi) . If you cannot, do you suggest any other place to upload it?",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/230#issuecomment-538747139:57,down,download,57,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/230#issuecomment-538747139,1,['down'],['download']
Availability,"Sorry, but the thing is that it is related to this specific issue. . When you download Uniref90 from the web (https://www.uniprot.org/downloads) the FASTA has the following name structure: . ```; >UniRef90_Q6GZX3 Uncharacterized protein 002L n=26 Tax=Ranavirus TaxID=10492 RepID=002L_FRG3G; MSIIGATRLQNDKSDTYSAGPCYAGGCSAFTPRGTCGKDWDLGEQTCASGFCTSQPLCAR; ```; Due to the `UniRef90` tag I didn't had a `_mapping` file generated. Finally after checking the files I was able to see what was happening, I removed the tag and everything worked out clean.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/222#issuecomment-540474108:78,down,download,78,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/222#issuecomment-540474108,2,['down'],"['download', 'downloads']"
Availability,"Sorry, didn't get around to look at this. Glad it works now. The ""intended"" way to do this, would have been to you the `databases` workflow to download and create the database. It has its own handling of uniref (and uniprot) based headers, and should be generally slightly better, since it directly uses the information in the header, instead of going through the idmapping. This is the code it executes to make the `_mapping`:; https://github.com/soedinglab/MMseqs2/blob/998c50a01da760713ca2c7580801e94555d23c4d/data/workflow/databases.sh#L476-L483. afterwards `createtaxdb` is called setup the `_taxonomy`, which basically contains the NCBI taxdump.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/838#issuecomment-2094345420:143,down,download,143,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/838#issuecomment-2094345420,1,['down'],['download']
Availability,"Sorry, that will not work (at least not without a lot of refactoring). Our error handling would just kill the whole python/r/julia process. You could hack our EXIT macro, but then you would be leaking memory. Do you want all-against-all exact Smith-Waterman alignments (like SWIPE) or also the prefiltering stage?",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/81#issuecomment-381918443:75,error,error,75,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/81#issuecomment-381918443,1,['error'],['error']
Availability,"Sure, sorry.; MMseq2 is version '44bde75f0e9f4d0ffc60970bee13347fe89bcb96'. Is running on a Dell computer with 64 cores, in a 5TB partition of HDD and 1Tb of RAM, and with Ubuntu 18.04 LTS.; I don't find any log file so I attach you the log of the running prior to the fault ( 1>log.txt); Hope that help, thanks!! ; [log.txt](https://github.com/soedinglab/MMseqs2/files/3076480/log.txt)",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/187#issuecomment-482841608:269,fault,fault,269,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/187#issuecomment-482841608,1,['fault'],['fault']
Availability,"Sure, these are the commands used for performing protein to protein search with a modified substitution matrix (changed the score for X). `mmseqs createdb TestDB_Subject.fa testRun/targetDB; `; `mmseqs createdb TestQuery.fa testRun/queryDB; `; `mmseqs createindex --mask 0 testRun/targetDB testRun/tmp --comp-bias-corr 0 --seed-sub-mat PAM10_modified.out`. `mmseqs search testRun/queryDB testRun/targetDB testRun/resultDB testRun/tmp --comp-bias-corr 0 --mask 0 --sub-mat PAM10_modified.out -a`. `mmseqs convertalis testRun/queryDB testRun/targetDB testRun/resultDB testRun/resultDB.m8 --sub-mat PAM10_modified.out`. The result matrix <img width=""1137"" alt=""ResultTable"" src=""https://user-images.githubusercontent.com/3918230/59648222-e42df700-91b0-11e9-92f1-3aaf27cc2e58.png"">. [TestDB_Subject.txt](https://github.com/soedinglab/MMseqs2/files/3299493/TestDB_Subject.txt); [TestQuery.txt](https://github.com/soedinglab/MMseqs2/files/3299494/TestQuery.txt); [PAM10_modified.txt](https://github.com/soedinglab/MMseqs2/files/3299495/PAM10_modified.txt)",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/204#issuecomment-502917178:266,mask,mask,266,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/204#issuecomment-502917178,2,['mask'],['mask']
Availability,Sure-; Command:; `head -n 1 /Volumes/FireFly_Promise_Pegasus/RMugge/DISSERTATION/Ch3/Metagenome_Microcosm2.0/pipeline_2/08_mmseqs2/mmseqs2_B001_result_db*`. Output:; `head: Error reading /Volumes/FireFly_Promise_Pegasus/RMugge/DISSERTATION/Ch3/Metagenome_Microcosm2.0/pipeline_2/08_mmseqs2/mmseqs2_B001_result_db`. Command: ; `xxd /Volumes/FireFly_Promise_Pegasus/RMugge/DISSERTATION/Ch3/Metagenome_Microcosm2.0/pipeline_2/08_mmseqs2/mmseqs2_B001_result_db.dbtype`. Output:; `xxd: /Volumes/FireFly_Promise_Pegasus/RMugge/DISSERTATION/Ch3/Metagenome_Microcosm2.0/pipeline_2/08_mmseqs2/mmseqs2_B001_result_db.dbtype: No such file or directory`. So I modified the command (was missing a file name):; `xxd /Volumes/FireFly_Promise_Pegasus/RMugge/DISSERTATION/Ch3/Metagenome_Microcosm2.0/pipeline_2/08_mmseqs2/mmseqs2_B001_result_db/mmseqs2_B001_result_db.dbtype`. Output:; `00000000: 0500 0000 ....`,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/579#issuecomment-1191900319:173,Error,Error,173,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/579#issuecomment-1191900319,1,['Error'],['Error']
Availability,"Sure:. **first run**; ```; Program call:; search geneC.db genes.db geneC-v-all_3itr.db tmpC --no-preload --max-seqs 1000 --num-iterations 3 . MMseqs Version: 	GITDIR-NOTFOUND; Sub Matrix 	blosum62.out; Add backtrace 	true; Alignment mode 	2; E-value threshold 	0.001; Seq. Id Threshold 	0; Seq. Id. Mode 	0; Alternative alignments 	0; Coverage threshold 	0; Coverage Mode 	0; Max. sequence length 	65535; Max. results per query 	1000; Compositional bias 	1; Realign hit 	false; Max Reject 	2147483647; Max Accept 	2147483647; Include identical Seq. Id. 	false; No preload 	true; Pseudo count a 	1; Pseudo count b 	1.5; Score bias 	0; Gap open cost 	11; Gap extension cost 	1; Threads 	48; Verbosity 	3; Sensitivity 	5.7; K-mer size 	0; K-score 	2147483647; Alphabet size 	21; Offset result 	0; Split DB 	0; Split mode 	2; Split Memory Limit 	0; Diagonal Scoring 	1; Exact k-mer matching 	0; Mask Residues 	1; Minimum Diagonal score 	15; Spaced Kmer 	1; Spaced k-mer pattern 	; Rescore mode 	0; Remove hits by seq.id. and coverage 	false; Sort results 	0; In substitution scoring mode, performs global alignment along the diagonal	false; Mask profile 	1; Profile e-value threshold 	0.1; Use global sequence weighting 	false; Filter MSA 	1; Maximum sequence identity threshold 	0.9; Minimum seq. id. 	0; Minimum score per column 	-20; Minimum coverage 	0; Select n most diverse seqs 	1000; Omit Consensus 	false; Min codons in orf 	30; Max codons in length 	32734; Max orf gaps 	2147483647; Contig start mode 	2; Contig end mode 	2; Orf start mode 	0; Forward Frames 	1,2,3; Reverse Frames 	1,2,3; Translation Table 	1; Use all table starts 	false; Offset of numeric ids 	0; Add Orf Stop 	false; Number search iterations 	3; Start sensitivity 	4; Search steps 	1; Run a seq-profile search in slice mode 	0; Sets the MPI runner 	; Remove Temporary Files 	false. Tmp tmpC folder does not exist or is not a directory.; Created dir tmpC; Program call:; prefilter geneC.db genes.db tmpC/10139724895635470572/",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/160#issuecomment-461782109:891,Mask,Mask,891,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/160#issuecomment-461782109,1,['Mask'],['Mask']
Availability,"T1.tsv tmp1 --threads 12 --compressed 1 . MMseqs Version: 13.45111; Substitution matrix nucl:nucleotide.out,aa:blosum62.out; Add backtrace false; Alignment mode 3; Alignment mode 0; Allow wrapped scoring false; E-value threshold 0.001; Seq. id. threshold 0; Min alignment length 0; Seq. id. mode 0; Alternative alignments 0; Coverage threshold 0; Coverage mode 0; Max sequence length 65535; Compositional bias 1; Max reject 2147483647; Max accept 2147483647; Include identical seq. id. false; Preload mode 0; Pseudo count a 1; Pseudo count b 1.5; Score bias 0; Realign hits false; Realign score bias -0.2; Realign max seqs 2147483647; Gap open cost nucl:5,aa:11; Gap extension cost nucl:2,aa:1; Zdrop 40; Threads 12; Compressed 1; Verbosity 3; Seed substitution matrix nucl:nucleotide.out,aa:VTML80.out; Sensitivity 5.7; k-mer length 0; k-score 2147483647; Alphabet size nucl:5,aa:21; Max results per query 300; Split database 0; Split mode 2; Split memory limit 0; Diagonal scoring true; Exact k-mer matching 0; Mask residues 1; Mask lower case residues 0; Minimum diagonal score 15; Spaced k-mers 1; Spaced k-mer pattern ; Local temporary path ; Rescore mode 0; Remove hits by seq. id. and coverage false; Sort results 0; Mask profile 1; Profile E-value threshold 0.001; Global sequence weighting false; Allow deletions false; Filter MSA 1; Maximum seq. id. threshold 0.9; Minimum seq. id. 0; Minimum score per column -20; Minimum coverage 0; Select N most diverse seqs 1000; Min codons in orf 30; Max codons in length 32734; Max orf gaps 2147483647; Contig start mode 2; Contig end mode 2; Orf start mode 1; Forward frames 1,2,3; Reverse frames 1,2,3; Translation table 1; Translate orf 0; Use all table starts false; Offset of numeric ids 0; Create lookup 0; Add orf stop false; Overlap between sequences 0; Sequence split mode 1; Header split mode 0; Chain overlapping alignments 0; Merge query 1; Search type 0; Search iterations 1; Start sensitivity 4; Search steps 1; Exhaustive search mode fa",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/754#issuecomment-1725129947:1206,Mask,Mask,1206,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/754#issuecomment-1725129947,2,['Mask'],['Mask']
Availability,TA:5s]; [#156257 5.2GiB/5.7GiB(91%) CN:5 DL:111MiB ETA:4s]; [#156257 5.3GiB/5.7GiB(92%) CN:5 DL:111MiB ETA:3s]; [#156257 5.4GiB/5.7GiB(94%) CN:5 DL:111MiB ETA:2s]; [#156257 5.5GiB/5.7GiB(96%) CN:5 DL:111MiB ETA:1s]; [#156257 5.6GiB/5.7GiB(98%) CN:5 DL:111MiB]. 10/13 10:50:57 [NOTICE] Download complete: tmp/3093587253482177683/bacteria.tar. Download Results:; gid |stat|avg speed |path/URI; ======+====+===========+=======================================================; 156257|OK | 110MiB/s|tmp/3093587253482177683/bacteria.tar. Status Legend:; (OK):download completed. 10/13 10:50:57 [NOTICE] Downloading 1 item(s); [#8c18ae 81MiB/85MiB(95%) CN:3 DL:90MiB]. 10/13 10:50:58 [NOTICE] Download complete: tmp/3093587253482177683/archea.tar. Download Results:; gid |stat|avg speed |path/URI; ======+====+===========+=======================================================; 8c18ae|OK | 87MiB/s|tmp/3093587253482177683/archea.tar. Status Legend:; (OK):download completed. 10/13 10:50:58 [NOTICE] Downloading 1 item(s); [#e1fc78 82MiB/2.7GiB(2%) CN:5 DL:89MiB ETA:30s]; [#e1fc78 182MiB/2.7GiB(6%) CN:5 DL:95MiB ETA:27s]; [#e1fc78 283MiB/2.7GiB(10%) CN:5 DL:97MiB ETA:26s]; [#e1fc78 387MiB/2.7GiB(13%) CN:5 DL:99MiB ETA:24s]; [#e1fc78 497MiB/2.7GiB(17%) CN:5 DL:101MiB ETA:22s]; [#e1fc78 606MiB/2.7GiB(21%) CN:5 DL:103MiB ETA:21s]; [#e1fc78 709MiB/2.7GiB(25%) CN:5 DL:103MiB ETA:20s]; [#e1fc78 810MiB/2.7GiB(28%) CN:5 DL:103MiB ETA:19s]; [#e1fc78 913MiB/2.7GiB(32%) CN:5 DL:103MiB ETA:18s]; [#e1fc78 0.9GiB/2.7GiB(35%) CN:5 DL:103MiB ETA:17s]; [#e1fc78 1.0GiB/2.7GiB(39%) CN:5 DL:105MiB ETA:16s]; [#e1fc78 1.1GiB/2.7GiB(43%) CN:5 DL:105MiB ETA:15s]; [#e1fc78 1.2GiB/2.7GiB(46%) CN:5 DL:105MiB ETA:14s]; [#e1fc78 1.4GiB/2.7GiB(50%) CN:5 DL:105MiB ETA:13s]; [#e1fc78 1.5GiB/2.7GiB(54%) CN:5 DL:105MiB ETA:12s]; [#e1fc78 1.6GiB/2.7GiB(58%) CN:5 DL:105MiB ETA:11s]; [#e1fc78 1.7GiB/2.7GiB(61%) CN:5 DL:105MiB ETA:10s]; [#e1fc78 1.8GiB/2.7GiB(65%) CN:5 DL:106MiB ETA:9s]; [#e1fc78 1.9GiB/2.7GiB(69%) CN:5 DL:106,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/762#issuecomment-1761245149:3997,Down,Downloading,3997,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/762#issuecomment-1761245149,1,['Down'],['Downloading']
Availability,"TENSIONS; -- Performing Test HAVE_SSE2_EXTENSIONS - Success; -- Performing Test HAVE_SSE_EXTENSIONS; -- Performing Test HAVE_SSE_EXTENSIONS - Success; -- Found SSE4.2 extensions, using flags: -msse4.2 -mfpmath=sse; -- Could NOT find GTest (missing: GTEST_LIBRARY GTEST_INCLUDE_DIR GTEST_MAIN_LIBRARY); -- Could NOT find GMock (missing: GMOCK_LIBRARY GMOCK_INCLUDE_DIR GMOCK_MAIN_LIBRARY); -- Compile blastp.sh to /Users/moorer/Downloads/mmseqs2/src/generatedfiles/blastp.sh.h; -- Compile blastpgp.sh to /Users/moorer/Downloads/mmseqs2/src/generatedfiles/blastpgp.sh.h; -- Compile blosum100.out to /Users/moorer/Downloads/mmseqs2/src/generatedfiles/blosum100.out.h; -- Compile blosum30.out to /Users/moorer/Downloads/mmseqs2/src/generatedfiles/blosum30.out.h; -- Compile blosum35.out to /Users/moorer/Downloads/mmseqs2/src/generatedfiles/blosum35.out.h; -- Compile blosum40.out to /Users/moorer/Downloads/mmseqs2/src/generatedfiles/blosum40.out.h; -- Compile blosum45.out to /Users/moorer/Downloads/mmseqs2/src/generatedfiles/blosum45.out.h; -- Compile blosum50.out to /Users/moorer/Downloads/mmseqs2/src/generatedfiles/blosum50.out.h; -- Compile blosum55.out to /Users/moorer/Downloads/mmseqs2/src/generatedfiles/blosum55.out.h; -- Compile blosum60.out to /Users/moorer/Downloads/mmseqs2/src/generatedfiles/blosum60.out.h; -- Compile blosum62.out to /Users/moorer/Downloads/mmseqs2/src/generatedfiles/blosum62.out.h; -- Compile blosum65.out to /Users/moorer/Downloads/mmseqs2/src/generatedfiles/blosum65.out.h; -- Compile blosum70.out to /Users/moorer/Downloads/mmseqs2/src/generatedfiles/blosum70.out.h; -- Compile blosum75.out to /Users/moorer/Downloads/mmseqs2/src/generatedfiles/blosum75.out.h; -- Compile blosum80.out to /Users/moorer/Downloads/mmseqs2/src/generatedfiles/blosum80.out.h; -- Compile blosum85.out to /Users/moorer/Downloads/mmseqs2/src/generatedfiles/blosum85.out.h; -- Compile blosum90.out to /Users/moorer/Downloads/mmseqs2/src/generatedfiles/blosum90.out.h; -- Compile blosum95.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/7#issuecomment-265028472:2820,Down,Downloads,2820,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/7#issuecomment-265028472,1,['Down'],['Downloads']
Availability,"TENSIONS; -- Performing Test HAVE_SSE4_2_EXTENSIONS - Success; -- Performing Test HAVE_SSE4_1_EXTENSIONS; -- Performing Test HAVE_SSE4_1_EXTENSIONS - Success; -- Performing Test HAVE_SSE3_EXTENSIONS; -- Performing Test HAVE_SSE3_EXTENSIONS - Success; -- Performing Test HAVE_SSE2_EXTENSIONS; -- Performing Test HAVE_SSE2_EXTENSIONS - Success; -- Performing Test HAVE_SSE_EXTENSIONS; -- Performing Test HAVE_SSE_EXTENSIONS - Success; -- Found SSE4.2 extensions, using flags: -msse4.2 -mfpmath=sse; -- Could NOT find GTest (missing: GTEST_LIBRARY GTEST_INCLUDE_DIR GTEST_MAIN_LIBRARY); -- Could NOT find GMock (missing: GMOCK_LIBRARY GMOCK_INCLUDE_DIR GMOCK_MAIN_LIBRARY); -- Compile blastp.sh to /Users/moorer/Downloads/mmseqs2/src/generatedfiles/blastp.sh.h; -- Compile blastpgp.sh to /Users/moorer/Downloads/mmseqs2/src/generatedfiles/blastpgp.sh.h; -- Compile blosum100.out to /Users/moorer/Downloads/mmseqs2/src/generatedfiles/blosum100.out.h; -- Compile blosum30.out to /Users/moorer/Downloads/mmseqs2/src/generatedfiles/blosum30.out.h; -- Compile blosum35.out to /Users/moorer/Downloads/mmseqs2/src/generatedfiles/blosum35.out.h; -- Compile blosum40.out to /Users/moorer/Downloads/mmseqs2/src/generatedfiles/blosum40.out.h; -- Compile blosum45.out to /Users/moorer/Downloads/mmseqs2/src/generatedfiles/blosum45.out.h; -- Compile blosum50.out to /Users/moorer/Downloads/mmseqs2/src/generatedfiles/blosum50.out.h; -- Compile blosum55.out to /Users/moorer/Downloads/mmseqs2/src/generatedfiles/blosum55.out.h; -- Compile blosum60.out to /Users/moorer/Downloads/mmseqs2/src/generatedfiles/blosum60.out.h; -- Compile blosum62.out to /Users/moorer/Downloads/mmseqs2/src/generatedfiles/blosum62.out.h; -- Compile blosum65.out to /Users/moorer/Downloads/mmseqs2/src/generatedfiles/blosum65.out.h; -- Compile blosum70.out to /Users/moorer/Downloads/mmseqs2/src/generatedfiles/blosum70.out.h; -- Compile blosum75.out to /Users/moorer/Downloads/mmseqs2/src/generatedfiles/blosum75.out.h; -- Compile blosum80.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/7#issuecomment-265028472:2538,Down,Downloads,2538,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/7#issuecomment-265028472,1,['Down'],['Downloads']
Availability,TEST_MAIN_LIBRARY); -- Could NOT find GMock (missing: GMOCK_LIBRARY GMOCK_INCLUDE_DIR GMOCK_MAIN_LIBRARY); -- Compile blastp.sh to /Users/moorer/Downloads/mmseqs2/src/generatedfiles/blastp.sh.h; -- Compile blastpgp.sh to /Users/moorer/Downloads/mmseqs2/src/generatedfiles/blastpgp.sh.h; -- Compile blosum100.out to /Users/moorer/Downloads/mmseqs2/src/generatedfiles/blosum100.out.h; -- Compile blosum30.out to /Users/moorer/Downloads/mmseqs2/src/generatedfiles/blosum30.out.h; -- Compile blosum35.out to /Users/moorer/Downloads/mmseqs2/src/generatedfiles/blosum35.out.h; -- Compile blosum40.out to /Users/moorer/Downloads/mmseqs2/src/generatedfiles/blosum40.out.h; -- Compile blosum45.out to /Users/moorer/Downloads/mmseqs2/src/generatedfiles/blosum45.out.h; -- Compile blosum50.out to /Users/moorer/Downloads/mmseqs2/src/generatedfiles/blosum50.out.h; -- Compile blosum55.out to /Users/moorer/Downloads/mmseqs2/src/generatedfiles/blosum55.out.h; -- Compile blosum60.out to /Users/moorer/Downloads/mmseqs2/src/generatedfiles/blosum60.out.h; -- Compile blosum62.out to /Users/moorer/Downloads/mmseqs2/src/generatedfiles/blosum62.out.h; -- Compile blosum65.out to /Users/moorer/Downloads/mmseqs2/src/generatedfiles/blosum65.out.h; -- Compile blosum70.out to /Users/moorer/Downloads/mmseqs2/src/generatedfiles/blosum70.out.h; -- Compile blosum75.out to /Users/moorer/Downloads/mmseqs2/src/generatedfiles/blosum75.out.h; -- Compile blosum80.out to /Users/moorer/Downloads/mmseqs2/src/generatedfiles/blosum80.out.h; -- Compile blosum85.out to /Users/moorer/Downloads/mmseqs2/src/generatedfiles/blosum85.out.h; -- Compile blosum90.out to /Users/moorer/Downloads/mmseqs2/src/generatedfiles/blosum90.out.h; -- Compile blosum95.out to /Users/moorer/Downloads/mmseqs2/src/generatedfiles/blosum95.out.h; -- Compile cascaded_clustering.sh to /Users/moorer/Downloads/mmseqs2/src/generatedfiles/cascaded_clustering.sh.h; -- Compile clustering.sh to /Users/moorer/Downloads/mmseqs2/src/generatedfiles/clustering.sh.h,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/7#issuecomment-265028472:3102,Down,Downloads,3102,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/7#issuecomment-265028472,1,['Down'],['Downloads']
Availability,"TL; DR: Enabling building against shared system libraries gives better modularity and a better end-user experience. The way that the Debian patch works is that on distros such as Debian (and Fedora and Gentoo) the system zstd library can optionally be built/packaged/installed both static and shared. Packages that can be built shared get built shared and will get marked for updating when the shared library updates to an incompatible version. Packages like MMseqs that will only build static require the static package/flag and should, in principle, get updated any time the static library gets updated. The latter mechanism is not as reliable and requires more rebuilds, which is why distros prefer that executables can be built with shared libraries. This request I'm making to you now is part of the acceptance QC for that the distro gateway person will check off. If upstream (you) says that building shared is a WONTFIX, then I'll probably just put up my hands and move on. I understand your point about xxhash being pinned to a tested version. But it's a better practice to have the package pinned to a specific, internal version by default, but enable packagers to use the system version at their own risk. Why? Because you can't test and optimize the library and compiler flags for all the architectures out there and also because fixes and optimizations show up all the time. A highly-optimized distro such as Clear Linux may have optimizations and bug fixes that neither you nor a packager like me has access to at your release time. This is especially true for unusual architectures (e.g., AVX512) and for common-but-new architectures (e.g., Zen3 or M1), and especially for widely-used libraries like those for hashing and compression that make heavy use of SIMD optimizations. . Putting on my computational biologist hat for a moment, when one is doing a long-running project where reproducibility is key, I'll put the binaries in a container with all dependencies pinned. Development an",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/411#issuecomment-777671463:637,reliab,reliable,637,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/411#issuecomment-777671463,2,['reliab'],['reliable']
Availability,"Tested the mmseqs master branch after the PR was merged, and the download works now! Thanks @apcamargo Note that issue #729 persists, so taxonomy will not work properly with the GTDB database. However, I will go ahead and close this specific issue for now.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/740#issuecomment-1692737339:65,down,download,65,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/740#issuecomment-1692737339,1,['down'],['download']
Availability,"Thank for your report. I copied a wrong file to the Metaclust 2018_01 release. It should be fixed now.; Information on the current release can be found in the latest version of the preprint: https://www.biorxiv.org/content/early/2018/01/05/104034.full.pdf+html. The input set size of the Metaclust did not increase since the first release. The data should be seen as proof of concept for Linclust. We can not commit to such a data intensive procedure at this point. It took weeks to download the full datasets used in this study. We believe that a sequence database based on metagenomic sequences should be offered rather by institutions that have direct access to huge amounts of metagenomic data (e.g. EMBL, NCBI, JGI, Argonne National Lab, ...).",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/54#issuecomment-357018695:483,down,download,483,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/54#issuecomment-357018695,1,['down'],['download']
Availability,"Thank you - --max-seqs really works. For now I wanted to make the alignments to include more sequences,; especially near threshold, than they did. Increasing the number of; sequences made the change. Now I can play with inclusion thresholds. niedz., 1 kwi 2018 o 15:57 użytkownik Martin Steinegger <; notifications@github.com> napisał:. > The parameter --max-seqs was always available but there was a stopped; > mmseqs from printing out the parameter. The printout problem should be; > resolved now.; >; > How do you benchmark the performance?; >; > —; > You are receiving this because you authored the thread.; > Reply to this email directly, view it on GitHub; > <https://github.com/soedinglab/MMseqs2/issues/78#issuecomment-377788647>,; > or mute the thread; > <https://github.com/notifications/unsubscribe-auth/APQmI4PjSUD8eJYrs1QQNM6xcDq8Rm8Bks5tkNzAgaJpZM4TCzs3>; > .; >",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/78#issuecomment-378337962:375,avail,available,375,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/78#issuecomment-378337962,1,['avail'],['available']
Availability,"Thank you both! I was testing on a small dataset, with few singleton clusters, and applying clustalo resulted in an error for such clusters (can't align 1 seq). The problem is that this stops the entire workflow, and no output was produced. Also, can the apply command split the output by cluster?",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/246#issuecomment-558543321:116,error,error,116,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/246#issuecomment-558543321,1,['error'],['error']
Availability,"Thank you for analyzing the problem. This helps me a lot. I changed the shebang line to bash. Your run worked just fine. ; The output is ""debug"" output which occures becaues of the -x parameter at the shebang line. ""#!/bin/bash -ex"". I removed this flag and updated the tar file. You can download it here http://github.com/soedinglab/mmseqs2/raw/master/mmseqs-static.tar.gz",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/1#issuecomment-235795180:288,down,download,288,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/1#issuecomment-235795180,1,['down'],['download']
Availability,"Thank you for answering so quickly! I have 1,032,373,897 entries in the input database. And setting the memory to 70G worked perfectly. It's now running. I will also look into setting cod-mode to 1. I am running the clustering with several iterations (100%, 95%, 70% .. etc). So doing it with 100% identity will not be my final result. Thank you for the very helpful advice. One thing I noticed is that, without using the split-memory-limit option the database size was 330.652 MB so the program was splitting the database into 3 files, where it probably should have been splitting it into 4 so no file would be greater than 100G. Could this be a simple error of rounding down instead of rounding up?. Thanks again.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/238#issuecomment-549176665:654,error,error,654,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/238#issuecomment-549176665,4,"['down', 'error']","['down', 'error']"
Availability,Thank you for reporting this issue. Could you provide the input files to reproduce the error?,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/229#issuecomment-532358998:87,error,error,87,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/229#issuecomment-532358998,1,['error'],['error']
Availability,"Thank you for sharing your example. However I can also not reproduce the error. In your example there is only one alignment to a sequence, which `lca` classifies as `30551	species	Staphylococcus pseudintermedius`. I am running out of ideas how to help. ```; lca gtdb_54kDB top1 /Users/mad/Downloads/top_results/lca. MMseqs Version: 	0a1348be78bd84137bdb373ba32e0e8c054b3e1c; Compressed 	0; LCA ranks; Blacklisted taxa 	12908,28384; Show taxon lineage	false; Threads 	12; Verbosity 	3. Loading NCBI taxonomy; Loading nodes file ... Done, got 36283 nodes; Loading merged file ... Done, added 0 merged nodes.; Loading names file ... Done; Making matrix ... Done; Init RMQ ...Done; Computing LCA; [=================================================================] 100.00% 100 0s 2ms. Taxonomy for 0 entries not found out of 1; Time for merging to lca: 0h 0m 0s 1ms; Time for processing: 0h 0m 17s 334ms; ```",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/256#issuecomment-571332537:73,error,error,73,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/256#issuecomment-571332537,2,"['Down', 'error']","['Downloads', 'error']"
Availability,"Thank you for the answer!. I tried this command (so because I already have this prepared DB). ```; mmseqs nrtotaxmapping /media/tertiary/database_nr/prot.accession2taxid nr_20210908_mmseqDB tax.tsv --threads 6 ; nrtotaxmapping /media/tertiary/database_nr/prot.accession2taxid nr_20210908_mmseqDB tax.tsv --threads 6; ```. But I catched the error . ```; MMseqs Version: 13.45111; Threads 6; Verbosity 3. Loading NCBI taxonomy1ms; names.dmp, nodes.dmp, merged.dmp from NCBI taxdump could not be found!; ```. And now I am trying this one :D . `mmseqs databases NR NR_tax_mmseqs tmp`. For now last databases module works, hope, everything will be alright!",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/490#issuecomment-923020460:340,error,error,340,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/490#issuecomment-923020460,1,['error'],['error']
Availability,"Thank you for the fast response and suggestion for a temporary fix. Although, the `--retry*` flags for both curl and wget don't appear to apply for SSL-related connection errors, so neither will retry in this situation. I think it's necessary to perform the retries at the outer-scope—i.e., try the download and check for the file locally.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/706#issuecomment-1557764725:171,error,errors,171,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/706#issuecomment-1557764725,2,"['down', 'error']","['download', 'errors']"
Availability,Thank you for the file. I can not reproduce the bug. ; Could you compile mmseqs2 with debug flags and send me the back trace? . cmake -DCMAKE_BUILD_TYPE=Debug ..; make -j 6; gdb --args mmseqs kmermatcher tmp/16988974474605539078/input tmp/16988974474605539078/clu_tmp/2433631712707271207/linclust/8168197228582123863/pref --sub-mat blosum62.out --alph-size 13 --min-seq-id 1 --kmer-per-seq 21 --mask 0 --cov-mode 0 -k 0 -c 0.9 --max-seq-len 65535 --hash-shift 5 --split-memory-limit 0 --include-only-extendable 0 --skip-n-repeat-kmer 0 --threads 6 -v 3. After GDB started type `r` an after it crashed `bt`.,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/136#issuecomment-441411023:395,mask,mask,395,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/136#issuecomment-441411023,1,['mask'],['mask']
Availability,Thank you for the patches! How did you find these errors? ; We are running MMseqs2 in our regression with `asan` and neither of these shows up.,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/661#issuecomment-1408114683:50,error,errors,50,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/661#issuecomment-1408114683,1,['error'],['errors']
Availability,Thank you for the workflow. I'll try that. For now as I explore the software a little bit (I'm amazed with its speed and scalability) I cluster smaller database. A part of my workflow is generating profiles for pdb_05_rep database based on nr70_rep database:; ```; mmseqs search pdb_05_rep nr70_rep pdb_05_res tmp --num-iterations 3 ; mmseqs result2profile pdb_05_rep nr70_rep pdb_05_res pdb_05_profile; ```; The second command however blasts my bash with these warnings:. > Warning in /opt/install/MMseq2/src/alignment/MsaFilter.cpp:244: filter:; > Filtering removed all sequences in alignment. Inserting back first sequence. Is that OK? Or something went wrong with the procedure?. And further I run:; ```; mmseqs search pdb_05_profile pdb_05_rep pdb_05_pp_res tmp --threads 110 -e 0.05; mmseqs clust pdb_05_profile pdb_05_pp_res pdb_05_pp_clu --threads 110 --cluster-mode 1 --similarity-type 1; ```; and the second procedure outputs many warnings like:. > ERROR: Sequence !; > ERROR: Sequence 19899 does not contain any sequence for key 933920594 does not contain any sequence for key 21608!; > ERROR: Sequence 20595 does not contain any sequence for key 21655!; > ERROR: Sequence 20596 does not contain any sequence for key 21670!; > ERROR: Sequence 2059723896 does not contain any sequence for key !; > ERROR: Sequence 23698 does not contain any sequence for key 7521!; > ERROR: Sequence 23699 does not contain any sequence for key 7526!; > does not contain any sequence for key 21683!. to give only few.,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/66#issuecomment-368807680:959,ERROR,ERROR,959,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/66#issuecomment-368807680,7,['ERROR'],['ERROR']
Availability,"Thank you for this tip, it worked! But I get many clusters, 997 representative sequences, is there a way to reduce the number of clusters? We are trying to identify general patterns/motifs from these sequences. The command I used is:; mmseqs easy-cluster Peptide_seqs.mod.fasta Peptide_seqs_clu tmp -e inf -k 5 --spaced-kmer-mode 0 --comp-bias-corr 0 --mask 0 --min-ungapped-score 0 --min-seq-id 0.0 -c 0.0 --cov-mode 1. Thank you!. > I found one memory issue when giving only extremely short sequences to MMseqs2.; > You can probably work around this issue in release 13 by adding one fake sequence that is longer than 20 AA residues to the input file.; > ; > I would also recommend to use the following parameters `-k 5 --spaced-kmer-mode 0 --comp-bias-corr 0 --mask 0` for clustering such extremely short sequences. You might also want to add `-e inf` as E-values are essentially meaningless for such short sequences. In this case you would only cluster based on seq. id. and coverage.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/449#issuecomment-833996332:353,mask,mask,353,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/449#issuecomment-833996332,2,['mask'],['mask']
Availability,Thank you for trying MMseqs2. . Your referenced article is the MMseqs1 paper. Please read the MMseqs2 [article](https://www.nature.com/articles/nbt.3988). The benchmark used to evaluate MMseqs2 is freely available [here](https://bitbucket.org/martin_steinegger/mmseqs-benchmark). . How did you compare the sensitivity of MMseqs2 against PSI-BLAST? We measured the sensitivity up to the first false positive. Our benchmark penalizes high scoring FPs.,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/106#issuecomment-406958840:204,avail,available,204,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/106#issuecomment-406958840,1,['avail'],['available']
Availability,"Thank you for your advise and I'll try it later. Here I have another question :. I tried another way. I think download the original data is time-consuming, so I downloaded the GTDB database and other files maunally follow the script of github (data/workflow/databases.sh), which means I have five files in the my GTDB/tmp dir :; > ar122_taxonomy.tsv bac120_taxonomy.tsv download.done gtdb.tar.gz version ; ![image](https://user-images.githubusercontent.com/74159766/155985994-b1f0be32-c4b2-4d88-a69b-f2fbd188f3eb.png). then I run the command at the GTDB dir:; ` mmseqs databases GTDB GTDB_db tmp`. It still download the databsed(although I have downloaded and put them in the tmp dir) ; ![image](https://user-images.githubusercontent.com/74159766/155985685-9b892ce5-4dba-473a-8a91-240b616342ae.png). I don't know what went wrong, hope you can give me some suggestions, thanks a lot!",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/542#issuecomment-1054225444:110,down,download,110,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/542#issuecomment-1054225444,5,['down'],"['download', 'downloaded']"
Availability,"Thank you for your quick reply. My apologies, I'm not sure how to check the version? I believe I had compiled from source under Linux back in February 25, 2021. Do you recommend that I delete my current installation and re-install everything? (Or is there a way to easily update mmseq2? I can't seem to find such information in the user guide.). One thing that makes me hesitant about deleting everything is that I had downloaded Swiss-Prot using `mmseqs databases` back in February 2021 and I'm not sure if I can download the same dataset again since Swiss-Prot has been updated since then. Thanks again!",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/503#issuecomment-965821558:419,down,downloaded,419,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/503#issuecomment-965821558,4,['down'],"['download', 'downloaded']"
Availability,Thank you for your reply.; I have seen that from the documentation and wish I could use it but this module seems not available with my install:; MMseqs2 Version: 4224ae469df44631b5d8e20aa5c7fd9d74d48c0e; I tried to install more a recent version of mmseqs but had kernel issue (FATAL: kernel too old),MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/370#issuecomment-720089354:117,avail,available,117,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/370#issuecomment-720089354,1,['avail'],['available']
Availability,"Thank you for your reply; my target sequences are some CDS sequences download from NCBI, and query sequences are some sequences fragment of 300bp; here are some partial sequences of the target and query file.; [https://gist.github.com/hwy7/cd5486d2a61c3b6bfe990a3ada669318](url); Please let me know if you need any more information or if there are specific analyses you would like to perform with this data.; Thanks",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/747#issuecomment-1706780853:69,down,download,69,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/747#issuecomment-1706780853,1,['down'],['download']
Availability,"Thank you so much for your help!. I have tried adding `--alignment-mode 3`, but I am still strangely getting 0% sequence identity for *all* pairwise comparisons. Please find below the exact steps I'm following:. Using the ""examples"" folder that was downloaded during the mmseqs installation process:. ```; mmseqs createdb examples/QUERY.fasta queryDB; mmseqs cluster queryDB queryDB_clu tmp --min-seq-id 0.3 -c 0.8 --alignment-mode 3. mmseqs alignall queryDB queryDB_clu queryDB_alnall --alignment-mode 3; mmseqs createtsv queryDB queryDB queryDB_alnall queryDB_alnall.tsv; OFS=""\t"" awk 'FNR==NR{a[$1]=$2;next}{$3=a[$3]; print}' queryDB.lookup queryDB_alnall.tsv > queryDB_alnall_newid.tsv; ```. Then in the output file `queryDB_alnall_newid.tsv`, I observe the following. I copied below the first few lines of the file. I believe v5 is sequence identity and everything is zero in that column:. <html xmlns:v=""urn:schemas-microsoft-com:vml""; xmlns:o=""urn:schemas-microsoft-com:office:office""; xmlns:x=""urn:schemas-microsoft-com:office:excel""; xmlns=""http://www.w3.org/TR/REC-html40"">. <head>. <meta name=ProgId content=Excel.Sheet>; <meta name=Generator content=""Microsoft Excel 15"">; <link id=Main-File rel=Main-File; href=""file:///C:/Users/Skim20/AppData/Local/Temp/msohtmlclip1/01/clip.htm"">; <link rel=File-List; href=""file:///C:/Users/Skim20/AppData/Local/Temp/msohtmlclip1/01/clip_filelist.xml"">; <style>; <!--table; 	{mso-displayed-decimal-separator:""\."";; 	mso-displayed-thousand-separator:""\,"";}; @page; 	{margin:.75in .7in .75in .7in;; 	mso-header-margin:.3in;; 	mso-footer-margin:.3in;}; tr; 	{mso-height-source:auto;}; col; 	{mso-width-source:auto;}; br; 	{mso-data-placement:same-cell;}; td; 	{padding-top:1px;; 	padding-right:1px;; 	padding-left:1px;; 	mso-ignore:padding;; 	color:black;; 	font-size:11.0pt;; 	font-weight:400;; 	font-style:normal;; 	text-decoration:none;; 	font-family:Calibri, sans-serif;; 	mso-font-charset:0;; 	mso-number-format:General;; 	text-align:general;; 	verti",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/503#issuecomment-965794507:249,down,downloaded,249,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/503#issuecomment-965794507,1,['down'],['downloaded']
Availability,"Thank you! ; I could not find any error in the `_mapping`, `_nodes.dmp` and `_names.dmp` files. So I assume the database is fine. I have build a small test case but I was not able to reproduce the error. Could you try to search against the database ([gtdbSmallDb.zip](https://github.com/soedinglab/MMseqs2/files/4018390/gtdbSmallDb.zip)) and see if the error occurs?. mmseqs taxonomy gtdb_54kDB gtdb_54kDB /tmp/tax /tmp/tmp . It would be amazing if you could share your script to build the gtdb.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/256#issuecomment-570490407:34,error,error,34,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/256#issuecomment-570490407,3,['error'],['error']
Availability,"Thank you! Hmm, so I get this message:. MMseqs2 Version: GITDIR-NOTFOUND. I looked through the other Q&A, it looks like this might have been because I downloaded a ZIP folder? (I unfortunately don't recall because I had downloaded mmseq 9 months ago in Feb 2021.)",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/503#issuecomment-965833044:151,down,downloaded,151,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/503#issuecomment-965833044,2,['down'],['downloaded']
Availability,"Thank you! I found the fasta causing the issue, and it turns out that when I downloaded it from NCBI, the download did not complete. When I redownloaded, and ran createdb, I did not get the error.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/763#issuecomment-2093302642:77,down,downloaded,77,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/763#issuecomment-2093302642,3,"['down', 'error']","['download', 'downloaded', 'error']"
Availability,Thank you! My homology search only seems to run 300 alignments on the filtered database (uniprotKB/swissprot) even though this protein should be in most bacteria. Perhaps doing the search via protein sequences isn't the way to go for estimating taxonomic commonness. Is there a database with whole bacterial genome sequences available (one genome per fasta)? I could then do a repeat search for my gene's NT sequence against each genome,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/341#issuecomment-669637865:325,avail,available,325,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/341#issuecomment-669637865,1,['avail'],['available']
Availability,"Thank you!. As for silvadb - it would be very helpful! ; When are you planning to release this version on Docker Hub? Or, maybe, this version is already available?",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/340#issuecomment-670360006:153,avail,available,153,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/340#issuecomment-670360006,1,['avail'],['available']
Availability,"Thank you, is that `--msa-mode` or `--msa-type` sorry? Even with `--msa-type 2` I still got an error originally about a missing index file, my original command was: `mmseqs msa2profile test.fa test.profile --match-mode 1 --msa-type 2`",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/94#issuecomment-395384699:95,error,error,95,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/94#issuecomment-395384699,1,['error'],['error']
Availability,"Thank you, that is useful to know.; IE I clustered at 70% and at 90% but with both - when I downloaded the representative sequences from each cluster and ran these in a MSA tool you would expect to see maximum roughly 70% and 90% pairwise comparisons right? The PIM is the percentage identity matrix. Instead I got values of up to 99% in both.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/841#issuecomment-2090638089:92,down,downloaded,92,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/841#issuecomment-2090638089,1,['down'],['downloaded']
Availability,"Thank you, that seems to be the hint I've needed.; I downloaded the CAZymes database from dbCAN and I can get that one to overflow too. Maybe I can reproduce the issue with that database.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/277#issuecomment-592539554:53,down,downloaded,53,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/277#issuecomment-592539554,1,['down'],['downloaded']
Availability,"Thanks @milot-mirdita This works perfect. ; Last question, if we want to have the associated sequence DB with the subset of sequences in the slimmed down cluster DB. If we use `createsubd` with the original sequence DB and the slimmer cluster DB will only pick the representative sequences, any tips?. Many thanks!; Antonio",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/316#issuecomment-797690051:149,down,down,149,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/316#issuecomment-797690051,1,['down'],['down']
Availability,"Thanks @milot-mirdita! After reinstalling the updated version from git, that error is gone. But I got a new one says:. ```; majoritylca /scratch/ref/hecatomb_databases/virus_uniprot/targetDB ./results/contigs/mmseqs_aa_out/taxonomyResult ./results/contigs/mmseqs_aa_out/lcaDB --tax-lineage 1 --lca-ranks superkingdom,phylum,class,order,family,genus,species . MMseqs Version: 6672bbc9de55e89b011c8a055982a2644d31a467; Majority threshold 0.5; Vote mode 1; LCA ranks superkingdom,phylum,class,order,family,genus,species; Taxon blacklist 12908,28384; Column with taxonomic lineage 1; Compressed 0; Threads 24; Verbosity 3. Loading NCBI taxonomy; Loading nodes file ... Done, got 2227973 nodes; Loading merged file ... Done, added 56613 merged nodes.; Loading names file ... Done; Init RMQ ...Done; Computing LCA; [====taxonid: 1046081 does not match a legal taxonomy node.; ================================taxonid: 1046081 does not match a legal taxonomy node.; ===============taxonid: 1046081 does not match a legal taxonomy node.; =============. ```. So..do you have any suggestion on this one?. Thank you!!; Leran",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/387#issuecomment-759664504:77,error,error,77,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/387#issuecomment-759664504,1,['error'],['error']
Availability,"Thanks Milot!; Indeed it seems that running it with `--format-output fident,alnlen,mismatch,gapopen,qstart,qend,tstart,tend,evalue,bits,qlen` was ended successfully.; Trying to run the `p queryId` after the `bt` when it crashed resulted in the following error:; `(gdb) p queryId; No symbol ""queryId"" in current context.`. I see now that the names of a few of my query IDs are complex/long... So I guess this could be the issue... What would be the best strategy to continue? change the names to something simple like s1, s2, s3, etc., and rerun? Or any other idea? . Thanks!; Haim",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/471#issuecomment-878453492:254,error,error,254,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/471#issuecomment-878453492,2,['error'],['error']
Availability,"Thanks Milot, the --split 1 workaround has worked, specifiying it at index creation time and search time, although it complains about not having enough memory, it finishes:. ```; Initialising data structures...; Using 64 threads. Use index /junk/databases/mmseqs/nr.sk7; Index version: 774909490; KmerSize: 7; AlphabetSize: 21; Skip: 0; Split: 1; Type: 1; Spaced: 1; Query database: mmseq-testDB(size=2467); Target database: /junk/databases/mmseqs/nr(size=121935717); Use kmer size 7 and split 1 using split mode 0; Needed memory (699399167230 byte) of total memory (541058265088 byte); WARNING: MMseqs processes needs more main memory than available.Increase the size o f --split or set it to 0 to automatic optimize target database split.; WARNING: Split has to be computed by createindex if precomputed index is used.; Substitution matrices...; Time for init: 0 h 0 m 23s; ```; The index file size is around 300GB, so it's asking more than double.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/31#issuecomment-301116501:641,avail,available,641,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/31#issuecomment-301116501,1,['avail'],['available']
Availability,"Thanks a lot @AndrazMarinc and @milot-mirdita . It worked. Also I found another solution, the file ""prot.accession2taxid"" download from NCBI needs modification. Only two columns (accession.version and taxid) are needed to run createtaxdb.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/856#issuecomment-2222568096:122,down,download,122,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/856#issuecomment-2222568096,1,['down'],['download']
Availability,"Thanks a lot for offering your help, we will check how to make this a project. It's really kind of you. I have tried indexing with --max-seq-len 30000 but the search then run into error:; mmseqs createindex Ath /tmp/ --search-type 3 --max-seq-len 30000; mmseqs search Ath Ath AthDB /tmp --search-type 3 --max-seq-len 30000; Writing results to: AthDB; terminate called after throwing an instance of 'std::logic_error' ] 0.00% 1 eta -; what(): basic_string::_M_construct null not valid; /tmp/16276944363020795345/blastn.sh: line 66: 15898 Aborted ""$MMSEQS"" offsetalignment ""$1"" ""${QUERY}"" ""$2"" ""${TARGET}"" ""$4/aln"" ""$3"" ${OFFSETALIGNMENT_PAR}; Error: Offset step died. Ath, being the genome database (query and target)",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/388#issuecomment-747471744:180,error,error,180,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/388#issuecomment-747471744,2,"['Error', 'error']","['Error', 'error']"
Availability,Thanks a lot for reporting this bug. ; Commit https://github.com/soedinglab/MMseqs2/commit/138ebea099c33a2fbc3c282235b1c839bae1fb43 should now print an error message.,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/41#issuecomment-321148628:152,error,error,152,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/41#issuecomment-321148628,1,['error'],['error']
Availability,"Thanks a lot for the help, @milot-mirdita . Build PROFILEDB and search with this was successful.; final steps:; > mmseqs search PROFILEDB /databases/fadb/freeze/all.mmseqs pbp.found_with_profile tmp --threads 10 -a -c 0.8 --cov-mode 2 --add-self-matches ; > mmseqs convertalis PROFILEDB /databases/fadb/freeze/all.mmseqs pbp.found_with_profile pbp.found_with_profile.tsv . At this point, everything okay. ; The step below also was performed nicely without errors. ; > mmseqs extractalignedregion PROFILEDB /databases/fadb/freeze/all.mmseqs pbp.found_with_profile pbp.found_with_profile.ALIGNEDREGION . The crash happens here:; > mmseqs convert2fasta pbp.found_with_profile.ALIGNEDREGIONS pbp.found_with_profile.ALIGNEDREGIONS.fa . With this message:; ```; Program call:; convert2fasta pbp.found_with_profile.ALIGNEDREGIONS pbp.found_with_profile.ALIGNEDREGIONS.fa . MMseqs Version: 	7-4e23d; Use ffindex header	false; Verbosity 	3. Could not open data file pbp.found_with_profile.ALIGNEDREGIONS!; ```. But I realised maybe I did everything wrong. . What I want, actually, is the MSA for each cluster with only aligned regions. ; Also, I want the MSA of aligned regions from a search result. The deal is: I have 501 queries single domain, I would to use this against a 17M sequences DB, since the matches probably have at least 1 region contains the same domain as the query, I would like the MSA or even a sequence DB itself contain **only the regions of the match**. ; Extracting only the region of the matches allow me to infer more accurate alignments and phylogeny. Also allow me build specifics models. . Could you provide me a simple workflow to this task?. Thanks in advance.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/153#issuecomment-458988413:456,error,errors,456,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/153#issuecomment-458988413,2,['error'],['errors']
Availability,"Thanks a lot for your fast response.; I have tried and I am getting the following error; Invalid database read for id=36855603, database index=../../uniprot.index; getEntryLen: local id (36855603) >= db size (27159746). I have done createindex on the uniprot db but the error remains.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/662#issuecomment-1410163016:82,error,error,82,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/662#issuecomment-1410163016,2,['error'],['error']
Availability,"Thanks a lot for your help, Milot! I am sorry for the late response!; I think the newer release made a progress and it seems swapresults does not give the std::bad_alloc error anymore (see the stdout printout below). However now I'm facing a problem with disk-space usage, it seems my run fills up ~1.2 TB and fails since I have no disk space left. Is there any suggestion of how to reduce the needed disk-space? From your guide I understand that reducing `--max-seqs` and `--max-accept` could be the way to go but I was not sure whether indeed this is the correct direction and what would be reasonable values to use. What I actually need, is only the best hit(s) for my queries. I would be thankful for any advice ;-) . My command: ; `Programs/MMSeqs2/mmseqs/bin/mmseqs easy-search --slice-search --search-type 3 --format-output ""query,target,fident,alnlen,mismatch,gapopen,qstart,qend,tstart,tend,evalue,bits,qlen"" A2p515F2F4F6.fastq_filtered.fa /tmp/MMSeq_tests/nt_MMSeq2_Jan2021/nt_MMSeq2_Jan2021 MMSeqs2_vs_NT/A2p515F2F4F6_vs_NT_Jan2021.mmseq2.m8 /tmp/tmp_MMSeq2/ 1> A2p515F2F4F6_vs_NT_Jan2021.mmseq2.std 2>&1`. The stdout:; ```; easy-search --slice-search --search-type 3 --format-output query,target,fident,alnlen,mismatch,gapopen,qstart,qend,tstart,tend,evalue,bits,qlen A2p515F2F4F6.fastq_filtered.fa /tmp/MMSeq_tests/nt_MMSeq2_Jan2021/nt_MMSeq2_Jan2021 MMSeqs2_vs_NT/A2p515F2F4F6_vs_NT_Jan2021.mmseq2.m8 /tmp/tmp_MMSeq2/ . MMseqs Version: 	1f302134aa1c6c7c4e2b9da272fd26af33860780; Substitution matrix 	nucl:nucleotide.out,aa:blosum62.out; Add backtrace 	false; Alignment mode 	3; Allow wrapped scoring 	false; E-value threshold 	0.001; Seq. id. threshold 	0; Min alignment length 	0; Seq. id. mode 	0; Alternative alignments 	0; Coverage threshold 	0; Coverage mode 	0; Max sequence length 	65535; Compositional bias 	1; Max reject 	2147483647; Max accept 	2147483647; Include identical seq. id. 	false; Preload mode 	0; Pseudo count a 	1; Pseudo count b 	1.5; Score bias 	0; Realign hits ",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/394#issuecomment-782439476:170,error,error,170,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/394#issuecomment-782439476,2,['error'],['error']
Availability,"Thanks a lot for your reply,. I tried but I am getting assembler error:; /tmp/cccDx2GQ.s: Assembler messages:; /tmp/cccDx2GQ.s:516: Error: no such instruction: `vpbroadcastq %xmm2,%ymm1'; /tmp/cccDx2GQ.s:525: Error: suffix or operands invalid for `vpaddq'; make[2]: *** [lib/cacode/CMakeFiles/cacode.dir/lambda_calculator.cpp.o] Error 1; make[1]: *** [lib/cacode/CMakeFiles/cacode.dir/all] Error 2; make: *** [all] Error 2. I have; cmake version 2.8.12.2; gcc version 5.5.0 (GCC). Florian",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/370#issuecomment-725981645:65,error,error,65,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/370#issuecomment-725981645,6,"['Error', 'error']","['Error', 'error']"
Availability,"Thanks a lot for your response. I tried reducing with ""-k 5"" which improved a bit and then got an error when trying ""-k 4"".; But isn't it doing a BLASTP against translated ORFs anyhow?",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/454#issuecomment-843144980:98,error,error,98,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/454#issuecomment-843144980,1,['error'],['error']
Availability,"Thanks a lot for your work!. I looked though this repository and found these things that might need to be slightly tweaked.; In https://github.com/outpaddling/freebsd-ports-wip/blob/master/mmseqs2/Makefile:; * Do you need an explicit dependency on zlib, bzip2, libomp?; * Please add awk (might be not needed if its installed by default) and wget or curl as a dependency; * Perl is only a build time dependency (if xxd from vim is not available). I am not sure what to think of the arch patch, if you don't set any of the `-DHAVE_*` parameters, they are not used anyway and the automatic detection can be disabled by setting `-DMMSEQS_ARCH="" ""` or something like that. I would suggest to drop that patch. Does FreeBSD not have any baseline requirements (i.e. Debian has SSE2 as baseline)? I would be happy if at very least SSE2 would be enabled by default on x86_64. `-march` also doesn't work very well on some non `x86` architectures, some require `-mcpu` to work correctly. Are 32-bit builds disabled? MMseqs2 currently produces incorrect results on 32-bit systems (see #418, we will probably eventually deal with this to support webassembly fully). Would it be possible to run the small subset of test pipeline, that is part of the release on Github (i.e.: https://github.com/soedinglab/MMseqs2/releases/download/13-45111/MMseqs2-Regression.zip)? This would ensure that MMseqs2 on FreeBSD produces correct results. I was looking for a free CI service that supports *BSD previously, but couldn't find any.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/460#issuecomment-867840850:434,avail,available,434,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/460#issuecomment-867840850,2,"['avail', 'down']","['available', 'download']"
Availability,"Thanks a lot! I would suggest to temporarily remove `-DENABLE_WERROR=1` from the cmake calls in Azure and Travis. I'll try to look at your changes in more detail later. I tried the debian binaries on Friday. x64 worked fine, however the ARM build failed in the regression test. I ran it inside QEMU during the night. I hope Travis and the other changes I had done based on sse2neon will be helpful to solve the test failure.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/pull/309#issuecomment-626641482:416,failure,failure,416,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/pull/309#issuecomment-626641482,1,['failure'],['failure']
Availability,"Thanks again! . Here are my observations: ; * sensitivity hardly matters (with a restrictive evalue, the results are almost identical. With a permissive evalue, there are slightly more hits with an increased sensitivity) -> I'll stick with `s=1` or `s=2` for speed. ; * In fact, the evalue seems to be the restrictive factor (which makes sense, given that the peptides are so small and the database so large). With the default evalue of `0.001`, only 26k out of 630k peptides generate a match (all of them *are* contained in the database at least once). ; * `--comp-bias-corr 0` and `--mask 0` seem to be advantageous. With a permissive evalue of `1e7`, `630467/630487` peptides are found if the both options are set to 0. If they are set to 1, only 594113/630487 peptides are found. On the first sight, the missing peptides do not look particularly low complexity (e.g. `LASLSSVFFFIISFI`, `LKEKLNRNRENSTAT`, `NEGCNSNSSTPRQNT`). ; * With a sensitivity of `s=1`, `--comp-bias-corr 0` and `--mask 0` and an evalue of `1e7` *almost all* perfect matches are found (`630467/630487`). With `s>=2` and otherwise same settings *all* perfect matches are found. . ---. For now, I will, therefore, use the following settings and see how that works out: ; ```bash; --seed-sub-mat VTML40.out ; -s 2 ; --comp-bias-corr 0 --mask 0; --gap-open 16 ; --gap-extend 2 ; --min-length 9 ; --spaced-kmer-pattern 11011101 ; -e 10000000; -k 6 ; ```. ---. Here are the raw counts of matches. `biascorr = 0` implies `mask = 0`. ; ```console; > wc -l * | sort -n ; 1283115 AE009951.2_sens1_biascorr0_eval0.001_mmseqs.tsv ; 1283126 AE009951.2_sens4_biascorr0_eval0.001_mmseqs.tsv; 1283235 AE009951.2_sens2_biascorr0_eval0.001_mmseqs.tsv; 1419374 AE009951.2_sens1_biascorr1_eval0.001_mmseqs.tsv; 1419971 AE009951.2_sens2_biascorr1_eval0.001_mmseqs.tsv; 1420095 AE009951.2_sens4_biascorr1_eval0.001_mmseqs.tsv; 155001100 AE009951.2_sens1_biascorr1_eval10000000_mmseqs.tsv; 198438767 AE009951.2_sens2_biascorr1_eval10000000_mmseqs.ts",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/373#issuecomment-729734160:586,mask,mask,586,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/373#issuecomment-729734160,1,['mask'],['mask']
Availability,Thanks for clarifying. ; So now I'm on version 39572549e20ed90d8e9bb4ea02fd59d6041859be .; I get this error:. Query file: /tmp/2765600628860701936/top1; Target file: uniref100DB; Alignment database: /tmp/2765600628860701936/top1; Start writing file to /tmp/2765600628860701936/aligned; Time for merging files: 0 h 0 m 0 s; Could not get realpath of /tmp/2765600628860701936/top1_h!; Error: Extractalignedregion failed,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/80#issuecomment-381178336:102,error,error,102,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/80#issuecomment-381178336,2,"['Error', 'error']","['Error', 'error']"
Availability,Thanks for reporting this bug. It would be great if you could make the used fasta files available. It seems to be a problem while masking the sequence with tantan. Does --mask 0 crash as well?,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/52#issuecomment-350747754:88,avail,available,88,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/52#issuecomment-350747754,3,"['avail', 'mask']","['available', 'mask', 'masking']"
Availability,"Thanks for the quick and detailed feedback! Partial answer:; 1) awk, zlib, bzip2, and omp are included in the FreeBSD base, so no package dependency needed.; 2) Generally, FreeBSD ports respect the user's env regarding build options and of course the binary package has to be pessimistic about hardware. I'll check on the baseline assumptions and what clang -O2 emits, though. I was also thinking of adding a package message suggesting that it be built from source with more agressive optimizations to get better performance. That's trivial to do with FreeBSD ports. I wanted to sneak the commit in before the quarterly branch coming next week so it's at least available in the next quarterly package set, I haven't put much effort into perfecting it yet. With your feedback I should be able to make some good improvements by then.; 3) Do you actually plan to continue support for 32-bit platforms? It's disabled for many bioinformatics ports already.; I'll look into the rest of your comments ASAP.; BTW, this is the first time in my lengthy career I've ported a C++/cmake project to any platform and got a build with zero warnings on the first try. Somebody on your end is doing some good work. ;-)",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/460#issuecomment-867992680:661,avail,available,661,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/460#issuecomment-867992680,2,['avail'],['available']
Availability,"Thanks for the quick reply!. I installed the latest version, now receiving another error:; /tmp/814303472506594710/taxonomy.sh: 23: /tmp/814303472506594710/taxonomy.sh: abspath: not found. And the process dies immediately.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/80#issuecomment-381111417:83,error,error,83,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/80#issuecomment-381111417,1,['error'],['error']
Availability,"Thanks for the reply, I can confirm I get the comparable counts for the number of clusters. 326662, 209915, and 123014; I am assuming the slight difference is in the downloaded data. However, I am confused by the fact that for a specific example (Q07343), the 70% cluster has 7 members whereas the 50% cluster only has 2. This seems... wonky (for want of a better word). I would expect that the number of members would be between the 50% and 90% count... am I missing something about how the tool actually works?. Addendum: I am expecting 2 members of the 50% cluster, per UniRef50 for Swiss-Prot.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/220#issuecomment-514089710:166,down,downloaded,166,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/220#issuecomment-514089710,1,['down'],['downloaded']
Availability,"Thanks for the reply. I ran this command: . `mmseqs convertalis /Volumes/FireFly_Promise_Pegasus/RMugge/DISSERTATION/Ch3/Metagenome_Microcosm2.0/pipeline_2/08_mmseqs2/mmseqs2_B001_query_db/mmseqs_B001_queryDB /Volumes/FireFly_Promise_Pegasus/Databases/mmseqs2_uniref90_db/UniRef90 /Volumes/FireFly_Promise_Pegasus/RMugge/DISSERTATION/Ch3/Metagenome_Microcosm2.0/pipeline_2/08_mmseqs2/mmseqs2_B001_result_db /Volumes/FireFly_Promise_Pegasus/RMugge/DISSERTATION/Ch3/Metagenome_Microcosm2.0/pipeline_2/08_mmseqs2/output.m8`. But received this error:. Input database ""/Volumes/FireFly_Promise_Pegasus/RMugge/DISSERTATION/Ch3/Metagenome_Microcosm2.0/pipeline_2/08_mmseqs2/mmseqs2_B001_result_db"" has the wrong type (Generic); Allowed input: Alignment. Does this mean there was an issue with the `mmseqs search` command from the step before?",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/579#issuecomment-1191535570:540,error,error,540,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/579#issuecomment-1191535570,1,['error'],['error']
Availability,Thanks for your detailed report! The issue you are pointing out is indeed a barrier. I noticed this myself. We remap the mmaped prefilter result file every 1 million queries. . I did this since I noticed a huge slow down if the memory of the machine is not enough to hold the whole alignment file in memory. It seems that the kernel paging is quite slow. . I maybe should add a check if the machine has enough memory to keep the whole file in memory.,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/66#issuecomment-369901479:216,down,down,216,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/66#issuecomment-369901479,1,['down'],['down']
Availability,"Thanks for your detailed response, right now our cluster is under; maintenance so I'll make sure to try what you say and close this issue if; the problem is solved.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/455#issuecomment-849749638:67,mainten,maintenance,67,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/455#issuecomment-849749638,1,['mainten'],['maintenance']
Availability,"Thanks for your fast response!; I can't reproduce the result, still facing problems with short peptides. . My commands are:. ```; mmseqs createdb IP.fasta IP_DB/IP_DB ; mmseqs createdb cryptic_DB.fasta Cryptic_DB/Cryptic_DB . mmseqs createindex IP_DB/IP_DB tmp --comp-bias-corr 0 --mask 0 -k 5; mmseqs createindex Cryptic_DB/Cryptic_DB tmp --comp-bias-corr 0 --mask 0 -k 5. mmseqs search \; --comp-bias-corr 0 --mask 0 -e inf \; --spaced-kmer-pattern 1101101 -k 5 \; --alignment-mode 3 --max-seq-id 1 \; IP_DB/IP_DB Cryptic_DB/Cryptic_DB result_DB/result_DB tmp. mmseqs filterdb result_DB/result_DB bestResultDB/bestResultDB; ```. Can you share the full command you used?",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/391#issuecomment-758752094:282,mask,mask,282,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/391#issuecomment-758752094,3,['mask'],['mask']
Availability,"Thanks for your prompt replies!. mmseqs search -s 4 --threads 64 -e 100000 --comp-bias-corr 0 --mask 0 $SCRATCHDIR/queryT.mmsq $SCRATCHDIR/queryT.mmsq $SCRATCHDIR/queryT.mmsq.outDB $SCRATCHDIR > $SCRATCHDIR/test.log. File $SCRATCHDIR/queryT.mmsq has 10000 lines, which I guess should confirm it has 10000 sequences. . prefilter /scratch/orakov/tmp/queryT.mmsq /scratch/orakov/tmp/queryT.mmsq /scratch/orakov/tmp/9822650028334564073/pref_0 --sub-mat nucl:nucleotide.out,aa:blosum62.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -k 0 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 65535 --max-seqs 300 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 0 --diag-score 1 --exact-kmer-matching 0 --mask 0 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 64 --compressed 0 -v 3 -s 4.0 . Query database size: 313 type: Aminoacid; Estimated memory consumption: 979M; Target database size: 313 type: Aminoacid; Index table k-mer threshold: 127 at k-mer size 6 ; Index table: counting k-mers; [=================================================================] 313 0s 11ms; Index table: Masked residues: 0; Index table: fill; [=================================================================] 313 0s 11ms; Index statistics; Entries: 99064; DB size: 488 MB; Avg k-mer size: 0.001548; Top 10 k-mers; GQQVAR 4; QRAALA 3; LSGRVA 3; LGEIVD 3; RELAEE 3; LAAAVG 3; SGQQAI 3; RAVSFK 3; AIGSGK 3; ALGSGK 3; Time for index table init: 0h 0m 0s 582ms; Process prefiltering step 1 of 1. k-mer similarity threshold: 127; Starting prefiltering scores calculation (step 1 of 1); Query db start 1 to 313; Target db start 1 to 313; [=================================================================] 313 0s 95ms. 46.584655 k-mers per position; 349 DB matches per sequence; 0 overflows; 0 queries produce too much hits (truncated result); 1 sequences passed prefiltering per query sequence; 1 ",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/283#issuecomment-593615497:96,mask,mask,96,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/283#issuecomment-593615497,3,['mask'],"['mask', 'mask-lower-case']"
Availability,"Thanks for your quick reply.; Yeah, --mask 0 apparently seems to change something, but the error basically stays the same:; But mentioning the masking, the data we have is already masked with tantan, does this pose a problem for mmseqs?. /local/jelvers/Masterthesis/temp//4778667373760070442/blastp.sh: line 86: 14547 Segmentation fault (core dumped) $RUNNER $MMSEQS prefilter ""$INPUT"" ""$TARGET"" ""$TMP_PATH/pref_$SENS"" $PREFILTER_PAR -s $SENS; Error: Prefilter died. [query.txt](https://github.com/soedinglab/MMseqs2/files/1548211/query.txt); [target.txt](https://github.com/soedinglab/MMseqs2/files/1548212/target.txt)",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/52#issuecomment-350753413:38,mask,mask,38,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/52#issuecomment-350753413,6,"['Error', 'error', 'fault', 'mask']","['Error', 'error', 'fault', 'mask', 'masked', 'masking']"
Availability,"Thanks for your quick response! I wanted to make sure this was an uncommon error before escalating this to our HPC IT. They ended up upgrading the kernel on the node I was using, and the job finished successfully. It looked like some processes still entered D status but there wasn't an NFS timeout like before. This is all a little over my head, but the issue seems to be related to `kernel earlier than kernel-3.10.0-327.42.1.el7`, and the I/O from the analysis. Maybe that can help someone else if they run into issues running `easy-taxonomy` on HPC. I'll go ahead and close this issue now.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/423#issuecomment-797818932:75,error,error,75,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/423#issuecomment-797818932,1,['error'],['error']
Availability,"Thanks for your reply,; I have tried the following commands but got ""Segmentation fault"" right away whenn launching filterresult.; Any idea what could cause this?. mmseqs createdb FASTANUCLFILE FASTANUCLFILE.db; mmseqs cluster FASTANUCLFILE.db FASTANUCLFILE.db.clu /tmp/tmp_mmseqs/ -c 0.5 -s 6; mmseqs filterresult FASTANUCLFILE.db FASTANUCLFILE.db FASTANUCLFILE.db.clu FASTANUCLFILE.db.clu_filt --diff 100; MMseqs Version: fb39ca1ee88313974f285740faa856ea68509193; Substitution matrix nucl:nucleotide.out,aa:blosum62.out; Gap open cost nucl:5,aa:11; Gap extension cost nucl:2,aa:1; Compositional bias 1; Allow deletions false; Maximum seq. id. threshold 0.9; Minimum seq. id. 0; Minimum score per column -20; Minimum coverage 0; Select N most diverse seqs 100; Threads 32; Compressed 0; Verbosity 3. Query database size: 19948 type: Nucleotide; Target database size: 19948 type: Nucleotide; Segmentation fault ] 0.00% 1 eta -",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/456#issuecomment-849892198:82,fault,fault,82,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/456#issuecomment-849892198,2,['fault'],['fault']
Availability,"Thanks for your reply,; You are right, I get a DB_clusterupdate and DB_clusterupdate.index when the process finishes. ; The reason why I though clusterupdate didn't finish is that when I try to extract the fasta file from DB_clusterupdate I get the following error:. > `mmseqs createseqfiledb DB_new DB_clusterupdate clu_rm`; > ; > I get another error:; > ; > MMseqs Version:	5ba68d8799901889e4b760c30e98fdc31ef8d572; > Min Sequences	1; > Max Sequences	2147483647; > HH format 	false; > Threads 	4; > Verbosity 	3; > ; > ; > Invalid entry in line 1!; > Invalid entry in line 2!; > Invalid entry in line 3!; > Invalid entry in line 4!; > Invalid entry in line 5!; > Invalid entry in line 6!. I thought that maybe DB_new didn't contain the link to the sequences that DB_clusterupdate refers to and the database that merges DB_trimmed and DB_new is missing, probably because clusterupdate stopped before it was generated due to the problems I refer in the first post. But if this is not the case, how can I generate the fasta file from DB_updatecluster? Which database should I use?. Thanks beforehand.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/17#issuecomment-281028101:259,error,error,259,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/17#issuecomment-281028101,2,['error'],['error']
Availability,"Thanks for your reply. I just used; ```; conda install -c conda-forge -c bioconda mmseqs2; ```; I thought everything installed properly, but perhaps I missed an error...",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/480#issuecomment-895344007:161,error,error,161,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/480#issuecomment-895344007,1,['error'],['error']
Availability,"Thanks for your response; that's good news; I'm really looking forward this next release!; But if I want to use the taxid field right away I can still download the code from git and compile it, correct?; Guillaume",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/248#issuecomment-559477953:151,down,download,151,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/248#issuecomment-559477953,1,['down'],['download']
Availability,"Thanks milot-mirdita!. I will take a closer look, but think I may have come up with a solution using bbtools gi2taxid to encode the taxonomy IDs in the fasta headers:. A simple for-do loop script like this:. `for i in *.fna.gz; do; 	F=`basename $i .fna.gz`;. gi2taxid.sh in=${i} out=${F}_taxID.fna.gz \; 	server=t \; 	taxpath=${TAXPATH} \; 	-Xmx64g \; 	pigz=6 unpigz=t bgzip=t preferbgzip=t zl=9;. done;`. This isn't exactly full taxonomy support, but I am then able to pull the taxIDs from either the tophit or lca reports and can analyze them downstream using something like taxonkit (https://bioinf.shenwei.me/taxonkit/). Not as optimal as built in taxonomy support within mmseqs2 and running LCA will be an additional challenge, but it is a partial and useful solution for us. Thanks! Look forward to seeing full NT taxonomy support!",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/412#issuecomment-780925754:545,down,downstream,545,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/412#issuecomment-780925754,2,['down'],['downstream']
Availability,Thanks! Do I need to download and recompile mmseqs? or can I just replace with the fixed file?,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/845#issuecomment-2122641918:21,down,download,21,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/845#issuecomment-2122641918,1,['down'],['download']
Availability,"Thanks! That worked for splitting the database; however, I ran into an issue when running `mmseqs taxonomy` on each split. The error is:. ```; Error: Prefilter died; Error: First search died; Invalid database read for database data file={SPLIT#_OF_MY_SEQ_DATABASE}; ```",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/168#issuecomment-468319873:127,error,error,127,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/168#issuecomment-468319873,3,"['Error', 'error']","['Error', 'error']"
Availability,"Thanks! just sent you by email (@mpibpc) link for download the query file (it is ~1Gb size); Thanks for all the help, please let me know if / how I can help more with this :-)",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/471#issuecomment-879016235:50,down,download,50,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/471#issuecomment-879016235,1,['down'],['download']
Availability,"Thanks!. So I'm currently testing linclust on some simulated data (I'm working on clustering a specific type of sequences: Iso-Seq reads). linclust ran fine for 100,000 and 500,000 reads, but died for 1,000,000 reads with the error below. I'm submitting the job on a node with 512Gb and 32 cores (but running with --threads 8). . ```; Program call:; --threads 8 /nfs/brubeck.bx.psu.edu/scratch6/ksahlin/preclust_eval/ccs/ENSEMBL/1000000/ccs.fasta /nfs/brubeck.bx.psu.edu/scratch6/ksahlin/preclust_eval/cluster/linclust/ENSEMBL/1000000/linclust_out /nfs/brubeck.bx.psu.edu/scratch6/ksahlin/preclust_eval/cluster/linclust/ENSEMBL/1000000/linclust_tmpdir<200b>. MMseqs Version: 016429915362d184505627148d07f11c9ccc1aeb; Cluster mode 0; Max depth connected component 1000; Similarity type 2; Threads 8; Verbosity 3; Sub Matrix blosum62.out; Add backtrace false; Alignment mode 3; E-value threshold 0.001; Seq. Id Threshold 0; Seq. Id. Mode 0; Alternative alignments 0; Coverage threshold 0.8; Coverage Mode 0; Max. sequence length 65535; Max. results per query 300; Compositional bias 1; Realign hit false; Max Reject 2147483647; Max Accept 2147483647; Include identical Seq. Id. false; No preload false; Pseudo count a 1; Pseudo count b 1.5; Score bias 0; Alphabet size 21; Kmer per sequence 21; Mask Residues 1; K-mer size 0; Shift hash 5; Split Memory Limit 0; Include only extendable false; Skip sequence with n repeating k-mers 0; Rescore mode 0; Remove hits by seq.id. and coverage false; Sort results 0; In substitution scoring mode, performs global alignment along the diagonal false; Remove Temporary Files false; Sets the MPI runner. Program call:; /nfs/brubeck.bx.psu.edu/scratch6/ksahlin/preclust_eval/ccs/ENSEMBL/1000000/ccs.fasta /nfs/brubeck.bx.psu.edu/scratch6/ksahlin/preclust_eval/cluster/linclust/ENSEMBL/1000000/linclust_tmpdir<200b>/12158280734806148968/input --max-seq-len 65535 --dont-split-seq-by-len --dont-shuffle --id-offset 0 -v 3. MMseqs Version: 016429915362d184505627148d07f",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/111#issuecomment-418161120:226,error,error,226,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/111#issuecomment-418161120,1,['error'],['error']
Availability,"Thanks, I don't need the output of the awk call anymore, since I tracked down whats going wrong.; It just a bit tricky to fix correctly and not waste a lot of RAM in doing so.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/208#issuecomment-497742333:73,down,down,73,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/208#issuecomment-497742333,1,['down'],['down']
Availability,"Thanks, I’ll give that a try! Will the database be compatible with the current release version, or will I have to use the git version for downstream analysis too?",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/762#issuecomment-1759212799:138,down,downstream,138,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/762#issuecomment-1759212799,1,['down'],['downstream']
Availability,"Thanks. 180 G available. I was cheating here and just testing on a shared node. I was also just running mmseqs myself from the command line (but SemiBin does the same). Do you mean larger chunks, so it runs quicker, rather than smaller chunks?",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/479#issuecomment-894191657:14,avail,available,14,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/479#issuecomment-894191657,1,['avail'],['available']
Availability,"Thanks. tmp is on a local disk, but I only have 1TB availabe. That disk disk space gets full during execution, although I only want to run about 700K sequences against UniRef50. I will try --remove-tmp-files.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/478#issuecomment-896412877:52,avail,availabe,52,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/478#issuecomment-896412877,1,['avail'],['availabe']
Availability,"That is odd, I'll try to reproduce the issue sometime until the end of the week. Does the error also happen if you use a memory limit less than the machine has: e.g. `--split-memory-limit 1G`?",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/253#issuecomment-562186908:90,error,error,90,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/253#issuecomment-562186908,1,['error'],['error']
Availability,"That looks already like an impressive amount of work for a PoC. . A few (disjointed) thoughts:. * How is error management handled in your project? We rely on `exit()` quite heavily as you have probably noticed already and in these cases we don't free memory or file handles anymore either. Refactoring that would be a major undertaking. * We would prefer to not give API/ABI stability guarantees, ideally we would only have to worry about keeping the command line interface as stable as possible. Personally, I would have tried auto-generating bindings by extracting information from `MMseqsBase.cpp` and `Parameters.h/cpp` and keep MMseqs2 as a separate binary around. * Another thing that we have only realized a few years after having started MMseqs2 is that we have essentially build a database management system for sequence data. I think if we had the chance to reimagine MMseqs2 as something new and consumable directly through APIs I would emphasize this aspect. * Do you have any experience with Python and Rust? There is a good chance we will add the first Rust dependency within the next half year or so and we are interesting in investigating something so new modules could be written in Rust instead of C++ (but continue to use the existing C++ classes). This might make the build system much more complicated in the near future.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/450#issuecomment-834598461:105,error,error,105,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/450#issuecomment-834598461,1,['error'],['error']
Availability,That's my initial guess actually 😄 I got the same error for MERC and metaclust_nr and I found they all have stop codon symbols in it. I really appreciate your help in investigating this issue. Let me remove `*` symbols and run it again.,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/323#issuecomment-649912553:50,error,error,50,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/323#issuecomment-649912553,1,['error'],['error']
Availability,The `Killed` error message sounds like your job system killed the job for running out of memory. You can use the `--split-memory-Limit` parameter to adjust the maximum memory MMseqs2 is allowed to use. By default it will try to use as much as the system has.,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/366#issuecomment-713695619:13,error,error,13,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/366#issuecomment-713695619,1,['error'],['error']
Availability,"The `No datafile could be found` error seems to be caused by the fact that the data file in question is a symlink:. ```; lrwxrwxrwx 1 nyoungblut abt3 82 Jul 23 19:44 /ebio/abt3_scratch/nyoungblut/Struo2_122419461619/cluster_update/11607510948275416679/updatedClust -> /ebio/abt3_projects/software/dev/Struo2/tests/output_n10/genes/cluster/clusters_db; ```. ...and the symlink doesn't point to a file, since my original cluster database was generated via `mmseqs linclust --threads 18`, which produced cluster database files with `.<#>` extensions:. ```; # used 18 threads for `mmseqs linclust`, which produced: ; /ebio/abt3_projects/software/dev/Struo2/tests/output_n10/genes/cluster/clusters_db.0; /ebio/abt3_projects/software/dev/Struo2/tests/output_n10/genes/cluster/clusters_db.1; /ebio/abt3_projects/software/dev/Struo2/tests/output_n10/genes/cluster/clusters_db.10; /ebio/abt3_projects/software/dev/Struo2/tests/output_n10/genes/cluster/clusters_db.11; /ebio/abt3_projects/software/dev/Struo2/tests/output_n10/genes/cluster/clusters_db.12; /ebio/abt3_projects/software/dev/Struo2/tests/output_n10/genes/cluster/clusters_db.13; /ebio/abt3_projects/software/dev/Struo2/tests/output_n10/genes/cluster/clusters_db.14; /ebio/abt3_projects/software/dev/Struo2/tests/output_n10/genes/cluster/clusters_db.15; /ebio/abt3_projects/software/dev/Struo2/tests/output_n10/genes/cluster/clusters_db.16; /ebio/abt3_projects/software/dev/Struo2/tests/output_n10/genes/cluster/clusters_db.17; /ebio/abt3_projects/software/dev/Struo2/tests/output_n10/genes/cluster/clusters_db.2; /ebio/abt3_projects/software/dev/Struo2/tests/output_n10/genes/cluster/clusters_db.3; /ebio/abt3_projects/software/dev/Struo2/tests/output_n10/genes/cluster/clusters_db.4; /ebio/abt3_projects/software/dev/Struo2/tests/output_n10/genes/cluster/clusters_db.5; /ebio/abt3_projects/software/dev/Struo2/tests/output_n10/genes/cluster/clusters_db.6; /ebio/abt3_projects/software/dev/Struo2/tests/output_n10/genes/cluster/clusters_db.7; /ebi",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/333#issuecomment-663148319:33,error,error,33,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/333#issuecomment-663148319,1,['error'],['error']
Availability,"The `createindex` module can not split index, we consider this feature for the future. Just call search without `createindex`. It will split the database automatic according to the maximum available memory or the memory defined with the `--split-memory-limit` parameter.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/161#issuecomment-462115476:189,avail,available,189,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/161#issuecomment-462115476,1,['avail'],['available']
Availability,"The `databases` module is new, the documentation refers to the latest git version. It will be included in the next MMseqs2 release we are preparing and hopefully release in the next few days. You can already install MMseqs2 from git or download precompiled static binaries to try out the latest features.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/271#issuecomment-584029741:236,down,download,236,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/271#issuecomment-584029741,1,['down'],['download']
Availability,The `databases` workflow downloads this file:; https://data.ace.uq.edu.au/public/gtdb/data/releases/latest/genomic_files_reps/gtdb_proteins_aa_reps.tar.gz,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/514#issuecomment-992990876:25,down,downloads,25,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/514#issuecomment-992990876,1,['down'],['downloads']
Availability,"The `ln -s` commands are required for `cstranslate` to work. I am confused why the error message is saying `'clu_msa'` while the output name you used for `result2msa` is `cluMsa`. I think something is misnamed. Btw you can also drop the `A /path/to/cs219.lib -D /path/to/context_data.lib` parameters, they are not needed anymore in the latest HH-suite release.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/508#issuecomment-974118499:83,error,error,83,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/508#issuecomment-974118499,1,['error'],['error']
Availability,The `taxid` field support was added only a few weeks ago and is only available through the latest git version. It will be included in the next release.,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/248#issuecomment-559467190:69,avail,available,69,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/248#issuecomment-559467190,1,['avail'],['available']
Availability,"The `unpackdb` command gives me the same output as the byte offset reading approach I was doing. Seems I re-invented that command without knowing it. However, when I run the `unpackdb` command I get a file per query with its alignments in the internal mmseqs2 format, I then want to convert this to the a3m+alignment format with `result2msa --msa-format-mode 6`, but I still get the same error as above, that the file produced by the `unpackdb` command has the wrong type. I don't really understand why this is the case, since previously when I tested the pipeline with a single sequence queryDB this `result2msa` method worked just fine. Similarly, I am able to run the `result2msa` command on the file which I unpack, but then not on the unpacked files. . Is there another command for converting this internal format MSA to the a3m+alignment format (equivalent to result2msa --msa-format-mode 6)?",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/850#issuecomment-2180483781:388,error,error,388,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/850#issuecomment-2180483781,1,['error'],['error']
Availability,"The above works great! Thanks a lot. . I have another question: my understanding is that `pdb_seq` would be bigger than `pbd`, and therefore have the same [or more] number of found matching sequences than `pdb`. However, I am seeing a decrease as illustrated by the van diagrams below: ; ![image](https://github.com/soedinglab/MMseqs2/assets/8103108/4e44a811-fd66-4c01-883f-196b8b0c2342); ![image](https://github.com/soedinglab/MMseqs2/assets/8103108/a0dd407f-4f3c-4696-a7fe-7ca86d11b1d7). The search parameters used in both cases are the same, as shown below: ; `mmseqs search /tmp/queryDB /root/mmseqs2_db/{db} /tmp/resultDB tmp -a --max-seqs 1 -s 7 --comp-bias-corr 0 --mask 0`. Am I missing anything? . Thanks",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/821#issuecomment-2009692254:673,mask,mask,673,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/821#issuecomment-2009692254,1,['mask'],['mask']
Availability,The case of SEQUENCETEST is interesting. ; MMseqs2 maskes the majority this sequence as low complexity. ; For example sequence 0000_A looks like this after low complexity masking:; ```; >0000_A; XXXXEXCXXXXXXXXXXXCXXXXXXXXXXXCXXXXXXXXXXXCXXXXXXXQXXXCEXXST; ```; I have added a flag `--mask` to turn the filter on and off. Please pull the newst version. . Another problem is the amino acid compostion correction we apply on the sequence. The bias correction decrease decrease the --k-score for each k-mer. You can deactive it by using the flag `--comp-bias-corr`. . I could successfuly find all hits by search with the following command:; `mmseqs search DB DB resultDB tmp -a --mask 0 --comp-bias-corr 0`,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/12#issuecomment-275321413:51,mask,maskes,51,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/12#issuecomment-275321413,4,['mask'],"['mask', 'maskes', 'masking']"
Availability,"The clustering is available on the website: http://wwwuser.gwdg.de/~compbiol/uniclust/2018_08/; However, there is no Uniclust50 HHsuite database.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/384#issuecomment-743114975:18,avail,available,18,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/384#issuecomment-743114975,1,['avail'],['available']
Availability,The clustering workflow creates a new sequence database (NEWMAPDB) that has consistent identifiers with already existing sequences in OLDDB. All tools further down the pipeline expect NEWMAPDB as input and NEWDB can usually be deleted. I'll update the documentation. Sorry for the confusion. Please let me know if you still have issues.,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/103#issuecomment-404560008:159,down,down,159,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/103#issuecomment-404560008,1,['down'],['down']
Availability,The current issues seem to be:; * There seems to be an issue with older gcc and the use of`isnan` in SIMDe; * Alignments on both clang and gcc get stuck eventually; * macOS clang has a weird compile error; * GCC+ASan crashes with an internal error somewhere completely random (might be solved by using a newer gcc?). I don't have time to look at the issues until later this week though :/,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/pull/309#issuecomment-627328740:199,error,error,199,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/pull/309#issuecomment-627328740,2,['error'],['error']
Availability,The error is happening in the call for ksw_extz2_sse in BandedNucleotideAligner::align. I have made a few tests with increasing number of sequences in the database. I tested up to 50 000 sequences and it went fine. I have also done a test including the longer sequence and about 5000 other sequences and it went fine.,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/297#issuecomment-612083536:4,error,error,4,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/297#issuecomment-612083536,1,['error'],['error']
Availability,"The error occurs with version 9.d36de, but not 8.fac81. Here's the entire log:. ```; $ mmseqs taxonomy -e 1e-5 --max-seqs 200 --lca-ranks ""kingdom:phylum:class:order:family:genus:species"" --threads 24 clusters_rep-seqs_db_14_30 /ebio/abt3_projects/databases_no-backup/uniclust/mmseqs2_8.fac81/uniclust90_2018_08_db clusters_rep-seqs.part-14_tax_db tmp_part-14; taxonomy -e 1e-5 --max-seqs 200 --lca-ranks kingdom:phylum:class:order:family:genus:species --threads 24 clusters_rep-seqs_db_14_30 /ebio/abt3_projects/databases_no-backup/uniclust/mmseqs2_8.fac81/uniclust90_2018_08_db clusters_rep-seqs.part-14_tax_db tmp_part-14. MMseqs Version: 	9.d36de; Substitution matrix 	blosum62.out; Add backtrace 	false; Alignment mode 	2; E-value threshold 	1e-05; Seq. id. threshold 	0; Min. alignment length 	0; Seq. id. mode 	0; Alternative alignments 	0; Coverage threshold 	0; Coverage mode 	0; Max sequence length 	65535; Compositional bias 	1; Realign hits 	false; Max reject 	2147483647; Max accept 	2147483647; Include identical seq. id. 	false; Preload mode 	0; Pseudo count a 	1; Pseudo count b 	1.5; Score bias 	0; Gap open cost 	11; Gap extension cost 	1; Threads 	24; Compressed 	0; Verbosity 	3; Seed substitution matrix 	VTML80.out; Sensitivity 	5.7; K-mer size 	0; K-score 	2147483647; Alphabet size 	21; Max results per query 	200; Previous max results per query; Split database 	0; Split mode 	2; Split memory limit 	0; Diagonal scoring 	1; Exact k-mer matching 	0; Mask residues 	1; Mask lower case residues 	0; Minimum diagonal score 	15; Spaced k-mers 	1; Spaced k-mer pattern; Local temporary path; Rescore mode 	0; Remove hits by seq. id. and coverage 	false; Sort results 	0; Global diagonal rescoring 	false; Mask profile 	1; Profile e-value threshold 	0.001; Use global sequence weighting 	false; Filter MSA 	1; Maximum seq. id. threshold 	0.9; Minimum seq. id. 	0; Minimum score per column 	-20; Minimum coverage 	0; Select N most diverse seqs 	1000; Omit consensus 	false; Min codons",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/221#issuecomment-515936587:4,error,error,4,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/221#issuecomment-515936587,1,['error'],['error']
Availability,"The first two issues should be handled as of commit cbb542af98095210bad8399cda02b67487d0bdde.; The third issue is a bit trickier. here's why:; The sliced search workflow (searchslicedtargetprofile.sh) is where the available disk (regular tmp folder) is taken into account to determine the number of profiles to process (the information is passed to it from search). `--local-temp` is a parameter, which is relevant only in MPI mode. Assuming all MPI nodes have the same available disk in their `--local-tmp` (does this even hold?), then the way to take it into account is to set the disk limit in the sliced search workflow as the minimum between the regular tmp folder (on the master node) and the available disk space on the master's `--local-temp` times the number of MPI nodes. However, the number of MPI nodes is determined through quite a complicated logic in the Prefilter constructor, which is called from within the sliced search workflow **after** it calculates the disk space limit. An exit with error could be added from within Prefilter (asking to re-run the program with `--disk-space-limit` equal to local-size x Nnodes) but it is not very elegant as the run already started by then.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/192#issuecomment-631535791:214,avail,available,214,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/192#issuecomment-631535791,4,"['avail', 'error']","['available', 'error']"
Availability,"The good news is that the updated code splits the idx rather evenly: . ```; -rw-r--r-- 1 nyoungblut abt3 371M Dec 9 22:32 db.idx.0; -rw-r--r-- 1 nyoungblut abt3 37G Dec 9 22:32 db.idx.1; -rw-r--r-- 1 nyoungblut abt3 12G Dec 9 22:32 db.idx.2; -rw-r--r-- 1 nyoungblut abt3 12G Dec 9 22:32 db.idx.3; -rw-r--r-- 1 nyoungblut abt3 12G Dec 9 22:32 db.idx.4; -rw-r--r-- 1 nyoungblut abt3 12G Dec 9 22:32 db.idx.5; -rw-r--r-- 1 nyoungblut abt3 12G Dec 9 22:32 db.idx.6; -rw-r--r-- 1 nyoungblut abt3 12G Dec 9 22:32 db.idx.7; -rw-r--r-- 1 nyoungblut abt3 12G Dec 9 22:32 db.idx.8; -rw-r--r-- 1 nyoungblut abt3 12G Dec 9 22:32 db.idx.9; -rw-r--r-- 1 nyoungblut abt3 12G Dec 9 22:32 db.idx.10; -rw-r--r-- 1 nyoungblut abt3 12G Dec 9 22:32 db.idx.11; -rw-r--r-- 1 nyoungblut abt3 12G Dec 9 22:32 db.idx.12; -rw-r--r-- 1 nyoungblut abt3 12G Dec 9 22:32 db.idx.13; -rw-r--r-- 1 nyoungblut abt3 12G Dec 9 22:32 db.idx.14; -rw-r--r-- 1 nyoungblut abt3 12G Dec 9 22:32 db.idx.15; -rw-r--r-- 1 nyoungblut abt3 12G Dec 9 22:32 db.idx.16; -rw-r--r-- 1 nyoungblut abt3 12G Dec 9 22:32 db.idx.17; -rw-r--r-- 1 nyoungblut abt3 3.0K Dec 9 22:32 db.idx.index; -rw-r--r-- 1 nyoungblut abt3 4 Dec 9 22:32 db.idx.dbtype; ```. The bad news is that `mmseqs search` still generates mmap errors (`Failed to mmap memory dataSize=12723929088`) unless I provide ~240G of memory (parallel=8, h_vmem=29G). So, it appears that splitting the idx more evenly didn't help with the memory requirements for `mmseqs search`. Maybe the issue is that the `idx.1` split is still rather large?. Note: I still require ~240G of memory if I just use 1 thread (parallel=1, h_vmem=240G)",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/338#issuecomment-742364404:1256,error,errors,1256,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/338#issuecomment-742364404,1,['error'],['errors']
Availability,"The issue is basically that MMseqs2 cannot extract any putative protein ORFs from the nucleotide reads since the default minimum length threshold is too long. You can reduce this threshold with something like `--min-length 15` (15*3=45 nucl min length). The error message is pretty bad, we should fix this. Btw `plass` include a `mergereads` module to produce merged reads from paired reads and produces a sequence database that can then be read by `mmseqs search` that might be useful to extend some of the read lengths a bit and produce better annotations.; You can also first run the complete `plass` workflow to produce assembled proteins that can be better annotated. Plass will also struggle with the same parameter though and would also need a shorter `--min-length`.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/325#issuecomment-652402322:258,error,error,258,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/325#issuecomment-652402322,1,['error'],['error']
Availability,"The issue is fixed in git, but not part of a release yet. You can download precompiled binaries from https://mmseqs.com/latest that contains the fix or compile MMseqs2 from source.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/758#issuecomment-1741118480:66,down,download,66,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/758#issuecomment-1741118480,1,['down'],['download']
Availability,"The next step would be to try a MMseqs2 build instrumented with ASan. Sadly ASan doesn't support static builds so you would have to compile MMseqs2 yourself:. ```; git clone https://github.com/soedinglab/MMseqs2.git; cd MMseqs2;; mkdir build; cd build; cmake -DHAVE_SANITIZER=1 -DCMAKE_BUILD_TYPE=ASan ..; make -j $(nproc --all); ```. The new binary in `src/mmseqs` would then hopefully be able to tell what is going wrong:. ```; Path-To-Where-You-Git-Clone/MMseqs2/build/src/mmseqs result2profile /ebio/abt3_scratch/nyoungblut/LLCDS_126702996474/mmseqs_tax_query/06/seqs_db /ebio/abt3_scratch/nyoungblut/LLCDS_126702996474/mmseqs_tax_target/mmseqs_tax.db.idx /ebio/abt3_scratch/nyoungblut/LLCDS_126702996474/mmseqs_tax/06/TMP/14652724320229658153/tmp_hsp1/11598483508011826746/aln_0 /ebio/abt3_scratch/nyoungblut/LLCDS_126702996474/mmseqs_tax/06/TMP/14652724320229658153/tmp_hsp1/11598483508011826746/profile_0 --sub-mat nucl:nucleotide.out,aa:blosum62.out -e 1e-05 --mask-profile 1 --e-profile 0.1 --comp-bias-corr 1 --wg 0 --allow-deletion 0 --filter-msa 1 --max-seq-id 0.9 --qid 0 --qsc -20 --cov 0 --diff 1000 --pca 0 --pcb 1.5 --db-load-mode 0 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --threads 8 --compressed 0 -v 3; ````",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/432#issuecomment-814313609:969,mask,mask-profile,969,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/432#issuecomment-814313609,1,['mask'],['mask-profile']
Availability,The parameter `--max-seqs` was always available but there was a stopped mmseqs from printing out the parameter. The printout problem should be resolved now. . How do you benchmark the performance?,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/78#issuecomment-377788647:38,avail,available,38,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/78#issuecomment-377788647,1,['avail'],['available']
Availability,"The parameter was wrongly named. In release 11 it's now called `--shuffle` and 0 means no shuffling and 1 shuffling is enabled. However I would recommend not changing them. They are an internal optimization to help MMseqs2 not lose sensitivity in one specific case. If a machine does not have enough RAM (or if MPI is used) the target database is split and processed into multiple chunks. If one chunk is too redundant/similar/biased then `--max-seqs` can explode within this one chunk and we might lose good hits. By more or less randomly assigning sequences to any chunk we can prevent this. This parameter does not affect the order of the results in the result file (i.e. the `.m8` file). This will still pretty much random, as each query is processed by a different thread and the order of results written is thus not deterministic. If you want a sorted result file I would recommend to use `sort`:; `sort -s -k1,1 result.m8 > result_sorted.m8`",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/313#issuecomment-632646531:409,redundant,redundant,409,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/313#issuecomment-632646531,1,['redundant'],['redundant']
Availability,"The positions refer to the original sequences, in this case the query positions refer to nucleotide positions and the target positions refer to amino acid positions. The alignment happens on the amino-acid level, after the alignment we recover the original positions with the `offsetalignment` module within the `search` workflow.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/570#issuecomment-1173282206:236,recover,recover,236,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/570#issuecomment-1173282206,1,['recover'],['recover']
Availability,"The prefilter results from the previous run are obscuring the real error. Could you empty the tmp folder and start again?. This part: ""[pwd]/mmseqs_tmp/pref_4_tmp_0.0: File exists""",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/11#issuecomment-274592316:67,error,error,67,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/11#issuecomment-274592316,1,['error'],['error']
Availability,"The regression test finished without errors, however the binary could not be uploaded. Maybe its a problem with the PR. I merged the commit into the master. ; So MMseqs2 is one step closer to be a great taxonomy classification tool. Thanks a lot!",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/pull/197#issuecomment-487700932:37,error,errors,37,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/pull/197#issuecomment-487700932,1,['error'],['errors']
Availability,"The seg-fault errors that I'm getting with `mmseqs taxonomy` don't appear to be due to the 2 extra split files. Even when tracking all `*.idx` files so they don't accidentally get deleted, I get the following error:. ```; taxonomy -e 1e-5 --max-seqs 200 --num-iterations 2 --start-sens 1 --sens-steps 3 -s 6 --lca-ranks superkingdom,kingdom,phylum,class,order,family,genus,species --threads 8 /ebio/abt3_scratch/nyoungblut/LLCDS_126702996474/mmseqs_tax_query/06/seqs_db /ebio/abt3_scratch/nyoungblut/LLCDS_126702996474/mmseqs_tax_target/mmseqs_tax.db /ebio/abt3_scratch/nyoungblut/LLCDS_126702996474/mmseqs_tax/06/seqs_tax_db /ebio/abt3_scratch/nyoungblut/LLCDS_126702996474/mmseqs_tax/06/TMP. MMseqs Version: 	13.45111; ORF filter 	1; ORF filter e-value 	100; ORF filter sensitivity 	2; LCA mode 	3; Taxonomy output mode 	0; Majority threshold 	0.5; Vote mode 	1; LCA ranks 	superkingdom,kingdom,phylum,class,order,family,genus,species; Column with taxonomic lineage 	0; Compressed 	0; Threads 	8; Verbosity 	3; Taxon blacklist 	12908:unclassified sequences,28384:other sequences; Substitution matrix 	nucl:nucleotide.out,aa:blosum62.out; Add backtrace 	false; Alignment mode 	1; Alignment mode 	0; Allow wrapped scoring 	false; E-value threshold 	1e-05; Seq. id. threshold 	0; Min alignment length 	0; Seq. id. mode 	0; Alternative alignments 	0; Coverage threshold 	0; Coverage mode 	0; Max sequence length 	65535; Compositional bias 	1; Max reject 	5; Max accept 	30; Include identical seq. id. 	false; Preload mode 	0; Pseudo count a 	1; Pseudo count b 	1.5; Score bias 	0; Realign hits 	false; Realign score bias 	-0.2; Realign max seqs 	2147483647; Gap open cost 	nucl:5,aa:11; Gap extension cost 	nucl:2,aa:1; Zdrop 	40; Seed substitution matrix 	nucl:nucleotide.out,aa:VTML80.out; Sensitivity 	6; k-mer length 	0; k-score 	2147483647; Alphabet size 	nucl:5,aa:21; Max results per query 	200; Split database 	0; Split mode 	2; Split memory limit 	0; Diagonal scoring 	true; Exact k-mer matchin",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/432#issuecomment-813242194:8,fault,fault,8,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/432#issuecomment-813242194,3,"['error', 'fault']","['error', 'errors', 'fault']"
Availability,"The static binaries take about one hour to build (running the tests take some time).; GCC 9 would be completely sufficient to compile, we support (and check for) down to GCC 4.9 and clang 5.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/401#issuecomment-771983647:162,down,down,162,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/401#issuecomment-771983647,1,['down'],['down']
Availability,"The version of MMseqs2 is: MMseqs2 Version: 12.113e3. CD-HIT command is: ; `cd-hit -i all_protein_final_95_rep.fasta.1 -c 0.95 -aS 0.9 -d 200 -M 0 -T 40 -g 0 -l 30 -o all_protein_final_95_rep_95_1.fasta`. log of default linclust is; kmermatcher /hwfssz1/ST_DIVERSITY/P18Z10200N0197_temp/USER/tanshangjin/01_gene_cat/protein_cat/all_protein_merge_95.db /hwfssz1/ST_DIVERSITY/P18Z10200N0197_temp/USER/tanshangjin/01_gene_cat/protein_cat/tmp/10916148350968526968/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-id 0.95 --kmer-per-seq 21 --spaced-kmer-mode 0 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 1 -k 0 -c 0.9 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 1T --include-only-extendable 0 --ignore-multi-kmer 0 --threads 100 --compressed 0 -v 3 . kmermatcher /hwfssz1/ST_DIVERSITY/P18Z10200N0197_temp/USER/tanshangjin/01_gene_cat/protein_cat/all_protein_merge_95.db /hwfssz1/ST_DIVERSITY/P18Z10200N0197_temp/USER/tanshangjin/01_gene_cat/protein_cat/tmp/10916148350968526968/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-id 0.95 --kmer-per-seq 21 --spaced-kmer-mode 0 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 1 -k 0 -c 0.9 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 1T --include-only-extendable 0 --ignore-multi-kmer 0 --threads 100 --compressed 0 -v 3 . Database size: 773451991 type: Nucleotide. Generate k-mers list for 1 split; [=================================================================] 773.45M 1h 49m 32s 108ms. Adjusted k-mer length 18; Sort kmer 0h 0m 4s 610ms; Sort by rep. sequence 0h 0m 0s 325ms; Time for fill: 0h 0m 4s 175ms; Time for merging to pref: 0h 0m 0s 16ms; Time for processing: 2h 3m 42s 6ms; rescorediagonal /hwfssz1/ST_DIVERSITY/P18Z10200N0197_temp/USER/tanshangjin/01_gene_cat/protein_cat/all_protein_merge_95.db /hwfssz1/ST_DIVERSITY/P18Z10200N01",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/365#issuecomment-713411153:656,mask,mask,656,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/365#issuecomment-713411153,2,['mask'],"['mask', 'mask-lower-case']"
Availability,"The version on linuxbrew is 8-fac81, and worked nicely when changing de k-mer size. ```; Program call:; search pbps.neighbors.DB pfam_profile result tmp -k 6 -s 7.5 --threads 10 . MMseqs Version: 8-fac81; Substitution Matrix blosum62.out; Add backtrace false; Alignment mode 2; E-value threshold 0.001; Seq. Id Threshold 0; Min. alignment length 0; Seq. Id. Mode 0; Alternative alignments 0; Coverage threshold 0; Coverage Mode 0; Max. sequence length 65535; Compositional bias 1; Realign hit false; Max Reject 2147483647; Max Accept 2147483647; Include identical Seq. Id. false; Preload mode 0; Pseudo count a 1; Pseudo count b 1.5; Score bias 0; Gap open cost 11; Gap extension cost 1; Threads 10; Compressed 0; Verbosity 3; Seed Substitution Matrix VTML80.out; Sensitivity 7.5; K-mer size 6; K-score 2147483647; Alphabet size 21; Max. results per query 300; Offset result 0; Split DB 0; Split mode 2; Split Memory Limit 0; Diagonal Scoring 1; Exact k-mer matching 0; Mask Residues 1; Mask lower case residues 0; Minimum Diagonal score 15; Spaced Kmer 1; Spaced k-mer pattern ; Local temporary path ; Rescore mode 0; Remove hits by seq.id. and coverage false; Sort results 0; In substitution scoring mode, performs global alignment along the diagonal false; Mask profile 1; Profile e-value threshold 0.1; Use global sequence weighting false; Filter MSA 1; Maximum sequence identity threshold 0.9; Minimum seq. id. 0; Minimum score per column -20; Minimum coverage 0; Select n most diverse seqs 1000; Omit Consensus false; Min codons in orf 30; Max codons in length 32734; Max orf gaps 2147483647; Contig start mode 2; Contig end mode 2; Orf start mode 1; Forward Frames 1,2,3; Reverse Frames 1,2,3; Translation Table 1; Use all table starts false; Offset of numeric ids 0; Add Orf Stop false; Chain overlapping alignments 0; Search type 0; Number search iterations 1; Start sensitivity 4; Search steps 1; Run a seq-profile search in slice mode false; Strand selection 1; Disk space limit 0; Sets the",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/189#issuecomment-483627132:970,Mask,Mask,970,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/189#issuecomment-483627132,2,['Mask'],['Mask']
Availability,The whole database is bit large to upload but all of the sequence files are available on NCBI so you can recreate it.; ```; 002572	https://ftp.ncbi.nlm.nih.gov/genomes/genbank/vertebrate_other/Ambystoma_mexicanum/latest_assembly_versions/GCA_002915635.3_AmbMex60DD/GCA_002915635.3_AmbMex60DD_genomic.fna.gz; 002700	https://ftp.ncbi.nlm.nih.gov/genomes/genbank/invertebrate/Ormyrus_pomaceus/latest_assembly_versions/GCA_900474385.1_Opom/GCA_900474385.1_Opom_genomic.fna.gz; 002828	https://ftp.ncbi.nlm.nih.gov/genomes/genbank/invertebrate/Bombus_difficillimus/latest_assembly_versions/GCA_014737525.1_ASM1473752v1/GCA_014737525.1_ASM1473752v1_genomic.fna.gz; 002956	https://ftp.ncbi.nlm.nih.gov/genomes/genbank/invertebrate/Ixodes_persulcatus/latest_assembly_versions/GCA_013358835.1_BMI_IPER_1.0/GCA_013358835.1_BMI_IPER_1.0_genomic.fna.gz; 003084	https://ftp.ncbi.nlm.nih.gov/genomes/genbank/invertebrate/Drosophila_paulistorum/latest_assembly_versions/GCA_018151315.1_ASM1815131v1/GCA_018151315.1_ASM1815131v1_genomic.fna.gz; 003212	https://ftp.ncbi.nlm.nih.gov/genomes/genbank/invertebrate/Stichodactyla_mertensii/latest_assembly_versions/GCA_011800005.1_ASM1180000v1/GCA_011800005.1_ASM1180000v1_genomic.fna.gz; 003340	https://ftp.ncbi.nlm.nih.gov/genomes/genbank/invertebrate/Junonia_litoralis/latest_assembly_versions/GCA_018234725.1_SRR10765697/GCA_018234725.1_SRR10765697_genomic.fna.gz; 003468	https://ftp.ncbi.nlm.nih.gov/genomes/genbank/invertebrate/Emesis_heterochroa/latest_assembly_versions/GCA_018236145.1_SRR10158617/GCA_018236145.1_SRR10158617_genomic.fna.gz; 003596	https://ftp.ncbi.nlm.nih.gov/genomes/genbank/invertebrate/Armadillidium_vulgare/latest_assembly_versions/GCA_004104545.1_Arma_vul_BF2787/GCA_004104545.1_Arma_vul_BF2787_genomic.fna.gz; 003724	https://ftp.ncbi.nlm.nih.gov/genomes/genbank/invertebrate/Rotaria_socialis/latest_assembly_versions/GCA_905331295.1_Rs_AK15_reference_genomic_v1/GCA_905331295.1_Rs_AK15_reference_genomic_v1_genomic.fna.gz; 000675	https://ftp.,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/464#issuecomment-908476824:76,avail,available,76,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/464#issuecomment-908476824,1,['avail'],['available']
Availability,"Then I am quite confused :D . Would it be possible to share the FASTA file that causes this error? If not, can you try to ""bisect"" the file and try to convert each half until you identify what entry might be broken.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/763#issuecomment-1759874599:92,error,error,92,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/763#issuecomment-1759874599,1,['error'],['error']
Availability,"There is not that much downside to increasing the kmer-per-seq to 2000. It will slow down linclust somewhat, but for only 2M entries it shouldn't really matter. You might want to use `--kmer-per-seq-scale` though. This parameter adds additional k-mers linearly based on the sequence length. By default, this is set to 0.2 for nucleotide sequences.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/831#issuecomment-2033442320:23,down,downside,23,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/831#issuecomment-2033442320,2,['down'],"['down', 'downside']"
Availability,There you go. . These contigs specifically raise the error I uploaded. . [BL090113.txt](https://github.com/soedinglab/MMseqs2/files/6405609/BL090113.txt),MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/447#issuecomment-830092919:53,error,error,53,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/447#issuecomment-830092919,1,['error'],['error']
Availability,These are my commands. ```; mmseqs createdb all.fasta all.mmseq; mmseqs linclust all.mmseq all.cluster tmpDir --threads 20 -e 1e-6 --min-seq-id 0.8 --coverage 0.8; mmseqs createtsv all.mmseq all.mmseq all.cluster all.cluster.tsv; mmseqs result2repseq all.mmseq all.cluster all.representatives; mmseqs result2flat all.mmseq all.mmseq all.representatives all.representatives.fasta --use-fasta-header; ```. I select set of clusters using `all.cluster.tsv` and the point is to recover only the clusters that i want.,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/247#issuecomment-559394438:473,recover,recover,473,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/247#issuecomment-559394438,1,['recover'],['recover']
Availability,This error is occures because to the amount of sequences in the set. If there are more threads than sequences the `kmermatcher` module will fail. This should be fixed at the current version a357368b3e336a6a42772fb085fbc141df50b8ac. Could you please checkout the most recent version and rerun it?,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/35#issuecomment-309965032:5,error,error,5,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/35#issuecomment-309965032,1,['error'],['error']
Availability,"This error is very unexpected and I can't imagine how/why it could happen. I don't think it is related to this old issue though. If you can arrange some interactive session, i'd happy to take a look.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/447#issuecomment-842292089:5,error,error,5,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/447#issuecomment-842292089,1,['error'],['error']
Availability,"This feature is only present in git MMseqs2. We still haven't managed to make a new release, since we were busy with other projects and also some personal stuff. Things should hopefully start to stabilize soon, so we might finish up a new MMseqs2 release. In the meantime you can use the precompiled binaries available at https://mmseqs.com/latest.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/572#issuecomment-1159577278:309,avail,available,309,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/572#issuecomment-1159577278,1,['avail'],['available']
Availability,"This feature was meant for turning a bunch of fasta files in form of a DB (e.g., produced by `tar2db`) into a normal MMseqs2 sequence databases. It is being used for this purpose in the `databases` downloader workflow. . If you want to consume sequence dbs and produce new sequence dbs, i would suggest to add a check for the presence of a header db and only then do your new code.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/pull/545#issuecomment-1069315337:198,down,downloader,198,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/pull/545#issuecomment-1069315337,1,['down'],['downloader']
Availability,"This issue is fixed in Git, but not part of a release yet. I think I fixed it shortly after the last release. You can download precompiled binaries at mmseqs.com/latest. These 5 lines are intended to call the `clust` module which implements the actual clustering algorithm, not the whole `cluster` workflow with the searches etc:; ```; mmseqs cluster $INPUT ""$TMPPATH/aln_redundancy"" ""$TMPPATH/clu_redundancy"" ${CLUSTER_FRAG_PAR}; mmseqs cluster $INPUT ""$TMPPATH/aln_step$STEP"" ""$TMPPATH/clu_step$STEP"" ${CLUSTER0_PAR}; mmseqs cluster $INPUT ""$TMPPATH/aln_step$STEP"" ""$TMPPATH/clu_step$STEP"" ${CLUSTER1_PAR}; mmseqs cluster $INPUT ""$TMPPATH/aln_uniclust50"" ""$TMPPATH/clu_uniclust50"" ${CLUSTER2_PAR}; mmseqs cluster $INPUT ""$TMPPATH/aln_step$STEP"" ""$TMPPATH/clu_uniclust30"" ${CLUSTER2_PAR}; ```; should be . ```; mmseqs clust $INPUT ""$TMPPATH/aln_redundancy"" ""$TMPPATH/clu_redundancy"" ${CLUSTER_FRAG_PAR}; mmseqs clust $INPUT ""$TMPPATH/aln_step$STEP"" ""$TMPPATH/clu_step$STEP"" ${CLUSTER0_PAR}; mmseqs clust $INPUT ""$TMPPATH/aln_step$STEP"" ""$TMPPATH/clu_step$STEP"" ${CLUSTER1_PAR}; mmseqs clust $INPUT ""$TMPPATH/aln_uniclust50"" ""$TMPPATH/clu_uniclust50"" ${CLUSTER2_PAR}; mmseqs clust $INPUT ""$TMPPATH/aln_step$STEP"" ""$TMPPATH/clu_uniclust30"" ${CLUSTER2_PAR}; ```. For a 70% clustering you can adapt the 50% clustering strategy:. ```; # cluster down to 70%; mmseqs filterdb ""$TMPPATH/aln_step$STEP"" ""$TMPPATH/aln_uniclust70"" \; --filter-column 3 --filter-regex '(0\.[7-9][0-9]{2}|1\.000)'; mmseqs cluster $INPUT ""$TMPPATH/aln_uniclust70"" ""$TMPPATH/clu_uniclust70"" ${CLUSTER2_PAR}; mmseqs mergeclusters ""${SEQUENCE_DB}"" $OUTDIR/uniclust70_$RELEASE \; ""$TMPPATH/clu_frag"" ""$TMPPATH/clu_redundancy"" $TMPPATH/clu_step0 $TMPPATH/clu_step1 $TMPPATH/clu_uniclust70; ```. The idea here is to go directly from 90 to 30 to avoid any possible transitivity issues. In the MMseqs2 cascaded clustering you can get representative->member hits below the given thresholds after putting clusters from previous clustering st",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/700#issuecomment-1590461067:118,down,download,118,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/700#issuecomment-1590461067,1,['down'],['download']
Availability,This looks about right. What's the error message?,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/681#issuecomment-1464195021:35,error,error,35,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/681#issuecomment-1464195021,1,['error'],['error']
Availability,This looks pretty bad:; ```; Top 10 k-mers; XXXXXX 3; XXXXXX 3; XXXXXX 2; XXXXXX 2; XXXXXX 2; XXXXXX 2; XXXXXX 2; XXXXXX 2; XXXXXX 2; XXXXXX 2; ```. Can you try using `--mask 0`? Also add `-k 5 --spaced-kmer-pattern 110111`. This should allow matching sequences that are 7 residues long.,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-773238581:170,mask,mask,170,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-773238581,1,['mask'],['mask']
Availability,This might either be a masking thing or a compositonal bias correction issue. In the web-server you can add --mask 0 --comp-bias-corr 0 to both the indexing and search parameters json field (delete the .idx files first). Same parameters for the command line Foldseek.,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/717#issuecomment-1588561092:23,mask,masking,23,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/717#issuecomment-1588561092,2,['mask'],"['mask', 'masking']"
Availability,"This option is available for mmseqs search, but not available for mmseqs linclust or mmseqs cluster",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/75#issuecomment-375145376:15,avail,available,15,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/75#issuecomment-375145376,2,['avail'],['available']
Availability,This should be now available in our newest release: https://github.com/soedinglab/MMseqs2/releases/tag/14-7e284,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/561#issuecomment-1277799240:19,avail,available,19,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/561#issuecomment-1277799240,2,['avail'],['available']
Availability,This sounds like a filesystem error while closing the result file. Could it be possible that the system ran out of space?,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/550#issuecomment-1088800086:30,error,error,30,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/550#issuecomment-1088800086,1,['error'],['error']
Availability,"Threads 	36; Sub Matrix 	blosum62.out; Add backtrace 	false; Alignment mode 	3; E-value threshold 	0.001; Seq. Id Threshold 	0; Alternative alignments 	0; Coverage threshold 	0.8; Coverage Mode 	0; Max. sequence length 	65535; Max. results per query 	300; Compositional bias 	1; Realign hit 	false; Max Reject 	2147483647; Max Accept 	2147483647; Include identical Seq. Id. 	false; No preload 	false; Early exit 	false; Pseudo count a 	1; Pseudo count b 	1.5; Alphabet size 	13; Kmer per sequence 	80; Mask Residues 	0; K-mer size 	0; Shift hash 	5; Split Memory Limit 	0; Include only extendable 	false; Skip sequence with n repeating k-mers 	0; Rescore mode 	0; Remove hits by seq.id. and coverage 	false; In substitution scoring mode, performs global alignment along the diagonal	false; Remove Temporary Files 	false; Sets the MPI runner 	. Program call:; panproteome.db /tmp/clu//9559457551393989073/linclust/16641318581476709947/pref --sub-mat blosum62.out --alph-size 13 --min-seq-id 0 --kmer-per-seq 80 --mask 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 5 --split-memory-limit 0 --skip-n-repeat-kmer 0 --threads 36 -v 3 . MMseqs Version: 	dfb5e6eb53ee034f02cc08d15513fb5ccce7cce7; Sub Matrix 	blosum62.out; Alphabet size 	13; Seq. Id Threshold 	0; Kmer per sequence 	80; Mask Residues 	0; Coverage Mode 	0; K-mer size 	10; Coverage threshold 	0.8; Max. sequence length 	65535; Shift hash 	5; Split Memory Limit 	0; Include only extendable 	false; Skip sequence with n repeating k-mers	0; Threads 	36; Verbosity 	3. Database type: Aminoacid; V -> I; M -> L; Q -> E; T -> S; R -> K; Y -> F; S -> A; N -> D; Reduced amino acid alphabet:; A C D E F G H I K L P W X . Needed memory (1384664272 byte) of total memory (365681509171 byte); Process file into 1 parts; Generate k-mers list 0; ...................................................................................................	1 Mio. sequences processed; .............; Time for fill: 0 h 0 m 2s; Done.; Sort kmer ... Don",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/88#issuecomment-401138700:23189,mask,mask,23189,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/88#issuecomment-401138700,1,['mask'],['mask']
Availability,"Time for processing: 0h 0m 0s 2ms; prefilter tmp//10798751672030653963/seq_wrong_assigned tmp//10798751672030653963/seq_seeds.merged tmp//10798751672030653963/seq_wrong_assigned_pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -s 6 -k 0 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 65535 --max-seqs 20 --split 0 --split-mode 2 --split-memory-limit 0 -c 0.8 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 16 --compressed 0 -v 3. Query database size: 14 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 214 type: Aminoacid; Index table k-mer threshold: 109 at k-mer size 6; Index table: counting k-mers; [=================================================================] 100.00% 214 0s 24ms; Index table: Masked residues: 0; Index table: fill; [=================================================================] 100.00% 214 0s 9ms; Index statistics; Entries: 1312; DB size: 488 MB; Avg k-mer size: 0.000021; Top 10 k-mers; XXXXXX 3; XXXXXX 3; XXXXXX 2; XXXXXX 2; XXXXXX 2; XXXXXX 2; XXXXXX 2; XXXXXX 2; XXXXXX 2; XXXXXX 2; Time for index table init: 0h 0m 0s 857ms; Process prefiltering step 1 of 1. k-mer similarity threshold: 109; Starting prefiltering scores calculation (step 1 of 1); Query db start 1 to 14; Target db start 1 to 214; [=================================================================] 100.00% 14 0s 45ms. 376.012940 k-mers per position; 14 DB matches per sequence; 0 overflows; 0 queries produce too many hits (truncated result); 3 sequences passed prefiltering per query sequence; 3 median result list length; 0 sequences with 0 size result lists; Time for merging to seq_wrong_assigned_pref: 0h 0m 0s 6ms; Time for processing: 0h 0m 1s 611ms; swapdb tmp//10798751672030653963/seq_wrong_assigned_pref tmp//10798751672030653",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-775767472:28343,Mask,Masked,28343,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-775767472,1,['Mask'],['Masked']
Availability,"Tmp tmpfiles/ folder does not exist or is not a directory.; Create dir tmpfiles/; cluster DB_in/fasta_in_db_HC DB_clustered/clustered_HC tmpfiles/ --cluster-reassign 1 --cluster-mode 1 --cov-mode 0. MMseqs Version: 96d452cb432fc4674991a48952deaf24d1787e77; Substitution matrix nucl:nucleotide.out,aa:blosum62.out; Seed substitution matrix nucl:nucleotide.out,aa:VTML80.out; Sensitivity 4; k-mer length 0; k-score 2147483647; Alphabet size nucl:5,aa:21; Max sequence length 65535; Max results per query 20; Split database 0; Split mode 2; Split memory limit 0; Coverage threshold 0.8; Coverage mode 0; Compositional bias 1; Diagonal scoring true; Exact k-mer matching 0; Mask residues 1; Mask lower case residues 0; Minimum diagonal score 15; Include identical seq. id. false; Spaced k-mers 1; Preload mode 0; Pseudo count a 1; Pseudo count b 1.5; Spaced k-mer pattern; Local temporary path; Threads 16; Compressed 0; Verbosity 3; Add backtrace false; Alignment mode 3; Allow wrapped scoring false; E-value threshold 0.001; Seq. id. threshold 0; Min alignment length 0; Seq. id. mode 0; Alternative alignments 0; Realign hits false; Max reject 2147483647; Max accept 2147483647; Score bias 0; Gap open cost nucl:5,aa:11; Gap extension cost nucl:2,aa:1; Zdrop 40; Rescore mode 0; Remove hits by seq. id. and coverage false; Sort results 0; Cluster mode 1; Max connected component depth 1000; Similarity type 2; Single step clustering false; Cascaded clustering steps 3; Cluster reassign true; Remove temporary files false; Force restart with latest tmp false; MPI runner; k-mers per sequence 21; Scale k-mers per sequence nucl:0.200,aa:0.000; Adjust k-mer length false; Shift hash 67; Include only extendable false; Skip repeating k-mers false. Set cluster sensitivity to -s 6.000000; Connected component clustering produces less clusters in a single step clustering.; Please use --single-step-clusterSet cluster iterations to 3; linclust DB_in/fasta_in_db_HC tmpfiles//13298481167543164943/clu_redundan",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-771572412:670,Mask,Mask,670,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-771572412,2,['Mask'],['Mask']
Availability,"To be clear, as far as I can tell, `mmseqs taxonomy` is completely unusable due to this bug. I'm surprised others have not commented on this earlier. I've reproduced this error multiple times, so it's not stochastic.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/188#issuecomment-484228558:171,error,error,171,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/188#issuecomment-484228558,2,['error'],['error']
Availability,"To slightly expand on this, `easy-cluster` just calls `cluster` and a few modules to make the clustering tsv file and the FASTA files. It itself doesn't do anything special, however generating the cluster FASTA files is a bit tricky with the currently available MMseqs2 modules, so the `easy-cluster` workflow does that for you. The clustering procedure should be mostly the same since the Linclust paper (the combined Linclust+MMseqs2 clustering). The `--cluster-reassign` parameter to fix hits with sequence-identity/coverages below the given thresholds that were allowed due to the cascading is not described in the paper and the nucleotide clustering was also not available then.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/712#issuecomment-1579953989:252,avail,available,252,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/712#issuecomment-1579953989,2,['avail'],['available']
Availability,"Try giving every job an unique tmp folder (e.g., `tmp_${SLURM_JOB_ID}_${SLURM_ARRAY_TASK_ID}`). MMseqs2 also doesn't have a good way to give it a total memory limit, you can approximate a memory limit with `--split-memory-limit`. This should be about 80% of the memory you want MMseqs2 to use (in your case about 40GB, so `--split-memory-limit 40G`). This is relevant if other jobs are running on the same node too, as MMseqs2 will generally try to use all available memory.,",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/607#issuecomment-1250809436:457,avail,available,457,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/607#issuecomment-1250809436,1,['avail'],['available']
Availability,Trying out NEWMAPDB (soft link) in the following format; `mmseqs createtsv NEWMAPDB NEWMAPDB NEWCLUST NEWCLUST.tsv`. I receive the following error:; Start writing file to NEWCLUST_clu.tsv; terminate called after throwing an instance of 'std::logic_error'; what(): basic_string::_S_construct null not valid; Aborted,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/103#issuecomment-404861986:141,error,error,141,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/103#issuecomment-404861986,1,['error'],['error']
Availability,"Trying the newest commit fixed the issue! Thanks!. However, I now have an issue with batching `mmseqs taxonomy` and then merging the resulting taxonomy database. I previously used `mmseqs mergedbs`, but now I get the following error: . ```; Input database ""/tmp/global2/nyoungblut/LLMGAG_27929269397/taxonomy/clusters_rep-seqs.part-19_tax_db"" is wrong!; Current input: Taxonomy. Allowed input: Unknown, Index, Nucleotide, Profile, Aminoacid, Alignment, Prefilter, Bi-directional prefilter, Clustering, Offsetted headers, Generic; ```. I don't see any subcommand for merging taxonomy databases. How do I merge taxonomy databases with the most recent version of mmseqs?",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/221#issuecomment-516404117:227,error,error,227,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/221#issuecomment-516404117,1,['error'],['error']
Availability,"Trying with the `easy-taxonomy` workflow got me further, but after two rounds of prefiltering I ended up getting:. ```; Error: Lca died; Error: taxonomy died; Error: Search died; ```. Full MMseqs2 output logfile is [here](https://gist.github.com/sean-workman/1d8f5068894c76dfc021cd9db2f5a29a). The `gdb` output says:. ```; Core was generated by `mmseqs lca /home/sdwork/scratch/metagenomics/uniref_db/uniref90 ez_tmp/88137780'.; Program terminated with signal SIGBUS, Bus error.; #0 0x00002adfa621cbf4 in ?? () from /cvmfs/soft.computecanada.ca/gentoo/2023/x86-64-v3/usr/lib64/libc.so.6; ```",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/838#issuecomment-2081727903:120,Error,Error,120,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/838#issuecomment-2081727903,4,"['Error', 'error']","['Error', 'error']"
Availability,"UPDATE: Index is huge:. ```; total 3.8T; -rwxrwx--- 1 guelou01 nogroup 447G Aug 18 19:33 NCBI_ALL_DB; -rwxrwx--- 1 guelou01 nogroup 4 Aug 18 19:34 NCBI_ALL_DB.dbtype; -rwxrwx--- 1 guelou01 nogroup 954M Aug 18 18:11 NCBI_ALL_DB_h; -rwxrwx--- 1 guelou01 nogroup 4 Aug 18 18:11 NCBI_ALL_DB_h.dbtype; -rwxrwx--- 1 guelou01 nogroup 195M Aug 18 19:34 NCBI_ALL_DB_h.index; -rwxrwx--- 1 guelou01 nogroup 80K Sep 14 14:31 NCBI_ALL_DB.idx.0; -rwxrwx--- 1 guelou01 nogroup 895G Sep 14 14:31 NCBI_ALL_DB.idx.1; -rwxrwx--- 1 guelou01 nogroup 622G Sep 14 14:31 NCBI_ALL_DB.idx.2; -rwxrwx--- 1 guelou01 nogroup 622G Sep 14 14:31 NCBI_ALL_DB.idx.3; -rwxrwx--- 1 guelou01 nogroup 623G Sep 14 14:31 NCBI_ALL_DB.idx.4; -rwxrwx--- 1 guelou01 nogroup 622G Sep 14 14:31 NCBI_ALL_DB.idx.5; -rwxrwx--- 1 guelou01 nogroup 622G Sep 14 14:31 NCBI_ALL_DB.idx.6; -rwxrwx--- 1 guelou01 nogroup 4 Sep 14 14:31 NCBI_ALL_DB.idx.dbtype; -rwxrwx--- 1 guelou01 nogroup 1.1K Sep 14 14:31 NCBI_ALL_DB.idx.index; -rwxrwx--- 1 guelou01 nogroup 236M Aug 18 19:34 NCBI_ALL_DB.index; -rwxrwx--- 1 guelou01 nogroup 257M Aug 18 19:34 NCBI_ALL_DB.lookup; -rwxrwx--- 1 guelou01 nogroup 17 Aug 18 18:10 NCBI_ALL_DB.source; ```; And when starting the search the following message is confusing:; ```; Process needs more than 641G main memory.; Increase the size of --split or set it to 0 to automatically optimize target database split.; Computed index is too large. Avoid using the index.; ```; Adding `--split X` does not have any effect, but does not cause any error. The search now runs for several days with a low CPU usage, only few threads on `idx` files.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/748#issuecomment-1731850063:1514,error,error,1514,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/748#issuecomment-1731850063,1,['error'],['error']
Availability,"Unfortunately no. Also, sorry for don't ask before. So I did this way: ; 1- Download the MMseqs2 Version: aa14ce37feb5eda7231af20259d8f2b659162236 ; 2- Compile as [described here](https://github.com/soedinglab/MMseqs2/#compile-from-source) but changing `cmake -DCMAKE_BUILD_TYPE=RELEASE -DCMAKE_INSTALL_PREFIX=. ..` by `cmake -DCMAKE_BUILD_TYPE=Debug -DCMAKE_INSTALL_PREFIX=. ..` ; 3- Run all steps below:; > mmseqs createdb tcdb_query.nr.fa tcdb_query.nr.db 2>&1 >> log ; > mmseqs createdb all.fa all.db 2>&1 >> log; ; > mmseqs search tcdb_query.nr.db all.db tcdb_result.db tmp --threads 40 -s 7.5 --num-iterations 3 -a --max-seqs 17702628 -c 0.8 --add-self-matches 2>&1 >> log . 4- After crash:; > gdb --args mmseqs align tcdb_query.nr.db all.db tmp/1072319213335698383/pref_0 tmp/1072319213335698383/aln_0 --sub-mat blosum62.out -a 1 --alignment-mode 2 -e 0.1 --min-seq-id 0 --seq-id-mode 0 --alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-len 65535 --max-seqs 17702628 --comp-bias-corr 1 --realign 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 1 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --gap-open 11 --gap-extend 1 --threads 40 -v 3 . return:; ```; GNU gdb (GDB) Red Hat Enterprise Linux 7.6.1-114.el7; Copyright (C) 2013 Free Software Foundation, Inc.; License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>; This is free software: you are free to change and redistribute it.; There is NO WARRANTY, to the extent permitted by law. Type ""show copying""; and ""show warranty"" for details.; This GDB was configured as ""x86_64-redhat-linux-gnu"".; For bug reporting instructions, please see:; <http://www.gnu.org/software/gdb/bugs/>...; Reading symbols from /home/acpguedes/source/MMseqs2/build/bin/mmseqs...done.; (gdb) bt; No stack.; ```. Important note:; I send the STDOUT and STDERR to log file but there are one message that was printed on the screen and not on log file: ; `scoreIdentical has different length L: scoreIdentical has different leng",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/134#issuecomment-455599510:76,Down,Download,76,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/134#issuecomment-455599510,1,['Down'],['Download']
Availability,"Update:; ```; Index table k-mer threshold: 0 at k-mer size 15 ; Index table: counting k-mers; [> ] 0.00% 1 eta /scratch200/urineri/tmp2//13943365082736394582/blastp.sh: line 99: 34827 Segmentation fault $RUNNER ""$MMSEQS"" prefilter ""$INPUT"" ""$TARGET"" ""$TMP_PATH/pref_$STEP"" $PREFILTER_PAR -s ""$SENS""; Error: Prefilter died; Error: Search step died. Breakpoint 1, 0x00002aaaab136c10 in exit () from /lib64/libc.so.6; Missing separate debuginfos, use: debuginfo-install bash-4.2.46-28.el7.x86_64; (gdb) bt; (gdb) bt; #0 0x00002aaaab136c10 in exit () from /lib64/libc.so.6; #1 0x000000000041d9de in exit_shell (); #2 0x000000000041c8f9 in main (); ```",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/280#issuecomment-591466407:197,fault,fault,197,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/280#issuecomment-591466407,3,"['Error', 'fault']","['Error', 'fault']"
Availability,"Users/moorer/Downloads/mmseqs2/src/generatedfiles/blosum62.out.h; -- Compile blosum65.out to /Users/moorer/Downloads/mmseqs2/src/generatedfiles/blosum65.out.h; -- Compile blosum70.out to /Users/moorer/Downloads/mmseqs2/src/generatedfiles/blosum70.out.h; -- Compile blosum75.out to /Users/moorer/Downloads/mmseqs2/src/generatedfiles/blosum75.out.h; -- Compile blosum80.out to /Users/moorer/Downloads/mmseqs2/src/generatedfiles/blosum80.out.h; -- Compile blosum85.out to /Users/moorer/Downloads/mmseqs2/src/generatedfiles/blosum85.out.h; -- Compile blosum90.out to /Users/moorer/Downloads/mmseqs2/src/generatedfiles/blosum90.out.h; -- Compile blosum95.out to /Users/moorer/Downloads/mmseqs2/src/generatedfiles/blosum95.out.h; -- Compile cascaded_clustering.sh to /Users/moorer/Downloads/mmseqs2/src/generatedfiles/cascaded_clustering.sh.h; -- Compile clustering.sh to /Users/moorer/Downloads/mmseqs2/src/generatedfiles/clustering.sh.h; -- Compile update_clustering.sh to /Users/moorer/Downloads/mmseqs2/src/generatedfiles/update_clustering.sh.h; -- Configuring done; -- Generating done; -- Build files have been written to: /Users/moorer/Downloads/mmseqs2/build; Zebulon | build -> make; Scanning dependencies of target prefiltering; [ 0%] Building CXX object src/prefiltering/CMakeFiles/prefiltering.dir/ExtendedSubstitutionMatrix.cpp.o; [ 1%] Building CXX object src/prefiltering/CMakeFiles/prefiltering.dir/Indexer.cpp.o; [ 2%] Building CXX object src/prefiltering/CMakeFiles/prefiltering.dir/KmerGenerator.cpp.o; [ 3%] Building CXX object src/prefiltering/CMakeFiles/prefiltering.dir/Main.cpp.o; /Users/moorer/Downloads/mmseqs2/src/prefiltering/Main.cpp: In function 'int prefilter(int, const char**, const Command&)':; /Users/moorer/Downloads/mmseqs2/src/prefiltering/Main.cpp:72:12: warning: unused variable 'splitMode' [-Wunused-variable]; size_t splitMode = pref->getSplitMode();; ^~~~~~~~~; [ 4%] Building CXX object src/prefiltering/CMakeFiles/prefiltering.dir/Prefiltering.cpp.o; /var/folders",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/7#issuecomment-265028472:4166,Down,Downloads,4166,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/7#issuecomment-265028472,1,['Down'],['Downloads']
Availability,"Using the search workflow (with --comp-bias-corr 0 --mask 0) and convertalis:. `search //app/database/Repetitive_Aminos14/Repetitive_Aminos14_DB //app/database/Repetitive_Aminos14/Repetitive_Aminos14_DB //app/database/Repetitive_Aminos14/Repetitive_Aminos14_DB_Self //app/clustering/tmp -e 0 -s 1.0 --exact-kmer-matching 1 --sub-mat /app/matrices/blosum62-parasail.out --comp-bias-corr 0 --mask 0 `. `convertalis //app/database/Repetitive_Aminos14/Repetitive_Aminos14_DB //app/database/Repetitive_Aminos14/Repetitive_Aminos14_DB //app/database/Repetitive_Aminos14/Repetitive_Aminos14_DB_Self //app/database/Repetitive_Aminos14/Repetitive_Aminos14_DB_Self_converted.tsv --format-output query,target,raw --gap-open 11 --gap-extend 1 --sub-mat /app/matrices/blosum62-parasail.out `. I now get values that seem to be within roundoff error (+-1) of parasail values (below). These values still don't give whole numbers when divided by 14, though they are at most 0.07 from whole numbers. Is there any way to get an exact match for Parasail values? I'm guessing at this point it might be a floating point arithmetic issue which may not be easily resolvable. . <html xmlns:v=""urn:schemas-microsoft-com:vml""; xmlns:o=""urn:schemas-microsoft-com:office:office""; xmlns:x=""urn:schemas-microsoft-com:office:excel""; xmlns=""http://www.w3.org/TR/REC-html40"">. <head>. <meta name=ProgId content=Excel.Sheet>; <meta name=Generator content=""Microsoft Excel 15"">; <link id=Main-File rel=Main-File; href=""file:///C:/Users/hr/AppData/Local/Temp/msohtmlclip1/01/clip.htm"">; <link rel=File-List; href=""file:///C:/Users/hr/AppData/Local/Temp/msohtmlclip1/01/clip_filelist.xml"">; <style>; <!--table; 	{mso-displayed-decimal-separator:""\."";; 	mso-displayed-thousand-separator:""\,"";}; @page; 	{margin:.75in .7in .75in .7in;; 	mso-header-margin:.3in;; 	mso-footer-margin:.3in;}; tr; 	{mso-height-source:auto;}; col; 	{mso-width-source:auto;}; br; 	{mso-data-placement:same-cell;}; td; 	{padding-top:1px;; 	padding-right:1px;; 	padd",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/487#issuecomment-920245972:53,mask,mask,53,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/487#issuecomment-920245972,3,"['error', 'mask']","['error', 'mask']"
Availability,"VX2_EXTENSIONS; -- Performing Test HAVE_AVX2_EXTENSIONS - Failed; -- Performing Test HAVE_AVX_EXTENSIONS; -- Performing Test HAVE_AVX_EXTENSIONS - Failed; -- Performing Test HAVE_SSE4_2_EXTENSIONS; -- Performing Test HAVE_SSE4_2_EXTENSIONS - Success; -- Performing Test HAVE_SSE4_1_EXTENSIONS; -- Performing Test HAVE_SSE4_1_EXTENSIONS - Success; -- Performing Test HAVE_SSE3_EXTENSIONS; -- Performing Test HAVE_SSE3_EXTENSIONS - Success; -- Performing Test HAVE_SSE2_EXTENSIONS; -- Performing Test HAVE_SSE2_EXTENSIONS - Success; -- Performing Test HAVE_SSE_EXTENSIONS; -- Performing Test HAVE_SSE_EXTENSIONS - Success; -- Found SSE4.2 extensions, using flags: -msse4.2 -mfpmath=sse; -- Could NOT find GTest (missing: GTEST_LIBRARY GTEST_INCLUDE_DIR GTEST_MAIN_LIBRARY); -- Could NOT find GMock (missing: GMOCK_LIBRARY GMOCK_INCLUDE_DIR GMOCK_MAIN_LIBRARY); -- Compile blastp.sh to /Users/moorer/Downloads/mmseqs2/src/generatedfiles/blastp.sh.h; -- Compile blastpgp.sh to /Users/moorer/Downloads/mmseqs2/src/generatedfiles/blastpgp.sh.h; -- Compile blosum100.out to /Users/moorer/Downloads/mmseqs2/src/generatedfiles/blosum100.out.h; -- Compile blosum30.out to /Users/moorer/Downloads/mmseqs2/src/generatedfiles/blosum30.out.h; -- Compile blosum35.out to /Users/moorer/Downloads/mmseqs2/src/generatedfiles/blosum35.out.h; -- Compile blosum40.out to /Users/moorer/Downloads/mmseqs2/src/generatedfiles/blosum40.out.h; -- Compile blosum45.out to /Users/moorer/Downloads/mmseqs2/src/generatedfiles/blosum45.out.h; -- Compile blosum50.out to /Users/moorer/Downloads/mmseqs2/src/generatedfiles/blosum50.out.h; -- Compile blosum55.out to /Users/moorer/Downloads/mmseqs2/src/generatedfiles/blosum55.out.h; -- Compile blosum60.out to /Users/moorer/Downloads/mmseqs2/src/generatedfiles/blosum60.out.h; -- Compile blosum62.out to /Users/moorer/Downloads/mmseqs2/src/generatedfiles/blosum62.out.h; -- Compile blosum65.out to /Users/moorer/Downloads/mmseqs2/src/generatedfiles/blosum65.out.h; -- Compile blosum70",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/7#issuecomment-265028472:2349,Down,Downloads,2349,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/7#issuecomment-265028472,1,['Down'],['Downloads']
Availability,"Very glad to hear it is not me!. > Still quite puzzled where the error Alignment format is not supported! came from though. It may or may not be a coincidence that the same error was mentioned in #329, also in the context of --cluster-reassign",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-774110380:65,error,error,65,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-774110380,2,['error'],['error']
Availability,"Was this bug actually fixed, aside from the way you use the command? I still get the same error when using --cluster-reassign:. Input:; ` mmseqs cluster DB_in DB_clustered tmp/ --cluster-reassign --cluster-mode 1 --cov-mode 0` . Error:; `Found 100 new connections.; Reconstruct initial order; Alignment format is not supported! ] 0.00% 1 eta -; Alignment format is not supported!; Alignment format is not supported!; Error: Clustering step 2 died`",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/pull/329#issuecomment-771475381:90,error,error,90,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/pull/329#issuecomment-771475381,3,"['Error', 'error']","['Error', 'error']"
Availability,Was this issue ever resolved? I am getting the same error trying to build a database using blastdbcmd with NCBI nr.,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/383#issuecomment-1097182040:52,error,error,52,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/383#issuecomment-1097182040,1,['error'],['error']
Availability,We are in the process of preparing release 13. This will include all the recent changes in a stable release. It should be done in the next few days/this week. In the meantime you can use the static precompiled binaries downloadable from https://mmseqs.com/latest.,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/413#issuecomment-779220175:219,down,downloadable,219,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/413#issuecomment-779220175,1,['down'],['downloadable']
Availability,We currently do not support BLAST database input into MMseqs2. You would need to first generate a database with fasta or just use our `mmseqs database` command to download databases from a preset.,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/518#issuecomment-1027636235:163,down,download,163,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/518#issuecomment-1027636235,1,['down'],['download']
Availability,We did not change the format of the taxonomical database. It should be compatible. Also the error you show here happens while closing the database I think. Could you please provide the whole log? Does the error also occur with the newest version of mmseqs?,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/221#issuecomment-515720900:92,error,error,92,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/221#issuecomment-515720900,2,['error'],['error']
Availability,"We do not currently have a very easy way to limit memory. For the prefilter (main module for normal sequences searches) you can specify an appropriate `--split` value, that will then reduce the required memory to (I think there is an error in the user guide, have to double check, but this should be the correct formula):. ```; (7 byte * N * L) / #splits + 8 byte * 21^k; ```. We have two more very memory intense modules:`swapresults` and `kmermatcher`. These are very important for profile searches and linclust. Their splitting logic is however not exposed to the command line interface yet. The clustering module also can use a lot of memory, but if you stay with the default cascaded clustering that should not become an issue. A hack to limit how much memory `swapresults`, `kmermatcher` and `prefilter` will use, would be to manually edit `size_t Util::getTotalSystemMemory()` in `commons/Util.cpp`. We will discuss what we can do about this limiting memory issue internally and get back to you.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/58#issuecomment-359788065:234,error,error,234,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/58#issuecomment-359788065,2,['error'],['error']
Availability,"We do not have any code in mmseqs2 that writes this core dump file. This is a feature of Linux. Core dumps can be deactivated in Linux using ulimit -c 0 (see https://linux-audit.com/understand-and-configure-core-dumps-work-on-linux/). . Normally a core dump occurs because the software crashes. Did you see that MMseqs2 ended with a seg. fault? . If you want a set of stickers though (see https://twitter.com/thesteinegger/status/1201076220957315074), sent me your address via mail.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/257#issuecomment-565100808:338,fault,fault,338,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/257#issuecomment-565100808,1,['fault'],['fault']
Availability,"We downloaded all of the UniProt entries for viruses from the UniProt website, and clustered them with CD-Hit at with -c 0.99. Then we run mmseqs createdb on that file.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/387#issuecomment-795950334:3,down,downloaded,3,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/387#issuecomment-795950334,1,['down'],['downloaded']
Availability,"We give each sequence an internal identifier and cluster based on these. The accession coming from FASTA headers is only printed out when formatting plain text results (i.e. with `convertalis` or `createtsv`). So it doesn't affect the clustering, but makes downstream processing more difficult. I would recommend to add some suffix to each accession in the input FASTA with e.g. `awk`:; ```; awk '/^>/ { cnt++; $1=$1""_""cnt } { print; }' input.fasta > input_suffix.fasta; mmseqs easy-search input_suffix.fasta targetDB result.m8 tmp; ```; Or with current git MMseqs2 you can pipe the `awk` input directly to MMseqs2:; ```; awk '/^>/ { cnt++; $1=$1""_""cnt } { print; }' input.fasta | mmseqs easy-search stdin targetDB result.m8 tmp; ```",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/270#issuecomment-582873060:257,down,downstream,257,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/270#issuecomment-582873060,1,['down'],['downstream']
Availability,"We have the `filterresult` module since recently, which implements the HHblits alignment filtering algorithm, for slimming down MSAs by pairwise alignments. Here you want the `--diff` parameter to keep only the N most diverse sequences. However you should stick to the non `easy-` modules to use this.; E.g. something like:. ```; mmseqs createdb FILE db; mmseqs cluster db clu tmp ...; mmseqs filterresult db db clu clu_filt --diff 100; mmseqs createseqfiledb db clu_filt fasDB; mmseqs apply fasDB mafftDB -- mafft ...; ```. (This is assuming you are clustering proteins, not quite sure if `filterresult` works for nucleotide sequences).",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/456#issuecomment-849693129:123,down,down,123,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/456#issuecomment-849693129,1,['down'],['down']
Availability,"We introduced the module after the 11th release. It will be part of the next one. You can either use the non ""easy"" workflow, i.e. something like:; ```; mmseqs createdb query.fasta qdb; mmseqs createdb target.fasta tdb; mmseqs rbh qdb tdb res tmp; mmseqs convertalis qdb tdb res res.m8; ```. or you can either download precompiled binaries from the latest git commit at https://mmseqs.com/latest or build the code from source.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/332#issuecomment-656621988:310,down,download,310,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/332#issuecomment-656621988,1,['down'],['download']
Availability,We now provide containers in the github container registry here:; https://github.com/soedinglab/MMseqs2/pkgs/container/mmseqs2. Maybe these work for you. Alternatively I would recommend to just download the statically compiled binaries into the Docker image (see https://github.com/soedinglab/MMseqs2-App/blob/master/Dockerfile.backend ).,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/605#issuecomment-1246367808:194,down,download,194,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/605#issuecomment-1246367808,1,['down'],['download']
Availability,"We recently made cascaded the default, since it performs better and has fewer potential runtime pitfalls. Also please note that switch parameters such as `--single-step-clustering` do not take an argument.; With `--single-step-clustering false` you would run a single step clustering. I'll update the documentation. Sorry about that!. Edit: The missing version number probably means, that you downloaded the ZIP instead of checking out the repository. The compile script cannot figure out the git commit that was used, without the .git folder.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/65#issuecomment-367299944:393,down,downloaded,393,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/65#issuecomment-367299944,1,['down'],['downloaded']
Availability,"We still never implemented a fix for this, the issue is that for very small sets and very low sensitivity settings you can run into the issue that no similar k-mers can be generated given the (very high) similarity threshold. The error doesn't happen once sensitivity or database size increases anymore so it wasn't really a priority to fix. You can get around the issue with a somewhat ugly hack of using the old single step clustering approach instead of the cascaded clustering:. ```; mmseqs easy-cluster --single-step-clustering -s 6 (or higher) [other clustering params] ...; ```. This will become very slow for larger sets but shouldn't matter for small sets.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/149#issuecomment-1781196016:230,error,error,230,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/149#issuecomment-1781196016,1,['error'],['error']
Availability,"We suppress hits like these likely with our false positive suppression mechanisms. You can try disabling masking and compositional bias correction with `--mask 0 --comp-bias-corr 0`. That might help with finding these hits. Additionally, you can also disable E-values as this would not really be a homology search anymore with `-e inf`.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/828#issuecomment-2022006658:105,mask,masking,105,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/828#issuecomment-2022006658,2,['mask'],"['mask', 'masking']"
Availability,"Well, we probably can not call the ""align"" module since it would ""ruin"" the sequence-profile alignments for remote query-target pairs indeed. I wonder if re-scoring using the profile from the last iteration could work. Is it possible to re-score all previously identified targets against the profile from the last iteration? That could guarantee comparable significance metrics across the entire hit list. I have checked how psi-blast is handling this case: it seems to re-score all hits within each iteration. As a ""bypass"" method, I am planning to use the ""nident/qlen"" (number of identical aligned residues divided by query sequence length) ratio as a globally valid measure of alignment goodness, allowing ranking hits regardless to iteration, that is essential for our downstream work.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/350#issuecomment-689453353:774,down,downstream,774,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/350#issuecomment-689453353,1,['down'],['downstream']
Availability,"What i did was (1) Downloaded gtdb_genomes_reps.tar.gz and then combined all the fa files into one fa file. (2) downloaded ar53_taxonomy.tsv and bac120_taxonomy.tsv, also combined them into one tsv. (3) mmseqs createdb combined.fa gtdb_seqs (4) mmseqs createtaxdb gtdb_seqs tmp --tax-mapping-file combined.tsv --threads 50. There was no error showed in the whole process. However, when I tried to use ""mmseqs taxonomy"" function to seach one contig.fa file, all the contigs were unclassified. Could you please advise where I did wrongly?. Thanks a lot",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/884#issuecomment-2322819211:19,Down,Downloaded,19,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/884#issuecomment-2322819211,3,"['Down', 'down', 'error']","['Downloaded', 'downloaded', 'error']"
Availability,What is the error message? . `Could not allocate foundDiagonals memory in QueryMatcher` should only be possible to happen during the prefiltering stage not the alignment stage.,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/147#issuecomment-452242908:12,error,error,12,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/147#issuecomment-452242908,1,['error'],['error']
Availability,"What parameters did you use (the log doesn't show the call to `mmseqs (easy-)cluster`)? What MMseqs2 version/commit is this (please compile from a git checkout if you compile from source, not by downloading the tar.gz/zip)?. It seems like you are using the single step clustering, that should be much slower than the cascaded clustering.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/397#issuecomment-765448075:195,down,downloading,195,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/397#issuecomment-765448075,1,['down'],['downloading']
Availability,"What we do to construct the GTDB in our `databases` workflow is to download the tar files containing the FASTA files. You can do the same, pack everything into one tar file then call `tar2db` and then `createdb` on the DB created from the previous step.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/798#issuecomment-1888447373:67,down,download,67,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/798#issuecomment-1888447373,1,['down'],['download']
Availability,"When I got to run this job using mpirun I got this error: . [cpu-23-1:104192] *** Process received signal ***; [cpu-23-1:104192] Signal: Bus error (7); [cpu-23-1:104192] Signal code: Non-existant physical address (2); [cpu-23-1:104192] Failing at address: 0x148bd2954aee; [cpu-23-1:104230] *** Process received signal ***; [cpu-23-1:104230] Signal: Bus error (7); [cpu-23-1:104230] Signal code: Non-existant physical address (2); [cpu-23-1:104230] Failing at address: 0x14758c03a9e9; [cpu-23-1:104233] *** Process received signal ***; [cpu-23-1:104233] Signal: Bus error (7); [cpu-23-1:104233] Signal code: Non-existant physical address (2); [cpu-23-1:104233] Failing at address: 0x151209f6d9c4; --------------------------------------------------------------------------; Primary job terminated normally, but 1 process returned; a non-zero exit code. Per user-direction, the job has been aborted.; --------------------------------------------------------------------------; --------------------------------------------------------------------------; mpirun noticed that process rank 89 with PID 0 on node cpu-23-1 exited on signal 7 (Bus error).; --------------------------------------------------------------------------. And this one a couple more times:. --------------------------------------------------------------------------; Primary job terminated normally, but 1 process returned; a non-zero exit code. Per user-direction, the job has been aborted.; --------------------------------------------------------------------------; slurmstepd: error: *** JOB 1369194 ON cpu-25-49 CANCELLED AT 2021-05-17T19:07:03 DUE TO NODE FAILURE, SEE SLURMCTLD LOG FOR DETAILS ***; --------------------------------------------------------------------------; mpirun noticed that process rank 65 with PID 0 on node cpu-25-49 exited on signal 9 (Killed).; --------------------------------------------------------------------------. Now I'm trying to run the job using the script you also include in your manual . ",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/455#issuecomment-843668604:51,error,error,51,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/455#issuecomment-843668604,4,['error'],['error']
Availability,"Where you able to classify just a single sequence against our gtdb database? Maybe the internal structure of names, nodes and mapping has some error. If you could provide a small subset than I could try to figure out what goes wrong. . If you want a set of stickers though (see https://twitter.com/thesteinegger/status/1201076220957315074), sent me your address via mail.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/256#issuecomment-565122021:143,error,error,143,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/256#issuecomment-565122021,1,['error'],['error']
Availability,Will the conversion error out if there are missing taxonomic levels and the taxids are alphanumeric instead of numeric?,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/779#issuecomment-1819551348:20,error,error,20,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/779#issuecomment-1819551348,1,['error'],['error']
Availability,"With other clustering modes, I run into the same errors as mentioned earlier here:; #374 . Along with the other issues I am running into, I am under the strong impression that the small size of my sequences (7-20 AA long) Is the problem. Is MMseqs2 suited to handle such data?",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-772905780:49,error,errors,49,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-772905780,1,['error'],['errors']
Availability,"With the current version?. ``` mmseqs createindex DF_PP_full100.fa.fixed.mmseqsdb tmp; createindex DF_PP_full100.fa.fixed.mmseqsdb tmp . MMseqs Version: 11.e1a1c. createindex DF_PP_full100.fa.fixed.mmseqsdb tmp . MMseqs Version: 11.e1a1c. indexdb DF_PP_full100.fa.fixed.mmseqsdb DF_PP_full100.fa.fixed.mmseqsdb --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -k 0 --alph-size 21 --comp-bias-corr 1 --max-seq-len 65535 --max-seqs 300 --mask 1 --mask-lower-case 0 --spaced-kmer-mode 1 -s 7.5 --k-score 0 --check-compatible 0 --search-type 0 --split 0 --split-memory-limit 0 -v 3 --threads 12 . Estimated memory consumption: 8G; Write VERSION (0); Write META (1); Write SCOREMATRIX3MER (4); Write SCOREMATRIX2MER (3); Write SCOREMATRIXNAME (2); Write SPACEDPATTERN (23); Write DBR1INDEX (5); Write DBR1DATA (6); Write HDR1INDEX (18); Write HDR1DATA (19); Write GENERATOR (22); Index table: counting k-mers; [=================================================================] 100.00% 1.85M 1m 9s 45ms ; Index table: Masked residues: 9292781; Index table: fill; [=================================================================] 100.00% 1.85M 41s 694ms ; Index statistics; Entries: 932473123; DB size: 5823 MB ; Avg k-mer size: 14.569893 ; Top 10 k-mers ; RDWGRP 39946 ; CFVLGR 32839 ; CVRNGS 31368 ; ILTECV 26854 ; APSDIR 20240 ; ESCCGT 19857 ; DGAGDT 18909 ; YQAGTT 18726 ; SSCDAW 18697 ; PNEGGV 18425 ; Write ENTRIES (9) ; Write ENTRIESOFFSETS (10) ; Write SEQINDEXDATASIZE (15) ; Write SEQINDEXSEQOFFSET (16) ; Write SEQINDEXDATA (14) ; Write ENTRIESNUM (12) ; Write SEQCOUNT (13) ; Time for merging to DF_PP_full100.fa.fixed.mmseqsdb.idx: 0h 0m 0s 0ms ```",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/277#issuecomment-590960979:436,mask,mask,436,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/277#issuecomment-590960979,3,"['Mask', 'mask']","['Masked', 'mask', 'mask-lower-case']"
Availability,"With the database you sent, by sampling 100 sequences at random from my gene catalog i cannot obtain the taxonomy. . If I do `mmseqs taxonomy gtdb_54kDB gtdb_54kDB /tmp/tax /tmp/tmp ` it doesn't throw an error at all. . But if I take this [subsetDB.zip](https://github.com/soedinglab/MMseqs2/files/4019604/subsetDB.zip) of my query FASTA and run a taxonomic analysis with:. ```; mmseqs taxonomy --search-type 1 --threads 2 \; --lca-ranks species:genus:family:order:class:phylum:superkingdom \; subsetDB \; gtdb_54kDB taxresdb /tmp/; ```. I get a `terminate called recursively` error. . Can you run it properly? Sorry for the waste of time. . For the DB building I did the typical act of not saving properly the steps. I try to replicate it tomorrow and I send it right away. But basically I had obtained the names.dmp and nodes.dmp and from the main fasta having all the predicted coding sequences with the names as `>{orf}_{genomeid}` I generated the mapping file.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/256#issuecomment-570605791:204,error,error,204,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/256#issuecomment-570605791,2,['error'],['error']
Availability,With the new version the error is fixed. Thanks,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/470#issuecomment-881273776:25,error,error,25,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/470#issuecomment-881273776,1,['error'],['error']
Availability,"Without the CMakeLists patch, I get the following on aarch64:; cc: error: the clang compiler does not support '-march=native'; At any rate, when restricting an upstream build system, it's generally better to use a blunt-force patch. A more finessed approach like -DMMSEQS_ARCH can be fragile. Suppose you decide to change the name of the variable between now and the next release. This patch is then silently rendered inert. If I overlook the change, which is easy to do, the builds introduce agressive optimizations into the binary package, causing illegal instruction dumps for users with lower-end hardware than the build cluster. The static patch, on the otherhand, will break on a variable name chnage so I'll be alerted that it needs attention. For wget and curl, are you referring to createtaxdb.sh and databases.sh? Are these supposed to be installed? The cmake build system only installs mmseqs and bash-conmpletion.sh. Rather than add another dependency, I would add FreeBSD's native fetch command as the final fallback option as follows:. ```; --- data/workflow/databases.sh.orig 2021-06-25 01:34:08 UTC; +++ data/workflow/databases.sh; @@ -27,6 +27,8 @@ STRATEGY=""""; if hasCommand aria2c; then STRATEGY=""$STRATEGY ARIA""; fi; if hasCommand curl; then STRATEGY=""$STRATEGY CURL""; fi; if hasCommand wget; then STRATEGY=""$STRATEGY WGET""; fi; +# Part of FreeBSD base, need not be installed separately; +if hasCommand fetch; then STRATEGY=""$STRATEGY FETCH""; fi; if [ ""$STRATEGY"" = """" ]; then; fail ""No download tool found in PATH. Please install aria2c, curl or wget.""; fi; @@ -47,6 +49,9 @@ downloadFile() {; ;;; WGET); wget -O ""$OUTPUT"" ""$URL"" && return 0; + ;;; + FETCH); + fetch -o ""$OUTPUT"" ""$URL"" && return 0; ;;; esac; done; ```; Most bioinformaticians will have curl and/or wget installed anyway (both are included in the biostar-tools metapoirt), so it won't come into play, but we try to minimize unnecessary requirements. I haven't been able to find a specify CPU feature requirement f",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/460#issuecomment-868449555:67,error,error,67,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/460#issuecomment-868449555,1,['error'],['error']
Availability,"Yeah, I think the base names helps. It would also be helpful if the help doc for each subcommand listed which files are needed for input (eg., *.index and *.dbtype) and which files will be written. . At times, I found out the hard way that a certain subcommand doesn't create all files for the next step in the mmseqs workflow that I'm running, so I have to figure out how to create them after getting the error message stating that I need them (eg., Issue #146)",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/155#issuecomment-463363392:406,error,error,406,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/155#issuecomment-463363392,1,['error'],['error']
Availability,"Yeah, the first split is ~2x larger than the rest. `sysctl` is not present on the cluster nodes. . I tried using 16 splits & 8 mmseq-search threads, and that cut down on the memory requirement from 296G to *just* 232G",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/338#issuecomment-740568050:162,down,down,162,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/338#issuecomment-740568050,1,['down'],['down']
Availability,"Yes they should produce it. Only the modules that create output for downstream analysis do not `createtsv`, `convertalis`, `convert2fasta`, `result2flat`, `taxonomyreport`",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/292#issuecomment-604527513:68,down,downstream,68,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/292#issuecomment-604527513,1,['down'],['downstream']
Availability,"Yes to my knowledge it was a fresh conda enviroment, I will try again to make sure I have the suggested version. Thank you very much for the availability!",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/681#issuecomment-1471615417:141,avail,availability,141,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/681#issuecomment-1471615417,1,['avail'],['availability']
Availability,"Yes, I've tried recompiling several times as well, and receive the same error after successful compilation. When running the command you gave, I get the following error:. Command: ; ```; ~/data/dir/mmseqs2/build-mpi/bin/mmseqs linclust tmp2/6664721939282577716/input tmp2/6664721939282577716/clu_tmp/1194185237556116514/clu_redundancy tmp2/6664721939282577716/clu_tmp/1194185237556116514/linclust --cluster-mode 0 --max-iterations 1000 --similarity-type 2 --threads 24 --compressed 0 -v 3 --cluster-weight-threshold 0.9 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' -a 0 --alignment-mode 3 --alignment-output-mode 0 --wrapped-scoring 0 -e 0.001 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 1 --comp-bias-corr-scale 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --corr-score-weight 0 --gap-open aa:11,nucl:5 --gap-extend aa:1,nucl:2 --zdrop 40 --alph-size aa:13,nucl:5 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-prob 0.9 --mask-lower-case 0 -k 0 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --rescore-mode 0 --filter-hits 0 --sort-results 0 --remove-tmp-files 1 --force-reuse 0; ```. Output:; ```; linclust tmp2/6664721939282577716/input tmp2/6664721939282577716/clu_tmp/1194185237556116514/clu_redundancy tmp2/6664721939282577716/clu_tmp/1194185237556116514/linclust --cluster-mode 0 --max-iterations 1000 --similarity-type 2 --threads 24 --compressed 0 -v 3 --cluster-weight-threshold 0.9 --sub-mat aa:blosum62.out,nucl:nucleotide.out -a 0 --alignment-mode 3 --alignment-output-mode 0 --wrapped-scoring 0 -e 0.001 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-le",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/679#issuecomment-1461610364:72,error,error,72,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/679#issuecomment-1461610364,2,['error'],['error']
Availability,"Yes, it doesn't only download a `pdb` (with all its including files), but also a `pdb_seq`. You want to use the later, as that contains all PDB entries, not only the cluster representatives.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/821#issuecomment-1999763062:21,down,download,21,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/821#issuecomment-1999763062,1,['down'],['download']
Availability,"Yes, the feature is only available in the latest release 14. Did you create a fresh conda environment? Maybe something else was holding back MMseqs2 to the previous release.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/681#issuecomment-1471613335:25,avail,available,25,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/681#issuecomment-1471613335,1,['avail'],['available']
Availability,"Yes, you can point `createtaxdb` to your existing database with `--ncbi-tax-dump` and `--tax-mapping-file` as described above. In fact that's how the `databases` commands work, they download sequences, create a db with `createdb` and then manually none, one or both of the inputs for `createtaxdb` and call it.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/779#issuecomment-1869249604:182,down,download,182,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/779#issuecomment-1869249604,1,['down'],['download']
Availability,"Yes. This is the gdb output using Debug compiling. ```; Thread 156 ""mmseqs"" received signal SIGSEGV, Segmentation fault.; [Switching to Thread 0x7ffd0fff7700 (LWP 230283)]; 0x00005555556f98a4 in DistanceCalculator::computeSubstitutionDistance<char> (seq1=0x7ff249252000 ""\037\213\b\b\217-h["",; seq2=0x7ff249252000 ""\037\213\b\b\217-h["", length=295, subMat=0x555555d7a8a0, globalAlignment=false); at /export/premium/software/MMseqs2/src/alignment/DistanceCalculator.h:29; 29 int curr = subMat[static_cast<int>(seq1[pos])][static_cast<int>(seq2[pos])];; (gdb) bt; #0 0x00005555556f98a4 in DistanceCalculator::computeSubstitutionDistance<char> (seq1=0x7ff249252000 ""\037\213\b\b\217-h["",; seq2=0x7ff249252000 ""\037\213\b\b\217-h["", length=295, subMat=0x555555d7a8a0, globalAlignment=false); at /export/premium/software/MMseqs2/src/alignment/DistanceCalculator.h:29; #1 0x00005555556f85d3 in DistanceCalculator::ungappedAlignmentByDiagonal<char> (querySeq=0x7ff249252000 ""\037\213\b\b\217-h["", querySeqLen=295,; dbSeq=0x7ff249252000 ""\037\213\b\b\217-h["", dbSeqLen=295, diagonal=0, subMat=0x555555d7a8a0, alnMode=1); at /export/premium/software/MMseqs2/src/alignment/DistanceCalculator.h:130; #2 0x00005555556f783c in DistanceCalculator::computeUngappedAlignment<char> (querySeq=0x7ff249252000 ""\037\213\b\b\217-h["", querySeqLen=295,; dbSeq=0x7ff249252000 ""\037\213\b\b\217-h["", dbSeqLen=295, diagonal=0, subMat=0x555555d7a8a0, alnMode=1); at /export/premium/software/MMseqs2/src/alignment/DistanceCalculator.h:107; #3 0x00005555556f311b in doRescorediagonal(Parameters&, DBWriter&, DBReader<unsigned int>&, unsigned long, unsigned long) [clone ._omp_fn.0] (); at /export/premium/software/MMseqs2/src/alignment/rescorediagonal.cpp:222; #4 0x00007ffff727895e in ?? () from /usr/lib/x86_64-linux-gnu/libgomp.so.1; #5 0x00007ffff6e326db in start_thread (arg=0x7ffd0fff7700) at pthread_create.c:463; #6 0x00007ffff6b5b88f in clone () at ../sysdeps/unix/sysv/linux/x86_64/clone.S:95; (gdb); ```",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/323#issuecomment-649899862:114,fault,fault,114,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/323#issuecomment-649899862,1,['fault'],['fault']
Availability,"You are right that it might be a bit fragile. . Exactly, these two workflows need to have something to download files. The workflows are automatically compiled into the binary and executed when the respective workflow is called (that's what either the xxd or perl build time dependency is for). Fetch sounds good, I'll try that out when I get a CirrusCI with FreeBSD going. AVX2 is a bit IIRC ~30% faster than SSE4.1, so it's not super important. The only problem is if no SIMD flags are specified at all. Then we fall back to the scalar intrinsic implementations of SIMDe which are a lot slower (don't have an exact number, but it was a few factors slower).",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/460#issuecomment-868454512:103,down,download,103,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/460#issuecomment-868454512,1,['down'],['download']
Availability,You can download precompiled binaries for either the latest git commit at https://mmseqs.com/latest/ or for any previous git commit (that successfully compiled) at `mmseqs.com/archive/GIT_COMMIT`. For the commit you want the first commit that compiled after it is mmseqs.com/archive/03f0bcca33a6af3135082957f1cebf8baff7cc61. If you compile from source please follow the instructions in the wiki:; https://github.com/soedinglab/MMseqs2/wiki#compile-from-source-under-linux. ```; cd MMseqs2 # Go into the MMseqs2 directory after extraction; mkdir build # Create a build directory; cd build; cmake -DCMAKE_BUILD_TYPE=RELEASE -DCMAKE_INSTALL_PREFIX=. .. # Configure the build with cmake; make -j16; make install; Setting the PATH; export PATH=$HOME/MMseqs2/build/bin:$PATH,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/886#issuecomment-2342446849:8,down,download,8,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/886#issuecomment-2342446849,1,['down'],['download']
Availability,You can download precompiled binaries from: https://mmseqs.com/latest/. you don’t need to compile them yourself,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/845#issuecomment-2122668422:8,down,download,8,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/845#issuecomment-2122668422,1,['down'],['download']
Availability,You can download the PDB100 through foldseek. That one includes taxonomy information and is compatible with MMseqs2.,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/821#issuecomment-1995075130:8,down,download,8,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/821#issuecomment-1995075130,1,['down'],['download']
Availability,You can download the precompiled static binary that contains the fix (and latest git changes) at https://mmseqs.com/latest in about an hour when all tests pass through successfully.,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/586#issuecomment-1208964068:8,down,download,8,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/586#issuecomment-1208964068,1,['down'],['download']
Availability,"You can set the `MMSEQS_FORCE_MERGE` environment variable (e.g. `export MMSEQS_FORCE_MERGE=1`). The split databases are, however, an IO optimization and not related to memory. Merging after every module invocation can slow MMseqs2 down considerably.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/644#issuecomment-1336320279:231,down,down,231,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/644#issuecomment-1336320279,1,['down'],['down']
Availability,"You can try the new parameter `--prefilter-mode 1` (it might be only available in git mmseqs, you can download precompiled binaries from the last git at https://mmseqs.com/latest). This runs a different prefilter algorithm, that does not need a large amount of RAM, however it relies much more on CPU power. It's much slower for many queries, but might win out for very low number of queries. The sensitivity of this algorithm should beat the standard k-mer based MMseqs2 prefilter at `-s 7.5` slightly. You should be able to run the search command exactly the same way, just replace `-s` with `--prefilter-mode 1`:; ```; mmseqs easy-search query.fasta targetDB_split/targetDB_split_0_32 results/0.m8 tmp --prefilter-mode 1; ```",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/805#issuecomment-1903311302:69,avail,available,69,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/805#issuecomment-1903311302,2,"['avail', 'down']","['available', 'download']"
Availability,"You can use the `filtertaxseqdb` command (https://github.com/soedinglab/MMseqs2/wiki#filtering-a-seqtaxdb) to build a subset of the Uniprot that only contains bacterial sequences. For bacteria you would run (after `createdb/databases`):; ```; mmseqs filtertaxseqdb uniprot uniprot_bak --taxon-list 2; ```. I am also trying to integrate taxonomy information into the NR reliably. Once that's working you would have an even larger resource. . (Btw in the `filtertaxseqdb` module of MMseqs2 release 11 seperating taxon ids by `,` does something weird. I would recommend to use the latest git MMseqs2, statically compiled binaries at https://mmseqs.com/latest).",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/341#issuecomment-669600074:369,reliab,reliably,369,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/341#issuecomment-669600074,1,['reliab'],['reliably']
Availability,"You definitely need more RAM. Half a billion sequences will require 24GB for reading in the database alone. Linclust, the first clustering step, will not be a limiting factor, but the steps afterwards will be. Depending on how well linclust is able to reduce your dataset, the MMseqs2 prefilter will require up to 500GB RAM for optimal speed, though it will be able to run with much less at a slightly reduced speed. If you only require linclust quality of clustering (down to 50% sequence identity), then 32GB RAM might be enough. For clustering such a large number of sequences with the full MMseqs2 clustering workflow (<50% sequence identity) we recommend at least 64GB to 128GB RAM compute nodes.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/157#issuecomment-459402647:469,down,down,469,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/157#issuecomment-459402647,1,['down'],['down']
Availability,You need to create symlinks in the databases folder:. ```; ln -s uniref30_2202_db_mapping uniref30_2202_db.idx_mapping; ln -s uniref30_2202_db_taxonomy uniref30_2202_db.idx_taxonomy; ```. That is missing in the setup script. My fault.,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/690#issuecomment-1498673943:228,fault,fault,228,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/690#issuecomment-1498673943,1,['fault'],['fault']
Availability,You should be able to just call:; ```; mmseqs databases GTDB gtdb tmp; ```. And it will download and setup the latest release for you.,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/514#issuecomment-990818180:88,down,download,88,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/514#issuecomment-990818180,1,['down'],['download']
Availability,"You want the best hit even at the risk of a false positive best hit?; For that you should add a few more parameters:; ```; mmseqs search ... -e 100000 --comp-bias-corr 0 --mask 0; ```. At this point you might want to use coverage (`-c`) or `--min-aln-len` to filter the results, since you will also get super short hits.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/281#issuecomment-591741005:172,mask,mask,172,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/281#issuecomment-591741005,1,['mask'],['mask']
Availability,"Your initial idea is sound. The only problem is that `extractalignedregion` does not really support it since it was built for one very specific purpose and should be generalized. I started working on that though I don't quite have time to finish it up. I have an idea for a hack though:; ```; mmseqs prefixid aln aln.tsv --tsv; awk '{ $1 = NR++; print $0; }' aln.tsv > aln_new.tsv; mmseqs tsv2db aln_new.tsv aln_new --output-dbtype 5; mmseqs extractalignedregion query target aln_new target_new --threads 1; awk '{ print $2; }' aln.tsv > target_ids.tsv; mmseqs createsubdb target_ids.tsv target_h target_new_h; sort -k2,2 target_new_h.index | awk '{ $1 = NR++; print $0; }' > target_new_h.index_new; mv -f target_new_h.index_new target_new_h.index; mmseqs cluster target_new clu tmp; ```; I wrote this down without testing, but this should create a valid domain sequence database from the alignment result. If you are interested in actually fixing the `extractalignedregion` module in the MMseqs2 codebase then I could also try guiding you through that.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/210#issuecomment-499599504:802,down,down,802,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/210#issuecomment-499599504,2,['down'],['down']
Availability,"Your initial run did not work, because it was the wrong sequence database passed to `createtsv`. We should probably give a better error message though.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/103#issuecomment-404855346:130,error,error,130,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/103#issuecomment-404855346,1,['error'],['error']
Availability,"Your kernel/libc versions are very old. I am surprised that conda runs at all. These error messages are thrown by MMseqs2 dependencies that are provided by conda-forge (libgomp/libstdc++), they require a newer glibc. If you compile MMseqs2 on your own from source it might still work, no guarantees though.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/461#issuecomment-867849511:85,error,error,85,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/461#issuecomment-867849511,1,['error'],['error']
Availability,"[mmseqslinux.zip](https://github.com/soedinglab/MMseqs2/files/3623807/mmseqslinux.zip). [mmseqwin.zip](https://github.com/soedinglab/MMseqs2/files/3623810/mmseqwin.zip). Thanks for looking into this -- these files should reproduce the error but may be machine/environment dependent. We have had the same error on three PCs (~5-8 years old) but had success today on MacOS on a < 1 year old computer. I don't know if that will help diagnose the issue, but the files should contain the relevant inputs to reproduce the issue, from two different operating systems. Also attaching the stack dump that cygwin provided if it proves to be useful:; [mmseqsstackdumpwindows.zip](https://github.com/soedinglab/MMseqs2/files/3623831/mmseqsstackdumpwindows.zip)",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/229#issuecomment-532444906:235,error,error,235,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/229#issuecomment-532444906,2,['error'],['error']
Availability,"_0 /ebio/abt3_scratch/nyoungblut/LLCDS_126702996474/mmseqs_tax/06/TMP/14652724320229658153/tmp_hsp1/11598483508011826746/profile_0 --sub-mat nucl:nucleotide.out,aa:blosum62.out -e 1e-05 --mask-profile 1 --e-profile 0.1 --comp-bias-corr 1 --wg 0 --allow-deletion 0 --filter-msa 1 --max-seq-id 0.9 --qid 0 --qsc -20 --cov 0 --diff 1000 --pca 0 --pcb 1.5 --db-load-mode 0 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --threads 8 --compressed 0 -v 3. Index version: 16; Generated by: 13.45111; ScoreMatrix: VTML80.out; Query database size: 1075 type: Aminoacid; Target database size: 41195879 type: Aminoacid; [========================================Segmentation fault; Error: Create profile died; Error: First search died; ```. Note that sometimes when I re-run the command, I instead get the error:. ```; Index version: 16; Generated by: 13.45111; ScoreMatrix: VTML80.out; Query database size: 1075 type: Aminoacid; Target database size: 41195879 type: Aminoacid; [=======================================================]; free(): invalid next size (normal); Aborted; Error: Create profile died; Error: First search died; ```. System memory should not be the cause; I've got ~800 Gb free. . Maybe I'm missing a ""hidden"" input file (ie., one of the files associated with the main input files, which are generally no mentioned in any of the docs). The input files that are present:. * /ebio/abt3_scratch/nyoungblut/LLCDS_126702996474/mmseqs_tax_query/06/seqs_db; * /ebio/abt3_scratch/nyoungblut/LLCDS_126702996474/mmseqs_tax_query/06/seqs_db.dbtype; * /ebio/abt3_scratch/nyoungblut/LLCDS_126702996474/mmseqs_tax_query/06/seqs_db.index; * /ebio/abt3_scratch/nyoungblut/LLCDS_126702996474/mmseqs_tax_query/06/seqs_db_h; * /ebio/abt3_scratch/nyoungblut/LLCDS_126702996474/mmseqs_tax_query/06/seqs_db_h.dbtype; * /ebio/abt3_scratch/nyoungblut/LLCDS_126702996474/mmseqs_tax_query/06/seqs_db_h.index; * /ebio/abt3_scratch/nyoungblut/LLCDS_126702996474/mmseqs_tax_target/mmseqs_tax.db; * /ebio/abt3_scratch",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/432#issuecomment-813242194:18071,Error,Error,18071,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/432#issuecomment-813242194,2,['Error'],['Error']
Availability,_1 --sub-mat blosum62.out -k 0 --k-score 2147483647 --alph-size 21 --max-seq-len 32000 --max-seqs 100000 --offset-result 0 --split 0 --split-mode 2 --comp-bias-corr 1 --diag-score 1 --min-ungapped-score 15 --spaced-kmer-mode 1 --threads 8 -v 3 -s 1 . MMseqs Version: c5615b34c686b1cf0f200670be8bc6cba76d90f9; Sub Matrix blosum62.out; Sensitivity 1; K-mer size 0; K-score 2147483647; Alphabet size 21; Max. sequence length 32000; Profile false; Max. results per query 100000; Offset result 0; Split DB 0; Split mode 2; Compositional bias 1; Diagonal Scoring 1; Minimum Diagonal score 15; Include identical Seq. Id. false; Spaced Kmer 1; Threads 8; Verbosity 3. Initialising data structures...; Using 8 threads. Use index uniref90.mms.sk7; Index version: 774909490; KmerSize: 7; AlphabetSize: 21; Skip: 0; Split: 1; Type: 1; Spaced: 1; Query database: subseq_Mms.1(size=32); Target database: uniref90.mms(size=44448995); Use kmer size 7 and split 1 using split mode 0; Needed memory (139010009596 byte) of total memory (67278442496 byte); WARNING: MMseqs processes needs more main memory than available.Increase the size of --split or set it to 0 to automatic optimize target database split.; WARNING: Split has to be computed by createindex if precomputed index is used.; Substitution matrices...; Time for init: 0 h 0 m 12s. Process prefiltering step 0 of 1. tmp/pref_1_tmp_0.0: File exists; Program call:; subseq_Mms.1 uniref90.mms tmp/pref_1 tmp/aln_1 --sub-mat blosum62.out -a --alignment-mode 0 -e 1e-10 --min-seq-id 0 -c 0 --max-seq-len 32000 --max-seqs 100000 --comp-bias-corr 1 --max-rejected 2147483647 --threads 8 -v 3 . MMseqs Version: c5615b34c686b1cf0f200670be8bc6cba76d90f9; Sub Matrix blosum62.out; Add backtrace true; Alignment mode 0; E-value threshold 1e-10; Seq. Id Threshold 0; Coverage threshold 0; Max. sequence length 32000; Max. results per query 100000; Compositional bias 1; Profile false; Realign hit false; Max Reject 2147483647; Detect fragments false; Include identical S,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/3#issuecomment-251733349:3538,avail,available,3538,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/3#issuecomment-251733349,1,['avail'],['available']
Availability,"_part-14/8093924424180559474/round2 --sub-mat blosum62.out -a 0 --alignment-mode 2 -e 1e-05 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 1 --realign 0 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --gap-open 11 --gap-extend 1 --threads 24 --compressed 0 -v 3. Init data structures...; Touch data file /ebio/abt3_projects/databases_no-backup/uniclust/uniclust50/mmseqs2_8.fac81/uniclust50_2018_08_consensus ... Done.; Compute score and coverage.; Query database type: Aminoacid; Target database type: Aminoacid; Calculation of Smith-Waterman alignments.; ...Time for merging files: 0h 0m 0s 78ms. All sequences processed. 2760008 alignments calculated.; 2676553 sequence pairs passed the thresholds (0.969763 of overall calculated).; 84.362 hits per query sequence.; Time for processing: 0h 0m 15s 472ms; Program call:; mergedbs tmp_part-14/8093924424180559474/top1 tmp_part-14/8093924424180559474/merged tmp_part-14/8093924424180559474/top1 tmp_part-14/8093924424180559474/round2. Merging the results to tmp_part-14/8093924424180559474/merged; Done; Time for merging files: 0h 0m 0s 11ms; Time for processing: 0h 0m 0s 354ms; Program call:; filterdb tmp_part-14/8093924424180559474/merged tmp_part-14/8093924424180559474/2b_ali --beats-first --filter-column 4 --comparison-operator le. Filter by numerical comparison to first row.; ....Time for merging files: 0h 0m 0s 229ms; Time for processing: 0h 0m 0s 732ms; Program call:; lca /ebio/abt3_projects/databases_no-backup/uniclust/uniclust50/mmseqs2_8.fac81/uniclust50_2018_08_consensus tmp_part-14/8093924424180559474/2b_ali clusters_rep-seqs.part-14_tax_db --compressed 0 --lca-ranks kingdom:phylum:class:order:family:genus:species --blacklist 12908,28384 --threads 24 -v 3. Loading NCBI taxonomy...; Computing LCA...; Segmentation fault; Error: Lca died; ```. I'm going to try this again with Release 8.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/221#issuecomment-516032943:17914,fault,fault,17914,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/221#issuecomment-516032943,2,"['Error', 'fault']","['Error', 'fault']"
Availability,"_step1: 0h 0m 0s 0ms; Time for processing: 0h 0m 0s 2ms; prefilter tmp//10798751672030653963/input_step1 tmp//10798751672030653963/input_step1 tmp//10798751672030653963/pref_step1 --sub-mat nucl:nucleotide.out,aa:blosum62.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -s 3.5 -k 0 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 65535 --max-seqs 20 --split 0 --split-mode 2 --split-memory-limit 0 -c 0.8 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 16 --compressed 0 -v 3. Query database size: 239 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 239 type: Aminoacid; Index table k-mer threshold: 131 at k-mer size 6; Index table: counting k-mers; [=================================================================] 100.00% 239 0s 16ms; Index table: Masked residues: 0; Index table: fill; [=================================================================] 100.00% 239 0s 6ms; Index statistics; Entries: 1415; DB size: 488 MB; Avg k-mer size: 0.000022; Top 10 k-mers; XXXXXX 3; XXXXXX 3; XXXXXX 2; XXXXXX 2; XXXXXX 2; XXXXXX 2; XXXXXX 2; XXXXXX 2; XXXXXX 2; XXXXXX 2; Time for index table init: 0h 0m 1s 50ms; Process prefiltering step 1 of 1. k-mer similarity threshold: 131; Starting prefiltering scores calculation (step 1 of 1); Query db start 1 to 239; Target db start 1 to 239; [=================================================================] 100.00% 239 0s 20ms; [================================================================>] 99.58% 238 eta 0s; 20.876247 k-mers per position; 6 DB matches per sequence; 0 overflows; 0 queries produce too many hits (truncated result); 1 sequences passed prefiltering per query sequence; 1 median result list length; 0 sequences with 0 size result lists; Time for merging to pref_step1: 0h 0m 0s 2ms; Time for processing: 0h 0m 1s 824ms; align ",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-775767472:16094,Mask,Masked,16094,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-775767472,1,['Mask'],['Masked']
Availability,`--max-seqs=` should not work and give an error. You have to leave out the equal sign.,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/107#issuecomment-407055187:42,error,error,42,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/107#issuecomment-407055187,1,['error'],['error']
Availability,"`--sort-results` is linclust parameter that is confusingly visible within the `search` workflow, please ignore that. And regarding `--max-accept`, i understand now what you want to achieve, sorry it doesn't quite do what you want. ; What it does it go through the prefiltering list in ungapped alignment order from best score to worst score and align again with Smith-Waterman. Each accepted it is added to the result (and the result list is sorted by E-value). Once it has accepted 5, it stop and doesn't consider the rest of the list anymore. . There could be a hit with a lower E-value further down the list than the E-values produced by the first 5 accepted hits. . We have had a request for a parameter like you propose before. We should definite add this parameter. To get the size of the output under control I would propose to just use a larger value for `--max-accept` (e.g. 20). It becomes increasingly unlikely that you will miss the best possible hits. But yeah, we need a new parameter to cover your use-case.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/704#issuecomment-1541518714:597,down,down,597,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/704#issuecomment-1541518714,1,['down'],['down']
Availability,"`Could not allocate foundDiagonals memory in QueryMatcher` is the only error message that I received. . I was running this in a `snakemake` pipeline, which tried the run with progressively more memory (240, 480, 720 GB), and each time, I got the error: `Could not allocate foundDiagonals memory in QueryMatcher`, and the log file looked the same (less dots at the end of the log file when less memory was used)",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/147#issuecomment-452249730:71,error,error,71,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/147#issuecomment-452249730,2,['error'],['error']
Availability,```; mmseqs databases UniProtKB uniprot tmp; ```. should download the latest uniprot and set it up correctly for use with MMseqs2 including taxonomy information.,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/871#issuecomment-2285411242:57,down,download,57,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/871#issuecomment-2285411242,1,['down'],['download']
Availability,```bash; easy-taxonomy results/BG.fastq /home/cbrislawn/dbs/indexes/library results/mmseq2-BG /tmp \; --search-type 3 -s 2 --mask 0 --max-seqs 100 --max-accept 100 --max-rejected 100 . MMseqs Version: 	10.6d92c; ```. `BG.fastq` is simulated data from a single microbe. `library` is based on RefSeq. Thanks for helping me figure this out!,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/256#issuecomment-577261731:125,mask,mask,125,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/256#issuecomment-577261731,1,['mask'],['mask']
Availability,`clusterupdate` should give you an error and stop executing completely in that case. I am not sure why its not doing that.,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/103#issuecomment-404967275:35,error,error,35,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/103#issuecomment-404967275,1,['error'],['error']
Availability,"`createtaxdb` does a somewhat inefficient procedure of downloading the rather large idmapping file from uniprot and using that for mapping to taxids. I would recommend to use the `databases` workflow, which doesn't need the idmapping. And then creating a subset of the database with a combination of the `createsubdb` module and the `db.lookup` file. The `.lookup` file has a mapping of internal database identifiers to accessions. So you can make a list of database identifiers you want to keep and then call `createsubdb`:. ```; mmseqs createsubdb subset.tsv swissprot swissprot_subset; ```. Alternatively if you want specific taxa in your database you can use the `filtertaxseqdb` module:. ```; mmseqs filtertaxseqdb swissprot swissprot_human --taxon-list 9606; ```",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/346#issuecomment-687244044:55,down,downloading,55,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/346#issuecomment-687244044,1,['down'],['downloading']
Availability,`linclust` implements a splitting mechanism and can process datasets larger than the available memory size. `clusthash` doesn't have a similar mechanism (it's also older and most unused since we have the `linclust` algorithm).,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/442#issuecomment-823502799:85,avail,available,85,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/442#issuecomment-823502799,1,['avail'],['available']
Availability,`mmseqs createdb short_seqs.fasta DB_in/fasta_in`; `mmseqs cluster DB_in/fasta_in DB_clu tmp/ -k 5 --spaced-kmer-pattern 110111`. gives:. `User-specified k-mer pattern is not consistent with stated k-mer size; Error: kmermatcher died; Error: linclust died`,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-773256934:210,Error,Error,210,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-773256934,2,['Error'],['Error']
Availability,"abet size 	nucl:5,aa:21; Compositional bias 	1; Max sequence length 	10000; Max results per query 	300; Mask residues 	1; Mask lower case residues 	0; Spaced k-mers 	1; Spaced k-mer pattern 	; Sensitivity 	7.5; k-score 	0; Check compatible 	0; Search type 	3; Split database 	0; Split memory limit 	0; Verbosity 	3; Threads 	8; Min codons in orf 	30; Max codons in length 	32734; Max orf gaps 	2147483647; Contig start mode 	2; Contig end mode 	2; Orf start mode 	1; Forward frames 	1; Reverse frames 	; Translation table 	1; Translate orf 	0; Use all table starts 	false; Offset of numeric ids 	0; Create lookup 	0; Compressed 	0; Add orf stop 	false; Overlap between sequences	0; Sequence split mode 	1; Header split mode 	0; Strand selection 	1; Remove temporary files 	false. splitsequence chrY tmp/4145379299737466142/nucl_split_seq --max-seq-len 10000 --sequence-overlap 0 --sequence-split-mode 1 --headers-split-mode 0 --create-lookup 0 --threads 8 --compressed 0 -v 3 . [=================================================================] 100.00% 1 eta -; Time for merging to nucl_split_seq_h: 0h 0m 0s 1ms; Time for merging to nucl_split_seq: 0h 0m 0s 1ms; Time for processing: 0h 0m 0s 8ms; indexdb tmp/4145379299737466142/nucl_split_seq chrY --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -k 15 --alph-size nucl:5,aa:21 --comp-bias-corr 1 --max-seq-len 10000 --max-seqs 300 --mask 1 --mask-lower-case 0 --spaced-kmer-mode 1 -s 7.5 --k-score 0 --check-compatible 0 --search-type 3 --split 0 --split-memory-limit 0 -v 3 --threads 8 . Estimated memory consumption: 8G; Write VERSION (0); Write META (1); Write SCOREMATRIX3MER (4); Write SCOREMATRIX2MER (3); Write SCOREMATRIXNAME (2); Write SPACEDPATTERN (23); Write GENERATOR (22); Write DBR1INDEX (5); Write DBR1DATA (6); Write DBR2INDEX (7); Write DBR2DATA (8); Write HDR1INDEX (18); Write HDR1DATA (19); Write HDR2INDEX (20); Write HDR2DATA (21); Index table: counting k-mers; Segmentation fault ] 0.00% 1 eta -; Error: indexdb died; ```",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/280#issuecomment-981845082:2717,mask,mask,2717,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/280#issuecomment-981845082,4,"['Error', 'fault', 'mask']","['Error', 'fault', 'mask', 'mask-lower-case']"
Availability,"ace-limit 0 --remove-tmp-files 0. MMseqs Version: 	7.4e23d; Sub Matrix 	blosum62.out; Add backtrace 	false; Alignment mode 	2; E-value threshold 	1e-05; Seq. Id Threshold 	0; Seq. Id. Mode 	0; Alternative alignments 	0; Coverage threshold 	0; Coverage Mode 	0; Max. sequence length 	65535; Max. results per query 	300; Compositional bias 	1; Realign hit 	false; Max Reject 	2147483647; Max Accept 	2147483647; Include identical Seq. Id. 	false; Preload mode 	0; Pseudo count a 	1; Pseudo count b 	1.5; Score bias 	0; Gap open cost 	11; Gap extension cost 	1; Threads 	24; Verbosity 	3; Sensitivity 	6; K-mer size 	0; K-score 	2147483647; Alphabet size 	21; Offset result 	0; Split DB 	0; Split mode 	2; Split Memory Limit 	0; Diagonal Scoring 	1; Exact k-mer matching 	0; Mask Residues 	1; Minimum Diagonal score 	15; Spaced Kmer 	1; Spaced k-mer pattern; Local temporary path; Rescore mode 	0; Remove hits by seq.id. and coverage 	false; Sort results 	0; In substitution scoring mode, performs global alignment along the diagonal	false; Mask profile 	1; Profile e-value threshold 	0.001; Use global sequence weighting 	false; Filter MSA 	1; Maximum sequence identity threshold 	0.9; Minimum seq. id. 	0; Minimum score per column 	-20; Minimum coverage 	0; Select n most diverse seqs 	1000; Omit Consensus 	false; Min codons in orf 	30; Max codons in length 	32734; Max orf gaps 	2147483647; Contig start mode 	2; Contig end mode 	2; Orf start mode 	0; Forward Frames 	1,2,3; Reverse Frames 	1,2,3; Translation Table 	1; Use all table starts 	false; Offset of numeric ids 	0; Add Orf Stop 	false; Number search iterations 	1; Start sensitivity 	1; Search steps 	3; Run a seq-profile search in slice mode 	false; Strand selection 	1; Disk space limit 	0; Sets the MPI runner; Remove Temporary Files 	false. Program call:; align /tmp/global2/nyoungblut/LLMGAG_27929269397/linclust/genes_db /ebio/abt3_projects/databases_no-backup/uniclust/uniclust90_2018_08_db /tmp/global2/nyoungblut/LLMGAG_27929269397",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/147#issuecomment-452242032:4837,Mask,Mask,4837,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/147#issuecomment-452242032,1,['Mask'],['Mask']
Availability,"ad-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --sco; re-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --corr-score-weight 0 -; -gap-open aa:11,nucl:5 --gap-extend aa:1,nucl:2 --zdrop 40 --alph-size aa:13,nucl:5 --kmer-per-seq 21; --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-pr; ob 0.9 --mask-lower-case 0 -k 0 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --; ignore-multi-kmer 0 --rescore-mode 0 --filter-hits 0 --sort-results 0 --remove-tmp-files 0 --force-re; use 0 ; ; kmermatcher /home/outdir/2023_06/tmp/input_step2 /home/outdir/2023_06/tmp/clu_uniclust30/13156544047496927710/linclust/2296487886038157831/pref --; sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --alph-size aa:13,nucl:5 --min-seq-id 0 --kmer-per-seq ; 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-prob 0.9 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-mem; ory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 6 --compressed 0 -v 3 . kmermatcher /home/outdir/2023_06/tmp/input_step2 /home/outdir/2023_06/tmp/clu_uniclust30/13156544047496927710/linclust/2296487886038157831/pref --; sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --alph-size aa:13,nucl:5 --min-seq-id 0 --kmer-per-seq ; 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-; prob 0.9 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-mem; ory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 6 --compressed 0 -v 3 . Invalid non-numeric value for environment variable MMSEQS_CALL_DEPTH!; Error: kmermatcher died; Error: linclust died; ```. My knowledge of mmseqs and its output format is limited and any help would be much appreciated. I also wonder why there does not seem to be any file/flag d",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/700#issuecomment-1589819536:7028,mask,mask-lower-case,7028,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/700#issuecomment-1589819536,1,['mask'],['mask-lower-case']
Availability,and for the original cluster-reassign problem:. ` mmseqs cluster DB_in/artificial_DB DB_clu/set_cover_reassign set_cover_reassign_tmp --cluster-mode 0 --cov-mode 0 --cluster-reassign 1 --mask 0`. gives:. ```; swapdb set_cover_reassign_tmp/17639961554283803127/seq_wrong_assigned_pref set_cover_reassign_tmp/17639961554283803127/seq_wrong_assigned_pref_swaped --threads 16 --compressed 0 -v 3. Input set_cover_reassign_tmp/17639961554283803127/seq_wrong_assigned_pref does not exist; Error: swapdb2 reassign died. ```,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-774039100:187,mask,mask,187,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-774039100,2,"['Error', 'mask']","['Error', 'mask']"
Availability,"ani/databases/mmseqsRefSeqCompleteDB mmseqs-test-megan-out-280619/mmseqs-S1E3-S3resultDB tmp --db-load-mode 3 --threads 2 --max-seqs 25 -s 1 -a -e 1e-5 . MMseqs Version: 	73ce3b88754987122b4fc5e69a721beeecd677d0; Substitution matrix 	blosum62.out; Add backtrace 	true; Alignment mode 	2; E-value threshold 	1e-05; Seq. id. threshold 	0; Min. alignment length 	0; Seq. id. mode 	0; Alternative alignments 	0; Coverage threshold 	0; Coverage mode 	0; Max sequence length 	65535; Compositional bias 	1; Realign hits 	false; Max reject 	2147483647; Max accept 	2147483647; Include identical seq. id. 	false; Preload mode 	3; Pseudo count a 	1; Pseudo count b 	1.5; Score bias 	0; Gap open cost 	11; Gap extension cost 	1; Threads 	2; Compressed 	0; Verbosity 	3; Seed substitution matrix 	VTML80.out; Sensitivity 	1; K-mer size 	0; K-score 	2147483647; Alphabet size 	21; Max results per query 	25; Previous max results per query 	; Split database 	0; Split mode 	2; Split memory limit 	0; Diagonal scoring 	1; Exact k-mer matching 	0; Mask residues 	1; Mask lower case residues 	0; Minimum diagonal score 	15; Spaced k-mers 	1; Spaced k-mer pattern 	; Local temporary path 	; Rescore mode 	0; Remove hits by seq. id. and coverage 	false; Sort results 	0; Global diagonal rescoring 	false; Mask profile 	1; Profile e-value threshold 	0.1; Use global sequence weighting 	false; Filter MSA 	1; Maximum seq. id. threshold 	0.9; Minimum seq. id. 	0; Minimum score per column 	-20; Minimum coverage 	0; Select N most diverse seqs 	1000; Omit consensus 	false; Min codons in orf 	30; Max codons in length 	32734; Max orf gaps 	2147483647; Contig start mode 	2; Contig end mode 	2; Orf start mode 	1; Forward frames 	1,2,3; Reverse frames extractorfs mmseqs-test-megan-out-280619/mmseqs-S1E3-S3queryDB tmp/15531098257495296432/q_orfs --min-length 30 --max-length 32734 --max-gaps 2147483647 --contig-start-mode 2 --contig-end-mode 2 --orf-start-mode 1 --forward-frames 1,2,3 --reverse-frames 1,2,3 --translation-",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/214#issuecomment-508085485:3137,Mask,Mask,3137,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/214#issuecomment-508085485,2,['Mask'],['Mask']
Availability,"appeared to be fine. ```; # command:; mmseqs databases UniProtKB/Swiss-Prot ""$OUT_DIR""/uniprotkb_swissprot ""$TMP_DIR"" --threads 128 --remove-tmp-files. # output directory:; -rw-r--r-- 1 gnii0001 pc77 0 Jan 27 16:54 GTDB; -rw-r--r-- 1 gnii0001 pc77 4 Jan 27 16:54 GTDB.dbtype; -rw-r--r-- 1 gnii0001 pc77 0 Jan 27 16:54 GTDB_h; -rw-r--r-- 1 gnii0001 pc77 4 Jan 27 16:54 GTDB_h.dbtype; -rw-r--r-- 1 gnii0001 pc77 0 Jan 27 16:54 GTDB_h.index; -rw-r--r-- 1 gnii0001 pc77 0 Jan 27 16:54 GTDB.index; -rw-r--r-- 1 gnii0001 pc77 0 Jan 27 17:33 GTDB_mapping; -rw-r--r-- 1 gnii0001 pc77 0 Jan 27 16:54 GTDB.source; -rw-r--r-- 1 gnii0001 pc77 25771406 Jan 27 17:33 GTDB_taxonomy. # slurm error; awk: cmd. line:1: fatal: cannot open file `/home/gnii0001/pc77/scratch_nobackup/Database/mmseqs_formatted/GTDB.lookup' for reading: No such file or directory. # slurm standard output:; ....; Download Results:; gid |stat|avg speed |path/URI; ======+====+===========+=======================================================; 94ce2b|OK | 88MiB/s|/home/gnii0001/pc77/scratch_nobackup/Database/mmseqs_formatted/tmp/13846894499670505008/bac120_taxonomy.tsv. Status Legend:; (OK):download completed. 01/27 17:33:08 [NOTICE] Downloading 1 item(s). 01/27 17:33:09 [NOTICE] Download complete: /home/gnii0001/pc77/scratch_nobackup/Database/mmseqs_formatted/tmp/13846894499670505008/ar53_taxonomy.tsv. Download Results:; gid |stat|avg speed |path/URI; ======+====+===========+=======================================================; 13f000|OK | 6.3MiB/s|/home/gnii0001/pc77/scratch_nobackup/Database/mmseqs_formatted/tmp/13846894499670505008/ar53_taxonomy.tsv. Status Legend:; (OK):download completed.; Create directory /home/gnii0001/pc77/scratch_nobackup/Database/mmseqs_formatted/tmp/13846894499670505008/taxdb; createtaxdb /home/gnii0001/pc77/scratch_nobackup/Database/mmseqs_formatted/GTDB /home/gnii0001/pc77/scratch_nobackup/Database/mmseqs_formatted/tmp/13846894499670505008/taxdb --ncbi-tax-dump /home/gnii0001/pc77/scratc",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/758#issuecomment-1913045806:1009,Down,Download,1009,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/758#issuecomment-1913045806,1,['Down'],['Download']
Availability,"arts 	false; Offset of numeric ids 	0; Create lookup 	0; Add orf stop 	false; Overlap between sequences 	0; Sequence split mode 	1; Header split mode 	0; Chain overlapping alignments 	0; Merge query 	1; Search type 	0; Prefilter mode 	0; Exhaustive search mode 	false; Filter results during exhaustive search	0; Strand selection 	1; LCA search mode 	false; Disk space limit 	0; MPI runner; Force restart with latest tmp 	false; Remove temporary files 	false. extractorfs KLEB_PO07_megahitDB tmp/6964202514022042695/orfs_aa --min-length 30 --max-length 32734 --max-gaps 2147483647 --contig-start-mode 2 --contig-end-; mode 2 --orf-start-mode 1 --forward-frames 1,2,3 --reverse-frames 1,2,3 --translation-table 1 --translate 1 --use-all-table-starts 0 --id-offset 0 --create-; lookup 0 --threads 32 --compressed 0 -v 3. [=================================================================] 24.08K 1s 376ms; Time for merging to orfs_aa_h: 0h 0m 0s 504ms; Time for merging to orfs_aa: 0h 0m 0s 706ms; Time for processing: 0h 0m 6s 520ms; prefilter tmp/6964202514022042695/orfs_aa /home/sdwork/scratch/metagenomics/uniref_db/uniref90 tmp/6964202514022042695/orfs_pref --sub-mat 'aa:blosum62.out,; nucl:nucleotide.out' --seed-sub-mat 'aa:VTML80.out,nucl:nucleotide.out' -s 2 -k 0 --target-search-mode 0 --k-score seq:2147483647,prof:2147483647 --alph-siz; e aa:21,nucl:5 --max-seq-len 65535 --max-seqs 1 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --comp-bias-corr-scale; 1 --diag-score 0 --exact-kmer-matching 0 --mask 1 --mask-prob 0.9 --mask-lower-case 0 --min-ungapped-score 3 --add-self-matches 0 --spaced-kmer-mode 1 --db-; load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --threads 32 --compressed 0 -v 3. Query database size: 627284 type: Aminoacid; Estimated memory consumption: 717G; Target database size: 187136236 type: Aminoacid; Index table k-mer threshold: 163 at k-mer size 7; Index table: counting k-mers; ```",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/838#issuecomment-2081682741:4047,mask,mask,4047,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/838#issuecomment-2081682741,3,['mask'],"['mask', 'mask-lower-case', 'mask-prob']"
Availability,"as a follow up comment, i get this error when run the suggested ""non-easy-search"" commands:. ```; mmseqs createdb query.fasta qdb; mmseqs search qdb target result tmp; mmseqs result2msa qdb target result result_msa; mmseqs unpackdb result_msa outdir; ```. Error:; ```; Cannot open lookup file result_msa.lookup!; ```",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/693#issuecomment-1516353048:35,error,error,35,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/693#issuecomment-1516353048,2,"['Error', 'error']","['Error', 'error']"
Availability,"ated to ""word""...; Reading symbols from mmseqs...expanding to full symbols...done.; (gdb) r; Starting program: /home/disque2To/home/romain/logiciel/MMseqs2/build/bin/mmseqs createdb dpann_cpr.faa dpann_cpr_mmseq_db/; [Thread debugging using libthread_db enabled]; Using host libthread_db library ""/lib/x86_64-linux-gnu/libthread_db.so.1"".; Program call:; createdb dpann_cpr.faa dpann_cpr_mmseq_db/ . MMseqs Version: 	a951e4dede7e9b52e514119d083ff4ca80ad1565; Max. sequence length 	65535; Split Seq. by len 	true; Database type 	0; Do not shuffle input database	true; Offset of numeric ids 	0; Compressed 	0; Verbosity 	3. ...................................................................................................	1 Mio. sequences processed; ...................................................................................................	2 Mio. sequences processed; .........................................................Time for merging files: 0h 0m 1s 184ms. Program received signal SIGSEGV, Segmentation fault.; __GI___fileno (fp=0x0) at fileno.c:35; 35	fileno.c: Aucun fichier ou dossier de ce type.; (gdb) bt; #0 __GI___fileno (fp=0x0) at fileno.c:35; #1 0x000000000058a276 in Concat::concatFiles (files=0x1187530, n=32, outFile=0x0); at /home/romain/logiciel/MMseqs2/src/commons/Concat.h:113; #2 0x0000000000588e40 in DBWriter::mergeResults (outFileName=0x117feb0 ""dpann_cpr_mmseq_db/"", ; outFileNameIndex=0x11818e0 ""dpann_cpr_mmseq_db/.index"", dataFileNames=0x1186100, indexFileNames=0x1186320, fileCount=32, ; lexicographicOrder=false) at /home/romain/logiciel/MMseqs2/src/commons/DBWriter.cpp:543; #3 0x0000000000586e74 in DBWriter::close (this=0x7fffffff57e0) at /home/romain/logiciel/MMseqs2/src/commons/DBWriter.cpp:239; #4 0x0000000000619954 in createdb(int, char const**, Command const&) (); #5 0x0000000000555b7f in runCommand (p=..., argc=2, argv=0x7fffffffdc78) at /home/romain/logiciel/MMseqs2/src/commons/Application.cpp:62; #6 0x000000000055634a in main (argc=4, argv",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/141#issuecomment-445211494:1835,fault,fault,1835,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/141#issuecomment-445211494,1,['fault'],['fault']
Availability,"atrix 	blosum62.out; Add backtrace 	false; Alignment mode 	3; E-value threshold 	0.001; Seq. Id Threshold 	0.8; Alternative alignments 	0; Coverage threshold 	0.8; Coverage Mode 	0; Max. sequence length 	65535; Max. results per query 	300; Compositional bias 	0; Realign hit 	false; Max Reject 	2147483647; Max Accept 	2147483647; Include identical Seq. Id. 	false; No preload 	false; Early exit 	false; Pseudo count a 	1; Pseudo count b 	1.5; Alphabet size 	13; Kmer per sequence 	80; Mask Residues 	0; K-mer size 	0; Shift hash 	5; Split Memory Limit 	0; Include only extendable 	false; Skip sequence with n repeating k-mers 	0; Rescore mode 	0; Remove hits by seq.id. and coverage 	false; In substitution scoring mode, performs global alignment along the diagonal	false; Remove Temporary Files 	false; Sets the MPI runner 	. Program call:; panproteome.db /tmp/test/9465698490903227639/linclust/831108043510341376/pref --sub-mat blosum62.out --alph-size 13 --min-seq-id 0.8 --kmer-per-seq 80 --mask 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 5 --split-memory-limit 0 --skip-n-repeat-kmer 0 --threads 10 -v 3 . MMseqs Version: 	dfb5e6eb53ee034f02cc08d15513fb5ccce7cce7; Sub Matrix 	blosum62.out; Alphabet size 	13; Seq. Id Threshold 	0.8; Kmer per sequence 	80; Mask Residues 	0; Coverage Mode 	0; K-mer size 	10; Coverage threshold 	0.8; Max. sequence length 	65535; Shift hash 	5; Split Memory Limit 	0; Include only extendable 	false; Skip sequence with n repeating k-mers	0; Threads 	10; Verbosity 	3. Database type: Aminoacid; V -> I; M -> L; Q -> E; T -> S; R -> K; Y -> F; S -> A; N -> D; Reduced amino acid alphabet:; A C D E F G H I K L P W X . Needed memory (1384664272 byte) of total memory (365681509171 byte); Process file into 1 parts; Generate k-mers list 0; ...................................................................................................	1 Mio. sequences processed; .............; Time for fill: 0 h 0 m 2s; Done.; Sort kmer ... Done.; Time for s",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/88#issuecomment-401138700:3683,mask,mask,3683,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/88#issuecomment-401138700,1,['mask'],['mask']
Availability,"b>/12158280734806148968/input /nfs/brubeck.bx.psu.edu/scratch6/ksahlin/preclust_eval/cluster/linclust/ENSEMBL/1000000/linclust_tmpdir<200b>/12158280734806148968/clu /nfs/brubeck.bx.psu.edu/scratch6/ksahlin/preclust_eval/cluster/linclust/ENSEMBL/1000000/linclust_tmpdir<200b>/12158280734806148968/clu_tmp. MMseqs Version: 016429915362d184505627148d07f11c9ccc1aeb; Cluster mode 0; Max depth connected component 1000; Similarity type 2; Threads 64; Verbosity 3; Sub Matrix blosum62.out; Add backtrace false; Alignment mode 2; E-value threshold 0.001; Seq. Id Threshold 0.9; Seq. Id. Mode 0; Alternative alignments 0; Coverage threshold 0.8; Coverage Mode 0; Max. sequence length 65535; Max. results per query 300; Compositional bias 1; Realign hit false; Max Reject 2147483647; Max Accept 2147483647; Include identical Seq. Id. false; No preload false; Pseudo count a 1; Pseudo count b 1.5; Score bias 0; Alphabet size 21; Kmer per sequence 21; Mask Residues 0; K-mer size 0; Shift hash 5; Split Memory Limit 0; Include only extendable false; Skip sequence with n repeating k-mers 0; Rescore mode 0; Remove hits by seq.id. and coverage false; Sort results 0; In substitution scoring mode, performs global alignment along the diagonal false; Remove Temporary Files false; Sets the MPI runner. Set cluster mode SET COVER.; Program call:; /nfs/brubeck.bx.psu.edu/scratch6/ksahlin/preclust_eval/cluster/linclust/ENSEMBL/1000000/linclust_tmpdir<200b>/12158280734806148968/input /nfs/brubeck.bx.psu.edu/scratch6/ksahlin/preclust_eval/cluster/linclust/ENSEMBL/1000000/linclust_tmpdir<200b>/12158280734806148968/input /nfs/brubeck.bx.psu.edu/scratch6/ksahlin/preclust_eval/cluster/linclust/ENSEMBL/1000000/linclust_tmpdir<200b>/12158280734806148968/clu_tmp/13736030087838361561/pref /nfs/brubeck.bx.psu.edu/scratch6/ksahlin/preclust_eval/cluster/linclust/ENSEMBL/1000000/linclust_tmpdir<200b>/12158280734806148968/clu_tmp/13736030087838361561/pref_rescore1 --sub-mat blosum62.out --rescore-mode 0 -e 0.001 -c 0.8",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/111#issuecomment-418161120:3423,Mask,Mask,3423,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/111#issuecomment-418161120,1,['Mask'],['Mask']
Availability,"bioconda has currently no support for ARM. Though there are some open pull requests in bioconda that will enable support for ARM on Linux at some point. . If you want to use MMseqs2 on an ARM machine, please download the ARM64 binaries from the latest GitHub release or from [mmseqs.com/latest](https://mmseqs.com/latest).",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/744#issuecomment-1701474028:208,down,download,208,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/744#issuecomment-1701474028,1,['down'],['download']
Availability,c78 1.1GiB/2.7GiB(43%) CN:5 DL:105MiB ETA:15s]; [#e1fc78 1.2GiB/2.7GiB(46%) CN:5 DL:105MiB ETA:14s]; [#e1fc78 1.4GiB/2.7GiB(50%) CN:5 DL:105MiB ETA:13s]; [#e1fc78 1.5GiB/2.7GiB(54%) CN:5 DL:105MiB ETA:12s]; [#e1fc78 1.6GiB/2.7GiB(58%) CN:5 DL:105MiB ETA:11s]; [#e1fc78 1.7GiB/2.7GiB(61%) CN:5 DL:105MiB ETA:10s]; [#e1fc78 1.8GiB/2.7GiB(65%) CN:5 DL:106MiB ETA:9s]; [#e1fc78 1.9GiB/2.7GiB(69%) CN:5 DL:106MiB ETA:8s]; [#e1fc78 2.0GiB/2.7GiB(73%) CN:5 DL:106MiB ETA:7s]; [#e1fc78 2.1GiB/2.7GiB(77%) CN:5 DL:107MiB ETA:6s]; [#e1fc78 2.2GiB/2.7GiB(80%) CN:5 DL:107MiB ETA:5s]; [#e1fc78 2.3GiB/2.7GiB(84%) CN:5 DL:107MiB ETA:4s]; [#e1fc78 2.4GiB/2.7GiB(88%) CN:5 DL:108MiB ETA:3s]; [#e1fc78 2.5GiB/2.7GiB(92%) CN:5 DL:108MiB ETA:2s]; [#e1fc78 2.6GiB/2.7GiB(95%) CN:5 DL:108MiB ETA:1s]; [#e1fc78 2.7GiB/2.7GiB(99%) CN:1 DL:107MiB]. 10/13 10:51:26 [NOTICE] Download complete: tmp/3093587253482177683/eukaryota.tar. Download Results:; gid |stat|avg speed |path/URI; ======+====+===========+=======================================================; e1fc78|OK | 105MiB/s|tmp/3093587253482177683/eukaryota.tar. Status Legend:; (OK):download completed. 10/13 10:51:26 [NOTICE] Downloading 1 item(s). 10/13 10:51:26 [NOTICE] Download complete: tmp/3093587253482177683/viruses.tar. Download Results:; gid |stat|avg speed |path/URI; ======+====+===========+=======================================================; 0f25a5|OK | 40MiB/s|tmp/3093587253482177683/viruses.tar. Status Legend:; (OK):download completed.; tar2db tmp/3093587253482177683/bacteria.tar tmp/3093587253482177683/archea.tar tmp/3093587253482177683/eukaryota.tar tmp/3093587253482177683/viruses.tar tmp/3093587253482177683/msa --output-dbtype 11 --tar-include \.raw_alg\.faa\.gz$ --threads 64 -v 3 . [==================================Time for merging to msa: 0h 0m 0s 94ms; Time for merging to msa.lookup: 0h 0m 0s 47ms; Time for processing: 0h 0m 17s 19ms; msa2profile tmp/3093587253482177683/msa mmseqs_eggNOG/mmseqs_eggNOG --match-mode 1 --match-,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/762#issuecomment-1761245149:5509,Down,Download,5509,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/762#issuecomment-1761245149,1,['Down'],['Download']
Availability,c78 1.4GiB/2.7GiB(50%) CN:5 DL:105MiB ETA:13s]; [#e1fc78 1.5GiB/2.7GiB(54%) CN:5 DL:105MiB ETA:12s]; [#e1fc78 1.6GiB/2.7GiB(58%) CN:5 DL:105MiB ETA:11s]; [#e1fc78 1.7GiB/2.7GiB(61%) CN:5 DL:105MiB ETA:10s]; [#e1fc78 1.8GiB/2.7GiB(65%) CN:5 DL:106MiB ETA:9s]; [#e1fc78 1.9GiB/2.7GiB(69%) CN:5 DL:106MiB ETA:8s]; [#e1fc78 2.0GiB/2.7GiB(73%) CN:5 DL:106MiB ETA:7s]; [#e1fc78 2.1GiB/2.7GiB(77%) CN:5 DL:107MiB ETA:6s]; [#e1fc78 2.2GiB/2.7GiB(80%) CN:5 DL:107MiB ETA:5s]; [#e1fc78 2.3GiB/2.7GiB(84%) CN:5 DL:107MiB ETA:4s]; [#e1fc78 2.4GiB/2.7GiB(88%) CN:5 DL:108MiB ETA:3s]; [#e1fc78 2.5GiB/2.7GiB(92%) CN:5 DL:108MiB ETA:2s]; [#e1fc78 2.6GiB/2.7GiB(95%) CN:5 DL:108MiB ETA:1s]; [#e1fc78 2.7GiB/2.7GiB(99%) CN:1 DL:107MiB]. 10/13 10:51:26 [NOTICE] Download complete: tmp/3093587253482177683/eukaryota.tar. Download Results:; gid |stat|avg speed |path/URI; ======+====+===========+=======================================================; e1fc78|OK | 105MiB/s|tmp/3093587253482177683/eukaryota.tar. Status Legend:; (OK):download completed. 10/13 10:51:26 [NOTICE] Downloading 1 item(s). 10/13 10:51:26 [NOTICE] Download complete: tmp/3093587253482177683/viruses.tar. Download Results:; gid |stat|avg speed |path/URI; ======+====+===========+=======================================================; 0f25a5|OK | 40MiB/s|tmp/3093587253482177683/viruses.tar. Status Legend:; (OK):download completed.; tar2db tmp/3093587253482177683/bacteria.tar tmp/3093587253482177683/archea.tar tmp/3093587253482177683/eukaryota.tar tmp/3093587253482177683/viruses.tar tmp/3093587253482177683/msa --output-dbtype 11 --tar-include \.raw_alg\.faa\.gz$ --threads 64 -v 3 . [==================================Time for merging to msa: 0h 0m 0s 94ms; Time for merging to msa.lookup: 0h 0m 0s 47ms; Time for processing: 0h 0m 17s 19ms; msa2profile tmp/3093587253482177683/msa mmseqs_eggNOG/mmseqs_eggNOG --match-mode 1 --match-ratio 0.5 --threads 64 -v 3 . Finding maximum sequence length and set size.; Error: msa2profile died; ```,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/762#issuecomment-1761245149:5721,down,download,5721,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/762#issuecomment-1761245149,6,"['Down', 'Error', 'down']","['Download', 'Downloading', 'Error', 'download']"
Availability,"ca-ranks phylum:superphylum:subkingdom:kingdom:superkingdom --threads 24 /tmp/global2/nyoungblut/LLMGAG_27929269397/linclust/genes_db /ebio/abt3_projects/databases_no-backup/uniclust/uniclust90_2018_08_db /tmp/global2/nyoungblut/LLMGAG_27929269397/taxonomy/genes_tax_db /tmp/global2/nyoungblut/LLMGAG_27929269397/taxonomy/tmp/. MMseqs Version: 	7.4e23d; Sub Matrix 	blosum62.out; Add backtrace 	false; Alignment mode 	2; E-value threshold 	1e-05; Seq. Id Threshold 	0; Seq. Id. Mode 	0; Alternative alignments 	0; Coverage threshold 	0; Coverage Mode 	0; Max. sequence length 	65535; Max. results per query 	300; Compositional bias 	1; Realign hit 	false; Max Reject 	2147483647; Max Accept 	2147483647; Include identical Seq. Id. 	false; Preload mode 	0; Pseudo count a 	1; Pseudo count b 	1.5; Score bias 	0; Gap open cost 	11; Gap extension cost 	1; Threads 	24; Verbosity 	3; Sensitivity 	6; K-mer size 	0; K-score 	2147483647; Alphabet size 	21; Offset result 	0; Split DB 	0; Split mode 	2; Split Memory Limit 	0; Diagonal Scoring 	1; Exact k-mer matching 	0; Mask Residues 	1; Minimum Diagonal score 	15; Spaced Kmer 	1; Spaced k-mer pattern; Local temporary path; Rescore mode 	0; Remove hits by seq.id. and coverage 	false; Sort results 	0; In substitution scoring mode, performs global alignment along the diagonal	false; Mask profile 	1; Profile e-value threshold 	0.001; Use global sequence weighting 	false; Filter MSA 	1; Maximum sequence identity threshold 	0.9; Minimum seq. id. 	0; Minimum score per column 	-20; Minimum coverage 	0; Select n most diverse seqs 	1000; Omit Consensus 	false; Min codons in orf 	30; Max codons in length 	32734; Max orf gaps 	2147483647; Contig start mode 	2; Contig end mode 	2; Orf start mode 	0; Forward Frames 	1,2,3; Reverse Frames 	1,2,3; Translation Table 	1; Use all table starts 	false; Offset of numeric ids 	0; Add Orf Stop 	false; Number search iterations 	1; Start sensitivity 	1; Search steps 	3; Run a seq-profile search in slice mode 	fa",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/147#issuecomment-452242032:1195,Mask,Mask,1195,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/147#issuecomment-452242032,1,['Mask'],['Mask']
Availability,"case residues 0; k-mer length 0; Shift hash 67; Split memory limit 0; Include only extendable false; Skip repeating k-mers false; Rescore mode 0; Remove hits by seq. id. and coverage false; Sort results 0; Remove temporary files false; Force restart with latest tmp false; MPI runner. Set cluster mode SET COVER.; kmermatcher inDB tmp/18375844090983922724/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-id 0.9 --kmer-per-seq 40 --spaced-kmer-mode 0 --kmer-per-seq-scale; nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.9 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-mul; ti-kmer 0 --threads 160 --compressed 0 -v 3. kmermatcher inDB tmp/18375844090983922724/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-id 0.9 --kmer-per-seq 40 --spaced-kmer-mode 0 --kmer-per-seq-scale; nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.9 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-mul; ti-kmer 0 --threads 160 --compressed 0 -v 3. Database size: 2830651961 type: Aminoacid; Reduced amino acid alphabet: (A S T) (C) (D B N) (E Q Z) (F Y) (G) (H) (I V) (K R) (L J M) (P) (W) (X). Generate k-mers list for 1 split; [=================================================================] 100.00% 2.83B 2h 28m 50s 478ms. Sort kmer 1h 11m 10s 680ms; Time for fill: 0h 14m 35s 645ms; Time for merging to pref: 0h 31m 17s 620ms; Time for processing: 5h 43m 57s 88ms; rescorediagonal inDB inDB tmp/18375844090983922724/pref tmp/18375844090983922724/pref_rescore1 --sub-mat nucl:nucleotide.out,aa:blosum62.out --rescore-mode 0 --wrapped-scoring 0 --filter-hits 0 ; -e 0.001 -c 0.9 -a 0 --cov-mode 0 --min-seq-id 0.9 --min-aln-len 0 --seq-id-mode 0 --add-self-matches 0 --sort-results 0 --db-load-mode 0 --threads 160 --compressed 0 -v 3. [====================",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/303#issuecomment-625917311:2355,mask,mask,2355,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/303#issuecomment-625917311,2,['mask'],"['mask', 'mask-lower-case']"
Availability,"ccept 	2147483647; Include identical seq. id. 	false; Preload mode 	0; Pseudo count a 	substitution:1.100,context:1.400; Pseudo count b 	substitution:4.100,context:5.800; Score bias 	0; Realign hits 	false; Realign score bias 	-0.2; Realign max seqs 	2147483647; Correlation score weight 	0; Gap open cost 	aa:11,nucl:5; Gap extension cost 	aa:1,nucl:2; Zdrop 	40; Threads 	32; Compressed 	0; Verbosity 	3; Seed substitution matrix 	aa:VTML80.out,nucl:nucleotide.out; Sensitivity 	7; k-mer length 	0; Target search mode 	0; k-score 	seq:2147483647,prof:2147483647; Alphabet size 	aa:21,nucl:5; Max results per query 	300; Split database 	0; Split mode 	2; Split memory limit 	0; Diagonal scoring 	true; Exact k-mer matching 	0; Mask residues 	1; Mask residues probability 	0.9; Mask lower case residues 	0; Minimum diagonal score 	15; Selected taxa 	; Spaced k-mers 	1; Spaced k-mer pattern 	; Local temporary path 	; Rescore mode 	0; Remove hits by seq. id. and coverage 	false; Sort results 	0; Mask profile 	1; Profile E-value threshold 	0.001; Global sequence weighting 	false; Allow deletions 	false; Filter MSA 	1; Use filter only at N seqs 	0; Maximum seq. id. threshold 	0.9; Minimum seq. id. 	0.0; Minimum score per column 	-20; Minimum coverage 	0; Select N most diverse seqs 	1000; Pseudo count mode 	0; Min codons in orf 	30; Max codons in length 	32734; Max orf gaps 	2147483647; Contig start mode 	2; Contig end mode 	2; Orf start mode 	1; Forward frames 	1,2,3; Reverse frames 	1,2,3; Translation table 	1; Translate orf 	0; Use all table starts 	false; Offset of numeric ids 	0; Create lookup 	0; Add orf stop 	false; Overlap between sequences 	0; Sequence split mode 	1; Header split mode 	0; Chain overlapping alignments 	0; Merge query 	1; Search type 	0; Search iterations 	1; Start sensitivity 	4; Search steps 	1; Prefilter mode 	0; Exhaustive search mode 	false; Filter results during exhaustive search	0; Strand selection 	1; LCA search mode 	false; Disk space limit 	0; MPI ru",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/805#issuecomment-1899655257:1702,Mask,Mask,1702,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/805#issuecomment-1899655257,1,['Mask'],['Mask']
Availability,"ccept 2147483647 --add-self-matches 0; --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --sco; re-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --corr-score-weight 0 -; -gap-open aa:11,nucl:5 --gap-extend aa:1,nucl:2 --zdrop 40 --alph-size aa:13,nucl:5 --kmer-per-seq 21; --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-pr; ob 0.9 --mask-lower-case 0 -k 0 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --; ignore-multi-kmer 0 --rescore-mode 0 --filter-hits 0 --sort-results 0 --remove-tmp-files 0 --force-re; use 0 ; ; kmermatcher /home/outdir/2023_06/tmp/input_step2 /home/outdir/2023_06/tmp/clu_uniclust30/13156544047496927710/linclust/2296487886038157831/pref --; sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --alph-size aa:13,nucl:5 --min-seq-id 0 --kmer-per-seq ; 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-prob 0.9 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-mem; ory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 6 --compressed 0 -v 3 . kmermatcher /home/outdir/2023_06/tmp/input_step2 /home/outdir/2023_06/tmp/clu_uniclust30/13156544047496927710/linclust/2296487886038157831/pref --; sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --alph-size aa:13,nucl:5 --min-seq-id 0 --kmer-per-seq ; 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-; prob 0.9 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-mem; ory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 6 --compressed 0 -v 3 . Invalid non-numeric value for environment variable MMSEQS_CALL_DEPTH!; Error: kmermatcher died; Error: linclust died; ```. My knowledge of mmseqs and its output format is limited and any help would be much appreciated. I also wonder",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/700#issuecomment-1589819536:7003,mask,mask,7003,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/700#issuecomment-1589819536,2,['mask'],"['mask', 'mask-prob']"
Availability,"clu_not_accepted_swap: 0h 0m 0s 1ms; Time for processing: 0h 0m 0s 70ms; createsubdb tmpfiles//13298481167543164943/clu_not_accepted_swap DB_in/fasta_in_db_HC tmpfiles//13298481167543164943/seq_wrong_assigned -v 3. Time for merging to seq_wrong_assigned: 0h 0m 0s 0ms; Time for processing: 0h 0m 0s 1ms; createsubdb tmpfiles//13298481167543164943/clu DB_in/fasta_in_db_HC tmpfiles//13298481167543164943/seq_seeds -v 3. Time for merging to seq_seeds: 0h 0m 0s 0ms; Time for processing: 0h 0m 0s 1ms; prefilter tmpfiles//13298481167543164943/seq_wrong_assigned tmpfiles//13298481167543164943/seq_seeds.merged tmpfiles//13298481167543164943/seq_wrong_assigned_pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -s 6 -k 0 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 65535 --max-seqs 20 --split 0 --split-mode 2 --split-memory-limit 0 -c 0.8 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 16 --compressed 0 -v 3. Query database size: 10 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 210 type: Aminoacid; Index table k-mer threshold: 109 at k-mer size 6; Index table: counting k-mers; [=================================================================] 210 0s 30ms; Index table: Masked residues: 0; Index table: fill; [=================================================================] 210 0s 6ms; Index statistics; Entries: 1284; DB size: 488 MB; Avg k-mer size: 0.000020; Top 10 k-mers; XXXXXX 3; XXXXXX 3; XXXXXX 2; XXXXXX 2; XXXXXX 2; XXXXXX 2; XXXXXX 2; XXXXXX 2; XXXXXX 2; XXXXXX 2; Time for index table init: 0h 0m 0s 989ms; Process prefiltering step 1 of 1. k-mer similarity threshold: 109; Starting prefiltering scores calculation (step 1 of 1); Query db start 1 to 10; Target db start 1 to 210; [===========================================",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-771572412:27744,mask,mask,27744,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-771572412,2,['mask'],"['mask', 'mask-lower-case']"
Availability,commit 3c3dc6e924127b9b297b078800228b3fd876452d solved the runtime error on my data. Thanks!,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/111#issuecomment-418548672:67,error,error,67,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/111#issuecomment-418548672,1,['error'],['error']
Availability,ct src/CMakeFiles/mmseqs-framework.dir/util/diffseqdbs.cpp.o; [ 72%] Building CXX object src/CMakeFiles/mmseqs-framework.dir/util/expandaln.cpp.o; [ 73%] Building CXX object src/CMakeFiles/mmseqs-framework.dir/util/extractalignedregion.cpp.o; [ 73%] Building CXX object src/CMakeFiles/mmseqs-framework.dir/util/extractdomains.cpp.o; [ 74%] Building CXX object src/CMakeFiles/mmseqs-framework.dir/util/extractorfs.cpp.o; [ 74%] Building CXX object src/CMakeFiles/mmseqs-framework.dir/util/orftocontig.cpp.o; [ 74%] Building CXX object src/CMakeFiles/mmseqs-framework.dir/util/touchdb.cpp.o; [ 75%] Building CXX object src/CMakeFiles/mmseqs-framework.dir/util/filterdb.cpp.o; [ 75%] Building CXX object src/CMakeFiles/mmseqs-framework.dir/util/gff2db.cpp.o; [ 75%] Building CXX object src/CMakeFiles/mmseqs-framework.dir/util/renamedbkeys.cpp.o; [ 76%] Building CXX object src/CMakeFiles/mmseqs-framework.dir/util/masksequence.cpp.o; [ 76%] Building CXX object src/CMakeFiles/mmseqs-framework.dir/util/maskbygff.cpp.o; [ 77%] Building CXX object src/CMakeFiles/mmseqs-framework.dir/util/mergeclusters.cpp.o; [ 77%] Building CXX object src/CMakeFiles/mmseqs-framework.dir/util/mergeresultsbyset.cpp.o; [ 77%] Building CXX object src/CMakeFiles/mmseqs-framework.dir/util/mergedbs.cpp.o; [ 78%] Building CXX object src/CMakeFiles/mmseqs-framework.dir/util/msa2profile.cpp.o; [ 78%] Building CXX object src/CMakeFiles/mmseqs-framework.dir/util/msa2result.cpp.o; [ 79%] Building CXX object src/CMakeFiles/mmseqs-framework.dir/util/nrtotaxmapping.cpp.o; [ 79%] Building CXX object src/CMakeFiles/mmseqs-framework.dir/util/countkmer.cpp.o; [ 79%] Building CXX object src/CMakeFiles/mmseqs-framework.dir/util/pairaln.cpp.o; [ 80%] Building CXX object src/CMakeFiles/mmseqs-framework.dir/util/prefixid.cpp.o; [ 80%] Building CXX object src/CMakeFiles/mmseqs-framework.dir/util/profile2pssm.cpp.o; [ 80%] Building CXX object src/CMakeFiles/mmseqs-framework.dir/util/profile2neff.cpp.o; [ 81%] Building CXX object ,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/679#issuecomment-1461630791:21166,mask,maskbygff,21166,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/679#issuecomment-1461630791,1,['mask'],['maskbygff']
Availability,"d 	0; Threads 	72; Verbosity 	3; Taxon blacklist 	12908:unclassified sequences,28384:other sequences; Substitution matrix 	nucl:nucleotide.out,aa:blosum62.out; Add backtrace 	false; Alignment mode 	1; Alignment mode 	0; Allow wrapped scoring 	false; E-value threshold 	1; Seq. id. threshold 	0; Min alignment length 	0; Seq. id. mode 	0; Alternative alignments 	0; Coverage threshold 	0; Coverage mode 	0; Max sequence length 	65535; Compositional bias 	1; Max reject 	5; Max accept 	30; Include identical seq. id. 	false; Preload mode 	0; Pseudo count a 	1; Pseudo count b 	1.5; Score bias 	0; Realign hits 	false; Realign score bias 	-0.2; Realign max seqs 	2147483647; Gap open cost 	nucl:5,aa:11; Gap extension cost 	nucl:2,aa:1; Zdrop 	40; Seed substitution matrix 	nucl:nucleotide.out,aa:VTML80.out; Sensitivity 	2; k-mer length 	0; k-score 	2147483647; Alphabet size 	nucl:5,aa:21; Max results per query 	300; Split database 	0; Split mode 	2; Split memory limit 	0; Diagonal scoring 	true; Exact k-mer matching 	0; Mask residues 	1; Mask lower case residues 	0; Minimum diagonal score 	15; Spaced k-mers 	1; Spaced k-mer pattern 	; Local temporary path 	; Rescore mode 	0; Remove hits by seq. id. and coverage 	false; Sort results 	0; Mask profile 	1; Profile E-value threshold 	0.001; Global sequence weighting 	false; Allow deletions 	false; Filter MSA 	1; Maximum seq. id. threshold 	0.9; Minimum seq. id. 	0; Minimum score per column 	-20; Minimum coverage 	0; Select N most diverse seqs 	1000; Min codons in orf 	30; Max codons in length 	32734; Max orf gaps 	2147483647; Contig start mode 	2; Contig end mode 	2; Orf start mode 	1; Forward frames 	1,2,3; Reverse frames 	1,2,3; Translation table 	1; Translate orf 	0; Use all table starts 	false; Offset of numeric ids 	0; Create lookup 	0; Add orf stop 	false; Overlap between sequences 	0; Sequence split mode 	1; Header split mode 	0; Chain overlapping alignments 	0; Merge query 	1; Search type 	0; Search iterations 	1; Start sensit",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/441#issuecomment-823834129:5869,Mask,Mask,5869,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/441#issuecomment-823834129,2,['Mask'],['Mask']
Availability,"d 0.001; Seq. id. threshold 0; Min alignment length 0; Seq. id. mode 0; Alternative alignments 0; Coverage threshold 0; Coverage mode 0; Max sequence length 65535; Compositional bias 1; Max reject 2147483647; Max accept 2147483647; Include identical seq. id. false; Preload mode 0; Pseudo count a 1; Pseudo count b 1.5; Score bias 0; Realign hits false; Realign score bias -0.2; Realign max seqs 2147483647; Gap open cost nucl:5,aa:11; Gap extension cost nucl:2,aa:1; Zdrop 40; Threads 12; Compressed 1; Verbosity 3; Seed substitution matrix nucl:nucleotide.out,aa:VTML80.out; Sensitivity 5.7; k-mer length 0; k-score 2147483647; Alphabet size nucl:5,aa:21; Max results per query 300; Split database 0; Split mode 2; Split memory limit 0; Diagonal scoring true; Exact k-mer matching 0; Mask residues 1; Mask lower case residues 0; Minimum diagonal score 15; Spaced k-mers 1; Spaced k-mer pattern ; Local temporary path ; Rescore mode 0; Remove hits by seq. id. and coverage false; Sort results 0; Mask profile 1; Profile E-value threshold 0.001; Global sequence weighting false; Allow deletions false; Filter MSA 1; Maximum seq. id. threshold 0.9; Minimum seq. id. 0; Minimum score per column -20; Minimum coverage 0; Select N most diverse seqs 1000; Min codons in orf 30; Max codons in length 32734; Max orf gaps 2147483647; Contig start mode 2; Contig end mode 2; Orf start mode 1; Forward frames 1,2,3; Reverse frames 1,2,3; Translation table 1; Translate orf 0; Use all table starts false; Offset of numeric ids 0; Create lookup 0; Add orf stop false; Overlap between sequences 0; Sequence split mode 1; Header split mode 0; Chain overlapping alignments 0; Merge query 1; Search type 0; Search iterations 1; Start sensitivity 4; Search steps 1; Exhaustive search mode false; Filter results during exhaustive search 0; Strand selection 1; LCA search mode false; Disk space limit 0; MPI runner ; Force restart with latest tmp false; Remove temporary files true; Alignment format 0; Format alignment ",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/754#issuecomment-1725129947:1417,Mask,Mask,1417,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/754#issuecomment-1725129947,1,['Mask'],['Mask']
Availability,"de 	0; Max. sequence length 	32000; Max. results per query 	20; Compositional bias 	0; Realign hit 	false; Max Reject 	2147483647; Max Accept 	2147483647; Include identical Seq. Id. 	false; No preload 	false; Early exit 	false; Pseudo count a 	1; Pseudo count b 	1.5; Alphabet size 	13; Kmer per sequence 	20; Mask Residues 	0; K-mer size 	0; Shift hash 	5; Split Memory Limit 	0; Rescore mode 	0; Remove hits by seq.id. and coverage 	false; In substitution scoring mode, performs global alignment along the diagonal	false; Remove Temporary Files 	false; Sets the MPI runner 	. Program call:; panproteome.db tmp/425628692068579862/linclust/13628666274102407548/pref --sub-mat blosum62.out --alph-size 13 --min-seq-id 0.8 --kmer-per-seq 20 --mask 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 32000 --hash-shift 5 --split-memory-limit 0 --threads 10 -v 3 . MMseqs Version: 	GITDIR-NOTFOUND; Sub Matrix 	blosum62.out; Alphabet size 	13; Seq. Id Threshold 	0.8; Kmer per sequence 	20; Mask Residues 	0; Coverage Mode 	0; K-mer size 	0; Coverage threshold 	0.8; Max. sequence length	32000; Shift hash 	5; Split Memory Limit 	0; Threads 	10; Verbosity 	3. Alphabet size: 13 k-mer size: 10; V -> I; M -> L; Q -> E; T -> S; R -> K; Y -> F; S -> A; N -> D; Reduced amino acid alphabet:; A C D E F G H I K L P W X ; Checking requirements; Needed memory (795683200 byte) of total memory (365681560780 byte); Process file into 1 parts; Generate k-mers list 0; ...................................................................................................	1 Mio. sequences processed; ...................................................................................................	2 Mio. sequences processed; ................................................; Time for fill: 0 h 0 m 14s; Done.; Sort kmer ... Done.; Time for sort: 0 h 0 m 4s; Sort by rep. sequence ... Done; Time for sort: 0 h 0 m 2s; Time for fill: 0 h 0 m 0s; Time for merging files: 0 h 0 m 2 s; Time for processing: 0 h 0 m 23s; Rescore dia",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/88#issuecomment-391976251:95418,Mask,Mask,95418,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/88#issuecomment-391976251,1,['Mask'],['Mask']
Availability,"de only extendable false; Skip repeating k-mers false. Set cluster sensitivity to -s 1.000000; Set cluster mode SET COVER; Set cluster iterations to 1; linclust DB_in/shuffle_in DB_clustered/tmp/17526443716087640986/clu_redundancy DB_clustered/tmp/17526443716087640986/linclust --cluster-mode 0 --max-iterations 1000 --similarity-type 2 --threads 16 --compressed 0 -v 3 --sub-mat nucl:nucleotide.out,aa:blosum62.out -a 0 --alignment-mode 3 --wrapped-scoring 0 -e 0.001 --min-seq-id 0.9 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 0 --realign 0 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --zdrop 40 --alph-size nucl:5,aa:13 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 -k 0 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --rescore-mode 0 --filter-hits 0 --sort-results 0 --remove-tmp-files 0 --force-reuse 0. kmermatcher DB_in/shuffle_in DB_clustered/tmp/17526443716087640986/linclust/4509971647793470292/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-id 0.9 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 16 --compressed 0 -v 3. kmermatcher DB_in/shuffle_in DB_clustered/tmp/17526443716087640986/linclust/4509971647793470292/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-id 0.9 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-memory-li",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/398#issuecomment-767060093:2623,mask,mask,2623,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/398#issuecomment-767060093,2,['mask'],"['mask', 'mask-lower-case']"
Availability,"default matrix with the value ""5"" (except for -1 in X) and that died(!). So that makes me think there is something magic about not being allowed to make diagonal too uniform. . Matrix gen code (modify disperse parameter). ```; import random; alph=""A C D E F G H I K L M N P Q R S T V W Y X"".split(). disperse=0.7; print("" A C D E F G H I K L M N P Q R S T V W Y X""); #print("""",*alph,sep="" ""); for idx,l in enumerate(alph):; scores=[random.uniform(-1.0-disperse,-1.0+disperse) for _ in alph]; if l!=""X"":; scores[idx]=random.uniform(7.0-disperse,7.0+disperse); else:; scores[idx]=random.uniform(-1.0-disperse,-1.0+disperse); print(l,*(""{0:.4f}"".format(s) for s in scores),sep="" ""); ```. Then `identity.out` is produced by `python3 print_identity.py | ../MMseqs2/util/format_substitution_matrix.R > identity.out`. MMseqs call is; 1. `mmseqs createdb data.fasta mydb/mmdb --dbtype 1`; 2. `mmseqs createindex mydb/mmdb mydb/tmp -k 5 --seed-sub-mat identity.out --split-memory-limit 9G -s 1.0 --comp-bias-corr 0 --mask 0`. And here's the output of the 2nd command:. ```; Create dir eu-all-2020-02-06/mmseqs-EN-partial-2020-03-26-16-37-04/tmp; createindex eu-all-2020-02-06/mmseqs-EN-partial-2020-03-26-16-37-04/mmdb eu-all-2020-02-06/mmseqs-EN-partial-2020-03-26-16-37-04/tmp -k 5 --seed-sub-mat identity.out --split-memory-limit 9G -s 1.0 --comp-bias-corr 0 --mask 0 . MMseqs Version: 	12c499dcd647fb0d1c799bc5c6f9f25328ca3e09; Seed substitution matrix 	nucl:identity.out,aa:identity.out; k-mer length 	5; Alphabet size 	nucl:5,aa:21; Compositional bias 	0; Max sequence length 	65535; Max results per query 	300; Mask residues 	0; Mask lower case residues 	0; Spaced k-mers 	1; Spaced k-mer pattern 	; Sensitivity 	1; k-score 	0; Check compatible 	0; Search type 	0; Split database 	0; Split memory limit 	9G; Verbosity 	3; Threads 	8; Min codons in orf 	30; Max codons in length 	32734; Max orf gaps 	2147483647; Contig start mode 	2; Contig end mode 	2; Orf start mode 	1; Forward frames 	1,2,3; Reverse",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/293#issuecomment-604476526:1198,mask,mask,1198,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/293#issuecomment-604476526,1,['mask'],['mask']
Availability,e 5; K-score 2147483647; Alphabet size 21; Max. sequence length 65535; Max. results per query 300; Offset result 0; Split DB 0; Split mode 2; Split Memory Limit 0; Coverage threshold 0; Coverage Mode 0; Compositional bias 1; Diagonal Scoring 1; Exact k-mer matching 0; Mask Residues 1; Minimum Diagonal score 15; Include identical Seq. Id. false; Spaced Kmer 1; Preload mode 0; Pseudo count a 1; Pseudo count b 1.5; Spaced k-mer pattern ; Local temporary path ; Threads 8; Compressed 0; Verbosity 3. Initialising data structures...; Using 8 threads.; Could not find precomputed index. Compute index.; Touch data file mmseqs_dir/profile/Tenericutes_profile ... Done.; Substitution matrices...; Substitution matrices...; Use kmer size 5 and split 1 using Query split mode.; Needed memory (1005554861 byte) of total memory (487828463616 byte); Target database: mmseqs_dir/profile/Tenericutes_profile(Size: 8162); Index table k-mer threshold: 90; Index table: counting k-mers... Index table: Masked residues: 0; Index table: fill... Index table: removing duplicate entries...; Index table init done. DB statistic; Entries: 293010879; DB Size: 1790738082 (byte); Avg Kmer Size: 71.7443; Top 10 Kmers; KKKKK 1557; KKKNK 1519; KKKKN 1416; NNNNN 1398; KKKNN 1359; KNKNN 1349; NKNNN 1320; KNNNN 1306; KKNKN 1210; NNINN 1188; Min Kmer Size: 0; Empty list: 884115. Time for index table init: 0h 1m 32s 319ms; Query database type: Aminoacid; Target database type: Profile; Time for init: 0h 1m 32s 393ms; Query database: query_dbs/1000562_0(size=1370); Process prefiltering step 1 of 1. k-mer similarity threshold: 90; k-mer match probability: 0. Starting prefiltering scores calculation (step 1 of 1); Query db start 1 to 1370; Target db start 1 to 8162. 0 k-mers per position.; 32539 DB matches per sequence.; 0 Overflows.; 160 sequences passed prefiltering per query sequence.; Median result list size: 149; 0 sequences with 0 size result lists. Time for prefiltering scores calculation: 0h 0m 0s 776ms; Time ,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/164#issuecomment-463134521:4206,Mask,Masked,4206,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/164#issuecomment-463134521,1,['Mask'],['Masked']
Availability,"e blosum55.out to /Users/moorer/Downloads/mmseqs2/src/generatedfiles/blosum55.out.h; -- Compile blosum60.out to /Users/moorer/Downloads/mmseqs2/src/generatedfiles/blosum60.out.h; -- Compile blosum62.out to /Users/moorer/Downloads/mmseqs2/src/generatedfiles/blosum62.out.h; -- Compile blosum65.out to /Users/moorer/Downloads/mmseqs2/src/generatedfiles/blosum65.out.h; -- Compile blosum70.out to /Users/moorer/Downloads/mmseqs2/src/generatedfiles/blosum70.out.h; -- Compile blosum75.out to /Users/moorer/Downloads/mmseqs2/src/generatedfiles/blosum75.out.h; -- Compile blosum80.out to /Users/moorer/Downloads/mmseqs2/src/generatedfiles/blosum80.out.h; -- Compile blosum85.out to /Users/moorer/Downloads/mmseqs2/src/generatedfiles/blosum85.out.h; -- Compile blosum90.out to /Users/moorer/Downloads/mmseqs2/src/generatedfiles/blosum90.out.h; -- Compile blosum95.out to /Users/moorer/Downloads/mmseqs2/src/generatedfiles/blosum95.out.h; -- Compile cascaded_clustering.sh to /Users/moorer/Downloads/mmseqs2/src/generatedfiles/cascaded_clustering.sh.h; -- Compile clustering.sh to /Users/moorer/Downloads/mmseqs2/src/generatedfiles/clustering.sh.h; -- Compile update_clustering.sh to /Users/moorer/Downloads/mmseqs2/src/generatedfiles/update_clustering.sh.h; -- Configuring done; -- Generating done; -- Build files have been written to: /Users/moorer/Downloads/mmseqs2/build; Zebulon | build -> make; Scanning dependencies of target prefiltering; [ 0%] Building CXX object src/prefiltering/CMakeFiles/prefiltering.dir/ExtendedSubstitutionMatrix.cpp.o; [ 1%] Building CXX object src/prefiltering/CMakeFiles/prefiltering.dir/Indexer.cpp.o; [ 2%] Building CXX object src/prefiltering/CMakeFiles/prefiltering.dir/KmerGenerator.cpp.o; [ 3%] Building CXX object src/prefiltering/CMakeFiles/prefiltering.dir/Main.cpp.o; /Users/moorer/Downloads/mmseqs2/src/prefiltering/Main.cpp: In function 'int prefilter(int, const char**, const Command&)':; /Users/moorer/Downloads/mmseqs2/src/prefiltering/Main.cpp:72:12: warning",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/7#issuecomment-265028472:3958,Down,Downloads,3958,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/7#issuecomment-265028472,1,['Down'],['Downloads']
Availability,"e for processing: 0h 0m 0s 0ms; mvdb tmp/9700814981231218113/search_tmp/10627605686170015473/search/aln_merge_new tmp/9700814981231218113/search_tmp/10627605686170015473/search/aln_merge -v 3 . Time for processing: 0h 0m 0s 0ms; createsubdb tmp/9700814981231218113/search_tmp/10627605686170015473/search/order_1 tmp/9700814981231218113/search_tmp/10627605686170015473/search/input_0 tmp/9700814981231218113/search_tmp/10627605686170015473/search/input_1 -v 3 --subdb-mode 1 . Time for merging to input_1: 0h 0m 0s 267ms; Time for processing: 0h 0m 0s 790ms; prefilter tmp/9700814981231218113/search_tmp/10627605686170015473/search/input_1 /d/Databases/Kegg/sram/mmseqs/kegg tmp/9700814981231218113/search_tmp/10627605686170015473/search/pref_2 --sub-mat nucl:nucleotide.out,aa:blosum62.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -k 0 --k-score 2147483647 --alph-size 21 --max-seq-len 65535 --max-seqs 1 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 40 --compressed 0 -v 3 -s 6.0 . Query database size: 2271004 type: Aminoacid; Estimated memory consumption: 68G; Target database size: 13003941 type: Aminoacid; Index table k-mer threshold: 118 at k-mer size 7 ; Index table: counting k-mers; [=================================================================] 13.00M 1m 31s 294ms; Index table: Masked residues: 71357266; Index table: fill; [=================================================================] 13.00M 1m 21s 848ms; Index statistics; Entries: 5094244039; DB size: 38915 MB; Avg k-mer size: 3.979878; Top 10 k-mers; SGQQRIA	74997; GPGGKLL	59639; GQQVARA	45640; GGQRVAR	38490; GKTLRAG	27665; LLGPGKT	25908; ALGSGKS	22863; GGRRVAR	21815; GRFVVEV	21110; AIGSGKS	20435; Time for index table init: 0h 3m 15s 901ms; Process prefiltering step 1 of 1. k-mer similarity ",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/231#issuecomment-535253491:11704,mask,mask,11704,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/231#issuecomment-535253491,2,['mask'],"['mask', 'mask-lower-case']"
Availability,"e haldane exited on signal 11 (Segmentation fault).; --------------------------------------------------------------------------. ```. It failed in the last step. ```; mpirun -np 4 cstranslate -i subset.MSA_ca3m.ffdata -o subset.MSA_cs219 -A /home/linuxbrew/anaconda3/data/cs219.lib -D /home/linuxbrew/anaconda3/data/context_data.lib -x 0.4 -c 4 -I ca3m; ```. The complete steps I used are described in this script. ```; #!/usr/bin/env bash. ## define files and parameters here; ## sequence file name like ""NAME.fa"" use only the base name NAME and the script will add the ""*.fa"" grob; BASE=""subset""; HH_CONTEXT_DATA=""/home/linuxbrew/anaconda3/data/context_data.lib""; HH_LIB=""/home/linuxbrew/anaconda3/data/cs219.lib""; THREADS=4; SENSITIVITY=7.5; IDENTITY=0; COVERAGE=0.8; EVALUE=0.00001. CLU_MODE=1. FILE=""${BASE}.fa""; MMSEQDB=""${BASE}DB""; MMSEQPREF=""${BASE}PREFILTER""; MMSEQALN=""${BASE}ALN""; MMSEQCLU=""${BASE}CLU""; MMSEQMSA=""${BASE}MSA""; FILELOG=""job.log"". echo '#:: CREATEDB' &>> ${FILELOG} ;; mmseqs createdb ${FILE} ${MMSEQDB} &>> ${FILELOG}. echo '#:: PREFILTER' &>> ${FILELOG} ;; mmseqs prefilter ${MMSEQDB} ${MMSEQDB} ${MMSEQPREF} -s ${SENSITIVITY} --threads ${THREADS} &>> ${FILELOG}. echo '#:: ALING' &>> ${FILELOG} ;; mmseqs align ${MMSEQDB} ${MMSEQDB} ${MMSEQPREF} ${MMSEQALN} -e ${EVALUE} \; --min-seq-id ${IDENTITY} -c ${COVERAGE} --threads ${THREADS} &>> ${FILELOG}; echo '#:: CLUST' &>> ${FILELOG} ;; mmseqs clust ${MMSEQDB} ${MMSEQALN} ${MMSEQCLU} --cluster-mode ${CLU_MODE} --threads ${THREADS} &> ${FILELOG} &>> ${FILELOG}. echo '#:: RESULT2MSA' &>> ${FILELOG} ;; mmseqs result2msa ${MMSEQDB} ${MMSEQDB} ${MMSEQCLU} ${MMSEQMSA} --compress --threads ${THREADS} &>> ${FILELOG}. echo '#:: CREATE LINKS' &>> ${FILELOG} ;; ln -s ${MMSEQDB}_h ${MMSEQMSA}_header.ffdata &>> ${FILELOG}; ln -s ${MMSEQDB}_h.index ${MMSEQMSA}_header.ffindex &>> ${FILELOG}; ln -s ${MMSEQDB} ${MMSEQMSA}_sequence.ffdata &>> ${FILELOG}; ln -s ${MMSEQDB}.index ${MMSEQMSA}_sequence.ffindex &>> ${FILELOG}. echo '#:",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/174#issuecomment-492826081:1920,echo,echo,1920,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/174#issuecomment-492826081,1,['echo'],['echo']
Availability,"eatProbs (this=0x7ffffffbaaa0, letterProbs=0x555556582704); at /mnt/disks/kc-ssd/MMseqs2/src/commons/tantan.cpp:373; #2 0x0000555555a8bf6b in tantan::getProbabilities (; seqBeg=0x5555564e06c0 ""\025\025\025\025\025\025\025\n\f\003\v\020\f\016\020\020\016\017"", seqEnd=0x5555564e07b9 """",; maxRepeatOffset=50, likelihoodRatioMatrix=0x55555643d8f0, repeatProb=0.0050000000000000001, repeatEndProb=0.050000000000000003,; repeatOffsetProbDecay=0.90000000000000002, firstGapProb=0, otherGapProb=0, probabilities=0x555556582700); at /mnt/disks/kc-ssd/MMseqs2/src/commons/tantan.cpp:470; #3 0x0000555555a8be5f in tantan::maskSequences (; seqBeg=0x5555564e06c0 ""\025\025\025\025\025\025\025\n\f\003\v\020\f\016\020\020\016\017"", seqEnd=0x5555564e07b9 """",; maxRepeatOffset=50, likelihoodRatioMatrix=0x55555643d8f0, repeatProb=0.0050000000000000001, repeatEndProb=0.050000000000000003,; repeatOffsetProbDecay=0.90000000000000002, firstGapProb=0, otherGapProb=0, minMaskProb=0.89999997615814209,; maskTable=0x7ffffffdc530 '\024' <repeats 200 times>...) at /mnt/disks/kc-ssd/MMseqs2/src/commons/tantan.cpp:449; #4 0x000055555597de7b in PSSMMasker::mask (this=0x7ffffffbaca0, centerSequence=..., maskProb=0.899999976, pssmRes=...); at /mnt/disks/kc-ssd/MMseqs2/src/alignment/PSSMMasker.h:25; #5 0x00005555559f916b in result2profile () at /mnt/disks/kc-ssd/MMseqs2/src/util/result2profile.cpp:262; #6 0x00007ffff7c7c4c2 in GOMP_parallel () from /lib/x86_64-linux-gnu/libgomp.so.1; #7 0x00005555559f86b7 in result2profile (argc=54, argv=0x7fffffffe138, command=..., returnAlnRes=false); at /mnt/disks/kc-ssd/MMseqs2/src/util/result2profile.cpp:140; #8 0x00005555559f885c in result2profile (argc=54, argv=0x7fffffffe138, command=...); at /mnt/disks/kc-ssd/MMseqs2/src/util/result2profile.cpp:311; #9 0x00005555557ea0b5 in runCommand (p=0x55555641eac0, argc=54, argv=0x7fffffffe138); at /mnt/disks/kc-ssd/MMseqs2/src/commons/Application.cpp:40; #10 0x00005555557eafea in main (argc=56, argv=0x7fffffffe128) at /mnt/disk",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/592#issuecomment-1214486961:1548,mask,maskTable,1548,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/592#issuecomment-1214486961,1,['mask'],['maskTable']
Availability,ect src/CMakeFiles/mmseqs-framework.dir/util/createtsv.cpp.o; [ 72%] Building CXX object src/CMakeFiles/mmseqs-framework.dir/util/diffseqdbs.cpp.o; [ 72%] Building CXX object src/CMakeFiles/mmseqs-framework.dir/util/expandaln.cpp.o; [ 73%] Building CXX object src/CMakeFiles/mmseqs-framework.dir/util/extractalignedregion.cpp.o; [ 73%] Building CXX object src/CMakeFiles/mmseqs-framework.dir/util/extractdomains.cpp.o; [ 74%] Building CXX object src/CMakeFiles/mmseqs-framework.dir/util/extractorfs.cpp.o; [ 74%] Building CXX object src/CMakeFiles/mmseqs-framework.dir/util/orftocontig.cpp.o; [ 74%] Building CXX object src/CMakeFiles/mmseqs-framework.dir/util/touchdb.cpp.o; [ 75%] Building CXX object src/CMakeFiles/mmseqs-framework.dir/util/filterdb.cpp.o; [ 75%] Building CXX object src/CMakeFiles/mmseqs-framework.dir/util/gff2db.cpp.o; [ 75%] Building CXX object src/CMakeFiles/mmseqs-framework.dir/util/renamedbkeys.cpp.o; [ 76%] Building CXX object src/CMakeFiles/mmseqs-framework.dir/util/masksequence.cpp.o; [ 76%] Building CXX object src/CMakeFiles/mmseqs-framework.dir/util/maskbygff.cpp.o; [ 77%] Building CXX object src/CMakeFiles/mmseqs-framework.dir/util/mergeclusters.cpp.o; [ 77%] Building CXX object src/CMakeFiles/mmseqs-framework.dir/util/mergeresultsbyset.cpp.o; [ 77%] Building CXX object src/CMakeFiles/mmseqs-framework.dir/util/mergedbs.cpp.o; [ 78%] Building CXX object src/CMakeFiles/mmseqs-framework.dir/util/msa2profile.cpp.o; [ 78%] Building CXX object src/CMakeFiles/mmseqs-framework.dir/util/msa2result.cpp.o; [ 79%] Building CXX object src/CMakeFiles/mmseqs-framework.dir/util/nrtotaxmapping.cpp.o; [ 79%] Building CXX object src/CMakeFiles/mmseqs-framework.dir/util/countkmer.cpp.o; [ 79%] Building CXX object src/CMakeFiles/mmseqs-framework.dir/util/pairaln.cpp.o; [ 80%] Building CXX object src/CMakeFiles/mmseqs-framework.dir/util/prefixid.cpp.o; [ 80%] Building CXX object src/CMakeFiles/mmseqs-framework.dir/util/profile2pssm.cpp.o; [ 80%] Building CXX object s,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/679#issuecomment-1461630791:21078,mask,masksequence,21078,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/679#issuecomment-1461630791,1,['mask'],['masksequence']
Availability,"ed behavior 1"" case. I compiled and ran MMseqs on openSUSE. Running make produced a lot of warnings, I don't know if this is expected and I can provide the output if you want to. The behavior of case 2 and 3 is unchanged. Case 2 still shows only 3 rows and case 3 still results in an error.; Here is the stdout when running case 2 (outer paths obfuscated):. ```; Program call:; /.../fasta.txt DB . MMseqs Version: 	e5e41af867c566f3fffe479d30bfaa10de77517c; Max. sequence length 	32000; Split Seq. by len 	true; Use fasta header 	false; Offset of numeric ids	0; Verbosity 	3. Time for merging files: 0 h 0 m 0 s; Time for merging files: 0 h 0 m 0 s; Program call:; DB . MMseqs Version: 	e5e41af867c566f3fffe479d30bfaa10de77517c; Sub Matrix 	blosum62.out; K-mer size 	0; Alphabet size 	21; Max. sequence length	32000; Split DB 	0; Spaced Kmer 	1; Threads 	4; Verbosity 	3. Substitution matrices...; Use kmer size 6 and split 1 using split mode; Index table: counting k-mers... Index table: Masked residues: 18; Index table: fill...; Index table: removing duplicate entries...; Index table init done. Write 10; Write 20; Write 60; Write 70; Write 80; Write 30; Write 40; Write 5; Write 0; Write MMSEQSFFINDEX ; Time for merging files: 0 h 0 m 0 s; Done. ; Program call:; DB DB resultDB tmp -a -s 7.5 . MMseqs Version: 	e5e41af867c566f3fffe479d30bfaa10de77517c; Sub Matrix 	blosum62.out; Add backtrace 	true; Alignment mode 	0; E-value threshold 	0.001; Seq. Id Threshold 	0; Coverage threshold 	0; Max. sequence length 	32000; Max. results per query 	300; Compositional bias 	1; Profile 	false; Realign hit 	false; Max Reject 	2147483647; Max Accept 	2147483647; Include identical Seq. Id. 	false; Threads 	4; Verbosity 	3; Sensitivity 	7.5; K-mer size 	0; K-score 	2147483647; Alphabet size 	21; Offset result 	0; Split DB 	0; Split mode 	2; Diagonal Scoring 	1; Minimum Diagonal score 	15; Spaced Kmer 	1; Profile e-value threshold 	0.001; Use global sequence weighting 	false; Maximum sequence identit",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/12#issuecomment-275107869:1229,Mask,Masked,1229,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/12#issuecomment-275107869,1,['Mask'],['Masked']
Availability,"eload --max-seqs 1000 --num-iterations 3 . MMseqs Version: 	GITDIR-NOTFOUND; Sub Matrix 	blosum62.out; Add backtrace 	true; Alignment mode 	2; E-value threshold 	0.001; Seq. Id Threshold 	0; Seq. Id. Mode 	0; Alternative alignments 	0; Coverage threshold 	0; Coverage Mode 	0; Max. sequence length 	65535; Max. results per query 	1000; Compositional bias 	1; Realign hit 	false; Max Reject 	2147483647; Max Accept 	2147483647; Include identical Seq. Id. 	false; No preload 	true; Pseudo count a 	1; Pseudo count b 	1.5; Score bias 	0; Gap open cost 	11; Gap extension cost 	1; Threads 	48; Verbosity 	3; Sensitivity 	5.7; K-mer size 	0; K-score 	2147483647; Alphabet size 	21; Offset result 	0; Split DB 	0; Split mode 	2; Split Memory Limit 	0; Diagonal Scoring 	1; Exact k-mer matching 	0; Mask Residues 	1; Minimum Diagonal score 	15; Spaced Kmer 	1; Spaced k-mer pattern 	; Rescore mode 	0; Remove hits by seq.id. and coverage 	false; Sort results 	0; In substitution scoring mode, performs global alignment along the diagonal	false; Mask profile 	1; Profile e-value threshold 	0.1; Use global sequence weighting 	false; Filter MSA 	1; Maximum sequence identity threshold 	0.9; Minimum seq. id. 	0; Minimum score per column 	-20; Minimum coverage 	0; Select n most diverse seqs 	1000; Omit Consensus 	false; Min codons in orf 	30; Max codons in length 	32734; Max orf gaps 	2147483647; Contig start mode 	2; Contig end mode 	2; Orf start mode 	0; Forward Frames 	1,2,3; Reverse Frames 	1,2,3; Translation Table 	1; Use all table starts 	false; Offset of numeric ids 	0; Add Orf Stop 	false; Number search iterations 	3; Start sensitivity 	4; Search steps 	1; Run a seq-profile search in slice mode 	0; Sets the MPI runner 	; Remove Temporary Files 	false. Tmp tmpC folder does not exist or is not a directory.; Created dir tmpC; Program call:; prefilter geneC.db genes.db tmpC/10139724895635470572/pref_0 --sub-mat blosum62.out -s 5.7 -k 0 --k-score 2147483647 --alph-size 21 --max-seq-len 65535 -",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/160#issuecomment-461782109:1137,Mask,Mask,1137,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/160#issuecomment-461782109,1,['Mask'],['Mask']
Availability,"eload --max-seqs 1000 --num-iterations 3 . MMseqs Version: 	GITDIR-NOTFOUND; Sub Matrix 	blosum62.out; Add backtrace 	true; Alignment mode 	2; E-value threshold 	0.001; Seq. Id Threshold 	0; Seq. Id. Mode 	0; Alternative alignments 	0; Coverage threshold 	0; Coverage Mode 	0; Max. sequence length 	65535; Max. results per query 	1000; Compositional bias 	1; Realign hit 	false; Max Reject 	2147483647; Max Accept 	2147483647; Include identical Seq. Id. 	false; No preload 	true; Pseudo count a 	1; Pseudo count b 	1.5; Score bias 	0; Gap open cost 	11; Gap extension cost 	1; Threads 	56; Verbosity 	3; Sensitivity 	5.7; K-mer size 	0; K-score 	2147483647; Alphabet size 	21; Offset result 	0; Split DB 	0; Split mode 	2; Split Memory Limit 	0; Diagonal Scoring 	1; Exact k-mer matching 	0; Mask Residues 	1; Minimum Diagonal score 	15; Spaced Kmer 	1; Spaced k-mer pattern 	; Rescore mode 	0; Remove hits by seq.id. and coverage 	false; Sort results 	0; In substitution scoring mode, performs global alignment along the diagonal	false; Mask profile 	1; Profile e-value threshold 	0.1; Use global sequence weighting 	false; Filter MSA 	1; Maximum sequence identity threshold 	0.9; Minimum seq. id. 	0; Minimum score per column 	-20; Minimum coverage 	0; Select n most diverse seqs 	1000; Omit Consensus 	false; Min codons in orf 	30; Max codons in length 	32734; Max orf gaps 	2147483647; Contig start mode 	2; Contig end mode 	2; Orf start mode 	0; Forward Frames 	1,2,3; Reverse Frames 	1,2,3; Translation Table 	1; Use all table starts 	false; Offset of numeric ids 	0; Add Orf Stop 	false; Number search iterations 	3; Start sensitivity 	4; Search steps 	1; Run a seq-profile search in slice mode 	0; Sets the MPI runner 	; Remove Temporary Files 	false. Program call:; prefilter geneC.db genes.db tmpC/13630618462368123119/pref_0 --sub-mat blosum62.out -s 5.7 -k 0 --k-score 2147483647 --alph-size 21 --max-seq-len 65535 --max-seqs 1000 --offset-result 0 --split 0 --split-mode 2 --split-memory-",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/160#issuecomment-461782109:125476,Mask,Mask,125476,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/160#issuecomment-461782109,1,['Mask'],['Mask']
Availability,"ence length 	32000; Max. results per query 	20; Offset result 	0; Split DB 	0; Split mode 	2; Split Memory Limit 	0; Coverage threshold 	0.8; Coverage Mode 	0; Compositional bias 	0; Diagonal Scoring 	0; Mask Residues 	1; Minimum Diagonal score 	0; Include identical Seq. Id.	false; Spaced Kmer 	1; No preload 	false; Early exit 	false; Pseudo count a 	1; Pseudo count b 	1.5; Threads 	10; Verbosity 	3. Initialising data structures...; Using 10 threads.; Could not find precomputed index. Compute index.; Substitution matrices...; Use kmer size 6 and split 1 using Target split mode.; Needed memory (1294083635 byte) of total memory (365681560780 byte); Target database: tmp/425628692068579862/input_step_redundancy(Size: 77285); Query database type: Aminoacid; Target database type: Aminoacid; Time for init: 0 h 0 m 0s. Query database: tmp/425628692068579862/input_step_redundancy(size=77285); Process prefiltering step 1 of 1. Index table: counting k-mers...; .......; Index table: Masked residues: 509041; Index table: fill...; .......; Index table: removing duplicate entries...; Index table init done. DB statistic; Entries: 5293618; DB Size: 543761708 (byte); Avg Kmer Size: 0.0827128; Top 10 Kmers; 	VGRSYW		716; 	DDHLRE		715; 	AVDHFG		715; 	HGFRAK		715; 	KKYDFR		715; 	DFGFEY		715; 	HWRELK		714; 	FRHWLL		714; 	WRYKQL		714; 	APPPRM		714; Min Kmer Size: 0; Empty list: 63197042. Time for index table init: 0 h 0 m 2s. 	k-mers per position = 1.86941, k-mer match probability: 1.66308e-12; k-mer similarity threshold: 130; k-mer match probability: 1.66308e-12. Starting prefiltering scores calculation (step 1 of 1); Query db start 1 to 77285; Target db start 1 to 77285; .......; 1 k-mers per position.; 29464 DB matches per sequence.; 0 Overflows.; 14 sequences passed prefiltering per query sequence.; Median result list size: 20; 0 sequences with 0 size result lists. Time for prefiltering scores calculation: 0 h 0 m 4s; Time for merging files: 0 h 0 m 0 s. Overall time for prefiltering ",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/88#issuecomment-391976251:106877,Mask,Masked,106877,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/88#issuecomment-391976251,1,['Mask'],['Masked']
Availability,"ent length 	0; Seq. id. mode 	0; Alternative alignments 	0; Coverage threshold 	0; Coverage mode 	0; Max sequence length 	65535; Compositional bias 	1; Compositional bias 	1; Max reject 	2147483647; Max accept 	2147483647; Include identical seq. id. 	false; Preload mode 	0; Pseudo count a 	substitution:1.100,context:1.400; Pseudo count b 	substitution:4.100,context:5.800; Score bias 	0; Realign hits 	false; Realign score bias 	-0.2; Realign max seqs 	2147483647; Correlation score weight 	0; Gap open cost 	aa:11,nucl:5; Gap extension cost 	aa:1,nucl:2; Zdrop 	40; Seed substitution matrix 	aa:VTML80.out,nucl:nucleotide.out; Sensitivity 	4; k-mer length 	0; k-score 	seq:2147483647,prof:2147483647; Alphabet size 	aa:21,nucl:5; Max results per query 	300; Split database 	0; Split mode 	2; Split memory limit 	0; Diagonal scoring 	true; Exact k-mer matching 	0; Mask residues 	1; Mask residues probability 	0.9; Mask lower case residues 	0; Minimum diagonal score 	15; Selected taxa; Spaced k-mers 	1; Spaced k-mer pattern; Local temporary path; Rescore mode 	0; Remove hits by seq. id. and coverage 	false; Sort results 	0; Mask profile 	1; Profile E-value threshold 	0.001; Global sequence weighting 	false; Allow deletions 	false; Filter MSA 	1; Use filter only at N seqs 	0; Maximum seq. id. threshold 	0.9; Minimum seq. id. 	0.0; Minimum score per column 	-20; Minimum coverage 	0; Select N most diverse seqs 	1000; Pseudo count mode 	0; Gap pseudo count 	10; Min codons in orf 	30; Max codons in length 	32734; Max orf gaps 	2147483647; Contig start mode 	2; Contig end mode 	2; Orf start mode 	1; Forward frames 	1,2,3; Reverse frames 	1,2,3; Translation table 	1; Translate orf 	0; Use all table starts 	false; Offset of numeric ids 	0; Create lookup 	0; Add orf stop 	false; Overlap between sequences 	0; Sequence split mode 	1; Header split mode 	0; Chain overlapping alignments 	0; Merge query 	1; Search type 	0; Exhaustive search mode 	false; Filter results during exhaustive search	",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/779#issuecomment-1872491640:1613,Mask,Mask,1613,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/779#issuecomment-1872491640,1,['Mask'],['Mask']
Availability,ents calculated.; 258 sequence pairs passed the thresholds (0.271008 of overall calculated).; 258 hits per query sequence.; Time for processing: 0h 0m 15s 798ms; Program call:; mergedbs tmpC/10139724895635470572/profile_0 tmpC/10139724895635470572/aln_new tmpC/10139724895635470572/aln_0 tmpC/10139724895635470572/aln_1 . MMseqs Version:	GITDIR-NOTFOUND; Merge prefixes	; Verbosity 	3. Merging the results to tmpC/10139724895635470572/aln_new; Done; Time for merging files: 0h 0m 0s 7ms; Time for processing: 0h 0m 0s 23ms; Program call:; result2profile tmpC/10139724895635470572/profile_0 genes.db tmpC/10139724895635470572/aln_0 tmpC/10139724895635470572/profile_1 --sub-mat blosum62.out --mask-profile 1 --e-profile 0.1 --comp-bias-corr 1 --wg 0 --filter-msa 1 --max-seq-id 0.9 --qid 0 --qsc -20 --cov 0 --diff 1000 --pca 0 --pcb 1.5 --omit-consensus 0 --no-preload 1 --gap-open 11 --gap-extend 1 --threads 48 -v 3 . MMseqs Version: 	GITDIR-NOTFOUND; Sub Matrix 	blosum62.out; Mask profile 	1; Profile e-value threshold 	0.1; Compositional bias 	1; Use global sequence weighting 	false; Filter MSA 	1; Maximum sequence identity threshold	0.9; Minimum seq. id. 	0; Minimum score per column 	-20; Minimum coverage 	0; Select n most diverse seqs 	1000; Pseudo count a 	0; Pseudo count b 	1.5; Omit Consensus 	false; No preload 	true; Gap open cost 	11; Gap extension cost 	1; Threads 	48; Verbosity 	3. Start computing profiles.; Query database type: Profile; Target database type: Aminoacid; Time for merging files: 0h 0m 0s 112ms; Time for merging files: 0h 0m 0s 7ms. Done.; Time for processing: 0h 0m 16s 74ms; Program call:; prefilter tmpC/10139724895635470572/profile_1 genes.db tmpC/10139724895635470572/pref_2 --sub-mat blosum62.out -s 5.7 -k 0 --k-score 2147483647 --alph-size 21 --max-seq-len 65535 --max-seqs 1000 --offset-result 0 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --min-ungapped-score 15 -,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/160#issuecomment-461782109:87803,Mask,Mask,87803,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/160#issuecomment-461782109,1,['Mask'],['Mask']
Availability,"eq-id 0.90 --kmer-per-seq 40 -c 0.9. MMseqs Version: 290668474611312a94a868bf041b38c8618f5ef6; Cluster mode 0; Max connected component depth 1000; Similarity type 2; Threads 160; Compressed 0; Verbosity 3; Substitution matrix nucl:nucleotide.out,aa:blosum62.out; Add backtrace false; Alignment mode 2; Allow wrapped scoring false; E-value threshold 0.001; Seq. id. threshold 0.9; Min alignment length 0; Seq. id. mode 0; Alternative alignments 0; Coverage threshold 0.9; Coverage mode 0; Max sequence length 65535; Compositional bias 1; Realign hits false; Max reject 2147483647; Max accept 2147483647; Include identical seq. id. false; Preload mode 0; Pseudo count a 1; Pseudo count b 1.5; Score bias 0; Gap open cost 11; Gap extension cost 1; Zdrop 40; Alphabet size nucl:5,aa:21; k-mers per sequence 40; Spaced k-mers 0; Spaced k-mer pattern; Scale k-mers per sequence nucl:0.200,aa:0.000; Adjust k-mer length false; Mask residues 0; Mask lower case residues 0; k-mer length 0; Shift hash 67; Split memory limit 0; Include only extendable false; Skip repeating k-mers false; Rescore mode 0; Remove hits by seq. id. and coverage false; Sort results 0; Remove temporary files false; Force restart with latest tmp false; MPI runner. Set cluster mode SET COVER.; kmermatcher inDB tmp/18375844090983922724/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-id 0.9 --kmer-per-seq 40 --spaced-kmer-mode 0 --kmer-per-seq-scale; nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.9 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-mul; ti-kmer 0 --threads 160 --compressed 0 -v 3. kmermatcher inDB tmp/18375844090983922724/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-id 0.9 --kmer-per-seq 40 --spaced-kmer-mode 0 --kmer-per-seq-scale; nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.9 --max-seq-len",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/303#issuecomment-625917311:1339,Mask,Mask,1339,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/303#issuecomment-625917311,2,['Mask'],['Mask']
Availability,"er query 	300; Offset result 	0; Split DB 	0; Split mode 	2; Split Memory Limit 	0; Coverage threshold 	0.8; Coverage Mode 	0; Compositional bias 	0; Diagonal Scoring 	0; Exact k-mer matching 	0; Mask Residues 	1; Minimum Diagonal score 	0; Include identical Seq. Id.	false; Spaced Kmer 	1; No preload 	false; Early exit 	false; Pseudo count a 	1; Pseudo count b 	1.5; Threads 	36; Verbosity 	3. Initialising data structures...; Using 36 threads.; Could not find precomputed index. Compute index.; Substitution matrices...; Use kmer size 6 and split 1 using Target split mode.; Needed memory (1100935225 byte) of total memory (365681509171 byte); Target database: /tmp/clu//9559457551393989073/input_step_redundancy(Size: 23030); Query database type: Aminoacid; Target database type: Aminoacid; Time for init: 0 h 0 m 0s. Query database: /tmp/clu//9559457551393989073/input_step_redundancy(size=23030); Process prefiltering step 1 of 1. Index table: counting k-mers...; ..; Index table: Masked residues: 81271; Index table: fill...; ..; Index table: removing duplicate entries...; Index table init done. DB statistic; Entries: 848571; DB Size: 517091426 (byte); Avg Kmer Size: 0.0132589; Top 10 Kmers; 	YTGTPK		215; 	PGFVVC		201; 	TNMHCE		201; 	ISYEFH		201; 	FMHLRK		201; 	KKEEWK		201; 	WKREKP		201; 	MTTCKQ		201; 	IFTFHT		201; 	KKKEAW		199; Min Kmer Size: 0; Empty list: 63445692. Time for index table init: 0h 0m 1s. 	k-mers per position = 1.73369, k-mer match probability: 6.36499e-14; k-mer similarity threshold: 130; k-mer match probability: 6.36499e-14. Starting prefiltering scores calculation (step 1 of 1); Query db start 1 to 23030; Target db start 1 to 23030; ..; 1 k-mers per position.; 976 DB matches per sequence.; 0 Overflows.; 25 sequences passed prefiltering per query sequence.; Median result list size: 2; 0 sequences with 0 size result lists. Time for prefiltering scores calculation: 0 h 0 m 0s; Time for merging files: 0 h 0 m 0 s. Overall time for prefiltering run: 0 h 0 m 1s; ",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/88#issuecomment-401138700:34892,Mask,Masked,34892,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/88#issuecomment-401138700,1,['Mask'],['Masked']
Availability,"eredSeparately /ebio/abt3_scratch/nyoungblut/Struo2_122419461619/cluster_update/11607510948275416679/cluster/3119053913462861916/input_step_redundancy -v 3 --subdb-mode 1. Time for merging to input_step_redundancy: 0h 0m 0s 1ms; Time for processing: 0h 0m 0s 4ms; prefilter /ebio/abt3_scratch/nyoungblut/Struo2_122419461619/cluster_update/11607510948275416679/cluster/3119053913462861916/input_step_redundancy /ebio/abt3_scratch/nyoungblut/Struo2_122419461619/cluster_update/11607510948275416679/cluster/3119053913462861916/input_step_redundancy /ebio/abt3_scratch/nyoungblut/Struo2_122419461619/cluster_update/11607510948275416679/cluster/3119053913462861916/pref_step0 --sub-mat nucl:nucleotide.out,aa:blosum62.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -s 1 -k 0 --k-score 2147483647 --alph-size 21 --max-seq-len 65535 --max-seqs 300 --split 0 --split-mode 2 --split-memory-limit 0 -c 0.8 --cov-mode 0 --comp-bias-corr 0 --diag-score 0 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 0 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 12 --compressed 0 -v 3. Query database size: 6 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 6 type: Aminoacid; Index table k-mer threshold: 154 at k-mer size 6; Index table: counting k-mers; [=================================================================] 6 0s 1ms; Index table: Masked residues: 0; Index table: fill; [=================================================================] 6 0s 0ms; Index statistics; Entries: 237; DB size: 488 MB; Avg k-mer size: 0.000004; Top 10 k-mers; LHNWEA	1; NCKEQA	1; VLRCRA	1; VTFMDC	1; RAHQKC	1; KRKVLC	1; ESKRNC	1; KRHLRC	1; GKKFSC	1; HYKKSC	1; Time for index table init: 0h 0m 0s 897ms; Process prefiltering step 1 of 1. k-mer similarity threshold: 154; Starting prefiltering scores calculation (step 1 of 1); Query db start 1 to 6; Target db start 1 to 6; [=======================================================",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/333#issuecomment-663145167:18909,mask,mask,18909,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/333#issuecomment-663145167,2,['mask'],"['mask', 'mask-lower-case']"
Availability,"es --threads 24 clusters_rep-seqs_db_14_30 /ebio/abt3_projects/databases_no-backup/uniclust/mmseqs2_8.fac81/uniclust90_2018_08_db clusters_rep-seqs.part-14_tax_db tmp_part-14. MMseqs Version: 	9.d36de; Substitution matrix 	blosum62.out; Add backtrace 	false; Alignment mode 	2; E-value threshold 	1e-05; Seq. id. threshold 	0; Min. alignment length 	0; Seq. id. mode 	0; Alternative alignments 	0; Coverage threshold 	0; Coverage mode 	0; Max sequence length 	65535; Compositional bias 	1; Realign hits 	false; Max reject 	2147483647; Max accept 	2147483647; Include identical seq. id. 	false; Preload mode 	0; Pseudo count a 	1; Pseudo count b 	1.5; Score bias 	0; Gap open cost 	11; Gap extension cost 	1; Threads 	24; Compressed 	0; Verbosity 	3; Seed substitution matrix 	VTML80.out; Sensitivity 	5.7; K-mer size 	0; K-score 	2147483647; Alphabet size 	21; Max results per query 	200; Previous max results per query; Split database 	0; Split mode 	2; Split memory limit 	0; Diagonal scoring 	1; Exact k-mer matching 	0; Mask residues 	1; Mask lower case residues 	0; Minimum diagonal score 	15; Spaced k-mers 	1; Spaced k-mer pattern; Local temporary path; Rescore mode 	0; Remove hits by seq. id. and coverage 	false; Sort results 	0; Global diagonal rescoring 	false; Mask profile 	1; Profile e-value threshold 	0.001; Use global sequence weighting 	false; Filter MSA 	1; Maximum seq. id. threshold 	0.9; Minimum seq. id. 	0; Minimum score per column 	-20; Minimum coverage 	0; Select N most diverse seqs 	1000; Omit consensus 	false; Min codons in orf 	30; Max codons in length 	32734; Max orf gaps 	2147483647; Contig start mode 	2; Contig end mode 	2; Orf start mode 	1; Forward frames 	1,2,3; Reverse frames 	1,2,3; Translation table 	1; Use all table starts 	false; Offset of numeric ids 	0; Add orf stop 	false; Chain overlapping alignments 	0; Merge query 	1; Search type 	0; Number search iterations 	1; Start sensitivity 	4; Search steps 	1; Run a seq-profile search in slice mode	fals",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/221#issuecomment-515936587:1474,Mask,Mask,1474,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/221#issuecomment-515936587,2,['Mask'],['Mask']
Availability,es processed; ...................................................................................................	38 Mio. sequences processed; ...................................................................................................	39 Mio. sequences processed; ...................................................................................................	40 Mio. sequences processed; ...................................................................................................	41 Mio. sequences processed; ...................................................................................................	42 Mio. sequences processed; ...................................................................................................	43 Mio. sequences processed; ...................................................................................................	44 Mio. sequences processed; .....................................................; Index table: Masked residues: 178364514; Index table: fill...; ...................................................................................................	1 Mio. sequences processed; ...................................................................................................	2 Mio. sequences processed; ...................................................................................................	3 Mio. sequences processed; ...................................................................................................	4 Mio. sequences processed; ...................................................................................................	5 Mio. sequences processed; ...................................................................................................	6 Mio. sequences processed; ...................................................................................................	7 Mio. sequences processed; ......................................................................,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/160#issuecomment-461782109:9224,Mask,Masked,9224,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/160#issuecomment-461782109,3,['Mask'],['Masked']
Availability,"extend nucl:2,aa:1 --threads 8 --compressed 0 -v 3; result2profile /ebio/abt3_scratch/nyoungblut/LLCDS_126702996474/mmseqs_tax_query/09/seqs_db /ebio/abt3_scratch/nyoungblut/LLCDS_126702996474/mmseqs_tax_target/mmseqs_tax.db /ebio/abt3_scratch/nyoungblut/LLCDS_126702996474/mmseqs_tax/09/TMP/1355100225373504351/tmp_hsp1/9650299475897910544/aln_0 /ebio/abt3_scratch/nyoungblut/LLCDS_126702996474/mmseqs_tax/09/TMP/1355100225373504351/tmp_hsp1/9650299475897910544/profile_0 --sub-mat nucl:nucleotide.out,aa:blosum62.out -e 1e-05 --mask-profile 1 --e-profile 0.1 --comp-bias-corr 1 --wg 0 --allow-deletion 0 --filter-msa 1 --max-seq-id 0.9 --qid 0 --qsc -20 --cov 0 --diff 1000 --pca 0 --pcb 1.5 --db-load-mode 0 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --threads 8 --compressed 0 -v 3. MMseqs Version: 	a6cab565c98376623e82c3a04d186219d4c2f10c; Substitution matrix 	nucl:nucleotide.out,aa:blosum62.out; E-value threshold 	1e-05; Mask profile 	1; Profile E-value threshold 	1e-05; Compositional bias 	1; Global sequence weighting 	false; Allow deletions 	false; Filter MSA 	1; Maximum seq. id. threshold	0.9; Minimum seq. id. 	0; Minimum score per column 	-20; Minimum coverage 	0; Select N most diverse seqs	1000; Pseudo count a 	0; Pseudo count b 	1.5; Preload mode 	0; Gap open cost 	nucl:5,aa:11; Gap extension cost 	nucl:2,aa:1; Threads 	8; Compressed 	0; Verbosity 	3. Query database size: 1151 type: Aminoacid; Target database size: 41195879 type: Aminoacid; ================================================================= ] 46.43% 535 eta 0s; ==71239==ERROR: AddressSanitizer: heap-buffer-overflow on address 0x61a0000233e0 at pc 0x55c61d242cd7 bp 0x7fc0f27db1b0 sp 0x7fc0f27db1a0; WRITE of size 1 at 0x61a0000233e0 thread T3; ==71239==AddressSanitizer: while reporting a bug found another one. Ignoring.08K eta 0s; #0 0x55c61d242cd6 in MultipleAlignment::updateGapsInSequenceSet(char**, unsigned long, std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allo",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/432#issuecomment-814682245:1722,Mask,Mask,1722,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/432#issuecomment-814682245,1,['Mask'],['Mask']
Availability,"fact, the evalue seems to be the restrictive factor (which makes sense, given that the peptides are so small and the database so large). With the default evalue of `0.001`, only 26k out of 630k peptides generate a match (all of them *are* contained in the database at least once). ; * `--comp-bias-corr 0` and `--mask 0` seem to be advantageous. With a permissive evalue of `1e7`, `630467/630487` peptides are found if the both options are set to 0. If they are set to 1, only 594113/630487 peptides are found. On the first sight, the missing peptides do not look particularly low complexity (e.g. `LASLSSVFFFIISFI`, `LKEKLNRNRENSTAT`, `NEGCNSNSSTPRQNT`). ; * With a sensitivity of `s=1`, `--comp-bias-corr 0` and `--mask 0` and an evalue of `1e7` *almost all* perfect matches are found (`630467/630487`). With `s>=2` and otherwise same settings *all* perfect matches are found. . ---. For now, I will, therefore, use the following settings and see how that works out: ; ```bash; --seed-sub-mat VTML40.out ; -s 2 ; --comp-bias-corr 0 --mask 0; --gap-open 16 ; --gap-extend 2 ; --min-length 9 ; --spaced-kmer-pattern 11011101 ; -e 10000000; -k 6 ; ```. ---. Here are the raw counts of matches. `biascorr = 0` implies `mask = 0`. ; ```console; > wc -l * | sort -n ; 1283115 AE009951.2_sens1_biascorr0_eval0.001_mmseqs.tsv ; 1283126 AE009951.2_sens4_biascorr0_eval0.001_mmseqs.tsv; 1283235 AE009951.2_sens2_biascorr0_eval0.001_mmseqs.tsv; 1419374 AE009951.2_sens1_biascorr1_eval0.001_mmseqs.tsv; 1419971 AE009951.2_sens2_biascorr1_eval0.001_mmseqs.tsv; 1420095 AE009951.2_sens4_biascorr1_eval0.001_mmseqs.tsv; 155001100 AE009951.2_sens1_biascorr1_eval10000000_mmseqs.tsv; 198438767 AE009951.2_sens2_biascorr1_eval10000000_mmseqs.tsv; 212674670 AE009951.2_sens1_biascorr0_eval10000000_mmseqs.tsv; 237331138 AE009951.2_sens4_biascorr1_eval10000000_mmseqs.tsv; 247063054 AE009951.2_sens2_biascorr0_eval10000000_mmseqs.tsv; 249672852 AE009951.2_sens4_biascorr0_eval10000000_mmseqs.tsv; 1308290497 total; ```",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/373#issuecomment-729734160:1309,mask,mask,1309,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/373#issuecomment-729734160,2,['mask'],['mask']
Availability,false; Number search iterations 	3; Start sensitivity 	4; Search steps 	1; Run a seq-profile search in slice mode 	0; Sets the MPI runner 	; Remove Temporary Files 	false. Tmp tmpC folder does not exist or is not a directory.; Created dir tmpC; Program call:; prefilter geneC.db genes.db tmpC/10139724895635470572/pref_0 --sub-mat blosum62.out -s 5.7 -k 0 --k-score 2147483647 --alph-size 21 --max-seq-len 65535 --max-seqs 1000 --offset-result 0 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --no-preload 1 --pca 1 --pcb 1.5 --threads 48 -v 3 . MMseqs Version: 	GITDIR-NOTFOUND; Sub Matrix 	blosum62.out; Sensitivity 	5.7; K-mer size 	0; K-score 	2147483647; Alphabet size 	21; Max. sequence length 	65535; Max. results per query 	1000; Offset result 	0; Split DB 	0; Split mode 	2; Split Memory Limit 	0; Coverage threshold 	0; Coverage Mode 	0; Compositional bias 	1; Diagonal Scoring 	1; Exact k-mer matching 	0; Mask Residues 	1; Minimum Diagonal score 	15; Include identical Seq. Id.	false; Spaced Kmer 	1; No preload 	true; Pseudo count a 	1; Pseudo count b 	1.5; Spaced k-mer pattern 	; Threads 	48; Verbosity 	3. Initialising data structures...; Using 48 threads.; Could not find precomputed index. Compute index.; Substitution matrices...; Use kmer size 7 and split 3 using Target split mode.; Needed memory (213955223732 byte) of total memory (243154317312 byte); Target database: genes.db(Size: 135880714); Query database type: Aminoacid; Target database type: Aminoacid; Time for init: 0h 0m 22s 525ms; Query database: geneC.db(size=1); Process prefiltering step 1 of 3. Index table k-mer threshold: 99; Index table: counting k-mers...; ...................................................................................................	1 Mio. sequences processed; .......................................................................,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/160#issuecomment-461782109:2756,Mask,Mask,2756,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/160#issuecomment-461782109,1,['Mask'],['Mask']
Availability,"fasta; /home/username/project/my_local_DB; result_query_20230412_142303. createdb result_query_20230412_142303/query.fas result_query_20230412_142303/qdb --shuffle 0. search result_query_20230412_142303/qdb /home/username/project/my_local_DB/target_DB result_query_20230412_142303/res result_query_20230412_142303/tmp --threads 96 --num-iterations 3 --db-load-mode 2 -a -s 8 -e 0.1 --max-seqs 10000. prefilter result_query_20230412_142303/qdb /home/username/project/my_local_DB/target_DB.idx result_query_20230412_142303/tmp/18292001434761310910/pref_0 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --seed-sub-mat 'aa:VTML80.out,nucl:nucleotide.out' -s 8 -k 0 --k-score seq:2147483647,prof:2147483647 --alph-size aa:21,nucl:5 --max-seq-len 65535 --max-seqs 10000 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --comp-bias-corr-scale 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-prob 0.9 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 2 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --threads 96 --compressed 0 -v 3. align result_query_20230412_142303/qdb /home/username/project/my_local_DB/target_DB.idx result_query_20230412_142303/tmp/18292001434761310910/pref_0 result_query_20230412_142303/tmp/18292001434761310910/aln_0 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' -a 1 --alignment-mode 2 --alignment-output-mode 0 --wrapped-scoring 0 -e 0.1 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 1 --comp-bias-corr-scale 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 2 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --score-bias 0 --realign 1 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --corr-score-weight 0 --gap-open aa:11,nucl:5 --gap-extend aa:1,nucl:2 --zdrop 40 --threads 96 --compressed 0 -v 3. result",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/64#issuecomment-1507273856:2381,mask,mask-lower-case,2381,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/64#issuecomment-1507273856,2,['mask'],['mask-lower-case']
Availability,fb39ca1ee88313974f285740faa856ea68509193. this is the version that I get; I am not sure if this is correct or I downloaded something wrong.,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/429#issuecomment-809804854:112,down,downloaded,112,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/429#issuecomment-809804854,1,['down'],['downloaded']
Availability,"filter tmp/9700814981231218113/search_tmp/10627605686170015473/q_orfs_aa /d/Databases/Kegg/sram/mmseqs/kegg tmp/9700814981231218113/search_tmp/10627605686170015473/search/pref_0 --sub-mat nucl:nucleotide.out,aa:blosum62.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -k 0 --k-score 2147483647 --alph-size 21 --max-seq-len 65535 --max-seqs 1 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 40 --compressed 0 -v 3 -s 1.000 . Query database size: 2548633 type: Aminoacid; Estimated memory consumption: 68G; Target database size: 13003941 type: Aminoacid; Index table k-mer threshold: 174 at k-mer size 7 ; Index table: counting k-mers; [=================================================================] 13.00M 1m 24s 806ms; Index table: Masked residues: 71357266; Index table: fill; [=================================================================] 13.00M 50s 887ms; Index statistics; Entries: 3111458326; DB size: 27569 MB; Avg k-mer size: 2.430827; Top 10 k-mers; SGQQRIA	74997; GPGGKLL	59639; GGQRVAR	38490; LLGPGKT	25908; YDYAIPL	22840; GGRRVAR	21815; PHLGGQR	19799; TPHDFEV	17697; PSLGGQR	13748; FSCSHVV	12988; Time for index table init: 0h 2m 34s 667ms; Process prefiltering step 1 of 1. k-mer similarity threshold: 174; Starting prefiltering scores calculation (step 1 of 1); Query db start 1 to 2548633; Target db start 1 to 13003941; [=================================================================] 2.55M 23s 498ms. 7.258993 k-mers per position; 1015 DB matches per sequence; 0 overflows; 0 sequences passed prefiltering per query sequence; 1 median result list length; 1142796 sequences with 0 size result lists; Time for merging to pref_0: 0h 0m 0s 915ms; Time for processing: 0h 3m 3s 800ms; align tmp/9700814981231218113/search_tmp/10627605686170015473/q_orfs_aa",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/231#issuecomment-535253491:4602,Mask,Masked,4602,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/231#issuecomment-535253491,1,['Mask'],['Masked']
Availability,"for NR. . I have download and ensured I have the taxonomy folder; ```; ls -lh /root/mmseqs2_db/taxonomy/; Permissions Size User Date Modified Name; drwxr-sr-x - root 25 Mar 13:35 .ipynb_checkpoints/; .rw-rw-r-- 20M 9019 12 Mar 21:27 citations.dmp; .rw-rw-r-- 4.7M 9019 12 Mar 21:25 delnodes.dmp; .rw-rw-r-- 452 9019 12 Mar 21:20 division.dmp; .rw-rw-r-- 16k 9019 12 Mar 21:27 gc.prt; .rw-rw-r-- 4.9k 9019 12 Mar 21:20 gencode.dmp; .rw-rw-r-- 3.9M 9019 12 Mar 21:25 images.dmp; .rw-rw-r-- 1.4M 9019 12 Mar 21:25 merged.dmp; .rw-rw-r-- 244M 9019 12 Mar 21:27 names.dmp; .rw-rw-r-- 194M 9019 12 Mar 21:27 nodes.dmp; .rw-rw---- 3.1k 4544 27 Apr 2023 readme.txt; .rw-rw-r-- 65M root 12 Mar 21:28 taxdump.tar.gz; ```. But when attempting to extract the fasta and the tax id mapping, I get the following error: ; ```; cd /root/mmseqs2_db; blastdbcmd -db nr -entry all > nr.fna; BLAST Database error: No alias or index file found for nucleotide database [nr] in search path [/root/mmseqs2_db::]; ```; I have ensured that the files for nr are available in that path; ```; ls -lh /root/mmseqs2_db/nr*; Permissions Size User Date Modified Name; .rw-rw-r-- 13G root 15 Mar 16:54 /root/mmseqs2_db/nr; .rw-rw-r-- 4 root 15 Mar 16:54 /root/mmseqs2_db/nr.dbtype; .rw-r--r-- 0 root 25 Mar 13:46 /root/mmseqs2_db/nr.fna; .rw-rw-r-- 779M root 15 Mar 16:54 /root/mmseqs2_db/nr.index; .rw-rw-r-- 790M root 15 Mar 16:55 /root/mmseqs2_db/nr.lookup; .rw-rw-r-- 8 root 15 Mar 16:52 /root/mmseqs2_db/nr.source; .rw-rw-r-- 11 root 15 Mar 17:03 /root/mmseqs2_db/nr.version; .rw-rw-r-- 4.0G root 15 Mar 16:52 /root/mmseqs2_db/nr_h; .rw-rw-r-- 4 root 15 Mar 16:52 /root/mmseqs2_db/nr_h.dbtype; .rw-rw-r-- 748M root 15 Mar 16:55 /root/mmseqs2_db/nr_h.index; .rw-rw-r-- 0 root 15 Mar 16:55 /root/mmseqs2_db/nr_mapping; .rw-rw-r-- 708M root 15 Mar 16:55 /root/mmseqs2_db/nr_taxonomy; ```. nr.fna is still empty. Not sure if this is a required step in order to create the nr_mapping. I would appreciate any help in getting the tax info",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/824#issuecomment-2018057250:1063,error,error,1063,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/824#issuecomment-2018057250,2,"['avail', 'error']","['available', 'error']"
Availability,"frames 1,2,3 --reverse-frames 1,2,3 --translation-table 1 --translate 1 --use-all-table-starts 0 --id-offset 0 --create-lookup 0 --threads 128 --compressed 0 -v 3. [=================================================================] 100.00% 10 0s 71ms; Time for merging to orfs_aa_h: 0h 0m 0s 759ms; Time for merging to orfs_aa: 0h 0m 0s 726ms; Time for processing: 0h 0m 3s 54ms; prefilter tmp//15404483323509150572/taxonomy_tmp/7054630145456894787/orfs_aa MicroEuk100.eukaryota_odb10.idx tmp//15404483323509150572/taxonomy_tmp/7054630145456894787/orfs_pref --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --seed-sub-mat 'aa:VTML80.out,nucl:nucleotide.out' -s 2 -k 0 --k-score seq:2147483647,prof:2147483647 --alph-size aa:21,nucl:5 --max-seq-len 65535 --max-seqs 1 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --comp-bias-corr-scale 1 --diag-score 0 --exact-kmer-matching 0 --mask 1 --mask-prob 0.9 --mask-lower-case 0 --min-ungapped-score 3 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --threads 128 --compressed 0 -v 3. Index version: 16; Generated by: 14.7e284; ScoreMatrix: VTML80.out; Query database size: 2310 type: Aminoacid; Estimated memory consumption: 7G; Target database size: 713072 type: Aminoacid; Process prefiltering step 1 of 1. k-mer similarity threshold: 145; Starting prefiltering scores calculation (step 1 of 1); Query db start 1 to 2310; Target db start 1 to 713072; [=================================================================] 100.00% 2.31K 0s 200ms. 8.191356 k-mers per position; 1212 DB matches per sequence; 0 overflows; 0 queries produce too many hits (truncated result); 0 sequences passed prefiltering per query sequence; 0 median result list length; 2301 sequences with 0 size result lists; Time for merging to orfs_pref: 0h 0m 0s 457ms; Time for processing: 0h 0m 1s 487ms; rescorediagonal tmp//15404483323509150572/taxonomy_tmp",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/779#issuecomment-1872491640:5215,mask,mask-lower-case,5215,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/779#issuecomment-1872491640,1,['mask'],['mask-lower-case']
Availability,"fter update to last version of mmseqs and hhsuite, I tried again.; I wrote this script inspired in [this tutorial](https://github.com/soedinglab/MMseqs2/wiki#how-to-create-a-hhblits-database). ```; #!/usr/bin/env bash. BASE=""subset""; FILE=""${BASE}.fa""; MMSEQDB=""${BASE}DB""; MMSEQPREF=""${BASE}PREFILTER""; MMSEQALN=""${BASE}ALN""; MMSEQCLU=""${BASE}CLU""; MMSEQMSA=""${BASE}MSA""; FILELOG=""job.log"". echo '#:: CREATEDB' &>> ${FILELOG} ;; mmseqs createdb ${FILE} ${MMSEQDB} &>> ${FILELOG}. echo '#:: PREFILTER' &>> ${FILELOG} ;; mmseqs prefilter ${MMSEQDB} ${MMSEQDB} ${MMSEQPREF} -s 7.5 &>> ${FILELOG}. echo '#:: ALING' &>> ${FILELOG} ;; mmseqs align ${MMSEQDB} ${MMSEQDB} ${MMSEQPREF} ${MMSEQALN} -e 0.00001 &>> ${FILELOG}. echo '#:: CLUST' &>> ${FILELOG} ;; mmseqs clust ${MMSEQDB} ${MMSEQALN} ${MMSEQCLU} &> ${FILELOG} &>> ${FILELOG}. echo '#:: RESULT2MSA' &>> ${FILELOG} ;; mmseqs result2msa ${MMSEQDB} ${MMSEQDB} ${MMSEQCLU} ${MMSEQMSA} --compress &>> ${FILELOG}. echo '#:: CREATE LINKS' &>> ${FILELOG} ;; ln -s ${MMSEQDB}_h ${MMSEQMSA}_header.ffdata &>> ${FILELOG}; ln -s ${MMSEQDB}_h.index ${MMSEQMSA}_header.ffindex &>> ${FILELOG}; ln -s ${MMSEQDB} ${MMSEQMSA}_sequence.ffdata &>> ${FILELOG}; ln -s ${MMSEQDB}.index ${MMSEQMSA}_sequence.ffindex &>> ${FILELOG}. echo '#:: BUILD HHBLITS COMPATIBLE' &>> ${FILELOG} ;; cstranslate -i ${MMSEQMSA} -o ${MMSEQMSA}_cs219 \; -A /home/linuxbrew/anaconda3/data/cs219.lib \; -D /home/linuxbrew/anaconda3/data/context_data.lib \; -x 0.3 -c 4 -I ca3m &>> ${FILELOG}; ```; It only fails on cstranslate with this error:; ```; ERROR: Unable to read input file 'subsetMSA'!; Reading context library for pseudocounts from context_data.lib ...; Reading abstract state alphabet from cs219.lib ...; ```. I'm attaching the the [sequence](https://github.com/soedinglab/MMseqs2/files/3095328/subset.fa.txt), [commands file (source)](https://github.com/soedinglab/MMseqs2/files/3095327/source.sh.txt) and [log file](https://github.com/soedinglab/MMseqs2/files/3095326/job.log.t",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/174#issuecomment-484587503:967,echo,echo,967,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/174#issuecomment-484587503,1,['echo'],['echo']
Availability,"g start mode 2; Contig end mode 2; Orf start mode 1; Forward Frames 1,2,3; Reverse Frames 1,2,3; Translation Table 1; Use all table starts false; Offset of numeric ids 0; Add Orf Stop false; Number search iterations 1; Start sensitivity 4; Search steps 1; Run a seq-profile search in slice mode false; Strand selection 1; Disk space limit 0; Sets the MPI runner mpirun --pernode; Force restart using the latest tmp false; Remove Temporary Files false. [node218.cluster:134942] mca: base: component_find: unable to open /usr/mpi/gcc/openmpi-1.6.5/lib/openmpi/mca_mtl_psm: libpsm_infinipath.so.1: cannot open shared object file: No such file or directory (ignored); MPI Init...; Rank: 0 Size: 1; Program call:; prefilter query_dbs/1000562_0 mmseqs_dir/profile/Tenericutes_profile tmp/14349913440832127037/pref --sub-mat blosum62.out -s 5.7 -k 5 --k-score 2147483647 --alph-size 21 --max-seq-len 65535 --max-seqs 300 --offset-result 0 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 8 --compressed 0 -v 3 . MMseqs Version: da6c1a5a7be5d82719f796b85ce9cbacf9f2162c-MPI; Sub Matrix blosum62.out; Sensitivity 5.7; K-mer size 5; K-score 2147483647; Alphabet size 21; Max. sequence length 65535; Max. results per query 300; Offset result 0; Split DB 0; Split mode 2; Split Memory Limit 0; Coverage threshold 0; Coverage Mode 0; Compositional bias 1; Diagonal Scoring 1; Exact k-mer matching 0; Mask Residues 1; Minimum Diagonal score 15; Include identical Seq. Id. false; Spaced Kmer 1; Preload mode 0; Pseudo count a 1; Pseudo count b 1.5; Spaced k-mer pattern ; Local temporary path ; Threads 8; Compressed 0; Verbosity 3. Initialising data structures...; Using 8 threads.; Could not find precomputed index. Compute index.; Touch data file mmseqs_dir/profile/Tenericutes_profile ... Done.; Substitution matrice",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/164#issuecomment-463134521:2963,mask,mask,2963,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/164#issuecomment-463134521,1,['mask'],['mask']
Availability,"g step 2; [=================================================================] 100.00% 276 0s 36ms; Write merged clustering; [=================================================================] 100.00% 303 0s 53ms; Time for merging to clu_redundancy: 0h 0m 0s 2ms; Time for processing: 0h 0m 0s 67ms; createsubdb tmp//10798751672030653963/clu_redundancy DB_in tmp//10798751672030653963/input_step_redundancy -v 3 --subdb-mode 1. Time for merging to input_step_redundancy: 0h 0m 0s 0ms; Time for processing: 0h 0m 0s 1ms; prefilter tmp//10798751672030653963/input_step_redundancy tmp//10798751672030653963/input_step_redundancy tmp//10798751672030653963/pref_step0 --sub-mat nucl:nucleotide.out,aa:blosum62.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -s 1 -k 0 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 65535 --max-seqs 20 --split 0 --split-mode 2 --split-memory-limit 0 -c 0.8 --cov-mode 0 --comp-bias-corr 0 --diag-score 0 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 0 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 16 --compressed 0 -v 3. Query database size: 276 type: Aminoacid; Estimated memory consumption: 978M; Target database size: 276 type: Aminoacid; Index table k-mer threshold: 154 at k-mer size 6; Index table: counting k-mers; [=================================================================] 100.00% 276 0s 30ms; Index table: Masked residues: 0; Index table: fill; [=================================================================] 100.00% 276 0s 3ms; Index statistics; Entries: 1187; DB size: 488 MB; Avg k-mer size: 0.000019; Top 10 k-mers; XXXXXX 7; XXXXXX 4; XXXXXX 4; XXXXXX 4; XXXXXX 4; XXXXXX 3; XXXXXX 3; XXXXXX 3; XXXXXX 3; XXXXXX 3; Time for index table init: 0h 0m 0s 848ms; Process prefiltering step 1 of 1. k-mer similarity threshold: 154; Starting prefiltering scores calculation (step 1 of 1); Query db start 1 to 276; Target db start 1 to 276; [=========================",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-775767472:11500,mask,mask,11500,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-775767472,2,['mask'],"['mask', 'mask-lower-case']"
Availability,"gnment 0 --min-length 1 --max-length 2147483647 --max-gaps 2147483647 --contig-start-mode 2 --contig-end-mode 2 --orf-start-mode 0 --forward-frames 1,2,3 --reverse-frames 1,2,3 --translation-table 1 --use-all-table-starts 0 --id-offset 0 --add-orf-stop 0 --start-sens 4 --sens-steps 1 --remove-tmp-files 0 --alignment-mode 4. MMseqs Version: 	7.4e23d; Sub Matrix 	blosum62.out; Add backtrace 	false; Alignment mode 	4; E-value threshold 	0.001; Seq. Id Threshold 	0.9; Seq. Id. Mode 	0; Alternative alignments 	0; Coverage threshold 	0; Coverage Mode 	2; Max. sequence length 	65535; Max. results per query 	300; Compositional bias 	0; Realign hit 	false; Max Reject 	2147483647; Max Accept 	2147483647; Include identical Seq. Id. 	false; Preload mode 	0; Pseudo count a 	1; Pseudo count b 	1.5; Score bias 	0; Gap open cost 	11; Gap extension cost 	1; Threads 	24; Verbosity 	3; Sensitivity 	2; K-mer size 	0; K-score 	2147483647; Alphabet size 	21; Offset result 	0; Split DB 	0; Split mode 	2; Split Memory Limit 	0; Diagonal Scoring 	1; Exact k-mer matching 	0; Mask Residues 	0; Minimum Diagonal score 	15; Spaced Kmer 	1; Spaced k-mer pattern; Local temporary path; Rescore mode 	2; Remove hits by seq.id. and coverage 	false; Sort results 	1; In substitution scoring mode, performs global alignment along the diagonal	false; Mask profile 	1; Profile e-value threshold 	0.1; Use global sequence weighting 	false; Filter MSA 	1; Maximum sequence identity threshold 	0.9; Minimum seq. id. 	0; Minimum score per column 	-20; Minimum coverage 	0; Select n most diverse seqs 	1000; Omit Consensus 	false; Min codons in orf 	1; Max codons in length 	2147483647; Max orf gaps 	2147483647; Contig start mode 	2; Contig end mode 	2; Orf start mode 	0; Forward Frames 	1,2,3; Reverse Frames 	1,2,3; Translation Table 	1; Use all table starts 	false; Offset of numeric ids 	0; Add Orf Stop 	false; Number search iterations 	1; Start sensitivity 	4; Search steps 	1; Run a seq-profile search in slice mode 	",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/144#issuecomment-448559651:3654,Mask,Mask,3654,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/144#issuecomment-448559651,1,['Mask'],['Mask']
Availability,"gnment mode 	2; E-value threshold 	1e-05; Seq. id. threshold 	0; Min. alignment length 	0; Seq. id. mode 	0; Alternative alignments 	0; Coverage threshold 	0; Coverage mode 	0; Max sequence length 	65535; Compositional bias 	1; Realign hits 	false; Max reject 	2147483647; Max accept 	2147483647; Include identical seq. id. 	false; Preload mode 	3; Pseudo count a 	1; Pseudo count b 	1.5; Score bias 	0; Gap open cost 	11; Gap extension cost 	1; Threads 	2; Compressed 	0; Verbosity 	3; Seed substitution matrix 	VTML80.out; Sensitivity 	1; K-mer size 	0; K-score 	2147483647; Alphabet size 	21; Max results per query 	25; Previous max results per query 	; Split database 	0; Split mode 	2; Split memory limit 	0; Diagonal scoring 	1; Exact k-mer matching 	0; Mask residues 	1; Mask lower case residues 	0; Minimum diagonal score 	15; Spaced k-mers 	1; Spaced k-mer pattern 	; Local temporary path 	; Rescore mode 	0; Remove hits by seq. id. and coverage 	false; Sort results 	0; Global diagonal rescoring 	false; Mask profile 	1; Profile e-value threshold 	0.1; Use global sequence weighting 	false; Filter MSA 	1; Maximum seq. id. threshold 	0.9; Minimum seq. id. 	0; Minimum score per column 	-20; Minimum coverage 	0; Select N most diverse seqs 	1000; Omit consensus 	false; Min codons in orf 	30; Max codons in length 	32734; Max orf gaps 	2147483647; Contig start mode 	2; Contig end mode 	2; Orf start mode 	1; Forward frames 	1,2,3; Reverse frames extractorfs mmseqs-test-megan-out-280619/mmseqs-S1E3-S3queryDB tmp/15531098257495296432/q_orfs --min-length 30 --max-length 32734 --max-gaps 2147483647 --contig-start-mode 2 --contig-end-mode 2 --orf-start-mode 1 --forward-frames 1,2,3 --reverse-frames 1,2,3 --translation-table 1 --use-all-table-starts 0 --id-offset 0 --threads 2 --compressed 0 -v 3 . [] 4h 52m 19s 671ms; Time for merging files: 0h 0m 12s 453ms; Time for merging files: 0h 0m 37s 79ms; Time for processing: 4h 53m 13s 946ms; translatenucs tmp/15531098257495296432/q_orfs tmp/",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/214#issuecomment-508085485:3391,Mask,Mask,3391,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/214#issuecomment-508085485,1,['Mask'],['Mask']
Availability,gs: -msse4.2 -mfpmath=sse; -- Could NOT find GTest (missing: GTEST_LIBRARY GTEST_INCLUDE_DIR GTEST_MAIN_LIBRARY); -- Could NOT find GMock (missing: GMOCK_LIBRARY GMOCK_INCLUDE_DIR GMOCK_MAIN_LIBRARY); -- Compile blastp.sh to /Users/moorer/Downloads/mmseqs2/src/generatedfiles/blastp.sh.h; -- Compile blastpgp.sh to /Users/moorer/Downloads/mmseqs2/src/generatedfiles/blastpgp.sh.h; -- Compile blosum100.out to /Users/moorer/Downloads/mmseqs2/src/generatedfiles/blosum100.out.h; -- Compile blosum30.out to /Users/moorer/Downloads/mmseqs2/src/generatedfiles/blosum30.out.h; -- Compile blosum35.out to /Users/moorer/Downloads/mmseqs2/src/generatedfiles/blosum35.out.h; -- Compile blosum40.out to /Users/moorer/Downloads/mmseqs2/src/generatedfiles/blosum40.out.h; -- Compile blosum45.out to /Users/moorer/Downloads/mmseqs2/src/generatedfiles/blosum45.out.h; -- Compile blosum50.out to /Users/moorer/Downloads/mmseqs2/src/generatedfiles/blosum50.out.h; -- Compile blosum55.out to /Users/moorer/Downloads/mmseqs2/src/generatedfiles/blosum55.out.h; -- Compile blosum60.out to /Users/moorer/Downloads/mmseqs2/src/generatedfiles/blosum60.out.h; -- Compile blosum62.out to /Users/moorer/Downloads/mmseqs2/src/generatedfiles/blosum62.out.h; -- Compile blosum65.out to /Users/moorer/Downloads/mmseqs2/src/generatedfiles/blosum65.out.h; -- Compile blosum70.out to /Users/moorer/Downloads/mmseqs2/src/generatedfiles/blosum70.out.h; -- Compile blosum75.out to /Users/moorer/Downloads/mmseqs2/src/generatedfiles/blosum75.out.h; -- Compile blosum80.out to /Users/moorer/Downloads/mmseqs2/src/generatedfiles/blosum80.out.h; -- Compile blosum85.out to /Users/moorer/Downloads/mmseqs2/src/generatedfiles/blosum85.out.h; -- Compile blosum90.out to /Users/moorer/Downloads/mmseqs2/src/generatedfiles/blosum90.out.h; -- Compile blosum95.out to /Users/moorer/Downloads/mmseqs2/src/generatedfiles/blosum95.out.h; -- Compile cascaded_clustering.sh to /Users/moorer/Downloads/mmseqs2/src/generatedfiles/cascaded_clustering.sh.h; ,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/7#issuecomment-265028472:3008,Down,Downloads,3008,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/7#issuecomment-265028472,1,['Down'],['Downloads']
Availability,gth 	32000; Split Seq. by len 	true; Use fasta header 	false; Offset of numeric ids	0; Verbosity 	3. Time for merging files: 0 h 0 m 0 s; Time for merging files: 0 h 0 m 0 s; Program call:; DB . MMseqs Version: 	e2c8166b292d5e65271887cf4af568f32b346dd2; Sub Matrix 	blosum62.out; K-mer size 	0; Alphabet size 	21; Max. sequence length	32000; Mask Residues 	1; Split DB 	0; Spaced Kmer 	1; Threads 	4; Verbosity 	3. Substitution matrices...; Use kmer size 6 and split 1 using split mode; Index table: counting k-mers...; ........WARNING: Sequence (dbKey=82431) contains only ATGC. It might be a nucleotide sequence.; ..WARNING: Sequence (dbKey=102237) contains only ATGC. It might be a nucleotide sequence.; WARNING: Sequence (dbKey=105125) contains only ATGC. It might be a nucleotide sequence.; WARNING: Sequence (dbKey=105031) contains only ATGC. It might be a nucleotide sequence.; WARNING: Sequence (dbKey=105583) contains only ATGC. It might be a nucleotide sequence. Index table: Masked residues: 239357; Index table: fill...; ..........; Index table: removing duplicate entries...; Index table init done. Write 10; Write 20; Write 60; Write 70; Write 80; Write 30; Write 40; Write 5; Write 0; Write MMSEQSFFINDEX ; Time for merging files: 0 h 0 m 0 s; Done. ; Program call:; DB DB resultDB tmp -a -s 7.5 --mask 0 --comp-bias-corr 0 . MMseqs Version: 	e2c8166b292d5e65271887cf4af568f32b346dd2; Sub Matrix 	blosum62.out; Add backtrace 	true; Alignment mode 	0; E-value threshold 	0.001; Seq. Id Threshold 	0; Coverage threshold 	0; Max. sequence length 	32000; Max. results per query 	300; Compositional bias 	0; Profile 	false; Realign hit 	false; Max Reject 	2147483647; Max Accept 	2147483647; Include identical Seq. Id. 	false; Threads 	4; Verbosity 	3; Sensitivity 	7.5; K-mer size 	0; K-score 	2147483647; Alphabet size 	21; Offset result 	0; Split DB 	0; Split mode 	2; Diagonal Scoring 	1; Mask Residues 	0; Minimum Diagonal score 	15; Spaced Kmer 	1; Profile e-value threshold 	0.001; Us,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/12#issuecomment-275642021:1340,Mask,Masked,1340,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/12#issuecomment-275642021,1,['Mask'],['Masked']
Availability,h.h; -- Compile blosum100.out to /Users/moorer/Downloads/mmseqs2/src/generatedfiles/blosum100.out.h; -- Compile blosum30.out to /Users/moorer/Downloads/mmseqs2/src/generatedfiles/blosum30.out.h; -- Compile blosum35.out to /Users/moorer/Downloads/mmseqs2/src/generatedfiles/blosum35.out.h; -- Compile blosum40.out to /Users/moorer/Downloads/mmseqs2/src/generatedfiles/blosum40.out.h; -- Compile blosum45.out to /Users/moorer/Downloads/mmseqs2/src/generatedfiles/blosum45.out.h; -- Compile blosum50.out to /Users/moorer/Downloads/mmseqs2/src/generatedfiles/blosum50.out.h; -- Compile blosum55.out to /Users/moorer/Downloads/mmseqs2/src/generatedfiles/blosum55.out.h; -- Compile blosum60.out to /Users/moorer/Downloads/mmseqs2/src/generatedfiles/blosum60.out.h; -- Compile blosum62.out to /Users/moorer/Downloads/mmseqs2/src/generatedfiles/blosum62.out.h; -- Compile blosum65.out to /Users/moorer/Downloads/mmseqs2/src/generatedfiles/blosum65.out.h; -- Compile blosum70.out to /Users/moorer/Downloads/mmseqs2/src/generatedfiles/blosum70.out.h; -- Compile blosum75.out to /Users/moorer/Downloads/mmseqs2/src/generatedfiles/blosum75.out.h; -- Compile blosum80.out to /Users/moorer/Downloads/mmseqs2/src/generatedfiles/blosum80.out.h; -- Compile blosum85.out to /Users/moorer/Downloads/mmseqs2/src/generatedfiles/blosum85.out.h; -- Compile blosum90.out to /Users/moorer/Downloads/mmseqs2/src/generatedfiles/blosum90.out.h; -- Compile blosum95.out to /Users/moorer/Downloads/mmseqs2/src/generatedfiles/blosum95.out.h; -- Compile cascaded_clustering.sh to /Users/moorer/Downloads/mmseqs2/src/generatedfiles/cascaded_clustering.sh.h; -- Compile clustering.sh to /Users/moorer/Downloads/mmseqs2/src/generatedfiles/clustering.sh.h; -- Compile update_clustering.sh to /Users/moorer/Downloads/mmseqs2/src/generatedfiles/update_clustering.sh.h; -- Configuring done; -- Generating done; -- Build files have been written to: /Users/moorer/Downloads/mmseqs2/build; Zebulon | build -> make; Scanning dependencies of tar,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/7#issuecomment-265028472:3384,Down,Downloads,3384,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/7#issuecomment-265028472,1,['Down'],['Downloads']
Availability,"ignment mode 	2; E-value threshold 	1e-05; Seq. Id Threshold 	0; Min. alignment length 	0; Seq. Id. Mode 	0; Alternative alignments 	0; Coverage threshold 	0; Coverage Mode 	0; Max. sequence length 	65535; Compositional bias 	1; Realign hit 	false; Max Reject 	2147483647; Max Accept 	2147483647; Include identical Seq. Id. 	false; Preload mode 	0; Pseudo count a 	1; Pseudo count b 	1.5; Score bias 	0; Gap open cost 	11; Gap extension cost 	1; Threads 	24; Compressed 	0; Verbosity 	3; Seed Substitution Matrix 	VTML80.out; Sensitivity 	5.7; K-mer size 	0; K-score 	2147483647; Alphabet size 	21; Max. results per query 	200; Offset result 	0; Split DB 	0; Split mode 	2; Split Memory Limit 	0; Diagonal Scoring 	1; Exact k-mer matching 	0; Mask Residues 	1; Mask lower case residues 	0; Minimum Diagonal score 	15; Spaced Kmer 	1; Spaced k-mer pattern; Local temporary path; Rescore mode 	0; Remove hits by seq.id. and coverage 	false; Sort results 	0; In substitution scoring mode, performs global alignment along the diagonal	false; Mask profile 	1; Profile e-value threshold 	0.001; Use global sequence weighting 	false; Filter MSA 	1; Maximum sequence identity threshold 	0.9; Minimum seq. id. 	0; Minimum score per column 	-20; Minimum coverage 	0; Select n most diverse seqs 	1000; Omit Consensus 	false; Min codons in orf 	30; Max codons in length 	32734; Max orf gaps 	2147483647; Contig start mode 	2; Contig end mode 	2; Orf start mode 	1; Forward Frames 	1,2,3; Reverse Frames 	1,2,3; Translation Table 	1; Use all table starts 	false; Offset of numeric ids 	0; Add Orf Stop 	false; Chain overlapping alignments 	0; Search type 	0; Number search iterations 	1; Start sensitivity 	4; Search steps 	1; Run a seq-profile search in slice mode 	false; Strand selection 	1; Disk space limit 	0; Sets the MPI runner; Force restart using the latest tmp 	false; Remove Temporary Files 	false; LCA Ranks 	kingdom:phylum:class:order:family:genus:species; Blacklisted Taxa 	12908,28384; LCA Mode 	3;",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/221#issuecomment-516032943:2484,Mask,Mask,2484,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/221#issuecomment-516032943,1,['Mask'],['Mask']
Availability,"ilarity-type 2 --threads 6 --compressed 0 -v 3 --sub-mat 'aa:blosum62.out,nucl:nucle; otide.out' -a 0 --alignment-mode 3 --alignment-output-mode 0 --wrapped-scoring 0 -e 0.001 --min-seq-i; d 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-len 65535 --comp-bias-c; orr 1 --comp-bias-corr-scale 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0; --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --sco; re-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --corr-score-weight 0 -; -gap-open aa:11,nucl:5 --gap-extend aa:1,nucl:2 --zdrop 40 --alph-size aa:13,nucl:5 --kmer-per-seq 21; --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-pr; ob 0.9 --mask-lower-case 0 -k 0 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --; ignore-multi-kmer 0 --rescore-mode 0 --filter-hits 0 --sort-results 0 --remove-tmp-files 0 --force-re; use 0 ; ; kmermatcher /home/outdir/2023_06/tmp/input_step2 /home/outdir/2023_06/tmp/clu_uniclust30/13156544047496927710/linclust/2296487886038157831/pref --; sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --alph-size aa:13,nucl:5 --min-seq-id 0 --kmer-per-seq ; 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-prob 0.9 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-mem; ory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 6 --compressed 0 -v 3 . kmermatcher /home/outdir/2023_06/tmp/input_step2 /home/outdir/2023_06/tmp/clu_uniclust30/13156544047496927710/linclust/2296487886038157831/pref --; sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --alph-size aa:13,nucl:5 --min-seq-id 0 --kmer-per-seq ; 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-; prob 0.9 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 ",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/700#issuecomment-1589819536:6458,mask,mask-lower-case,6458,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/700#issuecomment-1589819536,1,['mask'],['mask-lower-case']
Availability,"input_step2: 0h 0m 0s 0ms; Time for processing: 0h 0m 0s 1ms; prefilter tmp//7897776346521331899/input_step2 tmp//7897776346521331899/input_step2 tmp//7897776346521331899/pref_step2 --sub-mat nucl:nucleotide.out,aa:blosum62.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -s 6 -k 0 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 65535 --max-seqs 20 --split 0 --split-mode 2 --split-memory-limit 0 -c 0.8 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 16 --compressed 0 -v 3. Query database size: 124 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 124 type: Aminoacid; Index table k-mer threshold: 109 at k-mer size 6; Index table: counting k-mers; [=================================================================] 100.00% 124 0s 19ms; Index table: Masked residues: 0; Index table: fill; [=================================================================] 100.00% 124 0s 3ms; Index statistics; Entries: 116; DB size: 488 MB; Avg k-mer size: 0.000002; Top 10 k-mers; FSMYPQ 6; HFVFHR 4; YQYPRV 3; LAMYPA 1; ARPIVA 1; CHMEKC 1; VQRKKC 1; RGYLLC 1; MVQDRC 1; CEMRRC 1; Time for index table init: 0h 0m 0s 975ms; Process prefiltering step 1 of 1. k-mer similarity threshold: 109; Starting prefiltering scores calculation (step 1 of 1); Query db start 1 to 124; Target db start 1 to 124; [=================================================================] 100.00% 124 0s 35ms. 125.182478 k-mers per position; 1 DB matches per sequence; 0 overflows; 0 queries produce too many hits (truncated result); 1 sequences passed prefiltering per query sequence; 1 median result list length; 0 sequences with 0 size result lists; Time for merging to pref_step2: 0h 0m 0s 3ms; Time for processing: 0h 0m 1s 657ms; align tmp//7897776346521331899/input_step2 tmp//7897776346521331899/input_step2 tmp//7897776",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-775778998:20346,Mask,Masked,20346,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-775778998,1,['Mask'],['Masked']
Availability,"is job using mpirun I got this error: . [cpu-23-1:104192] *** Process received signal ***; [cpu-23-1:104192] Signal: Bus error (7); [cpu-23-1:104192] Signal code: Non-existant physical address (2); [cpu-23-1:104192] Failing at address: 0x148bd2954aee; [cpu-23-1:104230] *** Process received signal ***; [cpu-23-1:104230] Signal: Bus error (7); [cpu-23-1:104230] Signal code: Non-existant physical address (2); [cpu-23-1:104230] Failing at address: 0x14758c03a9e9; [cpu-23-1:104233] *** Process received signal ***; [cpu-23-1:104233] Signal: Bus error (7); [cpu-23-1:104233] Signal code: Non-existant physical address (2); [cpu-23-1:104233] Failing at address: 0x151209f6d9c4; --------------------------------------------------------------------------; Primary job terminated normally, but 1 process returned; a non-zero exit code. Per user-direction, the job has been aborted.; --------------------------------------------------------------------------; --------------------------------------------------------------------------; mpirun noticed that process rank 89 with PID 0 on node cpu-23-1 exited on signal 7 (Bus error).; --------------------------------------------------------------------------. And this one a couple more times:. --------------------------------------------------------------------------; Primary job terminated normally, but 1 process returned; a non-zero exit code. Per user-direction, the job has been aborted.; --------------------------------------------------------------------------; slurmstepd: error: *** JOB 1369194 ON cpu-25-49 CANCELLED AT 2021-05-17T19:07:03 DUE TO NODE FAILURE, SEE SLURMCTLD LOG FOR DETAILS ***; --------------------------------------------------------------------------; mpirun noticed that process rank 65 with PID 0 on node cpu-25-49 exited on signal 9 (Killed).; --------------------------------------------------------------------------. Now I'm trying to run the job using the script you also include in your manual . mmseqs createdb ""${Q",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/455#issuecomment-843668604:1138,error,error,1138,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/455#issuecomment-843668604,1,['error'],['error']
Availability,"it into many parts. Is it possible to consolidate them?. Commands (search, flat file generation, then cstranslate):; ```; ~/apps/mmseqs2/git/build/bin/mmseqs search \; euk_screen_split/screenDB_split_0_100 \; uref_euk85_repDB_lfs/uref_euk85_rep \; euk_screen_split_prof/screenDB_split_0_100 \; $MMTEMP \; -a \; --local-tmp /scratch/$USER/$SLURM_JOB_ID \; --split-memory-limit 150000000. ~/apps/mmseqs2/git/build/bin/mmseqs result2msa \; euk_screen_split/screenDB_split_0_100 \; uref_euk85_repDB_lfs/uref_euk85_rep \; euk_screen_split_prof/screenDB_split_0_100 \; euk_screen_split_flat/screenDB_split_0_100 \; --threads 24 \; --compress. ~/apps/hh-suite/git/build/bin/cstranslate \; -i ""euk_screen_split_msa/screenDB_split_0_100"" \; -o ""euk_screen_split_msa/screenDB_split_0_100_cs219"" \; -f -x 0.3 -c 4 -I ca3m; ```. Output of `cstranslate`; ```; - 13:12:38.156 ERROR: In /home/saladi1/apps/hh-suite/git/src/ffindexdatabase.cpp:11: FFindexDatabase:. - 13:12:38.156 ERROR: could not open file 'euk_screen_split_msa/screenDB_split_0_100_ca3m.ffdata'. Reading context library for pseudocounts from internal ...; Reading abstract state alphabet from internal ...; ```. Files do exist:. ```; [saladi1@comet-ln3 mmdb]$ ls -1 euk_screen_split_msa/screenDB_split_0_100*; euk_screen_split_msa/screenDB_split_0_100_ca3m.ffdata.0; euk_screen_split_msa/screenDB_split_0_100_ca3m.ffdata.1; euk_screen_split_msa/screenDB_split_0_100_ca3m.ffdata.10; euk_screen_split_msa/screenDB_split_0_100_ca3m.ffdata.11; euk_screen_split_msa/screenDB_split_0_100_ca3m.ffdata.12; euk_screen_split_msa/screenDB_split_0_100_ca3m.ffdata.13; euk_screen_split_msa/screenDB_split_0_100_ca3m.ffdata.14; euk_screen_split_msa/screenDB_split_0_100_ca3m.ffdata.15; euk_screen_split_msa/screenDB_split_0_100_ca3m.ffdata.16; euk_screen_split_msa/screenDB_split_0_100_ca3m.ffdata.17; euk_screen_split_msa/screenDB_split_0_100_ca3m.ffdata.18; euk_screen_split_msa/screenDB_split_0_100_ca3m.ffdata.19; euk_screen_split_msa/screenDB_split_0_100_ca",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/191#issuecomment-491998440:1178,ERROR,ERROR,1178,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/191#issuecomment-491998440,1,['ERROR'],['ERROR']
Availability,"ix blosum62.out; Add backtrace false; Alignment mode 2; E-value threshold 0.001; Seq. Id Threshold 0; Min. alignment length 0; Seq. Id. Mode 0; Alternative alignments 0; Coverage threshold 0; Coverage Mode 0; Max. sequence length 65535; Compositional bias 1; Realign hit false; Max Reject 2147483647; Max Accept 2147483647; Include identical Seq. Id. false; Preload mode 0; Pseudo count a 1; Pseudo count b 1.5; Score bias 0; Gap open cost 11; Gap extension cost 1; Threads 10; Compressed 0; Verbosity 3; Seed Substitution Matrix VTML80.out; Sensitivity 7.5; K-mer size 6; K-score 2147483647; Alphabet size 21; Max. results per query 300; Offset result 0; Split DB 0; Split mode 2; Split Memory Limit 0; Diagonal Scoring 1; Exact k-mer matching 0; Mask Residues 1; Mask lower case residues 0; Minimum Diagonal score 15; Spaced Kmer 1; Spaced k-mer pattern ; Local temporary path ; Rescore mode 0; Remove hits by seq.id. and coverage false; Sort results 0; In substitution scoring mode, performs global alignment along the diagonal false; Mask profile 1; Profile e-value threshold 0.1; Use global sequence weighting false; Filter MSA 1; Maximum sequence identity threshold 0.9; Minimum seq. id. 0; Minimum score per column -20; Minimum coverage 0; Select n most diverse seqs 1000; Omit Consensus false; Min codons in orf 30; Max codons in length 32734; Max orf gaps 2147483647; Contig start mode 2; Contig end mode 2; Orf start mode 1; Forward Frames 1,2,3; Reverse Frames 1,2,3; Translation Table 1; Use all table starts false; Offset of numeric ids 0; Add Orf Stop false; Chain overlapping alignments 0; Search type 0; Number search iterations 1; Start sensitivity 4; Search steps 1; Run a seq-profile search in slice mode false; Strand selection 1; Disk space limit 0; Sets the MPI runner ; Force restart using the latest tmp false; Remove Temporary Files false. Program call:; prefilter pbps.neighbors.DB pfam_profile.idx tmp/6822607060114486044/pref --sub-mat blosum62.out --seed-sub-mat VTML80.ou",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/189#issuecomment-483627132:1260,Mask,Mask,1260,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/189#issuecomment-483627132,1,['Mask'],['Mask']
Availability,"just-kmer-len 0 --mask 0 --mask-lower-case 0 -k 0 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --rescore-mode 0 --filter-hits 0 --sort-results 0 --remove-tmp-files 0 --force-reuse 0. kmermatcher ../DB_in/fasta_in_db_HC tmp//538598962955004214/linclust/16628284907041385511/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-id 0 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 16 --compressed 0 -v 3. kmermatcher ../DB_in/fasta_in_db_HC tmp//538598962955004214/linclust/16628284907041385511/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-id 0 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 16 --compressed 0 -v 3. Database size: 303 type: Aminoacid; Reduced amino acid alphabet: (A S T) (C) (D B N) (E Q Z) (F Y) (G) (H) (I V) (K R) (L J M) (P) (W) (X). Generate k-mers list for 1 split; [=================================================================] 100.00% 303 0s 29ms; Sort kmer 0h 0m 0s 2ms; Sort by rep. sequence 0h 0m 0s 0ms; Time for fill: 0h 0m 0s 0ms; Time for merging to pref: 0h 0m 0s 0ms; Time for processing: 0h 0m 0s 160ms; rescorediagonal ../DB_in/fasta_in_db_HC ../DB_in/fasta_in_db_HC tmp//538598962955004214/linclust/16628284907041385511/pref tmp//538598962955004214/linclust/16628284907041385511/pref_rescore1 --sub-mat nucl:nucleotide.out,aa:blosum62.out --rescore-mode 0 --wrapped-scoring 0 --filter-hits 0 -e 0.001 -c 0.8 -a 0 --cov-mode 0 --min-seq-id 0.5 --min-aln-len 0 --seq-id-mode 0 --add-self-matc",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-773234853:3696,mask,mask,3696,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-773234853,2,['mask'],"['mask', 'mask-lower-case']"
Availability,"k profile 1; Profile E-value threshold 0.1; Global sequence weighting false; Allow deletions false; Filter MSA 1; Maximum seq. id. threshold 0.9; Minimum seq. id. 0; Minimum score per column -20; Minimum coverage 0; Select N most diverse seqs 1000; Min codons in orf 30; Max codons in length 32734; Max orf gaps 2147483647; Contig start mode 2; Contig end mode 2; Orf start mode 1; Forward frames 1,2,3; Reverse frames 1,2,3; Translation table 1; Translate orf 0; Use all table starts true; Offset of numeric ids 0; Create lookup 0; Add orf stop false; Overlap between sequences 0; Sequence split mode 1; Header split mode 0; Chain overlapping alignments 0; Merge query 1; Search type 0; Search iterations 1; Start sensitivity 4; Search steps 1; Exhaustive search mode false; Filter results during exhaustive search 0; Strand selection 1; LCA search mode false; Disk space limit 0; MPI runner ; Force restart with latest tmp false; Remove temporary files false. prefilter query_db/db /fsx/scratch/mmseqs/mmseqs-nf/d3d8e6be-a51b-4707-b105-d650f029c7be/MMSEQS/BLAST_DB_SEARCH/mmseqs_search/340477856621524793/t_orfs_aa /fsx/scratch/mmseqs/mmseqs-nf/d3d8e6be-a51b-4707-b105-d650f029c7be/MMSEQS/BLAST_DB_SEARCH/mmseqs_search/340477856621524793/search/pref_0 --sub-mat nucl:nucleotide.out,aa:blosum62.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -k 0 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 65535 --max-seqs 300 --split 0 --split-mode 2 --split-memory-limit 589824T -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 96 --compressed 1 -v 3 -s 6.0 . Query database size: 727664 type: Aminoacid; Estimated memory consumption: 60T; Target database size: 13319670203 type: Aminoacid; Index table k-mer threshold: 118 at k-mer size 7 ; Index table: counting k-mers; Error: Prefilter died; Error: Search step died; ```",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/438#issuecomment-1176243510:3548,mask,mask,3548,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/438#issuecomment-1176243510,4,"['Error', 'mask']","['Error', 'mask', 'mask-lower-case']"
Availability,"l the `clust` module which implements the actual clustering algorithm, not the whole `cluster` workflow with the searches etc:; ```; mmseqs cluster $INPUT ""$TMPPATH/aln_redundancy"" ""$TMPPATH/clu_redundancy"" ${CLUSTER_FRAG_PAR}; mmseqs cluster $INPUT ""$TMPPATH/aln_step$STEP"" ""$TMPPATH/clu_step$STEP"" ${CLUSTER0_PAR}; mmseqs cluster $INPUT ""$TMPPATH/aln_step$STEP"" ""$TMPPATH/clu_step$STEP"" ${CLUSTER1_PAR}; mmseqs cluster $INPUT ""$TMPPATH/aln_uniclust50"" ""$TMPPATH/clu_uniclust50"" ${CLUSTER2_PAR}; mmseqs cluster $INPUT ""$TMPPATH/aln_step$STEP"" ""$TMPPATH/clu_uniclust30"" ${CLUSTER2_PAR}; ```; should be . ```; mmseqs clust $INPUT ""$TMPPATH/aln_redundancy"" ""$TMPPATH/clu_redundancy"" ${CLUSTER_FRAG_PAR}; mmseqs clust $INPUT ""$TMPPATH/aln_step$STEP"" ""$TMPPATH/clu_step$STEP"" ${CLUSTER0_PAR}; mmseqs clust $INPUT ""$TMPPATH/aln_step$STEP"" ""$TMPPATH/clu_step$STEP"" ${CLUSTER1_PAR}; mmseqs clust $INPUT ""$TMPPATH/aln_uniclust50"" ""$TMPPATH/clu_uniclust50"" ${CLUSTER2_PAR}; mmseqs clust $INPUT ""$TMPPATH/aln_step$STEP"" ""$TMPPATH/clu_uniclust30"" ${CLUSTER2_PAR}; ```. For a 70% clustering you can adapt the 50% clustering strategy:. ```; # cluster down to 70%; mmseqs filterdb ""$TMPPATH/aln_step$STEP"" ""$TMPPATH/aln_uniclust70"" \; --filter-column 3 --filter-regex '(0\.[7-9][0-9]{2}|1\.000)'; mmseqs cluster $INPUT ""$TMPPATH/aln_uniclust70"" ""$TMPPATH/clu_uniclust70"" ${CLUSTER2_PAR}; mmseqs mergeclusters ""${SEQUENCE_DB}"" $OUTDIR/uniclust70_$RELEASE \; ""$TMPPATH/clu_frag"" ""$TMPPATH/clu_redundancy"" $TMPPATH/clu_step0 $TMPPATH/clu_step1 $TMPPATH/clu_uniclust70; ```. The idea here is to go directly from 90 to 30 to avoid any possible transitivity issues. In the MMseqs2 cascaded clustering you can get representative->member hits below the given thresholds after putting clusters from previous clustering steps together. You can reconstruct the 50 (and a 70) clustering from the 30% alignments, and that's what it does (it does it with a roundabout regex, because we didn't have expression filters back then).",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/700#issuecomment-1590461067:1341,down,down,1341,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/700#issuecomment-1590461067,1,['down'],['down']
Availability,"lated); 14.713489 hits per query sequence; Time for processing: 0h 0m 54s 194ms; result2profile /ebio/abt3_scratch/nyoungblut/LLCDS_126702996474/mmseqs_tax_query/06/seqs_db /ebio/abt3_scratch/nyoungblut/LLCDS_126702996474/mmseqs_tax_target/mmseqs_tax.db.idx /ebio/abt3_scratch/nyoungblut/LLCDS_126702996474/mmseqs_tax/06/TMP/14652724320229658153/tmp_hsp1/11598483508011826746/aln_0 /ebio/abt3_scratch/nyoungblut/LLCDS_126702996474/mmseqs_tax/06/TMP/14652724320229658153/tmp_hsp1/11598483508011826746/profile_0 --sub-mat nucl:nucleotide.out,aa:blosum62.out -e 1e-05 --mask-profile 1 --e-profile 0.1 --comp-bias-corr 1 --wg 0 --allow-deletion 0 --filter-msa 1 --max-seq-id 0.9 --qid 0 --qsc -20 --cov 0 --diff 1000 --pca 0 --pcb 1.5 --db-load-mode 0 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --threads 8 --compressed 0 -v 3. Index version: 16; Generated by: 13.45111; ScoreMatrix: VTML80.out; Query database size: 1075 type: Aminoacid; Target database size: 41195879 type: Aminoacid; [========================================Segmentation fault; Error: Create profile died; Error: First search died; ```. Note that sometimes when I re-run the command, I instead get the error:. ```; Index version: 16; Generated by: 13.45111; ScoreMatrix: VTML80.out; Query database size: 1075 type: Aminoacid; Target database size: 41195879 type: Aminoacid; [=======================================================]; free(): invalid next size (normal); Aborted; Error: Create profile died; Error: First search died; ```. System memory should not be the cause; I've got ~800 Gb free. . Maybe I'm missing a ""hidden"" input file (ie., one of the files associated with the main input files, which are generally no mentioned in any of the docs). The input files that are present:. * /ebio/abt3_scratch/nyoungblut/LLCDS_126702996474/mmseqs_tax_query/06/seqs_db; * /ebio/abt3_scratch/nyoungblut/LLCDS_126702996474/mmseqs_tax_query/06/seqs_db.dbtype; * /ebio/abt3_scratch/nyoungblut/LLCDS_126702996474/mmseqs_tax_query/06/",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/432#issuecomment-813242194:17664,fault,fault,17664,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/432#issuecomment-813242194,3,"['Error', 'fault']","['Error', 'fault']"
Availability,"ld cluster. The tool works great overall!. I'm using a fairly strict criterion for clustering using linclust, attempting to do as much as I can before I use mmseqs. The parameters are ->; -e 0.1 --min-seq-id 0.99 --cov-mode 3 -c 0.99 --kmer-per-seq 30 --kmer-per-seq-scale 0.3 -k 50 --cluster-mode 1 --max-iterations 50000 --seq-id-mode 2 --threads 16. I have used comically large values of (e / kmer-per-seq) and I still find thousands of such pairs that should have been clustered. Unfortunately, I cannot share the sequences because I don't own them. But I could report further that if I only use the two sequences (that are being missed in a population of sequences) on their own, linclust clusters them using the same pipeline. Next, I used the same two clusters with an 'outgroup' sequences, and I found the expected outcome - the two close by sequences were clustered whereas the outgroup was not. I begin to lose sensitivity as I start using more and more sequences in the population, which leads me to believe that the loss of sensitivity could be down the pre-filters/heuristics/e-value. If I manually 'cascade' the representative sequences from the first step using linclust again (instead of mmseqs, hence 'cascade'), I don't gain any appreciable sensitivity. So when provided a large population, linclust is missing these pairs many times (I tried to 'cascade' several times, but using linclust alone. What I find surprising is that these two sequences must share at least one kmer (in fact they must share many), so they must have been compared to each other, and they qualify all hard filters (coverage / alignment score), and yet they were missed. It's also possible both of them were compared to a third 'representative' sequence of a different cluster, and both of them did not make the cut. Still, they should have been compared to each other in a cluster of two because of their shared kmers. Is their a temporary file that documents which kmers were selected from a particular seq",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/489#issuecomment-923001759:1344,down,down,1344,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/489#issuecomment-923001759,1,['down'],['down']
Availability,"les//13298481167543164943/seq_seeds -v 3. Time for merging to seq_seeds: 0h 0m 0s 0ms; Time for processing: 0h 0m 0s 1ms; prefilter tmpfiles//13298481167543164943/seq_wrong_assigned tmpfiles//13298481167543164943/seq_seeds.merged tmpfiles//13298481167543164943/seq_wrong_assigned_pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -s 6 -k 0 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 65535 --max-seqs 20 --split 0 --split-mode 2 --split-memory-limit 0 -c 0.8 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 16 --compressed 0 -v 3. Query database size: 10 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 210 type: Aminoacid; Index table k-mer threshold: 109 at k-mer size 6; Index table: counting k-mers; [=================================================================] 210 0s 30ms; Index table: Masked residues: 0; Index table: fill; [=================================================================] 210 0s 6ms; Index statistics; Entries: 1284; DB size: 488 MB; Avg k-mer size: 0.000020; Top 10 k-mers; XXXXXX 3; XXXXXX 3; XXXXXX 2; XXXXXX 2; XXXXXX 2; XXXXXX 2; XXXXXX 2; XXXXXX 2; XXXXXX 2; XXXXXX 2; Time for index table init: 0h 0m 0s 989ms; Process prefiltering step 1 of 1. k-mer similarity threshold: 109; Starting prefiltering scores calculation (step 1 of 1); Query db start 1 to 10; Target db start 1 to 210; [=================================================================] 10 0s 14ms. 487.061439 k-mers per position; 14 DB matches per sequence; 0 overflows; 0 queries produce too many hits (truncated result); 3 sequences passed prefiltering per query sequence; 3 median result list length; 0 sequences with 0 size result lists; Time for merging to seq_wrong_assigned_pref: 0h 0m 0s 1ms; Time for processing: 0h 0m 1s 609ms; ",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-771572412:28200,Mask,Masked,28200,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-771572412,1,['Mask'],['Masked']
Availability,"lignment mode 	2; E-value threshold 	1e-05; Seq. id. threshold 	0; Min. alignment length 	0; Seq. id. mode 	0; Alternative alignments 	0; Coverage threshold 	0; Coverage mode 	0; Max sequence length 	65535; Compositional bias 	1; Realign hits 	false; Max reject 	2147483647; Max accept 	2147483647; Include identical seq. id. 	false; Preload mode 	0; Pseudo count a 	1; Pseudo count b 	1.5; Score bias 	0; Gap open cost 	11; Gap extension cost 	1; Threads 	24; Compressed 	0; Verbosity 	3; Seed substitution matrix 	VTML80.out; Sensitivity 	5.7; K-mer size 	0; K-score 	2147483647; Alphabet size 	21; Max results per query 	200; Previous max results per query; Split database 	0; Split mode 	2; Split memory limit 	0; Diagonal scoring 	1; Exact k-mer matching 	0; Mask residues 	1; Mask lower case residues 	0; Minimum diagonal score 	15; Spaced k-mers 	1; Spaced k-mer pattern; Local temporary path; Rescore mode 	0; Remove hits by seq. id. and coverage 	false; Sort results 	0; Global diagonal rescoring 	false; Mask profile 	1; Profile e-value threshold 	0.001; Use global sequence weighting 	false; Filter MSA 	1; Maximum seq. id. threshold 	0.9; Minimum seq. id. 	0; Minimum score per column 	-20; Minimum coverage 	0; Select N most diverse seqs 	1000; Omit consensus 	false; Min codons in orf 	30; Max codons in length 	32734; Max orf gaps 	2147483647; Contig start mode 	2; Contig end mode 	2; Orf start mode 	1; Forward frames 	1,2,3; Reverse frames 	1,2,3; Translation table 	1; Use all table starts 	false; Offset of numeric ids 	0; Add orf stop 	false; Chain overlapping alignments 	0; Merge query 	1; Search type 	0; Number search iterations 	1; Start sensitivity 	4; Search steps 	1; Run a seq-profile search in slice mode	false; Strand selection 	1; Disk space limit 	0; MPI runner; Force restart with latest tmp 	false; Remove temporary files 	false; LCA ranks 	kingdom:phylum:class:order:family:genus:species; Blacklisted taxa 	12908,28384; Show taxon lineage 	false; LCA mode 	3; Taxo",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/221#issuecomment-515936587:1724,Mask,Mask,1724,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/221#issuecomment-515936587,1,['Mask'],['Mask']
Availability,"lignments.cpp:285:94: warning: ‘querySeq’ may be used uninitialized in this function [-Wmaybe-uninitialized]; printSeqBasedOnAln(result, querySeq, res.qStartPos, backtrace, false);; ^; /galaxy/home/ksahlin/prefix/source/MMseqs2/src/util/convertalignments.cpp:160:19: note: ‘querySeq’ was declared here; Sequence *querySeq;; ^; [ 52%] Building CXX object src/CMakeFiles/mmseqs-framework.dir/util/convertkb.cpp.o; [ 53%] Building CXX object src/CMakeFiles/mmseqs-framework.dir/util/convertmsa.cpp.o; [ 53%] Building CXX object src/CMakeFiles/mmseqs-framework.dir/util/convertprofiledb.cpp.o; [ 54%] Building CXX object src/CMakeFiles/mmseqs-framework.dir/util/createdb.cpp.o; [ 54%] Building CXX object src/CMakeFiles/mmseqs-framework.dir/util/dbtype.cpp.o; [ 54%] Building CXX object src/CMakeFiles/mmseqs-framework.dir/util/indexdb.cpp.o; [ 55%] Building CXX object src/CMakeFiles/mmseqs-framework.dir/util/offsetalignment.cpp.o; [ 55%] Building CXX object src/CMakeFiles/mmseqs-framework.dir/util/createseqfiledb.cpp.o; [ 56%] Building CXX object src/CMakeFiles/mmseqs-framework.dir/util/createsubdb.cpp.o; [ 56%] Building CXX object src/CMakeFiles/mmseqs-framework.dir/util/createtsv.cpp.o; /galaxy/home/ksahlin/prefix/source/MMseqs2/src/util/createtsv.cpp: In function ‘int createtsv(int, const char**, const Command&)’:; /galaxy/home/ksahlin/prefix/source/MMseqs2/src/util/createtsv.cpp:58:62: error: ‘SIZE_T_MAX’ was not declared in this scope; const size_t targetColumn = (par.targetTsvColumn == 0) ? SIZE_T_MAX : par.targetTsvColumn - 1;; ^; src/CMakeFiles/mmseqs-framework.dir/build.make:1838: recipe for target 'src/CMakeFiles/mmseqs-framework.dir/util/createtsv.cpp.o' failed; make[2]: *** [src/CMakeFiles/mmseqs-framework.dir/util/createtsv.cpp.o] Error 1; CMakeFiles/Makefile2:377: recipe for target 'src/CMakeFiles/mmseqs-framework.dir/all' failed; make[1]: *** [src/CMakeFiles/mmseqs-framework.dir/all] Error 2; Makefile:127: recipe for target 'all' failed; make: *** [all] Error 2; ```",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/111#issuecomment-418140145:16552,error,error,16552,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/111#issuecomment-418140145,4,"['Error', 'error']","['Error', 'error']"
Availability,"ly extendable false; Skip repeating k-mers false. Set cluster sensitivity to -s 6.000000; Set cluster iterations to 3; linclust ../DB_in/fasta_in_db_HC tmp//538598962955004214/clu_redundancy tmp//538598962955004214/linclust --cluster-mode 0 --max-iterations 1000 --similarity-type 2 --threads 16 --compressed 0 -v 3 --sub-mat nucl:nucleotide.out,aa:blosum62.out -a 0 --alignment-mode 3 --wrapped-scoring 0 -e 0.001 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --zdrop 40 --alph-size nucl:5,aa:13 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 -k 0 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --rescore-mode 0 --filter-hits 0 --sort-results 0 --remove-tmp-files 0 --force-reuse 0. kmermatcher ../DB_in/fasta_in_db_HC tmp//538598962955004214/linclust/16628284907041385511/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-id 0 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 16 --compressed 0 -v 3. kmermatcher ../DB_in/fasta_in_db_HC tmp//538598962955004214/linclust/16628284907041385511/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-id 0 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 0 --include-",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-773234853:2726,mask,mask,2726,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-773234853,2,['mask'],"['mask', 'mask-lower-case']"
Availability,"m (once again) stuck on the `cstranslate` step. It looks like `cstranslate` doesnt know that `.ffdata` is split into many parts. Is it possible to consolidate them?. Commands (search, flat file generation, then cstranslate):; ```; ~/apps/mmseqs2/git/build/bin/mmseqs search \; euk_screen_split/screenDB_split_0_100 \; uref_euk85_repDB_lfs/uref_euk85_rep \; euk_screen_split_prof/screenDB_split_0_100 \; $MMTEMP \; -a \; --local-tmp /scratch/$USER/$SLURM_JOB_ID \; --split-memory-limit 150000000. ~/apps/mmseqs2/git/build/bin/mmseqs result2msa \; euk_screen_split/screenDB_split_0_100 \; uref_euk85_repDB_lfs/uref_euk85_rep \; euk_screen_split_prof/screenDB_split_0_100 \; euk_screen_split_flat/screenDB_split_0_100 \; --threads 24 \; --compress. ~/apps/hh-suite/git/build/bin/cstranslate \; -i ""euk_screen_split_msa/screenDB_split_0_100"" \; -o ""euk_screen_split_msa/screenDB_split_0_100_cs219"" \; -f -x 0.3 -c 4 -I ca3m; ```. Output of `cstranslate`; ```; - 13:12:38.156 ERROR: In /home/saladi1/apps/hh-suite/git/src/ffindexdatabase.cpp:11: FFindexDatabase:. - 13:12:38.156 ERROR: could not open file 'euk_screen_split_msa/screenDB_split_0_100_ca3m.ffdata'. Reading context library for pseudocounts from internal ...; Reading abstract state alphabet from internal ...; ```. Files do exist:. ```; [saladi1@comet-ln3 mmdb]$ ls -1 euk_screen_split_msa/screenDB_split_0_100*; euk_screen_split_msa/screenDB_split_0_100_ca3m.ffdata.0; euk_screen_split_msa/screenDB_split_0_100_ca3m.ffdata.1; euk_screen_split_msa/screenDB_split_0_100_ca3m.ffdata.10; euk_screen_split_msa/screenDB_split_0_100_ca3m.ffdata.11; euk_screen_split_msa/screenDB_split_0_100_ca3m.ffdata.12; euk_screen_split_msa/screenDB_split_0_100_ca3m.ffdata.13; euk_screen_split_msa/screenDB_split_0_100_ca3m.ffdata.14; euk_screen_split_msa/screenDB_split_0_100_ca3m.ffdata.15; euk_screen_split_msa/screenDB_split_0_100_ca3m.ffdata.16; euk_screen_split_msa/screenDB_split_0_100_ca3m.ffdata.17; euk_screen_split_msa/screenDB_split_0_100_ca3m.ffd",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/191#issuecomment-491998440:1075,ERROR,ERROR,1075,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/191#issuecomment-491998440,1,['ERROR'],['ERROR']
Availability,"m60.out to /Users/moorer/Downloads/mmseqs2/src/generatedfiles/blosum60.out.h; -- Compile blosum62.out to /Users/moorer/Downloads/mmseqs2/src/generatedfiles/blosum62.out.h; -- Compile blosum65.out to /Users/moorer/Downloads/mmseqs2/src/generatedfiles/blosum65.out.h; -- Compile blosum70.out to /Users/moorer/Downloads/mmseqs2/src/generatedfiles/blosum70.out.h; -- Compile blosum75.out to /Users/moorer/Downloads/mmseqs2/src/generatedfiles/blosum75.out.h; -- Compile blosum80.out to /Users/moorer/Downloads/mmseqs2/src/generatedfiles/blosum80.out.h; -- Compile blosum85.out to /Users/moorer/Downloads/mmseqs2/src/generatedfiles/blosum85.out.h; -- Compile blosum90.out to /Users/moorer/Downloads/mmseqs2/src/generatedfiles/blosum90.out.h; -- Compile blosum95.out to /Users/moorer/Downloads/mmseqs2/src/generatedfiles/blosum95.out.h; -- Compile cascaded_clustering.sh to /Users/moorer/Downloads/mmseqs2/src/generatedfiles/cascaded_clustering.sh.h; -- Compile clustering.sh to /Users/moorer/Downloads/mmseqs2/src/generatedfiles/clustering.sh.h; -- Compile update_clustering.sh to /Users/moorer/Downloads/mmseqs2/src/generatedfiles/update_clustering.sh.h; -- Configuring done; -- Generating done; -- Build files have been written to: /Users/moorer/Downloads/mmseqs2/build; Zebulon | build -> make; Scanning dependencies of target prefiltering; [ 0%] Building CXX object src/prefiltering/CMakeFiles/prefiltering.dir/ExtendedSubstitutionMatrix.cpp.o; [ 1%] Building CXX object src/prefiltering/CMakeFiles/prefiltering.dir/Indexer.cpp.o; [ 2%] Building CXX object src/prefiltering/CMakeFiles/prefiltering.dir/KmerGenerator.cpp.o; [ 3%] Building CXX object src/prefiltering/CMakeFiles/prefiltering.dir/Main.cpp.o; /Users/moorer/Downloads/mmseqs2/src/prefiltering/Main.cpp: In function 'int prefilter(int, const char**, const Command&)':; /Users/moorer/Downloads/mmseqs2/src/prefiltering/Main.cpp:72:12: warning: unused variable 'splitMode' [-Wunused-variable]; size_t splitMode = pref->getSplitMode();; ^~~~~~~",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/7#issuecomment-265028472:4063,Down,Downloads,4063,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/7#issuecomment-265028472,1,['Down'],['Downloads']
Availability,mapping is empty sounds like something went wrong while creating this tsv files I mentioned. Could you please write down the steps you took to generate the tax mapping?,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/779#issuecomment-1872502834:116,down,down,116,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/779#issuecomment-1872502834,1,['down'],['down']
Availability,"mat alignment output 	query,target,fident,alnlen,mismatch,gapopen,qstart,qend,tstart,tend,evalue,bits; Database output 	false; Overlap threshold 	0; Database type 	0; Shuffle input database 	true; Createdb mode 	0; Write lookup file 	0; Greedy best hits 	false. createdb query.fasta tmp/5560041094345909208/query --dbtype 0 --shuffle 1 --createdb-mode 0 --write-lookup 0 --id-offset 0 --compressed 0 -v 3 . Converting sequences; [; Time for merging to query_h: 0h 0m 0s 23ms; Time for merging to query: 0h 0m 0s 22ms; Database type: Aminoacid; Time for processing: 0h 0m 0s 105ms; Create directory tmp/5560041094345909208/search_tmp; search tmp/5560041094345909208/query targetDB_split/targetDB_split_0_32 tmp/5560041094345909208/result tmp/5560041094345909208/search_tmp --alignment-mode 3 -s 7 --remove-tmp-files 1 . prefilter tmp/5560041094345909208/query targetDB_split/targetDB_split_0_32 tmp/5560041094345909208/search_tmp/4325254035791307643/pref_0 --sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --seed-sub-mat 'aa:VTML80.out,nucl:nucleotide.out' -k 0 --target-search-mode 0 --k-score seq:2147483647,prof:2147483647 --alph-size aa:21,nucl:5 --max-seq-len 65535 --max-seqs 300 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --comp-bias-corr-scale 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-prob 0.9 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --threads 32 --compressed 0 -v 3 -s 7.0 . Query database size: 14 type: Aminoacid; Estimated memory consumption: 23G; Target database size: 6263739 type: Aminoacid; Index table k-mer threshold: 100 at k-mer size 6 ; Index table: counting k-mers; [=================================================================] 6.26M 33s 798ms; Index table: Masked residues: 16716549; Index table: fill; [=================================================================; ```",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/805#issuecomment-1899655257:4141,mask,mask,4141,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/805#issuecomment-1899655257,4,"['Mask', 'mask']","['Masked', 'mask', 'mask-lower-case', 'mask-prob']"
Availability,me for merging to seq_wrong_assigned_pref_swaped_aln_ocol: 0h 0m 0s 3ms; Time for processing: 0h 0m 0s 51ms; mergedbs tmp//10798751672030653963/seq_seeds.merged tmp//10798751672030653963/clu_accepted_plus_wrong tmp//10798751672030653963/clu_accepted tmp//10798751672030653963/seq_wrong_assigned_pref_swaped_aln_ocol --merge-stop-empty 0 --compressed 0 -v 3. Merging the results to tmp//10798751672030653963/clu_accepted_plus_wrong; [=================================================================] 100.00% 214 0s 1ms; Time for merging to clu_accepted_plus_wrong: 0h 0m 0s 0ms; Time for processing: 0h 0m 0s 2ms; tsv2db tmp//10798751672030653963/missing.single.seqs tmp//10798751672030653963/missing.single.seqs.db --output-dbtype 6 --compressed 0 -v 3. Output database type: Clustering; Time for merging to missing.single.seqs.db: 0h 0m 0s 0ms; Time for processing: 0h 0m 0s 0ms; mergedbs DB_in tmp//10798751672030653963/clu_accepted_plus_wrong_plus_single tmp//10798751672030653963/clu_accepted_plus_wrong tmp//10798751672030653963/missing.single.seqs.db --merge-stop-empty 0 --compressed 0 -v 3. Merging the results to tmp//10798751672030653963/clu_accepted_plus_wrong_plus_single; [=================================================================] 100.00% 303 0s 0ms; Time for merging to clu_accepted_plus_wrong_plus_single: 0h 0m 0s 0ms; Time for processing: 0h 0m 0s 1ms; clust DB_in tmp//10798751672030653963/clu_accepted_plus_wrong_plus_single DB_clu --cluster-mode 0 --max-iterations 1000 --similarity-type 2 --threads 16 --compressed 0 -v 3. Clustering mode: Set Cover; [=================================================================] 100.00% 303 0s 8ms; Sort entries; Find missing connections; Found 99 new connections.; Reconstruct initial order; Alignment format is not supported! ] 0.00% 1 eta -; Alignment format is not supported!; Alignment format is not supported!; *** Error in Alignment format is not supported!; Segmentation fault (core dumped); Error: Clustering step 2 died,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-775767472:33423,Error,Error,33423,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-775767472,3,"['Error', 'fault']","['Error', 'fault']"
Availability,"mer-len 0 --mask 0 --mask-lower-case 0 -k 0 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --rescore-mode 0 --filter-hits 0 --sort-results 0 --remove-tmp-files 0 --force-reuse 0. kmermatcher artificial2/DB_artificial tmp//7897776346521331899/linclust/17269245559208916342/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-id 0 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 16 --compressed 0 -v 3. kmermatcher artificial2/DB_artificial tmp//7897776346521331899/linclust/17269245559208916342/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-id 0 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 16 --compressed 0 -v 3. Database size: 136 type: Aminoacid; Reduced amino acid alphabet: (A S T) (C) (D B N) (E Q Z) (F Y) (G) (H) (I V) (K R) (L J M) (P) (W) (X). Generate k-mers list for 1 split; [=================================================================] 100.00% 136 0s 41ms; Sort kmer 0h 0m 0s 0ms; Sort by rep. sequence 0h 0m 0s 0ms; Time for fill: 0h 0m 0s 0ms; Time for merging to pref: 0h 0m 0s 0ms; Time for processing: 0h 0m 0s 149ms; rescorediagonal artificial2/DB_artificial artificial2/DB_artificial tmp//7897776346521331899/linclust/17269245559208916342/pref tmp//7897776346521331899/linclust/17269245559208916342/pref_rescore1 --sub-mat nucl:nucleotide.out,aa:blosum62.out --rescore-mode 0 --wrapped-scoring 0 --filter-hits 0 -e 0.001 -c 0.8 -a 0 --cov-mode 0 --min-seq-id 0.5 --min-aln-len 0 --seq-id-mode 0 --add-sel",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-775778998:3923,mask,mask,3923,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-775778998,2,['mask'],"['mask', 'mask-lower-case']"
Availability,"mpatible 	0; Search type 	3; Split database 	0; Split memory limit 	0; Threads 	48; Verbosity 	3. Target split mode. Searching through 7 splits; Estimated memory consumption: 245G; Write VERSION (0); Write META (1); Write SCOREMATRIX3MER (4); Write SCOREMATRIX2MER (3); Write SCOREMATRIXNAME (2); Write SPACEDPATTERN (23); Write DBR1INDEX (5); Write DBR1DATA (6); Write DBR2INDEX (7); Write DBR2DATA (8); Write HDR1INDEX (18); Write HDR1DATA (19); Write HDR2INDEX (20); Write HDR2DATA (21); Write GENERATOR (22); Index table: counting k-mers; tantan: warning: possible numeric inaccuracy ] 0.00% 1 eta -; tantan: forward algorithm total: 0.985075; tantan: backward algorithm total: 0.985076; tantan: warning: possible numeric inaccuracy; tantan: forward algorithm total: 0.985076; tantan: backward algorithm total: 0.985075; tantan: warning: possible numeric inaccuracy; tantan: forward algorithm total: 0.985075; tantan: backward algorithm total: 0.985076; [New LWP 39935]. Program received signal SIGSEGV, Segmentation fault.; [Switching to LWP 39935]; 0x00000000005ca2a1 in calcEmissionProbs (this=0x2ab9698c8900); at /home/vsts/work/1/s/src/commons/tantan.cpp:273; 273	/home/vsts/work/1/s/src/commons/tantan.cpp: No such file or directory.; (gdb) ; (gdb) bt; #0 0x00000000005ca2a1 in calcEmissionProbs (this=0x2ab9698c8900); at /home/vsts/work/1/s/src/commons/tantan.cpp:273; #1 calcRepeatProbs (letterProbs=0x2ab9b800f7cc, this=0x2ab9698c8900); at /home/vsts/work/1/s/src/commons/tantan.cpp:310; #2 tantan::getProbabilities (; seqBeg=seqBeg@entry=0x2ab9b8000c70 ""\004\004\003 \004"", ; seqEnd=seqEnd@entry=0x2ab9b8000c76 """", maxRepeatOffset=<optimized out>, ; likelihoodRatioMatrix=<optimized out>, repeatProb=<optimized out>, ; repeatEndProb=<optimized out>, repeatOffsetProbDecay=<optimized out>, ; firstGapProb=<optimized out>, otherGapProb=<optimized out>, ; probabilities=probabilities@entry=0x2ab9b800f7c0); at /home/vsts/work/1/s/src/commons/tantan.cpp:375; #3 0x00000000005cabf8 in tantan:",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/280#issuecomment-591529323:1788,fault,fault,1788,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/280#issuecomment-591529323,1,['fault'],['fault']
Availability,"mpfiles//13298481167543164943/input_step1 -v 3 --subdb-mode 1. Time for merging to input_step1: 0h 0m 0s 0ms; Time for processing: 0h 0m 0s 1ms; prefilter tmpfiles//13298481167543164943/input_step1 tmpfiles//13298481167543164943/input_step1 tmpfiles//13298481167543164943/pref_step1 --sub-mat nucl:nucleotide.out,aa:blosum62.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -s 3.5 -k 0 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 65535 --max-seqs 20 --split 0 --split-mode 2 --split-memory-limit 0 -c 0.8 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 16 --compressed 0 -v 3. Query database size: 237 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 237 type: Aminoacid; Index table k-mer threshold: 131 at k-mer size 6; Index table: counting k-mers; [=================================================================] 237 0s 39ms; Index table: Masked residues: 0; Index table: fill; [=================================================================] 237 0s 9ms; Index statistics; Entries: 1403; DB size: 488 MB; Avg k-mer size: 0.000022; Top 10 k-mers; XXXXXX 3; XXXXXX 3; XXXXXX 2; XXXXXX 2; XXXXXX 2; XXXXXX 2; XXXXXX 2; XXXXXX 2; XXXXXX 2; XXXXXX 2; Time for index table init: 0h 0m 1s 25ms; Process prefiltering step 1 of 1. k-mer similarity threshold: 131; Starting prefiltering scores calculation (step 1 of 1); Query db start 1 to 237; Target db start 1 to 237; [=================================================================] 237 0s 19ms. 20.483280 k-mers per position; 6 DB matches per sequence; 0 overflows; 0 queries produce too many hits (truncated result); 1 sequences passed prefiltering per query sequence; 1 median result list length; 0 sequences with 0 size result lists; Time for merging to pref_step1: 0h 0m 0s 4ms; Time for processing: 0h 0m 1s 707ms; align tmpfiles",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-771572412:16000,Mask,Masked,16000,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-771572412,1,['Mask'],['Masked']
Availability,"mplete steps I used are described in this script. ```; #!/usr/bin/env bash. ## define files and parameters here; ## sequence file name like ""NAME.fa"" use only the base name NAME and the script will add the ""*.fa"" grob; BASE=""subset""; HH_CONTEXT_DATA=""/home/linuxbrew/anaconda3/data/context_data.lib""; HH_LIB=""/home/linuxbrew/anaconda3/data/cs219.lib""; THREADS=4; SENSITIVITY=7.5; IDENTITY=0; COVERAGE=0.8; EVALUE=0.00001. CLU_MODE=1. FILE=""${BASE}.fa""; MMSEQDB=""${BASE}DB""; MMSEQPREF=""${BASE}PREFILTER""; MMSEQALN=""${BASE}ALN""; MMSEQCLU=""${BASE}CLU""; MMSEQMSA=""${BASE}MSA""; FILELOG=""job.log"". echo '#:: CREATEDB' &>> ${FILELOG} ;; mmseqs createdb ${FILE} ${MMSEQDB} &>> ${FILELOG}. echo '#:: PREFILTER' &>> ${FILELOG} ;; mmseqs prefilter ${MMSEQDB} ${MMSEQDB} ${MMSEQPREF} -s ${SENSITIVITY} --threads ${THREADS} &>> ${FILELOG}. echo '#:: ALING' &>> ${FILELOG} ;; mmseqs align ${MMSEQDB} ${MMSEQDB} ${MMSEQPREF} ${MMSEQALN} -e ${EVALUE} \; --min-seq-id ${IDENTITY} -c ${COVERAGE} --threads ${THREADS} &>> ${FILELOG}; echo '#:: CLUST' &>> ${FILELOG} ;; mmseqs clust ${MMSEQDB} ${MMSEQALN} ${MMSEQCLU} --cluster-mode ${CLU_MODE} --threads ${THREADS} &> ${FILELOG} &>> ${FILELOG}. echo '#:: RESULT2MSA' &>> ${FILELOG} ;; mmseqs result2msa ${MMSEQDB} ${MMSEQDB} ${MMSEQCLU} ${MMSEQMSA} --compress --threads ${THREADS} &>> ${FILELOG}. echo '#:: CREATE LINKS' &>> ${FILELOG} ;; ln -s ${MMSEQDB}_h ${MMSEQMSA}_header.ffdata &>> ${FILELOG}; ln -s ${MMSEQDB}_h.index ${MMSEQMSA}_header.ffindex &>> ${FILELOG}; ln -s ${MMSEQDB} ${MMSEQMSA}_sequence.ffdata &>> ${FILELOG}; ln -s ${MMSEQDB}.index ${MMSEQMSA}_sequence.ffindex &>> ${FILELOG}. echo '#:: BUILD HHBLITS COMPATIBLE' &>> ${FILELOG} ;; mpirun -np ${THREADS} cstranslate -i ${MMSEQMSA}_ca3m.ffdata -o ${MMSEQMSA}_cs219 \; -A ${HH_LIB} \; -D ${HH_CONTEXT_DATA} \; -x 0.3 -c 4 -I ca3m &>> ${FILELOG}; ```. Quiet the same of the previous one. If I change the last step to; ```; cstranslate -f -i ${MMSEQMSA}_ca3m.ffdata -o ${MMSEQMSA}_cs219 -A ${HH_LIB} -D ${",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/174#issuecomment-492826081:2155,echo,echo,2155,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/174#issuecomment-492826081,2,['echo'],['echo']
Availability,"ms; Time for processing: 0h 0m 0s 0ms; prefilter tmp//7897776346521331899/seq_wrong_assigned tmp//7897776346521331899/seq_seeds.merged tmp//7897776346521331899/seq_wrong_assigned_pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -s 6 -k 0 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 65535 --max-seqs 20 --split 0 --split-mode 2 --split-memory-limit 0 -c 0.8 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 16 --compressed 0 -v 3. Query database size: 2 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 126 type: Aminoacid; Index table k-mer threshold: 109 at k-mer size 6; Index table: counting k-mers; [=================================================================] 100.00% 126 0s 29ms; Index table: Masked residues: 0; Index table: fill; [=================================================================] 100.00% 126 0s 1ms; Index statistics; Entries: 116; DB size: 488 MB; Avg k-mer size: 0.000002; Top 10 k-mers; FSMYPQ 6; HFVFHR 4; YQYPRV 3; LAMYPA 1; ARPIVA 1; CHMEKC 1; VQRKKC 1; RGYLLC 1; MVQDRC 1; CEMRRC 1; Time for index table init: 0h 0m 0s 981ms; Process prefiltering step 1 of 1. k-mer similarity threshold: 109; Starting prefiltering scores calculation (step 1 of 1); Query db start 1 to 2; Target db start 1 to 126; [=================================================================] 100.00% 2 0s 4ms. 0.000000 k-mers per position; 0 DB matches per sequence; 0 overflows; 0 queries produce too many hits (truncated result); 0 sequences passed prefiltering per query sequence; 0 median result list length; 2 sequences with 0 size result lists; Time for merging to seq_wrong_assigned_pref: 0h 0m 0s 0ms; Time for processing: 0h 0m 1s 582ms; swapdb tmp//7897776346521331899/seq_wrong_assigned_pref tmp//7897776346521331899/seq_w",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-775778998:28475,Mask,Masked,28475,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-775778998,1,['Mask'],['Masked']
Availability,ms; mergeclusters /ebio/abt3_scratch/nyoungblut/Struo2_122419461619/cluster_update/11607510948275416679/toBeClusteredSeparately /ebio/abt3_scratch/nyoungblut/Struo2_122419461619/cluster_update/11607510948275416679/newClusters /ebio/abt3_scratch/nyoungblut/Struo2_122419461619/cluster_update/11607510948275416679/cluster/3119053913462861916/clu_redundancy /ebio/abt3_scratch/nyoungblut/Struo2_122419461619/cluster_update/11607510948275416679/cluster/3119053913462861916/clu_step0 /ebio/abt3_scratch/nyoungblut/Struo2_122419461619/cluster_update/11607510948275416679/cluster/3119053913462861916/clu_step1 /ebio/abt3_scratch/nyoungblut/Struo2_122419461619/cluster_update/11607510948275416679/cluster/3119053913462861916/clu_step2 --threads 12 --compressed 0 -v 3. Clustering step 1; [=================================================================] 6 0s 1ms; Clustering step 2; [=================================================================] 6 0s 4ms; Clustering step 3; [=================================================================] 6 0s 8ms; Clustering step 4; [=================================================================] 6 0s 11ms; Write merged clustering; [=================================================================] 6 0s 16ms; Time for merging to newClusters: 0h 0m 0s 6ms; Time for processing: 0h 0m 0s 31ms; ===================================================; ==== Merge the updated clustering together with ===; ===== the new clusters ======; ===================================================; concatdbs /ebio/abt3_scratch/nyoungblut/Struo2_122419461619/cluster_update/11607510948275416679/updatedClust /ebio/abt3_scratch/nyoungblut/Struo2_122419461619/cluster_update/11607510948275416679/newClusters /ebio/abt3_scratch/nyoungblut/Struo2_122419461619/cluster_updated/clusters_db.0 --preserve-keys. No datafile could be found for /ebio/abt3_scratch/nyoungblut/Struo2_122419461619/cluster_update/11607510948275416679/updatedClust!; Error: Dbconcat died; ```. </details>,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/333#issuecomment-663145167:34879,Error,Error,34879,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/333#issuecomment-663145167,1,['Error'],['Error']
Availability,"n alnDB_reassign -a --threads 24 --comp-bias-corr 0 -e 9007199254740992; mmseqs convertalis protfamDB protfamDB alnDB_reassign aln_to_clustreps.m8; awk '$4<50{print}' aln_to_clustreps.m8 | sort -nk4,4 | head; ```. ```; 45656_3631 1137799_3214 0.950 20 1 0 79 98 423 442 2.607E-05 51; 45656_3631 217204_6534 0.809 21 4 0 79 99 695 715 1.266E-04 49; 45656_3631 2571105_3757 0.761 21 5 0 79 99 695 715 3.266E-04 48; 45656_3631 668_9026 0.761 21 5 0 79 99 714 734 1.155E-03 46; 489_1270 489_2691 1.000 21 0 0 1 21 1 21 3.857E-05 50; 33968_38 33968_2958 0.833 24 4 0 92 115 128 151 2.956E-04 48; 1550024_4392 1608583_1648 0.720 25 7 0 6 30 7 31 2.660E-04 48; 2527978_7844 2527978_861 0.920 25 2 0 1 25 1 25 1.690E-05 52; 45656_3631 191863_3100 0.880 25 3 0 75 99 282 306 8.777E-08 58; 1128665_3036 709876_1980 0.653 26 9 0 43 68 211 236 2.419E-03 45; ```. For example, in the first row of output above, the alignment length is 20 residues for a query sequence that is 100 residues long. My clustering parameters (-c 0.5 --cov-mode 2) should prevent a target sequence w/ alignment length <50 residues from joining this cluster, right?. On a related note, I noted this line in my clustering output log:; ```; Combining cluster mode 0 in combination with coverage mode 2 can produce wrong results.; Please use --cov-mode 2; ```; And found this comment from a previous issue:; `The cluster mode 0 (set cover) requires a bi-directional coverage criteria. If it is used with unidirectional coverage than it pick representative sequences that do not fulfill the clustering criteria anymore.`; `Originally posted by @martin-steinegger in` https://github.com/soedinglab/MMseqs2/issues/218#issuecomment-580978693. It seems like my choice of parameters is at fault, and that I would probably have clusters that more closely obey the criteria if I used cov-mode 0 and cluster-mode 0 (set cover, query AND target coverage), or cov-mode 1 and cluster-mode 2 (CD-hit-like, target coverage). Am I understanding correctly?",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/585#issuecomment-1220229129:2165,fault,fault,2165,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/585#issuecomment-1220229129,1,['fault'],['fault']
Availability,"n: 	1f302134aa1c6c7c4e2b9da272fd26af33860780; Substitution matrix 	nucl:nucleotide.out,aa:blosum62.out; Add backtrace 	false; Alignment mode 	3; Allow wrapped scoring 	false; E-value threshold 	0.001; Seq. id. threshold 	0; Min alignment length 	0; Seq. id. mode 	0; Alternative alignments 	0; Coverage threshold 	0; Coverage mode 	0; Max sequence length 	65535; Compositional bias 	1; Max reject 	2147483647; Max accept 	2147483647; Include identical seq. id. 	false; Preload mode 	0; Pseudo count a 	1; Pseudo count b 	1.5; Score bias 	0; Realign hits 	false; Realign score bias 	-0.2; Realign max seqs 	2147483647; Gap open cost 	nucl:5,aa:11; Gap extension cost 	nucl:2,aa:1; Zdrop 	40; Threads 	256; Compressed 	0; Verbosity 	3; Seed substitution matrix 	nucl:nucleotide.out,aa:VTML80.out; Sensitivity 	5.7; k-mer length 	0; k-score 	2147483647; Alphabet size 	nucl:5,aa:21; Max results per query 	300; Split database 	0; Split mode 	2; Split memory limit 	0; Diagonal scoring 	true; Exact k-mer matching 	0; Mask residues 	1; Mask lower case residues 	0; Minimum diagonal score 	15; Spaced k-mers 	1; Spaced k-mer pattern 	; Local temporary path 	; Rescore mode 	0; Remove hits by seq. id. and coverage	false; Sort results 	0; Mask profile 	1; Profile E-value threshold 	0.001; Global sequence weighting 	false; Allow deletions 	false; Filter MSA 	1; Maximum seq. id. threshold 	0.9; Minimum seq. id. 	0; Minimum score per column 	-20; Minimum coverage 	0; Select N most diverse seqs 	1000; Min codons in orf 	30; Max codons in length 	32734; Max orf gaps 	2147483647; Contig start mode 	2; Contig end mode 	2; Orf start mode 	1; Forward frames 	1,2,3; Reverse frames 	1,2,3; Translation table 	1; Translate orf 	0; Use all table starts 	false; Offset of numeric ids 	0; Create lookup 	0; Add orf stop 	false; Overlap between sequences 	0; Sequence split mode 	1; Header split mode 	0; Chain overlapping alignments 	0; Merge query 	1; Search type 	3; Search iterations 	1; Start sensitivity 	4; ",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/394#issuecomment-782439476:2461,Mask,Mask,2461,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/394#issuecomment-782439476,2,['Mask'],['Mask']
Availability,"nal	false; Mask profile 	1; Profile e-value threshold 	0.1; Use global sequence weighting 	false; Filter MSA 	1; Maximum sequence identity threshold 	0.9; Minimum seq. id. 	0; Minimum score per column 	-20; Minimum coverage 	0; Select n most diverse seqs 	1000; Omit Consensus 	false; Min codons in orf 	30; Max codons in length 	32734; Max orf gaps 	2147483647; Contig start mode 	2; Contig end mode 	2; Orf start mode 	0; Forward Frames 	1,2,3; Reverse Frames 	1,2,3; Translation Table 	1; Use all table starts 	false; Offset of numeric ids 	0; Add Orf Stop 	false; Number search iterations 	3; Start sensitivity 	4; Search steps 	1; Run a seq-profile search in slice mode 	0; Sets the MPI runner 	; Remove Temporary Files 	false. Program call:; prefilter geneC.db genes.db tmpC/13630618462368123119/pref_0 --sub-mat blosum62.out -s 5.7 -k 0 --k-score 2147483647 --alph-size 21 --max-seq-len 65535 --max-seqs 1000 --offset-result 0 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --no-preload 1 --pca 1 --pcb 1.5 --threads 56 -v 3 . MMseqs Version: 	GITDIR-NOTFOUND; Sub Matrix 	blosum62.out; Sensitivity 	5.7; K-mer size 	0; K-score 	2147483647; Alphabet size 	21; Max. sequence length 	65535; Max. results per query 	1000; Offset result 	0; Split DB 	0; Split mode 	2; Split Memory Limit 	0; Coverage threshold 	0; Coverage Mode 	0; Compositional bias 	1; Diagonal Scoring 	1; Exact k-mer matching 	0; Mask Residues 	1; Minimum Diagonal score 	15; Include identical Seq. Id.	false; Spaced Kmer 	1; No preload 	true; Pseudo count a 	1; Pseudo count b 	1.5; Spaced k-mer pattern 	; Threads 	56; Verbosity 	3. Initialising data structures...; Using 56 threads.; Could not find precomputed index. Compute index.; Substitution matrices...; Use kmer size 7 and split 3 using Target split mode.; Needed memory (230985702428 byte) of total memory (364787",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/160#issuecomment-461782109:126525,mask,mask,126525,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/160#issuecomment-461782109,1,['mask'],['mask']
Availability,"nal bias 	1; Compositional bias 	1; Max reject 	5; Max accept 	30; Include identical seq. id. 	false; Preload mode 	0; Pseudo count a 	substitution:1.100,context:1.400; Pseudo count b 	substitution:4.100,context:5.800; Score bias 	0; Realign hits 	false; Realign score bias 	-0.2; Realign max seqs 	2147483647; Correlation score weight 	0; Gap open cost 	aa:11,nucl:5; Gap extension cost 	aa:1,nucl:2; Zdrop 	40; Seed substitution matrix 	aa:VTML80.out,nucl:nucleotide.out; Sensitivity 	2; k-mer length 	0; Target search mode 	0; k-score 	seq:2147483647,prof:2147483647; Alphabet size 	aa:21,nucl:5; Max results per query 	300; Split database 	0; Split mode 	2; Split memory limit 	0; Diagonal scoring 	true; Exact k-mer matching 	0; Mask residues 	1; Mask residues probability 	0.9; Mask lower case residues 	0; Minimum diagonal score 	15; Selected taxa; Spaced k-mers 	1; Spaced k-mer pattern; Local temporary path; Rescore mode 	0; Remove hits by seq. id. and coverage 	false; Sort results 	0; Mask profile 	1; Profile E-value threshold 	0.001; Global sequence weighting 	false; Allow deletions 	false; Filter MSA 	1; Use filter only at N seqs 	0; Maximum seq. id. threshold 	0.9; Minimum seq. id. 	0.0; Minimum score per column 	-20; Minimum coverage 	0; Select N most diverse seqs 	1000; Pseudo count mode 	0; Min codons in orf 	30; Max codons in length 	32734; Max orf gaps 	2147483647; Contig start mode 	2; Contig end mode 	2; Orf start mode 	1; Forward frames 	1,2,3; Reverse frames 	1,2,3; Translation table 	1; Translate orf 	0; Use all table starts 	false; Offset of numeric ids 	0; Create lookup 	0; Add orf stop 	false; Overlap between sequences 	0; Sequence split mode 	1; Header split mode 	0; Chain overlapping alignments 	0; Merge query 	1; Search type 	0; Prefilter mode 	0; Exhaustive search mode 	false; Filter results during exhaustive search	0; Strand selection 	1; LCA search mode 	false; Disk space limit 	0; MPI runner; Force restart with latest tmp 	false; Remove temporary ",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/838#issuecomment-2081682741:1940,Mask,Mask,1940,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/838#issuecomment-2081682741,1,['Mask'],['Mask']
Availability,nce length	32000; Mask Residues 	1; Split DB 	0; Spaced Kmer 	1; Threads 	4; Verbosity 	3. Substitution matrices...; Use kmer size 6 and split 1 using split mode; Index table: counting k-mers...; ........WARNING: Sequence (dbKey=82431) contains only ATGC. It might be a nucleotide sequence.; ..WARNING: Sequence (dbKey=102237) contains only ATGC. It might be a nucleotide sequence.; WARNING: Sequence (dbKey=105125) contains only ATGC. It might be a nucleotide sequence.; WARNING: Sequence (dbKey=105031) contains only ATGC. It might be a nucleotide sequence.; WARNING: Sequence (dbKey=105583) contains only ATGC. It might be a nucleotide sequence. Index table: Masked residues: 239357; Index table: fill...; ..........; Index table: removing duplicate entries...; Index table init done. Write 10; Write 20; Write 60; Write 70; Write 80; Write 30; Write 40; Write 5; Write 0; Write MMSEQSFFINDEX ; Time for merging files: 0 h 0 m 0 s; Done. ; Program call:; DB DB resultDB tmp -a -s 7.5 --mask 0 --comp-bias-corr 0 . MMseqs Version: 	e2c8166b292d5e65271887cf4af568f32b346dd2; Sub Matrix 	blosum62.out; Add backtrace 	true; Alignment mode 	0; E-value threshold 	0.001; Seq. Id Threshold 	0; Coverage threshold 	0; Max. sequence length 	32000; Max. results per query 	300; Compositional bias 	0; Profile 	false; Realign hit 	false; Max Reject 	2147483647; Max Accept 	2147483647; Include identical Seq. Id. 	false; Threads 	4; Verbosity 	3; Sensitivity 	7.5; K-mer size 	0; K-score 	2147483647; Alphabet size 	21; Offset result 	0; Split DB 	0; Split mode 	2; Diagonal Scoring 	1; Mask Residues 	0; Minimum Diagonal score 	15; Spaced Kmer 	1; Profile e-value threshold 	0.001; Use global sequence weighting 	false; Maximum sequence identity threshold	0.9; Minimum seq. id. 	0; Minimum score per column 	-20; Minimum coverage 	0; Select n most diverse seqs 	100; Pseudo count a 	1; Pseudo count b 	1.5; Number search iterations 	1; Start sensitivity 	4; sensitivity step size 	1; Sets the MPI runner 	. /,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/12#issuecomment-275642021:1667,mask,mask,1667,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/12#issuecomment-275642021,1,['mask'],['mask']
Availability,"nd aa:1,nucl:2 --zdrop 40 --alph-size aa:13,nucl:5 --kmer-per-seq 21; --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-pr; ob 0.9 --mask-lower-case 0 -k 0 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --; ignore-multi-kmer 0 --rescore-mode 0 --filter-hits 0 --sort-results 0 --remove-tmp-files 0 --force-re; use 0 ; ; kmermatcher /home/outdir/2023_06/tmp/input_step2 /home/outdir/2023_06/tmp/clu_uniclust30/13156544047496927710/linclust/2296487886038157831/pref --; sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --alph-size aa:13,nucl:5 --min-seq-id 0 --kmer-per-seq ; 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-prob 0.9 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-mem; ory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 6 --compressed 0 -v 3 . kmermatcher /home/outdir/2023_06/tmp/input_step2 /home/outdir/2023_06/tmp/clu_uniclust30/13156544047496927710/linclust/2296487886038157831/pref --; sub-mat 'aa:blosum62.out,nucl:nucleotide.out' --alph-size aa:13,nucl:5 --min-seq-id 0 --kmer-per-seq ; 21 --spaced-kmer-mode 1 --kmer-per-seq-scale aa:0.000,nucl:0.200 --adjust-kmer-len 0 --mask 0 --mask-; prob 0.9 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-mem; ory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 6 --compressed 0 -v 3 . Invalid non-numeric value for environment variable MMSEQS_CALL_DEPTH!; Error: kmermatcher died; Error: linclust died; ```. My knowledge of mmseqs and its output format is limited and any help would be much appreciated. I also wonder why there does not seem to be any file/flag directing the output of uniclust50 to uniclust30, which might not make it hierarchical. If I want to also implement a ""uniclust70"" -> uniclust50 -> uniclust30, which line(s) should I look for? Let me know if I have missed anything.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/700#issuecomment-1589819536:7554,mask,mask,7554,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/700#issuecomment-1589819536,5,"['Error', 'mask']","['Error', 'mask', 'mask-lower-case']"
Availability,"netsurfp seems to not be really open source, so I can't find exactly whats going wrong. . I found this https://github.com/Eryk96/NetSurfP-3.0/blob/main/nsp2/netsurfp2_dev/preprocessing/mmseqs.py, but it looks somewhat different to your error message. I would recommend to make a fake mmseqs script that fixes the issue for netsurfp:; ```; mv /opt/conda/envs/netsurfp/bin/mmseqs /opt/conda/envs/netsurfp/bin/mmseqs_real; cat << 'HERE' > /opt/conda/envs/netsurfp/bin/mmseqs; #!/bin/sh ; export MMSEQS_FORCE_MERGE=1; mmseqs_real ""${@}""; HERE; chmod +x /opt/conda/envs/netsurfp/bin/mmseqs; ```",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/581#issuecomment-1197679944:236,error,error,236,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/581#issuecomment-1197679944,1,['error'],['error']
Availability,"ngth 	0; Seq. id. mode 	0; Alternative alignments 	0; Coverage threshold 	0; Coverage mode 	0; Max sequence length 	65535; Compositional bias 	1; Compositional bias 	1; Max reject 	5; Max accept 	30; Include identical seq. id. 	false; Preload mode 	0; Pseudo count a 	substitution:1.100,context:1.400; Pseudo count b 	substitution:4.100,context:5.800; Score bias 	0; Realign hits 	false; Realign score bias 	-0.2; Realign max seqs 	2147483647; Correlation score weight 	0; Gap open cost 	aa:11,nucl:5; Gap extension cost 	aa:1,nucl:2; Zdrop 	40; Seed substitution matrix 	aa:VTML80.out,nucl:nucleotide.out; Sensitivity 	2; k-mer length 	0; Target search mode 	0; k-score 	seq:2147483647,prof:2147483647; Alphabet size 	aa:21,nucl:5; Max results per query 	300; Split database 	0; Split mode 	2; Split memory limit 	0; Diagonal scoring 	true; Exact k-mer matching 	0; Mask residues 	1; Mask residues probability 	0.9; Mask lower case residues 	0; Minimum diagonal score 	15; Selected taxa; Spaced k-mers 	1; Spaced k-mer pattern; Local temporary path; Rescore mode 	0; Remove hits by seq. id. and coverage 	false; Sort results 	0; Mask profile 	1; Profile E-value threshold 	0.001; Global sequence weighting 	false; Allow deletions 	false; Filter MSA 	1; Use filter only at N seqs 	0; Maximum seq. id. threshold 	0.9; Minimum seq. id. 	0.0; Minimum score per column 	-20; Minimum coverage 	0; Select N most diverse seqs 	1000; Pseudo count mode 	0; Min codons in orf 	30; Max codons in length 	32734; Max orf gaps 	2147483647; Contig start mode 	2; Contig end mode 	2; Orf start mode 	1; Forward frames 	1,2,3; Reverse frames 	1,2,3; Translation table 	1; Translate orf 	0; Use all table starts 	false; Offset of numeric ids 	0; Create lookup 	0; Add orf stop 	false; Overlap between sequences 	0; Sequence split mode 	1; Header split mode 	0; Chain overlapping alignments 	0; Merge query 	1; Search type 	0; Prefilter mode 	0; Exhaustive search mode 	false; Filter results during exhaustive search	0; ",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/838#issuecomment-2081682741:1727,Mask,Mask,1727,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/838#issuecomment-2081682741,1,['Mask'],['Mask']
Availability,"nks again! . Here are my observations: ; * sensitivity hardly matters (with a restrictive evalue, the results are almost identical. With a permissive evalue, there are slightly more hits with an increased sensitivity) -> I'll stick with `s=1` or `s=2` for speed. ; * In fact, the evalue seems to be the restrictive factor (which makes sense, given that the peptides are so small and the database so large). With the default evalue of `0.001`, only 26k out of 630k peptides generate a match (all of them *are* contained in the database at least once). ; * `--comp-bias-corr 0` and `--mask 0` seem to be advantageous. With a permissive evalue of `1e7`, `630467/630487` peptides are found if the both options are set to 0. If they are set to 1, only 594113/630487 peptides are found. On the first sight, the missing peptides do not look particularly low complexity (e.g. `LASLSSVFFFIISFI`, `LKEKLNRNRENSTAT`, `NEGCNSNSSTPRQNT`). ; * With a sensitivity of `s=1`, `--comp-bias-corr 0` and `--mask 0` and an evalue of `1e7` *almost all* perfect matches are found (`630467/630487`). With `s>=2` and otherwise same settings *all* perfect matches are found. . ---. For now, I will, therefore, use the following settings and see how that works out: ; ```bash; --seed-sub-mat VTML40.out ; -s 2 ; --comp-bias-corr 0 --mask 0; --gap-open 16 ; --gap-extend 2 ; --min-length 9 ; --spaced-kmer-pattern 11011101 ; -e 10000000; -k 6 ; ```. ---. Here are the raw counts of matches. `biascorr = 0` implies `mask = 0`. ; ```console; > wc -l * | sort -n ; 1283115 AE009951.2_sens1_biascorr0_eval0.001_mmseqs.tsv ; 1283126 AE009951.2_sens4_biascorr0_eval0.001_mmseqs.tsv; 1283235 AE009951.2_sens2_biascorr0_eval0.001_mmseqs.tsv; 1419374 AE009951.2_sens1_biascorr1_eval0.001_mmseqs.tsv; 1419971 AE009951.2_sens2_biascorr1_eval0.001_mmseqs.tsv; 1420095 AE009951.2_sens4_biascorr1_eval0.001_mmseqs.tsv; 155001100 AE009951.2_sens1_biascorr1_eval10000000_mmseqs.tsv; 198438767 AE009951.2_sens2_biascorr1_eval10000000_mmseqs.tsv;",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/373#issuecomment-729734160:990,mask,mask,990,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/373#issuecomment-729734160,1,['mask'],['mask']
Availability,"nment 0 --mask-profile 1 --e-profile 0.001 --wg 0 --filter-msa 1 --max-seq-id 0.9 --qid 0 --qsc -20 --cov 0 --diff 1000 --omit-consensus 0 --min-length 30 --max-length 32734 --max-gaps 2147483647 --contig-start-mode 2 --contig-end-mode 2 --orf-start-mode 1 --forward-frames 1,2,3 --reverse-frames 1,2,3 --translation-table 1 --use-all-table-starts 0 --id-offset 0 --add-orf-stop 0 --chain-alignments 0 --search-type 0 --num-iterations 1 --start-sens 4 --sens-steps 1 --slice-search 0 --strand 1 --disk-space-limit 0 --force-reuse 0 --remove-tmp-files 0. Program call:; prefilter clusters_rep-seqs_db_14_30 /ebio/abt3_projects/databases_no-backup/uniclust/uniclust50/mmseqs2_8.fac81/uniclust50_2018_08_consensus tmp_part-14/8093924424180559474/tmp_hsp1/12507882511714639255/pref_0 --sub-mat blosum62.out --seed-sub-mat VTML80.out -k 0 --k-score 2147483647 --alph-size 21 --max-seq-len 65535 --max-seqs 200 --offset-result 0 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 24 --compressed 0 -v 3 -s 5.7. Initialising data structures...; Using 24 threads.; Substitution matrices...; Substitution matrices...; Could not find precomputed index. Compute index.; Touch data file /ebio/abt3_projects/databases_no-backup/uniclust/uniclust50/mmseqs2_8.fac81/uniclust50_2018_08_consensus ... Done.; Use kmer size 7 and split 1 using Target split mode.; Needed memory (83288349429 byte) of total memory (973956888576 byte); Target database: /ebio/abt3_projects/databases_no-backup/uniclust/uniclust50/mmseqs2_8.fac81/uniclust50_2018_08_consensus(Size: 22555708); Query database type: Aminoacid; Target database type: Aminoacid; Time for init: 0h 0m 14s 497ms; Query database: clusters_rep-seqs_db_14_30(size=40624); Process prefiltering step 1 of 1. Index table k-mer threshold: 122; Index table:",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/221#issuecomment-516032943:5516,mask,mask,5516,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/221#issuecomment-516032943,2,['mask'],"['mask', 'mask-lower-case']"
Availability,ns 1; Start sensitivity 4; Search steps 1; Run a seq-profile search in slice mode false; Strand selection 1; Disk space limit 0; Sets the MPI runner ; Force restart using the latest tmp false; Remove Temporary Files false. Program call:; prefilter pbps.neighbors.DB pfam_profile.idx tmp/6822607060114486044/pref --sub-mat blosum62.out --seed-sub-mat VTML80.out -s 7.5 -k 6 --k-score 2147483647 --alph-size 21 --max-seq-len 65535 --max-seqs 300 --offset-result 0 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 10 --compressed 0 -v 3 . Initialising data structures...; Using 10 threads.; Substitution matrices...; Substitution matrices...; Use index pfam_profile.idx; Index version: 15; Generated by: 8-fac81; MaxSeqLength: 65535; KmerSize: 6; CompBiasCorr: 1; AlphabetSize: 21; Masked: 0; Spaced: 1; KmerScore: 90; SequenceType: Profile; SourcSeqType: Profile; Headers1: 1; Headers2: 0; ScoreMatrix: VTML80.out; Use kmer size 6 and split 1 using Target split mode.; Needed memory (1064365435 byte) of total memory (181308646195 byte); Target database: pfam_profile.idx(Size: 17772); Query database type: Aminoacid; Target database type: Profile; Time for init: 0h 4m 18s 41ms; Query database: pbps.neighbors.DB(size=1364570); Process prefiltering step 1 of 1. k-mer similarity threshold: 90; k-mer match probability: 0. Starting prefiltering scores calculation (step 1 of 1); Query db start 1 to 1364570; Target db start 1 to 17772; ................................................................................................... 1 Mio. sequences processed; ....................................; 0 k-mers per position.; 49304 DB matches per sequence.; 1 Overflows.; 286 sequences passed prefiltering per query sequence.; Median result list size: 300; 11 sequences with 0 size result,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/189#issuecomment-483627132:2858,Mask,Masked,2858,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/189#issuecomment-483627132,1,['Mask'],['Masked']
Availability,"nt length 	0; Seq. id. mode 	0; Alternative alignments 	0; Coverage threshold 	0; Coverage mode 	0; Max sequence length 	65535; Compositional bias 	1; Max reject 	2147483647; Max accept 	2147483647; Include identical seq. id. 	false; Preload mode 	0; Pseudo count a 	1; Pseudo count b 	1.5; Score bias 	0; Realign hits 	false; Realign score bias 	-0.2; Realign max seqs 	2147483647; Gap open cost 	nucl:5,aa:11; Gap extension cost 	nucl:2,aa:1; Zdrop 	40; Threads 	16; Compressed 	1; Verbosity 	3; Seed substitution matrix 	nucl:nucleotide.out,aa:VTML80.out; Sensitivity 	4; k-mer length 	0; k-score 	2147483647; Alphabet size 	nucl:5,aa:21; Max results per query 	4000; Split database 	0; Split mode 	2; Split memory limit 	0; Diagonal scoring 	true; Exact k-mer matching 	0; Mask residues 	1; Mask lower case residues 	0; Minimum diagonal score 	15; Spaced k-mers 	1; Spaced k-mer pattern 	; Local temporary path 	; Rescore mode 	0; Remove hits by seq. id. and coverage 	false; Sort results 	0; Mask profile 	1; Profile E-value threshold 	0.001; Global sequence weighting 	false; Allow deletions 	false; Filter MSA 	1; Maximum seq. id. threshold 	0.9; Minimum seq. id. 	0; Minimum score per column 	-20; Minimum coverage 	0; Select N most diverse seqs 	1000; Min codons in orf 	30; Max codons in length 	32734; Max orf gaps 	2147483647; Contig start mode 	2; Contig end mode 	2; Orf start mode 	1; Forward frames 	1,2,3; Reverse frames 	1,2,3; Translation table 	1; Translate orf 	0; Use all table starts 	false; Offset of numeric ids 	0; Create lookup 	0; Add orf stop 	false; Overlap between sequences 	0; Sequence split mode 	1; Header split mode 	0; Chain overlapping alignments 	0; Merge query 	1; Search type 	0; Search iterations 	2; Start sensitivity 	4; Search steps 	1; Exhaustive search mode 	false; Filter results during exhaustive search	0; Strand selection 	1; LCA search mode 	false; Disk space limit 	0; MPI runner 	; Force restart with latest tmp 	false; Remove temporary files 	tru",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/460#issuecomment-869008777:1919,Mask,Mask,1919,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/460#issuecomment-869008777,1,['Mask'],['Mask']
Availability,"o families_kmer-per-seq80_max-seqs300_2.tsv; Done. ```; Then i obtain :. `grep ""GCF_002025345.1_ASM202534v1_genomic_04754"" families_kmer-per-seq80_max-seqs300_2.tsv`. ```; GCF_002025345.1_ASM202534v1_genomic_04754	GCF_002025345.1_ASM202534v1_genomic_04754; ```; But if i use MMseqs2 by remplacing /tmp/test by /tmp/clu and families_kmer-per-seq80_max-seqs300_2.db by panproteome.db_clu it produces the same result as you. `mmseqs cluster panproteome.db panproteome.db_clu /tmp/clu/ --kmer-per-seq 80 --max-seqs 300`. ```; Program call:; panproteome.db panproteome.db_clu /tmp/clu/ --kmer-per-seq 80 --max-seqs 300 . MMseqs Version: 	dfb5e6eb53ee034f02cc08d15513fb5ccce7cce7; Sub Matrix 	blosum62.out; Sensitivity 	4; K-mer size 	0; K-score 	2147483647; Alphabet size 	21; Max. sequence length 	65535; Max. results per query 	300; Offset result 	0; Split DB 	0; Split mode 	2; Split Memory Limit 	0; Coverage threshold 	0.8; Coverage Mode 	0; Compositional bias 	1; Diagonal Scoring 	1; Exact k-mer matching 	0; Mask Residues 	1; Minimum Diagonal score 	15; Include identical Seq. Id. 	false; Spaced Kmer 	1; No preload 	false; Early exit 	false; Pseudo count a 	1; Pseudo count b 	1.5; Threads 	36; Verbosity 	3; Add backtrace 	false; Alignment mode 	3; E-value threshold 	0.001; Seq. Id Threshold 	0; Alternative alignments 	0; Realign hit 	false; Max Reject 	2147483647; Max Accept 	2147483647; Cluster mode 	0; Max depth connected component 	1000; Similarity type 	2; Single step clustering 	true; Cascaded clustering steps 	3; Remove Temporary Files 	false; Sets the MPI runner 	; Kmer per sequence 	80; Shift hash 	5; Include only extendable 	false; Skip sequence with n repeating k-mers 	0; Rescore mode 	0; Remove hits by seq.id. and coverage 	false; In substitution scoring mode, performs global alignment along the diagonal	false. Tmp /tmp/clu/ folder does not exist or is not a directory.; Created dir /tmp/clu/; Set cluster settings automatic to s=6; Set cluster mode SET COVER.; Set clust",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/88#issuecomment-401138700:20483,Mask,Mask,20483,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/88#issuecomment-401138700,1,['Mask'],['Mask']
Availability,"ocally.; now, mmseqs server successfully runs. at http://127.0.0.1:8888/; the same codes run sucessfully for online api ""https://api.colabfold.com""; 3, local mmseqs server log with error; [log-mmseqs-msa-server.log](https://github.com/soedinglab/MMseqs2/files/11146747/log-mmseqs-msa-server.log); 4, test codes; ```; import logging; import requests; import time. logger = logging.getLogger(); logging.basicConfig(level=logging.INFO, format='%(asctime)s %(filename)s %(lineno)d: %(message)s',; datefmt='%m-%d %H:%M:%S'); host_url = 'http://127.0.0.1:8888'. def test_pairing():; """""" """"""; query = '>101\nVNPTVFFDIAVDGEPLGRVSFELFADKVPKTAENFRALSTGEKGFGYKGSCFHRIIPGFMCQGGDFTRHNGTGGKSIYGEKFEDENFILKHTGPGILSMANAGPNTNGSQFFICTAKTEWLDGKHVVFGKVKEGMNIVEAMERFGSRNGKTSKKITIADCGQLE\n>102\nHAGPIA\n'; mode = ''; submission_endpoint = 'ticket/pair'; res = requests.post(f'{host_url}/{submission_endpoint}', data={'q':query,'mode': mode}, timeout=6.02); out = res.json(); logger.info('%s', out). # wait for job to finish; max_seconds = 15000; ID, TIME = out[""id""], 0; while out[""status""] in [""UNKNOWN"", ""RUNNING"", ""PENDING"", ""ERROR""]:; t = 5 + random.randint(0, 5); logger.error(f""Sleeping for {t}s. Reason: {out['status']}""); time.sleep(t); out = status(ID); TIME += t; if TIME > max_seconds and out[""status""] != ""COMPLETE"":; # something failed on the server side, need to resubmit; break. def status(ID):; while True:; error_count = 0; try:; res = requests.get(f'{host_url}/ticket/{ID}', timeout=6.02); except requests.exceptions.Timeout:; logger.warning(""Timeout while fetching status from MSA server. Retrying...""); continue; except Exception as e:; error_count += 1; logger.warning(f""Error while fetching result from MSA server. Retrying... ({error_count}/5)""); logger.warning(f""Error: {e}""); time.sleep(5); if error_count > 5:; raise; continue; break; try:; out = res.json(); except ValueError:; logger.error(f""Server didn't reply with json: {res.text}""); out = {""status"":""ERROR""}; return out. test_pairing(); ```",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/690#issuecomment-1495470476:1841,ERROR,ERROR,1841,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/690#issuecomment-1495470476,6,"['ERROR', 'Error', 'error']","['ERROR', 'Error', 'error']"
Availability,"ode = pref->getSplitMode();; ^~~~~~~~~; [ 4%] Building CXX object src/prefiltering/CMakeFiles/prefiltering.dir/Prefiltering.cpp.o; /var/folders/hr/x60c91mj5l1c8gy_6lyhl5l80000gn/T//ccAwPztQ.s:4152:suffix or operands invalid for `movq'; /var/folders/hr/x60c91mj5l1c8gy_6lyhl5l80000gn/T//ccAwPztQ.s:6032:suffix or operands invalid for `movq'; /var/folders/hr/x60c91mj5l1c8gy_6lyhl5l80000gn/T//ccAwPztQ.s:6048:suffix or operands invalid for `movq'; /var/folders/hr/x60c91mj5l1c8gy_6lyhl5l80000gn/T//ccAwPztQ.s:6075:suffix or operands invalid for `movq'; /var/folders/hr/x60c91mj5l1c8gy_6lyhl5l80000gn/T//ccAwPztQ.s:6103:suffix or operands invalid for `movq'; /var/folders/hr/x60c91mj5l1c8gy_6lyhl5l80000gn/T//ccAwPztQ.s:6172:suffix or operands invalid for `movq'; /var/folders/hr/x60c91mj5l1c8gy_6lyhl5l80000gn/T//ccAwPztQ.s:6183:suffix or operands invalid for `movq'; /var/folders/hr/x60c91mj5l1c8gy_6lyhl5l80000gn/T//ccAwPztQ.s:7662:suffix or operands invalid for `movq'; /var/folders/hr/x60c91mj5l1c8gy_6lyhl5l80000gn/T//ccAwPztQ.s:7899:suffix or operands invalid for `movq'; /var/folders/hr/x60c91mj5l1c8gy_6lyhl5l80000gn/T//ccAwPztQ.s:8136:suffix or operands invalid for `movq'; /var/folders/hr/x60c91mj5l1c8gy_6lyhl5l80000gn/T//ccAwPztQ.s:9108:suffix or operands invalid for `movq'; /var/folders/hr/x60c91mj5l1c8gy_6lyhl5l80000gn/T//ccAwPztQ.s:9699:suffix or operands invalid for `movq'; /var/folders/hr/x60c91mj5l1c8gy_6lyhl5l80000gn/T//ccAwPztQ.s:10356:suffix or operands invalid for `movq'; make[2]: *** [src/prefiltering/CMakeFiles/prefiltering.dir/Prefiltering.cpp.o] Error 1; make[1]: *** [src/prefiltering/CMakeFiles/prefiltering.dir/all] Error 2; make: *** [all] Error 2; ```. On the other hand, I cloned the repo again just now and compiled it with `AppleClang 6.1.0.6020053` and it compiled successfully. I'm not sure how, but the command line options for threads, verbosity and min-seq-id are definitely being parsed ...but like you said, it isn't actually using the threads with clang.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/7#issuecomment-265028472:6617,Error,Error,6617,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/7#issuecomment-265028472,3,['Error'],['Error']
Availability,oh the error still exists in the newest version,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/274#issuecomment-586035999:7,error,error,7,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/274#issuecomment-586035999,1,['error'],['error']
Availability,"ok, in that case, how should I change the commands I used above to download the `pdb_seq`?",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/821#issuecomment-2002495113:67,down,download,67,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/821#issuecomment-2002495113,1,['down'],['download']
Availability,"ok, updated output (ran the gdb as suggested):; ```; indexdb ./tmp/11929725182862116610/nucl_split_seq ./MMseqs2DB/MMseqs2DB --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -k 15 --alph-size 21 --comp-bias-corr 1 --max-seq-len 10000 --max-seqs 300 --mask 1 --mask-lower-case 0 --spaced-kmer-mode 1 -s 7.5 --k-score 0 --check-compatible 0 --search-type 3 --split 0 --split-memory-limit 0 --threads 48 -v 3 . MMseqs Version: 	f966bfa62a2b52d4821e908ac9e25808d1be0b81; Seed substitution matrix	nucl:nucleotide.out,aa:VTML80.out; K-mer size 	15; Alphabet size 	21; Compositional bias 	1; Max sequence length 	10000; Max results per query 	300; Mask residues 	1; Mask lower case residues	0; Spaced k-mers 	1; Spaced k-mer pattern 	; Sensitivity 	7.5; K-score 	0; Check compatible 	0; Search type 	3; Split database 	0; Split memory limit 	0; Threads 	48; Verbosity 	3. Target split mode. Searching through 7 splits; Estimated memory consumption: 245G; Write VERSION (0); Write META (1); Write SCOREMATRIX3MER (4); Write SCOREMATRIX2MER (3); Write SCOREMATRIXNAME (2); Write SPACEDPATTERN (23); Write DBR1INDEX (5); Write DBR1DATA (6); Write DBR2INDEX (7); Write DBR2DATA (8); Write HDR1INDEX (18); Write HDR1DATA (19); Write HDR2INDEX (20); Write HDR2DATA (21); Write GENERATOR (22); Index table: counting k-mers; tantan: warning: possible numeric inaccuracy ] 0.00% 1 eta -; tantan: forward algorithm total: 0.985075; tantan: backward algorithm total: 0.985076; tantan: warning: possible numeric inaccuracy; tantan: forward algorithm total: 0.985076; tantan: backward algorithm total: 0.985075; tantan: warning: possible numeric inaccuracy; tantan: forward algorithm total: 0.985075; tantan: backward algorithm total: 0.985076; [New LWP 39935]. Program received signal SIGSEGV, Segmentation fault.; [Switching to LWP 39935]; 0x00000000005ca2a1 in calcEmissionProbs (this=0x2ab9698c8900); at /home/vsts/work/1/s/src/commons/tantan.cpp:273; 273	/home/vsts/work/1/s/src/commons/tantan.cpp: No such file or d",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/280#issuecomment-591529323:251,mask,mask,251,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/280#issuecomment-591529323,4,"['Mask', 'mask']","['Mask', 'mask', 'mask-lower-case']"
Availability,"omz1_200m.fna /d/Databases/Kegg/sram/mmseqs/kegg test.m8 tmp --start-sens 1 --sens-steps 3 -s 6 --strand 2 --max-seqs 1 . MMseqs Version: 	4404fe0a78cf6684e1e701e523789d8e6c1bfbe5; Substitution matrix 	nucl:nucleotide.out,aa:blosum62.out; Add backtrace 	false; Alignment mode 	3; E-value threshold 	0.001; Seq. id. threshold 	0; Min. alignment length 	0; Seq. id. mode 	0; Alternative alignments 	0; Coverage threshold 	0; Coverage mode 	0; Max sequence length 	65535; Compositional bias 	1; Realign hits 	false; Max reject 	2147483647; Max accept 	2147483647; Include identical seq. id. 	false; Preload mode 	0; Pseudo count a 	1; Pseudo count b 	1.5; Score bias 	0; Gap open cost 	11; Gap extension cost 	1; Threads 	40; Compressed 	0; Verbosity 	3; Seed substitution matrix 	nucl:nucleotide.out,aa:VTML80.out; Sensitivity 	6; K-mer size 	0; K-score 	2147483647; Alphabet size 	21; Max results per query 	1; Split database 	0; Split mode 	2; Split memory limit 	0; Diagonal scoring 	true; Exact k-mer matching 	0; Mask residues 	1; Mask lower case residues 	0; Minimum diagonal score 	15; Spaced k-mers 	1; Spaced k-mer pattern 	; Local temporary path 	; Rescore mode 	0; Remove hits by seq. id. and coverage 	false; Sort results 	0; Mask profile 	1; Profile e-value threshold 	0.001; Use global sequence weighting 	false; Filter MSA 	1; Maximum seq. id. threshold 	0.9; Minimum seq. id. 	0; Minimum score per column 	-20; Minimum coverage 	0; Select N most diverse seqs 	1000; Omit consensus 	false; Min codons in orf 	30; Max codons in length 	32734; Max orf gaps 	2147483647; Contig start mode 	2; Contig end mode 	2; Orf start mode 	1; Forward frames 	1,2,3; Reverse frames 	1,2,3; Translation table 	1; Translate orf 	0; Use all table starts 	false; Offset of numeric ids 	0; Create lookup 	0; Add orf stop 	false; Chain overlapping alignments 	0; Merge query 	1; Search type 	0; Number search iterations 	1; Start sensitivity 	1; Search steps 	3; Run a seq-profile search in slice mode	false; ",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/231#issuecomment-535253491:1088,Mask,Mask,1088,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/231#issuecomment-535253491,2,['Mask'],['Mask']
Availability,order.; ..; Add missing connections.; ..; Time for Read in: 0 m 0s. Writing results...; ...done.; Time for clustering: 0 m 0s; Time for merging files: 0 h 0 m 0 s; Total time: 0 m 0s. Size of the sequence database: 23030; Size of the alignment database: 23030; Number of clusters: 18417; Program call:; /tmp/clu//9559457551393989073/clu_step0 /tmp/clu//9559457551393989073/input_step_redundancy /tmp/clu//9559457551393989073/input_step1 . MMseqs Version:	dfb5e6eb53ee034f02cc08d15513fb5ccce7cce7; Verbosity	3. Start writing to file /tmp/clu//9559457551393989073/input_step1; Time for merging files: 0 h 0 m 0 s; Program call:; /tmp/clu//9559457551393989073/input_step1 /tmp/clu//9559457551393989073/input_step1 /tmp/clu//9559457551393989073/pref_step1 --sub-mat blosum62.out -s 3.5 -k 0 --k-score 2147483647 --alph-size 21 --max-seq-len 65535 --max-seqs 300 --offset-result 0 --split 0 --split-mode 2 --split-memory-limit 0 -c 0.8 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --min-ungapped-score 15 --spaced-kmer-mode 1 --pca 1 --pcb 1.5 --threads 36 -v 3 . MMseqs Version: 	dfb5e6eb53ee034f02cc08d15513fb5ccce7cce7; Sub Matrix 	blosum62.out; Sensitivity 	3.5; K-mer size 	0; K-score 	2147483647; Alphabet size 	21; Max. sequence length 	65535; Max. results per query 	300; Offset result 	0; Split DB 	0; Split mode 	2; Split Memory Limit 	0; Coverage threshold 	0.8; Coverage Mode 	0; Compositional bias 	1; Diagonal Scoring 	1; Exact k-mer matching 	0; Mask Residues 	1; Minimum Diagonal score 	15; Include identical Seq. Id.	false; Spaced Kmer 	1; No preload 	false; Early exit 	false; Pseudo count a 	1; Pseudo count b 	1.5; Threads 	36; Verbosity 	3. Initialising data structures...; Using 36 threads.; Could not find precomputed index. Compute index.; Substitution matrices...; Use kmer size 6 and split 1 using Target split mode.; Needed memory (1084772113 byte) of total memory (365681509171 byte); Target database: /tmp/clu//9559457551393989073/input_step1,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/88#issuecomment-401138700:38911,mask,mask,38911,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/88#issuecomment-401138700,1,['mask'],['mask']
Availability,ore 	15; Spaced Kmer 	1; Profile e-value threshold 	0.001; Use global sequence weighting 	false; Maximum sequence identity threshold	0.9; Minimum seq. id. 	0; Minimum score per column 	-20; Minimum coverage 	0; Select n most diverse seqs 	100; Pseudo count a 	1; Pseudo count b 	1.5; Number search iterations 	1; Start sensitivity 	4; sensitivity step size 	1; Sets the MPI runner 	. /...; /...; Program call:; DB DB /.../tmp/pref_7 --sub-mat blosum62.out -k 0 --k-score 2147483647 --alph-size 21 --max-seq-len 32000 --max-seqs 300 --offset-result 0 --split 0 --split-mode 2 -c 0 --comp-bias-corr 0 --diag-score 1 --mask 0 --min-ungapped-score 15 --spaced-kmer-mode 1 --threads 4 -v 3 -s 7 . MMseqs Version: 	e2c8166b292d5e65271887cf4af568f32b346dd2; Sub Matrix 	blosum62.out; Sensitivity 	7; K-mer size 	0; K-score 	2147483647; Alphabet size 	21; Max. sequence length 	32000; Profile 	false; Max. results per query 	300; Offset result 	0; Split DB 	0; Split mode 	2; Coverage threshold 	0; Compositional bias 	0; Diagonal Scoring 	1; Mask Residues 	0; Minimum Diagonal score 	15; Include identical Seq. Id.	false; Spaced Kmer 	1; Threads 	4; Verbosity 	3. Initialising data structures...; Using 4 threads. Use index DB.sk6; Index version: 774909490; KmerSize: 6; AlphabetSize: 21; Skip: 0; Split: 0; Type: 1; Spaced: 1; Query database: DB(size=105589); Target database: DB(size=105589); Use kmer size 6 and split 1 using split mode 0; Needed memory (1603741184 byte) of total memory (8340369408 byte); Substitution matrices...; Time for init: 0 h 0 m 1s. Process prefiltering step 0 of 1. Index version: 774909490; KmerSize: 6; AlphabetSize: 21; Skip: 0; Split: 0; Type: 1; Spaced: 1; Cache database ; Read IndexTable ... Done; k-mer similarity threshold: 77; k-mer match probability: 0. Starting prefiltering scores calculation (step 0 of 1); Query db start 0 to 105589; Target db start 0 to 105589; ........WARNING: Sequence (dbKey=82431) contains only ATGC. It might be a nucleotide sequence.; ..,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/12#issuecomment-275642021:3329,Mask,Mask,3329,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/12#issuecomment-275642021,1,['Mask'],['Mask']
Availability,"ositional bias 	1; Compositional bias 	1; Max reject 	2147483647; Max accept 	2147483647; Include identical seq. id. 	false; Preload mode 	0; Pseudo count a 	substitution:1.100,context:1.400; Pseudo count b 	substitution:4.100,context:5.800; Score bias 	0; Realign hits 	false; Realign score bias 	-0.2; Realign max seqs 	2147483647; Correlation score weight 	0; Gap open cost 	aa:11,nucl:5; Gap extension cost 	aa:1,nucl:2; Zdrop 	40; Seed substitution matrix 	aa:VTML80.out,nucl:nucleotide.out; Sensitivity 	4; k-mer length 	0; k-score 	seq:2147483647,prof:2147483647; Alphabet size 	aa:21,nucl:5; Max results per query 	300; Split database 	0; Split mode 	2; Split memory limit 	0; Diagonal scoring 	true; Exact k-mer matching 	0; Mask residues 	1; Mask residues probability 	0.9; Mask lower case residues 	0; Minimum diagonal score 	15; Selected taxa; Spaced k-mers 	1; Spaced k-mer pattern; Local temporary path; Rescore mode 	0; Remove hits by seq. id. and coverage 	false; Sort results 	0; Mask profile 	1; Profile E-value threshold 	0.001; Global sequence weighting 	false; Allow deletions 	false; Filter MSA 	1; Use filter only at N seqs 	0; Maximum seq. id. threshold 	0.9; Minimum seq. id. 	0.0; Minimum score per column 	-20; Minimum coverage 	0; Select N most diverse seqs 	1000; Pseudo count mode 	0; Gap pseudo count 	10; Min codons in orf 	30; Max codons in length 	32734; Max orf gaps 	2147483647; Contig start mode 	2; Contig end mode 	2; Orf start mode 	1; Forward frames 	1,2,3; Reverse frames 	1,2,3; Translation table 	1; Translate orf 	0; Use all table starts 	false; Offset of numeric ids 	0; Create lookup 	0; Add orf stop 	false; Overlap between sequences 	0; Sequence split mode 	1; Header split mode 	0; Chain overlapping alignments 	0; Merge query 	1; Search type 	0; Exhaustive search mode 	false; Filter results during exhaustive search	0; Strand selection 	1; LCA search mode 	false; Disk space limit 	0; MPI runner; Force restart with latest tmp 	false; Remove tempora",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/779#issuecomment-1872491640:1826,Mask,Mask,1826,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/779#issuecomment-1872491640,1,['Mask'],['Mask']
Availability,out.h; -- Compile blosum30.out to /Users/moorer/Downloads/mmseqs2/src/generatedfiles/blosum30.out.h; -- Compile blosum35.out to /Users/moorer/Downloads/mmseqs2/src/generatedfiles/blosum35.out.h; -- Compile blosum40.out to /Users/moorer/Downloads/mmseqs2/src/generatedfiles/blosum40.out.h; -- Compile blosum45.out to /Users/moorer/Downloads/mmseqs2/src/generatedfiles/blosum45.out.h; -- Compile blosum50.out to /Users/moorer/Downloads/mmseqs2/src/generatedfiles/blosum50.out.h; -- Compile blosum55.out to /Users/moorer/Downloads/mmseqs2/src/generatedfiles/blosum55.out.h; -- Compile blosum60.out to /Users/moorer/Downloads/mmseqs2/src/generatedfiles/blosum60.out.h; -- Compile blosum62.out to /Users/moorer/Downloads/mmseqs2/src/generatedfiles/blosum62.out.h; -- Compile blosum65.out to /Users/moorer/Downloads/mmseqs2/src/generatedfiles/blosum65.out.h; -- Compile blosum70.out to /Users/moorer/Downloads/mmseqs2/src/generatedfiles/blosum70.out.h; -- Compile blosum75.out to /Users/moorer/Downloads/mmseqs2/src/generatedfiles/blosum75.out.h; -- Compile blosum80.out to /Users/moorer/Downloads/mmseqs2/src/generatedfiles/blosum80.out.h; -- Compile blosum85.out to /Users/moorer/Downloads/mmseqs2/src/generatedfiles/blosum85.out.h; -- Compile blosum90.out to /Users/moorer/Downloads/mmseqs2/src/generatedfiles/blosum90.out.h; -- Compile blosum95.out to /Users/moorer/Downloads/mmseqs2/src/generatedfiles/blosum95.out.h; -- Compile cascaded_clustering.sh to /Users/moorer/Downloads/mmseqs2/src/generatedfiles/cascaded_clustering.sh.h; -- Compile clustering.sh to /Users/moorer/Downloads/mmseqs2/src/generatedfiles/clustering.sh.h; -- Compile update_clustering.sh to /Users/moorer/Downloads/mmseqs2/src/generatedfiles/update_clustering.sh.h; -- Configuring done; -- Generating done; -- Build files have been written to: /Users/moorer/Downloads/mmseqs2/build; Zebulon | build -> make; Scanning dependencies of target prefiltering; [ 0%] Building CXX object src/prefiltering/CMakeFiles/prefiltering.dir/Exten,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/7#issuecomment-265028472:3478,Down,Downloads,3478,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/7#issuecomment-265028472,1,['Down'],['Downloads']
Availability,out.h; -- Compile blosum35.out to /Users/moorer/Downloads/mmseqs2/src/generatedfiles/blosum35.out.h; -- Compile blosum40.out to /Users/moorer/Downloads/mmseqs2/src/generatedfiles/blosum40.out.h; -- Compile blosum45.out to /Users/moorer/Downloads/mmseqs2/src/generatedfiles/blosum45.out.h; -- Compile blosum50.out to /Users/moorer/Downloads/mmseqs2/src/generatedfiles/blosum50.out.h; -- Compile blosum55.out to /Users/moorer/Downloads/mmseqs2/src/generatedfiles/blosum55.out.h; -- Compile blosum60.out to /Users/moorer/Downloads/mmseqs2/src/generatedfiles/blosum60.out.h; -- Compile blosum62.out to /Users/moorer/Downloads/mmseqs2/src/generatedfiles/blosum62.out.h; -- Compile blosum65.out to /Users/moorer/Downloads/mmseqs2/src/generatedfiles/blosum65.out.h; -- Compile blosum70.out to /Users/moorer/Downloads/mmseqs2/src/generatedfiles/blosum70.out.h; -- Compile blosum75.out to /Users/moorer/Downloads/mmseqs2/src/generatedfiles/blosum75.out.h; -- Compile blosum80.out to /Users/moorer/Downloads/mmseqs2/src/generatedfiles/blosum80.out.h; -- Compile blosum85.out to /Users/moorer/Downloads/mmseqs2/src/generatedfiles/blosum85.out.h; -- Compile blosum90.out to /Users/moorer/Downloads/mmseqs2/src/generatedfiles/blosum90.out.h; -- Compile blosum95.out to /Users/moorer/Downloads/mmseqs2/src/generatedfiles/blosum95.out.h; -- Compile cascaded_clustering.sh to /Users/moorer/Downloads/mmseqs2/src/generatedfiles/cascaded_clustering.sh.h; -- Compile clustering.sh to /Users/moorer/Downloads/mmseqs2/src/generatedfiles/clustering.sh.h; -- Compile update_clustering.sh to /Users/moorer/Downloads/mmseqs2/src/generatedfiles/update_clustering.sh.h; -- Configuring done; -- Generating done; -- Build files have been written to: /Users/moorer/Downloads/mmseqs2/build; Zebulon | build -> make; Scanning dependencies of target prefiltering; [ 0%] Building CXX object src/prefiltering/CMakeFiles/prefiltering.dir/ExtendedSubstitutionMatrix.cpp.o; [ 1%] Building CXX object src/prefiltering/CMakeFiles/prefilterin,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/7#issuecomment-265028472:3572,Down,Downloads,3572,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/7#issuecomment-265028472,1,['Down'],['Downloads']
Availability,out.h; -- Compile blosum40.out to /Users/moorer/Downloads/mmseqs2/src/generatedfiles/blosum40.out.h; -- Compile blosum45.out to /Users/moorer/Downloads/mmseqs2/src/generatedfiles/blosum45.out.h; -- Compile blosum50.out to /Users/moorer/Downloads/mmseqs2/src/generatedfiles/blosum50.out.h; -- Compile blosum55.out to /Users/moorer/Downloads/mmseqs2/src/generatedfiles/blosum55.out.h; -- Compile blosum60.out to /Users/moorer/Downloads/mmseqs2/src/generatedfiles/blosum60.out.h; -- Compile blosum62.out to /Users/moorer/Downloads/mmseqs2/src/generatedfiles/blosum62.out.h; -- Compile blosum65.out to /Users/moorer/Downloads/mmseqs2/src/generatedfiles/blosum65.out.h; -- Compile blosum70.out to /Users/moorer/Downloads/mmseqs2/src/generatedfiles/blosum70.out.h; -- Compile blosum75.out to /Users/moorer/Downloads/mmseqs2/src/generatedfiles/blosum75.out.h; -- Compile blosum80.out to /Users/moorer/Downloads/mmseqs2/src/generatedfiles/blosum80.out.h; -- Compile blosum85.out to /Users/moorer/Downloads/mmseqs2/src/generatedfiles/blosum85.out.h; -- Compile blosum90.out to /Users/moorer/Downloads/mmseqs2/src/generatedfiles/blosum90.out.h; -- Compile blosum95.out to /Users/moorer/Downloads/mmseqs2/src/generatedfiles/blosum95.out.h; -- Compile cascaded_clustering.sh to /Users/moorer/Downloads/mmseqs2/src/generatedfiles/cascaded_clustering.sh.h; -- Compile clustering.sh to /Users/moorer/Downloads/mmseqs2/src/generatedfiles/clustering.sh.h; -- Compile update_clustering.sh to /Users/moorer/Downloads/mmseqs2/src/generatedfiles/update_clustering.sh.h; -- Configuring done; -- Generating done; -- Build files have been written to: /Users/moorer/Downloads/mmseqs2/build; Zebulon | build -> make; Scanning dependencies of target prefiltering; [ 0%] Building CXX object src/prefiltering/CMakeFiles/prefiltering.dir/ExtendedSubstitutionMatrix.cpp.o; [ 1%] Building CXX object src/prefiltering/CMakeFiles/prefiltering.dir/Indexer.cpp.o; [ 2%] Building CXX object src/prefiltering/CMakeFiles/prefiltering.dir/Km,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/7#issuecomment-265028472:3666,Down,Downloads,3666,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/7#issuecomment-265028472,1,['Down'],['Downloads']
Availability,out.h; -- Compile blosum45.out to /Users/moorer/Downloads/mmseqs2/src/generatedfiles/blosum45.out.h; -- Compile blosum50.out to /Users/moorer/Downloads/mmseqs2/src/generatedfiles/blosum50.out.h; -- Compile blosum55.out to /Users/moorer/Downloads/mmseqs2/src/generatedfiles/blosum55.out.h; -- Compile blosum60.out to /Users/moorer/Downloads/mmseqs2/src/generatedfiles/blosum60.out.h; -- Compile blosum62.out to /Users/moorer/Downloads/mmseqs2/src/generatedfiles/blosum62.out.h; -- Compile blosum65.out to /Users/moorer/Downloads/mmseqs2/src/generatedfiles/blosum65.out.h; -- Compile blosum70.out to /Users/moorer/Downloads/mmseqs2/src/generatedfiles/blosum70.out.h; -- Compile blosum75.out to /Users/moorer/Downloads/mmseqs2/src/generatedfiles/blosum75.out.h; -- Compile blosum80.out to /Users/moorer/Downloads/mmseqs2/src/generatedfiles/blosum80.out.h; -- Compile blosum85.out to /Users/moorer/Downloads/mmseqs2/src/generatedfiles/blosum85.out.h; -- Compile blosum90.out to /Users/moorer/Downloads/mmseqs2/src/generatedfiles/blosum90.out.h; -- Compile blosum95.out to /Users/moorer/Downloads/mmseqs2/src/generatedfiles/blosum95.out.h; -- Compile cascaded_clustering.sh to /Users/moorer/Downloads/mmseqs2/src/generatedfiles/cascaded_clustering.sh.h; -- Compile clustering.sh to /Users/moorer/Downloads/mmseqs2/src/generatedfiles/clustering.sh.h; -- Compile update_clustering.sh to /Users/moorer/Downloads/mmseqs2/src/generatedfiles/update_clustering.sh.h; -- Configuring done; -- Generating done; -- Build files have been written to: /Users/moorer/Downloads/mmseqs2/build; Zebulon | build -> make; Scanning dependencies of target prefiltering; [ 0%] Building CXX object src/prefiltering/CMakeFiles/prefiltering.dir/ExtendedSubstitutionMatrix.cpp.o; [ 1%] Building CXX object src/prefiltering/CMakeFiles/prefiltering.dir/Indexer.cpp.o; [ 2%] Building CXX object src/prefiltering/CMakeFiles/prefiltering.dir/KmerGenerator.cpp.o; [ 3%] Building CXX object src/prefiltering/CMakeFiles/prefiltering.dir/Main,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/7#issuecomment-265028472:3760,Down,Downloads,3760,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/7#issuecomment-265028472,1,['Down'],['Downloads']
Availability,out.h; -- Compile blosum50.out to /Users/moorer/Downloads/mmseqs2/src/generatedfiles/blosum50.out.h; -- Compile blosum55.out to /Users/moorer/Downloads/mmseqs2/src/generatedfiles/blosum55.out.h; -- Compile blosum60.out to /Users/moorer/Downloads/mmseqs2/src/generatedfiles/blosum60.out.h; -- Compile blosum62.out to /Users/moorer/Downloads/mmseqs2/src/generatedfiles/blosum62.out.h; -- Compile blosum65.out to /Users/moorer/Downloads/mmseqs2/src/generatedfiles/blosum65.out.h; -- Compile blosum70.out to /Users/moorer/Downloads/mmseqs2/src/generatedfiles/blosum70.out.h; -- Compile blosum75.out to /Users/moorer/Downloads/mmseqs2/src/generatedfiles/blosum75.out.h; -- Compile blosum80.out to /Users/moorer/Downloads/mmseqs2/src/generatedfiles/blosum80.out.h; -- Compile blosum85.out to /Users/moorer/Downloads/mmseqs2/src/generatedfiles/blosum85.out.h; -- Compile blosum90.out to /Users/moorer/Downloads/mmseqs2/src/generatedfiles/blosum90.out.h; -- Compile blosum95.out to /Users/moorer/Downloads/mmseqs2/src/generatedfiles/blosum95.out.h; -- Compile cascaded_clustering.sh to /Users/moorer/Downloads/mmseqs2/src/generatedfiles/cascaded_clustering.sh.h; -- Compile clustering.sh to /Users/moorer/Downloads/mmseqs2/src/generatedfiles/clustering.sh.h; -- Compile update_clustering.sh to /Users/moorer/Downloads/mmseqs2/src/generatedfiles/update_clustering.sh.h; -- Configuring done; -- Generating done; -- Build files have been written to: /Users/moorer/Downloads/mmseqs2/build; Zebulon | build -> make; Scanning dependencies of target prefiltering; [ 0%] Building CXX object src/prefiltering/CMakeFiles/prefiltering.dir/ExtendedSubstitutionMatrix.cpp.o; [ 1%] Building CXX object src/prefiltering/CMakeFiles/prefiltering.dir/Indexer.cpp.o; [ 2%] Building CXX object src/prefiltering/CMakeFiles/prefiltering.dir/KmerGenerator.cpp.o; [ 3%] Building CXX object src/prefiltering/CMakeFiles/prefiltering.dir/Main.cpp.o; /Users/moorer/Downloads/mmseqs2/src/prefiltering/Main.cpp: In function 'int prefilter(,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/7#issuecomment-265028472:3854,Down,Downloads,3854,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/7#issuecomment-265028472,1,['Down'],['Downloads']
Availability,"out.h; -- Compile blosum95.out to /Users/moorer/Downloads/mmseqs2/src/generatedfiles/blosum95.out.h; -- Compile cascaded_clustering.sh to /Users/moorer/Downloads/mmseqs2/src/generatedfiles/cascaded_clustering.sh.h; -- Compile clustering.sh to /Users/moorer/Downloads/mmseqs2/src/generatedfiles/clustering.sh.h; -- Compile update_clustering.sh to /Users/moorer/Downloads/mmseqs2/src/generatedfiles/update_clustering.sh.h; -- Configuring done; -- Generating done; -- Build files have been written to: /Users/moorer/Downloads/mmseqs2/build; Zebulon | build -> make; Scanning dependencies of target prefiltering; [ 0%] Building CXX object src/prefiltering/CMakeFiles/prefiltering.dir/ExtendedSubstitutionMatrix.cpp.o; [ 1%] Building CXX object src/prefiltering/CMakeFiles/prefiltering.dir/Indexer.cpp.o; [ 2%] Building CXX object src/prefiltering/CMakeFiles/prefiltering.dir/KmerGenerator.cpp.o; [ 3%] Building CXX object src/prefiltering/CMakeFiles/prefiltering.dir/Main.cpp.o; /Users/moorer/Downloads/mmseqs2/src/prefiltering/Main.cpp: In function 'int prefilter(int, const char**, const Command&)':; /Users/moorer/Downloads/mmseqs2/src/prefiltering/Main.cpp:72:12: warning: unused variable 'splitMode' [-Wunused-variable]; size_t splitMode = pref->getSplitMode();; ^~~~~~~~~; [ 4%] Building CXX object src/prefiltering/CMakeFiles/prefiltering.dir/Prefiltering.cpp.o; /var/folders/hr/x60c91mj5l1c8gy_6lyhl5l80000gn/T//ccAwPztQ.s:4152:suffix or operands invalid for `movq'; /var/folders/hr/x60c91mj5l1c8gy_6lyhl5l80000gn/T//ccAwPztQ.s:6032:suffix or operands invalid for `movq'; /var/folders/hr/x60c91mj5l1c8gy_6lyhl5l80000gn/T//ccAwPztQ.s:6048:suffix or operands invalid for `movq'; /var/folders/hr/x60c91mj5l1c8gy_6lyhl5l80000gn/T//ccAwPztQ.s:6075:suffix or operands invalid for `movq'; /var/folders/hr/x60c91mj5l1c8gy_6lyhl5l80000gn/T//ccAwPztQ.s:6103:suffix or operands invalid for `movq'; /var/folders/hr/x60c91mj5l1c8gy_6lyhl5l80000gn/T//ccAwPztQ.s:6172:suffix or operands invalid for `movq'; /var/",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/7#issuecomment-265028472:4795,Down,Downloads,4795,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/7#issuecomment-265028472,1,['Down'],['Downloads']
Availability,ov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 26 --compressed 0 -v 3 -s 0.5 . Query database size: 695256546 type: Aminoacid; Target split mode. Searching through 6 splits; Estimated memory consumption: 232G; Target database size: 353572663 type: Aminoacid; Process prefiltering step 1 of 6. Index table k-mer threshold: 180 at k-mer size 7 ; Index table: counting k-mers; [=================================================================] 58.92M 1h 27m 43s 365ms; Index table: Masked residues: 338212106; Index table: fill; [=================================================================] 58.92M 2h 48m 44s 23ms; Index statistics; Entries: 10047647313; DB size: 67258 MB; Avg k-mer size: 7.849724; Top 10 k-mers; FSHAGSI	169128; AFRNNFW	161115; APMFPNN	145858; GGGWLLM	137963; NNSWLPS	137460; AHFMIMV	126820; MPMGGNW	126274; TMLDRNT	108816; TGTYPSS	94201; GDQYNVT	84229; Time for index table init: 4h 18m 41s 415ms; k-mer similarity threshold: 180; Starting prefiltering scores calculation (step 1 of 6); Query db start 1 to 695256546; Target db start 1 to 58919300; [=================================================================] 695.26M 61h 14m 42s 623ms. 2.307739 k-mers per position; 1254 DB matches per sequence; 0 overflows; 0 queries produce too many hits (truncated result); 11 sequences passed prefiltering per query sequence; 1 median result list length; 275899073 sequences with 0 size result lists; Time for merging to pref_0_tmp_0: 0h 16m 3s 814ms; Time for merging to pref_0_tmp_0_tmp: 0h 26m 19s 322ms; Process prefiltering step 2 of 6. Index table k-mer threshold: 180 at k-mer size 7 ; Index table: counting k-mers; [=================================================================] 58.92M 1h 18m 46s 598ms; Index table: Masked residues: 338371908; Index table: fill; [===========================Terminated; ```,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/422#issuecomment-795325591:32820,Mask,Masked,32820,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/422#issuecomment-795325591,1,['Mask'],['Masked']
Availability,"p, it would take 4000 k-mers if I set --kmer-per-seq-scale 0.2? My sequences have an average length of about 20kbp, so theoretically, --kmer-per-seq-scale 0.2 might yield results similar to or better than --kmer-per-seq 2000? However, when I tested --kmer-per-seq-scale with values of 0.2, 1, and 20, I found that the number of clusters did not significantly differ from running Linclust with default parameter. The number of clusters was roughly twice as many as when using --kmer-per-seq 2000. As an example, I examined the largest cluster (containing 19,000 sequences) obtained using --kmer-per-seq 2000 . I inspected the length distribution of sequences within this cluster. The cumulative total sequences counts of the top four sequence lengths was 14,000, as follows [seq count, seq length]: ; 1274 4413.0, ; 2985 4411.0, ; 3397 5350.0, ; 7109 4409.0. ; I think most of these sequences should be highly similar, indicating that this clustering is relatively accurate.; I took some individual examples from this cluster to examine the results of --kmer-per-seq-scale and found that some nearly identical sequences (same length, 99% identity) were not clustered together when using --kmer-per-seq-scale. Meanwhile the largest cluster of --kmer-per-seq-scale 1 contains only 6341 seqs.; As a side note, I set the threshold to 95% identity and 85% coverage. . Overall, from my test results, I'm uncertain if there are issues with --kmer-per-seq-scale. Setting it doesn't seem to increase clustering sensitivity as expected. However, perhaps this is because I don't fully understand its principle, so I'm hoping to consult you on this matter. > There is not that much downside to increasing the kmer-per-seq to 2000. It will slow down linclust somewhat, but for only 2M entries it shouldn't really matter.; > ; > You might want to use `--kmer-per-seq-scale` though. This parameter adds additional k-mers linearly based on the sequence length. By default, this is set to 0.2 for nucleotide sequences.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/831#issuecomment-2033788917:1765,down,downside,1765,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/831#issuecomment-2033788917,2,['down'],"['down', 'downside']"
Availability,"p/tmp_MMSeq2//17595625152138277869/search_tmp/17414849138893322762/query_seqs_split /tmp/tmp_MMSeq2//17595625152138277869/search_tmp/17414849138893322762/search/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -s 5.7 -k 15 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 10000 --max-seqs 2147483647 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 1 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 256 --compressed 0 -v 3 . Query database size: 15288254 type: Nucleotide; Estimated memory consumption: 9G; Target database size: 69220 type: Nucleotide; Index table k-mer threshold: 0 at k-mer size 15 ; Index table: counting k-mers; [=================================================================] 69.22K 0s 75ms; Index table: Masked residues: 724; Index table: fill; [=================================================================] 69.22K 0s 73ms; Index statistics; Entries: 15985099; DB size: 8283 MB; Avg k-mer size: 0.014887; Top 10 k-mers; CCCTCGCTCCGTTCG	31729; GGGGAAAGGTTGGGG	31239; ATTCGGTGAGTAATG	31054; CTCGCCCTCCCCAGC	31010; CGACCTACCACCCCT	31003; CGGGAGCGTGTCGAG	30951; GGGCGAGGAACGGGG	30939; GCCCACCGACACTGG	30933; ACCACTTGGTGAGGG	30876; AAGGTATCGGGTTGG	30837; Time for index table init: 0h 0m 6s 52ms; Hard disk might not have enough free space (1T left).The prefilter result might need up to 40T.; Process prefiltering step 1 of 1. k-mer similarity threshold: 0; Starting prefiltering scores calculation (step 1 of 1); Query db start 1 to 15288254; Target db start 1 to 69220; [=================================================================] 15.29M 16m 57s 724ms. 0.965255 k-mers per position; 6486 DB matches per sequence; 5917 overflows; 0 queries produce too many hits (truncated result); 816 sequences passed prefiltering per query sequence; 0 ",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/394#issuecomment-782439476:12606,Mask,Masked,12606,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/394#issuecomment-782439476,1,['Mask'],['Masked']
Availability,"p/tmp_MMSeq2//17595625152138277869/search_tmp/17414849138893322762/query_seqs_split /tmp/tmp_MMSeq2//17595625152138277869/search_tmp/17414849138893322762/search/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -s 5.7 -k 15 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 10000 --max-seqs 2147483647 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 1 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 256 --compressed 0 -v 3 . Query database size: 23551830 type: Nucleotide; Estimated memory consumption: 9G; Target database size: 69220 type: Nucleotide; Index table k-mer threshold: 0 at k-mer size 15 ; Index table: counting k-mers; [=================================================================] 69.22K 0s 211ms; Index table: Masked residues: 724; Index table: fill; [=================================================================] 69.22K 0s 73ms; Index statistics; Entries: 15985099; DB size: 8283 MB; Avg k-mer size: 0.014887; Top 10 k-mers; CCCTCGCTCCGTTCG	31729; GGGGAAAGGTTGGGG	31239; ATTCGGTGAGTAATG	31054; CTCGCCCTCCCCAGC	31010; CGACCTACCACCCCT	31003; CGGGAGCGTGTCGAG	30951; GGGCGAGGAACGGGG	30939; GCCCACCGACACTGG	30933; ACCACTTGGTGAGGG	30876; AAGGTATCGGGTTGG	30837; Time for index table init: 0h 0m 6s 967ms; Hard disk might not have enough free space (622G left).The prefilter result might need up to 62T.; Process prefiltering step 1 of 1. k-mer similarity threshold: 0; Starting prefiltering scores calculation (step 1 of 1); Query db start 1 to 23551830; Target db start 1 to 69220; [=================================================================] 23.55M 26m 33s 986ms. 0.965963 k-mers per position; 6331 DB matches per sequence; 9167 overflows; 0 queries produce too many hits (truncated result); 784 sequences passed prefiltering per query sequence;",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/394#issuecomment-782439476:19261,Mask,Masked,19261,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/394#issuecomment-782439476,1,['Mask'],['Masked']
Availability,"pe 1`; 2. `mmseqs createindex mydb/mmdb mydb/tmp -k 5 --seed-sub-mat identity.out --split-memory-limit 9G -s 1.0 --comp-bias-corr 0 --mask 0`. And here's the output of the 2nd command:. ```; Create dir eu-all-2020-02-06/mmseqs-EN-partial-2020-03-26-16-37-04/tmp; createindex eu-all-2020-02-06/mmseqs-EN-partial-2020-03-26-16-37-04/mmdb eu-all-2020-02-06/mmseqs-EN-partial-2020-03-26-16-37-04/tmp -k 5 --seed-sub-mat identity.out --split-memory-limit 9G -s 1.0 --comp-bias-corr 0 --mask 0 . MMseqs Version: 	12c499dcd647fb0d1c799bc5c6f9f25328ca3e09; Seed substitution matrix 	nucl:identity.out,aa:identity.out; k-mer length 	5; Alphabet size 	nucl:5,aa:21; Compositional bias 	0; Max sequence length 	65535; Max results per query 	300; Mask residues 	0; Mask lower case residues 	0; Spaced k-mers 	1; Spaced k-mer pattern 	; Sensitivity 	1; k-score 	0; Check compatible 	0; Search type 	0; Split database 	0; Split memory limit 	9G; Verbosity 	3; Threads 	8; Min codons in orf 	30; Max codons in length 	32734; Max orf gaps 	2147483647; Contig start mode 	2; Contig end mode 	2; Orf start mode 	1; Forward frames 	1,2,3; Reverse frames 	1,2,3; Translation table 	1; Translate orf 	0; Use all table starts 	false; Offset of numeric ids 	0; Create lookup 	0; Compressed 	0; Add orf stop 	false; Overlap between sequences	0; Sequence split mode 	1; Strand selection 	1; Remove temporary files 	false. createindex eu-all-2020-02-06/mmseqs-EN-partial-2020-03-26-16-37-04/mmdb eu-all-2020-02-06/mmseqs-EN-partial-2020-03-26-16-37-04/tmp -k 5 --seed-sub-mat identity.out --split-memory-limit 9G -s 1.0 --comp-bias-corr 0 --mask 0 . MMseqs Version: 	12c499dcd647fb0d1c799bc5c6f9f25328ca3e09; Seed substitution matrix 	nucl:identity.out,aa:identity.out; k-mer length 	5; Alphabet size 	nucl:5,aa:21; Compositional bias 	0; Max sequence length 	65535; Max results per query 	300; Mask residues 	0; Mask lower case residues 	0; Spaced k-mers 	1; Spaced k-mer pattern 	; Sensitivity 	1; k-score 	0; Check compatibl",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/293#issuecomment-604476526:1799,Mask,Mask,1799,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/293#issuecomment-604476526,2,['Mask'],['Mask']
Availability,"perf is not available on the high mem node on which I'm running the real workload, but is oddly available on the login node. Would that output be helpful?. ```; + 51.95% 32.34% mmseqs_perf libc-2.17.so [.] __memcpy_ssse3_back; + 45.94% 29.54% mmseqs_perf mmseqs [.] QueryMatcher::match; + 35.99% 35.99% mmseqs_perf [unknown] [k] 0xffffffffa55bb7c0; 0.63% 0.58% mmseqs_perf mmseqs [.] KmerGenerator::calculateArrayProduct; + 0.56% 0.56% mmseqs_perf mmseqs [.] memcpy@plt; 0.22% 0.22% mmseqs_perf ld-2.17.so [.] do_lookup_x; 0.20% 0.20% mmseqs_perf libc-2.17.so [.] __memset_sse2; 0.20% 0.00% mmseqs_perf [unknown] [.] 0x0000000000000030; 0.15% 0.00% mmseqs_perf [unknown] [.] 0000000000000000; 0.14% 0.14% mmseqs_perf libc-2.17.so [.] _IO_file_underflow@@GLIBC_2.2.5; 0.13% 0.13% mmseqs_perf ld-2.17.so [.] _dl_lookup_symbol_x; 0.13% 0.00% mmseqs_perf ld-2.17.so [.] _dl_sysdep_start; 0.13% 0.00% mmseqs_perf ld-2.17.so [.] dl_main; 0.13% 0.00% mmseqs_perf ld-2.17.so [.] _dl_relocate_object; 0.06% 0.06% mmseqs_perf [unknown] [k] 0xffffffffa55c6280; ```. [perf.data.txt](https://github.com/soedinglab/MMseqs2/files/10458945/perf.data.txt). I will see if I can get perf on the real node if needed.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/658#issuecomment-1397300351:12,avail,available,12,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/658#issuecomment-1397300351,2,['avail'],['available']
Availability,"plicate entries...; Index table init done. DB statistic; Entries: 293010879; DB Size: 1790738082 (byte); Avg Kmer Size: 71.7443; Top 10 Kmers; KKKKK 1557; KKKNK 1519; KKKKN 1416; NNNNN 1398; KKKNN 1359; KNKNN 1349; NKNNN 1320; KNNNN 1306; KKNKN 1210; NNINN 1188; Min Kmer Size: 0; Empty list: 884115. Time for index table init: 0h 1m 32s 319ms; Query database type: Aminoacid; Target database type: Profile; Time for init: 0h 1m 32s 393ms; Query database: query_dbs/1000562_0(size=1370); Process prefiltering step 1 of 1. k-mer similarity threshold: 90; k-mer match probability: 0. Starting prefiltering scores calculation (step 1 of 1); Query db start 1 to 1370; Target db start 1 to 8162. 0 k-mers per position.; 32539 DB matches per sequence.; 0 Overflows.; 160 sequences passed prefiltering per query sequence.; Median result list size: 149; 0 sequences with 0 size result lists. Time for prefiltering scores calculation: 0h 0m 0s 776ms; Time for merging files: 0h 0m 0s 9ms; Could not move result tmp/14349913440832127037/pref_tmp_0 to final location tmp/14349913440832127037/pref!; --------------------------------------------------------------------------; mpirun has exited due to process rank 0 with PID 134942 on; node node218.cluster exiting improperly. There are two reasons this could occur:. 1. this process did not call ""init"" before exiting, but others in; the job did. This can cause a job to hang indefinitely while it waits; for all processes to call ""init"". By rule, if one process calls ""init"",; then ALL processes must call ""init"" prior to termination. 2. this process called ""init"", but exited without calling ""finalize"".; By rule, all processes that call ""init"" MUST call ""finalize"" prior to; exiting or it will be considered an ""abnormal termination"". This may have caused other processes in the application to be; terminated by signals sent by mpirun (as reported here).; --------------------------------------------------------------------------; Error: Prefilter died; ```",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/164#issuecomment-463134521:6245,Error,Error,6245,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/164#issuecomment-463134521,1,['Error'],['Error']
Availability,"positional bias 	1; Max sequence length 	65535; Max results per query 	300; Mask residues 	1; Mask lower case residues 	0; Spaced k-mers 	1; Spaced k-mer pattern 	; Sensitivity 	7.5; k-score 	0; Check compatible 	0; Search type 	3; Split database 	0; Split memory limit 	0; Verbosity 	3; Threads 	8; Min codons in orf 	30; Max codons in length 	32734; Max orf gaps 	2147483647; Contig start mode 	2; Contig end mode 	2; Orf start mode 	1; Forward frames 	1,2,3; Reverse frames 	1,2,3; Translation table 	1; Translate orf 	0; Use all table starts 	false; Offset of numeric ids 	0; Create lookup 	0; Compressed 	0; Add orf stop 	false; Overlap between sequences	0; Sequence split mode 	1; Header split mode 	0; Strand selection 	1; Remove temporary files 	false. createindex chrY tmp --search-type 3 . MMseqs Version: 	13.45111; Seed substitution matrix 	nucl:nucleotide.out,aa:VTML80.out; k-mer length 	15; Alphabet size 	nucl:5,aa:21; Compositional bias 	1; Max sequence length 	10000; Max results per query 	300; Mask residues 	1; Mask lower case residues 	0; Spaced k-mers 	1; Spaced k-mer pattern 	; Sensitivity 	7.5; k-score 	0; Check compatible 	0; Search type 	3; Split database 	0; Split memory limit 	0; Verbosity 	3; Threads 	8; Min codons in orf 	30; Max codons in length 	32734; Max orf gaps 	2147483647; Contig start mode 	2; Contig end mode 	2; Orf start mode 	1; Forward frames 	1; Reverse frames 	; Translation table 	1; Translate orf 	0; Use all table starts 	false; Offset of numeric ids 	0; Create lookup 	0; Compressed 	0; Add orf stop 	false; Overlap between sequences	0; Sequence split mode 	1; Header split mode 	0; Strand selection 	1; Remove temporary files 	false. splitsequence chrY tmp/4145379299737466142/nucl_split_seq --max-seq-len 10000 --sequence-overlap 0 --sequence-split-mode 1 --headers-split-mode 0 --create-lookup 0 --threads 8 --compressed 0 -v 3 . [=================================================================] 100.00% 1 eta -; Time for merging to nucl_spl",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/280#issuecomment-981845082:1433,Mask,Mask,1433,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/280#issuecomment-981845082,2,['Mask'],['Mask']
Availability,"pp:319; 319	 foregroundBeg[i] = (b * b2fProbs[i] + f * f2f0) * lrRow[(int)seqPtr[-i-1]];; (gdb) bt; #0 0x0000555555a8d40b in tantan::Tantan::calcForwardTransitionAndEmissionProbs (this=0x7ffffffbaaa0); at /mnt/disks/kc-ssd/MMseqs2/src/commons/tantan.cpp:319; #1 0x0000555555a8d845 in tantan::Tantan::calcRepeatProbs (this=0x7ffffffbaaa0, letterProbs=0x555556582704); at /mnt/disks/kc-ssd/MMseqs2/src/commons/tantan.cpp:373; #2 0x0000555555a8bf6b in tantan::getProbabilities (; seqBeg=0x5555564e06c0 ""\025\025\025\025\025\025\025\n\f\003\v\020\f\016\020\020\016\017"", seqEnd=0x5555564e07b9 """",; maxRepeatOffset=50, likelihoodRatioMatrix=0x55555643d8f0, repeatProb=0.0050000000000000001, repeatEndProb=0.050000000000000003,; repeatOffsetProbDecay=0.90000000000000002, firstGapProb=0, otherGapProb=0, probabilities=0x555556582700); at /mnt/disks/kc-ssd/MMseqs2/src/commons/tantan.cpp:470; #3 0x0000555555a8be5f in tantan::maskSequences (; seqBeg=0x5555564e06c0 ""\025\025\025\025\025\025\025\n\f\003\v\020\f\016\020\020\016\017"", seqEnd=0x5555564e07b9 """",; maxRepeatOffset=50, likelihoodRatioMatrix=0x55555643d8f0, repeatProb=0.0050000000000000001, repeatEndProb=0.050000000000000003,; repeatOffsetProbDecay=0.90000000000000002, firstGapProb=0, otherGapProb=0, minMaskProb=0.89999997615814209,; maskTable=0x7ffffffdc530 '\024' <repeats 200 times>...) at /mnt/disks/kc-ssd/MMseqs2/src/commons/tantan.cpp:449; #4 0x000055555597de7b in PSSMMasker::mask (this=0x7ffffffbaca0, centerSequence=..., maskProb=0.899999976, pssmRes=...); at /mnt/disks/kc-ssd/MMseqs2/src/alignment/PSSMMasker.h:25; #5 0x00005555559f916b in result2profile () at /mnt/disks/kc-ssd/MMseqs2/src/util/result2profile.cpp:262; #6 0x00007ffff7c7c4c2 in GOMP_parallel () from /lib/x86_64-linux-gnu/libgomp.so.1; #7 0x00005555559f86b7 in result2profile (argc=54, argv=0x7fffffffe138, command=..., returnAlnRes=false); at /mnt/disks/kc-ssd/MMseqs2/src/util/result2profile.cpp:140; #8 0x00005555559f885c in result2profile (argc=54, argv=0x7ffff",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/592#issuecomment-1214486961:1176,mask,maskSequences,1176,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/592#issuecomment-1214486961,1,['mask'],['maskSequences']
Availability,"pressed 0 -v 3. Index version: 16; Generated by: 13.45111; ScoreMatrix: VTML80.out; Compute score and coverage; Query database size: 1075 type: Aminoacid; Target database size: 41195879 type: Aminoacid; [=================================================================] 1.08K 0s 508ms; Time for merging to aln_0: 0h 0m 0s 8ms; 19048 alignments calculated; 15817 sequence pairs passed the thresholds (0.830376 of overall calculated); 14.713489 hits per query sequence; Time for processing: 0h 0m 54s 194ms; result2profile /ebio/abt3_scratch/nyoungblut/LLCDS_126702996474/mmseqs_tax_query/06/seqs_db /ebio/abt3_scratch/nyoungblut/LLCDS_126702996474/mmseqs_tax_target/mmseqs_tax.db.idx /ebio/abt3_scratch/nyoungblut/LLCDS_126702996474/mmseqs_tax/06/TMP/14652724320229658153/tmp_hsp1/11598483508011826746/aln_0 /ebio/abt3_scratch/nyoungblut/LLCDS_126702996474/mmseqs_tax/06/TMP/14652724320229658153/tmp_hsp1/11598483508011826746/profile_0 --sub-mat nucl:nucleotide.out,aa:blosum62.out -e 1e-05 --mask-profile 1 --e-profile 0.1 --comp-bias-corr 1 --wg 0 --allow-deletion 0 --filter-msa 1 --max-seq-id 0.9 --qid 0 --qsc -20 --cov 0 --diff 1000 --pca 0 --pcb 1.5 --db-load-mode 0 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --threads 8 --compressed 0 -v 3. Index version: 16; Generated by: 13.45111; ScoreMatrix: VTML80.out; Query database size: 1075 type: Aminoacid; Target database size: 41195879 type: Aminoacid; [========================================Segmentation fault; Error: Create profile died; Error: First search died; ```. Note that sometimes when I re-run the command, I instead get the error:. ```; Index version: 16; Generated by: 13.45111; ScoreMatrix: VTML80.out; Query database size: 1075 type: Aminoacid; Target database size: 41195879 type: Aminoacid; [=======================================================]; free(): invalid next size (normal); Aborted; Error: Create profile died; Error: First search died; ```. System memory should not be the cause; I've got ~800 Gb free. . M",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/432#issuecomment-813242194:17188,mask,mask-profile,17188,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/432#issuecomment-813242194,1,['mask'],['mask-profile']
Availability,"put_step1: 0h 0m 0s 0ms; Time for processing: 0h 0m 0s 1ms; prefilter tmp//7897776346521331899/input_step1 tmp//7897776346521331899/input_step1 tmp//7897776346521331899/pref_step1 --sub-mat nucl:nucleotide.out,aa:blosum62.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -s 3.5 -k 0 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 65535 --max-seqs 20 --split 0 --split-mode 2 --split-memory-limit 0 -c 0.8 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 16 --compressed 0 -v 3. Query database size: 124 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 124 type: Aminoacid; Index table k-mer threshold: 131 at k-mer size 6; Index table: counting k-mers; [=================================================================] 100.00% 124 0s 30ms; Index table: Masked residues: 0; Index table: fill; [=================================================================] 100.00% 124 0s 5ms; Index statistics; Entries: 116; DB size: 488 MB; Avg k-mer size: 0.000002; Top 10 k-mers; FSMYPQ 6; HFVFHR 4; YQYPRV 3; LAMYPA 1; ARPIVA 1; CHMEKC 1; VQRKKC 1; RGYLLC 1; MVQDRC 1; CEMRRC 1; Time for index table init: 0h 0m 0s 908ms; Process prefiltering step 1 of 1. k-mer similarity threshold: 131; Starting prefiltering scores calculation (step 1 of 1); Query db start 1 to 124; Target db start 1 to 124; [=================================================================] 100.00% 124 0s 24ms. 15.668402 k-mers per position; 1 DB matches per sequence; 0 overflows; 0 queries produce too many hits (truncated result); 1 sequences passed prefiltering per query sequence; 1 median result list length; 0 sequences with 0 size result lists; Time for merging to pref_step1: 0h 0m 0s 4ms; Time for processing: 0h 0m 1s 591ms; align tmp//7897776346521331899/input_step1 tmp//7897776346521331899/input_step1 tmp//78977763",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-775778998:16234,Mask,Masked,16234,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-775778998,1,['Mask'],['Masked']
Availability,"qs Version: da6c1a5a7be5d82719f796b85ce9cbacf9f2162c-MPI; Sub Matrix blosum62.out; Add backtrace false; Alignment mode 2; E-value threshold 0.001; Seq. Id Threshold 0; Min. alignment length 0; Seq. Id. Mode 0; Alternative alignments 0; Coverage threshold 0; Coverage Mode 0; Max. sequence length 65535; Max. results per query 300; Compositional bias 1; Realign hit false; Max Reject 2147483647; Max Accept 2147483647; Include identical Seq. Id. false; Preload mode 0; Pseudo count a 1; Pseudo count b 1.5; Score bias 0; Gap open cost 11; Gap extension cost 1; Threads 8; Compressed 0; Verbosity 3; Sensitivity 5.7; K-mer size 5; K-score 2147483647; Alphabet size 21; Offset result 0; Split DB 0; Split mode 2; Split Memory Limit 0; Diagonal Scoring 1; Exact k-mer matching 0; Mask Residues 1; Minimum Diagonal score 15; Spaced Kmer 1; Spaced k-mer pattern ; Local temporary path ; Rescore mode 0; Remove hits by seq.id. and coverage false; Sort results 0; In substitution scoring mode, performs global alignment along the diagonal false; Mask profile 1; Profile e-value threshold 0.1; Use global sequence weighting false; Filter MSA 1; Maximum sequence identity threshold 0.9; Minimum seq. id. 0; Minimum score per column -20; Minimum coverage 0; Select n most diverse seqs 1000; Omit Consensus false; Min codons in orf 30; Max codons in length 32734; Max orf gaps 2147483647; Contig start mode 2; Contig end mode 2; Orf start mode 1; Forward Frames 1,2,3; Reverse Frames 1,2,3; Translation Table 1; Use all table starts false; Offset of numeric ids 0; Add Orf Stop false; Number search iterations 1; Start sensitivity 4; Search steps 1; Run a seq-profile search in slice mode false; Strand selection 1; Disk space limit 0; Sets the MPI runner mpirun --pernode; Force restart using the latest tmp false; Remove Temporary Files false. [node218.cluster:134942] mca: base: component_find: unable to open /usr/mpi/gcc/openmpi-1.6.5/lib/openmpi/mca_mtl_psm: libpsm_infinipath.so.1: cannot open shared objec",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/164#issuecomment-463134521:1561,Mask,Mask,1561,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/164#issuecomment-463134521,1,['Mask'],['Mask']
Availability,"quence weighting 	false; Filter MSA 	1; Maximum sequence identity threshold 	0.9; Minimum seq. id. 	0; Minimum score per column 	-20; Minimum coverage 	0; Select n most diverse seqs 	1000; Omit Consensus 	false; Min codons in orf 	30; Max codons in length 	32734; Max orf gaps 	2147483647; Contig start mode 	2; Contig end mode 	2; Orf start mode 	0; Forward Frames 	1,2,3; Reverse Frames 	1,2,3; Translation Table 	1; Use all table starts 	false; Offset of numeric ids 	0; Add Orf Stop 	false; Number search iterations 	3; Start sensitivity 	4; Search steps 	1; Run a seq-profile search in slice mode 	0; Sets the MPI runner 	; Remove Temporary Files 	false. Tmp tmpC folder does not exist or is not a directory.; Created dir tmpC; Program call:; prefilter geneC.db genes.db tmpC/10139724895635470572/pref_0 --sub-mat blosum62.out -s 5.7 -k 0 --k-score 2147483647 --alph-size 21 --max-seq-len 65535 --max-seqs 1000 --offset-result 0 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --no-preload 1 --pca 1 --pcb 1.5 --threads 48 -v 3 . MMseqs Version: 	GITDIR-NOTFOUND; Sub Matrix 	blosum62.out; Sensitivity 	5.7; K-mer size 	0; K-score 	2147483647; Alphabet size 	21; Max. sequence length 	65535; Max. results per query 	1000; Offset result 	0; Split DB 	0; Split mode 	2; Split Memory Limit 	0; Coverage threshold 	0; Coverage Mode 	0; Compositional bias 	1; Diagonal Scoring 	1; Exact k-mer matching 	0; Mask Residues 	1; Minimum Diagonal score 	15; Include identical Seq. Id.	false; Spaced Kmer 	1; No preload 	true; Pseudo count a 	1; Pseudo count b 	1.5; Spaced k-mer pattern 	; Threads 	48; Verbosity 	3. Initialising data structures...; Using 48 threads.; Could not find precomputed index. Compute index.; Substitution matrices...; Use kmer size 7 and split 3 using Target split mode.; Needed memory (213955223732 byte) of total memory (243154",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/160#issuecomment-461782109:2259,mask,mask,2259,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/160#issuecomment-461782109,1,['mask'],['mask']
Availability,"r query 	300; Offset result 	0; Split DB 	0; Split mode 	2; Split Memory Limit 	0; Coverage threshold 	0.8; Coverage Mode 	0; Compositional bias 	0; Diagonal Scoring 	0; Exact k-mer matching 	0; Mask Residues 	1; Minimum Diagonal score 	0; Include identical Seq. Id.	false; Spaced Kmer 	1; No preload 	false; Early exit 	false; Pseudo count a 	1; Pseudo count b 	1.5; Threads 	10; Verbosity 	3. Initialising data structures...; Using 10 threads.; Could not find precomputed index. Compute index.; Substitution matrices...; Use kmer size 6 and split 1 using Target split mode.; Needed memory (1094599205 byte) of total memory (365681509171 byte); Target database: /tmp/test/9465698490903227639/input_step_redundancy(Size: 27782); Query database type: Aminoacid; Target database type: Aminoacid; Time for init: 0 h 0 m 1s. Query database: /tmp/test/9465698490903227639/input_step_redundancy(size=27782); Process prefiltering step 1 of 1. Index table: counting k-mers...; ..; Index table: Masked residues: 266508; Index table: fill...; ..; Index table: removing duplicate entries...; Index table init done. DB statistic; Entries: 1182627; DB Size: 519095762 (byte); Avg Kmer Size: 0.0184785; Top 10 Kmers; 	YTGTPK		230; 	PGFVVC		201; 	TNMHCE		201; 	GSPYYE		201; 	ISYEFH		201; 	FMHLRK		201; 	KKEEWK		201; 	WKREKP		201; 	MTTCKQ		201; 	IFTFHT		201; Min Kmer Size: 0; Empty list: 63346238. Time for index table init: 0h 0m 0s. 	k-mers per position = 1.5412, k-mer match probability: 7.54641e-14; k-mer similarity threshold: 130; k-mer match probability: 7.54641e-14. Starting prefiltering scores calculation (step 1 of 1); Query db start 1 to 27782; Target db start 1 to 27782; ..; 1 k-mers per position.; 1604 DB matches per sequence.; 0 Overflows.; 27 sequences passed prefiltering per query sequence.; Median result list size: 2; 0 sequences with 0 size result lists. Time for prefiltering scores calculation: 0 h 0 m 1s; Time for merging files: 0 h 0 m 0 s. Overall time for prefiltering run: 0 h 0 m 2s",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/88#issuecomment-401138700:15249,Mask,Masked,15249,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/88#issuecomment-401138700,1,['Mask'],['Masked']
Availability,"r-len 0 --mask 0 --mask-lower-case 0 -k 0 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --rescore-mode 0 --filter-hits 0 --sort-results 0 --remove-tmp-files 0 --force-reuse 0. kmermatcher DB_in/fasta_in_db_HC tmpfiles//13298481167543164943/linclust/10229649346622198404/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-id 0 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 16 --compressed 0 -v 3. kmermatcher DB_in/fasta_in_db_HC tmpfiles//13298481167543164943/linclust/10229649346622198404/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-id 0 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 16 --compressed 0 -v 3. Database size: 303 type: Aminoacid; Reduced amino acid alphabet: (A S T) (C) (D B N) (E Q Z) (F Y) (G) (H) (I V) (K R) (L J M) (P) (W) (X). Generate k-mers list for 1 split; [=================================================================] 303 0s 51ms; Sort kmer 0h 0m 0s 3ms; Sort by rep. sequence 0h 0m 0s 0ms; Time for fill: 0h 0m 0s 0ms; Time for merging to pref: 0h 0m 0s 0ms; Time for processing: 0h 0m 0s 182ms; rescorediagonal DB_in/fasta_in_db_HC DB_in/fasta_in_db_HC tmpfiles//13298481167543164943/linclust/10229649346622198404/pref tmpfiles//13298481167543164943/linclust/10229649346622198404/pref_rescore1 --sub-mat nucl:nucleotide.out,aa:blosum62.out --rescore-mode 0 --wrapped-scoring 0 --filter-hits 0 -e 0.001 -c 0.8 -a 0 --cov-mode 0 --min-seq-id 0.5 --min-aln-len 0 --seq-id-mode 0 --add-self-matc",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-771572412:3651,mask,mask,3651,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-771572412,2,['mask'],"['mask', 'mask-lower-case']"
Availability,"reatesubdb ""$TMPPATH/order_step$STEP"" $INPUT ""$TMPPATH/input_step1"". # go down to 90% (this step is needed to create big clusters); STEP=1; INPUT=""$TMPPATH/input_step1""; $RUNNER mmseqs prefilter ""$INPUT"" ""$INPUT"" ""$TMPPATH/pref_step$STEP"" ${PREFILTER1_PAR}; $RUNNER mmseqs align ""$INPUT"" ""$INPUT"" ""$TMPPATH/pref_step$STEP"" ""$TMPPATH/aln_step$STEP"" ${ALIGNMENT1_PAR}; mmseqs cluster $INPUT ""$TMPPATH/aln_step$STEP"" ""$TMPPATH/clu_step$STEP"" ${CLUSTER1_PAR}. # create database unicluster 90% (we need to merge redundancy, step_0 and step_1); mmseqs mergeclusters ""${SEQUENCE_DB}"" $OUTDIR/uniclust90_$RELEASE \; ""$TMPPATH/clu_frag"" ""$TMPPATH/clu_redundancy"" $TMPPATH/clu_step0 $TMPPATH/clu_step1. awk '{ print $1 }' ""$TMPPATH/clu_step$STEP.index"" > ""$TMPPATH/order_step$STEP""; mmseqs createsubdb ""$TMPPATH/order_step$STEP"" $INPUT ""$TMPPATH/input_step2"". # now we cluster down to 30% sequence id to produce a 30% and 50% clustering; STEP=2; INPUT=$TMPPATH/input_step2; $RUNNER mmseqs prefilter $INPUT $INPUT ""$TMPPATH/pref_step$STEP"" ${PREFILTER2_PAR}; $RUNNER mmseqs align $INPUT $INPUT ""$TMPPATH/pref_step$STEP"" ""$TMPPATH/aln_step$STEP"" ${ALIGNMENT2_PAR}. # cluster down to 50%; mmseqs filterdb ""$TMPPATH/aln_step$STEP"" ""$TMPPATH/aln_uniclust50"" \; --filter-column 3 --filter-regex '(0\.[5-9][0-9]{2}|1\.000)'; mmseqs cluster $INPUT ""$TMPPATH/aln_uniclust50"" ""$TMPPATH/clu_uniclust50"" ${CLUSTER2_PAR}; mmseqs mergeclusters ""${SEQUENCE_DB}"" $OUTDIR/uniclust50_$RELEASE \; ""$TMPPATH/clu_frag"" ""$TMPPATH/clu_redundancy"" $TMPPATH/clu_step0 $TMPPATH/clu_step1 $TMPPATH/clu_uniclust50. STEP=2; INPUT=$TMPPATH/input_step2; # cluster down to 30%; mmseqs cluster $INPUT ""$TMPPATH/aln_step$STEP"" ""$TMPPATH/clu_uniclust30"" ${CLUSTER2_PAR}; mmseqs mergeclusters ""${SEQUENCE_DB}"" $OUTDIR/uniclust30_$RELEASE \; ""$TMPPATH/clu_frag"" ""$TMPPATH/clu_redundancy"" $TMPPATH/clu_step0 $TMPPATH/clu_step1 $TMPPATH/clu_uniclust30; ```. However, I experience another error in step 2 `cluster`. ; ```; linclust /home/outdir/2023_0",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/700#issuecomment-1589819536:4300,down,down,4300,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/700#issuecomment-1589819536,1,['down'],['down']
Availability,"rt-results 0 --global-alignment 0 --mask-profile 1 --e-profile 0.001 --wg 0 --filter-msa 1 --max-seq-id 0.9 --qid 0 --qsc -20 --cov 0 --diff 1000 --omit-consensus 0 --min-length 30 --max-length 32734 --max-gaps 2147483647 --contig-start-mode 2 --contig-end-mode 2 --orf-start-mode 1 --forward-frames 1,2,3 --reverse-frames 1,2,3 --translation-table 1 --use-all-table-starts 0 --id-offset 0 --add-orf-stop 0 --chain-alignments 0 --merge-query 1 --search-type 0 --num-iterations 1 --start-sens 4 --sens-steps 1 --slice-search 0 --strand 1 --disk-space-limit 0 --force-reuse 0 --remove-tmp-files 0. prefilter clusters_rep-seqs_db_14_30 /ebio/abt3_projects/databases_no-backup/uniclust/mmseqs2_8.fac81/uniclust90_2018_08_db tmp_part-14/17957680840564044329/tmp_hsp1/2842639954524457022/pref_0 --sub-mat blosum62.out --seed-sub-mat VTML80.out -k 0 --k-score 2147483647 --alph-size 21 --max-seq-len 65535 --max-seqs 200 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 24 --compressed 0 -v 3 -s 5.7. Using 24 threads.; Estimated memory consumption 413414 MB; Target database size: 119988216 type: Aminoacid; Query database size: 40624 type: Aminoacid; Process prefiltering step 1 of 1. Index table k-mer threshold: 122 at k-mer size 7; Index table: counting k-mers; [=================================================================] 100.00% 119.99M 14m 40s 186ms; Index table: Masked residues: 372860390; Index table: fill; [=================================================================] 100.00% 119.99M 20m 55s 996ms; Index statistics; Entries: 38076912867; DB size: 227643 MB; Avg k-mer size: 29.747588; Top 10 k-mers; SGQQRIA	281769; GPGGKLL	259328; GQQVARA	172987; YTGTGKG	166889; GGQRVAR	143134; LLGPGKT	113836; LSGQQAI	94348; GGRRVAR	94149; ALGSGKS	92540; GRFVVEV	90006; Time for ",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/221#issuecomment-515936587:4708,mask,mask,4708,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/221#issuecomment-515936587,2,['mask'],"['mask', 'mask-lower-case']"
Availability,"rw-r--r-- 1 gnii0001 pc77 0 Jan 27 16:54 GTDB.index; -rw-r--r-- 1 gnii0001 pc77 0 Jan 27 17:33 GTDB_mapping; -rw-r--r-- 1 gnii0001 pc77 0 Jan 27 16:54 GTDB.source; -rw-r--r-- 1 gnii0001 pc77 25771406 Jan 27 17:33 GTDB_taxonomy. # slurm error; awk: cmd. line:1: fatal: cannot open file `/home/gnii0001/pc77/scratch_nobackup/Database/mmseqs_formatted/GTDB.lookup' for reading: No such file or directory. # slurm standard output:; ....; Download Results:; gid |stat|avg speed |path/URI; ======+====+===========+=======================================================; 94ce2b|OK | 88MiB/s|/home/gnii0001/pc77/scratch_nobackup/Database/mmseqs_formatted/tmp/13846894499670505008/bac120_taxonomy.tsv. Status Legend:; (OK):download completed. 01/27 17:33:08 [NOTICE] Downloading 1 item(s). 01/27 17:33:09 [NOTICE] Download complete: /home/gnii0001/pc77/scratch_nobackup/Database/mmseqs_formatted/tmp/13846894499670505008/ar53_taxonomy.tsv. Download Results:; gid |stat|avg speed |path/URI; ======+====+===========+=======================================================; 13f000|OK | 6.3MiB/s|/home/gnii0001/pc77/scratch_nobackup/Database/mmseqs_formatted/tmp/13846894499670505008/ar53_taxonomy.tsv. Status Legend:; (OK):download completed.; Create directory /home/gnii0001/pc77/scratch_nobackup/Database/mmseqs_formatted/tmp/13846894499670505008/taxdb; createtaxdb /home/gnii0001/pc77/scratch_nobackup/Database/mmseqs_formatted/GTDB /home/gnii0001/pc77/scratch_nobackup/Database/mmseqs_formatted/tmp/13846894499670505008/taxdb --ncbi-tax-dump /home/gnii0001/pc77/scratch_nobackup/Database/mmseqs_formatted/tmp/13846894499670505008/taxonomy --tax-mapping-file /home/gnii0001/pc77/scratch_nobackup/Database/mmseqs_formatted/tmp/13846894499670505008/taxonomy/mapping_genomes --tax-mapping-mode 1 --threads 128 -v 3 . Loading nodes file ... Done, got 113318 nodes; Loading merged file ... Done, added 0 merged nodes.; Loading names file ... Done; Init RMQ ...Done; Error: createtaxdb died; ```. Any tips? Thanks.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/758#issuecomment-1913045806:1507,Down,Download,1507,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/758#issuecomment-1913045806,3,"['Down', 'Error', 'down']","['Download', 'Error', 'download']"
Availability,"s --min-length 30 --max-length 32734 --max-gaps 2147483647 --contig-start-mode 2 --contig-end-mode 2 --orf-start-mode 1 --forward-frames 1,2,3 --reverse-frames 1,2,3 --translation-table 1 --use-all-table-starts 0 --id-offset 0 --threads 2 --compressed 0 -v 3 . [] 4h 52m 19s 671ms; Time for merging files: 0h 0m 12s 453ms; Time for merging files: 0h 0m 37s 79ms; Time for processing: 4h 53m 13s 946ms; translatenucs tmp/15531098257495296432/q_orfs tmp/15531098257495296432/q_orfs_aa --translation-table 1 --add-orf-stop 0 -v 3 --compressed 0 --threads 2 . [] 4h 49m 49s 475ms; Time for merging files: 0h 0m 13s 279ms; Time for processing: 4h 50m 4s 882ms; prefilter tmp/15531098257495296432/q_orfs_aa /home/dhwani/databases/mmseqsRefSeqCompleteDB.idx tmp/15531098257495296432/search/pref_0 --sub-mat blosum62.out --seed-sub-mat VTML80.out -k 0 --k-score 2147483647 --alph-size 21 --max-seq-len 65535 --max-seqs 25 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 3 --pca 1 --pcb 1.5 --threads 2 --compressed 0 -v 3 -s 1.0 . Using 2 threads.; Index version: 15; Generated by: 73ce3b88754987122b4fc5e69a721beeecd677d0; ScoreMatrix: VTML80.out; Estimated memory consumption 372556 MB; Target database size: 134985288 type: Aminoacid; Query database size: 12189231 type: Aminoacid; Process prefiltering step 1 of 1. k-mer similarity threshold: 174; Starting prefiltering scores calculation (step 1 of 1); Query db start 1 to 12189231; Target db start 1 to 134985288; [] 5h 25m 52s 523ms. 5.520466 k-mers per position; 7748 DB matches per sequence; 0 overflows; 11 sequences passed prefiltering per query sequence; 8 median result list length; 2084890 sequences with 0 size result lists. Time for prefiltering scores calculation: 5h 25m 59s 596ms; Time for merging files: 0h 0m 17s 47ms; Time for processing: 5h 28m 30s 1",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/214#issuecomment-508085485:4966,mask,mask,4966,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/214#issuecomment-508085485,2,['mask'],"['mask', 'mask-lower-case']"
Availability,"s 0ms; Time for processing: 0h 0m 0s 1ms; prefilter tmp//538598962955004214/seq_wrong_assigned tmp//538598962955004214/seq_seeds.merged tmp//538598962955004214/seq_wrong_assigned_pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -s 6 -k 0 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 65535 --max-seqs 20 --split 0 --split-mode 2 --split-memory-limit 0 -c 0.8 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 16 --compressed 0 -v 3. Query database size: 9 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 210 type: Aminoacid; Index table k-mer threshold: 109 at k-mer size 6; Index table: counting k-mers; [=================================================================] 100.00% 210 0s 27ms; Index table: Masked residues: 0; Index table: fill; [=================================================================] 100.00% 210 0s 8ms; Index statistics; Entries: 1285; DB size: 488 MB; Avg k-mer size: 0.000020; Top 10 k-mers; XXXXXX 3; XXXXXX 3; XXXXXX 2; XXXXXX 2; XXXXXX 2; XXXXXX 2; XXXXXX 2; XXXXXX 2; XXXXXX 2; XXXXXX 2; Time for index table init: 0h 0m 1s 174ms; Process prefiltering step 1 of 1. k-mer similarity threshold: 109; Starting prefiltering scores calculation (step 1 of 1); Query db start 1 to 9; Target db start 1 to 210; [=================================================================] 100.00% 9 0s 11ms. 460.860859 k-mers per position; 14 DB matches per sequence; 0 overflows; 0 queries produce too many hits (truncated result); 3 sequences passed prefiltering per query sequence; 3 median result list length; 0 sequences with 0 size result lists; Time for merging to seq_wrong_assigned_pref: 0h 0m 0s 1ms; Time for processing: 0h 0m 1s 801ms; swapdb tmp//538598962955004214/seq_wrong_assigned_pref tmp//538598962955004214/se",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-773234853:28185,Mask,Masked,28185,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-773234853,1,['Mask'],['Masked']
Availability,"s 66ms; connected component mode; Total time: 0h 0m 0s 90ms. Size of the sequence database: 276; Size of the alignment database: 276; Number of clusters: 237. Writing results 0h 0m 0s 0ms; Time for merging to clu_step0: 0h 0m 0s 0ms; Time for processing: 0h 0m 0s 96ms; createsubdb tmpfiles//13298481167543164943/clu_step0 tmpfiles//13298481167543164943/input_step_redundancy tmpfiles//13298481167543164943/input_step1 -v 3 --subdb-mode 1. Time for merging to input_step1: 0h 0m 0s 0ms; Time for processing: 0h 0m 0s 1ms; prefilter tmpfiles//13298481167543164943/input_step1 tmpfiles//13298481167543164943/input_step1 tmpfiles//13298481167543164943/pref_step1 --sub-mat nucl:nucleotide.out,aa:blosum62.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -s 3.5 -k 0 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 65535 --max-seqs 20 --split 0 --split-mode 2 --split-memory-limit 0 -c 0.8 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 16 --compressed 0 -v 3. Query database size: 237 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 237 type: Aminoacid; Index table k-mer threshold: 131 at k-mer size 6; Index table: counting k-mers; [=================================================================] 237 0s 39ms; Index table: Masked residues: 0; Index table: fill; [=================================================================] 237 0s 9ms; Index statistics; Entries: 1403; DB size: 488 MB; Avg k-mer size: 0.000022; Top 10 k-mers; XXXXXX 3; XXXXXX 3; XXXXXX 2; XXXXXX 2; XXXXXX 2; XXXXXX 2; XXXXXX 2; XXXXXX 2; XXXXXX 2; XXXXXX 2; Time for index table init: 0h 0m 1s 25ms; Process prefiltering step 1 of 1. k-mer similarity threshold: 131; Starting prefiltering scores calculation (step 1 of 1); Query db start 1 to 237; Target db start 1 to 237; [==========================================",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-771572412:15543,mask,mask,15543,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-771572412,2,['mask'],"['mask', 'mask-lower-case']"
Availability,s processed; ...................................................................................................	16 Mio. sequences processed; ...................................................................................................	17 Mio. sequences processed; ...................................................................................................	18 Mio. sequences processed; ...................................................................................................	19 Mio. sequences processed; ...................................................................................................	20 Mio. sequences processed; ...................................................................................................	21 Mio. sequences processed; ...................................................................................................	22 Mio. sequences processed; .......................................................; Index table: Masked residues: 8669313; Index table: fill...; ...................................................................................................	1 Mio. sequences processed; ...................................................................................................	2 Mio. sequences processed; ...................................................................................................	3 Mio. sequences processed; ...................................................................................................	4 Mio. sequences processed; ...................................................................................................	5 Mio. sequences processed; ...................................................................................................	6 Mio. sequences processed; ...................................................................................................	7 Mio. sequences processed; .......................................................................,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/221#issuecomment-516032943:9387,Mask,Masked,9387,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/221#issuecomment-516032943,1,['Mask'],['Masked']
Availability,"s/2.0/test/tmp/aln_4 --sub-mat /home/zcx/Program/MMseqs/2.0/data/blosum62.out --alignment-mode 0 -e 0.001 -c 0 --comp-bias-corr 1 --min-seq-id 0 --max-seq-len 32000 --max-seqs 300 --max-rejected 2147483647 --threads 32 -v 3; Program call:; queryDB targetDB /home/zcx/Program/MMseqs/2.0/test/tmp/pref_4 /home/zcx/Program/MMseqs/2.0/test/tmp/aln_4 --sub-mat /home/zcx/Program/MMseqs/2.0/data/blosum62.out --alignment-mode 0 -e 0.001 -c 0 --comp-bias-corr 1 --min-seq-id 0 --max-seq-len 32000 --max-seqs 300 --max-rejected 2147483647 --threads 32 -v 3 . MMseqs Version: ef19bf40b8f6f5151d5ecbab42cfcb903facb907; Sub Matrix /home/zcx/Program/MMseqs/2.0/data/blosum62.out; Alignment mode 0; E-value threshold 0.001; Coverage threshold 0; Detect fragments false; Compositional bias 1; Seq. Id Threshold 0; Max. sequence length 32000; Max. results per query 300; Max Reject 2147483647; Include identical Seq. Id. false; Nucleotide false; Profile false; Add backtrace false; Realign hit false; Threads 32; Verbosity 3. Init data structures...; Compute score only.; Using 32 threads.; Calculation of Smith-Waterman alignments.; Time for merging files: 0 h 0 m 0 s. All sequences processed. 6287 alignments calculated.; 6203 sequence pairs passed the thresholds (0.986639 of overall calculated).; 25.2154 hits per query sequence.; Time for alignments calculation: 0 h 0 m 1s; - checkReturnCode 'Alignment died'; - '[' 0 -ne 0 ']'; - '[' 4 -gt 4 ']'; - NEXTINPUT=/home/zcx/Program/MMseqs/2.0/test/tmp/input_step4; - '[' 4 -lt 4 ']'; - let SENS=SENS+SENS_STEP_SIZE; - INPUT=/home/zcx/Program/MMseqs/2.0/test/tmp/input_step4; - '[' 5 -le 4 ']'; - mv -f /home/zcx/Program/MMseqs/2.0/test/tmp/aln_4 resultDB; - mv -f /home/zcx/Program/MMseqs/2.0/test/tmp/aln_4.index resultDB.index; - checkReturnCode 'Could not move result to resultDB'; - '[' 0 -ne 0 ']'; - '[' -n '' ']'. Why was there an 'Could not move result to resultDB' error code even though the ""resultDB"" and ""resultDB.index"" file was correctly generated?",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/1#issuecomment-235778304:6359,error,error,6359,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/1#issuecomment-235778304,1,['error'],['error']
Availability,"scoring 	false; E-value threshold 	100000; Seq. id. threshold 	0; Min alignment length 	0; Seq. id. mode 	0; Alternative alignments 	0; Coverage threshold 	0; Coverage mode 	0; Max sequence length 	65535; Compositional bias 	0; Realign hits 	false; Max reject 	2147483647; Max accept 	2147483647; Include identical seq. id. 	false; Preload mode 	0; Pseudo count a 	1; Pseudo count b 	1.5; Score bias 	0; Gap open cost 	11; Gap extension cost 	1; zdrop 	40; Threads 	64; Compressed 	0; Verbosity 	3; Seed substitution matrix 	nucl:nucleotide.out,aa:VTML80.out; Sensitivity 	4; k-mer length 	0; k-score 	2147483647; Alphabet size 	nucl:5,aa:21; Max results per query 	300; Split database 	0; Split mode 	2; Split memory limit 	0; Diagonal scoring 	true; Exact k-mer matching 	0; Mask residues 	0; Mask lower case residues 	0; Minimum diagonal score 	15; Spaced k-mers 	1; Spaced k-mer pattern 	; Local temporary path 	; Rescore mode 	0; Remove hits by seq. id. and coverage	false; Sort results 	0; Mask profile 	1; Profile e-value threshold 	0.1; Global sequence weighting 	false; Allow deletions 	false; Filter MSA 	1; Maximum seq. id. threshold 	0.9; Minimum seq. id. 	0; Minimum score per column 	-20; Minimum coverage 	0; Select N most diverse seqs 	1000; Omit consensus 	false; Min codons in orf 	30; Max codons in length 	32734; Max orf gaps 	2147483647; Contig start mode 	2; Contig end mode 	2; Orf start mode 	1; Forward frames 	1,2,3; Reverse frames 	1,2,3; Translation table 	1; Translate orf 	0; Use all table starts 	false; Offset of numeric ids 	0; Create lookup 	0; Add orf stop 	false; Chain overlapping alignments 	0; Merge query 	1; Search type 	0; Search iterations 	1; Start sensitivity 	4; Search steps 	1; Slice search mode 	false; Strand selection 	1; Disk space limit 	0; MPI runner 	; Force restart with latest tmp 	false; Remove temporary files 	false. align /tmp/56067190/queryT.fa.mmsq /tmp/56067190/queryT.fa.mmsq /scratch/jobs/56067190/14902988131097346952/pref_0 /tmp/560",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/281#issuecomment-593953276:3682,Mask,Mask,3682,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/281#issuecomment-593953276,1,['Mask'],['Mask']
Availability,"scoring 	false; E-value threshold 	100000; Seq. id. threshold 	0; Min alignment length 	0; Seq. id. mode 	0; Alternative alignments 	0; Coverage threshold 	0; Coverage mode 	0; Max sequence length 	65535; Compositional bias 	0; Realign hits 	false; Max reject 	2147483647; Max accept 	2147483647; Include identical seq. id. 	false; Preload mode 	0; Pseudo count a 	1; Pseudo count b 	1.5; Score bias 	0; Gap open cost 	11; Gap extension cost 	1; zdrop 	40; Threads 	64; Compressed 	0; Verbosity 	3; Seed substitution matrix 	nucl:nucleotide.out,aa:VTML80.out; Sensitivity 	4; k-mer length 	0; k-score 	2147483647; Alphabet size 	nucl:5,aa:21; Max results per query 	300; Split database 	0; Split mode 	2; Split memory limit 	0; Diagonal scoring 	true; Exact k-mer matching 	0; Mask residues 	0; Mask lower case residues 	0; Minimum diagonal score 	15; Spaced k-mers 	1; Spaced k-mer pattern 	; Local temporary path 	; Rescore mode 	0; Remove hits by seq. id. and coverage	false; Sort results 	0; Mask profile 	1; Profile e-value threshold 	0.1; Global sequence weighting 	false; Allow deletions 	false; Filter MSA 	1; Maximum seq. id. threshold 	0.9; Minimum seq. id. 	0; Minimum score per column 	-20; Minimum coverage 	0; Select N most diverse seqs 	1000; Omit consensus 	false; Min codons in orf 	30; Max codons in length 	32734; Max orf gaps 	2147483647; Contig start mode 	2; Contig end mode 	2; Orf start mode 	1; Forward frames 	1,2,3; Reverse frames 	1,2,3; Translation table 	1; Translate orf 	0; Use all table starts 	false; Offset of numeric ids 	0; Create lookup 	0; Add orf stop 	false; Chain overlapping alignments 	0; Merge query 	1; Search type 	0; Search iterations 	1; Start sensitivity 	4; Search steps 	1; Slice search mode 	false; Strand selection 	1; Disk space limit 	0; MPI runner 	; Force restart with latest tmp 	false; Remove temporary files 	false. search -s 4 --threads 64 -e 100000 --comp-bias-corr 0 --mask 0 /tmp/56067190/queryT.fa.mmsq /tmp/56067190/queryT.fa.mmsq /t",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/281#issuecomment-593953276:1452,Mask,Mask,1452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/281#issuecomment-593953276,1,['Mask'],['Mask']
Availability,"scoring 0 -e 0.001 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --zdrop 40 --alph-size nucl:5,aa:13 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 -k 0 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --rescore-mode 0 --filter-hits 0 --sort-results 0 --remove-tmp-files 0 --force-reuse 0. kmermatcher DB_in tmp//10798751672030653963/linclust/5052420726377277994/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-id 0 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 16 --compressed 0 -v 3. kmermatcher DB_in tmp//10798751672030653963/linclust/5052420726377277994/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-id 0 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 16 --compressed 0 -v 3. Database size: 303 type: Aminoacid; Reduced amino acid alphabet: (A S T) (C) (D B N) (E Q Z) (F Y) (G) (H) (I V) (K R) (L J M) (P) (W) (X). Generate k-mers list for 1 split; [=================================================================] 100.00% 303 0s 20ms; Sort kmer 0h 0m 0s 0ms; Sort by rep. sequence 0h 0m 0s 0ms; Time for fill: 0h 0m 0s 0ms; Time",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-775767472:3385,mask,mask,3385,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-775767472,2,['mask'],"['mask', 'mask-lower-case']"
Availability,"se; E-value threshold 	1; Seq. id. threshold 	0; Min alignment length 	0; Seq. id. mode 	0; Alternative alignments 	0; Coverage threshold 	0; Coverage mode 	0; Max sequence length 	65535; Compositional bias 	1; Max reject 	5; Max accept 	30; Include identical seq. id. 	false; Preload mode 	0; Pseudo count a 	1; Pseudo count b 	1.5; Score bias 	0; Realign hits 	false; Realign score bias 	-0.2; Realign max seqs 	2147483647; Gap open cost 	nucl:5,aa:11; Gap extension cost 	nucl:2,aa:1; Zdrop 	40; Seed substitution matrix 	nucl:nucleotide.out,aa:VTML80.out; Sensitivity 	2; k-mer length 	0; k-score 	2147483647; Alphabet size 	nucl:5,aa:21; Max results per query 	300; Split database 	0; Split mode 	2; Split memory limit 	0; Diagonal scoring 	true; Exact k-mer matching 	0; Mask residues 	1; Mask lower case residues 	0; Minimum diagonal score 	15; Spaced k-mers 	1; Spaced k-mer pattern 	; Local temporary path 	; Rescore mode 	0; Remove hits by seq. id. and coverage 	false; Sort results 	0; Mask profile 	1; Profile E-value threshold 	0.001; Global sequence weighting 	false; Allow deletions 	false; Filter MSA 	1; Maximum seq. id. threshold 	0.9; Minimum seq. id. 	0; Minimum score per column 	-20; Minimum coverage 	0; Select N most diverse seqs 	1000; Min codons in orf 	30; Max codons in length 	32734; Max orf gaps 	2147483647; Contig start mode 	2; Contig end mode 	2; Orf start mode 	1; Forward frames 	1,2,3; Reverse frames 	1,2,3; Translation table 	1; Translate orf 	0; Use all table starts 	false; Offset of numeric ids 	0; Create lookup 	0; Add orf stop 	false; Overlap between sequences 	0; Sequence split mode 	1; Header split mode 	0; Chain overlapping alignments 	0; Merge query 	1; Search type 	0; Search iterations 	1; Start sensitivity 	4; Search steps 	1; Exhaustive search mode 	false; Filter results during exhaustive search	0; Strand selection 	1; LCA search mode 	false; Disk space limit 	0; MPI runner 	; Force restart with latest tmp 	false; Remove temporary files 	fal",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/441#issuecomment-823834129:1895,Mask,Mask,1895,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/441#issuecomment-823834129,2,['Mask'],['Mask']
Availability,"se; E-value threshold 	1e-05; Seq. id. threshold 	0; Min alignment length 	0; Seq. id. mode 	0; Alternative alignments 	0; Coverage threshold 	0; Coverage mode 	0; Max sequence length 	65535; Compositional bias 	1; Max reject 	5; Max accept 	30; Include identical seq. id. 	false; Preload mode 	0; Pseudo count a 	1; Pseudo count b 	1.5; Score bias 	0; Realign hits 	false; Realign score bias 	-0.2; Realign max seqs 	2147483647; Gap open cost 	nucl:5,aa:11; Gap extension cost 	nucl:2,aa:1; Zdrop 	40; Seed substitution matrix 	nucl:nucleotide.out,aa:VTML80.out; Sensitivity 	6; k-mer length 	0; k-score 	2147483647; Alphabet size 	nucl:5,aa:21; Max results per query 	200; Split database 	0; Split mode 	2; Split memory limit 	0; Diagonal scoring 	true; Exact k-mer matching 	0; Mask residues 	1; Mask lower case residues 	0; Minimum diagonal score 	15; Spaced k-mers 	1; Spaced k-mer pattern; Local temporary path; Rescore mode 	0; Remove hits by seq. id. and coverage 	false; Sort results 	0; Mask profile 	1; Profile E-value threshold 	0.001; Global sequence weighting 	false; Allow deletions 	false; Filter MSA 	1; Maximum seq. id. threshold 	0.9; Minimum seq. id. 	0; Minimum score per column 	-20; Minimum coverage 	0; Select N most diverse seqs 	1000; Min codons in orf 	30; Max codons in length 	32734; Max orf gaps 	2147483647; Contig start mode 	2; Contig end mode 	2; Orf start mode 	1; Forward frames 	1,2,3; Reverse frames 	1,2,3; Translation table 	1; Translate orf 	0; Use all table starts 	false; Offset of numeric ids 	0; Create lookup 	0; Add orf stop 	false; Overlap between sequences 	0; Sequence split mode 	1; Header split mode 	0; Chain overlapping alignments 	0; Merge query 	1; Search type 	0; Search iterations 	2; Start sensitivity 	1; Search steps 	3; Exhaustive search mode 	false; Filter results during exhaustive search	0; Strand selection 	1; LCA search mode 	false; Disk space limit 	0; MPI runner; Force restart with latest tmp 	false; Remove temporary files 	false",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/432#issuecomment-813242194:2223,Mask,Mask,2223,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/432#issuecomment-813242194,1,['Mask'],['Mask']
Availability,"se; LCA ranks 	kingdom:phylum:class:order:family:genus:species; Blacklisted taxa 	12908,28384; Show taxon lineage 	false; LCA mode 	3; Taxonomy output mode 	0; Match sequences by their id. 	false; Remove temporary files 	false; MPI runner. search clusters_rep-seqs_db_14_30 /ebio/abt3_projects/databases_no-backup/uniclust/mmseqs2_8.fac81/uniclust90_2018_08_db tmp_part-14/17957680840564044329/first tmp_part-14/17957680840564044329/tmp_hsp1 --sub-mat blosum62.out -a 0 --alignment-mode 2 -e 1e-05 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 1 --realign 0 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --gap-open 11 --gap-extend 1 --threads 24 --compressed 0 -v 3 --seed-sub-mat VTML80.out -s 5.7 -k 0 --k-score 2147483647 --alph-size 21 --max-seqs 200 --split 0 --split-mode 2 --split-memory-limit 0 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --spaced-kmer-mode 1 --rescore-mode 0 --filter-hits 0 --sort-results 0 --global-alignment 0 --mask-profile 1 --e-profile 0.001 --wg 0 --filter-msa 1 --max-seq-id 0.9 --qid 0 --qsc -20 --cov 0 --diff 1000 --omit-consensus 0 --min-length 30 --max-length 32734 --max-gaps 2147483647 --contig-start-mode 2 --contig-end-mode 2 --orf-start-mode 1 --forward-frames 1,2,3 --reverse-frames 1,2,3 --translation-table 1 --use-all-table-starts 0 --id-offset 0 --add-orf-stop 0 --chain-alignments 0 --merge-query 1 --search-type 0 --num-iterations 1 --start-sens 4 --sens-steps 1 --slice-search 0 --strand 1 --disk-space-limit 0 --force-reuse 0 --remove-tmp-files 0. prefilter clusters_rep-seqs_db_14_30 /ebio/abt3_projects/databases_no-backup/uniclust/mmseqs2_8.fac81/uniclust90_2018_08_db tmp_part-14/17957680840564044329/tmp_hsp1/2842639954524457022/pref_0 --sub-mat blosum62.out --seed-sub-mat VTML80.out -k 0 --k-score 2147483647 --alph-size 21 --max-seq-len 65535 --max-",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/221#issuecomment-515936587:3559,mask,mask,3559,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/221#issuecomment-515936587,3,['mask'],"['mask', 'mask-lower-case', 'mask-profile']"
Availability,"search_tmp/16020913209305565279/q_orfs_aa --min-length 30 --max-length 32734 --max-gaps 2147483647 --contig-start-mode 2 --contig-end-mode 2 --orf-start-mode 1 --forward-frames 1,2,3 --reverse-frames 1,2,3 --translation-table 1 --translate 1 --use-all-table-starts 0 --id-offset 0 --create-lookup 0 --threads 12 --compressed 1 -v 3 . [=================================================================] 100.00% 10.00K 0s 19ms ; Time for merging to q_orfs_aa_h: 0h 0m 0s 0ms; Time for merging to q_orfs_aa: 0h 0m 0s 0ms; Time for processing: 0h 0m 0s 27ms; prefilter tmp1/15089590555632328148/search_tmp/16020913209305565279/q_orfs_aa pfama_20230914/pfam-a-full tmp1/15089590555632328148/search_tmp/16020913209305565279/search/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -s 5.7 -k 5 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 65535 --max-seqs 300 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 12 --compressed 1 -v 3 . Query database size: 0 type: Aminoacid; Estimated memory consumption: 557M; Target database size: 19482 type: Profile; Index table k-mer threshold: 90 at k-mer size 5 ; Index table: counting k-mers; [=================================================================] 100.00% 19.48K 4s 492ms ; Index table: Masked residues: 0; Index table: fill; [=================================================================] 100.00% 19.48K 11s 88ms ; Index statistics; Entries: 454766207; DB size: 2633 MB; Avg k-mer size: 111.350382; Top 10 k-mers; RRRRR 1414; QQQQQ 1135; RRRRQ 985; SPPPP 965; QRRRR 962; PPPPS 953; RQRRR 940; RRRQR 927; RHRRR 914; RKRRR 902; Time for index table init: 0h 0m 16s 838ms; Time for processing: 0h 0m 17s 228ms; swapresults tmp1/15089590555632328148/search_tmp/160209132093",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/754#issuecomment-1725129947:4396,mask,mask,4396,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/754#issuecomment-1725129947,2,['mask'],"['mask', 'mask-lower-case']"
Availability,"seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 -k 0 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --rescore-mode 0 --filter-hits 0 --sort-results 0 --remove-tmp-files 0 --force-reuse 0. kmermatcher DB_in tmp//10798751672030653963/linclust/5052420726377277994/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-id 0 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 16 --compressed 0 -v 3. kmermatcher DB_in tmp//10798751672030653963/linclust/5052420726377277994/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-id 0 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 16 --compressed 0 -v 3. Database size: 303 type: Aminoacid; Reduced amino acid alphabet: (A S T) (C) (D B N) (E Q Z) (F Y) (G) (H) (I V) (K R) (L J M) (P) (W) (X). Generate k-mers list for 1 split; [=================================================================] 100.00% 303 0s 20ms; Sort kmer 0h 0m 0s 0ms; Sort by rep. sequence 0h 0m 0s 0ms; Time for fill: 0h 0m 0s 0ms; Time for merging to pref: 0h 0m 0s 0ms; Time for processing: 0h 0m 0s 92ms; rescorediagonal DB_in DB_in tmp//10798751672030653963/linclust/5052420726377277994/pref tmp//10798751672030653963/linclust/5052420726377277994/pref_rescore1 --sub-mat nucl:nucleotide.out,aa:blosum62.out --rescore-mode 0 --wrapped-scoring 0 --filter-hits 0 -e 0.001 -c 0.8 -a 0 --cov-mode 0 --min-seq-id 0.5 --min-aln-len 0 --seq-id-mode 0 --add-self-matches 0 --sort-results 0 --db-load-mo",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-775767472:3846,mask,mask,3846,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-775767472,2,['mask'],"['mask', 'mask-lower-case']"
Availability,"seqs2/tree/14-7e284) and GTDB r214, using a Linux server (Ubuntu 22.04 LTS; CPU with SSE/AVX2 support and 512 GB RAM). Although there is a lot of overlap with the post by @mlcoleman previously and the discussion by @mherold1 , I include some details below about the problems I ran into and how I addressed them. ## Problem description; After making a seqdb for the GTDB, there seems to be a collision of genome IDs between different genomes in the seqdb's `gdtb.lookup` file. As mentioned by @mlcoleman , these ID collisions seem to disrupt mmseqs taxonomy workflows downstream. ## Steps to reproduce; 1. Download `gtdb.tar.gz` as done in the `data/workflow/databases.sh` script (or you can just run: `wget -o gdtb.tar.gz https://data.ace.uq.edu.au/public/gtdb/data/releases/latest/genomic_files_reps/gtdb_proteins_aa_reps.tar.gz`); 2. Import `gtdb.tar.gz` as a tardb via `mmseqs tar2db gtdb.tar.gz tardb --tar-include 'faa.gz$'`; 3. Run `mmseqs createdb tardb gtdb`. `mmseqs createdb` finishes without error, but the resulting `gtdb.lookup` file seems to assign the wrong genome IDs (resulting in ID collisions) for any genomes with an ID over 65535. Meanwhile, the correct IDs seem to be assigned in `gtdb.source`. #### For example:. Last few lines of `gtdb.source` (`tail gtdb.source`):; ```; 85195 RS_GCF_014201515.1; 85196 RS_GCF_003977665.1; 85197 RS_GCF_007922615.2; 85198 GB_GCA_002389765.1; 85199 RS_GCF_001440475.1; 85200 GB_GCA_015059865.1; 85201 GB_GCA_900546895.1; 85202 GB_GCA_017621015.1; 85203 GB_GCA_015486425.1; 85204 GB_GCA_934565415.1; ```; It seems like the left column is the genome ID, and the right column is the genome name in the GTDB. Everything seems OK with this file. Last few lines of `gtdb.lookup` (`tail gtdb.lookup`); ```; 256163105 CAKTHQ010000047.1_16 19668; 256163106 CAKTHQ010000050.1_5 19668; 256163107 CAKTHQ010000052.1_8 19668; 256163108 CAKTHQ010000056.1_1 19668; 256163109 CAKTHQ010000058.1_10 19668; 256163110 CAKTHQ010000061.1_12 19668; 256163111 CAKTHQ010",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/729#issuecomment-1691160625:1109,error,error,1109,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/729#issuecomment-1691160625,1,['error'],['error']
Availability,"sequences,28384:other sequences; Substitution matrix 	aa:blosum62.out,nucl:nucleotide.out; Add backtrace 	false; Alignment mode 	1; Alignment mode 	0; Allow wrapped scoring 	false; E-value threshold 	1; Seq. id. threshold 	0; Min alignment length 	0; Seq. id. mode 	0; Alternative alignments 	0; Coverage threshold 	0; Coverage mode 	0; Max sequence length 	65535; Compositional bias 	1; Compositional bias 	1; Max reject 	5; Max accept 	30; Include identical seq. id. 	false; Preload mode 	0; Pseudo count a 	substitution:1.100,context:1.400; Pseudo count b 	substitution:4.100,context:5.800; Score bias 	0; Realign hits 	false; Realign score bias 	-0.2; Realign max seqs 	2147483647; Correlation score weight 	0; Gap open cost 	aa:11,nucl:5; Gap extension cost 	aa:1,nucl:2; Zdrop 	40; Seed substitution matrix 	aa:VTML80.out,nucl:nucleotide.out; Sensitivity 	2; k-mer length 	0; Target search mode 	0; k-score 	seq:2147483647,prof:2147483647; Alphabet size 	aa:21,nucl:5; Max results per query 	300; Split database 	0; Split mode 	2; Split memory limit 	0; Diagonal scoring 	true; Exact k-mer matching 	0; Mask residues 	1; Mask residues probability 	0.9; Mask lower case residues 	0; Minimum diagonal score 	15; Selected taxa; Spaced k-mers 	1; Spaced k-mer pattern; Local temporary path; Rescore mode 	0; Remove hits by seq. id. and coverage 	false; Sort results 	0; Mask profile 	1; Profile E-value threshold 	0.001; Global sequence weighting 	false; Allow deletions 	false; Filter MSA 	1; Use filter only at N seqs 	0; Maximum seq. id. threshold 	0.9; Minimum seq. id. 	0.0; Minimum score per column 	-20; Minimum coverage 	0; Select N most diverse seqs 	1000; Pseudo count mode 	0; Min codons in orf 	30; Max codons in length 	32734; Max orf gaps 	2147483647; Contig start mode 	2; Contig end mode 	2; Orf start mode 	1; Forward frames 	1,2,3; Reverse frames 	1,2,3; Translation table 	1; Translate orf 	0; Use all table starts 	false; Offset of numeric ids 	0; Create lookup 	0; Add orf stop",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/838#issuecomment-2081682741:1677,Mask,Mask,1677,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/838#issuecomment-2081682741,2,['Mask'],['Mask']
Availability,"stive search	0; Strand selection 	1; LCA search mode 	false; Disk space limit 	0; MPI runner 	; Force restart with latest tmp 	false; Remove temporary files 	false. Accel. 2bLCA cannot be used with nucl-nucl taxonomy, using top-hit instead; search /data/ct/test/testdb /data/ct/datenbank/silva_mmseqs/silva /data/ct/tmp/17728638439372299279/first /data/ct/tmp/17728638439372299279/tmp_hsp1 --alignment-mode 1 -e 1 --max-rejected 5 --max-accept 30 -s 2 --spaced-kmer-mode 1 --min-length 30 --max-length 32734 --orf-start-mode 1 . prefilter /data/ct/tmp/17728638439372299279/tmp_hsp1/7295210961924303337/query_seqs_split /data/ct/datenbank/silva_mmseqs/silva.idx /data/ct/tmp/17728638439372299279/tmp_hsp1/7295210961924303337/search/pref_0 --sub-mat nucl:nucleotide.out,aa:blosum62.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -k 15 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 10000 --max-seqs 300 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 1 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 256 --compressed 0 -v 3 -s 2.0 . Index version: 16; Generated by: b1704ccc17f3814a1d640a83c6aa925bb0406809; ScoreMatrix: nucleotide.out; Query database size: 8000 type: Nucleotide; Estimated memory consumption: 18G; Target database size: 510984 type: Nucleotide; Process prefiltering step 1 of 1. k-mer similarity threshold: 0; Starting prefiltering scores calculation (step 1 of 1); Query db start 1 to 8000; Target db start 1 to 510984; ^C===============> ] 25.00% 2.00K eta 5m 1s . **Runs of Intel computer**; [kabru@bwp-cfdmain test]$ mmseqs taxonomy testdb ~/datenbank/silvadb testx_result tmp; taxonomy testdb /home/kabru/datenbank/silvadb testx_result tmp . MMseqs Version: 	b1704ccc17f3814a1d640a83c6aa925bb0406809; ORF filter 	1; ORF filter e-value 	100; ORF filter sensitivity 	2; LCA mode 	3; Taxonomy outp",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/441#issuecomment-823834129:3784,mask,mask,3784,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/441#issuecomment-823834129,2,['mask'],"['mask', 'mask-lower-case']"
Availability,"t 	1; Threads 	48; Verbosity 	3. Init data structures...; Compute score, coverage and sequence id.; Using 1 threads.; Query database type: Profile; Target database type: Aminoacid; Calculation of Smith-Waterman alignments.; Time for merging files: 0h 0m 0s 8ms. All sequences processed. 952 alignments calculated.; 258 sequence pairs passed the thresholds (0.271008 of overall calculated).; 258 hits per query sequence.; Time for processing: 0h 0m 15s 798ms; Program call:; mergedbs tmpC/10139724895635470572/profile_0 tmpC/10139724895635470572/aln_new tmpC/10139724895635470572/aln_0 tmpC/10139724895635470572/aln_1 . MMseqs Version:	GITDIR-NOTFOUND; Merge prefixes	; Verbosity 	3. Merging the results to tmpC/10139724895635470572/aln_new; Done; Time for merging files: 0h 0m 0s 7ms; Time for processing: 0h 0m 0s 23ms; Program call:; result2profile tmpC/10139724895635470572/profile_0 genes.db tmpC/10139724895635470572/aln_0 tmpC/10139724895635470572/profile_1 --sub-mat blosum62.out --mask-profile 1 --e-profile 0.1 --comp-bias-corr 1 --wg 0 --filter-msa 1 --max-seq-id 0.9 --qid 0 --qsc -20 --cov 0 --diff 1000 --pca 0 --pcb 1.5 --omit-consensus 0 --no-preload 1 --gap-open 11 --gap-extend 1 --threads 48 -v 3 . MMseqs Version: 	GITDIR-NOTFOUND; Sub Matrix 	blosum62.out; Mask profile 	1; Profile e-value threshold 	0.1; Compositional bias 	1; Use global sequence weighting 	false; Filter MSA 	1; Maximum sequence identity threshold	0.9; Minimum seq. id. 	0; Minimum score per column 	-20; Minimum coverage 	0; Select n most diverse seqs 	1000; Pseudo count a 	0; Pseudo count b 	1.5; Omit Consensus 	false; No preload 	true; Gap open cost 	11; Gap extension cost 	1; Threads 	48; Verbosity 	3. Start computing profiles.; Query database type: Profile; Target database type: Aminoacid; Time for merging files: 0h 0m 0s 112ms; Time for merging files: 0h 0m 0s 7ms. Done.; Time for processing: 0h 0m 16s 74ms; Program call:; prefilter tmpC/10139724895635470572/profile_1 genes.db tmpC/10139724895635",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/160#issuecomment-461782109:87515,mask,mask-profile,87515,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/160#issuecomment-461782109,1,['mask'],['mask-profile']
Availability,"t 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --rescore-mode 0 --filter-hits 0 --sort-results 0 --remove-tmp-files 1 --force-reuse 0. MMseqs Version: 	6b9388469a41935813f5d207d6d149767feb4c42-MPI; Cluster mode 	0; Max connected component depth 	1000; Similarity type 	2; Threads 	24; Compressed 	0; Verbosity 	3; Weight file name; Cluster Weight threshold 	0.9; Substitution matrix 	aa:blosum62.out,nucl:nucleotide.out; Add backtrace 	false; Alignment mode 	3; Alignment mode 	0; Allow wrapped scoring 	false; E-value threshold 	0.001; Seq. id. threshold 	0; Min alignment length 	0; Seq. id. mode 	0; Alternative alignments 	0; Coverage threshold 	0.8; Coverage mode 	0; Max sequence length 	65535; Compositional bias 	1; Compositional bias 	1; Max reject 	2147483647; Max accept 	2147483647; Include identical seq. id. 	false; Preload mode 	0; Pseudo count a 	substitution:1.100,context:1.400; Pseudo count b 	substitution:4.100,context:5.800; Score bias 	0; Realign hits 	false; Realign score bias 	-0.2; Realign max seqs 	2147483647; Correlation score weight 	0; Gap open cost 	aa:11,nucl:5; Gap extension cost 	aa:1,nucl:2; Zdrop 	40; Alphabet size 	aa:13,nucl:5; k-mers per sequence 	21; Spaced k-mers 	1; Spaced k-mer pattern; Scale k-mers per sequence 	aa:0.000,nucl:0.200; Adjust k-mer length 	false; Mask residues 	0; Mask residues probability 	0.9; Mask lower case residues 	0; k-mer length 	0; Shift hash 	67; Split memory limit 	0; Include only extendable 	false; Skip repeating k-mers 	false; Rescore mode 	0; Remove hits by seq. id. and coverage	false; Sort results 	0; Remove temporary files 	true; Force restart with latest tmp 	false; MPI runner. [][error_sighandler] Caught error: Segmentation fault (signal 11); tmp2/6664721939282577716/clu_tmp/1194185237556116514/linclust/18444629910076322402/linclust.sh: line 26: 63437 Segmentation fault $RUNNER ""$MMSEQS"" kmermatcher ""$INPUT"" ""${TMP_PATH}/pref"" ${KMERMATCHER_PAR}; Error: kmermatcher died; ```",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/679#issuecomment-1461610364:3912,Mask,Mask,3912,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/679#issuecomment-1461610364,7,"['Error', 'Mask', 'error', 'fault']","['Error', 'Mask', 'error', 'fault']"
Availability,"t; k-mer length 	5; Alphabet size 	nucl:5,aa:21; Compositional bias 	0; Max sequence length 	65535; Max results per query 	300; Mask residues 	0; Mask lower case residues 	0; Spaced k-mers 	1; Spaced k-mer pattern 	; Sensitivity 	1; k-score 	0; Check compatible 	0; Search type 	0; Split database 	0; Split memory limit 	9G; Verbosity 	3; Threads 	8; Min codons in orf 	30; Max codons in length 	32734; Max orf gaps 	2147483647; Contig start mode 	2; Contig end mode 	2; Orf start mode 	1; Forward frames 	1,2,3; Reverse frames 	1,2,3; Translation table 	1; Translate orf 	0; Use all table starts 	false; Offset of numeric ids 	0; Create lookup 	0; Compressed 	0; Add orf stop 	false; Overlap between sequences	0; Sequence split mode 	1; Strand selection 	1; Remove temporary files 	false. createindex eu-all-2020-02-06/mmseqs-EN-partial-2020-03-26-16-37-04/mmdb eu-all-2020-02-06/mmseqs-EN-partial-2020-03-26-16-37-04/tmp -k 5 --seed-sub-mat identity.out --split-memory-limit 9G -s 1.0 --comp-bias-corr 0 --mask 0 . MMseqs Version: 	12c499dcd647fb0d1c799bc5c6f9f25328ca3e09; Seed substitution matrix 	nucl:identity.out,aa:identity.out; k-mer length 	5; Alphabet size 	nucl:5,aa:21; Compositional bias 	0; Max sequence length 	65535; Max results per query 	300; Mask residues 	0; Mask lower case residues 	0; Spaced k-mers 	1; Spaced k-mer pattern 	; Sensitivity 	1; k-score 	0; Check compatible 	0; Search type 	0; Split database 	0; Split memory limit 	9G; Verbosity 	3; Threads 	8; Min codons in orf 	30; Max codons in length 	32734; Max orf gaps 	2147483647; Contig start mode 	2; Contig end mode 	2; Orf start mode 	1; Forward frames 	1,2,3; Reverse frames 	1,2,3; Translation table 	1; Translate orf 	0; Use all table starts 	false; Offset of numeric ids 	0; Create lookup 	0; Compressed 	0; Add orf stop 	false; Overlap between sequences	0; Sequence split mode 	1; Strand selection 	1; Remove temporary files 	false. indexdb eu-all-2020-02-06/mmseqs-EN-partial-2020-03-26-16-37-04/mmdb eu-all-2",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/293#issuecomment-604476526:2679,mask,mask,2679,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/293#issuecomment-604476526,1,['mask'],['mask']
Availability,"tep$STEP"" ""$TMPPATH/aln_step$STEP"" --min-seq-id 0.9 -c 0.95 --cov-mode 1; mmseqs cluster $INPUT ""$TMPPATH/aln_step$STEP"" ""$TMPPATH/clu_frag"" ${CLUSTER_FRAG_PAR}; awk '{ print $1 }' ""$TMPPATH/clu_frag.index"" > ""$TMPPATH/order_frag""; mmseqs createsubdb ""$TMPPATH/order_frag"" $INPUT ""$TMPPATH/input_step_redundancy"". # filter redundancy; INPUT=""$TMPPATH/input_step_redundancy""; mmseqs clusthash $INPUT ""$TMPPATH/aln_redundancy"" --min-seq-id 0.9; mmseqs cluster $INPUT ""$TMPPATH/aln_redundancy"" ""$TMPPATH/clu_redundancy"" ${CLUSTER_FRAG_PAR}; awk '{ print $1 }' ""$TMPPATH/clu_redundancy.index"" > ""$TMPPATH/order_redundancy""; mmseqs createsubdb ""$TMPPATH/order_redundancy"" $INPUT ""$TMPPATH/input_step0"". # go down to 90%; STEP=0; INPUT=""$TMPPATH/input_step0""; # Remove the fragments from the prefilter, in order not to recompute prefilter; mmseqs createsubdb ""$TMPPATH/order_redundancy"" ""$TMPPATH/pref_step_FRAG"" ""$TMPPATH/pref_step_FRAG_filtered""; mmseqs filterdb ""$TMPPATH/pref_step_FRAG_filtered"" ""$TMPPATH/pref_step$STEP"" --filter-file ""$TMPPATH/order_redundancy""; $RUNNER mmseqs align ""$INPUT"" ""$INPUT"" ""$TMPPATH/pref_step$STEP"" ""$TMPPATH/aln_step$STEP"" ${ALIGNMENT0_PAR}; mmseqs cluster $INPUT ""$TMPPATH/aln_step$STEP"" ""$TMPPATH/clu_step$STEP"" ${CLUSTER0_PAR}; awk '{ print $1 }' ""$TMPPATH/clu_step$STEP.index"" > ""$TMPPATH/order_step$STEP""; mmseqs createsubdb ""$TMPPATH/order_step$STEP"" $INPUT ""$TMPPATH/input_step1"". # go down to 90% (this step is needed to create big clusters); STEP=1; INPUT=""$TMPPATH/input_step1""; $RUNNER mmseqs prefilter ""$INPUT"" ""$INPUT"" ""$TMPPATH/pref_step$STEP"" ${PREFILTER1_PAR}; $RUNNER mmseqs align ""$INPUT"" ""$INPUT"" ""$TMPPATH/pref_step$STEP"" ""$TMPPATH/aln_step$STEP"" ${ALIGNMENT1_PAR}; mmseqs cluster $INPUT ""$TMPPATH/aln_step$STEP"" ""$TMPPATH/clu_step$STEP"" ${CLUSTER1_PAR}. # create database unicluster 90% (we need to merge redundancy, step_0 and step_1); mmseqs mergeclusters ""${SEQUENCE_DB}"" $OUTDIR/uniclust90_$RELEASE \; ""$TMPPATH/clu_frag"" ""$TMPPATH/clu_redundancy",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/700#issuecomment-1589819536:2787,down,down,2787,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/700#issuecomment-1589819536,1,['down'],['down']
Availability,"tep_redundancy -v 3 --subdb-mode 1. Time for merging to input_step_redundancy: 0h 0m 0s 0ms; Time for processing: 0h 0m 0s 0ms; prefilter tmpfiles//13298481167543164943/input_step_redundancy tmpfiles//13298481167543164943/input_step_redundancy tmpfiles//13298481167543164943/pref_step0 --sub-mat nucl:nucleotide.out,aa:blosum62.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -s 1 -k 0 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 65535 --max-seqs 20 --split 0 --split-mode 2 --split-memory-limit 0 -c 0.8 --cov-mode 0 --comp-bias-corr 0 --diag-score 0 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 0 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 16 --compressed 0 -v 3. Query database size: 276 type: Aminoacid; Estimated memory consumption: 978M; Target database size: 276 type: Aminoacid; Index table k-mer threshold: 154 at k-mer size 6; Index table: counting k-mers; [=================================================================] 276 0s 28ms; Index table: Masked residues: 0; Index table: fill; [=================================================================] 276 0s 5ms; Index statistics; Entries: 1187; DB size: 488 MB; Avg k-mer size: 0.000019; Top 10 k-mers; XXXXXX 7; XXXXXX 4; XXXXXX 4; XXXXXX 4; XXXXXX 4; XXXXXX 3; XXXXXX 3; XXXXXX 3; XXXXXX 3; XXXXXX 3; Time for index table init: 0h 0m 1s 36ms; Process prefiltering step 1 of 1. k-mer similarity threshold: 154; Starting prefiltering scores calculation (step 1 of 1); Query db start 1 to 276; Target db start 1 to 276; [================================================================] =276 0s 28ms. 1.374916 k-mers per position; 5 DB matches per sequence; 0 overflows; 0 queries produce too many hits (truncated result); 1 sequences passed prefiltering per query sequence; 1 median result list length; 0 sequences with 0 size result lists; Time for merging to pref_step0: 0h 0m 0s 5ms; Time for processing: 0h 0m 1s 852ms; align tmpfiles/",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-771572412:11883,Mask,Masked,11883,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-771572412,1,['Mask'],['Masked']
Availability,"ter tmp/9700814981231218113/search_tmp/10627605686170015473/search/input_0 /d/Databases/Kegg/sram/mmseqs/kegg tmp/9700814981231218113/search_tmp/10627605686170015473/search/pref_1 --sub-mat nucl:nucleotide.out,aa:blosum62.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -k 0 --k-score 2147483647 --alph-size 21 --max-seq-len 65535 --max-seqs 1 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 40 --compressed 0 -v 3 -s 3.5 . Query database size: 2328975 type: Aminoacid; Estimated memory consumption: 68G; Target database size: 13003941 type: Aminoacid; Index table k-mer threshold: 146 at k-mer size 7 ; Index table: counting k-mers; [=================================================================] 13.00M 1m 31s 355ms; Index table: Masked residues: 71357266; Index table: fill; [=================================================================] 13.00M 1m 21s 643ms; Index statistics; Entries: 5077775275; DB size: 38820 MB; Avg k-mer size: 3.967012; Top 10 k-mers; SGQQRIA	74997; GPGGKLL	59639; GQQVARA	45640; GGQRVAR	38490; GKTLRAG	27665; LLGPGKT	25908; ALGSGKS	22863; GGRRVAR	21815; GRFVVEV	21110; AIGSGKS	20435; Time for index table init: 0h 3m 16s 755ms; Process prefiltering step 1 of 1. k-mer similarity threshold: 146; Starting prefiltering scores calculation (step 1 of 1); Query db start 1 to 2328975; Target db start 1 to 13003941; [=================================================================] 2.33M 2m 23s 577ms. 183.593905 k-mers per position; 20689 DB matches per sequence; 0 overflows; 0 sequences passed prefiltering per query sequence; 1 median result list length; 54469 sequences with 0 size result lists; Time for merging to pref_1: 0h 0m 0s 793ms; Time for processing: 0h 5m 46s 599ms; align tmp/9700814981231218113/search_tmp/10627605686170015473/s",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/231#issuecomment-535253491:7977,Mask,Masked,7977,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/231#issuecomment-535253491,1,['Mask'],['Masked']
Availability,"ter tmp/9700814981231218113/search_tmp/10627605686170015473/search/input_1 /d/Databases/Kegg/sram/mmseqs/kegg tmp/9700814981231218113/search_tmp/10627605686170015473/search/pref_2 --sub-mat nucl:nucleotide.out,aa:blosum62.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -k 0 --k-score 2147483647 --alph-size 21 --max-seq-len 65535 --max-seqs 1 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 40 --compressed 0 -v 3 -s 6.0 . Query database size: 2271004 type: Aminoacid; Estimated memory consumption: 68G; Target database size: 13003941 type: Aminoacid; Index table k-mer threshold: 118 at k-mer size 7 ; Index table: counting k-mers; [=================================================================] 13.00M 1m 31s 294ms; Index table: Masked residues: 71357266; Index table: fill; [=================================================================] 13.00M 1m 21s 848ms; Index statistics; Entries: 5094244039; DB size: 38915 MB; Avg k-mer size: 3.979878; Top 10 k-mers; SGQQRIA	74997; GPGGKLL	59639; GQQVARA	45640; GGQRVAR	38490; GKTLRAG	27665; LLGPGKT	25908; ALGSGKS	22863; GGRRVAR	21815; GRFVVEV	21110; AIGSGKS	20435; Time for index table init: 0h 3m 15s 901ms; Process prefiltering step 1 of 1. k-mer similarity threshold: 118; Starting prefiltering scores calculation (step 1 of 1); Query db start 1 to 2271004; Target db start 1 to 13003941; [=================================================================] 2.27M 43m 26s 530ms. 3262.541404 k-mers per position; 476704 DB matches per sequence; 0 overflows; 0 sequences passed prefiltering per query sequence; 1 median result list length; 18145 sequences with 0 size result lists; Time for merging to pref_2: 0h 0m 0s 779ms; Time for processing: 0h 46m 49s 482ms; align tmp/9700814981231218113/search_tmp/106276056861700154",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/231#issuecomment-535253491:12186,Mask,Masked,12186,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/231#issuecomment-535253491,1,['Mask'],['Masked']
Availability,"thanks very much for @milot-mirdita . Could you explain more on my questions, thanks in advance!!!; 1. the python version ""colabfold_search"" is the file ""colabfold/mmseqs/search.py"", yes?. 2. colabfold_search.sh is mostly for Batch searches. The difference of between Batch searches and single query searches.; Batch searches: input a few hundred to thousands of sequences **as one input set**, and get the only 1 msa sequences set. ; single query searches: input 1 sequence or 2 sequences as a pair as one input set, and get the only 1 msa sequences set.; **If we run multiple ""single query searches"" in parallel or in batch, this is not batch searches, yes?**. 3. when I run mmseqs msa server locally, it succees for ticket/msa, but failed for ""ticket/pair"".; could you check the mmseqs log file and give me instructions?; [log-mmseqs-msa-server.log](https://github.com/soedinglab/MMseqs2/files/11145675/log-mmseqs-msa-server.log). Input taxonomy database ""/mnt/sdc/colabfold_db/uniref30_2202_db.idx"" is missing files:; - /mnt/sdc/colabfold_db/uniref30_2202_db.idx_mapping; - /mnt/sdc/colabfold_db/uniref30_2202_db.idx_nodes.dmp; - /mnt/sdc/colabfold_db/uniref30_2202_db.idx_names.dmp; ...; 2023/04/04 12:29:49 Execution Error: open /home/qcdong/codes/ColabFold/MsaServer/jobs/3m6olJuvf_TV0UTKJxnGu3V3YnMxyHkkj915xg/pair.a3m: no such file or directory",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/690#issuecomment-1495469670:1223,Error,Error,1223,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/690#issuecomment-1495469670,1,['Error'],['Error']
Availability,"the created idx files: colabfold_envdb_202108_db.idx.0 colabfold_envdb_202108_db.idx.1 colabfold_envdb_202108_db.idx.2 colabfold_envdb_202108_db.idx.3 colabfold_envdb_202108_db.idx.4 colabfold_envdb_202108_db.idx.5 colabfold_envdb_202108_db.idx.6 colabfold_envdb_202108_db.idx.7 pdb70_220313.idx uniref30_2202_db.idx. how to reproduce ""ticket/pair"" error in local mmseqs msa server.; 1. follow the instructions in https://github.com/sokrypton/ColabFold/tree/main/MsaServer; The only difference in my process with that in the ColabFold instructions: I did not use vmtouch to keep the precomputed database index file within system memory, because I only have max 256GB RAM.; 2. run MsaServer/setup-and-start-local.sh to compile mmseqs locally.; now, mmseqs server successfully runs. at http://127.0.0.1:8888/; the same codes run sucessfully for online api ""https://api.colabfold.com""; 3, local mmseqs server log with error; [log-mmseqs-msa-server.log](https://github.com/soedinglab/MMseqs2/files/11146747/log-mmseqs-msa-server.log); 4, test codes; ```; import logging; import requests; import time. logger = logging.getLogger(); logging.basicConfig(level=logging.INFO, format='%(asctime)s %(filename)s %(lineno)d: %(message)s',; datefmt='%m-%d %H:%M:%S'); host_url = 'http://127.0.0.1:8888'. def test_pairing():; """""" """"""; query = '>101\nVNPTVFFDIAVDGEPLGRVSFELFADKVPKTAENFRALSTGEKGFGYKGSCFHRIIPGFMCQGGDFTRHNGTGGKSIYGEKFEDENFILKHTGPGILSMANAGPNTNGSQFFICTAKTEWLDGKHVVFGKVKEGMNIVEAMERFGSRNGKTSKKITIADCGQLE\n>102\nHAGPIA\n'; mode = ''; submission_endpoint = 'ticket/pair'; res = requests.post(f'{host_url}/{submission_endpoint}', data={'q':query,'mode': mode}, timeout=6.02); out = res.json(); logger.info('%s', out). # wait for job to finish; max_seconds = 15000; ID, TIME = out[""id""], 0; while out[""status""] in [""UNKNOWN"", ""RUNNING"", ""PENDING"", ""ERROR""]:; t = 5 + random.randint(0, 5); logger.error(f""Sleeping for {t}s. Reason: {out['status']}""); time.sleep(t); out = status(ID); TIME += t; if TIME > max_s",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/690#issuecomment-1495470476:349,error,error,349,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/690#issuecomment-1495470476,2,['error'],['error']
Availability,"the protocol is ok. The error is caused by the incomplete completion of the previous step, because the computer crashed. a seqTaxDB from an existing BLAST database following the protocol:; https://github.com/soedinglab/mmseqs2/wiki#create-a-seqtaxdb-from-an-existing-blast-database",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/566#issuecomment-1140146484:24,error,error,24,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/566#issuecomment-1140146484,1,['error'],['error']
Availability,"then do --split 2 or --split 3, that will bring the memory requirements down to half or a third, at a modest loss of search speed.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/31#issuecomment-301119414:72,down,down,72,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/31#issuecomment-301119414,1,['down'],['down']
Availability,"til.so.1 (0x00002b8052d74000); 	libhwloc.so.5 => /lib64/libhwloc.so.5 (0x00002b8052f77000); 	/lib64/ld-linux-x86-64.so.2 (0x00002b8050d02000); 	libnuma.so.1 => /lib64/libnuma.so.1 (0x00002b80531b1000); 	libltdl.so.7 => /lib64/libltdl.so.7 (0x00002b80533bd000); Program call:; mmseq-testDB /junk/databases/mmseqs/test-nr-50m test-nr50-th32-MPI tmp --threads 8 . MMseqs Version: 	259cecbe2dcb0826f139bab3787daa03e83717bc; Sub Matrix 	blosum62.out; Add backtrace 	false; Alignment mode 	0; E-value threshold 	0.001; Seq. Id Threshold 	0; Coverage threshold 	0; Target Coverage threshold 	0; Max. sequence length 	32000; Max. results per query 	300; Compositional bias 	1; Query queryProfile 	false; Realign hit 	false; Max Reject 	2147483647; Max Accept 	2147483647; Include identical Seq. Id. 	false; No preload 	false; Early exit 	false; Threads 	8; Verbosity 	3; Sensitivity 	5.7; K-mer size 	0; K-score 	2147483647; Alphabet size 	21; Target queryProfile 	false; Offset result 	0; Split DB 	0; Split mode 	2; Diagonal Scoring 	1; Mask Residues 	1; Minimum Diagonal score 	15; Spaced Kmer 	1; Profile e-value threshold 	0.001; Use global sequence weighting 	false; Filter MSA 	1; Maximum sequence identity threshold	0.9; Minimum seq. id. 	0; Minimum score per column 	-20; Minimum coverage 	0; Select n most diverse seqs 	1000; Pseudo count a 	1; Pseudo count b 	1.5; Number search iterations 	1; Start sensitivity 	4; sensitivity step size 	1; Sets the MPI runner 	; Remove Temporary Files 	false; ```. And this the stderr:. ```; MCW rank 0 bound to socket 0[core 0[hwt 0-1]], socket 0[core 1[hwt 0-1]], socket 0[core 2[hwt 0-1]], socket 0[core 3[hwt 0-1]], socket 0[core 4[hwt 0-1]], socket 0[core 5[hwt 0-1]], socket 0[core 6[hwt 0-1]], socket 0[core 7[hwt 0-1]]: [BB/BB/BB/BB/BB/BB/BB/BB][../../../../../../../..][../../../../../../../..][../../../../../../../..]; + '[' -z /ngs/software/mmseqs/mmseqs-MPI ']'; + '[' 4 -ne 4 ']'; + '[' '!' -f mmseq-testDB ']'; + '[' '!' -f /junk/databases/mmseqs",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/34#issuecomment-309699230:2884,Mask,Mask,2884,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/34#issuecomment-309699230,1,['Mask'],['Mask']
Availability,"tmp-files 0 --alignment-mode 4. MMseqs Version: 	7.4e23d; Sub Matrix 	blosum62.out; Add backtrace 	false; Alignment mode 	4; E-value threshold 	0.001; Seq. Id Threshold 	0.9; Seq. Id. Mode 	0; Alternative alignments 	0; Coverage threshold 	0; Coverage Mode 	2; Max. sequence length 	65535; Max. results per query 	300; Compositional bias 	0; Realign hit 	false; Max Reject 	2147483647; Max Accept 	2147483647; Include identical Seq. Id. 	false; Preload mode 	0; Pseudo count a 	1; Pseudo count b 	1.5; Score bias 	0; Gap open cost 	11; Gap extension cost 	1; Threads 	24; Verbosity 	3; Sensitivity 	2; K-mer size 	0; K-score 	2147483647; Alphabet size 	21; Offset result 	0; Split DB 	0; Split mode 	2; Split Memory Limit 	0; Diagonal Scoring 	1; Exact k-mer matching 	0; Mask Residues 	0; Minimum Diagonal score 	15; Spaced Kmer 	1; Spaced k-mer pattern; Local temporary path; Rescore mode 	2; Remove hits by seq.id. and coverage 	false; Sort results 	1; In substitution scoring mode, performs global alignment along the diagonal	false; Mask profile 	1; Profile e-value threshold 	0.1; Use global sequence weighting 	false; Filter MSA 	1; Maximum sequence identity threshold 	0.9; Minimum seq. id. 	0; Minimum score per column 	-20; Minimum coverage 	0; Select n most diverse seqs 	1000; Omit Consensus 	false; Min codons in orf 	1; Max codons in length 	2147483647; Max orf gaps 	2147483647; Contig start mode 	2; Contig end mode 	2; Orf start mode 	0; Forward Frames 	1,2,3; Reverse Frames 	1,2,3; Translation Table 	1; Use all table starts 	false; Offset of numeric ids 	0; Add Orf Stop 	false; Number search iterations 	1; Start sensitivity 	4; Search steps 	1; Run a seq-profile search in slice mode 	false; Strand selection 	1; Disk space limit 	0; Sets the MPI runner; Remove Temporary Files 	false. Program call:; extractorfs /tmp/global2/nyoungblut/LLMGA_27929269397/map/R1-R2_db /tmp/global2/nyoungblut/LLMGA_27929269397/map/tmp//3961034198315058036/2495337974437510140/q_orfs --min-length ",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/144#issuecomment-448559651:3920,Mask,Mask,3920,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/144#issuecomment-448559651,1,['Mask'],['Mask']
Availability,"tmp/global/nyoungblut/LLMGAG_274879977417/linclust/genes_db.index; Invalid database read for database data file=/tmp/global/nyoungblut/LLMGAG_274879977417/linclust/genes_db, database index=/tmp/global/nyoungblut/LLMGAG_274879977417/linclust/genes_db.index; Invalid database read for database data file=/tmp/global/nyoungblut/LLMGAG_274879977417/linclust/genes_db, database index=/tmp/global/nyoungblut/LLMGAG_274879977417/linclust/genes_db.index; Invalid database read for database data file=/tmp/global/nyoungblut/LLMGAG_274879977417/linclust/genes_db, database index=/tmp/global/nyoungblut/LLMGAG_274879977417/linclust/genes_db.index; Invalid database read for database data file=/tmp/global/nyoungblut/LLMGAG_274879977417/linclust/genes_db, database index=/tmp/global/nyoungblut/LLMGAG_274879977417/linclust/genes_db.index; Invalid database read for database data file=/tmp/global/nyoungblut/LLMGAG_274879977417/linclust/genes_db, database index=/tmp/global/nyoungblut/LLMGAG_274879977417/linclust/genes_db.index; getData: local id (4294967295) >= db size (184470); Invalid database read for database data file=/tmp/global/nyoungblut/LLMGAG_274879977417/linclust/genes_db, database index=/tmp/global/nyoungblut/LLMGAG_274879977417/linclust/genes_db.index; getData: local id (4294967295) >= db size (184470); getData: local id (4294967295) >= db size (184470); Invalid database read for database data file=/tmp/global/nyoungblut/LLMGAG_274879977417/linclust/genes_db, database index=/tmp/global/nyoungblut/LLMGAG_274879977417/linclust/genes_db.index; getData: local id (4294967295) >= db size (184470); Invalid database read for database data file=/tmp/global/nyoungblut/LLMGAG_274879977417/linclust/genes_db, database index=/tmp/global/nyoungblut/LLMGAG_274879977417/linclust/genes_db.index; getData: local id (4294967295) >= db size (184470); Segmentation fault; Error: Rescore with hamming distance step died; ```. For other metagenome datasets, this version of mmseqs2 seems to be working fine.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/208#issuecomment-537552315:2687,fault,fault,2687,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/208#issuecomment-537552315,2,"['Error', 'fault']","['Error', 'fault']"
Availability,"tmp/tmp_MMSeq2//17595625152138277869/search_tmp/17414849138893322762/query_seqs_split /tmp/tmp_MMSeq2//17595625152138277869/search_tmp/17414849138893322762/search/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -s 5.7 -k 15 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 10000 --max-seqs 2147483647 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 1 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 256 --compressed 0 -v 3 . Query database size: 280714 type: Nucleotide; Estimated memory consumption: 9G; Target database size: 69220 type: Nucleotide; Index table k-mer threshold: 0 at k-mer size 15 ; Index table: counting k-mers; [=================================================================] 69.22K 0s 80ms; Index table: Masked residues: 724; Index table: fill; [=================================================================] 69.22K 0s 68ms; Index statistics; Entries: 15985099; DB size: 8283 MB; Avg k-mer size: 0.014887; Top 10 k-mers; CCCTCGCTCCGTTCG	31729; GGGGAAAGGTTGGGG	31239; ATTCGGTGAGTAATG	31054; CTCGCCCTCCCCAGC	31010; CGACCTACCACCCCT	31003; CGGGAGCGTGTCGAG	30951; GGGCGAGGAACGGGG	30939; GCCCACCGACACTGG	30933; ACCACTTGGTGAGGG	30876; AAGGTATCGGGTTGG	30837; Time for index table init: 0h 0m 5s 578ms; Process prefiltering step 1 of 1. k-mer similarity threshold: 0; Starting prefiltering scores calculation (step 1 of 1); Query db start 1 to 280714; Target db start 1 to 69220; [=================================================================] 280.71K 5s 447ms. 0.936617 k-mers per position; 8306 DB matches per sequence; 48 overflows; 0 queries produce too many hits (truncated result); 1271 sequences passed prefiltering per query sequence; 0 median result list length; 248942 sequences with 0 size result lists; Time for merging to pref: 0h 0m 0",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/394#issuecomment-782439476:7026,Mask,Masked,7026,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/394#issuecomment-782439476,1,['Mask'],['Masked']
Availability,"to input_step2: 0h 0m 0s 0ms; Time for processing: 0h 0m 0s 1ms; prefilter tmp//538598962955004214/input_step2 tmp//538598962955004214/input_step2 tmp//538598962955004214/pref_step2 --sub-mat nucl:nucleotide.out,aa:blosum62.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -s 6 -k 0 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 65535 --max-seqs 20 --split 0 --split-mode 2 --split-memory-limit 0 -c 0.8 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 16 --compressed 0 -v 3. Query database size: 221 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 221 type: Aminoacid; Index table k-mer threshold: 109 at k-mer size 6; Index table: counting k-mers; [=================================================================] 100.00% 221 0s 29ms; Index table: Masked residues: 0; Index table: fill; [=================================================================] 100.00% 221 0s 17ms; Index statistics; Entries: 1337; DB size: 488 MB; Avg k-mer size: 0.000021; Top 10 k-mers; XXXXXX 3; XXXXXX 3; XXXXXX 2; XXXXXX 2; XXXXXX 2; XXXXXX 2; XXXXXX 2; XXXXXX 2; XXXXXX 2; XXXXXX 2; Time for index table init: 0h 0m 0s 985ms; Process prefiltering step 1 of 1. k-mer similarity threshold: 109; Starting prefiltering scores calculation (step 1 of 1); Query db start 1 to 221; Target db start 1 to 221; [=================================================================] 100.00% 221 0s 31ms. 190.836300 k-mers per position; 8 DB matches per sequence; 0 overflows; 0 queries produce too many hits (truncated result); 1 sequences passed prefiltering per query sequence; 1 median result list length; 0 sequences with 0 size result lists; Time for merging to pref_step2: 0h 0m 0s 4ms; Time for processing: 0h 0m 1s 644ms; align tmp//538598962955004214/input_step2 tmp//538598962955004214/input_step2 tmp//5385989",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-773234853:20102,Mask,Masked,20102,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-773234853,1,['Mask'],['Masked']
Availability,truct initial order.; .; Add missing connections.; .; Time for Read in: 0 m 0s. Writing results...; ...done.; Time for clustering: 0 m 0s; Time for merging files: 0 h 0 m 0 s; Total time: 0 m 0s. Size of the sequence database: 18417; Size of the alignment database: 18417; Number of clusters: 16967; Program call:; /tmp/clu//9559457551393989073/clu_step1 /tmp/clu//9559457551393989073/input_step1 /tmp/clu//9559457551393989073/input_step2 . MMseqs Version:	dfb5e6eb53ee034f02cc08d15513fb5ccce7cce7; Verbosity	3. Start writing to file /tmp/clu//9559457551393989073/input_step2; Time for merging files: 0 h 0 m 0 s; Program call:; /tmp/clu//9559457551393989073/input_step2 /tmp/clu//9559457551393989073/input_step2 /tmp/clu//9559457551393989073/pref_step2 --sub-mat blosum62.out -s 6 -k 0 --k-score 2147483647 --alph-size 21 --max-seq-len 65535 --max-seqs 300 --offset-result 0 --split 0 --split-mode 2 --split-memory-limit 0 -c 0.8 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --min-ungapped-score 15 --spaced-kmer-mode 1 --pca 1 --pcb 1.5 --threads 36 -v 3 . MMseqs Version: 	dfb5e6eb53ee034f02cc08d15513fb5ccce7cce7; Sub Matrix 	blosum62.out; Sensitivity 	6; K-mer size 	0; K-score 	2147483647; Alphabet size 	21; Max. sequence length 	65535; Max. results per query 	300; Offset result 	0; Split DB 	0; Split mode 	2; Split Memory Limit 	0; Coverage threshold 	0.8; Coverage Mode 	0; Compositional bias 	1; Diagonal Scoring 	1; Exact k-mer matching 	0; Mask Residues 	1; Minimum Diagonal score 	15; Include identical Seq. Id.	false; Spaced Kmer 	1; No preload 	false; Early exit 	false; Pseudo count a 	1; Pseudo count b 	1.5; Threads 	36; Verbosity 	3. Initialising data structures...; Using 36 threads.; Could not find precomputed index. Compute index.; Substitution matrices...; Use kmer size 6 and split 1 using Target split mode.; Needed memory (1079694853 byte) of total memory (365681509171 byte); Target database: /tmp/clu//9559457551393989073/input_step2(S,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/88#issuecomment-401138700:44058,mask,mask,44058,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/88#issuecomment-401138700,1,['mask'],['mask']
Availability,"true; Cascaded clustering steps 	3; Remove Temporary Files 	false; Sets the MPI runner 	; Kmer per sequence 	80; Shift hash 	5; Include only extendable 	false; Skip sequence with n repeating k-mers 	0; Rescore mode 	0; Remove hits by seq.id. and coverage 	false; In substitution scoring mode, performs global alignment along the diagonal	false. Tmp /tmp/test folder does not exist or is not a directory.; Created dir /tmp/test; Set cluster settings automatic to s=1; Set cluster mode SET COVER.; Set cluster iterations to 1; Program call:; panproteome.db /tmp/test/9465698490903227639/clu_redundancy /tmp/test/9465698490903227639/linclust --cluster-mode 0 -v 3 --max-iterations 1000 --similarity-type 2 --threads 10 --sub-mat blosum62.out --alignment-mode 3 -e 0.001 --min-seq-id 0.8 --alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-len 65535 --max-seqs 300 --comp-bias-corr 0 --max-rejected 2147483647 --max-accept 2147483647 --pca 1 --pcb 1.5 --alph-size 13 --kmer-per-seq 80 --mask 0 -k 0 --hash-shift 5 --split-memory-limit 0 --skip-n-repeat-kmer 0 --rescore-mode 0 . MMseqs Version: 	dfb5e6eb53ee034f02cc08d15513fb5ccce7cce7; Cluster mode 	0; Verbosity 	3; Max depth connected component 	1000; Similarity type 	2; Threads 	10; Sub Matrix 	blosum62.out; Add backtrace 	false; Alignment mode 	3; E-value threshold 	0.001; Seq. Id Threshold 	0.8; Alternative alignments 	0; Coverage threshold 	0.8; Coverage Mode 	0; Max. sequence length 	65535; Max. results per query 	300; Compositional bias 	0; Realign hit 	false; Max Reject 	2147483647; Max Accept 	2147483647; Include identical Seq. Id. 	false; No preload 	false; Early exit 	false; Pseudo count a 	1; Pseudo count b 	1.5; Alphabet size 	13; Kmer per sequence 	80; Mask Residues 	0; K-mer size 	0; Shift hash 	5; Split Memory Limit 	0; Include only extendable 	false; Skip sequence with n repeating k-mers 	0; Rescore mode 	0; Remove hits by seq.id. and coverage 	false; In substitution scoring mode, performs global alignment along the diagonal	fal",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/88#issuecomment-401138700:2430,mask,mask,2430,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/88#issuecomment-401138700,1,['mask'],['mask']
Availability,"tutorial](https://github.com/soedinglab/MMseqs2/wiki#how-to-create-a-hhblits-database). ```; #!/usr/bin/env bash. BASE=""subset""; FILE=""${BASE}.fa""; MMSEQDB=""${BASE}DB""; MMSEQPREF=""${BASE}PREFILTER""; MMSEQALN=""${BASE}ALN""; MMSEQCLU=""${BASE}CLU""; MMSEQMSA=""${BASE}MSA""; FILELOG=""job.log"". echo '#:: CREATEDB' &>> ${FILELOG} ;; mmseqs createdb ${FILE} ${MMSEQDB} &>> ${FILELOG}. echo '#:: PREFILTER' &>> ${FILELOG} ;; mmseqs prefilter ${MMSEQDB} ${MMSEQDB} ${MMSEQPREF} -s 7.5 &>> ${FILELOG}. echo '#:: ALING' &>> ${FILELOG} ;; mmseqs align ${MMSEQDB} ${MMSEQDB} ${MMSEQPREF} ${MMSEQALN} -e 0.00001 &>> ${FILELOG}. echo '#:: CLUST' &>> ${FILELOG} ;; mmseqs clust ${MMSEQDB} ${MMSEQALN} ${MMSEQCLU} &> ${FILELOG} &>> ${FILELOG}. echo '#:: RESULT2MSA' &>> ${FILELOG} ;; mmseqs result2msa ${MMSEQDB} ${MMSEQDB} ${MMSEQCLU} ${MMSEQMSA} --compress &>> ${FILELOG}. echo '#:: CREATE LINKS' &>> ${FILELOG} ;; ln -s ${MMSEQDB}_h ${MMSEQMSA}_header.ffdata &>> ${FILELOG}; ln -s ${MMSEQDB}_h.index ${MMSEQMSA}_header.ffindex &>> ${FILELOG}; ln -s ${MMSEQDB} ${MMSEQMSA}_sequence.ffdata &>> ${FILELOG}; ln -s ${MMSEQDB}.index ${MMSEQMSA}_sequence.ffindex &>> ${FILELOG}. echo '#:: BUILD HHBLITS COMPATIBLE' &>> ${FILELOG} ;; cstranslate -i ${MMSEQMSA} -o ${MMSEQMSA}_cs219 \; -A /home/linuxbrew/anaconda3/data/cs219.lib \; -D /home/linuxbrew/anaconda3/data/context_data.lib \; -x 0.3 -c 4 -I ca3m &>> ${FILELOG}; ```; It only fails on cstranslate with this error:; ```; ERROR: Unable to read input file 'subsetMSA'!; Reading context library for pseudocounts from context_data.lib ...; Reading abstract state alphabet from cs219.lib ...; ```. I'm attaching the the [sequence](https://github.com/soedinglab/MMseqs2/files/3095328/subset.fa.txt), [commands file (source)](https://github.com/soedinglab/MMseqs2/files/3095327/source.sh.txt) and [log file](https://github.com/soedinglab/MMseqs2/files/3095326/job.log.txt). Added "".txt"" to upload easily. I really appreciate any help to debug this error. Thanks in advance.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/174#issuecomment-484587503:1267,echo,echo,1267,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/174#issuecomment-484587503,4,"['ERROR', 'echo', 'error']","['ERROR', 'echo', 'error']"
Availability,ty	3. Start writing to file /tmp/clu//9559457551393989073/input_step_redundancy; Time for merging files: 0 h 0 m 0 s; Program call:; /tmp/clu//9559457551393989073/input_step_redundancy /tmp/clu//9559457551393989073/input_step_redundancy /tmp/clu//9559457551393989073/pref_step0 --sub-mat blosum62.out -s 1 -k 0 --k-score 2147483647 --alph-size 21 --max-seq-len 65535 --max-seqs 300 --offset-result 0 --split 0 --split-mode 2 --split-memory-limit 0 -c 0.8 --cov-mode 0 --comp-bias-corr 0 --diag-score 0 --exact-kmer-matching 0 --mask 1 --min-ungapped-score 0 --spaced-kmer-mode 1 --pca 1 --pcb 1.5 --threads 36 -v 3 . MMseqs Version: 	dfb5e6eb53ee034f02cc08d15513fb5ccce7cce7; Sub Matrix 	blosum62.out; Sensitivity 	1; K-mer size 	0; K-score 	2147483647; Alphabet size 	21; Max. sequence length 	65535; Max. results per query 	300; Offset result 	0; Split DB 	0; Split mode 	2; Split Memory Limit 	0; Coverage threshold 	0.8; Coverage Mode 	0; Compositional bias 	0; Diagonal Scoring 	0; Exact k-mer matching 	0; Mask Residues 	1; Minimum Diagonal score 	0; Include identical Seq. Id.	false; Spaced Kmer 	1; No preload 	false; Early exit 	false; Pseudo count a 	1; Pseudo count b 	1.5; Threads 	36; Verbosity 	3. Initialising data structures...; Using 36 threads.; Could not find precomputed index. Compute index.; Substitution matrices...; Use kmer size 6 and split 1 using Target split mode.; Needed memory (1100935225 byte) of total memory (365681509171 byte); Target database: /tmp/clu//9559457551393989073/input_step_redundancy(Size: 23030); Query database type: Aminoacid; Target database type: Aminoacid; Time for init: 0 h 0 m 0s. Query database: /tmp/clu//9559457551393989073/input_step_redundancy(size=23030); Process prefiltering step 1 of 1. Index table: counting k-mers...; ..; Index table: Masked residues: 81271; Index table: fill...; ..; Index table: removing duplicate entries...; Index table init done. DB statistic; Entries: 848571; DB Size: 517091426 (byte); Avg Kmer Size: 0.013258,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/88#issuecomment-401138700:34101,Mask,Mask,34101,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/88#issuecomment-401138700,1,['Mask'],['Mask']
Availability,ty	3. Start writing to file /tmp/test/9465698490903227639/input_step_redundancy; Time for merging files: 0 h 0 m 0 s; Program call:; /tmp/test/9465698490903227639/input_step_redundancy /tmp/test/9465698490903227639/input_step_redundancy /tmp/test/9465698490903227639/pref_step0 --sub-mat blosum62.out -s 1 -k 0 --k-score 2147483647 --alph-size 21 --max-seq-len 65535 --max-seqs 300 --offset-result 0 --split 0 --split-mode 2 --split-memory-limit 0 -c 0.8 --cov-mode 0 --comp-bias-corr 0 --diag-score 0 --exact-kmer-matching 0 --mask 1 --min-ungapped-score 0 --spaced-kmer-mode 1 --pca 1 --pcb 1.5 --threads 10 -v 3 . MMseqs Version: 	dfb5e6eb53ee034f02cc08d15513fb5ccce7cce7; Sub Matrix 	blosum62.out; Sensitivity 	1; K-mer size 	0; K-score 	2147483647; Alphabet size 	21; Max. sequence length 	65535; Max. results per query 	300; Offset result 	0; Split DB 	0; Split mode 	2; Split Memory Limit 	0; Coverage threshold 	0.8; Coverage Mode 	0; Compositional bias 	0; Diagonal Scoring 	0; Exact k-mer matching 	0; Mask Residues 	1; Minimum Diagonal score 	0; Include identical Seq. Id.	false; Spaced Kmer 	1; No preload 	false; Early exit 	false; Pseudo count a 	1; Pseudo count b 	1.5; Threads 	10; Verbosity 	3. Initialising data structures...; Using 10 threads.; Could not find precomputed index. Compute index.; Substitution matrices...; Use kmer size 6 and split 1 using Target split mode.; Needed memory (1094599205 byte) of total memory (365681509171 byte); Target database: /tmp/test/9465698490903227639/input_step_redundancy(Size: 27782); Query database type: Aminoacid; Target database type: Aminoacid; Time for init: 0 h 0 m 1s. Query database: /tmp/test/9465698490903227639/input_step_redundancy(size=27782); Process prefiltering step 1 of 1. Index table: counting k-mers...; ..; Index table: Masked residues: 266508; Index table: fill...; ..; Index table: removing duplicate entries...; Index table init done. DB statistic; Entries: 1182627; DB Size: 519095762 (byte); Avg Kmer Size: 0.0184,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/88#issuecomment-401138700:14458,Mask,Mask,14458,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/88#issuecomment-401138700,1,['Mask'],['Mask']
Availability,"ty to -s 6.000000; Connected component clustering produces less clusters in a single step clustering.; Please use --single-step-clusterSet cluster iterations to 3; linclust DB_in/fasta_in_db_HC tmpfiles//13298481167543164943/clu_redundancy tmpfiles//13298481167543164943/linclust --cluster-mode 1 --max-iterations 1000 --similarity-type 2 --threads 16 --compressed 0 -v 3 --sub-mat nucl:nucleotide.out,aa:blosum62.out -a 0 --alignment-mode 3 --wrapped-scoring 0 -e 0.001 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 1 --realign 0 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --zdrop 40 --alph-size nucl:5,aa:13 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 -k 0 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --rescore-mode 0 --filter-hits 0 --sort-results 0 --remove-tmp-files 0 --force-reuse 0. kmermatcher DB_in/fasta_in_db_HC tmpfiles//13298481167543164943/linclust/10229649346622198404/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-id 0 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 16 --compressed 0 -v 3. kmermatcher DB_in/fasta_in_db_HC tmpfiles//13298481167543164943/linclust/10229649346622198404/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-id 0 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 0 --",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-771572412:2673,mask,mask,2673,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-771572412,2,['mask'],"['mask', 'mask-lower-case']"
Availability,"ueryT.fa.mmsq /tmp/56067190/queryT.fa.mmsq.outDB /scratch/jobs/56067190 . MMseqs Version: 	ca58693979f95537016a0454affcfd529dbde24d; Substitution matrix 	nucl:nucleotide.out,aa:blosum62.out; Add backtrace 	false; Alignment mode 	2; Allow wrapped scoring 	false; E-value threshold 	100000; Seq. id. threshold 	0; Min alignment length 	0; Seq. id. mode 	0; Alternative alignments 	0; Coverage threshold 	0; Coverage mode 	0; Max sequence length 	65535; Compositional bias 	0; Realign hits 	false; Max reject 	2147483647; Max accept 	2147483647; Include identical seq. id. 	false; Preload mode 	0; Pseudo count a 	1; Pseudo count b 	1.5; Score bias 	0; Gap open cost 	11; Gap extension cost 	1; zdrop 	40; Threads 	64; Compressed 	0; Verbosity 	3; Seed substitution matrix 	nucl:nucleotide.out,aa:VTML80.out; Sensitivity 	4; k-mer length 	0; k-score 	2147483647; Alphabet size 	nucl:5,aa:21; Max results per query 	300; Split database 	0; Split mode 	2; Split memory limit 	0; Diagonal scoring 	true; Exact k-mer matching 	0; Mask residues 	0; Mask lower case residues 	0; Minimum diagonal score 	15; Spaced k-mers 	1; Spaced k-mer pattern 	; Local temporary path 	; Rescore mode 	0; Remove hits by seq. id. and coverage	false; Sort results 	0; Mask profile 	1; Profile e-value threshold 	0.1; Global sequence weighting 	false; Allow deletions 	false; Filter MSA 	1; Maximum seq. id. threshold 	0.9; Minimum seq. id. 	0; Minimum score per column 	-20; Minimum coverage 	0; Select N most diverse seqs 	1000; Omit consensus 	false; Min codons in orf 	30; Max codons in length 	32734; Max orf gaps 	2147483647; Contig start mode 	2; Contig end mode 	2; Orf start mode 	1; Forward frames 	1,2,3; Reverse frames 	1,2,3; Translation table 	1; Translate orf 	0; Use all table starts 	false; Offset of numeric ids 	0; Create lookup 	0; Add orf stop 	false; Chain overlapping alignments 	0; Merge query 	1; Search type 	0; Search iterations 	1; Start sensitivity 	4; Search steps 	1; Slice search mode 	false; Str",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/281#issuecomment-593953276:1233,Mask,Mask,1233,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/281#issuecomment-593953276,4,['Mask'],['Mask']
Availability,"um seq. id. 0; Minimum score per column -20; Minimum coverage 0; Select n most diverse seqs 1000; Omit Consensus false; Min codons in orf 30; Max codons in length 32734; Max orf gaps 2147483647; Contig start mode 2; Contig end mode 2; Orf start mode 1; Forward Frames 1,2,3; Reverse Frames 1,2,3; Translation Table 1; Use all table starts false; Offset of numeric ids 0; Add Orf Stop false; Chain overlapping alignments 0; Search type 0; Number search iterations 1; Start sensitivity 4; Search steps 1; Run a seq-profile search in slice mode false; Strand selection 1; Disk space limit 0; Sets the MPI runner ; Force restart using the latest tmp false; Remove Temporary Files false. Program call:; prefilter pbps.neighbors.DB pfam_profile.idx tmp/6822607060114486044/pref --sub-mat blosum62.out --seed-sub-mat VTML80.out -s 7.5 -k 6 --k-score 2147483647 --alph-size 21 --max-seq-len 65535 --max-seqs 300 --offset-result 0 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 10 --compressed 0 -v 3 . Initialising data structures...; Using 10 threads.; Substitution matrices...; Substitution matrices...; Use index pfam_profile.idx; Index version: 15; Generated by: 8-fac81; MaxSeqLength: 65535; KmerSize: 6; CompBiasCorr: 1; AlphabetSize: 21; Masked: 0; Spaced: 1; KmerScore: 90; SequenceType: Profile; SourcSeqType: Profile; Headers1: 1; Headers2: 0; ScoreMatrix: VTML80.out; Use kmer size 6 and split 1 using Target split mode.; Needed memory (1064365435 byte) of total memory (181308646195 byte); Target database: pfam_profile.idx(Size: 17772); Query database type: Aminoacid; Target database type: Profile; Time for init: 0h 4m 18s 41ms; Query database: pbps.neighbors.DB(size=1364570); Process prefiltering step 1 of 1. k-mer similarity threshold: 90; k-mer match probability: 0. Star",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/189#issuecomment-483627132:2452,mask,mask,2452,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/189#issuecomment-483627132,2,['mask'],"['mask', 'mask-lower-case']"
Availability,"undancy""; mmseqs createsubdb ""$TMPPATH/order_redundancy"" $INPUT ""$TMPPATH/input_step0"". # go down to 90%; STEP=0; INPUT=""$TMPPATH/input_step0""; # Remove the fragments from the prefilter, in order not to recompute prefilter; mmseqs createsubdb ""$TMPPATH/order_redundancy"" ""$TMPPATH/pref_step_FRAG"" ""$TMPPATH/pref_step_FRAG_filtered""; mmseqs filterdb ""$TMPPATH/pref_step_FRAG_filtered"" ""$TMPPATH/pref_step$STEP"" --filter-file ""$TMPPATH/order_redundancy""; $RUNNER mmseqs align ""$INPUT"" ""$INPUT"" ""$TMPPATH/pref_step$STEP"" ""$TMPPATH/aln_step$STEP"" ${ALIGNMENT0_PAR}; mmseqs cluster $INPUT ""$TMPPATH/aln_step$STEP"" ""$TMPPATH/clu_step$STEP"" ${CLUSTER0_PAR}; awk '{ print $1 }' ""$TMPPATH/clu_step$STEP.index"" > ""$TMPPATH/order_step$STEP""; mmseqs createsubdb ""$TMPPATH/order_step$STEP"" $INPUT ""$TMPPATH/input_step1"". # go down to 90% (this step is needed to create big clusters); STEP=1; INPUT=""$TMPPATH/input_step1""; $RUNNER mmseqs prefilter ""$INPUT"" ""$INPUT"" ""$TMPPATH/pref_step$STEP"" ${PREFILTER1_PAR}; $RUNNER mmseqs align ""$INPUT"" ""$INPUT"" ""$TMPPATH/pref_step$STEP"" ""$TMPPATH/aln_step$STEP"" ${ALIGNMENT1_PAR}; mmseqs cluster $INPUT ""$TMPPATH/aln_step$STEP"" ""$TMPPATH/clu_step$STEP"" ${CLUSTER1_PAR}. # create database unicluster 90% (we need to merge redundancy, step_0 and step_1); mmseqs mergeclusters ""${SEQUENCE_DB}"" $OUTDIR/uniclust90_$RELEASE \; ""$TMPPATH/clu_frag"" ""$TMPPATH/clu_redundancy"" $TMPPATH/clu_step0 $TMPPATH/clu_step1. awk '{ print $1 }' ""$TMPPATH/clu_step$STEP.index"" > ""$TMPPATH/order_step$STEP""; mmseqs createsubdb ""$TMPPATH/order_step$STEP"" $INPUT ""$TMPPATH/input_step2"". # now we cluster down to 30% sequence id to produce a 30% and 50% clustering; STEP=2; INPUT=$TMPPATH/input_step2; $RUNNER mmseqs prefilter $INPUT $INPUT ""$TMPPATH/pref_step$STEP"" ${PREFILTER2_PAR}; $RUNNER mmseqs align $INPUT $INPUT ""$TMPPATH/pref_step$STEP"" ""$TMPPATH/aln_step$STEP"" ${ALIGNMENT2_PAR}. # cluster down to 50%; mmseqs filterdb ""$TMPPATH/aln_step$STEP"" ""$TMPPATH/aln_uniclust50"" \; --filter-column ",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/700#issuecomment-1589819536:3507,down,down,3507,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/700#issuecomment-1589819536,1,['down'],['down']
Availability,"use a blunt-force patch. A more finessed approach like -DMMSEQS_ARCH can be fragile. Suppose you decide to change the name of the variable between now and the next release. This patch is then silently rendered inert. If I overlook the change, which is easy to do, the builds introduce agressive optimizations into the binary package, causing illegal instruction dumps for users with lower-end hardware than the build cluster. The static patch, on the otherhand, will break on a variable name chnage so I'll be alerted that it needs attention. For wget and curl, are you referring to createtaxdb.sh and databases.sh? Are these supposed to be installed? The cmake build system only installs mmseqs and bash-conmpletion.sh. Rather than add another dependency, I would add FreeBSD's native fetch command as the final fallback option as follows:. ```; --- data/workflow/databases.sh.orig 2021-06-25 01:34:08 UTC; +++ data/workflow/databases.sh; @@ -27,6 +27,8 @@ STRATEGY=""""; if hasCommand aria2c; then STRATEGY=""$STRATEGY ARIA""; fi; if hasCommand curl; then STRATEGY=""$STRATEGY CURL""; fi; if hasCommand wget; then STRATEGY=""$STRATEGY WGET""; fi; +# Part of FreeBSD base, need not be installed separately; +if hasCommand fetch; then STRATEGY=""$STRATEGY FETCH""; fi; if [ ""$STRATEGY"" = """" ]; then; fail ""No download tool found in PATH. Please install aria2c, curl or wget.""; fi; @@ -47,6 +49,9 @@ downloadFile() {; ;;; WGET); wget -O ""$OUTPUT"" ""$URL"" && return 0; + ;;; + FETCH); + fetch -o ""$OUTPUT"" ""$URL"" && return 0; ;;; esac; done; ```; Most bioinformaticians will have curl and/or wget installed anyway (both are included in the biostar-tools metapoirt), so it won't come into play, but we try to minimize unnecessary requirements. I haven't been able to find a specify CPU feature requirement for FreeBSD, but I think SSE2 is safe to assume for amd64, but I also added a pkg-message suggesting an optimized build from source. How much performance gain do you typically see from SSE4 or AVX?. Thanks...",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/460#issuecomment-868449555:1507,down,download,1507,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/460#issuecomment-868449555,2,['down'],"['download', 'downloadFile']"
Availability,"ut/Struo2_122419461619/cluster_update/11607510948275416679/OLDDB.repSeq /ebio/abt3_scratch/nyoungblut/Struo2_122419461619/cluster_update/11607510948275416679/search/9308835922661050105/pref_0 --sub-mat nucl:nucleotide.out,aa:blosum62.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -k 0 --k-score 2147483647 --alph-size 21 --max-seq-len 65535 --max-seqs 300 --split 0 --split-mode 2 --split-memory-limit 0 -c 0.8 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 12 --compressed 0 -v 3 -s 4.0. Query database size: 6 type: Aminoacid; Estimated memory consumption: 1G; Target database size: 34258 type: Aminoacid; Index table k-mer threshold: 127 at k-mer size 6; Index table: counting k-mers; [=================================================================] 34.26K 0s 519ms; Index table: Masked residues: 72412; Index table: fill; [=================================================================] 34.26K 0s 429ms; Index statistics; Entries: 9905952; DB size: 544 MB; Avg k-mer size: 0.154780; Top 10 k-mers; GPGGTL	164; GQQVAR	114; GLGNGK	80; GEGGVV	73; GPGGTT	69; LLDPAL	54; SGGSLR	53; LLGPGK	49; GQQIAR	49; GQQLAR	48; Time for index table init: 0h 0m 1s 840ms; Process prefiltering step 1 of 1. k-mer similarity threshold: 127; Starting prefiltering scores calculation (step 1 of 1); Query db start 1 to 6; Target db start 1 to 34258; [=================================================================] 6 0s 2ms. 37.492909 k-mers per position; 726 DB matches per sequence; 0 overflows; 0 queries produce too much hits (truncated result); 3 sequences passed prefiltering per query sequence; 4 median result list length; 0 sequences with 0 size result lists; Time for merging to pref_0: 0h 0m 0s 4ms; Time for processing: 0h 0m 2s 431ms; align /ebio/abt3_scratch/nyoungblut/Struo2_122419461619/cluster_update/11607510948275416679/",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/333#issuecomment-663145167:3367,Mask,Masked,3367,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/333#issuecomment-663145167,1,['Mask'],['Masked']
Availability,"ut_step2: 0h 0m 0s 0ms; Time for processing: 0h 0m 0s 1ms; prefilter tmp//10798751672030653963/input_step2 tmp//10798751672030653963/input_step2 tmp//10798751672030653963/pref_step2 --sub-mat nucl:nucleotide.out,aa:blosum62.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -s 6 -k 0 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 65535 --max-seqs 20 --split 0 --split-mode 2 --split-memory-limit 0 -c 0.8 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 16 --compressed 0 -v 3. Query database size: 222 type: Aminoacid; Estimated memory consumption: 977M; Target database size: 222 type: Aminoacid; Index table k-mer threshold: 109 at k-mer size 6; Index table: counting k-mers; [=================================================================] 100.00% 222 0s 24ms; Index table: Masked residues: 0; Index table: fill; [=================================================================] 100.00% 222 0s 3ms; Index statistics; Entries: 1342; DB size: 488 MB; Avg k-mer size: 0.000021; Top 10 k-mers; XXXXXX 3; XXXXXX 3; XXXXXX 2; XXXXXX 2; XXXXXX 2; XXXXXX 2; XXXXXX 2; XXXXXX 2; XXXXXX 2; XXXXXX 2; Time for index table init: 0h 0m 0s 970ms; Process prefiltering step 1 of 1. k-mer similarity threshold: 109; Starting prefiltering scores calculation (step 1 of 1); Query db start 1 to 222; Target db start 1 to 222; [=================================================================] 100.00% 222 0s 52ms. 196.811469 k-mers per position; 8 DB matches per sequence; 0 overflows; 0 queries produce too many hits (truncated result); 1 sequences passed prefiltering per query sequence; 1 median result list length; 0 sequences with 0 size result lists; Time for merging to pref_step2: 0h 0m 0s 11ms; Time for processing: 0h 0m 1s 704ms; align tmp//10798751672030653963/input_step2 tmp//10798751672030653963/input_step2 tmp//107",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-775767472:20267,Mask,Masked,20267,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-775767472,1,['Mask'],['Masked']
Availability,"value threshold 	0.001; Seq. Id Threshold 	0.9; Seq. Id. Mode 	0; Sort results 	1; In substitution scoring mode, performs global alignment along the diagonal	false; Min codons in orf 	1; Max codons in length 	2147483647; Max orf gaps 	2147483647; Contig start mode 	2; Contig end mode 	2; Orf start mode 	0; Forward Frames 	1,2,3; Reverse Frames 	1,2,3; Translation Table 	1; Use all table starts 	false; Offset of numeric ids 	0; Add Orf Stop 	false; Start sensitivity 	4; Search steps 	1; Sets the MPI runner; Remove Temporary Files 	false. Program call:; search /tmp/global2/nyoungblut/LLMGA_27929269397/map/R1-R2_db /tmp/global2/nyoungblut/LLMGA_27929269397/linclust/genes_db /tmp/global2/nyoungblut/LLMGA_27929269397/map/R1-R2_v_genes_db /tmp/global2/nyoungblut/LLMGA_27929269397/map/tmp//3961034198315058036 --sub-mat blosum62.out -s 2 -k 0 --k-score 2147483647 --alph-size 21 --max-seq-len 65535 --max-seqs 300 --offset-result 0 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 2 --comp-bias-corr 0 --diag-score 1 --exact-kmer-matching 0 --mask 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 24 -v 3 --rescore-mode 2 --filter-hits 0 -e 0.001 --min-seq-id 0.9 --seq-id-mode 0 --sort-results 1 --global-alignment 0 --min-length 1 --max-length 2147483647 --max-gaps 2147483647 --contig-start-mode 2 --contig-end-mode 2 --orf-start-mode 0 --forward-frames 1,2,3 --reverse-frames 1,2,3 --translation-table 1 --use-all-table-starts 0 --id-offset 0 --add-orf-stop 0 --start-sens 4 --sens-steps 1 --remove-tmp-files 0 --alignment-mode 4. MMseqs Version: 	7.4e23d; Sub Matrix 	blosum62.out; Add backtrace 	false; Alignment mode 	4; E-value threshold 	0.001; Seq. Id Threshold 	0.9; Seq. Id. Mode 	0; Alternative alignments 	0; Coverage threshold 	0; Coverage Mode 	2; Max. sequence length 	65535; Max. results per query 	300; Compositional bias 	0; Realign hit 	false; Max Reject 	2147483647; Max Accept 	2147483647; Inclu",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/144#issuecomment-448559651:2358,mask,mask,2358,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/144#issuecomment-448559651,1,['mask'],['mask']
Availability,"verhead of building the index table on the fly. Please cite:; Steinegger, M. & Soding, J. Sensitive protein sequence searching for the analysis of massive data sets. bioRxiv XXXX (2016). © Martin Steinegger <martin.steinegger@mpibpc.mpg.de>. Usage: <i:sequenceDB> <o:indexDB> <tmpDir> [options]. prefilter options default description [value range]; -k 0 k-mer size in the range [6,7] (0: set automatically to optimum); --alph-size 21 alphabet size [2,21] ; --split 0 splits target set in n equally distributed chunks. In default the split is automatically set; --spaced-kmer-mode 1 0: use consecutive positions a k-mers; 1: use spaced k-mers . clustlinear options default description [value range]; -k 0 k-mer size in the range [6,7] (0: set automatically to optimum); --alph-size 21 alphabet size [2,21] . common options default description [value range]; --sub-mat blosum62.out amino acid substitution matrix file ; --max-seq-len 32000 Maximum sequence length [1,32768] ; --threads 32 number of cores used for the computation (uses all cores by default); -v 3 verbosity level: 0=nothing, 1: +errors, 2: +warnings, 3: +info. 1 Database paths are required; ```. When I omit the `<o:indexDB> <tmpDir>` parameters in the command line, the createindex command still fails:. ```; -bash-4.2$ mmseqs createindex uniref90.mms --split 8 --threads 8; Program call:; uniref90.mms --split 8 --threads 8 . MMseqs Version: c5615b34c686b1cf0f200670be8bc6cba76d90f9; Sub Matrix blosum62.out; K-mer size 0; Alphabet size 21; Max. sequence length 32000; Split DB 8; Spaced Kmer 1; Threads 8; Verbosity 3. Substitution matrices...; Use kmer size 7 and split 8 using split mode; Index table: counting k-mers...; .WARNING: Sequence (dbKey=10870) contains only ATGC. It might be a nucleotide sequence.; .................................................................................................. 1 Mio. sequences processed; ............................................................................................",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/3#issuecomment-251876135:1392,error,errors,1392,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/3#issuecomment-251876135,1,['error'],['errors']
Availability,"when I run ; mmseqs formatalignment queryDB targetDB resultDB resultDB.2 --format-mode 1 --add-backtrace; mmseqs complaint:. Convert a ffindex alignment database to BLAST tab or SAM flat file.; USAGE: <queryDb> <targetDb> <alignmentDB> <outFile>. Designed and implemented by Martin Steinegger martin.steinegger@mpibpc.mpg.de. Parameter Name Type & Value Description; --format-mode [int: 1] Output format BLAST TAB=0, PAIRWISE=1, or SAM=2 ; -v [int: 3] Verbosity level: 0=NOTHING, 1=ERROR, 2=WARNING, 3=INFO ; Unrecognized parameter --add-backtrace",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/2#issuecomment-245790663:482,ERROR,ERROR,482,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/2#issuecomment-245790663,1,['ERROR'],['ERROR']
Availability,with --mask 0: . `mmseqs cluster ../DB_in/fasta_in_db_HC DB_clu tmp/ --mask 0 --cov-mode 0 --cluster-mode 0 --cluster-reassign 1`. `Alignment format is not supported! ] 0.00% 1 eta -; 31Alignment format is not supported!; 31Error: Clustering step 2 died`,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-773240865:7,mask,mask,7,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-773240865,2,['mask'],['mask']
Availability,with the latest release (11-e1a1c) I also get the same error reported above:. Clustering mode: Set Cover; [=================================================================] 17.92K 0s 5ms; Sort entries; Find missing connections; Found 16944 new connections.; Reconstruct initial order; Alignment format is not supported!; Error: Clustering step 2 died,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/pull/329#issuecomment-663085284:55,error,error,55,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/pull/329#issuecomment-663085284,2,"['Error', 'error']","['Error', 'error']"
Availability,"x and sse) I receive this output. ```; n8942188@lyra03:~/test_mmseqs2> /home/n8942188/various_programs/mmseqs2/bin/mmseqs convertalis mmseqstest_nucl.fasta_QDB mmseqtest_prots.fasta_TDB mmseqtest_SDB mmseqtest_SDB.m8 --threads 1; Program call:; mmseqstest_nucl.fasta_QDB mmseqtest_prots.fasta_TDB mmseqtest_SDB mmseqtest_SDB.m8 --threads 1. MMseqs Version: 2339462c06eab0bee64e4fc0ebebf7707f6e53fd; Alignment Format 0; No preload false; Early exit false; Database Output false; Threads 1; Verbosity 3. Query Header file: mmseqstest_nucl.fasta_QDB_h; Use index mmseqstest_nucl.fasta_QDB.sk6; Index version: 5.0.0; Generated by: 2339462c06eab0bee64e4fc0ebebf7707f6e53fd; KmerSize: 6; AlphabetSize: 21; Mask: 1; Type: 1; Spaced: 1; KmerScore: 0; SequenceType: 0; Headers: 1; ScoreMatrix: blosum62.out; Target Header file: mmseqtest_prots.fasta_TDB_h; Use index mmseqtest_prots.fasta_TDB.sk6; Index version: 5.0.0; Generated by: 2339462c06eab0bee64e4fc0ebebf7707f6e53fd; KmerSize: 6; AlphabetSize: 21; Mask: 1; Type: 1; Spaced: 1; KmerScore: 0; SequenceType: 0; Headers: 1; ScoreMatrix: blosum62.out; Alignment database: mmseqtest_SDB; Start writing file to mmseqtest_SDB.m8; Invalid database read for database data file=mmseqstest_nucl.fasta_QDB_h, database index=; ```. All the previous steps seem to work correctly (createdb, createindex, search) and have contents inside their files. For example, running head on the _QDB_h and _TDB_h files return the below result (both _h files are identical since my query is the nucleotide version of the prot sequence). ```; evm.model.utg902.1.8.5abb479e; evm.model.utg902.1.9.5abb479e; evm.model.utg902.1.10.5abb479e; evm.model.utg1004.80; evm.model.utg8847.1_evm.model.utg8847.2.3.5abb479e; evm.model.utg8847.1_evm.model.utg8847.2; evm.model.utg8847.1_evm.model.utg8847.2.5.5abb479e; evm.model.utg1937.4; evm.model.utg12562.19; ```. Head of the mmseqstest_nucl.fasta_QDB_h_index file == . ```; 1 0 32; 2 32 32; 3 64 33; 4 97 23; 5 120 53; 6 173 42; 7 215 53; 8",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/64#issuecomment-377736994:1241,Mask,Mask,1241,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/64#issuecomment-377736994,1,['Mask'],['Mask']
Availability,"xtendable false; Skip repeating k-mers false. Set cluster sensitivity to -s 6.000000; Set cluster iterations to 3; linclust artificial2/DB_artificial tmp//7897776346521331899/clu_redundancy tmp//7897776346521331899/linclust --cluster-mode 0 --max-iterations 1000 --similarity-type 2 --threads 16 --compressed 0 -v 3 --sub-mat nucl:nucleotide.out,aa:blosum62.out -a 0 --alignment-mode 3 --wrapped-scoring 0 -e 0.001 --min-seq-id 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-len 65535 --comp-bias-corr 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --realign 0 --realign-score-bias -0.2 --realign-max-seqs 2147483647 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --zdrop 40 --alph-size nucl:5,aa:13 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 -k 0 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --rescore-mode 0 --filter-hits 0 --sort-results 0 --remove-tmp-files 0 --force-reuse 0. kmermatcher artificial2/DB_artificial tmp//7897776346521331899/linclust/17269245559208916342/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-id 0 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 0 --include-only-extendable 0 --ignore-multi-kmer 0 --threads 16 --compressed 0 -v 3. kmermatcher artificial2/DB_artificial tmp//7897776346521331899/linclust/17269245559208916342/pref --sub-mat nucl:nucleotide.out,aa:blosum62.out --alph-size nucl:5,aa:13 --min-seq-id 0 --kmer-per-seq 21 --spaced-kmer-mode 1 --kmer-per-seq-scale nucl:0.200,aa:0.000 --adjust-kmer-len 0 --mask 0 --mask-lower-case 0 --cov-mode 0 -k 0 -c 0.8 --max-seq-len 65535 --hash-shift 67 --split-memory-limit 0 --in",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-775778998:2947,mask,mask,2947,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/400#issuecomment-775778998,2,['mask'],"['mask', 'mask-lower-case']"
Availability,y 	3. Start computing profiles.; Query database type: Profile; Target database type: Aminoacid; Time for merging files: 0h 0m 0s 112ms; Time for merging files: 0h 0m 0s 7ms. Done.; Time for processing: 0h 0m 16s 74ms; Program call:; prefilter tmpC/10139724895635470572/profile_1 genes.db tmpC/10139724895635470572/pref_2 --sub-mat blosum62.out -s 5.7 -k 0 --k-score 2147483647 --alph-size 21 --max-seq-len 65535 --max-seqs 1000 --offset-result 0 --split 0 --split-mode 2 --split-memory-limit 0 -c 0 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --no-preload 1 --pca 1 --pcb 1.5 --threads 48 -v 3 . MMseqs Version: 	GITDIR-NOTFOUND; Sub Matrix 	blosum62.out; Sensitivity 	5.7; K-mer size 	0; K-score 	2147483647; Alphabet size 	21; Max. sequence length 	65535; Max. results per query 	1000; Offset result 	0; Split DB 	0; Split mode 	2; Split Memory Limit 	0; Coverage threshold 	0; Coverage Mode 	0; Compositional bias 	1; Diagonal Scoring 	1; Exact k-mer matching 	0; Mask Residues 	1; Minimum Diagonal score 	15; Include identical Seq. Id.	false; Spaced Kmer 	1; No preload 	true; Pseudo count a 	1; Pseudo count b 	1.5; Spaced k-mer pattern 	; Threads 	48; Verbosity 	3. Initialising data structures...; Using 48 threads.; Could not find precomputed index. Compute index.; Substitution matrices...; Use kmer size 7 and split 3 using Target split mode.; Needed memory (213441943732 byte) of total memory (243154317312 byte); Target database: genes.db(Size: 135880714); Query database type: Profile; Target database type: Aminoacid; Time for init: 0h 0m 15s 188ms; Query database: tmpC/10139724895635470572/profile_1(size=1); Process prefiltering step 1 of 3. Index table k-mer threshold: 0; Index table: counting k-mers...; ...................................................................................................	1 Mio. sequences processed; ...............................................,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/160#issuecomment-461782109:89289,Mask,Mask,89289,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/160#issuecomment-461782109,1,['Mask'],['Mask']
Availability,"zcat the gzipped fq file before execute mmseqs easy-search change nothing, the error remains the same. ```; easy-search B5177-2-N919D_T1_interleaved.fq pfama_20230914/pfam-a-full B5177-2-N919D_T1.tsv tmp1 --threads 12 --compressed 1 . MMseqs Version: 13.45111; Substitution matrix nucl:nucleotide.out,aa:blosum62.out; Add backtrace false; Alignment mode 3; Alignment mode 0; Allow wrapped scoring false; E-value threshold 0.001; Seq. id. threshold 0; Min alignment length 0; Seq. id. mode 0; Alternative alignments 0; Coverage threshold 0; Coverage mode 0; Max sequence length 65535; Compositional bias 1; Max reject 2147483647; Max accept 2147483647; Include identical seq. id. false; Preload mode 0; Pseudo count a 1; Pseudo count b 1.5; Score bias 0; Realign hits false; Realign score bias -0.2; Realign max seqs 2147483647; Gap open cost nucl:5,aa:11; Gap extension cost nucl:2,aa:1; Zdrop 40; Threads 12; Compressed 1; Verbosity 3; Seed substitution matrix nucl:nucleotide.out,aa:VTML80.out; Sensitivity 5.7; k-mer length 0; k-score 2147483647; Alphabet size nucl:5,aa:21; Max results per query 300; Split database 0; Split mode 2; Split memory limit 0; Diagonal scoring true; Exact k-mer matching 0; Mask residues 1; Mask lower case residues 0; Minimum diagonal score 15; Spaced k-mers 1; Spaced k-mer pattern ; Local temporary path ; Rescore mode 0; Remove hits by seq. id. and coverage false; Sort results 0; Mask profile 1; Profile E-value threshold 0.001; Global sequence weighting false; Allow deletions false; Filter MSA 1; Maximum seq. id. threshold 0.9; Minimum seq. id. 0; Minimum score per column -20; Minimum coverage 0; Select N most diverse seqs 1000; Min codons in orf 30; Max codons in length 32734; Max orf gaps 2147483647; Contig start mode 2; Contig end mode 2; Orf start mode 1; Forward frames 1,2,3; Reverse frames 1,2,3; Translation table 1; Translate orf 0; Use all table starts false; Offset of numeric ids 0; Create lookup 0; Add orf stop false; Overlap between sequences",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/754#issuecomment-1725129947:79,error,error,79,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/754#issuecomment-1725129947,1,['error'],['error']
Deployability," ${CLUSTER1_PAR}. # create database unicluster 90% (we need to merge redundancy, step_0 and step_1); mmseqs mergeclusters ""${SEQUENCE_DB}"" $OUTDIR/uniclust90_$RELEASE \; ""$TMPPATH/clu_frag"" ""$TMPPATH/clu_redundancy"" $TMPPATH/clu_step0 $TMPPATH/clu_step1. awk '{ print $1 }' ""$TMPPATH/clu_step$STEP.index"" > ""$TMPPATH/order_step$STEP""; mmseqs createsubdb ""$TMPPATH/order_step$STEP"" $INPUT ""$TMPPATH/input_step2"". # now we cluster down to 30% sequence id to produce a 30% and 50% clustering; STEP=2; INPUT=$TMPPATH/input_step2; $RUNNER mmseqs prefilter $INPUT $INPUT ""$TMPPATH/pref_step$STEP"" ${PREFILTER2_PAR}; $RUNNER mmseqs align $INPUT $INPUT ""$TMPPATH/pref_step$STEP"" ""$TMPPATH/aln_step$STEP"" ${ALIGNMENT2_PAR}. # cluster down to 50%; mmseqs filterdb ""$TMPPATH/aln_step$STEP"" ""$TMPPATH/aln_uniclust50"" \; --filter-column 3 --filter-regex '(0\.[5-9][0-9]{2}|1\.000)'; mmseqs cluster $INPUT ""$TMPPATH/aln_uniclust50"" ""$TMPPATH/clu_uniclust50"" ${CLUSTER2_PAR}; mmseqs mergeclusters ""${SEQUENCE_DB}"" $OUTDIR/uniclust50_$RELEASE \; ""$TMPPATH/clu_frag"" ""$TMPPATH/clu_redundancy"" $TMPPATH/clu_step0 $TMPPATH/clu_step1 $TMPPATH/clu_uniclust50. STEP=2; INPUT=$TMPPATH/input_step2; # cluster down to 30%; mmseqs cluster $INPUT ""$TMPPATH/aln_step$STEP"" ""$TMPPATH/clu_uniclust30"" ${CLUSTER2_PAR}; mmseqs mergeclusters ""${SEQUENCE_DB}"" $OUTDIR/uniclust30_$RELEASE \; ""$TMPPATH/clu_frag"" ""$TMPPATH/clu_redundancy"" $TMPPATH/clu_step0 $TMPPATH/clu_step1 $TMPPATH/clu_uniclust30; ```. However, I experience another error in step 2 `cluster`. ; ```; linclust /home/outdir/2023_06/tmp/input_step2 /home/outdir/2023_06/tmp/clu_uniclust30/13156544047496927710/clu_redundancy /home/outdir/2023_06/tmp/clu_uniclust30/13156544047496927710/linclust --cluster-mode 0 --max-iter; ations 1000 --similarity-type 2 --threads 6 --compressed 0 -v 3 --sub-mat 'aa:blosum62.out,nucl:nucle; otide.out' -a 0 --alignment-mode 3 --alignment-output-mode 0 --wrapped-scoring 0 -e 0.001 --min-seq-i; d 0 --min-aln-len 0 --seq-id-mode 0 --a",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/700#issuecomment-1589819536:4890,RELEASE,RELEASE,4890,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/700#issuecomment-1589819536,1,['RELEASE'],['RELEASE']
Deployability," > ""$TMPPATH/order_step$STEP""; mmseqs createsubdb ""$TMPPATH/order_step$STEP"" $INPUT ""$TMPPATH/input_step2"". # now we cluster down to 30% sequence id to produce a 30% and 50% clustering; STEP=2; INPUT=$TMPPATH/input_step2; $RUNNER mmseqs prefilter $INPUT $INPUT ""$TMPPATH/pref_step$STEP"" ${PREFILTER2_PAR}; $RUNNER mmseqs align $INPUT $INPUT ""$TMPPATH/pref_step$STEP"" ""$TMPPATH/aln_step$STEP"" ${ALIGNMENT2_PAR}. # cluster down to 50%; mmseqs filterdb ""$TMPPATH/aln_step$STEP"" ""$TMPPATH/aln_uniclust50"" \; --filter-column 3 --filter-regex '(0\.[5-9][0-9]{2}|1\.000)'; mmseqs cluster $INPUT ""$TMPPATH/aln_uniclust50"" ""$TMPPATH/clu_uniclust50"" ${CLUSTER2_PAR}; mmseqs mergeclusters ""${SEQUENCE_DB}"" $OUTDIR/uniclust50_$RELEASE \; ""$TMPPATH/clu_frag"" ""$TMPPATH/clu_redundancy"" $TMPPATH/clu_step0 $TMPPATH/clu_step1 $TMPPATH/clu_uniclust50. STEP=2; INPUT=$TMPPATH/input_step2; # cluster down to 30%; mmseqs cluster $INPUT ""$TMPPATH/aln_step$STEP"" ""$TMPPATH/clu_uniclust30"" ${CLUSTER2_PAR}; mmseqs mergeclusters ""${SEQUENCE_DB}"" $OUTDIR/uniclust30_$RELEASE \; ""$TMPPATH/clu_frag"" ""$TMPPATH/clu_redundancy"" $TMPPATH/clu_step0 $TMPPATH/clu_step1 $TMPPATH/clu_uniclust30; ```. However, I experience another error in step 2 `cluster`. ; ```; linclust /home/outdir/2023_06/tmp/input_step2 /home/outdir/2023_06/tmp/clu_uniclust30/13156544047496927710/clu_redundancy /home/outdir/2023_06/tmp/clu_uniclust30/13156544047496927710/linclust --cluster-mode 0 --max-iter; ations 1000 --similarity-type 2 --threads 6 --compressed 0 -v 3 --sub-mat 'aa:blosum62.out,nucl:nucle; otide.out' -a 0 --alignment-mode 3 --alignment-output-mode 0 --wrapped-scoring 0 -e 0.001 --min-seq-i; d 0 --min-aln-len 0 --seq-id-mode 0 --alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-len 65535 --comp-bias-c; orr 1 --comp-bias-corr-scale 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 0; --db-load-mode 0 --pca substitution:1.100,context:1.400 --pcb substitution:4.100,context:5.800 --sco; re-bias 0 --realign 0 --realign-sc",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/700#issuecomment-1589819536:5217,RELEASE,RELEASE,5217,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/700#issuecomment-1589819536,1,['RELEASE'],['RELEASE']
Deployability," CXX=""$(brew --prefix)/bin/gcc-6"" cmake -DCMAKE_BUILD_TYPE=RELEASE -DCMAKE_INSTALL_PREFIX=. ..; -- The CXX compiler identification is GNU 6.2.0; -- Checking whether CXX compiler has -isysroot; -- Checking whether CXX compiler has -isysroot - yes; -- Checking whether CXX compiler supports OSX deployment target flag; -- Checking whether CXX compiler supports OSX deployment target flag - yes; -- Check for working CXX compiler: /usr/local/bin/gcc-6; -- Check for working CXX compiler: /usr/local/bin/gcc-6 -- works; -- Detecting CXX compiler ABI info; -- Detecting CXX compiler ABI info - done; -- Detecting CXX compile features; -- Detecting CXX compile features - done; -- Sourcedir /Users/moorer/Downloads/mmseqs2; -- Projectdir /Users/moorer/Downloads/mmseqs2; -- Compiler is GNU; -- Try OpenMP CXX flag = [-fopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Success; -- Found OpenMP: -fopenmp; -- Performing Test HAVE_POSIX_FADVISE; -- Performing Test HAVE_POSIX_FADVISE - Failed; -- Performing Test HAVE_MM_MALLOC; -- Performing Test HAVE_MM_MALLOC - Success; -- Performing Test HAVE_POSIX_MEMALIGN; -- Performing Test HAVE_POSIX_MEMALIGN - Success; -- Performing Test HAVE_AVX2_EXTENSIONS; -- Performing Test HAVE_AVX2_EXTENSIONS - Failed; -- Performing Test HAVE_AVX_EXTENSIONS; -- Performing Test HAVE_AVX_EXTENSIONS - Failed; -- Performing Test HAVE_SSE4_2_EXTENSIONS; -- Performing Test HAVE_SSE4_2_EXTENSIONS - Success; -- Performing Test HAVE_SSE4_1_EXTENSIONS; -- Performing Test HAVE_SSE4_1_EXTENSIONS - Success; -- Performing Test HAVE_SSE3_EXTENSIONS; -- Performing Test HAVE_SSE3_EXTENSIONS - Success; -- Performing Test HAVE_SSE2_EXTENSIONS; -- Performing Test HAVE_SSE2_EXTENSIONS - Success; -- Performing Test HAVE_SSE_EXTENSIONS; -- Performing Test HAVE_SSE_EXTENSIONS - Success; -- Found SSE4.2 extensions, using flags: -msse4.2 -mfpmath=sse; -- Could NOT find GTest (missing: GTEST_LIBRARY GTEST_INCLUDE_DIR GTEST_MAIN_LIBRARY); -- Co",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/7#issuecomment-265028472:432,deploy,deployment,432,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/7#issuecomment-265028472,2,['deploy'],['deployment']
Deployability," is an improvement, the situation is still far from ideal. ## Input data; 95,303,635 non-redundant proteins from UHGP v2.0 ([FTP link](http://ftp.ebi.ac.uk/pub/databases/metagenomics/mgnify_genomes/human-gut/v2.0/protein_catalogue/uhgp-100.tar.gz)). ## Expected behavior; Each protein from my assemblies will align to zero or one representative sequence with identity > 90% and coverage > 90%. Due to heuristics, I would not be surprised if there were a couple of such proteins, but with one standing out in terms of identity %. ## Current behavior. Some of the proteins align to many (more than 100) representative sequences with pident over 90%. ### Default easy-cluster. ```mmseqs easy-cluster uhgp-100/uhgp-100.faa easy-cluster/uhgp90 tmp --cov-mode 1 -c 0.8 --kmer-per-seq 80 --min-seq-id 0.9 ```. A single protein aligns up to 147 representative sequences with average pident of 97%. ### Cluster reassign. ```mmseqs easy-cluster uhgp-100/uhgp-100.faa cluster-reassign/uhgp90 tmp --cov-mode 1 -c 0.8 --kmer-per-seq 80 --min-seq-id 0.9 --cluster-reassign```. A single protein aligns up to 164 representative sequences with average pident of 97%. ### Single-step clustering. ```mmseqs easy-cluster uhgp-100/uhgp-100.faa single-step-clustering/uhgp90 tmp --cov-mode 1 -c 0.8 --kmer-per-seq 80 --min-seq-id 0.9 --single-step-clustering```. A single protein aligns up to 244 representative sequences with average pident of 96%. ## Command to align to representative sequences. ```mmseqs easy-search probe-proteins/probes.faa {cluster_dir}/rep_seq.fasta probes.m8 tmp --min-seq-id 0.9 -c 0.9```. However, the same result was obtained when checking the representative sequences with DIAMOND. Probe proteins are a subset of the assembled proteins from my analysis which mapped to the most original UHGP representative sequences. ## MMseqs2 version used; MMseqs2 Release 14-7e284. ## -. Is there anything else I could do that I am missing to improve these results? Would be grateful for any tips, thanks!",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/612#issuecomment-1322374871:2489,Release,Release,2489,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/612#issuecomment-1322374871,1,['Release'],['Release']
Deployability,"05.1 NZ_CP009512.1_8; RS_GCF_000970205.1 NZ_CP009512.1_9; RS_GCF_000970205.1 NZ_CP009512.1_10; ```. You can then do a JOIN operation between the `gtdb.lookup` table, the `genome_orf_mapping.tsv` table, and the `gtdb.source` table to link the genome IDs in `gtdb.source` to `gtdb.lookup`. Save an output file with the same format as `gdtb.lookup` but with the genome IDs from `gtdb.source`. Use this new file to replace the old `gtdb.lookup`. Here is some rough python/pandas code to do this (note this is slow and uses ~100 GB of RAM):. ```python; import pandas as pd. lookup_data = pd.read_csv('gtdb.lookup', sep='\t', header=None); lookup_data.columns = ['gene-id','gene-name','genome-id']. source_data = pd.read_csv('gtdb.source', sep='\t', header=None); source_data.columns = ['genome-id','genome-name']. genome_orf_mapping = pd.read_csv('genome_orf_mapping.tsv', sep='\t', header=None); genome_orf_mapping.columns = ['genome-name','gene-name']. # Perform the JOIN; lookup_data_corrected = lookup_data.rename(columns={'genome-id':'genome-id-old'})\; .merge(genome_orf_mapping, on='gene-name', how='left', validate='m:1')\; .merge(source_data, on='genome-name', how='left', validate='m:1'). lookup_data_gene_corrected.drop(columns=['genome-id-old','genome-name'])\; .to_csv('gtdb.lookup.corrected', sep='\t', header=None, index=False); # Replace gtdb.lookup with this newly saved file; ```. After making this fix, I could run `mmseqs createtaxdb` and get a taxdb that seemed to work fine with the `mmseqs easy-taxonomy` pipeline, matching my expected results (as mentioned under ""Consequences"" above). Maybe because I corrected `gdtb.lookup` before making the taxdb, I didn't need to edit any other mapping files as mentioned by @mlcoleman . I can't guarantee this workaround is 100% correct because I do not understand all the database files generated by mmseqs. However, the workaround seems to do the trick for my data for the time being. Hope this helps before a longer-term solution is ready.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/729#issuecomment-1691160625:7528,pipeline,pipeline,7528,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/729#issuecomment-1691160625,1,['pipeline'],['pipeline']
Deployability,"10.6d92c is the latest release, however we have been working on the next release. The `databases` module will be included in the next release. If you want to try it out already please refer to the install static or compile from source sections of the user guide:. For Linux:; https://github.com/soedinglab/MMseqs2/wiki#install-static-linux-version; https://github.com/soedinglab/MMseqs2/wiki#compile-from-source-under-linux; For macOS:; https://github.com/soedinglab/MMseqs2/wiki#install-static-macos-version",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/271#issuecomment-584059103:23,release,release,23,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/271#issuecomment-584059103,12,"['install', 'release']","['install', 'install-static-linux-version', 'install-static-macos-version', 'release']"
Deployability,"4-linux-gnu/libasan.so.4+0x37d2f); #1 0x7fc0f70d7f5f (/usr/lib/x86_64-linux-gnu/libgomp.so.1+0x16f5f); #2 0x7fc0f70ceed9 in GOMP_parallel (/usr/lib/x86_64-linux-gnu/libgomp.so.1+0xded9); #3 0x7ffc996a2d2f (<unknown module>). SUMMARY: AddressSanitizer: heap-buffer-overflow /ebio/abt3_projects/software/dev/ll_pipelines/llcds/tmp/mmseqs_taxonomy/MMseqs2/src/alignment/MultipleAlignment.cpp:168 in MultipleAlignment::updateGapsInSequenceSet(char**, unsigned long, std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > > const&, std::vector<Matcher::result_t, std::allocator<Matcher::result_t> > const&, unsigned int*, bool); Shadow bytes around the buggy address:; 0x0c347fffc620: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00; 0x0c347fffc630: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00; 0x0c347fffc640: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00; 0x0c347fffc650: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00; 0x0c347fffc660: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00; =>0x0c347fffc670: 00 00 00 00 00 00 00 00 00 00 00 00[fa]fa fa fa; 0x0c347fffc680: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa; 0x0c347fffc690: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00; 0x0c347fffc6a0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00; 0x0c347fffc6b0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00; 0x0c347fffc6c0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00; Shadow byte legend (one shadow byte represents 8 application bytes):; Addressable: 00; Partially addressable: 01 02 03 04 05 06 07; Heap left redzone: fa; Freed heap region: fd; Stack left redzone: f1; Stack mid redzone: f2; Stack right redzone: f3; Stack after return: f5; Stack use after scope: f8; Global redzone: f9; Global init order: f6; Poisoned by user: f7; Container overflow: fc; Array cookie: ac; Intra object redzone: bb; ASan internal: fe; Left alloca redzone: ca; Right alloca redzone: cb; ==71239==ABORTING; ```",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/432#issuecomment-814682245:5846,update,updateGapsInSequenceSet,5846,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/432#issuecomment-814682245,1,['update'],['updateGapsInSequenceSet']
Deployability,":183 - Removing output directory Output/ROSA-like as -f or --force was specified.; 2024-04-23 09:26:28.676 | INFO | __main__:main:95 - Starting Pharokka v1.7.1; 2024-04-23 09:26:28.676 | INFO | __main__:main:96 - Command executed: Namespace(infile='Input/ROSA-like/rosa-like.fasta', outdir='Output/ROSA-like', database='Databases', threads='1', force=True, prefix='Default', locustag='ROSA-like', gene_predictor='default', meta=False, split=False, coding_table='11', evalue='1E-05', fast=False, mmseqs2_only=False, meta_hmm=False, dnaapler=False, custom_hmm='', genbank=False, terminase=True, terminase_strand='pos', terminase_start='1', skip_extra_annotations=False, skip_mash=False, minced_args='', mash_distance=0.2, citation=False); 2024-04-23 09:26:28.676 | INFO | __main__:main:97 - Repository homepage is https://github.com/gbouras13/pharokka; 2024-04-23 09:26:28.676 | INFO | __main__:main:98 - Written by George Bouras: ***@***.***; 2024-04-23 09:26:28.676 | INFO | __main__:main:100 - Checking database installation in Databases.; 2024-04-23 09:26:28.677 | INFO | __main__:main:103 - All databases have been successfully checked.; 2024-04-23 09:26:28.677 | INFO | __main__:main:119 - Checking dependencies.; 2024-04-23 09:26:28.777 | INFO | input_commands:check_dependencies:379 - Phanotate version found is v1.6.5; 2024-04-23 09:26:28.778 | INFO | input_commands:check_dependencies:388 - Phanotate version is ok.; Traceback (most recent call last):; File ""/Users/Nico/miniforge3/envs/HieVi/bin/pharokka.py"", line 7, in <module>; exec(compile(f.read(), __file__, 'exec')); File ""/Users/nico/Documents/myCore/Bioinformatics/pharokka/bin/pharokka.py"", line 489, in <module>; main(); File ""/Users/nico/Documents/myCore/Bioinformatics/pharokka/bin/pharokka.py"", line 128, in main; ) = check_dependencies(args.skip_mash); ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^; File ""/Users/nico/Documents/myCore/Bioinformatics/pharokka/bin/input_commands.py"", line 407, in check_dependencies; mmseqs_major_version =",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/834#issuecomment-2071616310:1419,install,installation,1419,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/834#issuecomment-2071616310,1,['install'],['installation']
Deployability,"> Both me and Martin develop on Macs and we didn't really have any issues.; > What macOS version are you running? I am not sure where to begin to reproduce the issue. The update happened yesterday (both system and Xcode), and I had the brilliant idea of also installing: /Library/Developer/CommandLineTools/Packages/macOS_SDK_headers_for_macOS_10.14.pkg. To ensure having the /usr/lib and /usr/include directories (from the command-line Xcode tools).; That changed ""ucred.h"" for a version containing that dreaded ""_Atomic"" thing, not found in the previous ""ucred.h"".",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/182#issuecomment-477695697:171,update,update,171,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/182#issuecomment-477695697,2,"['install', 'update']","['installing', 'update']"
Deployability,"> From column 7 and column 9 are all zero. It seems that the residue number is 0-indexed. I'll take a closer look at format-mode 0. It should be 1-indexed, but the format convertion might also be buggy. > For example, for the first hit, if the match start and end is 0 and 37 for query, you cannot have alignment length 796 residues. Please make sure you execute the ""mmseqs search"" with --add-backtrace (-a in the new version), that should only be possible if there are no backtrace information included in the search. If nothing else is specified MMseqs2 just computes the alignment score and the end position of the alignment. > This will output a pseudo fasta format file containing seqID, queryCov, targetCov, and evalue. The current createfasta (new version result2flat --use-fasta-header) tool should provide this functionality. Sorry for the delays, we were busy prepearing the first release (including source code, updated documentation and paper preprint). MMseqs2 is now open source. Please use the new binary. It is still compatible with old databases. We renamed some tools make the naming more consistent.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/2#issuecomment-247754766:892,release,release,892,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/2#issuecomment-247754766,2,"['release', 'update']","['release', 'updated']"
Deployability,"> Hi Florian,; > ; > Thanks a lot for your pull request. I added some comments. One thing that I am unsure about is the removal of delnodes however. I added that explicitly since an old Uniclust release can have taxids that are already removed in the latest NCBI taxonomy. Then we either get an error or we ignore the protein in Uniprot/Uniclust. Hi Milot, thansk for looking through it! Re deleted nodes: Does it matter whether a taxon that is encountered in a result, but is not in the taxonomy database, is from a deleted taxon or a new taxon (which is not in the taxonomy database)? In both cases the taxon can be ignored (or an error can be thrown). I do agree it can be useful to know whether it's the one case or the other.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/pull/197#issuecomment-487404454:195,release,release,195,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/pull/197#issuecomment-487404454,1,['release'],['release']
Deployability,"> Hi, I got the same problem. When I run the commands in [Create a seqTaxDB for GTDB] I got this error: **mmseqs createdb ssu.fna ssu130.102.99.4 Connecting to data.ace.uq.edu.au (data.ace.uq.edu.au)|130.102.99.4|:443... connected. HTTP request sent, awaiting response... 404 Not Found 2022-04-01 08:59:20 ERROR 404: Not Found.** ... ... **awk -F'\[loc' '{ print $1}' ssu.fna | awk ""$buildNCBITax"" awk: fatal: cannot open file `ssu.fna' for reading (No such file or directory)**; > ; > Any help on this will be appreciated. Hi，; How did you resolve this issue at the time, until today I have also encountered this problem and this site is not working; https://data.ace.uq.edu.au/public/gtdb/data/releases/latest/ssu.fna; Can you give me some advice? Thanks a lot.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/548#issuecomment-1663347073:696,release,releases,696,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/548#issuecomment-1663347073,1,['release'],['releases']
Deployability,"> MMseqs2 has a limitation to databases of at most ~4 billion sequences (`UINT_MAX`). You have to cluster in multiple splits. @martin-steinegger should be able to help with an example. Hi, sorry for bothering but any update on this?. For now I am splitting the protein into multiple fasta, each containing at most 2billion sequences. I will then use the clusthash and linclust on each split. Finally, some tools like mergedb will be used and do a further clusterhash/linclust. I am wondering whether this is the correct way to do since I cannot find related information in the documentation.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/495#issuecomment-939536444:217,update,update,217,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/495#issuecomment-939536444,1,['update'],['update']
Deployability,"> This looks like it installed a really old version of MMseqs2. Did you install the software through conda into a new environment?. Yes, i used conda to install. I also tried reinstalling and ran the codes. the error repeats.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/823#issuecomment-2002309687:21,install,installed,21,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/823#issuecomment-2002309687,3,['install'],"['install', 'installed']"
Deployability,"> You can use https://gist.github.com to post the log.; > ; > Alternatively, the call to MMseqs2 alone would already help with diagnosing the issue.; ============================================================; Thank you very much for your reply.; I just solved the bug very fortunatelly; The method is to install mpich ; ============================; Download hydra-3.3.1(https://www.mpich.org/downloads/); ./configure --prefix=$DIR/mpich; make; make install; add the mpirun in the end of your .bashrc; =============================; Best wishes",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/213#issuecomment-506283448:307,install,install,307,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/213#issuecomment-506283448,2,['install'],['install']
Deployability,"> `--report-mode` will be in release 11, exists currently only in git. Noted!. > I am however not sure I want to binder version in the main repository. Is it possible to add and run it from the GitHub wiki repo (https://github.com/soedinglab/MMseqs2.wiki)?. I think it is possible (because it's a git repo), but I never tried that with binder. Will report back.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/pull/250#issuecomment-561373205:29,release,release,29,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/pull/250#issuecomment-561373205,1,['release'],['release']
Deployability,"> export MMSEQS_FORCE_MERGE=1. It show me the same problem; MMseqs2 installed through conda，and the version is 13.45111; And i have tried run the command:'mmseqs result2msa example_out/mmseqs_files/in.mmdb db/swissprot example_out/mmseqs_files/out.mm_search example_out/mmseqs_files/out.mm_msa':; MMseqs Version: 13.45111; Substitution matrix nucl:nucleotide.out,aa:blosum62.out; Gap open cost nucl:5,aa:11; Gap extension cost nucl:2,aa:1; Allow deletions false; Compositional bias 1; MSA format mode 0; Summary prefix cl; Skip query false; Filter MSA 0; Maximum seq. id. threshold 0.9; Minimum seq. id. 0; Minimum score per column -20; Minimum coverage 0; Select N most diverse seqs 1000; Threads 256; Compressed 0; Verbosity 3. [=================================================================] 100.00% 500 0s 0ms ; [=================================================================] 100.00% 567.48K 0s 244ms ; Time for merging to out.mm_msa_sequence.ffdata: 0h 0m 0s 107ms; [=================================================================] 100.00% 500 0s 2ms ; [=================================================================] 100.00% 567.48K 0s 133ms ; Time for merging to out.mm_msa_header.ffdata: 0h 0m 0s 64ms; Query database size: 500 type: Aminoacid; Target database size: 567483 type: Aminoacid; [=================================================================] 100.00% 500 0s 490ms ; Time for merging to out.mm_msa_ca3m.ffdata: 0h 0m 0s 17ms; Time for processing: 0h 0m 1s 666ms",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/581#issuecomment-1197655603:68,install,installed,68,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/581#issuecomment-1197655603,1,['install'],['installed']
Deployability,"> this is something that is annoyingly non-obvious since forever. We should definitely improve this. Hello,; Is this somehow fixed in a recent release?; Thanks",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/662#issuecomment-1988657202:143,release,release,143,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/662#issuecomment-1988657202,1,['release'],['release']
Deployability,@AlvaroRodriguezDelRio I just noticed that you use a super old version of MMSeqs2. I would recommend you to update it. We fixed many bug in the mean time. . The cluster mode 0 (set cover) requires a bi-directional coverage criteria. If it is used with unidirectional coverage than it pick representative sequences that do not fulfill the clustering criteria anymore.,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/218#issuecomment-580978693:108,update,update,108,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/218#issuecomment-580978693,1,['update'],['update']
Deployability,"@Benjamin-Lee yes, I agree this would be great but there is currently no way in MMseqs2 to add header lines. ; We already discussed this and we might add the feature in future releases.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/434#issuecomment-814574630:176,release,releases,176,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/434#issuecomment-814574630,1,['release'],['releases']
Deployability,@Guillaume-Marseille is there any update on this issues?,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/257#issuecomment-571352026:34,update,update,34,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/257#issuecomment-571352026,1,['update'],['update']
Deployability,"@apcamargo Thanks for opening this PR. In order for this code to work, I think one more change is also needed, in line 139 (`VERSION` has now become `VERSION.txt`):. Current code:; ```; downloadFile ""https://data.ace.uq.edu.au/public/gtdb/data/releases/latest/VERSION"" ""${TMP_PATH}/version""; ```. Revised:; ```; downloadFile ""https://data.ace.uq.edu.au/public/gtdb/data/releases/latest/VERSION.txt"" ""${TMP_PATH}/version""; ```. Mind making this change as well? Thanks!",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/pull/742#issuecomment-1692621476:244,release,releases,244,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/pull/742#issuecomment-1692621476,2,['release'],['releases']
Deployability,@fbreitwieser does mmseqs2 works with Pavian now? :) could you please update the format description at the wiki https://github.com/soedinglab/MMseqs2/wiki#taxonomy-assignment-using-mmseqs-taxonomy,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/pull/203#issuecomment-492070879:70,update,update,70,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/pull/203#issuecomment-492070879,1,['update'],['update']
Deployability,@fstrozzi the new release is out. Please check it out!,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/120#issuecomment-428343198:18,release,release,18,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/120#issuecomment-428343198,1,['release'],['release']
Deployability,@genomewalker yes I belive that you can get a similar result using the coverage parameters. . @adimil @genomewalker I am intending to build a all-against-all search as module in MMseqs2 soon. I will update you if it is ready.,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/60#issuecomment-376403999:199,update,update,199,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/60#issuecomment-376403999,1,['update'],['update']
Deployability,@ksahlin I try to cluster also a huge set of sequences > 100 mio. proteins but it does not have any problems. Do you use nucleotide sequences? Is it possible to get access to them? . Update: I have now also clustered 115 mio. nucleotide sequences and it did not crash. . Could you also try to delete the `linclust_tmpdir` and rerun it?,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/111#issuecomment-418178571:183,Update,Update,183,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/111#issuecomment-418178571,1,['Update'],['Update']
Deployability,"@martin-steinegger @milot-mirdita ; I have questions regarding the integration of this PR with the master branch. 1\) Our new algorithm uses[ 6 additional bytes](https://github.com/soedinglab/MMseqs2/pull/873/files#diff-01a2b94815f4cfc3201aa5f9a0108d6c01627ea12246d61963965559afb9a220) to store the adjacent information per each sequence, so the memory needed per sequence increases from 16 to 22 bytes. So if we were to pack our new linclust together with the old one, and use a parameter to choose between the two at runtime, quite a lot of memory would be wasted for users of old-linclust. Should I consider a prettier way of integrating the two, like dividing the structs and functions used for each version under the hood?; Or can we just assume that our users would be happier with the new version regardless of the increased memory usage?. 2\) If we were to replace linclust with our new version, should we provide the option to use the original version, or should we just totally replace it, or stage it for deprecation? I'm not sure how much this change would affect our users, or how many would want to use the old version instead of the new.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/pull/873#issuecomment-2311834168:67,integrat,integration,67,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/pull/873#issuecomment-2311834168,2,['integrat'],"['integrating', 'integration']"
Deployability,"@martin-steinegger I have tested by passing the same `-s` when creating the indexes, following are the results: . >Using same `-s` as `search` in `createindex` . | Alignment | count | seconds |; | ----------- | ----------- | ----------- |; | a*-a* | 10107 | 23.81 |; | b*-b* | 23206 | 42.43 |; | a*-b* | 8155 | 26.46 |; | b*-a* | 8390 | 37.12 |. They are just slightly different. > If you index a database with MMseqs2 then all k-mers are stored if no sensitivity -s is provided to createindex ; ; Actually I thought that could have been the problem. . In the early versions of MMseqs I had noticed the difference when running without the indexed DBs, but it was not that much, and the only side-effect was a slight increase in the overall execution time (maybe 10~20% slower).; Nevertheless, now it runs faster and matches less, which is caused from what you explained about I guess. . > Do you have a small example that I could use the reproduce this issue? . Yes, get the 2 small proteomes I used from the following link ; https://send.firefox.com/download/8d4ac7f72e90671b/#ioryCshD4vIZCAPxd30CCw. I will do another couple of tests to see if I can increase the accuracy when no indexing is performed. . `UPDATE`; @martin-steinegger I think just found the problem... ; When running `search` without selecting the matrix for pre-filtering the number of hits, as well as the running times, go back to what expect. The differences are caused in this case by the use of the default VTML in the prefiltering step. As you can see from the following table, the results are much more reasonable. >Without `--seed-sub-mat nucl:nucleotide.out,aa:blosum62.ou` in `search` . | Alignment | count | seconds |; | ----------- | ----------- | ----------- |; | a-a | 10209 | 29.87 |; | b-b | 23523 | 52.05 |; | a-b | 8281 | 32.13 |; | b-a | 8533 | 45.62 |; ; I confirm this is only happening when using blosum62 in the `prefilter` step",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/318#issuecomment-644526537:1208,UPDATE,UPDATE,1208,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/318#issuecomment-644526537,1,['UPDATE'],['UPDATE']
Deployability,"@martin-steinegger I haven't encountered the problems anytime recently, but I also haven't used mmseqs2 much recently. I am planning using it more soon, so I can let you know. Is mmseqs2 updated on bioconda?",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/188#issuecomment-513135871:187,update,updated,187,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/188#issuecomment-513135871,1,['update'],['updated']
Deployability,"@martin-steinegger a related question. Using the latest release 5-9375b (the precompiled AVX2 binaries to be precise), and the new ```easy-linclust``` command I have seen that the *_req_seq.fasta file that is created is also not a proper Fasta file. Instead of having the aminoacid sequences of the representatives, I have the sequences IDs, like this . ```; >sequence_1; sequence_1; >sequence_2; sequence_2; ```. Is it a bug ? . Thanks!. Edit: I've found this happening with both release 5 and 4, I've opened an issue https://github.com/soedinglab/MMseqs2/issues/120",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/114#issuecomment-423197655:56,release,release,56,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/114#issuecomment-423197655,2,['release'],['release']
Deployability,"@milot-mirdita ; Some template black magic seems pretty convenient (albeit a little dangerous). I'll try looking into it and check if it breaks anything. > But martin is also right, a 30% increase in RAM is not that much. Then if integrating the new linclust into our old version with dynamic memory allocation gets too ugly, I'll consider giving up on the 6 bytes of memory, or even removing the old version entirely. Thank you!",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/pull/873#issuecomment-2313991678:230,integrat,integrating,230,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/pull/873#issuecomment-2313991678,1,['integrat'],['integrating']
Deployability,"@milot-mirdita Below is the log file from one of the runs. Looks like it's running out of memory, before the job dies. ; <img width=""1438"" alt=""image"" src=""https://user-images.githubusercontent.com/9979661/191375197-838700eb-51d2-4d9c-9be1-efa1c4b9e9a9.png"">. [chunk00_clustering_stdout.log](https://github.com/soedinglab/MMseqs2/files/9611572/chunk00_clustering_stdout.log). And here is the job efficiency report from SLURM; ```; Job ID: 359779; Cluster: aion; User/Group: sbusi/clusterusers; State: OUT_OF_MEMORY (exit code 0); Nodes: 1; Cores per node: 128; CPU Utilized: 10:13:07; CPU Efficiency: 1.00% of 42-16:44:48 core-walltime; Job Wall-clock time: 08:00:21; Memory Utilized: 206.26 GB; Memory Efficiency: 92.08% of 224.00 GB; ```. Do you think merely providing more cores will do the trick or is there something else that I'm missing?. Thank you!. *UPDATE*: Tried the run with more cores, but across 6 nodes - didn't really expect it to work given your last comment, but was worth the shot; ```; Job ID: 360184; Cluster: aion; User/Group: sbusi/clusterusers; State: OUT_OF_MEMORY (exit code 0); Nodes: 6; Cores per node: 128; CPU Utilized: 09:26:34; CPU Efficiency: 0.23% of 172-18:08:00 core-walltime; Job Wall-clock time: 05:23:55; Memory Utilized: 1.21 TB (estimated maximum); Memory Efficiency: 92.41% of 1.31 TB (1.75 GB/core); ```",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/608#issuecomment-1252977214:859,UPDATE,UPDATE,859,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/608#issuecomment-1252977214,1,['UPDATE'],['UPDATE']
Deployability,@milot-mirdita I'm running into this same issue. Any update on progress?,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/272#issuecomment-625418051:53,update,update,53,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/272#issuecomment-625418051,1,['update'],['update']
Deployability,"@milot-mirdita Thanks for the quick response and for the data type fix! I tested the latest master branch, and the `gtdb.lookup` file seems to be correct now after running `mmseqs databases gtdb results tmp`. Taxonomy results look as expected when running `mmseqs easy-taxonomy` using this updated GTDB database. (I did not test the awk code you included, but thanks for writing this.). I think it's OK to close this issue now. Thanks again.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/729#issuecomment-1695134383:290,update,updated,290,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/729#issuecomment-1695134383,1,['update'],['updated']
Deployability,"@milot-mirdita We have not uploaded MMSeqs2 version 13 to Debian yet. The deadline for updates for the forthcoming stable release of Debian is but a few days away. Should we; 1. Upload MMSeqs2 version 13, but drop 32-bit architectures; or; 2. Upload MMSeqs2 version 13 + some patches cherry picked; or; 3. Keep MMSeqs2 version 12 for Debian ""Bullseye"". Thanks!",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/418#issuecomment-792862255:87,update,updates,87,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/418#issuecomment-792862255,3,"['patch', 'release', 'update']","['patches', 'release', 'updates']"
Deployability,@milot-mirdita could you write an update?,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/59#issuecomment-362435441:34,update,update,34,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/59#issuecomment-362435441,1,['update'],['update']
Deployability,"@milot-mirdita does the formula on Brew (linuxbrew) are updated? ; I'm trying again with my current version, but in a few minutes, I'll try to update.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/189#issuecomment-483313984:56,update,updated,56,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/189#issuecomment-483313984,2,['update'],"['update', 'updated']"
Deployability,"@milot-mirdita is there any update on this issue?. I'm on an Intel Mac (multithreading disabled) with MMseqs2 release 15.6f452 and still seeing very strange behavior from this pipeline. Using two protein FASTA files (~225 normal-length proteins each), where there are many homologs spanning the full range of percent identities and the following command:. ```; mmseqs easy-linsearch aa_1.fasta aa_2.fasta easy-linsearch-out.tsv mmseqs_tmp; ```. I get an empty output file, despite a really nice set of outputs from the `easy-search` pipeline in just a few seconds. Even stranger, when I try to make `easy-linsearch` only find high-identity HSPs, with the following:. ```; mmseqs easy-linsearch aa_1.fasta aa_2.fasta easy-linsearch-out.tsv mmseqs_tmp --min-seq-id 0.8 -c 0.8; ```. The memory utilization as profiled in the Apple `Activity Monitor` very quickly exceeds 250 GB (system only has 64 GB, so I think this means we are in disk swap territory), and I'm not sure how long it would take to finish - I killed the job after about a half hour of waiting. Input files are attached, in case you have any interest in attempting to reproduce the issue. [aa_1.fasta.gz](https://github.com/user-attachments/files/16267985/aa_1.fasta.gz); [aa_2.fasta.gz](https://github.com/user-attachments/files/16267986/aa_2.fasta.gz)",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/273#issuecomment-2233599834:28,update,update,28,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/273#issuecomment-2233599834,4,"['pipeline', 'release', 'update']","['pipeline', 'release', 'update']"
Deployability,"@milot-mirdita out of curiosity, any plans for a release in the next while?",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/586#issuecomment-1209671759:49,release,release,49,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/586#issuecomment-1209671759,1,['release'],['release']
Deployability,"@milot-mirdita thanks for your reply; https://github.com/sokrypton/ColabFold/blob/main/colabfold_search.sh; in the ""colabfold_search.sh"" file , there are reminds at first ""Do not use this script. Use the python colabfold_search instead"".; **why not advice us to this ""colabfold_search.sh"" scripts? what is ""python colabfold_search""?**; Maybe the current ""colabfold_search.sh"" is need to update, at least it does not work with the script in readme.; `colabfold_search input_sequences.fasta /path/to/db_folder msas`. For single sequences, **the sufficient RAM** means: 768GB-1024GB RAM to stay resident in RAM and have enough RAM spare for worker processes, yes?",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/690#issuecomment-1495415310:387,update,update,387,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/690#issuecomment-1495415310,1,['update'],['update']
Deployability,"@milot-mirdita yes, i installed the latest version (from https://mmseqs.com/latest/mmseqs-linux-avx2.tar.gz ) and see the same error.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/763#issuecomment-1759783355:22,install,installed,22,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/763#issuecomment-1759783355,1,['install'],['installed']
Deployability,"@mr-c yes, we will soon release a new version! Thank you so much for this great work.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/pull/321#issuecomment-649476038:24,release,release,24,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/pull/321#issuecomment-649476038,1,['release'],['release']
Deployability,"@nick-youngblut I am sorry about the multi output. The main reason for them is to avoid IO. Slow IO system can take hours/days to merge tera bytes of data and MMseqs2 modular architecture require multiple IO steps unlike other aligners. The IO step is especially critical if the search was performed using many threads since the merging runs single threaded. ; However, every module should create a `.dbtype` file at the end, which can be used to check if the module finished successfully. . The `clusterupdate` is one of the modules that needs ground up rebuild. Too much of its logic is done in Bash steps that do not verify the consistency correctly. . I am a bit confused why your `clusterupdate` uses `extractorfs`. What is your exact setup? Do you try to update protein clusters using genomes?",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/333#issuecomment-664790179:761,update,update,761,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/333#issuecomment-664790179,1,['update'],['update']
Deployability,@nick-youngblut could you please try to run your example on the newest release?,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/208#issuecomment-524199674:71,release,release,71,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/208#issuecomment-524199674,1,['release'],['release']
Deployability,"@ppflrs I have rebuilt the metaclust database by adding new identifier and reclustering everything. Every protein source should be now labeled with uniq identifier which can be used to traced the protein to the JGI, OM-RGC, Uniprot or NCBI. ; The new release is available here https://metaclust.mmseqs.com/2018_06/ ; ; The identifier looks like this now. >RifCSPlowO2_12_1023861.scaffolds.fasta_scaffold367679_1 # 24 # 428 # -1 # ID=367679_1;partial=00;start_type=ATG;rbs_motif=None;rbs_spacer=None;gc_cont=0.435. `RifCSPlowO2_12` identifies the JGI project. The project can be accessed the following way (you need an JGI account): . https://genome.jgi.doe.gov/portal/pages/dynamicOrganismDownload.jsf?organism=RifCSPlowO2_12. Within the project the contig is contained in the file `1023861.scaffolds.fasta` at fasta record `scaffold367679_1`. . The rest of the header contains the prodigal prediction information. . I have also added a file metaclust_50_cluster.fasta.gz which contains all cluster member in a fasta like fromat https://github.com/soedinglab/MMseqs2/wiki#cluster-fasta-like-format.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/87#issuecomment-399853855:251,release,release,251,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/87#issuecomment-399853855,1,['release'],['release']
Deployability,"A quick comment, in case it should help other users in a similar situation: it took me a while to understand why the performance of mmseqs2 search speed was at least an order of magnitude slower on our compute cluster than it was on a single server. It turns out the UniRef90 target DB index file with sufficient split (16) to accommodate the modest node RAM (32GB) was over 200GB in size and therefore too large to fit on the limited node local disks, so it stayed on the network shared disk bay (nonetheless with reasonable Infiniband 40Gb/s connection to the nodes). With such a configuration the mmseqs2 search jobs on the nodes were endlessly I/O bound, using a ~20% fraction of a core instead of the 16 cores available. As soon as I deleted the target DB index files (_sk7_), the mmseqs2 search jobs distributed on the cluster nodes performed again really well!; So in a nutshell, I would recommend not using pre-indexed DB files on a compute cluster when these large files can't reside on a local disk, and instead use on the fly indexing which of course induces a significant overhead, but orders of magnitude less significant than the actual index file access on shared network storage. And of course this on the fly indexing overhead becomes less important as the query DB gets larger :) With large query DBs, I'm very impressed by the speed of (non MPI) distributed mmeseqs on our modest cluster (whilst providing excellent sensitivity of course)!",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/3#issuecomment-252239392:582,configurat,configuration,582,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/3#issuecomment-252239392,1,['configurat'],['configuration']
Deployability,"A short update: I started working on this, however found some potential weirdness in result2msa that I want to look first before pushing the changes. Should be done in the next few days.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/316#issuecomment-642054816:8,update,update,8,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/316#issuecomment-642054816,1,['update'],['update']
Deployability,After testing few strategies I zipped all the commands along with logs for you to have a look after which commands and in which moments the errors occurred. I also attach those with comments to show how the clustering went and with what time efficiency. I understand that I should patch the source and run the software again in the suspected steps to printout the problems?. [logs.zip](https://github.com/soedinglab/MMseqs2/files/1815637/logs.zip),MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/72#issuecomment-373386179:281,patch,patch,281,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/72#issuecomment-373386179,1,['patch'],['patch']
Deployability,"Agree with @meren . Releases and tags are important mostly for reproducibility, and also for developers to announce milestones to users. Additionally when using [semantic versioning](http://semver.org/) tags have very specific meanings that can help users a lot.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/46#issuecomment-339996541:20,Release,Releases,20,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/46#issuecomment-339996541,1,['Release'],['Releases']
Deployability,"Ah sorry, the instructions missed a step and wouldnt work with a release build anyway. Could you paste a few of the query headers here (or send an email)? I can try to figure out what's going wrong with them.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/471#issuecomment-878454729:65,release,release,65,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/471#issuecomment-878454729,1,['release'],['release']
Deployability,"Ah that looks like a bug, it should print out the default value. The new values are:; ```; pca = MultiParam<PseudoCounts>(PseudoCounts(1.1, 1.4));; pcb = MultiParam<PseudoCounts>(PseudoCounts(4.1, 5.8));; ```; The first value is `--pseudo-cnt-mode 0` the second one is `--pseudo-cnt-mode 1`. Profile databases with the newer commits won't work anymore with 13 and before. Yes, we are planing to make a new release, but there is a lot going on :/ Hopefully soon.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/547#issuecomment-1059455251:406,release,release,406,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/547#issuecomment-1059455251,1,['release'],['release']
Deployability,"Ah yes, the bioconda version has some known issues. We added quite a lot of testing this recent days and fixed many issues. Could you please try the most recent version? We will make a new release soon.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/188#issuecomment-488123531:189,release,release,189,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/188#issuecomment-488123531,1,['release'],['release']
Deployability,"Ah, ok that actually does make sense. It's not using the OS tar because I was running it through a singularity container. So I'm guessing whatever tar was built into the container had the issue. I tried the standard command again but with a conda install of mmseqs2 and it worked fine. Thanks!",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/494#issuecomment-939298426:247,install,install,247,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/494#issuecomment-939298426,1,['install'],['install']
Deployability,"Amazing! I would install by compiling source, but my cluster only has g++ v9.8.5. . Are the static linux versions updated? I just tried reinstalling with ; ```; wget https://mmseqs.com/latest/mmseqs-linux-avx2.tar.gz ; tar xvzf mmseqs-linux-avx2.tar.gz; export PATH=$(pwd)/mmseqs/bin/:$PATH; ``` ; but the changes aren't reflected there yet.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/401#issuecomment-771981251:17,install,install,17,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/401#issuecomment-771981251,2,"['install', 'update']","['install', 'updated']"
Deployability,"Another issue I notice is that not all representative sequences in 30% are found in 50% or 70%, i.e. the clustering is not ""hierarchical"". I added the following lines to extract the representative sequences from the clustered. ; ```; mmseqs createsubdb $OUTDIR/uniclust50_${RELEASE} $SEQUENCE_DB $OUTDIR/uniclust50_${RELEASE}_rep; mmseqs convert2fasta $OUTDIR/uniclust50_${RELEASE}_rep uniclust50_rep.fasta; ```",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/700#issuecomment-1592093360:274,RELEASE,RELEASE,274,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/700#issuecomment-1592093360,3,['RELEASE'],['RELEASE']
Deployability,"Any updates on this? I've also run into the same issue creating a profile database from a MSA, and using the profile database to search my target database.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/149#issuecomment-766283679:4,update,updates,4,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/149#issuecomment-766283679,1,['update'],['updates']
Deployability,"Any updates on this? I've tried a couple of things, but I still got the ""Invalid database read for database data file"" error. Do I have to somehow subset the *_h and *.index files in addition to the database file?",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/168#issuecomment-471331643:4,update,updates,4,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/168#issuecomment-471331643,1,['update'],['updates']
Deployability,Any updates on what caused the issue? I'm running into the same error with protein fastas I downloaded from ncbi's ftp for bacterial proteins: https://ftp.ncbi.nlm.nih.gov/refseq/release/bacteria/*.faa.gz,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/763#issuecomment-2079914524:4,update,updates,4,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/763#issuecomment-2079914524,2,"['release', 'update']","['release', 'updates']"
Deployability,Are your profiles in the MMseqs2 clusters format? If yes than you can update the cluster database by following the next steps. (0) search the profiles against the set of new proteins.; (1) use `swapresults` to get mapping of protein to profile.; (2) use `filterdb ... --extract-lines 1` to extract the top hit for each protein. ; (3) trim only the first column since the cluster format just has only the sequence identifier. This can be done with `fliterdb ... --trim-to-one-column`.; (4) swap again to get a profile (cluster) to protein mapping `swapresults`.; (5) use `mergedbs` to combine your old database with your new database. This is really hardcore mmseqs internal knowledge. We will offer a MMseqs2 tutorial at the ECCB18 if you want to learn more about its internals.,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/108#issuecomment-408477910:70,update,update,70,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/108#issuecomment-408477910,2,['update'],['update']
Deployability,"Awesome! I pulled down the new commit, removed the old build directory and followed the installation instructions in the readme but run into an error ( cmake 3.7.1 and g++ v4.9). Should I remove the whole github repo for a clean installation or is this compilation error something that was introduced in the commit?; See log below. ```; [ksahlin@desmond build]$ cmake -DCMAKE_BUILD_TYPE=RELEASE -DCMAKE_INSTALL_PREFIX=. ..; -- The CXX compiler identification is GNU 4.9.2; -- Check for working CXX compiler: /usr/bin/c++; -- Check for working CXX compiler: /usr/bin/c++ -- works; -- Detecting CXX compiler ABI info; -- Detecting CXX compiler ABI info - done; -- Detecting CXX compile features; -- Detecting CXX compile features - done; -- Source Directory: /galaxy/home/ksahlin/prefix/source/MMseqs2; -- Project Directory: /galaxy/home/ksahlin/prefix/source/MMseqs2; -- Compiler is GNU ; -- ShellCheck disabled; -- Performing Test HAVE_POSIX_FADVISE; -- Performing Test HAVE_POSIX_FADVISE - Success; -- Using CPU native flags for SSE optimization: -march=native; -- Performing Test HAVE_MM_MALLOC; -- Performing Test HAVE_MM_MALLOC - Success; -- Performing Test HAVE_POSIX_MEMALIGN; -- Performing Test HAVE_POSIX_MEMALIGN - Success; -- Performing Test HAVE_AVX2_EXTENSIONS; -- Performing Test HAVE_AVX2_EXTENSIONS - Failed; -- Performing Test HAVE_AVX_EXTENSIONS; -- Performing Test HAVE_AVX_EXTENSIONS - Failed; -- Performing Test HAVE_SSE4_2_EXTENSIONS; -- Performing Test HAVE_SSE4_2_EXTENSIONS - Failed; -- Performing Test HAVE_SSE4_1_EXTENSIONS; -- Performing Test HAVE_SSE4_1_EXTENSIONS - Success; -- Performing Test HAVE_SSE3_EXTENSIONS; -- Performing Test HAVE_SSE3_EXTENSIONS - Success; -- Performing Test HAVE_SSE2_EXTENSIONS; -- Performing Test HAVE_SSE2_EXTENSIONS - Success; -- Performing Test HAVE_SSE_EXTENSIONS; -- Performing Test HAVE_SSE_EXTENSIONS - Success; -- Found SSE4.1 extensions, using flags: -march=native -msse4.1 -mfpmath=sse; -- Found ZLIB; -- Performing Test HAVE_ZLIB_C",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/111#issuecomment-418140145:88,install,installation,88,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/111#issuecomment-418140145,3,"['RELEASE', 'install']","['RELEASE', 'installation']"
Deployability,Awesome! Thank you for such the quick turn around. What is the best way to update my installation?,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/674#issuecomment-1457664224:75,update,update,75,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/674#issuecomment-1457664224,2,"['install', 'update']","['installation', 'update']"
Deployability,"Based on your suggestions, I have made a few little changes to the original script. In particular, I turned off `OMP_PROC_BIND` and changed the `--max-seq-len` and `--target-cov 0.95` flags. I didn't yet replace line 112-114 with cluster reassignment.; ```; #!/bin/bash -ex; [ ""$#"" -lt 2 ] && echo ""Please provide <sequenceDB> <outDir>"" && exit 1;; [ ! -f ""$1"" ] && echo ""Sequence database $1 not found!"" && exit 1;; [ -d ""$2"" ] && echo ""Output directory $2 exists already!"" && exit 1;. function abspath() {; if [ -d ""$1"" ]; then; (cd ""$1""; pwd); elif [ -f ""$1"" ]; then; if [[ $1 == */* ]]; then; echo ""$(cd ""${1%/*}""; pwd)/${1##*/}""; else; echo ""$(pwd)/$1""; fi; fi; }. RELEASE=""${3:-$(date ""+%Y_%m"")}""; SHORTRELEASE=""${4:-$(date ""+%y%m"")}"". INPUT=$1; OUTDIR=$2/$RELEASE. TMPPATH=$OUTDIR/tmp; mkdir -p $TMPPATH. OUTDIR=$(abspath $OUTDIR); TMPPATH=$(abspath $TMPPATH). PREFILTER_COMMON=""$COMMON""; PREFILTER_FRAG_PAR=""--min-ungapped-score 100 --comp-bias-corr 0 -s 1 ${PREFILTER_COMMON}""; PREFILTER1_PAR=""-c 0.9 --comp-bias-corr 1 -s 2 ${PREFILTER_COMMON}""; PREFILTER2_PAR=""-c 0.8 --comp-bias-corr 1 -s 6 ${PREFILTER_COMMON}""; ALIGNMENT_COMMON=""$COMMON -e 0.001 --max-seq-len 32768 --max-rejected 2147483647""; ALIGNMENT0_PAR=""-c 0.9 --alignment-mode 2 --min-seq-id 0.9 --comp-bias-corr 0 ${ALIGNMENT_COMMON}""; ALIGNMENT1_PAR=""-c 0.8 --alignment-mode 2 --min-seq-id 0.9 --comp-bias-corr 1 ${ALIGNMENT_COMMON}""; ALIGNMENT2_PAR=""-c 0.8 --alignment-mode 3 --min-seq-id 0.3 --comp-bias-corr 1 ${ALIGNMENT_COMMON}""; CLUSTER_FRAG_PAR=""--cluster-mode 2""; CLUSTER0_PAR=""--cluster-mode 2""; CLUSTER1_PAR=""--cluster-mode 0""; CLUSTER2_PAR=""--cluster-mode 0""; SEARCH_PAR=""$COMMON --profile --k-score 100""; CSTRANSLATE_PAR=""-x 0.3 -c 4 -A $HHLIB/data/cs219.lib -D $HHLIB/data/context_data.lib -I ca3m -f -b"". SEQUENCE_DB=""$OUTDIR/uniprot_db"". export OMP_PROC_BIND=false; mmseqs createdb ""$INPUT"" ""${SEQUENCE_DB}"". STEP=""_FRAG""; INPUT=""${SEQUENCE_DB}""; $RUNNER mmseqs prefilter ""$INPUT"" ""$INPUT"" ""$TMPPATH/pref_step$STE",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/700#issuecomment-1589819536:670,RELEASE,RELEASE,670,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/700#issuecomment-1589819536,2,['RELEASE'],['RELEASE']
Deployability,"Because we don't develop the .sh script anymore and it's not up-to-date. The development is happening in the python version now. If you want to use the server - with fast response times, like our has - you need a server with ~1TB permanently committed RAM. Anything less will not work.; `colabfold_search` does not have this issue, however, it has slightly different performance pitfalls to look out for. Single query searches will remain slow, with `colabfold_search`. Our proposed workflow is to gather a few hundred to thousands of queries. Do the MSA generation stage with `colabfold_search` and then batch predict them with `colabfold_batch`. Edit: the python `colabfold_search` is also pip-installed together with `colabfold_batch`. If you installed with localcolabfold (recommended) or with pip. You will have both available.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/690#issuecomment-1495427497:696,install,installed,696,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/690#issuecomment-1495427497,2,['install'],['installed']
Deployability,"Building on `linux-rocky8-x86_64`. I've just been patching it for Spack, so figured I'd push it across. These changes are as per https://gcc.gnu.org/gcc-13/porting_to.html",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/pull/714#issuecomment-1584672490:50,patch,patching,50,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/pull/714#issuecomment-1584672490,1,['patch'],['patching']
Deployability,Can you post the output of `ldd /usr/local/bin/mmseqs` and `make clean build` in wip/mmseqs2? I wonder if my build is picking up some optional dependency that yours is not. I'm guessing you don't have many packages installed on the VM. Thanks...,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/460#issuecomment-870790679:215,install,installed,215,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/460#issuecomment-870790679,1,['install'],['installed']
Deployability,"Can you try the newest MMseqs2 release? 7 is really ancient. MMseqs2 is however really not well tested for clustering whole genomes/long contigs. You might have more luck in running only linclust and not the whole clustering workflow. > PS: Y'all are ANGELS for keeping up with all the users and issues listed for mmseqs. Seriously grateful, hoping you have ample funding to keep the devs happy... 🥲",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/632#issuecomment-1293776287:31,release,release,31,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/632#issuecomment-1293776287,1,['release'],['release']
Deployability,"Can you use the `MMSEQS_ARCH` cmake flag to fix the mips build? I could add a flag like HAVE_ARM8 for MIPS. However, I am not sure we want to add code that is not regularly tested by continuous integration.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/358#issuecomment-707829562:183,continuous,continuous,183,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/358#issuecomment-707829562,2,"['continuous', 'integrat']","['continuous', 'integration']"
Deployability,"Careful about the parameters though, they are not quite the same for the two tools, if I remember correctly. I would recommend to install `libopenmpi-dev` (or your OS equivalent) and rebuild the HH-suite, it will detect the presence of MPI and build cstranslate_mpi, ffindex_apply_mpi, hhblits_mpi etc.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/83#issuecomment-383552461:130,install,install,130,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/83#issuecomment-383552461,1,['install'],['install']
Deployability,Compiling from zip results in this `GITDIR-NOTFOUND`.; I would recommend to download MMseqs2 again (the latest release from conda or from github releases or compile from source) and try again.,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/503#issuecomment-965838444:111,release,release,111,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/503#issuecomment-965838444,2,['release'],"['release', 'releases']"
Deployability,"Conda should be up to date, so you should be able to just update the package.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/277#issuecomment-590301981:58,update,update,58,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/277#issuecomment-590301981,1,['update'],['update']
Deployability,"Could you please install the latest git version? I think I know whats going on, the latest commit should fix the issue. Another thing that you can do to fix your current run is:; ```; cp est00001DB.dbtype /tmp/3706626149599022609/top1.dbtype; ```. And rerun the same command.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/80#issuecomment-381098368:17,install,install,17,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/80#issuecomment-381098368,1,['install'],['install']
Deployability,Could you please try to reproduce the issue with the latest MMseqs2 release? Your build is quite old the issue might have already been fixed in the meantime. Please try this release: https://github.com/soedinglab/MMseqs2/releases/tag/8-fac81; We were able to execute your example successfully with it.,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/186#issuecomment-482225245:68,release,release,68,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/186#issuecomment-482225245,3,['release'],"['release', 'releases']"
Deployability,Could you please try to rerun the clustering the same dataset with the latest release? We have since improved the handling of long sequence and the issue might already be resolved.,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/291#issuecomment-604144335:78,release,release,78,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/291#issuecomment-604144335,1,['release'],['release']
Deployability,Could you please update your version and recreate the index there was a bug in this version. ; If the bug still persists please could you please send us the debug backtrace? ; To debug first compile MMseqs2 in debug mode. cmake -DCMAKE_BUILD_TYPE=Debug .. ; make . And then run the alignment with gdb . gdb --args mmseqs align tcdb_query.nr.db /databases/fadb/freeze/all.mmseqs tmp/18071041534032520912/pref_0 tmp/18071041534032520912/aln_0 --sub-mat blosum62.out -a 1 --alignment-mode 2 -e 0.1 --min-seq-id 0 --seq-id-mode 0 --alt-ali 0 -c 0.8 --cov-mode 0 --max-seq-len 65535 --max-seqs 17702628 --comp-bias-corr 1 --realign 1 --max-rejected 2147483647 --max-accept 2147483647 --add-self-matches 1 --db-load-mode 0 --pca 1 --pcb 1.5 --score-bias 0 --gap-open 11 --gap-extend 1 --threads 15 -v 3. After the crash just type . bt,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/134#issuecomment-437061143:17,update,update,17,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/134#issuecomment-437061143,1,['update'],['update']
Deployability,Could you try to update to the latest release and see if the error still happens? I cannot reproduce it locally.,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/427#issuecomment-804121974:17,update,update,17,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/427#issuecomment-804121974,2,"['release', 'update']","['release', 'update']"
Deployability,Could you try using the latest git version? I think we already fixed the issue and the fix should be part of the next release (sorry for the delay).,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/344#issuecomment-678089285:118,release,release,118,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/344#issuecomment-678089285,1,['release'],['release']
Deployability,Could you try with the latest release? Your issue was most likely fixed in the meantime.,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/428#issuecomment-809598914:30,release,release,30,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/428#issuecomment-809598914,1,['release'],['release']
Deployability,"Dear Milot,. I provided all result files from previous easy-linclust of 3 billion sequences. As I understand, if you use the rep_seq based new database, the update of additional sequence will not place newer sequences to any existing clusters, is this right?. The only option seems to add newer redundant sequences to previous version of redundant sequences, create a database and start a fresh linclust session. You mentioned new versions of mmseq is now much faster, I will give it a go but do you think is there a way to extract the cluster db of my previous run where I used easy-linclust?. Please provide some useful advice as these are computationally heavy tasks. Best,. IA. --; --; Intikhab Alam, PhD. Research Scientist; Computational Bioscience Research Centre (CBRC), Building #3, Office #4328; 4700 King Abdullah University of Science and Technology (KAUST); Thuwal 23955-6900, KSA; W: http://www.kaust.edu.sa<https://webmail.kaust.edu.sa/owa/redir.aspx?C=wkduJ0ChSE-OkyUQwL9vutDH6L5Gg9EImiJ7GyYOxcPLuActd9iwo85DHDgQZup2zR1MyXCk7as.&URL=http%3a%2f%2fwww.kaust.edu.sa>; T +966 (0) 2 808-2423 F +966 (2) 802 0127; ________________________________; From: Milot Mirdita <notifications@github.com>; Sent: 08 September 2020 18:53; To: soedinglab/MMseqs2; Cc: Intikhab S. Alam; Author; Subject: Re: [soedinglab/MMseqs2] updating a near complete mmseq clustered db (#348). I think it's probably salvageable. I'll need to look over your output in detail. Another question: This was clustered using easy-linclust not using easy-cluster right? Cluster update currently will try to use the normal clustering for the sequences that cannot be assigned to an existing cluster. This will also likely be very slow (probably slower than clustering anew using linclust). We will have to build support for updating with linclust. -; You are receiving this because you authored the thread.; Reply to this email directly, view it on GitHub<https://github.com/soedinglab/MMseqs2/issues/348#issuecomment-688971058",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/348#issuecomment-689838616:157,update,update,157,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/348#issuecomment-689838616,1,['update'],['update']
Deployability,"Dear Milot,. Thanks you for recommending the use of updated version and fixing performance issues. There were 3 billion sequences which clustered in 1 billion using was-cluster approach. I do not want to re-cluster the version of data I processed previously since I annotated these ~1 billion sequences and used in different projects already. As it seems, It may not be good idea to use db files from easy-cluster output. Do you think it is useful to create a new db (EBdb) out of easy-cluster output of the previous run, using rep_seq.fasta, and use EBdb as a template to compare newer sequences I want to cluster and finally update the EBdb to EBdb_new?. Intikhab. --; --; Intikhab Alam, PhD. Research Scientist; Computational Bioscience Research Centre (CBRC), Building #3, Office #4328; 4700 King Abdullah University of Science and Technology (KAUST); Thuwal 23955-6900, KSA; W: http://www.kaust.edu.sa<https://webmail.kaust.edu.sa/owa/redir.aspx?C=wkduJ0ChSE-OkyUQwL9vutDH6L5Gg9EImiJ7GyYOxcPLuActd9iwo85DHDgQZup2zR1MyXCk7as.&URL=http%3a%2f%2fwww.kaust.edu.sa>; T +966 (0) 2 808-2423 F +966 (2) 802 0127; ________________________________; From: Milot Mirdita <notifications@github.com>; Sent: 08 September 2020 12:42; To: soedinglab/MMseqs2; Cc: Intikhab S. Alam; Author; Subject: Re: [soedinglab/MMseqs2] updating a near complete mmseq clustered db (#348). You are running a very old version of MMseqs2. Please update to the latest version. Especially cluster updating had multiple severe issues before the latest release. It was also spending 35h in the very simple module result2repseq. I think I fixed the performance issue in the latest commit cc7d7da<https://github.com/soedinglab/MMseqs2/commit/cc7d7da30ec779d6a2e886438f8295f59e2192f1>. You'll find statically compiled binaries here in about one hour: https://mmseqs.com/latest. Cluster updating also doesn't interact very nicely with the easy- workflows yet. I'd recommend to stick to the basic commands as shown in the user guide. -; You",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/348#issuecomment-688772337:52,update,updated,52,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/348#issuecomment-688772337,4,['update'],"['update', 'updated']"
Deployability,"Dear Murat,. We consider every commit that has passed the regression pipeline on CodeShip as stable (see the codeship badge). . However we are aware about policies at many institutes to only allow using tagged stable software versions. We are currently preparing a pipeline to easily produce stable tagged releases on all relevant platforms (GitHub Releases, Homebrew, Linuxbrew, Bioconda, Docker, etc.). We hope to have this done soon. Until then please use either the latest static build (that one has always passed the regression pipeline) or the latest regression pipeline passing commit. Best regards,; Milot",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/46#issuecomment-339919158:69,pipeline,pipeline,69,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/46#issuecomment-339919158,6,"['Release', 'pipeline', 'release']","['Releases', 'pipeline', 'releases']"
Deployability,Deleted sequences should also be handled correctly now. Also we were not very consistent with producing the same parameters as the normal clustering workflow would have produced. Cluster update should now be in quite a bit better shape.,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/333#issuecomment-684083474:187,update,update,187,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/333#issuecomment-684083474,1,['update'],['update']
Deployability,"Depending on, how strict you are with the pairwise sequence identity between cluster members, I have two different answers for you. You can start with the highest sequence identity threshold (e.g. 90%) and then continue clustering that clustering down to the next lowest threshold (e.g. 50%) and then the next one (e.g. 30%). However, while that approach will be fast. When two 50% sequence identity clusters are merged into one 30% cluster. The sequence identity of the new representative with the merged members can drop below 30%. For our Uniclust databases, we solved the issue by clustering straight down to 30%, and then reusing the alignment results to also produce a 50% clustering, but the step from 90% to 30% is quite a bit slower than 90%->50%->30%:; https://github.com/soedinglab/uniclust-pipeline/blob/develop/uniclust_workflow.sh#L143",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/84#issuecomment-384807058:802,pipeline,pipeline,802,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/84#issuecomment-384807058,1,['pipeline'],['pipeline']
Deployability,Did using a newer release help? I am trying to see what should be urgently dealt with before a new release.,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/394#issuecomment-776908014:18,release,release,18,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/394#issuecomment-776908014,2,['release'],['release']
Deployability,"Did you inted to compile with MPI? Could you please send me your cmake call and output? ; If you do not want to use MPI you can specify `cmake -DHAVE_MPI=0 -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX=. ..`. The MPI compiled version can not be used as stand alone binary. You have to specificy an MPI runner and the amount of nodes you want to run your code. E.g. `RUNNER=""mpirun -np 42"" mmseqs search queryDB targetDB resultDB tmp`. . I also see that your query set has the size 0. `Query database: tara_test.faa(size=0)`. How did you build this query set? Could you please send us your workflow?",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/3#issuecomment-251317885:175,Release,Release,175,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/3#issuecomment-251317885,1,['Release'],['Release']
Deployability,"Do you have macports installed by chance?; Might be a conflict between it and homebrew, you should use either or, not both. (https://github.com/Homebrew/legacy-homebrew/issues/45258). Another thing that you can try to install `binutils` from homebrew, but I don't think thats it. And a second thing: Try updating your xcode to the latest available version, it might also ship a newer assembler and linker (as/ld). I think the brew gcc still uses the system assembler and linker.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/7#issuecomment-265058952:21,install,installed,21,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/7#issuecomment-265058952,2,['install'],"['install', 'installed']"
Deployability,Does it work with the default `-k 5`? Could you also please check if the issue might be resolved in the new release?,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/189#issuecomment-483307823:108,release,release,108,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/189#issuecomment-483307823,1,['release'],['release']
Deployability,Does the issue also happen in the newest release?; Could you capture the full log of the different runs and upload those?. Sending us the data via email or similar is also not possible?,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/277#issuecomment-590249182:41,release,release,41,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/277#issuecomment-590249182,1,['release'],['release']
Deployability,Does this issue also happen in release 14?,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/763#issuecomment-1759739245:31,release,release,31,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/763#issuecomment-1759739245,1,['release'],['release']
Deployability,Done! We released a new version: https://github.com/soedinglab/MMseqs2/releases/tag/14-7e284,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/597#issuecomment-1277796659:9,release,released,9,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/597#issuecomment-1277796659,2,['release'],"['released', 'releases']"
Deployability,"Exactly, run the prefilter command with:; ```; perf record -g -F 250 -- mmseqs prefilter ....rest-of-arguments---; ```; This will generate a `perf.data` file that contains the perfomance profiling information. It can be viewed with ; ```; perf report; or ; perf annotate; ```. You should compile with `cmake -DCMAKE_BUILD_TYPE=RelWithDebInfo` so that mmseqs contains debug symbols. This is not 100% the same as RelWithDebInfo uses `-O2` and Release uses `-O3` but it shouldn't really have a huge difference.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/658#issuecomment-1397214190:441,Release,Release,441,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/658#issuecomment-1397214190,1,['Release'],['Release']
Deployability,"Exactly, you can also use the precompiled binaries at https://mmseqs.com/latest/. I've also added links to the corresponding user guide commits for older releases:; https://github.com/soedinglab/MMseqs2/wiki",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/248#issuecomment-559496490:154,release,releases,154,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/248#issuecomment-559496490,2,['release'],['releases']
Deployability,"Excellent, I will update and give it a shot.; Thanks so much for your response and extremely fast update.; Your program/code is really remarkable stuff, thank you so much for sharing it with the open source community.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/206#issuecomment-496204510:18,update,update,18,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/206#issuecomment-496204510,2,['update'],['update']
Deployability,"Fix was just merged, the updated brew package should now work correctly multi-threaded. Thanks again!",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/289#issuecomment-604142976:25,update,updated,25,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/289#issuecomment-604142976,1,['update'],['updated']
Deployability,Fixed the issue in latest master. I'll make a new app release soon too.,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/215#issuecomment-510868729:54,release,release,54,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/215#issuecomment-510868729,1,['release'],['release']
Deployability,"For MPI you have to compile MMseq2 yourself with MPI development headers/libraries installed and `cmake -DHAVE_MPI=1 ...`. The `-MPI` version suffix on any MMseqs2 module call will show up if you compiled it correctly. Then you have to define one environment variable `RUNNER` that contains your MPI runner call. E.g.:; ```; export RUNNER=""mpirun --pernode; ```; Make sure to start only one MPI process per compute node (`--pernode` parameter in this case). The parallelization within a node still happens over OpenMP. . MMseqs2 workflows (search, cluster, ...) will automatically use the `$RUNNER` environment variable to parallelize modules that support it (e.g. `prefilter`, `align`, ...). . If you call MMseqs2 modules directly (e.g. again `prefilter`) you have to do a normal MPI call:; ```; mpirun --pernode mmseqs prefilter ...; ```. We don't really have a list of MPI enabled MMseqs2 modules, except for looking in the code for modules that call `MMseqsMPI::init`.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/163#issuecomment-462771446:83,install,installed,83,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/163#issuecomment-462771446,1,['install'],['installed']
Deployability,"For the `nr` we have the specialized `nrtotaxmapping` module. You give it the [accession2taxid](https://ftp.ncbi.nlm.nih.gov/pub/taxonomy/accession2taxid/) files and the NR sequence database (from `createdb`) and it will create the correct `_mapping` file. It should be quite a bit cheaper than the `awk` command used in `createtaxdb` (see https://github.com/soedinglab/MMseqs2/blob/master/data/workflow/databases.sh#L415 on how it's used). For that you have to upgrade to the latest MMseqs2 release though. The latest release also has the `nr` included in the `databases` downloader script, which utilizes this module internally.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/490#issuecomment-922868395:462,upgrade,upgrade,462,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/490#issuecomment-922868395,3,"['release', 'upgrade']","['release', 'upgrade']"
Deployability,"Forgot to update you, df69c26e1c9aaeaa3f5d72fd6e782d02742b2b0c fixed the issue. You can use git head again.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/347#issuecomment-688527651:10,update,update,10,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/347#issuecomment-688527651,1,['update'],['update']
Deployability,"GCC should not be necessary. Clang works fully in all kinds of configurations.; We introduced our own env variable `MMSEQS_NUM_THREADS` to limit threads globally if `--threads` cannot be (conveniently) set. I limited my VM to 2GB and couldn't get it to crash in the same way during `SLICEPROFILE` (the OOM killer always killed it, it didn't crash in posix_memalign). How exactly did you compile it when it hang with SSE?",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/460#issuecomment-868879967:63,configurat,configurations,63,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/460#issuecomment-868879967,1,['configurat'],['configurations']
Deployability,"Got it. So what files should be present in a minimal installation? For now, I'm installing everything in data in addition to the two files your install target does. I haven't had time to play with mmseqs2 yet and probably won't for a while, but I want to the FreeBSD port to work out-of-the-box for a typical user.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/460#issuecomment-868467572:53,install,installation,53,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/460#issuecomment-868467572,3,['install'],"['install', 'installation', 'installing']"
Deployability,"Hello! . So I had some time to look it up. From the whole fasta I sent I had only problems with a subset of sequences. Out of the 2248 sequences I obtained the result for 2164, creating the report and the `*lca.tsv` file I am interested in. So there were 84 sequences without the taxonomy. Now the error was different and I think maybe more informative. [mmseqs_test_362352_4294967294.out.txt](https://github.com/soedinglab/MMseqs2/files/6467556/mmseqs_test_362352_4294967294.out.txt); [mmseqs_test_362352_4294967294.err.txt](https://github.com/soedinglab/MMseqs2/files/6467557/mmseqs_test_362352_4294967294.err.txt). You seem to not have any error for this sequences: . [the_no_taxonomoed.txt](https://github.com/soedinglab/MMseqs2/files/6467583/the_no_taxonomoed.txt). The database version I am using is downloaded through the last release. ; Could you share the DB you were using to check if that is the problem? . Or else we can try to arrange the interactive connection :)",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/447#issuecomment-839919421:834,release,release,834,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/447#issuecomment-839919421,1,['release'],['release']
Deployability,Here is my initial clustering update:; `mmseqs clusterupdate Uniprot_Unreviewed_Zmays /home/ec2-user/MMSeqs2/Uniprot_Unreviewed_Zmays_Tomato_Dmagna_kmer20_results/Uniprot_Unreviewed_Zmays_Tomato_Dmagna Uniprot_Unreviewed_Zmays_clu Uniprot_Unreviewed_Zmays_updated_Tomato_Daphnia_NEWMAPDB Uniprot_Unreviewed_Zmays_updated_Tomato_Daphnia_NEWCLUST_clu ./tmp`. And the tsv generation:; `mmseqs createtsv ./Uniprot_Unreviewed_Zmays_updated_Tomato_Daphnia_NEWMAPDB Uniprot_Unreviewed_Zmays_updated_Tomato_Daphnia_NEWMAPDB Uniprot_Unreviewed_Zmays_updated_Tomato_Daphnia_NEWCLUST_clu Uniprot_Unreviewed_Zmays_updated_Tomato_Daphnia_NEWCLUST_clu.tsv`. tsv error message:; ```; MMseqs Version: f3b88f27def72ac5392131b98e079930f3b087c7; first sequence as respresentative false; Target column 0; Add Full Header false. Query file is ./Uniprot_Unreviewed_Zmays_updated_Tomato_Daphnia_NEWMAPDB; Target file is Uniprot_Unreviewed_Zmays_updated_Tomato_Daphnia_NEWMAPDB; Data file is Uniprot_Unreviewed_Zmays_updated_Tomato_Daphnia_NEWCLUST_clu; Start writing file to Uniprot_Unreviewed_Zmays_updated_Tomato_Daphnia_NEWCLUST_clu.tsv; terminate called after throwing an instance of 'std::logic_error'; what(): basic_string::_S_construct null not valid; Aborted; ```,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/103#issuecomment-404865556:30,update,update,30,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/103#issuecomment-404865556,1,['update'],['update']
Deployability,"Here is the gdb outputs:. $ gdb --args mmseqs swapresults /tmp/tmp_MMSeq2/13348632313875676683/search_tmp/10253871789027801475/target_seqs_split /tmp/tmp_MMSeq2/13348632313875676683/search_tmp/10253871789027801475/query_seqs_split /tmp/tmp_MMSeq2/13348632313875676683/search_tmp/10253871789027801475/search/aln /tmp/tmp_MMSeq2/13348632313875676683/search_tmp/10253871789027801475/search/aln_swap --sub-mat nucl:nucleotide.out,aa:blosum62.out -e 3.40282e+38 --split-memory-limit 0 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --threads 256 --compressed 0 --db-load-mode 0 -v 3; GNU gdb (Ubuntu 8.1.1-0ubuntu1) 8.1.1; Copyright (C) 2018 Free Software Foundation, Inc.; License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>; This is free software: you are free to change and redistribute it.; There is NO WARRANTY, to the extent permitted by law. Type ""show copying""; and ""show warranty"" for details.; This GDB was configured as ""x86_64-linux-gnu"".; Type ""show configuration"" for configuration details.; For bug reporting instructions, please see:; <http://www.gnu.org/software/gdb/bugs/>.; Find the GDB manual and other documentation resources online at:; <http://www.gnu.org/software/gdb/documentation/>.; For help, type ""help"".; Type ""apropos word"" to search for commands related to ""word""...; Reading symbols from mmseqs...(no debugging symbols found)...done.; (gdb) r; Starting program: /ebio/abt6_projects8/1001g_plus/code/Programs/miniconda3/envs/MMseqs2/bin/mmseqs swapresults /tmp/tmp_MMSeq2/13348632313875676683/search_tmp/10253871789027801475/target_seqs_split /tmp/tmp_MMSeq2/13348632313875676683/search_tmp/10253871789027801475/query_seqs_split /tmp/tmp_MMSeq2/13348632313875676683/search_tmp/10253871789027801475/search/aln /tmp/tmp_MMSeq2/13348632313875676683/search_tmp/10253871789027801475/search/aln_swap --sub-mat nucl:nucleotide.out,aa:blosum62.out -e 3.40282e+38 --split-memory-limit 0 --gap-open nucl:5,aa:11 --gap-extend nucl:2,aa:1 --threads 256 --com",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/394#issuecomment-762394840:1021,configurat,configuration,1021,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/394#issuecomment-762394840,2,['configurat'],['configuration']
Deployability,Here's the reproducible example: [reprod_example.tar.gz](https://github.com/soedinglab/MMseqs2/files/4995028/reprod_example.tar.gz). I ran the following on it:. ```; mmseqs clusterupdate --threads 12 genes_db all_genes/genes_db clusters_db out_db clusters_out_db tmp; ```. ...and got the error:. ```; [...]; Clustering step 1; [=================================================================] 100.00% 6 0s 0ms; Clustering step 2; [=================================================================] 100.00% 6 0s 5ms; Clustering step 3; [=================================================================] 100.00% 6 0s 6ms; Clustering step 4; [=================================================================] 100.00% 6 0s 9ms; Write merged clustering; [=================================================================] 100.00% 6 0s 13ms; Time for merging to newClusters: 0h 0m 0s 5ms; Time for processing: 0h 0m 0s 25ms; ===================================================; ==== Merge the updated clustering together with ===; ===== the new clusters ======; ===================================================; concatdbs /ebio/abt3_projects/software/dev/Struo2/db_update/tmp/reprod_example/tmp/3735461810384044110/updatedClust /ebio/abt3_projects/software/dev/Struo2/db_update/tmp/reprod_example/tmp/3735461810384044110/newClusters /ebio/abt3_projects/software/dev/Struo2/db_update/tmp/reprod_example/clusters_out_db --preserve-keys. No datafile could be found for /ebio/abt3_projects/software/dev/Struo2/db_update/tmp/reprod_example/tmp/3735461810384044110/updatedClust!; Error: Dbconcat died; ```,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/333#issuecomment-665656135:991,update,updated,991,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/333#issuecomment-665656135,3,['update'],"['updated', 'updatedClust']"
Deployability,"Hi @SilasK, sorry again for the delay.; Could you expand a bit on what you want to achieve?; (1) Do you want to ""update"" your profiles, by adding new sequences to that profile?; This is a bit tricky, we would need to provide something similar to the cluster updating, but for a search instead. The tricky part is, that the sequence databases of the profiles and the new sequences have to be merged first, while retaining the profile identifiers. (2) Do you just want to know what profile this protein should belong to? Step (0) to (2) is already enough for that. I can look into (1), if this is what you need. I am a bit busy with another paper submission currently, so I might need some time.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/108#issuecomment-410701279:113,update,update,113,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/108#issuecomment-410701279,1,['update'],['update']
Deployability,"Hi @martin-steinegger ,; many thanks for this update. From our first tests we see a clear improvement in this scenario and we are now able to find more exact matches with MMSeqs2 than before and even compared to Diamond.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/91#issuecomment-395755566:46,update,update,46,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/91#issuecomment-395755566,2,['update'],['update']
Deployability,"Hi @martin-steinegger, I've been getting this exact same error, not sure what could be happening. I am using the latest version of mmseqs2 ([`14-7e284`](https://github.com/soedinglab/MMseqs2/releases/tag/14-7e284)). What other information could I provide to help debug?. Thank you,; Vini",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/258#issuecomment-1581777454:191,release,releases,191,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/258#issuecomment-1581777454,1,['release'],['releases']
Deployability,"Hi @milot-mirdita ,. I found this 1046081 in our targetDB.lookup file, which looks like this:. ```; >grep 1046081 targetDB.lookup; 1046081	A0A0U2C0X9	0; ```. I wondered if the new version of mmseqs expects this file to be in a different configuration? Like maybe no row number, but directly ""A0A0U2C0X9""? Or what format of the ""legal taxonomy node"" it looks for?. Thank you!; Leran",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/387#issuecomment-759696735:237,configurat,configuration,237,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/387#issuecomment-759696735,1,['configurat'],['configuration']
Deployability,"Hi @milot-mirdita ,. Thank you, I installed the mpi version, but I used just the normal mode, let me try your advice.; And, I also get an another error:; /opt/gridengine/default/spool/cngb-compute-e05-9/job_scripts/6073613: line 1: /MMseqs2/build/bin/mmseqs: Unknown error 521; Do you have any idea about this **unknown error 521**?",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/469#issuecomment-876580228:34,install,installed,34,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/469#issuecomment-876580228,1,['install'],['installed']
Deployability,"Hi @milot-mirdita ,; thanks for the reply, we are still testing the different options, for the moment we have seen a small improvement adding these parameters (e.g. we are able to find exact matches for 10-15 more sequences). . I have put online the almost 500 sequences for which we completely miss the exact match against themselves. You can download the Fasta file from here: https://www.dropbox.com/s/jf88389zuj2nddn/missed_exact_matches_mmseqs2.fasta.gz?dl=0. These are part of the UniRef90 2018_04 release.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/91#issuecomment-394364168:504,release,release,504,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/91#issuecomment-394364168,1,['release'],['release']
Deployability,"Hi @milot-mirdita, @sanyalab,. > Maybe it works if you explicitly also add the conda-forge channel:; > ; > ```; > conda install -c conda-forge -c bioconda mmseqs2; > ```. Yes, this is exactly what is needed. Ideally, one would have the channel configuration set as described in https://bioconda.github.io/user/install.html#set-up-channels. > Your kernel/libc versions are very old. I am surprised that conda runs at all. We (Bioconda and conda-forge) currently support CentOS 6 (i.e., glibc 2.12, Linux 2.6.32 (w/ RHEL patches)) as the oldest supported system. We'll move to CentOS 7 in the future, but had/needed to delay that move because some of our users still use CentOS/RHEL 6. Due to the CentOS 8 Linux <> CentOS 8 Stream debacle this move has been delayed further.; (Read: At some point, maybe in half a year or so (no date set yet), Bioconda/conda-forge may build packages that would require you, @sanyalab, to run on an updated system.). > These error messages are thrown by MMseqs2 dependencies that are provided by conda-forge (libgomp/libstdc++), they require a newer glibc. The libstdc++/libgomp didn't come from `conda-forge` but most likely from `defaults`/`pkgs/main` which have packages provided by Anaconda. Anaconda started to compile against CentOS 7 (i.e., glibc 2.17) at some point (but in the meantime they also noticed customers still rely on CentOS 6). In any case, using `-c conda-forge -c bioconda` (or having those two in the Conda configuration beforehand) will yield glibc 2.12 compatible libstdc++/libgomp from `conda-forge`. ----; Overall, this isn't and upstream MMseqs2 issue but purely downstream and can be remedied by using the Conda channel order recommended in the Bioconda docs. Cheers,; Marcel",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/461#issuecomment-879787999:120,install,install,120,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/461#issuecomment-879787999,6,"['configurat', 'install', 'patch', 'update']","['configuration', 'install', 'patches', 'updated']"
Deployability,"Hi @milot-mirdita, thanks! I updated the mmseqs to the latest version and set the --split-memory-limit parameter to 250G, this time I didn't get that error, but it threw me another error:. ```. Not enough memory to process at once need to split; [=================================================================tmp/2319642838547372155/clu_tmp/15550839581876067830/linclust.sh: line 26: 344 Killed $RUNNER ""$MMSEQS"" kmermatcher ""$INPUT"" ""${TMP_PATH}/pref"" ${KMERMATCHER_PAR}; Error: kmermatcher died; Error: Search died; finished; slurmstepd: error: Detected 1 oom-kill event(s) in step 30119673.batch cgroup. Some of your processes may have been killed by the cgroup out-of-memory handler. ```; The command I'm using is like this:. `mmseqs easy-linclust ${sample}_R2.fastq.gz $OUT tmp -c 0.95 --split-memory-limit 250G`. Could you give me some help on that?. Thanks so much!",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/427#issuecomment-805847611:29,update,updated,29,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/427#issuecomment-805847611,1,['update'],['updated']
Deployability,"Hi @milot-mirdita,. I have successfully installed the precompiled version of the latest mmseqs. But when I run my script It keeps throwing me an error says:. ```; Input database ""./results/contigs/mmseqs_aa_out/taxonomyResult"" is wrong!; Current input: Taxonomy. Allowed input: Alignment; ```. when I switch to the old version, I don't see this error. . Is there any advice on that?. Thanks very much!!; Leran",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/387#issuecomment-756416360:40,install,installed,40,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/387#issuecomment-756416360,1,['install'],['installed']
Deployability,"Hi @silvainp @milot-mirdita @martin-steinegger !. I came across this old issue while googling because I encountered pretty much the same problem and this didn't seem to have been resolved yet. I can confirm that I got very similar outputs to @silvainp in a clustering problem I've been working on. The issue persisted with the most recent release (15) of mmseqs2. After some I found that there was a (silent) issue in my input FAA files: they were corrupted due to a few binary characters that were accidentally introduced in an upstream step. **Once I manually cleared all binary characters, clustering worked as intended**. This may have been the issue here as well, although ofc hard to tell from a distance. What's important imo is that the `createdb` step did _not_ catch these and threw no error/warning. @milot-mirdita I don't want to tinker with the code for a pull request, but I'd suggest building in a check to validate the input fasta files in the db-building step. Best regards,. Sebastian",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/710#issuecomment-2425959129:339,release,release,339,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/710#issuecomment-2425959129,2,['release'],['release']
Deployability,"Hi Ann,. Thank you for guiding me so far. I did a bit of digging around in the temporary files. I'll call the two close sequences with one mismatch between them seqA and seqB. What I found was that they were both found within a larger cluster in the pref database with seqC (cluster head). seqC is about 20% different to both seqA and seqB, but their ungapped alignment scores may not reflect that. In the pref.tsv (createtsv pref); seqC seqB 5 0; seqC seqB 5 0. In the pref_rescore1.index file (pref_rescore1.1 - pref_rescore1.16 are in binary format, and I wasn't sure if that is the one you are referring to), I only see two rows that contain seqA and seqB. seqA seqA 100 0; seqB seqB 100 0. After the pipeline finishes, all three sequences seqA-C end up being separate clusters. Also, I'm using 10000 unique sequences in the input, so should one expect 10000-choose-2 pairs in the pref database? The total number of rows in the pref database is 69737, which is 0.13% of the total number of pairs. I had run linclust with these parameters in this run-; -e 1 --min-seq-id 0.99 --cov-mode 3 -c 0.99 --kmer-per-seq 100 --kmer-per-seq-scale 0 -k 15 --cluster-mode 1 --max-iterations 50000 --seq-id-mode 2 --threads 16 --remove-tmp-files 0",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/489#issuecomment-923572541:705,pipeline,pipeline,705,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/489#issuecomment-923572541,2,['pipeline'],['pipeline']
Deployability,"Hi Ann,. Thank you for the quick response. I'm currently using - f349118312919c4fcc448f4595ca3b3a387018e2 - which was the latest version as of last month. The entire point of this exercise, for me, is to understand, algorithmically, why linclust-only misses clusters that it perhaps should cluster. The tool works great overall!. I'm using a fairly strict criterion for clustering using linclust, attempting to do as much as I can before I use mmseqs. The parameters are ->; -e 0.1 --min-seq-id 0.99 --cov-mode 3 -c 0.99 --kmer-per-seq 30 --kmer-per-seq-scale 0.3 -k 50 --cluster-mode 1 --max-iterations 50000 --seq-id-mode 2 --threads 16. I have used comically large values of (e / kmer-per-seq) and I still find thousands of such pairs that should have been clustered. Unfortunately, I cannot share the sequences because I don't own them. But I could report further that if I only use the two sequences (that are being missed in a population of sequences) on their own, linclust clusters them using the same pipeline. Next, I used the same two clusters with an 'outgroup' sequences, and I found the expected outcome - the two close by sequences were clustered whereas the outgroup was not. I begin to lose sensitivity as I start using more and more sequences in the population, which leads me to believe that the loss of sensitivity could be down the pre-filters/heuristics/e-value. If I manually 'cascade' the representative sequences from the first step using linclust again (instead of mmseqs, hence 'cascade'), I don't gain any appreciable sensitivity. So when provided a large population, linclust is missing these pairs many times (I tried to 'cascade' several times, but using linclust alone. What I find surprising is that these two sequences must share at least one kmer (in fact they must share many), so they must have been compared to each other, and they qualify all hard filters (coverage / alignment score), and yet they were missed. It's also possible both of them were compared to a",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/489#issuecomment-923001759:1010,pipeline,pipeline,1010,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/489#issuecomment-923001759,1,['pipeline'],['pipeline']
Deployability,"Hi Antonio,. You can do something like this:. ```; mmseqs cluster db clu tmp; mmseqs align db db clu aln -a; mmseqs createtsv db db aln aln.tsv; ```. The `-a` parameter computes the whole backtrace, you can also use `--alignment-mode 3`, but that computes the backtrace anyway since it needs it for the seq. id. ; `--alignment-mode` 1 and 2 only approximate the sequence identity. Thank you for the feedback! We will add this to the FAQ and also discuss if it make sense to provide the same output also for Uniclust in future releases.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/13#issuecomment-276091695:526,release,releases,526,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/13#issuecomment-276091695,2,['release'],['releases']
Deployability,"Hi Martin, it looks like this fix has not been pushed to bioconda. When I install from source all is good and the bug is fixed. However, when I use the conda install the bug remains.; Would it be possible to push the latest version of Mmseqs2 to bioconda?; Thanks",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/206#issuecomment-500815580:74,install,install,74,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/206#issuecomment-500815580,2,['install'],['install']
Deployability,"Hi Martin; ffindex_apply is awesome, I've been playing around and it is quite straight forward to plug it in our pipeline avoiding the generation of the files. Just for reference, a quick example on how to perform a MSA for each cluster with >= 10 members:; ```; #!/bin/bash. SEQS=$(perl -ne 'print $_' ""${1}""); if [ ""$(echo ""${SEQS}"" | grep -c '>')"" -ge 10 ]; then; echo ""Num seqs: $(echo ""${SEQS}"" | grep -c '>')""; REP=""$(echo ""${SEQS}"" | head -n 1 | cut -f 2 -d '|')""; ALN=cluster_""$(grep -n ""${REP}"" DB_clu_wide.tsv | cut -f1 -d ':')"".aln; famsa-1.2.1-osx <(echo ""${SEQS}"") ""${ALN}""; fi; ```; and we run it like:; ```; ffindex_apply DB_db_fa DB_db_fa.index -- bash aln.sh; ```. Many thanks!; Antonio",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/50#issuecomment-343730359:113,pipeline,pipeline,113,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/50#issuecomment-343730359,1,['pipeline'],['pipeline']
Deployability,"Hi Milot,. Thank you once again for the quick follow up. I've conducted a grid search to understand this issue myself, and I have used a kmer size of 10, with or without the spaced kmer mode previously, and found the same issue. Here are the parameters used for that run - ; --kmer-per-seq-scale 0 --min-seq-id 0.99 --cov-mode 3 -c 0.99 --cluster-mode 2 --spaced-kmer-mode 0 -k 10 --threads 16 --adjust-kmer-len 0 --ignore-multi-kmer 0. In other attempts, I have not used the kmer size parameter, and the pipeline automatically chooses 17 in that case, and the issue persists. In these pipelines with -c set to 0.99, and min-seq-id set to 0.99, I get excellent specificity (with a few or no clusters that have members that shouldn't be there), but about ~40% of all the representative sequences have another representative sequence in vicinity (Levenshtein distance of less than 10 out of 2500-3000 bp). This fraction drops to about ~15% if I use min-seq-id of 0.95, so I do find a gain in sensitivity. But 15% of all representative sequences is still quite a high number. What I don't understand is why those representative sequences weren't linked together with an edge when they check all boxes.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/489#issuecomment-923043155:505,pipeline,pipeline,505,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/489#issuecomment-923043155,2,['pipeline'],"['pipeline', 'pipelines']"
Deployability,"Hi Milot,. thanks for the super-quick fix. Have tried it with the new version and we don't get any error messages anymore :). Best,; Thomas. > Am 03.02.2017 um 16:24 schrieb Milot Mirdita <notifications@github.com>:; > ; > Hi Thomas,; > ; > Martin pushed an update earlier. Just pull the latest version and try again. You don't have to change anything else.; > ; > Best,; > Milot; > ; > —; > You are receiving this because you authored the thread.; > Reply to this email directly, view it on GitHub, or mute the thread.; >",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/15#issuecomment-277423828:258,update,update,258,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/15#issuecomment-277423828,1,['update'],['update']
Deployability,"Hi Mohammed,; I removed the --target-cov parameter and replaced it with a new parameter --cov-mode 1. The documentation was also updated:; https://github.com/soedinglab/MMseqs2/wiki#how-to-set-the-right-alignment-coverage-to-cluster. Why its automatically choosing the cascaded clustering:; We implemented some heuristics to automatically choose the best parameters originally for the clustering. Maybe we have to rethink that decision and remove those. Best regards,; Milot",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/39#issuecomment-316998868:129,update,updated,129,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/39#issuecomment-316998868,1,['update'],['updated']
Deployability,"Hi Raphael,; Sorry for the delay, I found some more issues with the profile search workflow. I am working on resolving those currently. I will update this issue once its ready, which should be soon.; Best regards,; Milot",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/59#issuecomment-362593172:143,update,update,143,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/59#issuecomment-362593172,1,['update'],['update']
Deployability,"Hi Ryan,. I updated the readme, it looks like you are using clang, which won't support OpenMP:. > Please install and use gcc from Homebrew, if you want to compile MMseqs2 on MacOS. The default MacOS clang compiler does not support OpenMP and MMseqs2 will not be able to run multithreaded. Use the following cmake call:; > ; > CXX=""$(brew --prefix)/bin/gcc-6"" cmake -DCMAKE_BUILD_TYPE=RELEASE -DCMAKE_INSTALL_PREFIX=. .. Not sure about the verbosity issue. Can you post the whole log?. Edit: Also please do not use the same folder (**.**) for the tmp folder, make a separate empty one.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/7#issuecomment-264623760:12,update,updated,12,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/7#issuecomment-264623760,3,"['RELEASE', 'install', 'update']","['RELEASE', 'install', 'updated']"
Deployability,"Hi Salvatore,. The Uniclust profiles need a different strategy to search against. The default profile search only works for at most a couple of 100k profiles, after that the memory requirements explode. We are currently working on a different profile search strategy for large databases. I'll update you once its ready. Best regards,; Milot",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/130#issuecomment-432997653:293,update,update,293,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/130#issuecomment-432997653,1,['update'],['update']
Deployability,"Hi Silas,; Thanks for your interest in this feature. We are working on this module. Everything is technically implemented, but the tests show that the sensitivity is not yet good enough. We will keep you updated in the next weeks about the progress on this. Cheers,; Clovis.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/95#issuecomment-396214009:204,update,updated,204,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/95#issuecomment-396214009,1,['update'],['updated']
Deployability,"Hi There,. I'm having problems trying to install fix #309. https://github.com/soedinglab/MMseqs2/pull/309. When trying to checkout the fix code I get an error.; https://github.com/soedinglab/MMseqs2/pull/309/commits/bff2883f04c9afa8af78cf259c0c1a9f3f719fd1; It appear that this commit is not part of the mmeseq main branch. . see below:. # git clone https://github.com/soedinglab/MMseqs2.git; Cloning into 'MMseqs2'...; remote: Enumerating objects: 284, done.; remote: Counting objects: 100% (284/284), done.; remote: Compressing objects: 100% (206/206), done.; remote: Total 34346 (delta 175), reused 143 (delta 78), pack-reused 34062; Receiving objects: 100% (34346/34346), 27.68 MiB | 13.72 MiB/s, done.; Resolving deltas: 100% (26632/26632), done.; Checking out files: 100% (968/968), done. # git checkout bff2883f04c9afa8af78cf259c0c1a9f3f719fd1; fatal: Not a git repository (or any parent up to mount point /powerapps); Stopping at filesystem boundary (GIT_DISCOVERY_ACROSS_FILESYSTEM not set). I also tried to download the SIMD as a sub module.; https://github.com/simd-everywhere/simde; And integrated it with mmeseq with no success. Can you please share a guide on how to install mmesq2 from source with this fix. Your help is much appreciated. Thanks. BR,; Eyal.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/310#issuecomment-649299464:41,install,install,41,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/310#issuecomment-649299464,6,"['install', 'integrat']","['install', 'integrated']"
Deployability,"Hi Thomas,. Martin pushed an update earlier. Just pull the latest version and try again. You don't have to change anything else. Best,; Milot",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/15#issuecomment-277275421:29,update,update,29,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/15#issuecomment-277275421,1,['update'],['update']
Deployability,"Hi and thank you for your bug report. Would you mind switching to MMseqs2, our new and much improved release? MMseqs1 is not supported anymore. With that said, it looks like your A.index file is corrupted. Check if it has the expected number of lines (=number of clusters) and also if for every line there are three values.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/4#issuecomment-250732627:101,release,release,101,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/4#issuecomment-250732627,1,['release'],['release']
Deployability,"Hi may ask a similar question, but I am using easy-linclust, i.e. my command line is:; `mmseqs easy-linclust input.fasta clusterResult tmp --min-seq-id 0.95 -c 0.95`; Do I use the same formula to calculate RAM usage? ; My FASTA is 1TB in size, has 2B sequences, average sequence length is 650 base pairs, and the alphabet is 4. ; I tried running this on an instance with 200GB of RAM, and it failed after more than 4 days, I assume that's where a step in the pipeline comes that requires more RAM, but it's expensive for me to keep trying different setups (both money wise and time wise). ; Can I use (or should I use) the --split-memory-limit option here as well..?; These were my instance resources for the run that I described; ![Screenshot 2024-05-09 at 12 21 50](https://github.com/soedinglab/MMseqs2/assets/16819349/0a9ed7a0-5829-46de-bbda-8277025423ed)",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/808#issuecomment-2102424577:459,pipeline,pipeline,459,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/808#issuecomment-2102424577,1,['pipeline'],['pipeline']
Deployability,Hi! I didn't test search anymore. Now I'm using only clustering with MMSeqs 2. But I've done several searches before with this result and didn't do anything with mmseqs installation. My version is 1-c7a89.,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/67#issuecomment-371223988:169,install,installation,169,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/67#issuecomment-371223988,1,['install'],['installation']
Deployability,Hi! I have tried to use the `databases` module but it is still not available. Is the new MMseqs version not released yet or have you decided to not add this module?,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/271#issuecomment-847729258:108,release,released,108,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/271#issuecomment-847729258,1,['release'],['released']
Deployability,"Hi, ; I'm running into the same error. My installation is via conda, so, has this been pushed to conda yet, or should I be compiling from source?. Thank you!",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/290#issuecomment-626146091:42,install,installation,42,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/290#issuecomment-626146091,1,['install'],['installation']
Deployability,"Hi, I do these ordinal names in Python when I run a pipeline that uses MMSeqs2 as a backend.; You need to rank the clusters by size, and top-down number it. This output:; ```; a a; a b; a c; a d; e e; e f; e h; i i; i j; ```; might become something like this:. ```; 0 a; 0 b; 0 c; 0 d; 1 e; 1 f; 1 h; 2 i; 2 j; ```. I hope I help someway.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/405#issuecomment-774499447:52,pipeline,pipeline,52,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/405#issuecomment-774499447,1,['pipeline'],['pipeline']
Deployability,"Hi,. After update to last version of mmseqs and hhsuite, I tried again.; I wrote this script inspired in [this tutorial](https://github.com/soedinglab/MMseqs2/wiki#how-to-create-a-hhblits-database). ```; #!/usr/bin/env bash. BASE=""subset""; FILE=""${BASE}.fa""; MMSEQDB=""${BASE}DB""; MMSEQPREF=""${BASE}PREFILTER""; MMSEQALN=""${BASE}ALN""; MMSEQCLU=""${BASE}CLU""; MMSEQMSA=""${BASE}MSA""; FILELOG=""job.log"". echo '#:: CREATEDB' &>> ${FILELOG} ;; mmseqs createdb ${FILE} ${MMSEQDB} &>> ${FILELOG}. echo '#:: PREFILTER' &>> ${FILELOG} ;; mmseqs prefilter ${MMSEQDB} ${MMSEQDB} ${MMSEQPREF} -s 7.5 &>> ${FILELOG}. echo '#:: ALING' &>> ${FILELOG} ;; mmseqs align ${MMSEQDB} ${MMSEQDB} ${MMSEQPREF} ${MMSEQALN} -e 0.00001 &>> ${FILELOG}. echo '#:: CLUST' &>> ${FILELOG} ;; mmseqs clust ${MMSEQDB} ${MMSEQALN} ${MMSEQCLU} &> ${FILELOG} &>> ${FILELOG}. echo '#:: RESULT2MSA' &>> ${FILELOG} ;; mmseqs result2msa ${MMSEQDB} ${MMSEQDB} ${MMSEQCLU} ${MMSEQMSA} --compress &>> ${FILELOG}. echo '#:: CREATE LINKS' &>> ${FILELOG} ;; ln -s ${MMSEQDB}_h ${MMSEQMSA}_header.ffdata &>> ${FILELOG}; ln -s ${MMSEQDB}_h.index ${MMSEQMSA}_header.ffindex &>> ${FILELOG}; ln -s ${MMSEQDB} ${MMSEQMSA}_sequence.ffdata &>> ${FILELOG}; ln -s ${MMSEQDB}.index ${MMSEQMSA}_sequence.ffindex &>> ${FILELOG}. echo '#:: BUILD HHBLITS COMPATIBLE' &>> ${FILELOG} ;; cstranslate -i ${MMSEQMSA} -o ${MMSEQMSA}_cs219 \; -A /home/linuxbrew/anaconda3/data/cs219.lib \; -D /home/linuxbrew/anaconda3/data/context_data.lib \; -x 0.3 -c 4 -I ca3m &>> ${FILELOG}; ```; It only fails on cstranslate with this error:; ```; ERROR: Unable to read input file 'subsetMSA'!; Reading context library for pseudocounts from context_data.lib ...; Reading abstract state alphabet from cs219.lib ...; ```. I'm attaching the the [sequence](https://github.com/soedinglab/MMseqs2/files/3095328/subset.fa.txt), [commands file (source)](https://github.com/soedinglab/MMseqs2/files/3095327/source.sh.txt) and [log file](https://github.com/soedinglab/MMseqs2/files/3095326/job",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/174#issuecomment-484587503:11,update,update,11,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/174#issuecomment-484587503,1,['update'],['update']
Deployability,"Hi,. I am experiencing a similar/the same issue when running convertalis. I've used a previous version a few months ago with no issues, so this seems like it's been introduced since then. When using the latest release (2-23394, I tried both avx and sse) I receive this output. ```; n8942188@lyra03:~/test_mmseqs2> /home/n8942188/various_programs/mmseqs2/bin/mmseqs convertalis mmseqstest_nucl.fasta_QDB mmseqtest_prots.fasta_TDB mmseqtest_SDB mmseqtest_SDB.m8 --threads 1; Program call:; mmseqstest_nucl.fasta_QDB mmseqtest_prots.fasta_TDB mmseqtest_SDB mmseqtest_SDB.m8 --threads 1. MMseqs Version: 2339462c06eab0bee64e4fc0ebebf7707f6e53fd; Alignment Format 0; No preload false; Early exit false; Database Output false; Threads 1; Verbosity 3. Query Header file: mmseqstest_nucl.fasta_QDB_h; Use index mmseqstest_nucl.fasta_QDB.sk6; Index version: 5.0.0; Generated by: 2339462c06eab0bee64e4fc0ebebf7707f6e53fd; KmerSize: 6; AlphabetSize: 21; Mask: 1; Type: 1; Spaced: 1; KmerScore: 0; SequenceType: 0; Headers: 1; ScoreMatrix: blosum62.out; Target Header file: mmseqtest_prots.fasta_TDB_h; Use index mmseqtest_prots.fasta_TDB.sk6; Index version: 5.0.0; Generated by: 2339462c06eab0bee64e4fc0ebebf7707f6e53fd; KmerSize: 6; AlphabetSize: 21; Mask: 1; Type: 1; Spaced: 1; KmerScore: 0; SequenceType: 0; Headers: 1; ScoreMatrix: blosum62.out; Alignment database: mmseqtest_SDB; Start writing file to mmseqtest_SDB.m8; Invalid database read for database data file=mmseqstest_nucl.fasta_QDB_h, database index=; ```. All the previous steps seem to work correctly (createdb, createindex, search) and have contents inside their files. For example, running head on the _QDB_h and _TDB_h files return the below result (both _h files are identical since my query is the nucleotide version of the prot sequence). ```; evm.model.utg902.1.8.5abb479e; evm.model.utg902.1.9.5abb479e; evm.model.utg902.1.10.5abb479e; evm.model.utg1004.80; evm.model.utg8847.1_evm.model.utg8847.2.3.5abb479e; evm.model.utg8847.1_evm.mod",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/64#issuecomment-377736994:210,release,release,210,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/64#issuecomment-377736994,1,['release'],['release']
Deployability,"Hi,. I have not heard from you guys for two days now. Is there any sort of update. . Thanks",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/55#issuecomment-357578307:75,update,update,75,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/55#issuecomment-357578307,1,['update'],['update']
Deployability,"Hi,. I use a new install of mmseqs2 and I change the temporary directory. Now it's work. . Thanks for your help.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/382#issuecomment-744279206:17,install,install,17,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/382#issuecomment-744279206,1,['install'],['install']
Deployability,"Hi,. I’m sorry but I can’t help. I couldn't use it at the end because of that problem.; Best,; Ana. > On 3 Aug 2023, at 08:11, csm276 ***@***.*** ***@***.***>> wrote:; > ; > ; > Hi, I got the same problem. When I run the commands in [Create a seqTaxDB for GTDB] I got this error: mmseqs createdb ssu.fna ssu130.102.99.4 Connecting to data.ace.uq.edu.au <http://data.ace.uq.edu.au/> (data.ace.uq.edu.au <http://data.ace.uq.edu.au/>)|130.102.99.4|:443... connected. HTTP request sent, awaiting response... 404 Not Found 2022-04-01 08:59:20 ERROR 404: Not Found. ... ... awk -F'[loc' '{ print $1}' ssu.fna | awk ""$buildNCBITax"" awk: fatal: cannot open file `ssu.fna' for reading (No such file or directory); > ; > Any help on this will be appreciated; > ; > Hi，; > How did you resolve this issue at the time, until today I have also encountered this problem and this site is not working; > https://data.ace.uq.edu.au/public/gtdb/data/releases/latest/ssu.fna <https://data.ace.uq.edu.au/public/gtdb/data/releases/latest/ssu.fna>; > Can you give me some advice? Thanks a lot.; > ; > —; > Reply to this email directly, view it on GitHub <https://github.com/soedinglab/MMseqs2/issues/548#issuecomment-1663347073>, or unsubscribe <https://github.com/notifications/unsubscribe-auth/APMXFJCAL7ML33M3S4GNM33XTM6K3ANCNFSM5QJH4VIA>.; > You are receiving this because you commented.; > . ---------------------------------------------; Ana María Cabello Pérez, PhD. Centro Oceanográfico de Málaga (IEO-CSIC); Instituto Español de Oceanografía; Puerto Pesquero s/n; 29640 Fuengirola, Málaga, Spain ; Tel: +34 95 219 71 24 ; ***@***.***; ---------------------------------------------",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/548#issuecomment-1664078972:931,release,releases,931,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/548#issuecomment-1664078972,2,['release'],['releases']
Deployability,"Hi,; I had used the explicit 'split' size, because I intended to create the index on a different machine than the one where the index would be used (which have less RAM). But because I'm now indexing on the fly, I no longer need to fiddle with the 'split' option :) Clearly a local SSD on each node would be ideal, but with index files as large as 200GB per database, this would require either deleting the index file after each job (therefore transferring the index file before each job, too much network traffic) or installing giant SSDs?...",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/3#issuecomment-252569542:518,install,installing,518,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/3#issuecomment-252569542,1,['install'],['installing']
Deployability,"Hi,; I'm glad that the cluster update works for you now. Concerning the generated TSV file:; (i) When you have two different databases DB_old and DB_new, then the ffindex keys do not necessarily match.; (ii) In fresh clustered db, the keys of the clusters get the same IDs as their representative sequences (the first appearing in the cluster). ; (iii) clusterupdate tries to have stable cluster keys (i.e. if a cluster is preserved between the old clustering and the updated one, then the associated key will remains the same). (i) + (ii) + (iii) => updated clustering databases ffindex-keys does not point anymore to the ffindex-keys of their representative sequence. . So that in your TSV file, the cluster composition should be right, but the representative sequence (first column) is wrong. If you want that the first columns actually contains the representative sequence of your clusters, you can pull the last commit of MMseqs2, re-do the cluster updating procedure and call createtsv this way:; mmseqs createtsv DB_new DB_new DB_clusterupdate DB_clusterupdate.tsv --first-seq-as-repr. Best,; Clovis.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/17#issuecomment-281069817:31,update,update,31,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/17#issuecomment-281069817,3,['update'],"['update', 'updated']"
Deployability,How did you install mmseqs and how do you call it?,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/480#issuecomment-1175793221:12,install,install,12,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/480#issuecomment-1175793221,1,['install'],['install']
Deployability,How do you check the release of MMSeqs2 that I am using? I just recently downloaded it a couple weeks ago.,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/429#issuecomment-809718243:21,release,release,21,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/429#issuecomment-809718243,1,['release'],['release']
Deployability,Huzzah! When can expect a new release with these changes incorporated?,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/pull/321#issuecomment-649263563:30,release,release,30,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/pull/321#issuecomment-649263563,1,['release'],['release']
Deployability,"I am not sure how the linuxbrew maintenance works. I think they occasionally merge back hombrew-core master into their repository. The new release is in homebrew-core, so it should appear sometime soonish in linuxbrew. Does the new release also work when you change the k-mer size?",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/189#issuecomment-483620666:139,release,release,139,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/189#issuecomment-483620666,2,['release'],['release']
Deployability,"I am not sure what exactly you are running currently. Could you make a list of all MMseqs2 commands you are running or link to the script you are running?. Using the Uniclust pipeline doesn't really make sense anymore, since it's extremely slow.; You should use multiple separate `mmseqs cluster` calls with `--cluster-reassign` at different `--min-seq-id` levels.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/397#issuecomment-765522172:175,pipeline,pipeline,175,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/397#issuecomment-765522172,1,['pipeline'],['pipeline']
Deployability,"I am sorry, I don't think we can help with MPI issues. A separate installation is probably a bad idea, since its usually tailored to the local cluster installation. I would suggest to contact your local IT support.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/101#issuecomment-401770487:66,install,installation,66,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/101#issuecomment-401770487,2,['install'],['installation']
Deployability,"I am still not 100% sure why the shared zstd works in debian. We use the zstd function `ZSTD_findDecompressedSize` that should only be available if `ZSTD_STATIC_LINKING_ONLY` is set and therefore zstd is linked statically. ; I just spent a few minutes trying to figure out how debian defeats this check, but didn't find where they do that. As we can't make sure that every native libzstd package does something similar, it's probably more appropriate to have distributions patch that themselves if they are confident it will work out fine. If `ZSTD_findDecompressedSize` becomes part of the stable zstd api, then we can provide as `USE_SYSTEM_ZSTD` option. Regarding xxhash I am very uncomfortable to encourage anyone to provide their own library. xxhash is a central part of the linclust algorithm and we have extensive tests to make sure that linclust produces exactly the same results on every platform/distribution/architecture. I think scientific reproducibility outweighs other concerns for our software.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/411#issuecomment-777511188:473,patch,patch,473,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/411#issuecomment-777511188,1,['patch'],['patch']
Deployability,"I am trying to parallelize the pipeline so that each sample runs on a single core with two threads. The computer I am running this on has 80 cpus and about 1.5TB RAM. So I could use more processors per sample, but I wanted to optimize this for single processor per sample. How many processors did you run your job on that took 10 minutes?. I can try using /dev/shm instead of tmp and see if it makes any difference. We also have a Solid state drive on this computer. Do you think it would be faster if my database is on this drive?. regards,. Dhwani. ________________________________; From: Martin Steinegger <notifications@github.com>; Sent: Wednesday, July 3, 2019 5:18:16 PM; To: soedinglab/MMseqs2; Cc: Dhwani Desai; Mention; Subject: Re: [soedinglab/MMseqs2] Speed up mmseqs for large database and multiple large query sets by loading target into memory (#214). This is way too slow. I just ran something in a similar scale (query size 10005733, target size 101055107) in less than 10 minutes total. Could it be that your file system is very slow? What would happen if you set the tmp to /dev/shm? Why do you just use two threads? What kind of CPUs does the computer have?. —; You are receiving this because you were mentioned.; Reply to this email directly, view it on GitHub<https://github.com/soedinglab/MMseqs2/issues/214?email_source=notifications&email_token=ABYZBDIRYJK5AJLDI4NZQVTP5UCQRA5CNFSM4H333Q62YY3PNVWWK3TUL52HS4DFVREXG43VMVBW63LNMVXHJKTDN5WW2ZLOORPWSZGODZFSEZA#issuecomment-508240484>, or mute the thread<https://github.com/notifications/unsubscribe-auth/ABYZBDMXQ2BW72344I3OKHDP5UCQRANCNFSM4H333Q6Q>.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/214#issuecomment-508484622:31,pipeline,pipeline,31,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/214#issuecomment-508484622,1,['pipeline'],['pipeline']
Deployability,"I am upgrading my system(cmake, g++ etc) to make suitable for MMseq2 installation. Once it is done I will switch to MMseqs2. The A.index file is totally empty. I am unable to figure out the possible solution.; I have tried multiple times with all input files formatted correctly. Thanks in advance.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/4#issuecomment-251088900:69,install,installation,69,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/4#issuecomment-251088900,1,['install'],['installation']
Deployability,"I assume you are using the `easy-taxonomy`? I think it's currently broken, I am in the process of fixing that again. I'll update you once everything works again.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/387#issuecomment-757961804:122,update,update,122,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/387#issuecomment-757961804,1,['update'],['update']
Deployability,"I can't reproduce the issue locally. It doesn't get stuck in the index building. How did you install MMseqs2 (condo, self-compiled etc?) Whats your hardware specs?. If your computer supports AVX2, please try using the avx2 binary at https://mmseqs.com/latest.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/382#issuecomment-741791452:93,install,install,93,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/382#issuecomment-741791452,1,['install'],['install']
Deployability,"I checked over my code, and I don't see why `extractorfs` is being called during `mmseqs clusterupdate`. My entire workflow is:. * existing mmseqs db of full length gene amino acid sequences (created via `mmseqs createdb`); * existing mmseqs cluster db for all of the sequences in the db (created via `mmseqs linclust`); * 18 threads used, so the cluster db files end in `.<#>`; * new db of full length gene amino acid sequences (created via `mmseqs createdb`); * no overlap with the original set of sequences; * concat of both sequence databases via `mmseqs concatdbs` (also done on the `*_h` files); * `mmseqs clusterupdate {original_seq_db} {concat_seq_db} {cluster_db} {output_db} {output_cluster_db} {tmp_dir}`. Is there anything that I can do to get `clusterupdate` working in my case? For instance, can I change the `updatedClust` symlink to `clusters_db.0`?",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/333#issuecomment-665613918:824,update,updatedClust,824,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/333#issuecomment-665613918,1,['update'],['updatedClust']
Deployability,I did run this with the newest release. Did you want to install the newest version on the master branch?,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/256#issuecomment-579509968:31,release,release,31,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/256#issuecomment-579509968,2,"['install', 'release']","['install', 'release']"
Deployability,"I did what you suggested. It worked well. Thanks. On Fri, Jul 10, 2020, 16:44 Milot Mirdita <notifications@github.com> wrote:. > We introduced the module after the 11th release. It will be part of the; > next one.; >; > You can either use the non ""easy"" workflow, i.e. something like:; >; > mmseqs createdb query.fasta qdb; > mmseqs createdb target.fasta tdb; > mmseqs rbh qdb tdb res tmp; > mmseqs convertalis qdb tdb res res.m8; >; > or you can either download precompiled binaries from the latest git commit; > at https://mmseqs.com/latest or build the code from source.; >; > —; > You are receiving this because you authored the thread.; > Reply to this email directly, view it on GitHub; > <https://github.com/soedinglab/MMseqs2/issues/332#issuecomment-656621988>,; > or unsubscribe; > <https://github.com/notifications/unsubscribe-auth/AE545CK2WHJAOVZ6JC27IUDR23Z2BANCNFSM4OWPFQCA>; > .; >",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/332#issuecomment-656969705:169,release,release,169,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/332#issuecomment-656969705,1,['release'],['release']
Deployability,I didnt hear any update. I considere this issues resolved. Please open it again if the problem still occurs.,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/7#issuecomment-266994149:17,update,update,17,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/7#issuecomment-266994149,1,['update'],['update']
Deployability,"I don't think I have permissions to install, but i can ask cluster admin to do it. Should i ask them to install SSE41?",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/90#issuecomment-392935049:36,install,install,36,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/90#issuecomment-392935049,2,['install'],['install']
Deployability,I downloaded the latest official release (MMseqs2 Release 8-fac81) and everything works with that one.,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/195#issuecomment-485932290:33,release,release,33,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/195#issuecomment-485932290,2,"['Release', 'release']","['Release', 'release']"
Deployability,"I encountered the same issue while working with mmseqs version [14-7e284](https://github.com/soedinglab/MMseqs2/tree/14-7e284) and GTDB r214, using a Linux server (Ubuntu 22.04 LTS; CPU with SSE/AVX2 support and 512 GB RAM). Although there is a lot of overlap with the post by @mlcoleman previously and the discussion by @mherold1 , I include some details below about the problems I ran into and how I addressed them. ## Problem description; After making a seqdb for the GTDB, there seems to be a collision of genome IDs between different genomes in the seqdb's `gdtb.lookup` file. As mentioned by @mlcoleman , these ID collisions seem to disrupt mmseqs taxonomy workflows downstream. ## Steps to reproduce; 1. Download `gtdb.tar.gz` as done in the `data/workflow/databases.sh` script (or you can just run: `wget -o gdtb.tar.gz https://data.ace.uq.edu.au/public/gtdb/data/releases/latest/genomic_files_reps/gtdb_proteins_aa_reps.tar.gz`); 2. Import `gtdb.tar.gz` as a tardb via `mmseqs tar2db gtdb.tar.gz tardb --tar-include 'faa.gz$'`; 3. Run `mmseqs createdb tardb gtdb`. `mmseqs createdb` finishes without error, but the resulting `gtdb.lookup` file seems to assign the wrong genome IDs (resulting in ID collisions) for any genomes with an ID over 65535. Meanwhile, the correct IDs seem to be assigned in `gtdb.source`. #### For example:. Last few lines of `gtdb.source` (`tail gtdb.source`):; ```; 85195 RS_GCF_014201515.1; 85196 RS_GCF_003977665.1; 85197 RS_GCF_007922615.2; 85198 GB_GCA_002389765.1; 85199 RS_GCF_001440475.1; 85200 GB_GCA_015059865.1; 85201 GB_GCA_900546895.1; 85202 GB_GCA_017621015.1; 85203 GB_GCA_015486425.1; 85204 GB_GCA_934565415.1; ```; It seems like the left column is the genome ID, and the right column is the genome name in the GTDB. Everything seems OK with this file. Last few lines of `gtdb.lookup` (`tail gtdb.lookup`); ```; 256163105 CAKTHQ010000047.1_16 19668; 256163106 CAKTHQ010000050.1_5 19668; 256163107 CAKTHQ010000052.1_8 19668; 256163108 CAKTHQ010000056.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/729#issuecomment-1691160625:872,release,releases,872,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/729#issuecomment-1691160625,1,['release'],['releases']
Deployability,I finished up the integration in #321. Thanks a lot again!,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/pull/309#issuecomment-649132530:18,integrat,integration,18,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/pull/309#issuecomment-649132530,1,['integrat'],['integration']
Deployability,"I fixed this issue recently in https://github.com/soedinglab/MMseqs2/issues/379. It will be part of the next release, which should happen somewhat soonish. In the meantime you can use the static precompiled binaries available at https://mmseqs.com/latest/.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/399#issuecomment-767474520:109,release,release,109,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/399#issuecomment-767474520,1,['release'],['release']
Deployability,I found one memory issue when giving only extremely short sequences to MMseqs2.; You can probably work around this issue in release 13 by adding one fake sequence that is longer than 20 AA residues to the input file. . I would also recommend to use the following parameters `-k 5 --spaced-kmer-mode 0 --comp-bias-corr 0 --mask 0` for clustering such extremely short sequences. You might also want to add `-e inf` as E-values are essentially meaningless for such short sequences. In this case you would only cluster based on seq. id. and coverage.,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/449#issuecomment-833923971:124,release,release,124,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/449#issuecomment-833923971,1,['release'],['release']
Deployability,I get release 13 when I create a fresh conda env.; What does `conda list` say when you install MMseqs2?,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/428#issuecomment-809685553:6,release,release,6,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/428#issuecomment-809685553,2,"['install', 'release']","['install', 'release']"
Deployability,"I get the helpfulness of the multi-output, but it really does make integrating mmseqs in a snakemake pipeline a pain. It would be helpful to know which files are actually the input and output of each subcommand, but I get that it would be a large change to the script help docs, and if you were to change the implementation, you'd have to change all of the docs. . I don't know why `clusterupdate` is using `extractorfs` either. For my test, I'm just taking some full-length gene AA sequences (generated by prodigal from a set of genomes), and trying to update those with a few more full-length gene AA sequences. I'll double check my code.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/333#issuecomment-664823477:67,integrat,integrating,67,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/333#issuecomment-664823477,3,"['integrat', 'pipeline', 'update']","['integrating', 'pipeline', 'update']"
Deployability,"I get the same type of error when using the parallel MPI version with ""RUNNER=mpirun -np 8"" . I only encountered this error while testing. I ideally would like to use a cluster configuration but will not be able to if this error persists.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/284#issuecomment-594847367:177,configurat,configuration,177,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/284#issuecomment-594847367,1,['configurat'],['configuration']
Deployability,I have added the support to index nucleotide sequences. We will release a new version of mmseqs2 soon.,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/175#issuecomment-477738710:64,release,release,64,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/175#issuecomment-477738710,1,['release'],['release']
Deployability,I have tried to update my clusters with the static compiled verison of mmseq2.; command used for updating clusters. ```; mmseqs clusterupdate old_DB new_DB old_DB_clu new_DB_clu tmp2/; ```. Errors noticed at various levels:. ```; Failed to mmap memory dataSize=0 File=tmp2//NEWDB.newSeqs; Failed to mmap memory dataSize=0 File=tmp2//NEWDB.newSeqs; mv: cannot stat `/tmp2/aln_4': No such file or directory; Failed to mmap memory dataSize=0 File=tmp2//NEWDB.newSeqs; Could not open data file tmp2//newSeqsHits.swapped.all!; awk: cmd. line:1: fatal: cannot open file `tmp2//newSeqsHits.index' for reading (No such file or directory); mv: cannot stat `tmp2//aln_*': No such file or directory; mv: cannot stat `tmp2//pref_*': No such file or directory; mv: cannot stat `tmp2//clu_*': No such file or directory; mv: cannot stat `tmp2//input_*': No such file or directory; Failed to mmap memory dataSize=0 File=tmp2//toBeClusteredSeparately; Failed to mmap memory dataSize=0 File=tmp2//toBeClusteredSeparately; awk: cmd. line:1: fatal: cannot open file `tmp2//clu_redundancy.index' for reading (No such file or directory); Failed to mmap memory dataSize=0 File=tmp2//toBeClusteredSeparately; Could not open data file tmp2//input_step_redundancy!; Could not open data file tmp2//input_step_redundancy!; Could not open data file tmp2//input_step_redundancy!; Failed to mmap memory dataSize=0 File=tmp2//toBeClusteredSeparately; mv: cannot stat `tmp2//clu': No such file or directory; mv: cannot stat `tmp2//clu.index': No such file or directory; ```,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/4#issuecomment-253194194:16,update,update,16,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/4#issuecomment-253194194,1,['update'],['update']
Deployability,I have updated the wiki. Sorry for the delay. I will build a more convenient way to create taxonomical databases soon. https://github.com/soedinglab/MMseqs2/wiki#taxonomy-assignment-using-mmseqs-taxonomy,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/132#issuecomment-436739404:7,update,updated,7,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/132#issuecomment-436739404,1,['update'],['updated']
Deployability,"I just hit this as well. The error message doesn't make the formatting problem obvious, but after finding this thread it was a quick and easy fix to manually correct the fasta lines that start with `> ` to begin with `>`. If writing the logic to handle parsing both `> ` & `>` is more trouble than it is worth, revising the error message to indicate that the user may only need to fix the spacing issue and then try again would be very helpful! The file that caused the issue for me was downloaded from a small database maintained by an individual research lab, so I assume the issue was because the fasta file was likely manually updated at some point rather than machine-generated. That's just a suggestion though - I was able to find this thread and solution within easily enough and there seem to be a handful of existing fasta validator tools that could also help users identify the root cause of their issue without internalizing that logic into this suite of tools as well. P.S. thanks for MMSeqs!",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/446#issuecomment-2192800896:631,update,updated,631,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/446#issuecomment-2192800896,1,['update'],['updated']
Deployability,I just looked up when the commit you listed (`113e3212c137d026e297c7540e1fcd039f6812b1`) is is from and its ancient. please update to the latest release and everything should work fine.,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/851#issuecomment-2197779147:124,update,update,124,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/851#issuecomment-2197779147,2,"['release', 'update']","['release', 'update']"
Deployability,"I just successfully created, indexed, and searched NR, getting the 'expected' output, using a fresh download of the static build, but on looking at the output it seems that the static build is now at the same version as the last commit on GitHub. Unfortunately, I deleted the older version when I built from source.; Not sure what more I can do to help; the issue was either fixed in the new release or it was user error. Regardless, I'm glad it seems to be working now. I'm pretty excited about your software, so thanks for putting it out there.; -Steve",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/16#issuecomment-278849748:392,release,release,392,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/16#issuecomment-278849748,1,['release'],['release']
Deployability,"I realize that those are both required libraries, and needed for many platforms. . The request is for adding something like USE_SYSTEM_ZSTD and USE_SYSTEM_XXHASH. The Debian patch for system zstd has the minor changes needed except the cmake ifdefs. Debian also uses system gzstream (Debian is an outlier in having that lib), but no patch for xxhash. xxhash is central to your algorithm and also latest-release in your repo, but it's in pretty active development with fairly major bug fixes and performance improvements in the last 6 months, so it's good to have a pinned version in the repo that can be overridden with system if desired. Being able to build shared libs is pretty important, in either case.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/411#issuecomment-777005754:174,patch,patch,174,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/411#issuecomment-777005754,3,"['patch', 'release']","['patch', 'release']"
Deployability,I see that this function is still defined still inside the static linking only block:; Latest release: https://github.com/facebook/zstd/blob/v1.4.8/lib/zstd.h#L1282; Current git HEAD: https://github.com/facebook/zstd/blob/f39178b445f96b456881268d29779964633f527d/lib/zstd.h#L1297. But I added a cmake flag to use the (static) system provided libzstd. Hope it helps.,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/411#issuecomment-779222347:94,release,release,94,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/411#issuecomment-779222347,1,['release'],['release']
Deployability,"I still can't manage to compile the code on our servers. I get many instances of this error (or similar):; ```; lib/simde/simde/x86/avx2.h:718:62: error: cannot convert ‘simd_int {aka __vector(4) long long int}’ to ‘__vector(4) long int’ for argument ‘1’ to ‘__vector(4) long int simde_mm256_cmpeq_epi8(__vector(4) long int, __vector(4) long int)’; ```. Any idea what's happening?. ```; $ gcc -v; Using built-in specs.; COLLECT_GCC=gcc; COLLECT_LTO_WRAPPER=/usr/lib/gcc/x86_64-linux-gnu/5/lto-wrapper; Target: x86_64-linux-gnu; Configured with: ../src/configure -v --with-pkgversion='Ubuntu 5.4.0-6ubuntu1~16.04.12' --with-bugurl=file:///usr/share/doc/gcc-5/README.Bugs --enable-languages=c,ada,c++,java,go,d,fortran,objc,obj-c++ --prefix=/usr --program-suffix=-5 --enable-shared --enable-linker-build-id --libexecdir=/usr/lib --without-included-gettext --enable-threads=posix --libdir=/usr/lib --enable-nls --with-sysroot=/ --enable-clocale=gnu --enable-libstdcxx-debug --enable-libstdcxx-time=yes --with-default-libstdcxx-abi=new --enable-gnu-unique-object --disable-vtable-verify --enable-libmpx --enable-plugin --with-system-zlib --disable-browser-plugin --enable-java-awt=gtk --enable-gtk-cairo --with-java-home=/usr/lib/jvm/java-1.5.0-gcj-5-amd64/jre --enable-java-home --with-jvm-root-dir=/usr/lib/jvm/java-1.5.0-gcj-5-amd64 --with-jvm-jar-dir=/usr/lib/jvm-exports/java-1.5.0-gcj-5-amd64 --with-arch-directory=amd64 --with-ecj-jar=/usr/share/java/eclipse-ecj.jar --enable-objc-gc --enable-multiarch --disable-werror --with-arch-32=i686 --with-abi=m64 --with-multilib-list=m32,m64,mx32 --enable-multilib --with-tune=generic --enable-checking=release --build=x86_64-linux-gnu --host=x86_64-linux-gnu --target=x86_64-linux-gnu; Thread model: posix; gcc version 5.4.0 20160609 (Ubuntu 5.4.0-6ubuntu1~16.04.12); ```",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/pull/309#issuecomment-630106495:1648,release,release,1648,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/pull/309#issuecomment-630106495,1,['release'],['release']
Deployability,I think I fixed the same issue recently. You can either compile from git or download the latest statically compiled binaries from mmseqs.com/latest. The fix will be part of the next release that will be available very soon.,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/415#issuecomment-781922599:182,release,release,182,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/415#issuecomment-781922599,1,['release'],['release']
Deployability,"I think I found the issue, its mostly unrelated to the regex itself. . When an entry is skipped, we don't correctly update the data offset for the next tar entry.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/561#issuecomment-1173383836:116,update,update,116,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/561#issuecomment-1173383836,1,['update'],['update']
Deployability,I think MMseqs2 12 should now deal with this better. Could you please update? We resolved many issues with cluster updating in the last release.,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/362#issuecomment-709046082:70,update,update,70,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/362#issuecomment-709046082,2,"['release', 'update']","['release', 'update']"
Deployability,I think it's probably salvageable. I'll need to look over your output in detail. . Another question: This was clustered using `easy-linclust` not using `easy-cluster` right? Cluster update currently will try to use the normal clustering for the sequences that cannot be assigned to an existing cluster. This will also likely be very slow (probably slower than clustering anew using linclust). We will have to build support for updating with linclust.,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/348#issuecomment-688971058:182,update,update,182,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/348#issuecomment-688971058,1,['update'],['update']
Deployability,"I think the issue might be with my OpenMPI installation more generally, as I cannot get their hello_c program to function properly. Do you suggest locally installing a separate local OpenMPI installation? I am having trouble figuring out how to configure everything so as to work properly. Thanks!",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/101#issuecomment-401577332:43,install,installation,43,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/101#issuecomment-401577332,3,['install'],"['installation', 'installing']"
Deployability,"I think we have computed the wrong thing at some point and never updated the number. 130GB sounds about right. . The function that computes a more accurate memory estimate can be found in the code:; https://github.com/soedinglab/MMseqs2/blob/d4841a8efad066e9758b6626cc64c5ef5ee53055/src/prefiltering/Prefiltering.cpp#L1069. You will still find the same two parts as listed above. However, the largest chunk of memory that is used now with modern machines is the per thread memory. A dual socket 64-core CPU machine with hyper threading will try to use about 500GB total RAM in per-thread memory. Thus, its usually a good idea to not use hyperthreading with MMseqs2 as it only has minor speed benefits for a large increase of memory.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/808#issuecomment-2063458294:65,update,updated,65,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/808#issuecomment-2063458294,1,['update'],['updated']
Deployability,"I think with the latest commit it should finally work fine. Please update to the latest version and delete the following files. Then you can rerun the previous command, it should continue and work fine now. ```; rm -f tmp/2765600628860701936/top1* tmp/2765600628860701936/aligned*; ```. Thanks a lot for uncovering all these bugs!",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/80#issuecomment-381540258:67,update,update,67,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/80#issuecomment-381540258,1,['update'],['update']
Deployability,I took a look at the issue yesterday. The problem should already be fixed in Git. Could you please try downloading the latest statically compiled version or build MMseqs2 yourself?. We will make a new release soon.,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/259#issuecomment-571942512:201,release,release,201,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/259#issuecomment-571942512,1,['release'],['release']
Deployability,I tried to reproduce the behavior but I could not. I did not see this message before in my runs. But I think your results will be fine if not all sequences reports this warning. But just to figure out what does wrong: Could you provide us the MSA where this issue occurs? I have create a patch which should print out the MSA if the warning occurs ( https://gist.github.com/martin-steinegger/2ecff9e259d97eca3f9c45c69912d113 ). Thanks a lot.,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/72#issuecomment-371032617:288,patch,patch,288,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/72#issuecomment-371032617,1,['patch'],['patch']
Deployability,"I try to reproduce this bug on my Mac with macOS Sierra with gcc-6.2 (brew install gcc).; But I can still compile it. DId you compile gcc-6 with or without multilib support? ; The new gcc with multlib support seems to have troubles with openmp. ; If you have multilib support try to run ""brew reinstall gcc --without-multilib"". Maybe this can solve the problem.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/8#issuecomment-265665662:75,install,install,75,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/8#issuecomment-265665662,1,['install'],['install']
Deployability,I unprefixed the MMseqs2 macros and replaced our undefined version xxhash with the latest release v0.8.; I'll merge once I get a green light from the CI. Thanks a lot :),MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/pull/389#issuecomment-755369024:90,release,release,90,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/pull/389#issuecomment-755369024,1,['release'],['release']
Deployability,"I updated the documentation. . MMseqs2/Linclust and Linclust has three main criteria to link two sequences by an edge:. (1) a maximum E-value threshold (option -e ). (2) a minimum sequence identity (--min-seq-id [0,1]) with option --alignment-mode 3 defined as the number of identical aligned residues divided by the number of aligned columns including internal gap columns, or, by default, defined by a highly correlated measure, the equivalent similarity score of the local alignment (including gap penalties) divided by the maximum of the lengths of the two locally aligned sequence segments. The score per residue equivalent to a certain sequence identity is obtained by a linear regression using thousands of local alignments as training set. (3) a minimum coverage (option -c [0,1], which is defined by the number of aligned residue pairs divided by either the minimum of the length of query/centre and target/non-centre sequences (default mode, --cov-mode 0), or by the length of the target/non-centre sequence (--cov-mode 1), or by the length of the query/centre (--cov-mode 2);. https://github.com/soedinglab/MMseqs2/wiki#clustering-criteria. @ksteczk `--clustering-mode 1 ` is similar to BLASTclust. Each connected component is a seperate cluster. See https://en.wikipedia.org/wiki/Connected_component_(graph_theory)",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/73#issuecomment-373644484:2,update,updated,2,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/73#issuecomment-373644484,1,['update'],['updated']
Deployability,I updated the scripts on how to setup the template server in the colabfold repository https://github.com/sokrypton/ColabFold/tree/main/MsaServer.,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/621#issuecomment-1285072520:2,update,updated,2,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/621#issuecomment-1285072520,1,['update'],['updated']
Deployability,"I used the following command, where `queryDB` is a sequence database created using a fasta file with 25 sequences. ; ```; mmseqs search test/query/queryDB ../nrDB resultDB tmp --num-iterations 3 --start-sens 1 --sens-steps 3 -s 7; ```; Only three files were created as the result:; ```; 1.5M Jan 30 11:52 resultDB; 4 Jan 30 11:52 resultDB.dbtype; 392 Jan 30 11:52 resultDB.index; ```; If I do `head -n 5 resultDB` I get the following:; ```; 329161555 773 1.00 2.658E-249 0 382 383 0 382 383 383M; 121000224 437 0.538 5.873E-133 0 382 383 0 389 390 217M7D166M; 187343874 431 0.520 6.546E-131 0 382 383 0 389 390 217M7D166M; 190748379 428 0.517 5.905E-130 0 382 383 0 389 390 217M7D166M; 100067444 424 0.513 1.872E-128 0 382 383 0 392 393 219M8D80M2D84M; ```; If I do `head -n resultDB.index` I get the following:; ```; 0 0 46663; 1 46663 71880; 2 118543 58035; 3 176578 50784; 4 227362 80826; ```. I also tried searching against my `nrDB` using a profileDB, and similarly got only those three files (`resultDB`, `resultDB.dbtype`, and `resultDB.index`) as the result. Here is the command I used there:; ```; mmseqs search ../profileDB /home/scratch60/new_ndDB/nrDB resultDB tmp --start-sens 1 --sens-steps 3 -s 7 -e 0.005 -a 1; ````. I see that makes sense about `taxDB`!. Edit: also I don't know if I mentioned that I am using `MMseqs2 Version: 6672bbc9de55e89b011c8a055982a2644d31a467` which was acquired and installed in mid-January. I am running it on my university's computer cluster (Red Hat Enterprise Linux Server 7.7 (Maipo)) which I ssh into.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/401#issuecomment-771814053:1410,install,installed,1410,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/401#issuecomment-771814053,1,['install'],['installed']
Deployability,"I was trying to avoid MPI so far... Mostly because I run mmseqs as part of a nextflow pipeline, and I'm not even sure if it is possible to use MPI from there, because nextflow usually takes care of the parallelization.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/376#issuecomment-734387106:86,pipeline,pipeline,86,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/376#issuecomment-734387106,1,['pipeline'],['pipeline']
Deployability,"I was using `MMseqs2 Release 6-f5a1c` version and I can executed result2flat over MSA file. Anyway, Is there any way to convert the result2msa output to a flat-file (fasta or similar)",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/246#issuecomment-557532623:21,Release,Release,21,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/246#issuecomment-557532623,1,['Release'],['Release']
Deployability,I will close this issues for now. Please reopen it if you have an update.,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/187#issuecomment-498860813:66,update,update,66,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/187#issuecomment-498860813,1,['update'],['update']
Deployability,I would love to know what is the substitution matrix configuration for nucleotides too. Which one is correct?,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/731#issuecomment-2034719433:53,configurat,configuration,53,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/731#issuecomment-2034719433,1,['configurat'],['configuration']
Deployability,"I would recommend to install MMseqs2 on Windows through WSL2. See the official [WSL guide](https://docs.microsoft.com/en-us/windows/wsl/install) for install instructions. The mingw MMseqs2 version for Windows suffers from relatively poor memory performance in some modules. We tried to improve that, however its still slower than the Linux version. I am not sure what your exact issue is. You might have to try to start MMseqs2 (`mmseqs.bat`) for the first time as administrator, so all links are setup correctly. Subsequent calls should then work without admin rights.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/574#issuecomment-1173277178:21,install,install,21,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/574#issuecomment-1173277178,6,['install'],['install']
Deployability,"I would recommend to just use UniProt instead of NR. it’s much better maintained, especially with the versioning. Any annotations against the NR are essentially unreproducible due to the lack of versioning by the NCBI. I don’t plan on integrating the blast databases for the foreseeable future.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/893#issuecomment-2390571174:235,integrat,integrating,235,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/893#issuecomment-2390571174,1,['integrat'],['integrating']
Deployability,"I'll leave this ticket open, until I updated the documentation.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/65#issuecomment-367303895:37,update,updated,37,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/65#issuecomment-367303895,1,['update'],['updated']
Deployability,I'll update #565 when we have a solution.,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/557#issuecomment-1174543109:5,update,update,5,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/557#issuecomment-1174543109,1,['update'],['update']
Deployability,"I'm not able to recreate this error with other data sets with the same configuration (i.e. adding the same data set + a completely separate outgroup). I was able to get concatdbs to run properly, so other runs have worked without issue.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/103#issuecomment-405613850:71,configurat,configuration,71,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/103#issuecomment-405613850,1,['configurat'],['configuration']
Deployability,"I'm not sure, I installed a few months ago at most though, and I don't have the flexibility to reinstall a new mmseqs version at the moment.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/4#issuecomment-384870215:16,install,installed,16,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/4#issuecomment-384870215,1,['install'],['installed']
Deployability,"I'm optimistic that this PR, a couple of typo fixes in the `README.md`, hasn't actually broken the build. I think the failed check is just due to an error in the package configuration of the Travis-CI instance in one of the Clang builds. I think that restarting that build will probably do the trick.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/pull/44#issuecomment-326970054:170,configurat,configuration,170,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/pull/44#issuecomment-326970054,1,['configurat'],['configuration']
Deployability,"I'm running this right now. I updated to the latest issue, and that did not fix the problem :/ .",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/277#issuecomment-590327077:30,update,updated,30,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/277#issuecomment-590327077,1,['update'],['updated']
Deployability,"If I compile with GCC 10 (just make USE_GCC=yes in FreeBSD ports), it does not hang with only SSE. I'd hate to add such a heavy dependency to the port, though, so it would be good to figure out what's going wrong with clang 10. The PowerEdge has 32 hyperthreads and 64G RAM. Is 2G/thread not enough for SLICEPROFILE? If not, how can I limit the number of threads in the regression tests? It doesn't seem to respect OMP_NUM_THREADS=16. I still see CPU spike to > 3000%. I'll test your patches later. Thanks...",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/460#issuecomment-868837240:484,patch,patches,484,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/460#issuecomment-868837240,1,['patch'],['patches']
Deployability,"If a center-star alignment is good enough, you can use the `result2msa` module. You can use the `apply` module to execute any external program. We do this step for building the Uniclust databases. Though slightly more involved to handle some edge cases of the alignments tools and with the equivalent tool to `apply` from the `ffindex` package. See: ; https://github.com/soedinglab/uniclust-pipeline/blob/develop/hhdatabase/make_hhdatabase.sh#L2; https://github.com/soedinglab/uniclust-pipeline/blob/develop/hhdatabase/make_a3m.sh#L13; https://github.com/soedinglab/uniclust-pipeline/blob/develop/hhdatabase/fasta_to_msa_a3m.sh#L1",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/60#issuecomment-376547387:391,pipeline,pipeline,391,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/60#issuecomment-376547387,3,['pipeline'],['pipeline']
Deployability,"If you have MMseqs2 release 14 installed, then `--msa-format-mode 6` should be available in the `result2msa` module. Could you please post the full terminal output?",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/681#issuecomment-1465528470:20,release,release,20,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/681#issuecomment-1465528470,2,"['install', 'release']","['installed', 'release']"
Deployability,"If you have `aria2c` installed, it will prefer that over `curl` or `wget` and use multiple download connections. This should speed up downloads quite a bit.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/542#issuecomment-1054055542:21,install,installed,21,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/542#issuecomment-1054055542,1,['install'],['installed']
Deployability,"If your cluster has a module system, use that MPI and make sure no MPI packages from the OS package manager are installed. Thats one common problem.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/164#issuecomment-463139431:112,install,installed,112,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/164#issuecomment-463139431,1,['install'],['installed']
Deployability,Is there a way to specify the URL when calling `mmseqs databases`? . The version of `mmseqs2` installed via conda install still doesn't have this correction.,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/772#issuecomment-1988520904:94,install,installed,94,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/772#issuecomment-1988520904,2,['install'],"['install', 'installed']"
Deployability,Is there any update on this? Suggestions for creating a mmseqs2 database of this size?,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/495#issuecomment-1758196191:13,update,update,13,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/495#issuecomment-1758196191,1,['update'],['update']
Deployability,Is there any update?,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/192#issuecomment-625663750:13,update,update,13,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/192#issuecomment-625663750,1,['update'],['update']
Deployability,Is this with the latest release? We had a few changes a while ago that are only officially part as of release 15; Maybe the issue is already fixed. I don't see anything immediately wrong. . Could you post the full command line output of both calls?,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/777#issuecomment-1808160547:24,release,release,24,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/777#issuecomment-1808160547,2,['release'],['release']
Deployability,It appears like some of the CI tests are not passing. Am I missing something or are parts of the CI pipeline broken? Can someone help me on that?,MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/pull/647#issuecomment-1347358706:100,pipeline,pipeline,100,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/pull/647#issuecomment-1347358706,1,['pipeline'],['pipeline']
Deployability,"It didn't cause a crash ! . So now I had the same log error: ; ```; data/04_taxgenes/contigs_tax/14073767031253215106/easy-taxonomy.sh: line 55: 19300 Segmentation fault ""$MMSEQS"" addtaxonomy ""${TARGET}"" ""${TMP_PATH}/result_aln_swapped_sum"" ""${TMP_PATH}/result_aln_swapped_sum_tax"" ${ADDTAXONOMY_PAR}; ```. In output: ; ```; Time for merging to result_aln_swapped_sum: 0h 0m 48s 61ms; Time for processing: 0h 1m 27s 597ms; Error: filterdb died; ```. But doing the `gdb` run in our master node it worked without any problem. . In my cluster we work through module installation for the programs, but I wanted to try out beforehand a local copy of the bin without being properly compiled in the system. Could that be the problem?. (I am basically running `mmseqs2` executing the script as follows: `./scripts/mmseqs_latest/mmseqs/bin/mmseqs <opts>`",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/447#issuecomment-831942921:563,install,installation,563,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/447#issuecomment-831942921,1,['install'],['installation']
Deployability,"It is very long so I prefer to give to you all the log in a file. You can find the search step from line 723 or below, but I prefer to give to you everything. ; ```; prefilter /env/cns/bigtmp2/PANFAM/PipelineProteome//CLUST/PANFAM80/panfam_subDB /env/cns/bigtmp2/PANFAM/PipelineProteome//CLUST/PANFAM80/panfam_subDB /env/cns/bigtmp2/PANFAM/PipelineProteome//ALIGN/635041581728617992/pref_0 --sub-mat nucl:nucleotide.out,aa:blosum62.out --seed-sub-mat nucl:nucleotide.out,aa:VTML80.out -k 0 --k-score 2147483647 --alph-size nucl:5,aa:21 --max-seq-len 65535 --max-seqs 1000 --split 0 --split-mode 2 --split-memory-limit 0 -c 0.8 --cov-mode 0 --comp-bias-corr 1 --diag-score 1 --exact-kmer-matching 0 --mask 1 --mask-lower-case 0 --min-ungapped-score 15 --add-self-matches 0 --spaced-kmer-mode 1 --db-load-mode 0 --pca 1 --pcb 1.5 --threads 36 --compressed 0 -v 3 -s 7.0 . Query database size: 12187255 type: Aminoacid; Estimated memory consumption: 42G; Target database size: 12187255 type: Aminoacid; Index table k-mer threshold: 100 at k-mer size 6 ; Index table: counting k-mers; [=================================================================] 12.19M 26s 362ms; Index table: Masked residues: 43826477; Index table: fill; [=================================================================] 12.19M 38s 306ms; Index statistics; Entries: 3083105370; DB size: 18129 MB; Avg k-mer size: 48.173521; Top 10 k-mers; GPGGTL	40332; GQQVAR	22194; GEGGVV	20313; NAIAAG	18525; YTGTPK	18522; ALAIAR	16978; GFVAVR	15587; GPGGTT	14728; GEGGTL	13758; LAMHRT	13125; Time for index table init: 0h 1m 7s 827ms; Process prefiltering step 1 of 1. k-mer similarity threshold: 100; Starting prefiltering scores calculation (step 1 of 1); Query db start 1 to 12187255; Target db start 1 to 12187255; [======; ```; [pipeline.log](https://github.com/soedinglab/MMseqs2/files/5856223/pipeline.log); Thanks",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/397#issuecomment-765417034:200,Pipeline,PipelineProteome,200,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/397#issuecomment-765417034,5,"['Pipeline', 'pipeline']","['PipelineProteome', 'pipeline']"
Deployability,"It turns out that the issue wasn't a memory error, but instead a bug in my pipeline code that killed the job prematurely. Sorry to waste your time on this.",MatchSource.ISSUE_COMMENT,soedinglab,MMseqs2,15-6f452,https://github.com/soedinglab/MMseqs2/issues/147#issuecomment-453225786:75,pipeline,pipeline,75,https://github.com/soedinglab/mmseqs2/wiki,https://github.com/soedinglab/MMseqs2/issues/147#issuecomment-453225786,1,['pipeline'],['pipeline']
