quality_attribute,sentence,source,author,repo,version,id,keyword,matched_word,match_idx,wiki,url,total_similar,target_keywords,target_matched_words
Deployability,This pull request **fixes 6 alerts** when merging 026fbff1db98322500c6e642e3ad31a866e6ce14 into 1f7f6bb281c72cd21c755084e2b8cc84a0ccb692 - [view on LGTM.com](https://lgtm.com/projects/g/su2code/SU2/rev/pr-b8f19e61a2f29597daac381611e3cbe618c86b84). **fixed alerts:**. * 6 for Resource not released in destructor,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1256#issuecomment-815710940:288,release,released,288,https://su2code.github.io,https://github.com/su2code/SU2/pull/1256#issuecomment-815710940,1,['release'],['released']
Deployability,This pull request **fixes 6 alerts** when merging 0e250e1f2a7321c94340c7502703aa30a58302fc into 7fa0763e9115f088fb02fdf2f58610431a434db7 - [view on LGTM.com](https://lgtm.com/projects/g/su2code/SU2/rev/pr-327d42b5d0be5ab75114f11a5c7bb23a921e3fdd). **fixed alerts:**. * 6 for Resource not released in destructor,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1256#issuecomment-819592457:288,release,released,288,https://su2code.github.io,https://github.com/su2code/SU2/pull/1256#issuecomment-819592457,1,['release'],['released']
Deployability,This pull request **fixes 6 alerts** when merging 84e05851ad98d6de83f5ad2112bf08683f0d4b6a into e823be7365a34b48022eba70fa82771362015519 - [view on LGTM.com](https://lgtm.com/projects/g/su2code/SU2/rev/pr-57e6058b4fa4b5b867c6e48c0843bc6f00a5721a). **fixed alerts:**. * 6 for Resource not released in destructor,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1256#issuecomment-814833682:288,release,released,288,https://su2code.github.io,https://github.com/su2code/SU2/pull/1256#issuecomment-814833682,1,['release'],['released']
Deployability,This pull request **fixes 6 alerts** when merging dad20d77efb5ce2d273305238dcf238acdc7ae55 into 1f7f6bb281c72cd21c755084e2b8cc84a0ccb692 - [view on LGTM.com](https://lgtm.com/projects/g/su2code/SU2/rev/pr-beb1164baabb2d52e51f5321e3d954ab598dffec). **fixed alerts:**. * 6 for Resource not released in destructor,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1256#issuecomment-815065558:288,release,released,288,https://su2code.github.io,https://github.com/su2code/SU2/pull/1256#issuecomment-815065558,1,['release'],['released']
Deployability,This pull request **fixes 6 alerts** when merging e1896e6a34d9b452c1feef207739adebf097b38c into 1f7f6bb281c72cd21c755084e2b8cc84a0ccb692 - [view on LGTM.com](https://lgtm.com/projects/g/su2code/SU2/rev/pr-ca7b81b1c7cd4200b20a8276bda355cb5e6d228c). **fixed alerts:**. * 6 for Resource not released in destructor,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1256#issuecomment-815616191:288,release,released,288,https://su2code.github.io,https://github.com/su2code/SU2/pull/1256#issuecomment-815616191,1,['release'],['released']
Deployability,This pull request **fixes 7 alerts** when merging 8772194b54e88aa3b227a294da29fd8055de453c into cd4ecca8b81d1a78977f05263ffadfb845e52ef1 - [view on LGTM.com](https://lgtm.com/projects/g/su2code/SU2/rev/pr-4d7f1ca8335dae9577589379517c02dc34a32c75). **fixed alerts:**. * 7 for Resource not released in destructor,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1579#issuecomment-1079775117:288,release,released,288,https://su2code.github.io,https://github.com/su2code/SU2/pull/1579#issuecomment-1079775117,1,['release'],['released']
Deployability,This pull request **fixes 8 alerts** when merging 20823830106f9aa5674355799e090dcb219641dd into cd4ecca8b81d1a78977f05263ffadfb845e52ef1 - [view on LGTM.com](https://lgtm.com/projects/g/su2code/SU2/rev/pr-4d2622648eeff9191193fb1701b088e299b83c82). **fixed alerts:**. * 8 for Resource not released in destructor,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1579#issuecomment-1079928497:288,release,released,288,https://su2code.github.io,https://github.com/su2code/SU2/pull/1579#issuecomment-1079928497,1,['release'],['released']
Deployability,This pull request **fixes 8 alerts** when merging 45cc9a5e269a50e8804cfe1f1873625c1254be38 into e823be7365a34b48022eba70fa82771362015519 - [view on LGTM.com](https://lgtm.com/projects/g/su2code/SU2/rev/pr-3e873733e66770ba9b49f2952dc451d5c2c4a5e0). **fixed alerts:**. * 5 for Comparison of narrow type with wide type in loop condition; * 3 for Resource not released in destructor,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1214#issuecomment-814069987:356,release,released,356,https://su2code.github.io,https://github.com/su2code/SU2/pull/1214#issuecomment-814069987,1,['release'],['released']
Deployability,This pull request **introduces 1 alert** and **fixes 2** when merging d7757db62a443b0c65ca760f3705a495415602e5 into 42dcf5a965a895aac2afea14b65023a7591826c0 - [view on LGTM.com](https://lgtm.com/projects/g/su2code/SU2/rev/pr-90f5ff9135176589ef220cf362b956ff22fea828). **new alerts:**. * 1 for Resource not released in destructor. **fixed alerts:**. * 2 for Resource not released in destructor,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1388#issuecomment-983566164:306,release,released,306,https://su2code.github.io,https://github.com/su2code/SU2/pull/1388#issuecomment-983566164,2,['release'],['released']
Deployability,"This pull request **introduces 1 alert** when merging 121eb50e411e8c17d5f87be06b2229b1aba50972 into 73538a1d9cf18f0f75a5f36f8f1740fca8d5fc62 - [view on LGTM.com](https://lgtm.com/projects/g/su2code/SU2/rev/pr-b9e82ee867031b54ceb61a9f35f25eedb9881691). **new alerts:**. * 1 for Resource not released in destructor; ---. **Heads-up: LGTM.com's PR analysis will be disabled on the 5th of December**, and LGTM.com will be shut down ⏻ completely on the 16th of December 2022. Please enable GitHub code scanning, which uses the same CodeQL engine :gear: that powers LGTM.com. For more information, please check out [our post on the GitHub blog](https://github.blog/2022-08-15-the-next-step-for-lgtm-com-github-code-scanning/).",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1826#issuecomment-1330538080:290,release,released,290,https://su2code.github.io,https://github.com/su2code/SU2/pull/1826#issuecomment-1330538080,1,['release'],['released']
Deployability,"This pull request **introduces 1 alert** when merging 1a40d51afd58dd01d28189e06c9337010d850af9 into 9f082de9b9090188a820688cd30458da0fce5661 - [view on LGTM.com](https://lgtm.com/projects/g/su2code/SU2/rev/pr-2c1e66c7efa9c1831a08f88abe26c40f24e9a73a). **new alerts:**. * 1 for Resource not released in destructor; ---. **Heads-up: LGTM.com's PR analysis will be disabled on the 5th of December**, and LGTM.com will be shut down ⏻ completely on the 16th of December 2022. Please enable GitHub code scanning, which uses the same CodeQL engine :gear: that powers LGTM.com. For more information, please check out [our post on the GitHub blog](https://github.blog/2022-08-15-the-next-step-for-lgtm-com-github-code-scanning/).",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1757#issuecomment-1325335882:290,release,released,290,https://su2code.github.io,https://github.com/su2code/SU2/pull/1757#issuecomment-1325335882,1,['release'],['released']
Deployability,"This pull request **introduces 1 alert** when merging 344abacdc6fcfa7d59422b8f9259b5fcac90b8fe into 9f082de9b9090188a820688cd30458da0fce5661 - [view on LGTM.com](https://lgtm.com/projects/g/su2code/SU2/rev/pr-6cf2b294fb313fcb164ea78f5eb2e646af617e63). **new alerts:**. * 1 for Resource not released in destructor; ---. **Heads-up: LGTM.com's PR analysis will be disabled on the 5th of December**, and LGTM.com will be shut down ⏻ completely on the 16th of December 2022. Please enable GitHub code scanning, which uses the same CodeQL engine :gear: that powers LGTM.com. For more information, please check out [our post on the GitHub blog](https://github.blog/2022-08-15-the-next-step-for-lgtm-com-github-code-scanning/).",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1826#issuecomment-1324245971:290,release,released,290,https://su2code.github.io,https://github.com/su2code/SU2/pull/1826#issuecomment-1324245971,1,['release'],['released']
Deployability,"This pull request **introduces 1 alert** when merging 60959597c9b9d75f8011d99edffdc408d0ba3209 into 9a4cf77d9700b9d829063a37a1243e2090875d8d - [view on LGTM.com](https://lgtm.com/projects/g/su2code/SU2/rev/pr-7550880d1deca38f4bb990d519bc660f2a6fe3d7). **new alerts:**. * 1 for Resource not released in destructor; ---. **Heads-up: LGTM.com's PR analysis will be disabled on the 5th of December**, and LGTM.com will be shut down ⏻ completely on the 16th of December 2022. Please enable GitHub code scanning, which uses the same CodeQL engine :gear: that powers LGTM.com. For more information, please check out [our post on the GitHub blog](https://github.blog/2022-08-15-the-next-step-for-lgtm-com-github-code-scanning/).",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1826#issuecomment-1336486906:290,release,released,290,https://su2code.github.io,https://github.com/su2code/SU2/pull/1826#issuecomment-1336486906,1,['release'],['released']
Deployability,"This pull request **introduces 1 alert** when merging a5e299d22c7bcc239cffabc7578ba52c2d8292ae into 9f082de9b9090188a820688cd30458da0fce5661 - [view on LGTM.com](https://lgtm.com/projects/g/su2code/SU2/rev/pr-d693ff6efa13c303374af0abf61643a83f9a97e1). **new alerts:**. * 1 for Resource not released in destructor; ---. **Heads-up: LGTM.com's PR analysis will be disabled on the 5th of December**, and LGTM.com will be shut down ⏻ completely on the 16th of December 2022. Please enable GitHub code scanning, which uses the same CodeQL engine :gear: that powers LGTM.com. For more information, please check out [our post on the GitHub blog](https://github.blog/2022-08-15-the-next-step-for-lgtm-com-github-code-scanning/).",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1826#issuecomment-1323974895:290,release,released,290,https://su2code.github.io,https://github.com/su2code/SU2/pull/1826#issuecomment-1323974895,1,['release'],['released']
Deployability,"This pull request **introduces 1 alert** when merging a90a2316914b9035e9955f2749a7d673aa44b2d0 into 9f082de9b9090188a820688cd30458da0fce5661 - [view on LGTM.com](https://lgtm.com/projects/g/su2code/SU2/rev/pr-dacbb9c48d85fcdde321d014742fe164b4395ec1). **new alerts:**. * 1 for Resource not released in destructor; ---. **Heads-up: LGTM.com's PR analysis will be disabled on the 5th of December**, and LGTM.com will be shut down ⏻ completely on the 16th of December 2022. Please enable GitHub code scanning, which uses the same CodeQL engine :gear: that powers LGTM.com. For more information, please check out [our post on the GitHub blog](https://github.blog/2022-08-15-the-next-step-for-lgtm-com-github-code-scanning/).",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1826#issuecomment-1328383726:290,release,released,290,https://su2code.github.io,https://github.com/su2code/SU2/pull/1826#issuecomment-1328383726,1,['release'],['released']
Deployability,This pull request **introduces 10 alerts** when merging 6facf5b1fe5b49b9f97430ee1f46f3ed978d4cd4 into 919900ac683f96c6ff36e470b533d81802147c1d - [view on LGTM.com](https://lgtm.com/projects/g/su2code/SU2/rev/pr-bb6686adeddfa21f7fcf27c16eba7714d5c4eacc). **new alerts:**. * 10 for Resource not released in destructor,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1300#issuecomment-858827405:293,release,released,293,https://su2code.github.io,https://github.com/su2code/SU2/pull/1300#issuecomment-858827405,1,['release'],['released']
Deployability,This pull request **introduces 10 alerts** when merging e431c51d3b4d217d40d555c331c5cb4ffb35be89 into ccc1c6e58e6f00811f1bb3a176ed4468a113417a - [view on LGTM.com](https://lgtm.com/projects/g/su2code/SU2/rev/pr-0f3a248171ab79a1da0137d72e46bc2e46617e62). **new alerts:**. * 7 for Comparison of narrow type with wide type in loop condition; * 1 for Resource not released in destructor; * 1 for Multiplication result converted to larger type; * 1 for &#39;new\[\]&#39; array freed with &#39;delete&#39;,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1348#issuecomment-964331342:360,release,released,360,https://su2code.github.io,https://github.com/su2code/SU2/pull/1348#issuecomment-964331342,1,['release'],['released']
Deployability,This pull request **introduces 12 alerts** when merging 169be9a4067cebc7495485069a72e21ce1930087 into 350fee94a837495ba2a0d821a2025020e444acb5 - [view on LGTM.com](https://lgtm.com/projects/g/su2code/SU2/rev/pr-7d6523ee3b0add4376da574ee8202cc23b350ad9). **new alerts:**. * 12 for Resource not released in destructor,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1300#issuecomment-866352437:293,release,released,293,https://su2code.github.io,https://github.com/su2code/SU2/pull/1300#issuecomment-866352437,1,['release'],['released']
Deployability,This pull request **introduces 12 alerts** when merging c44014888000d625489c28fd0e04dec85b518a86 into 350fee94a837495ba2a0d821a2025020e444acb5 - [view on LGTM.com](https://lgtm.com/projects/g/su2code/SU2/rev/pr-b518cf4c575d7021e74da0d58e9a73b0afaed921). **new alerts:**. * 12 for Resource not released in destructor,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1300#issuecomment-866197577:293,release,released,293,https://su2code.github.io,https://github.com/su2code/SU2/pull/1300#issuecomment-866197577,1,['release'],['released']
Deployability,"This pull request **introduces 2 alerts** when merging 054a8ff9443814b08fdae1d342537f549b341adf into 9f082de9b9090188a820688cd30458da0fce5661 - [view on LGTM.com](https://lgtm.com/projects/g/su2code/SU2/rev/pr-3f2c21dc8e025cb184f3cbffacd7c381240166c8). **new alerts:**. * 1 for Resource not released in destructor; * 1 for &#39;new\[\]&#39; array freed with &#39;delete&#39;; ---. **Heads-up: LGTM.com's PR analysis will be disabled on the 5th of December**, and LGTM.com will be shut down ⏻ completely on the 16th of December 2022. Please enable GitHub code scanning, which uses the same CodeQL engine :gear: that powers LGTM.com. For more information, please check out [our post on the GitHub blog](https://github.blog/2022-08-15-the-next-step-for-lgtm-com-github-code-scanning/).",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1757#issuecomment-1327391844:291,release,released,291,https://su2code.github.io,https://github.com/su2code/SU2/pull/1757#issuecomment-1327391844,1,['release'],['released']
Deployability,This pull request **introduces 2 alerts** when merging 5492805e6975b6a5f27a4919d0b7e03bb2e3e99b into 14d77240ed01fb13d0bb75eb7a95257127f021ff - [view on LGTM.com](https://lgtm.com/projects/g/su2code/SU2/rev/pr-5ce66880e1b6dd90c964950bca31ad4ba618da94). **new alerts:**. * 2 for Resource not released in destructor,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1242#issuecomment-808418855:291,release,released,291,https://su2code.github.io,https://github.com/su2code/SU2/pull/1242#issuecomment-808418855,1,['release'],['released']
Deployability,This pull request **introduces 2 alerts** when merging 787c7ea9939ea4b56a7a71226fe566a435b3c85c into bc6ef2a8968bccfcfe9a305bc4d7ebe975db58a9 - [view on LGTM.com](https://lgtm.com/projects/g/su2code/SU2/rev/pr-0c7699e2b25666f73c6550bdce3296a898077962). **new alerts:**. * 2 for Resource not released in destructor,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1773#issuecomment-1258658744:291,release,released,291,https://su2code.github.io,https://github.com/su2code/SU2/pull/1773#issuecomment-1258658744,1,['release'],['released']
Deployability,This pull request **introduces 2 alerts** when merging 84cdb7ea1e6d56692c88c0b16be72f7793cf0a97 into d32ccec357c855fd8843b32cf52381631e62515d - [view on LGTM.com](https://lgtm.com/projects/g/su2code/SU2/rev/pr-38065ddb6e37779194a9324321b89b9d844b1ab9). **new alerts:**. * 2 for Resource not released in destructor,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1773#issuecomment-1257923420:291,release,released,291,https://su2code.github.io,https://github.com/su2code/SU2/pull/1773#issuecomment-1257923420,1,['release'],['released']
Deployability,This pull request **introduces 2 alerts** when merging bd952260a082dcec837a842ac69c7d0575255fe0 into 949f4e5efd532e5977b461bdb2eba6351723051e - [view on LGTM.com](https://lgtm.com/projects/g/su2code/SU2/rev/pr-10c0da9c01c2000bb722a346c6bace6bd9dc1453). **new alerts:**. * 2 for Resource not released in destructor,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1242#issuecomment-805832833:291,release,released,291,https://su2code.github.io,https://github.com/su2code/SU2/pull/1242#issuecomment-805832833,1,['release'],['released']
Deployability,This pull request **introduces 2 alerts** when merging e27da1daf4b9ea0756b831379c47b2604be046b2 into 3b209829b75fcc96307a7a7e48e1e33bc50bdab4 - [view on LGTM.com](https://lgtm.com/projects/g/su2code/SU2/rev/pr-ff05f834663f5500b78b89094816cae1f9b7d9f2). **new alerts:**. * 2 for Resource not released in destructor,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1242#issuecomment-814996077:291,release,released,291,https://su2code.github.io,https://github.com/su2code/SU2/pull/1242#issuecomment-814996077,1,['release'],['released']
Deployability,This pull request **introduces 22 alerts** when merging 1fdb8374e38a89972b4e81c81c786661083f79dc into 5b12ac77a38a96dbe86e6a46c2497148a0a2e4a8 - [view on LGTM.com](https://lgtm.com/projects/g/su2code/SU2/rev/pr-15177bbbc902aa88c01946b49bb6bb751d99e3c0). **new alerts:**. * 22 for Resource not released in destructor,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1300#issuecomment-1045114421:293,release,released,293,https://su2code.github.io,https://github.com/su2code/SU2/pull/1300#issuecomment-1045114421,1,['release'],['released']
Deployability,This pull request **introduces 22 alerts** when merging 4873aa2f46c76e744c482c3c0e655addc6fc608f into 56cb5267440880b6fa22368ed0e1d5fd8275491b - [view on LGTM.com](https://lgtm.com/projects/g/su2code/SU2/rev/pr-7b6d5e21ad86274c7ce768e889304058a5bf07a8). **new alerts:**. * 22 for Resource not released in destructor,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1300#issuecomment-1061211591:293,release,released,293,https://su2code.github.io,https://github.com/su2code/SU2/pull/1300#issuecomment-1061211591,1,['release'],['released']
Deployability,This pull request **introduces 22 alerts** when merging 4fd44bb22907e7032d489ef1b2819c85a920984f into cd4ecca8b81d1a78977f05263ffadfb845e52ef1 - [view on LGTM.com](https://lgtm.com/projects/g/su2code/SU2/rev/pr-454c3bbd08017bbc1c750f4e4b0ae81b14d52fc2). **new alerts:**. * 20 for Resource not released in destructor; * 2 for Comparison result is always the same,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1552#issuecomment-1078450896:293,release,released,293,https://su2code.github.io,https://github.com/su2code/SU2/pull/1552#issuecomment-1078450896,1,['release'],['released']
Deployability,This pull request **introduces 22 alerts** when merging 5309e76b94675dbc2168a9914ceb600344c9824d into 3a5b668665eb85b32f36ff7e3a0dfd3041888010 - [view on LGTM.com](https://lgtm.com/projects/g/su2code/SU2/rev/pr-037b1dbb0b3360856714e4987f824f147cc4738d). **new alerts:**. * 20 for Resource not released in destructor; * 2 for Comparison result is always the same,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1552#issuecomment-1076889967:293,release,released,293,https://su2code.github.io,https://github.com/su2code/SU2/pull/1552#issuecomment-1076889967,1,['release'],['released']
Deployability,This pull request **introduces 22 alerts** when merging 5a80ab7b020061ed2254c085a5b0faaa0a03482c into 4c3311f4a2cf27a02a757e805d25d065965f6c42 - [view on LGTM.com](https://lgtm.com/projects/g/su2code/SU2/rev/pr-92f9fd34c8ba6621a459eb333de38a9a684a7ff9). **new alerts:**. * 20 for Resource not released in destructor; * 2 for Comparison result is always the same,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1552#issuecomment-1075159473:293,release,released,293,https://su2code.github.io,https://github.com/su2code/SU2/pull/1552#issuecomment-1075159473,1,['release'],['released']
Deployability,This pull request **introduces 22 alerts** when merging 5a86fb10c30068591008175e3647c0c8a58a9a69 into 2786e5351d24a3bb5d4325b07fb0085f0f03cf7e - [view on LGTM.com](https://lgtm.com/projects/g/su2code/SU2/rev/pr-a630b3ce6873063f3aab70ccc85be933074f06cc). **new alerts:**. * 20 for Resource not released in destructor; * 2 for Comparison result is always the same,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1552#issuecomment-1059151617:293,release,released,293,https://su2code.github.io,https://github.com/su2code/SU2/pull/1552#issuecomment-1059151617,1,['release'],['released']
Deployability,This pull request **introduces 22 alerts** when merging 5f0af78b145d6348e694bfbd236c10e29d09ce72 into 4c3311f4a2cf27a02a757e805d25d065965f6c42 - [view on LGTM.com](https://lgtm.com/projects/g/su2code/SU2/rev/pr-66ab24cbe7085b5e46efa9fc1de8bb6d7e486986). **new alerts:**. * 20 for Resource not released in destructor; * 2 for Comparison result is always the same,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1552#issuecomment-1076386072:293,release,released,293,https://su2code.github.io,https://github.com/su2code/SU2/pull/1552#issuecomment-1076386072,1,['release'],['released']
Deployability,This pull request **introduces 22 alerts** when merging 6ff6acd67bd90d1d53e20e47eb98eded098c2e46 into c8ccde5c80282aee517bbc390f9a469963c2153a - [view on LGTM.com](https://lgtm.com/projects/g/su2code/SU2/rev/pr-8ed9a87b702ededa2878fa363edbfb7850673466). **new alerts:**. * 20 for Resource not released in destructor; * 2 for Comparison result is always the same,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1552#issuecomment-1069751369:293,release,released,293,https://su2code.github.io,https://github.com/su2code/SU2/pull/1552#issuecomment-1069751369,1,['release'],['released']
Deployability,This pull request **introduces 22 alerts** when merging 7fbc2bd4f1c6038a376a61bfc2d4d5e0bdfa5790 into 4934e1421025e50fd4a4014767989f12dc38d511 - [view on LGTM.com](https://lgtm.com/projects/g/su2code/SU2/rev/pr-34b7f4ca603dc2ad27da08ff043482f7f1a479b0). **new alerts:**. * 20 for Resource not released in destructor; * 2 for Comparison result is always the same,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1552#issuecomment-1077441177:293,release,released,293,https://su2code.github.io,https://github.com/su2code/SU2/pull/1552#issuecomment-1077441177,1,['release'],['released']
Deployability,This pull request **introduces 22 alerts** when merging 976408cfbc3a97e4a43a0954f5add106028a4157 into 5b12ac77a38a96dbe86e6a46c2497148a0a2e4a8 - [view on LGTM.com](https://lgtm.com/projects/g/su2code/SU2/rev/pr-ae6d41221e81ae2131a64f5b9ab32cdcee1a8157). **new alerts:**. * 22 for Resource not released in destructor,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1300#issuecomment-1047005518:293,release,released,293,https://su2code.github.io,https://github.com/su2code/SU2/pull/1300#issuecomment-1047005518,1,['release'],['released']
Deployability,This pull request **introduces 22 alerts** when merging 97a1b1ddcae8b9b143ab7bffcadd805f7a197f1f into a28882826ad4515d8f5eea345de56fb273211fee - [view on LGTM.com](https://lgtm.com/projects/g/su2code/SU2/rev/pr-b32cec81cda0205c3cc12998e252dedd955e0783). **new alerts:**. * 20 for Resource not released in destructor; * 2 for Comparison result is always the same,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1552#issuecomment-1068925122:293,release,released,293,https://su2code.github.io,https://github.com/su2code/SU2/pull/1552#issuecomment-1068925122,1,['release'],['released']
Deployability,This pull request **introduces 22 alerts** when merging ca466b10fcd99c06489309940da7004c67c1fe81 into 2786e5351d24a3bb5d4325b07fb0085f0f03cf7e - [view on LGTM.com](https://lgtm.com/projects/g/su2code/SU2/rev/pr-6cacb48901e54ed75409dc3ce2635de865c80135). **new alerts:**. * 20 for Resource not released in destructor; * 2 for Comparison result is always the same,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1552#issuecomment-1059347817:293,release,released,293,https://su2code.github.io,https://github.com/su2code/SU2/pull/1552#issuecomment-1059347817,1,['release'],['released']
Deployability,This pull request **introduces 22 alerts** when merging cbf37b14f956263b6bab7a42bc694a0b8dfbd3d3 into 3a5b668665eb85b32f36ff7e3a0dfd3041888010 - [view on LGTM.com](https://lgtm.com/projects/g/su2code/SU2/rev/pr-30693e06fce5a6a9a5d4213eb3fe3502a0d8d603). **new alerts:**. * 20 for Resource not released in destructor; * 2 for Comparison result is always the same,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1552#issuecomment-1076750120:293,release,released,293,https://su2code.github.io,https://github.com/su2code/SU2/pull/1552#issuecomment-1076750120,1,['release'],['released']
Deployability,This pull request **introduces 22 alerts** when merging e8fcf489adf06ab26c20c9cd44813e91710a607c into 2786e5351d24a3bb5d4325b07fb0085f0f03cf7e - [view on LGTM.com](https://lgtm.com/projects/g/su2code/SU2/rev/pr-9f765c12fdd50f461d67a516c0301f40f0f9f21e). **new alerts:**. * 20 for Resource not released in destructor; * 2 for Comparison result is always the same,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1552#issuecomment-1059209730:293,release,released,293,https://su2code.github.io,https://github.com/su2code/SU2/pull/1552#issuecomment-1059209730,1,['release'],['released']
Deployability,This pull request **introduces 22 alerts** when merging fac06fa2c369d8f6d035be27e3fe179e1e6a06e1 into 3a5b668665eb85b32f36ff7e3a0dfd3041888010 - [view on LGTM.com](https://lgtm.com/projects/g/su2code/SU2/rev/pr-51f9be38a9ded9f2524bab2781bbf8e8f137e696). **new alerts:**. * 20 for Resource not released in destructor; * 2 for Comparison result is always the same,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1552#issuecomment-1076620503:293,release,released,293,https://su2code.github.io,https://github.com/su2code/SU2/pull/1552#issuecomment-1076620503,1,['release'],['released']
Deployability,This pull request **introduces 25 alerts** when merging 527357d8a12079d49a7c69a67bedd3643ee8886c into 2786e5351d24a3bb5d4325b07fb0085f0f03cf7e - [view on LGTM.com](https://lgtm.com/projects/g/su2code/SU2/rev/pr-c58ff5f55463f2ac0e2520897b6a8de90703a9bd). **new alerts:**. * 23 for Resource not released in destructor; * 2 for Comparison result is always the same,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1552#issuecomment-1058677874:293,release,released,293,https://su2code.github.io,https://github.com/su2code/SU2/pull/1552#issuecomment-1058677874,1,['release'],['released']
Deployability,This pull request **introduces 25 alerts** when merging 63bf74ca093b265bc0e0e81e6c545a62f612e115 into 3832a8fef8005ad9ef43fec12f58883ba7134664 - [view on LGTM.com](https://lgtm.com/projects/g/su2code/SU2/rev/pr-53172a30b365340b7c27b0a89ea68668c5048798). **new alerts:**. * 23 for Resource not released in destructor; * 2 for Comparison result is always the same,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1552#issuecomment-1058360689:293,release,released,293,https://su2code.github.io,https://github.com/su2code/SU2/pull/1552#issuecomment-1058360689,1,['release'],['released']
Deployability,This pull request **introduces 25 alerts** when merging 6ad89f76b7b03ded1a7de0b4a4b62bd5dd538dc9 into 3832a8fef8005ad9ef43fec12f58883ba7134664 - [view on LGTM.com](https://lgtm.com/projects/g/su2code/SU2/rev/pr-c6c1e214b9c4a855083243cd50497e842d4d12d6). **new alerts:**. * 23 for Resource not released in destructor; * 2 for Comparison result is always the same,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1552#issuecomment-1057804579:293,release,released,293,https://su2code.github.io,https://github.com/su2code/SU2/pull/1552#issuecomment-1057804579,1,['release'],['released']
Deployability,This pull request **introduces 26 alerts** when merging 1c57ad34350a4c8bba680fd56b8ef51c29e965d9 into 5b12ac77a38a96dbe86e6a46c2497148a0a2e4a8 - [view on LGTM.com](https://lgtm.com/projects/g/su2code/SU2/rev/pr-d1cc550ac8bc5509fb8607b49fd6c4823b1973a3). **new alerts:**. * 25 for Resource not released in destructor; * 1 for Non\-virtual destructor in base class,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1300#issuecomment-1039623493:293,release,released,293,https://su2code.github.io,https://github.com/su2code/SU2/pull/1300#issuecomment-1039623493,1,['release'],['released']
Deployability,This pull request **introduces 26 alerts** when merging 342d3a204c36f1affc49d8e4b443e6684c7d097b into 5b12ac77a38a96dbe86e6a46c2497148a0a2e4a8 - [view on LGTM.com](https://lgtm.com/projects/g/su2code/SU2/rev/pr-a0f361baefe39d46dd2f75b193765300287f00a7). **new alerts:**. * 25 for Resource not released in destructor; * 1 for Non\-virtual destructor in base class,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1300#issuecomment-1040965587:293,release,released,293,https://su2code.github.io,https://github.com/su2code/SU2/pull/1300#issuecomment-1040965587,1,['release'],['released']
Deployability,This pull request **introduces 26 alerts** when merging bfb175c15a5086847a69507869b2071a90a87232 into 5b12ac77a38a96dbe86e6a46c2497148a0a2e4a8 - [view on LGTM.com](https://lgtm.com/projects/g/su2code/SU2/rev/pr-a7dc350f01e617561b8e039767ac50f293216fce). **new alerts:**. * 25 for Resource not released in destructor; * 1 for Non\-virtual destructor in base class,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1300#issuecomment-1042104661:293,release,released,293,https://su2code.github.io,https://github.com/su2code/SU2/pull/1300#issuecomment-1042104661,1,['release'],['released']
Deployability,This pull request **introduces 27 alerts** when merging de94b6dc8057b1f67efe393b13149d6ad53c7f2f into 5b12ac77a38a96dbe86e6a46c2497148a0a2e4a8 - [view on LGTM.com](https://lgtm.com/projects/g/su2code/SU2/rev/pr-59a0e19d690ed9a24459688d2c23db89916e59f5). **new alerts:**. * 26 for Resource not released in destructor; * 1 for Non\-virtual destructor in base class,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1300#issuecomment-1039503606:293,release,released,293,https://su2code.github.io,https://github.com/su2code/SU2/pull/1300#issuecomment-1039503606,1,['release'],['released']
Deployability,This pull request **introduces 3 alerts** and **fixes 20** when merging 1249f9f6a6a9c6ca13966de3bc40c91d4d14cf8c into 5655d91d7da192ad0b2a231f9ab5334c2235c10a - [view on LGTM.com](https://lgtm.com/projects/g/su2code/SU2/rev/pr-7a1468f6370384a8299cef84312a621e7ca8ae14). **new alerts:**. * 2 for Multiplication result converted to larger type; * 1 for Resource not released in destructor. **fixed alerts:**. * 18 for Comparison of narrow type with wide type in loop condition; * 2 for Resource not released in destructor,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1464#issuecomment-986925397:364,release,released,364,https://su2code.github.io,https://github.com/su2code/SU2/pull/1464#issuecomment-986925397,2,['release'],['released']
Deployability,This pull request **introduces 3 alerts** and **fixes 45** when merging f8da2932d68cff663ef7446840df077a13470bcd into 5655d91d7da192ad0b2a231f9ab5334c2235c10a - [view on LGTM.com](https://lgtm.com/projects/g/su2code/SU2/rev/pr-0b2b99a66131b6a046b070a86f69f7ab73916e5c). **new alerts:**. * 2 for Multiplication result converted to larger type; * 1 for Resource not released in destructor. **fixed alerts:**. * 25 for Resource not released in destructor; * 20 for Comparison of narrow type with wide type in loop condition,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1521#issuecomment-1019304926:364,release,released,364,https://su2code.github.io,https://github.com/su2code/SU2/pull/1521#issuecomment-1019304926,2,['release'],['released']
Deployability,This pull request **introduces 3 alerts** and **fixes 46** when merging 3d87e0078f5ee9206dae5f2c993828f4518f34c9 into ce07d5c086c846252d200132d21e719819ba2296 - [view on LGTM.com](https://lgtm.com/projects/g/su2code/SU2/rev/pr-84d18fae4949789bbb3578e25c2ac705e1ac0762). **new alerts:**. * 2 for Resource not released in destructor; * 1 for Multiplication result converted to larger type. **fixed alerts:**. * 14 for Multiplication result converted to larger type; * 13 for Comparison of narrow type with wide type in loop condition; * 9 for Resource not released in destructor; * 8 for &#39;input&#39; function used in Python 2; * 1 for Unused import; * 1 for Result of integer division may be truncated,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1267#issuecomment-822064131:308,release,released,308,https://su2code.github.io,https://github.com/su2code/SU2/pull/1267#issuecomment-822064131,2,['release'],['released']
Deployability,This pull request **introduces 3 alerts** when merging 04813b107392ff542fc4fb7577e30bd2a54bf7e5 into 124795b612bbce076850722720ba28cfc041e436 - [view on LGTM.com](https://lgtm.com/projects/g/su2code/SU2/rev/pr-9dfb6850c854392bf42a0a0bf934638df110b4fb). **new alerts:**. * 3 for Resource not released in destructor,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1757#issuecomment-1284049510:291,release,released,291,https://su2code.github.io,https://github.com/su2code/SU2/pull/1757#issuecomment-1284049510,1,['release'],['released']
Deployability,"This pull request **introduces 3 alerts** when merging 112876da64657676a5ed1c2a2f3a60e934f59009 into 7132d99e9e794094b5c2b924605f0b1878ac21e2 - [view on LGTM.com](https://lgtm.com/projects/g/su2code/SU2/rev/pr-2065e18ac397dee2095cde4b9803eb2ac7ed0f24). **new alerts:**. * 3 for Resource not released in destructor; ---. **Heads-up: LGTM.com's PR analysis will be disabled on the 5th of December**, and LGTM.com will be shut down ⏻ completely on the 16th of December 2022. Please enable GitHub code scanning, which uses the same CodeQL engine :gear: that powers LGTM.com. For more information, please check out [our post on the GitHub blog](https://github.blog/2022-08-15-the-next-step-for-lgtm-com-github-code-scanning/).",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1757#issuecomment-1320293517:291,release,released,291,https://su2code.github.io,https://github.com/su2code/SU2/pull/1757#issuecomment-1320293517,1,['release'],['released']
Deployability,This pull request **introduces 3 alerts** when merging 2c1a1fca1aeef203da6f117c340729611211dff3 into 057da5b2e3791db446d1641dcf44b1d25559cf95 - [view on LGTM.com](https://lgtm.com/projects/g/su2code/SU2/rev/pr-567514306f7333931146f1aa02dcee5390853732). **new alerts:**. * 2 for Resource not released in destructor; * 1 for Comparison of narrow type with wide type in loop condition,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1356#issuecomment-930603822:291,release,released,291,https://su2code.github.io,https://github.com/su2code/SU2/pull/1356#issuecomment-930603822,1,['release'],['released']
Deployability,This pull request **introduces 3 alerts** when merging 47b456cb3d65ce3f29a6521e947caec819eb8335 into 88c8392ff1028af640a8b0bc90304367ea45ded3 - [view on LGTM.com](https://lgtm.com/projects/g/su2code/SU2/rev/pr-d4b637fe53b4a09653baf9519fbf39955a8a32a7). **new alerts:**. * 3 for Resource not released in destructor,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1757#issuecomment-1248125071:291,release,released,291,https://su2code.github.io,https://github.com/su2code/SU2/pull/1757#issuecomment-1248125071,1,['release'],['released']
Deployability,"This pull request **introduces 3 alerts** when merging 68d02ae7036ef8fa5d93cfb6a6bc47aa9a280d4d into 9f082de9b9090188a820688cd30458da0fce5661 - [view on LGTM.com](https://lgtm.com/projects/g/su2code/SU2/rev/pr-2b8463d2021093ad8df647efad7bad326bf747c0). **new alerts:**. * 3 for Resource not released in destructor; ---. **Heads-up: LGTM.com's PR analysis will be disabled on the 5th of December**, and LGTM.com will be shut down ⏻ completely on the 16th of December 2022. Please enable GitHub code scanning, which uses the same CodeQL engine :gear: that powers LGTM.com. For more information, please check out [our post on the GitHub blog](https://github.blog/2022-08-15-the-next-step-for-lgtm-com-github-code-scanning/).",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1757#issuecomment-1324980995:291,release,released,291,https://su2code.github.io,https://github.com/su2code/SU2/pull/1757#issuecomment-1324980995,1,['release'],['released']
Deployability,"This pull request **introduces 3 alerts** when merging 76194ecc4154ee6569a3420178c5af801478bfc9 into 9f082de9b9090188a820688cd30458da0fce5661 - [view on LGTM.com](https://lgtm.com/projects/g/su2code/SU2/rev/pr-191cf6312035d882b6401e801a28795ee4fdf29d). **new alerts:**. * 3 for Resource not released in destructor; ---. **Heads-up: LGTM.com's PR analysis will be disabled on the 5th of December**, and LGTM.com will be shut down ⏻ completely on the 16th of December 2022. Please enable GitHub code scanning, which uses the same CodeQL engine :gear: that powers LGTM.com. For more information, please check out [our post on the GitHub blog](https://github.blog/2022-08-15-the-next-step-for-lgtm-com-github-code-scanning/).",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1757#issuecomment-1323956735:291,release,released,291,https://su2code.github.io,https://github.com/su2code/SU2/pull/1757#issuecomment-1323956735,1,['release'],['released']
Deployability,This pull request **introduces 3 alerts** when merging 88f0012afd0ac8f2b10778faadd0c0af4e8507d9 into d32ccec357c855fd8843b32cf52381631e62515d - [view on LGTM.com](https://lgtm.com/projects/g/su2code/SU2/rev/pr-b06fac802e36a89396643091a8f68efb8a9beb33). **new alerts:**. * 3 for Resource not released in destructor,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1757#issuecomment-1257796335:291,release,released,291,https://su2code.github.io,https://github.com/su2code/SU2/pull/1757#issuecomment-1257796335,1,['release'],['released']
Deployability,This pull request **introduces 3 alerts** when merging 966c9aea38a062b62665678b78b5457983361180 into 58c580b84860fff31340e3fa3593257a2dd7fb3f - [view on LGTM.com](https://lgtm.com/projects/g/su2code/SU2/rev/pr-a35bf2f1c0ff449a89585178cd6f8e6dc49cbe59). **new alerts:**. * 2 for Resource not released in destructor; * 1 for Comparison of narrow type with wide type in loop condition,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1356#issuecomment-932024096:291,release,released,291,https://su2code.github.io,https://github.com/su2code/SU2/pull/1356#issuecomment-932024096,1,['release'],['released']
Deployability,This pull request **introduces 3 alerts** when merging 9e5803bd38d5504d304a8f45e291b5baa0789052 into 057da5b2e3791db446d1641dcf44b1d25559cf95 - [view on LGTM.com](https://lgtm.com/projects/g/su2code/SU2/rev/pr-89761b3349309b47c988340738a8657111cb6b0e). **new alerts:**. * 2 for Resource not released in destructor; * 1 for Comparison of narrow type with wide type in loop condition,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1356#issuecomment-930647783:291,release,released,291,https://su2code.github.io,https://github.com/su2code/SU2/pull/1356#issuecomment-930647783,1,['release'],['released']
Deployability,This pull request **introduces 3 alerts** when merging ab4a4a34d76ccd1055bbd14c545923f67e980fa6 into 58c580b84860fff31340e3fa3593257a2dd7fb3f - [view on LGTM.com](https://lgtm.com/projects/g/su2code/SU2/rev/pr-5f57cd07a07f7e0d6bfd9bd7e827213c20916f99). **new alerts:**. * 2 for Resource not released in destructor; * 1 for Comparison of narrow type with wide type in loop condition,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1356#issuecomment-931812266:291,release,released,291,https://su2code.github.io,https://github.com/su2code/SU2/pull/1356#issuecomment-931812266,1,['release'],['released']
Deployability,This pull request **introduces 3 alerts** when merging af04e39afe2dd752d3e89e32b36602b94c9132d4 into 34c46b6eed96ef465b32ad9a80585f64b44a7669 - [view on LGTM.com](https://lgtm.com/projects/g/su2code/SU2/rev/pr-98e31d456aea075ca340118db38cf191da91ed58). **new alerts:**. * 2 for Resource not released in destructor; * 1 for Comparison of narrow type with wide type in loop condition,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1356#issuecomment-916387302:291,release,released,291,https://su2code.github.io,https://github.com/su2code/SU2/pull/1356#issuecomment-916387302,1,['release'],['released']
Deployability,This pull request **introduces 3 alerts** when merging b675853030e41680b0b5dacd788a6043daa1eed4 into 34c46b6eed96ef465b32ad9a80585f64b44a7669 - [view on LGTM.com](https://lgtm.com/projects/g/su2code/SU2/rev/pr-db725199b942f636844b7de3e1a3034dd3d8cbdb). **new alerts:**. * 2 for Resource not released in destructor; * 1 for Comparison of narrow type with wide type in loop condition,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1356#issuecomment-917295078:291,release,released,291,https://su2code.github.io,https://github.com/su2code/SU2/pull/1356#issuecomment-917295078,1,['release'],['released']
Deployability,"This pull request **introduces 3 alerts** when merging e8a3a93e987c38e54e98b86c9f35d4830d3c90c9 into 7132d99e9e794094b5c2b924605f0b1878ac21e2 - [view on LGTM.com](https://lgtm.com/projects/g/su2code/SU2/rev/pr-5ddd88c68209cfb42bcdbc0bf86607c797da5b41). **new alerts:**. * 3 for Resource not released in destructor; ---. **Heads-up: LGTM.com's PR analysis will be disabled on the 5th of December**, and LGTM.com will be shut down ⏻ completely on the 16th of December 2022. Please enable GitHub code scanning, which uses the same CodeQL engine :gear: that powers LGTM.com. For more information, please check out [our post on the GitHub blog](https://github.blog/2022-08-15-the-next-step-for-lgtm-com-github-code-scanning/).",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1757#issuecomment-1321937614:291,release,released,291,https://su2code.github.io,https://github.com/su2code/SU2/pull/1757#issuecomment-1321937614,1,['release'],['released']
Deployability,This pull request **introduces 35 alerts** when merging 90dbc0da26f37b22be01723b9cc4e96e5ad10da4 into f8da2932d68cff663ef7446840df077a13470bcd - [view on LGTM.com](https://lgtm.com/projects/g/su2code/SU2/rev/pr-45d02c9b2c325c1693a7ca10c73884b20763047a). **new alerts:**. * 35 for Resource not released in destructor,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1300#issuecomment-1021416009:293,release,released,293,https://su2code.github.io,https://github.com/su2code/SU2/pull/1300#issuecomment-1021416009,1,['release'],['released']
Deployability,This pull request **introduces 4 alerts** and **fixes 72** when merging 3ec1c6803da5ece22f14cb3b17685f07b4444ba9 into ce07d5c086c846252d200132d21e719819ba2296 - [view on LGTM.com](https://lgtm.com/projects/g/su2code/SU2/rev/pr-86ba37531ceb7753fd4246cb683c3fa432ae2964). **new alerts:**. * 2 for Resource not released in destructor; * 1 for &#39;import \*&#39; may pollute namespace; * 1 for Multiplication result converted to larger type. **fixed alerts:**. * 34 for Comparison of narrow type with wide type in loop condition; * 14 for Multiplication result converted to larger type; * 9 for &#39;input&#39; function used in Python 2; * 9 for Resource not released in destructor; * 4 for Comparison result is always the same; * 1 for Unused import; * 1 for Result of integer division may be truncated,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1355#issuecomment-899867464:308,release,released,308,https://su2code.github.io,https://github.com/su2code/SU2/pull/1355#issuecomment-899867464,2,['release'],['released']
Deployability,"This pull request **introduces 4 alerts** when merging 0a565343307aa6a5a7f012f2779cf5c02ad4e8b7 into 7132d99e9e794094b5c2b924605f0b1878ac21e2 - [view on LGTM.com](https://lgtm.com/projects/g/su2code/SU2/rev/pr-1bd2fb9a693c7ffb539f7915b7c52929af869e36). **new alerts:**. * 2 for Resource not released in destructor; * 2 for &#39;new&#39; object freed with &#39;delete\[\]&#39;; ---. **Heads-up: LGTM.com's PR analysis will be disabled on the 5th of December**, and LGTM.com will be shut down ⏻ completely on the 16th of December 2022. Please enable GitHub code scanning, which uses the same CodeQL engine :gear: that powers LGTM.com. For more information, please check out [our post on the GitHub blog](https://github.blog/2022-08-15-the-next-step-for-lgtm-com-github-code-scanning/).",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1757#issuecomment-1322389470:291,release,released,291,https://su2code.github.io,https://github.com/su2code/SU2/pull/1757#issuecomment-1322389470,1,['release'],['released']
Deployability,This pull request **introduces 4 alerts** when merging 0a575667060f6369c7cbc14c0e0c48215eba269a into 3ec1c6803da5ece22f14cb3b17685f07b4444ba9 - [view on LGTM.com](https://lgtm.com/projects/g/su2code/SU2/rev/pr-3d2228e63f322f8b24e86847e086ca35ac965d42). **new alerts:**. * 3 for Resource not released in destructor; * 1 for Comparison of narrow type with wide type in loop condition,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1356#issuecomment-903146247:291,release,released,291,https://su2code.github.io,https://github.com/su2code/SU2/pull/1356#issuecomment-903146247,1,['release'],['released']
Deployability,This pull request **introduces 4 alerts** when merging 637eb274c32fb5c7fdca7e91ee87192597838671 into bd586f6503fd6bdb94f18c51d308c6171070bfb3 - [view on LGTM.com](https://lgtm.com/projects/g/su2code/SU2/rev/pr-2fdd443b42b0493a8fe88d37d96e95800ec73425). **new alerts:**. * 2 for Resource not released in destructor; * 2 for Comparison of narrow type with wide type in loop condition,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1356#issuecomment-933000397:291,release,released,291,https://su2code.github.io,https://github.com/su2code/SU2/pull/1356#issuecomment-933000397,1,['release'],['released']
Deployability,This pull request **introduces 4 alerts** when merging 7aacabbb21611ddef01784812130778d5006690d into 58c580b84860fff31340e3fa3593257a2dd7fb3f - [view on LGTM.com](https://lgtm.com/projects/g/su2code/SU2/rev/pr-b3443d9e57183f00339618362a76ce60b2a68b6c). **new alerts:**. * 2 for Resource not released in destructor; * 2 for Comparison of narrow type with wide type in loop condition,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1356#issuecomment-932851913:291,release,released,291,https://su2code.github.io,https://github.com/su2code/SU2/pull/1356#issuecomment-932851913,1,['release'],['released']
Deployability,This pull request **introduces 4 alerts** when merging dfdd090f453cb1beb6fb51ed55c831eecfebb42b into 58c580b84860fff31340e3fa3593257a2dd7fb3f - [view on LGTM.com](https://lgtm.com/projects/g/su2code/SU2/rev/pr-c4807a1cbabf8717bcb1157b75476979099cd326). **new alerts:**. * 2 for Resource not released in destructor; * 2 for Comparison of narrow type with wide type in loop condition,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1356#issuecomment-932870005:291,release,released,291,https://su2code.github.io,https://github.com/su2code/SU2/pull/1356#issuecomment-932870005,1,['release'],['released']
Deployability,This pull request **introduces 45 alerts** when merging 3f0247625a9510232edf439297d7295888c6a3ed into 328a1b747a4785d13b749e7fb6cc4589fd1b9529 - [view on LGTM.com](https://lgtm.com/projects/g/su2code/SU2/rev/pr-b7247622daf2ab4c1473f91e3781594485b33b10). **new alerts:**. * 45 for Resource not released in destructor,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1300#issuecomment-1095335429:293,release,released,293,https://su2code.github.io,https://github.com/su2code/SU2/pull/1300#issuecomment-1095335429,1,['release'],['released']
Deployability,This pull request **introduces 46 alerts** when merging 233fd6b7275bf06c3e9b6f4e5006dfd0424a9725 into c1006128e2e8165490fcd83f4aaa8ea2d46f040f - [view on LGTM.com](https://lgtm.com/projects/g/su2code/SU2/rev/pr-df7fb781c79ee13a7d5e535318f9c4e2b3e32ae0). **new alerts:**. * 46 for Resource not released in destructor,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1586#issuecomment-1083217431:293,release,released,293,https://su2code.github.io,https://github.com/su2code/SU2/pull/1586#issuecomment-1083217431,1,['release'],['released']
Deployability,This pull request **introduces 6 alerts** when merging 464e1beb057da2b7151212930d34d6560428189d into 9f25ad60ed031fa4e1c7d1d009016cc91f6ab587 - [view on LGTM.com](https://lgtm.com/projects/g/su2code/SU2/rev/pr-9453c2facae7dceb3523fbef2285786e3545355b). **new alerts:**. * 4 for Comparison of narrow type with wide type in loop condition; * 2 for Resource not released in destructor,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1356#issuecomment-933257525:359,release,released,359,https://su2code.github.io,https://github.com/su2code/SU2/pull/1356#issuecomment-933257525,1,['release'],['released']
Deployability,This pull request **introduces 6 alerts** when merging 937053653902cac3508fddbe1859128e6caffb82 into 45214cddb5a5819f0acef68e6316c4dca54ea5b3 - [view on LGTM.com](https://lgtm.com/projects/g/su2code/SU2/rev/pr-66a4ce528e149b819eeed9f0e010fa223f793657). **new alerts:**. * 4 for Resource not released in destructor; * 1 for Non\-virtual destructor in base class; * 1 for Constant return type on member,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1757#issuecomment-1245545711:291,release,released,291,https://su2code.github.io,https://github.com/su2code/SU2/pull/1757#issuecomment-1245545711,1,['release'],['released']
Deployability,This pull request **introduces 7 alerts** when merging 88e9e9f32d1d797eacd114a96387f18c2adaf62d into b1a47bbbbf48dbcf5ceb754bc52c4e00057c3fd6 - [view on LGTM.com](https://lgtm.com/projects/g/su2code/SU2/rev/pr-c9af5862483834bcf116dd973649d46a8ca541d6). **new alerts:**. * 5 for Comparison of narrow type with wide type in loop condition; * 2 for Resource not released in destructor,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1399#issuecomment-939210059:359,release,released,359,https://su2code.github.io,https://github.com/su2code/SU2/pull/1399#issuecomment-939210059,1,['release'],['released']
Deployability,This pull request **introduces 8 alerts** when merging 0e416349defcd44406a1374700a131fdbd7b3a63 into 54e74cc214aba3217c7b1c6632b8d1e82da58f6d - [view on LGTM.com](https://lgtm.com/projects/g/su2code/SU2/rev/pr-a094eb31c33304cd8f9feb72d2c8028be65a833b). **new alerts:**. * 6 for Comparison of narrow type with wide type in loop condition; * 2 for Resource not released in destructor,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1356#issuecomment-936729789:359,release,released,359,https://su2code.github.io,https://github.com/su2code/SU2/pull/1356#issuecomment-936729789,1,['release'],['released']
Deployability,This pull request **introduces 8 alerts** when merging 35e0d76ea50f660ea28a188e92394be61139d11b into 54e74cc214aba3217c7b1c6632b8d1e82da58f6d - [view on LGTM.com](https://lgtm.com/projects/g/su2code/SU2/rev/pr-eeee53f19ea512400f066f3c9205eaaf8f85119b). **new alerts:**. * 6 for Comparison of narrow type with wide type in loop condition; * 2 for Resource not released in destructor,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1356#issuecomment-937431599:359,release,released,359,https://su2code.github.io,https://github.com/su2code/SU2/pull/1356#issuecomment-937431599,1,['release'],['released']
Deployability,This pull request **introduces 8 alerts** when merging 505b44923aa55f797de71930580fda5f1065b914 into 9f25ad60ed031fa4e1c7d1d009016cc91f6ab587 - [view on LGTM.com](https://lgtm.com/projects/g/su2code/SU2/rev/pr-7890ae5a72f2339118332b019cc81b77a08deaa3). **new alerts:**. * 6 for Comparison of narrow type with wide type in loop condition; * 2 for Resource not released in destructor,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1356#issuecomment-933698963:359,release,released,359,https://su2code.github.io,https://github.com/su2code/SU2/pull/1356#issuecomment-933698963,1,['release'],['released']
Deployability,"This pull request deprecates the generalized outflow adjoint. This functionality is still available in an alternate branch, however I won't be able to maintain it for future updates. ; This means that some of the regression tests had to be updated, since they previously included testing this functionality. . This pull request uses a matching branch in the TestCases repository to ease that update - the .travis.yml file will can be switched back to the TestCases/develop branch when needed.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/390:174,update,updates,174,https://su2code.github.io,https://github.com/su2code/SU2/pull/390,3,['update'],"['update', 'updated', 'updates']"
Deployability,"This pull request features some improvements regarding the FFD. To be more precise:; - It is now possible to allow the FFD control points to move in an arbitrary direction. This is automatically enabled if the direction of movement in the design variable definition is set to (0.0,0.0,0.0). The set_ffd_design_var.py is updated accordingly (you can now specify the direction, default is 0.0). At the moment this is only possible for the discrete adjoint. But it could also be extended to the cont. adjoint.; - Along with this goes a refactoring of SU2_DOT to reduce code copy. Especially for the optimization of turbine blades and everything else that is not an airfoil this might be useful.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/239:320,update,updated,320,https://su2code.github.io,https://github.com/su2code/SU2/pull/239,1,['update'],['updated']
Deployability,"This pull request fixes a segfault issue in the continuous adjoint solver initialization. Since iMarker is recycled in SetForceProj_Vector, it could be set as nMarker if no matching marker is found for a given Marker_Monitoring, which leads to an out-of-bounds access. A check on the value of iMarker has been moved from the first for loop (where it is unnecessary), to the second for loop where iMarker is recycled and the segfault occurs.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/482:48,continuous,continuous,48,https://su2code.github.io,https://github.com/su2code/SU2/pull/482,1,['continuous'],['continuous']
Deployability,This pull request fixes the issue #319. Already includes the codi update #350. Would be better to merge the latter first though.,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/351:66,update,update,66,https://su2code.github.io,https://github.com/su2code/SU2/pull/351,1,['update'],['update']
Deployability,"This pull request includes the exact formulation of HLLC jacobians.; The implementation can deal both with ideal and real gases and moving grids too.; (The formulation for real gases is based on ""Exact jacobians for implicit Navier-Stokes simulations of equilibrium real gas flows"" Rinaldi et al, J. of Computational Physics 2014). Regression tests for HLLC scheme are expected to fail since residuals will change due to the new implementation, I will update them later as soon as I have new values. Let me know if you have any question. cheers,; Giulio",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/243:452,update,update,452,https://su2code.github.io,https://github.com/su2code/SU2/pull/243,1,['update'],['update']
Deployability,"This pull request includes:; - updates and refinement of multiple objective gradient evaluation and optimization; - per-surface evaluation of forces and moments can now be included in an optimization or gradient evaluation: this is only used when more than one objective is specified. ; - the multiobjective test case has been added back into the regressions; - FIN_DIFF_STEP can now be specified in the config file (the option was already added in the develop branch; a small modification was needed to the python code in order to use it). If this option is not specified the previous behavior is used. ; - a few minor corrections are also included; - penalty functions can now be used as a portion of the objective. The penalty function is defined as the square of the difference between the function and its constraint - this is hard-coded, but can be modified by simply changing obj_p and obj_dp in the python scripts. . A tutorial around multiobjective optimization may be added later based on the inv_wedge_ROE_multiobj.cfg case.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/385:31,update,updates,31,https://su2code.github.io,https://github.com/su2code/SU2/pull/385,1,['update'],['updates']
Deployability,"This pull request introduces new test cases for the Python wrapper. The first set of tests includes:; - Classical CFD test cases: euler naca0012, rans naca0012, unsteady square cylinder, aeroelastic; - A native FSI test case involving the FSIDriver of SU2: wall channel 2D. These tests are launched using the script pyWrap_SU2_CFD.py being the Py wrapped version of the executable SU2_CFD. . The second set of tests includes:; - A new FSI test case involving the coupling between SU2 and an external structural solver (see TestCases/coupled_fsi/2d_aeroelasticity). . The structural solver is the PitchPlungeAirfoilStructuralTester (see SU2_PY/FSI directory). It was directly written in Python and designed only for this particular test where we measure the aeroelastic response of a pitch-plunge NACA 0012 airfoil under the flutter point. The structural solver tester also illustrates the architecture that is expected for the solid side of the coupling (how the solver is driven, how does the communication layer look like). This test is launched using the script fsi_computation.py (**note** : a parallel run requires mpi4py to be installed on the system). . The serial_ and parallel_regression.py files were simply modified in order to add those sets of test cases. The first set uses a direct comparaison based on residuals, lift, drag,... whereas the second set uses a comparaison based on output files coming from the structural solver. In order to build the Py wrapper and run the tests on travis, the preconfigure.py script was adapted so that the option --enable-PY_WRAPPER can be used. Because Swig and mpi4py are required for the build and for the parallel run respectively, they were also introduced in the travis configuration file where mpi4py can be simply installed using the python-pip package.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/298:1133,install,installed,1133,https://su2code.github.io,https://github.com/su2code/SU2/pull/298,3,"['configurat', 'install']","['configuration', 'installed']"
Deployability,"This pull request introduces the Python wrapping of the SU2 code. The wrapper is based on the CDriver class meaning that every function in that class can be independently called in Python. To compile it:; The code compiles as usual (serial or parallel) using the configure script. The option --enable-PY_WRAPPER has to be added when the compilation of the wrapper is needed. For this compilation, make sure that SWIG (http://www.swig.org) and Python are installed on the system. The generated python module is named SU2Solver.py and lies in the same installation folder than the other executables (SU2_CFD, ...) (--prefix option). To use it: ; Any Python script should be able to import the module SU2Solver.py. This module is then used to drive the main functions of the SU2 code (code pre-processing, run, monitor, output, dynamic mesh deformation, code post-processing, ...). A particular example is given through the new external coupling capability of SU2 for FSI computations: see new files SU2_PY/fsi_computation.py and SU2_PY/FSI/FSIInterface.py. Current limitations: ; The FSI computation can be launched in parallel, but it is currently assumed that only the fluid part (SU2) is parallelized. Also, only matching meshes at the f/s interface are allowed. 2D is fully operational, 3D is still under testing. Coming soon:; 3D framework, Python wrapper regression test case, new MPI communicators, non-matching meshes capability.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/295:454,install,installed,454,https://su2code.github.io,https://github.com/su2code/SU2/pull/295,2,['install'],"['installation', 'installed']"
Deployability,"This pull request is another in a series of pull requests to merge developments of the NEMO branch into develop without a massive PR. . This pull requests addresses:; -Fixes non-operable schemes (ROE, MSW, LAX); -AUSMPWPLUS remains functional but extremely unstable => flag to make unusable.; -Removes config->GetGamma() in with an appropriate function; -Renames 'Get' functions to 'Compute' where applicable. Somethings that are in the works/on the radar:; -Migrate toward Geometry:ToolBox functions (Remove GetBasis function); -Centralize the INDEX information; . ## Related Work; This is related to feature_NEMO and previous pull requests (#1111) . ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.; - [x] I have added a test case that demonstrates my contribution, if necessary.; - [x] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1117:1317,update,updated,1317,https://su2code.github.io,https://github.com/su2code/SU2/pull/1117,1,['update'],['updated']
Deployability,"This pull request is the first phase of an overhaul of the COutput class. As a first step, the serial bottleneck for merging and writing output data in SU2_CFD has been removed in favor of entirely parallel routines for sorting and writing output data. The routines work by sorting the output data into linear partitions on all ranks such that each processor owns an equal chunk of the output. This PR introduces these new routines along with parallel restart (ASCII) and Tecplot (ASCII) file writers. For now, there is no major change to the behavior of the code, other than potential savings in memory and time for file output with SU2_CFD, as this phase was simply a refactoring and rewrite that maintains identical output to the serial version. . Important notes:; * While restarts are now written in parallel, they should contain the exact same information as before. Please make sure your solvers are behaving as expected.; * This refactoring finally allows for users to easily register new variables (including custom variables names) for the output files by separating the loading of local data for the different solvers from the MPI communications and the eventual writing of files. Please see the LoadLocalData_* routines in output_structure.cpp that are now defined for different solvers, which will eventually become virtual functions within child classes of COutput for different physics. ; * SU2_SOL remains intact for now and works the same as before. Parallel file writers for other formats (ParaView, CGNS) are forthcoming, and will eventually replace the remaining serial versions.; * The next step after this PR is to switch the restarts to binary with MPI-IO and to update the restart loaders in all solvers.; * This PR also fixes some memory leaks.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/328:1686,update,update,1686,https://su2code.github.io,https://github.com/su2code/SU2/pull/328,1,['update'],['update']
Deployability,"This pull request replaces AdjointMPI with our own open-source library called Medipack (https://github.com/SciCompKL/MeDiPack). It covers most of the MPI standard (especially non-blocking communication, custom data types and operators), which makes it more flexible for future extensions of the MPI communication in SU2. Furthermore this updates Codi to the newest version and provides support for different taping strategies. Eventually we want to get rid of the #ifdef's for MPI, so I also started with replacing almost all MPI calls with calls to the SU2_MPI wrapper class. . I also removed the complex step datatype since I cannot make sure that it still works (and it makes no sense to maintain a forward mode and complex step ...)",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/473:338,update,updates,338,https://su2code.github.io,https://github.com/su2code/SU2/pull/473,1,['update'],['updates']
Deployability,"This pull requests adds a capability for multi-objective adjoint evaluation. ; In order to use this capability, a matching number of objectives and surface markers on which to evaluate those objectives, as well as weighting values for each objective must be set. This also works with the python optimization tools, where a flag (COMBINE_OBJECTIVE) determines whether the gradients will be evaluated with a single combined adjoint evaluation or with separate, sequential evaluations. . Option Syntax:; For use with shape_optimization.py:; OPT_OBJECTIVE = DRAG*1.0; LIFT*2.0 ; COMBINE_OBJECTIVE = YES; For use with continuous_adjoint, SU2_CFD, etc, or automatically set by the shape_optimization script:; OBJECTIVE = DRAG, LIFT; OBJECTIVE_WEIGHT = 1.0, -2.0; (Note: opt_objective is still effected by automatically-applied signs - that is, whatever scale is applied to lift will be *-1 to make it a maximization problem. User can now reverse that sign if desired.); In either case, MARKER_MONITORING =( drag_surface, lift_surface); If only one surface is specified, it will automatically be the surface for all objectives listed. Different objectives on different surfaces can also be applied, using lists of the same length. . This change required moving some scaling terms - which means that in one of the test cases the values changed because a scaling factor is moved within the boundary conditions rather than applied after the fact (the final gradient result is the same). In addition to allowing the adjoint for a weighted sum of objectives, this may theoretically allow for applying a numerically convenient scaling factor in the future - ie, in cases where the boundary terms are either too large or too small and cause numerical cancellation errors. . Currently limited to finite difference and continuous adjoint - discrete adjoint coming soon in a separate pull request. ; Also coming soon: an additional test case to add this capability to the regressions.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/292:1803,continuous,continuous,1803,https://su2code.github.io,https://github.com/su2code/SU2/pull/292,1,['continuous'],['continuous']
Deployability,This should help with keeping the GitHub actions updated on new releases. This will also help with keeping it secure. Dependabot helps in keeping the supply chain secure https://docs.github.com/en/code-security/dependabot. GitHub actions up to date https://docs.github.com/en/code-security/dependabot/working-with-dependabot/keeping-your-actions-up-to-date-with-dependabot. https://github.com/ossf/scorecard/blob/main/docs/checks.md#dependency-update-tool; Signed-off-by: naveen <172697+naveensrinivasan@users.noreply.github.com>,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1682:49,update,updated,49,https://su2code.github.io,https://github.com/su2code/SU2/pull/1682,3,"['release', 'update']","['releases', 'update-tool', 'updated']"
Deployability,"This sound like your OpenMPI installation is broken, did you compiled it by yourself?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/2091#issuecomment-1657210923:29,install,installation,29,https://su2code.github.io,https://github.com/su2code/SU2/issues/2091#issuecomment-1657210923,1,['install'],['installation']
Deployability,"This sounds like a question that would be great for the forum at cfd-online.com/Forums/su2/; I'm not 100% sure what you mean by ""patching of quadrilateral mesh"" in this context; however someone reading the forum may be able to help, and posting to the forum will allow more people to benefit from the answers.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/158#issuecomment-99255184:129,patch,patching,129,https://su2code.github.io,https://github.com/su2code/SU2/issues/158#issuecomment-99255184,1,['patch'],['patching']
Deployability,"This suggestion is a continuation for the previous report on the topic “[Remove unnecessary null pointer checks](https://github.com/su2code/SU2/issues/26 ""Deletion of redundant pointer checks?"")”.; Would you like to wrap any pointer data members with the template class “[std::unique_ptr](https://en.wikipedia.org/wiki/Smart_pointer#unique_ptr ""Description for std::unique_ptr"")”?. Update candidates:; - [CPoint](https://github.com/su2code/SU2/blob/6d6727d350a918e78592c7e33316edcad06ffb66/Common/src/dual_grid_structure.cpp#L323); - [CSysMatrix](https://github.com/su2code/SU2/blob/6d6727d350a918e78592c7e33316edcad06ffb66/Common/src/matrix_structure.cpp#L70)",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/400:382,Update,Update,382,https://su2code.github.io,https://github.com/su2code/SU2/issues/400,1,['Update'],['Update']
Deployability,This updates some dates and version numbers not captured in the recent update to develop. #1518,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1526:5,update,updates,5,https://su2code.github.io,https://github.com/su2code/SU2/pull/1526,2,['update'],"['update', 'updates']"
Deployability,"This version works with 2D and 3D elements (TRIANGLE, RECTANGLE, TETRAHEDRON, PYRAMID, WEDGE, HEXAHEDRON). Steady is working, the unsteady capability is implemented but not working (it works in previous releases).",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/43:203,release,releases,203,https://su2code.github.io,https://github.com/su2code/SU2/pull/43,1,['release'],['releases']
Deployability,"This works awesome. Except one thing.; I'm trying to build SU2 using Meson inside a Singularity container. However, the configuring of ninja doesn't work there. ; It looks for `python` but if not installed, this is not there, only python3 command is there. It works on my desktop because I have python2 installed there. However, from the documentation it seems I only need python3, in reality it uses both. Last part of the output of the Singularity build:; [meson_output.txt](https://github.com/su2code/SU2/files/3502142/meson_output.txt)",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/745#issuecomment-521301556:196,install,installed,196,https://su2code.github.io,https://github.com/su2code/SU2/pull/745#issuecomment-521301556,2,['install'],['installed']
Deployability,This works for a single case. I will try running a shape optimization with this and update this thread. It was a smart way of setting this. Thanks.,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/970#issuecomment-626908235:84,update,update,84,https://su2code.github.io,https://github.com/su2code/SU2/issues/970#issuecomment-626908235,1,['update'],['update']
Deployability,"Those two cases are not part of the regression suite, and so they were probably not updated as some of the options were renamed.; You can have a look at the other turbomachinery examples (at least two of them are part of the regressions) it should be simple to adapt those options.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1086#issuecomment-706417999:84,update,updated,84,https://su2code.github.io,https://github.com/su2code/SU2/issues/1086#issuecomment-706417999,2,['update'],['updated']
Deployability,"Those would come from package openmpi-dev. From: thw1021 [mailto:notifications@github.com]; Sent: Monday, July 22, 2019 9:13 AM; To: su2code/SU2 <SU2@noreply.github.com>; Cc: Dave Taflin <d.taflin@tecplot.com>; Comment <comment@noreply.github.com>; Subject: Re: [su2code/SU2] C++ compiler cannot create executables (#738). Sorry. Do you mean that although I have installed OpenMPI, I still have to install mpicc and mpicxx ? I am not familiar with such problems.; When I run which mpicc and which mpicxx in the container, there is no outputs. But on the host machine, I can see /usr/bin/mpicc and /usr/bin/mpicxx. Maybe this the reason. —; You are receiving this because you commented.; Reply to this email directly, view it on GitHub<https://github.com/su2code/SU2/issues/738?email_source=notifications&email_token=AADV2HHQUIUX3M4FOVSIWTTQAXL7JA5CNFSM4IFZ52EKYY3PNVWWK3TUL52HS4DFVREXG43VMVBW63LNMVXHJKTDN5WW2ZLOORPWSZGOD2QLXTI#issuecomment-513850317>, or mute the thread<https://github.com/notifications/unsubscribe-auth/AADV2HGXH2W6SXJCN4OLCXLQAXL7JANCNFSM4IFZ52EA>.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/738#issuecomment-513851975:363,install,installed,363,https://su2code.github.io,https://github.com/su2code/SU2/issues/738#issuecomment-513851975,2,['install'],"['install', 'installed']"
Deployability,Thread sanitizer tests in the CI pipeline,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2068:33,pipeline,pipeline,33,https://su2code.github.io,https://github.com/su2code/SU2/pull/2068,1,['pipeline'],['pipeline']
Deployability,"Tim,; I think the Makefile.in are useful also in the developer branch. First for; cases where you install a new machine. Second, for new users who are; already opensource-expirienced and tend to work with develop branch.; Best; Eran; On Sat, Sep 22, 2018 at 20:00 Tim Albring <notifications@github.com> wrote:. > What if we remove all the generated files (Makefile.in) from the; > repository except for the master branch ? In my opinion that makes; > perfectly sense since developers (so all people which use branches other; > than master) usually have autotools installed.; >; > —; > You are receiving this because you are subscribed to this thread.; > Reply to this email directly, view it on GitHub; > <https://github.com/su2code/SU2/pull/586#issuecomment-423765856>, or mute; > the thread; > <https://github.com/notifications/unsubscribe-auth/APKNm-t5IxKPOTuYcY_X58jdqUrmZuEFks5udojGgaJpZM4W1Vuz>; > .; >",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/586#issuecomment-423795781:98,install,install,98,https://su2code.github.io,https://github.com/su2code/SU2/pull/586#issuecomment-423795781,2,['install'],"['install', 'installed']"
Deployability,Time to merge this in. Please update your branches with develop when you can and report any issues.,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/379#issuecomment-284552031:30,update,update,30,https://su2code.github.io,https://github.com/su2code/SU2/pull/379#issuecomment-284552031,1,['update'],['update']
Deployability,"To Whom it May Concern, . I am writing in connection with the Transitional Flat Plate Test Case and wanted to report that the tutorial available on SU2 website was not working with the current version of the code: 7.3. That is to say that after I followed the tutorial step by step without changing anything, I had the following terminal error : ""FGMRES orthogonalization failed, linear solver diverged"". I checked the source code and found a little contradiction between the configuration file of the tutorial and the implementation of the transitional model. As you can see in the configuration file, the turbulence intensity Tu is already specified in % so the factor 100 added to Tu in the code does not seem necessary. . ![configuration_file](https://user-images.githubusercontent.com/109698292/180274079-ece0c6f6-4d64-4897-8e2d-abff41d30056.png); ![code](https://user-images.githubusercontent.com/109698292/180274082-b2dbee2d-a0ea-4967-b33e-a698f61d7471.png). When I erased that factor 100 in the source code (SU2_CFD/include/numerics/turbulent/turb_sources.hpp) I was able to get the same results as displayed in the tutorial for the skin friction coefficient. . Thank you",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1719:476,configurat,configuration,476,https://su2code.github.io,https://github.com/su2code/SU2/issues/1719,2,['configurat'],['configuration']
Deployability,"To be safe for v5, we will disable the new parallel IO restart routines until we have time to test on more and larger machines (a few folks have reported issues). All of the necessary code remains in the develop branch, however, and we will be working on this heavily right after the release.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/364:284,release,release,284,https://su2code.github.io,https://github.com/su2code/SU2/pull/364,1,['release'],['release']
Deployability,"To do it, according to [this](https://stackoverflow.com/questions/23201498/how-to-check-if-python3-was-built-with-enable-shared), in the python shell you can type ; `import sysconfig`; `sysconfig.get_config_vars('Py_ENABLE_SHARED')`; If the result is `[0]`, ie ""False"", you have to build python with the option `--enable-shared`. ; Now, I don't know how to do accomplish that with conda, but with [pyenv](https://github.com/pyenv/pyenv) it involves installing the desired python version with `CONFIGURE_OPTS=--enable-shared pyenv install <version>`. To recap, a ""workflow for newbies"" which appears to be working for me is. 1. install pyenv either from [source](https://github.com/pyenv/pyenv#installation) or from your distibution repositories, if available. IMPORTANT: make sure the environment variables are correctly set and `pyenv init` is added to your shell, as per the installation instructions.; 2. install the desired python version (for example 3.7.8), enabling shared libraries: ; `CONFIGURE_OPTS=--enable-shared pyenv install 3.7.8`; 3. clone/download the [feature_adap](https://github.com/su2code/SU2/tree/feature_adap) branch of SU2;; 4. in the SU2 folder, configure meson ; `./meson.py build` ; and make sure to update the environment variables in your `.bashrc` as indicated by meson's output.; 5. use ninja to build and install SU2 ; `./ninja -C build install`;; if you run into a permission error, specify an installation directory passing the `--prefix` option to meson, as explained [here](https://www.cfd-online.com/Forums/su2-installation/227676-su-installation-failed-due-insufficient-permissions.html). These passages, at least for me, result in a running SU2 with mesh adaptation, although I have made no tests on running actual simulations. That being said, the involvement of pyenv is due to the fact that the provided python wheel for pyamg is for python 3.7 only. If I understand correctly, the library itself is proprietary, sadly, so I assume @bmunguia has access eithe",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/948#issuecomment-751823130:1492,install,install,1492,https://su2code.github.io,https://github.com/su2code/SU2/issues/948#issuecomment-751823130,1,['install'],['install']
Deployability,"To fill in more information in case anyone comes in from google (or wants to chase down a seemingly very rare problem):; The issue appears to be related to Mnlx_ofed and/or gluster. It has spanned two different OSes (Cent8 and Ubuntu 20) with the associated updates to the entire software stack.; As this fix works (despite how cringy it is to remove a ""close"" call), I will keep using that on our systems as it allows SU2 to function.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/971#issuecomment-1013138302:258,update,updates,258,https://su2code.github.io,https://github.com/su2code/SU2/issues/971#issuecomment-1013138302,1,['update'],['updates']
Deployability,To keep the authorship and traceability of the changes I will merge this with the failing testcases and update them in a separate PR (since we have to do other transition-related fixes).,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1132#issuecomment-755500463:104,update,update,104,https://su2code.github.io,https://github.com/su2code/SU2/pull/1132#issuecomment-755500463,1,['update'],['update']
Deployability,"To prepare for v7, I have now updated most of the tutorials to take advantage of the new features in this PR. I have also completed a sweep through all regression tests using this branch and have verified that the tests are ok. So, from my point of view, this is ready to be merged, other than updating the final residuals for a few tests which are pending. I will keep looking into the LSQ issues, so for now, we should be cautious with that option.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/790#issuecomment-558013706:30,update,updated,30,https://su2code.github.io,https://github.com/su2code/SU2/pull/790#issuecomment-558013706,1,['update'],['updated']
Deployability,"Tom, I noticed that in under SU2_PY you have a parse_config.py that takes the cpp and hpp files and parses the data and returns it to the python UI. What is the data structure for this, is this like a data dictionary, key, value pair? can you give me the data structure for this so that I can reuse this in the web app. . Also may be provide me sample datastructure so that I can test it out in the weblayer. Having this in a weblayer is good idea, we can deploy this weblayer so that anyone accessing the web app can use this to create this configuration and use it as a starter.. I can implement a bottle application in python and deploy it in heroku and it can be used across. Thanks for your help. Krishna",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/172#issuecomment-126140571:456,deploy,deploy,456,https://su2code.github.io,https://github.com/su2code/SU2/pull/172#issuecomment-126140571,3,"['configurat', 'deploy']","['configuration', 'deploy']"
Deployability,"Tom,. I have completed the basic html 5/ javascript based configuration generator. Please go thru the readme.md of SU2_IDE/Configuration-gen folder in develop branch and follow the instructions. Let me know if I am going the right direction. Thanks; Krishna",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/172#issuecomment-127882798:58,configurat,configuration,58,https://su2code.github.io,https://github.com/su2code/SU2/pull/172#issuecomment-127882798,2,"['Configurat', 'configurat']","['Configuration-gen', 'configuration']"
Deployability,Try changing regression.yml to compile with Mutation and we'll see if we need to update the docker images.,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1935#issuecomment-1440660479:81,update,update,81,https://su2code.github.io,https://github.com/su2code/SU2/pull/1935#issuecomment-1440660479,1,['update'],['update']
Deployability,"Try the following:; git checkout -- . (this removes any uncommitted changes so please check if you have anything you want to keep); git checkout develop (assuming this checks out from su2code instead of your fork); git pull; git submodule update externals/CoDi (repeat for all submodules that show changes here on github); git check ""this branch""; git commit -a (this will commit the submodules updated above); git push. If this doesn't work, while on this branch do:; cd externals/CoDi; git checkout ""sha from develop"" (you can copy from init submodules python script); cd ../../; git commit -a; git push",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2142#issuecomment-1793703594:239,update,update,239,https://su2code.github.io,https://github.com/su2code/SU2/pull/2142#issuecomment-1793703594,2,['update'],"['update', 'updated']"
Deployability,Try to minimize the size of the folder and add an updated logo.,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/63:50,update,updated,50,https://su2code.github.io,https://github.com/su2code/SU2/issues/63,1,['update'],['updated']
Deployability,"Two options: one (most recent commit, 23ed002) which requires running ./bootstrap for all new installs, and in commit ce9cd2b that updates automake but doesn't require ./bootstrap (through including updated Makefile.in's, etc). ; updated automake found here: https://ftp.gnu.org/gnu/automake/",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/586#issuecomment-426853815:94,install,installs,94,https://su2code.github.io,https://github.com/su2code/SU2/pull/586#issuecomment-426853815,4,"['install', 'update']","['installs', 'updated', 'updates']"
Deployability,U2/io; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/io/state.py to C:\bin\bin/SU2/io; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/io/tools.py to C:\bin\bin/SU2/io; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/io/historyMap.py to C:\bin\bin/SU2/io; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/io/__init__.py to C:\bin\bin/SU2/io; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/opt/project.py to C:\bin\bin/SU2/opt; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/opt/scipy_tools.py to C:\bin\bin/SU2/opt; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/opt/__init__.py to C:\bin\bin/SU2/opt; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/run/adjoint.py to C:\bin\bin/SU2/run; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/run/deform.py to C:\bin\bin/SU2/run; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/run/direct.py to C:\bin\bin/SU2/run; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/run/interface.py to C:\bin\bin/SU2/run; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/run/merge.py to C:\bin\bin/SU2/run; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/run/geometry.py to C:\bin\bin/SU2/run; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/run/projection.py to C:\bin\bin/SU2/run; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/run/__init__.py to C:\bin\bin/SU2/run; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/util/bunch.py to C:\bin\bin/SU2/util; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/util/filter_adjoint.py to C:\bin\bin/SU2/util; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/util/lhc_unif.py to C:\bin\bin/SU2/util; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/util/misc.py to C:\bin\bin/SU2/util; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/util/mp_eval.py to C:\bin\bin/SU2/util; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/util/ordered_bunch.py to C:\bin\bin/SU2/util; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/util/ordered_dict.py to C:\bin\bin/SU2/util; Installi,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1376:6934,Install,Installing,6934,https://su2code.github.io,https://github.com/su2code/SU2/issues/1376,1,['Install'],['Installing']
Deployability,"U2\SU2_PY\SU2/util/filter_adjoint.py to C:\bin\bin/SU2/util; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/util/lhc_unif.py to C:\bin\bin/SU2/util; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/util/misc.py to C:\bin\bin/SU2/util; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/util/mp_eval.py to C:\bin\bin/SU2/util; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/util/ordered_bunch.py to C:\bin\bin/SU2/util; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/util/ordered_dict.py to C:\bin\bin/SU2/util; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/util/plot.py to C:\bin\bin/SU2/util; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/util/polarSweepLib.py to C:\bin\bin/SU2/util; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/util/which.py to C:\bin\bin/SU2/util; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/util/switch.py to C:\bin\bin/SU2/util; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/util/__init__.py to C:\bin\bin/SU2/util; Installing C:\Users\Danie\Documents\SU2\SU2_PY\FSI_tools/__init__.py to C:\bin\bin/FSI_tools; Installing C:\Users\Danie\Documents\SU2\SU2_PY\FSI_tools/FSIInterface.py to C:\bin\bin/FSI_tools; Installing C:\Users\Danie\Documents\SU2\SU2_PY\FSI_tools/FSI_config.py to C:\bin\bin/FSI_tools; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2_Nastran/__init__.py to C:\bin\bin/SU2_Nastran; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2_Nastran/pysu2_nastran.py to C:\bin\bin/SU2_Nastran; Running custom install script 'sh C:\\Users\\Danie\\Documents\\SU2\\SU2_PY/pySU2\\install.sh C:\\Users\\Danie\\Documents\\SU2\\build\\SU2_PY/pySU2 pysu2.py'; Failed to run install script 'sh C:\\Users\\Danie\\Documents\\SU2\\SU2_PY/pySU2\\install.sh C:\\Users\\Danie\\Documents\\SU2\\build\\SU2_PY/pySU2 pysu2.py'; FAILED: meson-install; ""C:\\Users\\Danie\\Anaconda3\\envs\\vsptools\\python.exe"" ""C:\\Users\\Danie\\Documents\\SU2\\meson.py"" ""install"" ""--no-rebuild""; ninja: build stopped: subcommand failed.`. I think it might be d",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1376:8400,Install,Installing,8400,https://su2code.github.io,https://github.com/su2code/SU2/issues/1376,1,['Install'],['Installing']
Deployability,U2_INSTALL_NEW/bin/SU2/util; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/util/misc.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/util; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/util/mp_eval.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/util; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/util/ordered_bunch.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/util; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/util/ordered_dict.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/util; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/util/plot.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/util; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/util/polarSweepLib.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/util; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/util/which.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/util; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/util/switch.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/util; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/util/__init__.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/util; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/FSI/__init__.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/FSI; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/FSI/FSIInterface.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/FSI; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/FSI/PitchPlungeAirfoilStructuralTester.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/FSI; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/FSI/io/__init__.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/FSI; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/FSI/io/FSI_config.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/FSI; Installing /home/slimshady/UserPackages/SU2_NEW/SU2,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/991#issuecomment-632032044:8965,Install,Installing,8965,https://su2code.github.io,https://github.com/su2code/SU2/issues/991#issuecomment-632032044,1,['Install'],['Installing']
Deployability,"U2_INSTALL_NEW/bin/SU2/util; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/util/polarSweepLib.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/util; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/util/which.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/util; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/util/switch.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/util; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/util/__init__.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/util; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/FSI/__init__.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/FSI; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/FSI/FSIInterface.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/FSI; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/FSI/PitchPlungeAirfoilStructuralTester.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/FSI; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/FSI/io/__init__.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/FSI; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/FSI/io/FSI_config.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/FSI; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/FSI/util/__init__.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/FSI; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/FSI/util/switch.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/FSI; Running custom install script '/bin/sh /home/slimshady/UserPackages/SU2_NEW/SU2_PY/pySU2/install.sh /home/slimshady/UserPackages/SU2_NEW/build/SU2_PY/pySU2 pysu2.py'; Running custom install script '/bin/sh /home/slimshady/UserPackages/SU2_NEW/SU2_PY/pySU2/install.sh /home/slimshady/UserPackages/SU2_NEW/build/SU2_PY/pySU2 pysu2ad.py'; ```; This is good news. However, I would have liked to use the official pacman packages. Why did this happen? Is there a way I could build it ",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/991#issuecomment-632032044:9653,Install,Installing,9653,https://su2code.github.io,https://github.com/su2code/SU2/issues/991#issuecomment-632032044,1,['Install'],['Installing']
Deployability,U2_NEW/SU2_PY/mesh_deformation.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/parallel_computation.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/parallel_computation_fsi.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/package_tests.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/shape_optimization.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/merge_solution.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/set_ffd_design_var.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/compute_polar.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/compute_multipoint.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/discrete_adjoint.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/direct_differentiation.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/fsi_computation.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2_CFD.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/__init__.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/eval/design.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/eval; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/eval/functions.py to /home/slimshady/UserPackage,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/991#issuecomment-632032044:3021,Install,Installing,3021,https://su2code.github.io,https://github.com/su2code/SU2/issues/991#issuecomment-632032044,1,['Install'],['Installing']
Deployability,U2_NEW/SU2_PY/parallel_computation_fsi.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/package_tests.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/shape_optimization.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/merge_solution.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/set_ffd_design_var.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/compute_polar.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/compute_multipoint.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/discrete_adjoint.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/direct_differentiation.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/fsi_computation.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2_CFD.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/__init__.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/eval/design.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/eval; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/eval/functions.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/eval; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/eval/gradients.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/eval; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/eval/__init__.py to /home/slim,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/991#issuecomment-632032044:3279,Install,Installing,3279,https://su2code.github.io,https://github.com/su2code/SU2/issues/991#issuecomment-632032044,1,['Install'],['Installing']
Deployability,U2_PY/continuous_adjoint.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/compute_uncertainty.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/finite_differences.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/mesh_deformation.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/parallel_computation.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/parallel_computation_fsi.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/package_tests.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/shape_optimization.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/merge_solution.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/set_ffd_design_var.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/compute_polar.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/compute_multipoint.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/discrete_adjoint.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/direct_differentiation.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/fsi_computation.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2_CFD.py to /home/slimshady/UserPackages/SU2_INSTA,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/991#issuecomment-632032044:2640,Install,Installing,2640,https://su2code.github.io,https://github.com/su2code/SU2/issues/991#issuecomment-632032044,1,['Install'],['Installing']
Deployability,"Unfortunately, there is an issue with doing a tiny update at the end of the simulation. To illustrate the numbers, lets assume that CL is converged to the `TARGET_CL` to within 10^-6. . In this case the finite-difference update is tiny: \alpha is changed by 10^-7 degrees (this is because `DCL_DALPHA` is usually between 0.5 and 0.05 and change in alpha = `(TARGET_CL-CL)/DCL_DALPHA`) . The change in CL resulting from this finite-difference step is small (10^-8) enough that if the solution isn't extremely converged (in this case, change in CL over two consecutive iterations is < 10^-9), the gradients calculated will be incorrect. . Anecdotally, the reduction in density residual in the simulation would have to be ~8 orders to get these gradients to be correct. This could add a large number of iterations and/or time to solution, especially for 3D RANS cases. Additionally, I am not sure what the best way to force this level of convergence would be. . Which brings me back to my original problem of trying to output the solution before the finite difference step. Well, I can definitely output the solution at the end of the fixed Cl mode, but it just gets overwritten when the solver finally exits after the finite difference step. The easiest way around this would be if there is a way to disable the output of the volume files after the solver exits. Something that could be changed from the CFluidIteration ideally. . I am sorry this feature is causing this issue. Unfortunately, even the way it is currently implemented in develop (without my changes, but after the new output structure) is plagued with the same problem.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/780#issuecomment-540421163:51,update,update,51,https://su2code.github.io,https://github.com/su2code/SU2/pull/780#issuecomment-540421163,2,['update'],['update']
Deployability,Until now we have always patched the interface.py by hand to make it run on Windows Server 2012 R2.; By issueing a PR we hope this won't be necessary in the future anymore.,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/331:25,patch,patched,25,https://su2code.github.io,https://github.com/su2code/SU2/pull/331,1,['patch'],['patched']
Deployability,Update AUTHORS.md,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1390:0,Update,Update,0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1390,1,['Update'],['Update']
Deployability,Update AUTHORS.md (CHECK IF YOU ARE HERE!),MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1186:0,Update,Update,0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1186,1,['Update'],['Update']
Deployability,Update Area computations with the geometry toolbox,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1137:0,Update,Update,0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1137,1,['Update'],['Update']
Deployability,Update Bug Report and Pull Request templates,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1612:0,Update,Update,0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1612,1,['Update'],['Update']
Deployability,Update CODE_OF_CONDUCT.md,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/695:0,Update,Update,0,https://su2code.github.io,https://github.com/su2code/SU2/pull/695,1,['Update'],['Update']
Deployability,Update CoDiPack and MeDiPack,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1049:0,Update,Update,0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1049,1,['Update'],['Update']
Deployability,Update CoDiPack.,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1096:0,Update,Update,0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1096,1,['Update'],['Update']
Deployability,Update CoolProp to v6.5.0,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2136:0,Update,Update,0,https://su2code.github.io,https://github.com/su2code/SU2/pull/2136,1,['Update'],['Update']
Deployability,Update LUT routine,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1792:0,Update,Update,0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1792,1,['Update'],['Update']
Deployability,Update MEL,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2144:0,Update,Update,0,https://su2code.github.io,https://github.com/su2code/SU2/pull/2144,1,['Update'],['Update']
Deployability,Update SU2-python 2.0,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1359:0,Update,Update,0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1359,1,['Update'],['Update']
Deployability,Update Xcode,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1535:0,Update,Update,0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1535,1,['Update'],['Update']
Deployability,Update Xcode and one bug fix,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/981:0,Update,Update,0,https://su2code.github.io,https://github.com/su2code/SU2/pull/981,1,['Update'],['Update']
Deployability,Update adaptive CFL,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1036:0,Update,Update,0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1036,1,['Update'],['Update']
Deployability,Update arm64 regressions,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1777:0,Update,Update,0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1777,2,['Update'],['Update']
Deployability,Update catch.hpp to v2.13.9,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1726:0,Update,Update,0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1726,1,['Update'],['Update']
Deployability,Update codi/medi,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/495:0,Update,Update,0,https://su2code.github.io,https://github.com/su2code/SU2/pull/495,1,['Update'],['Update']
Deployability,Update config_template.cfg,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1934:0,Update,Update,0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1934,1,['Update'],['Update']
Deployability,Update driver_direct_singlezone.cpp,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/707:0,Update,Update,0,https://su2code.github.io,https://github.com/su2code/SU2/pull/707,1,['Update'],['Update']
Deployability,Update for compatibility with TACC machines,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/227:0,Update,Update,0,https://su2code.github.io,https://github.com/su2code/SU2/pull/227,1,['Update'],['Update']
Deployability,Update issue templates,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/647:0,Update,Update,0,https://su2code.github.io,https://github.com/su2code/SU2/pull/647,1,['Update'],['Update']
Deployability,Update master,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1173:0,Update,Update,0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1173,7,['Update'],['Update']
Deployability,Update master according to release 7.0.7,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1098:0,Update,Update,0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1098,2,"['Update', 'release']","['Update', 'release']"
Deployability,Update of CoDiPack and MeDiPack versions,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/660:0,Update,Update,0,https://su2code.github.io,https://github.com/su2code/SU2/pull/660,1,['Update'],['Update']
Deployability,Update of Codi to the most recent version.,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/350:0,Update,Update,0,https://su2code.github.io,https://github.com/su2code/SU2/pull/350,1,['Update'],['Update']
Deployability,Update of MeDiPack.,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1210:0,Update,Update,0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1210,1,['Update'],['Update']
Deployability,Update of MeDiPack. Fixes issue https://github.com/su2code/SU2/issues/1209.,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1210:0,Update,Update,0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1210,1,['Update'],['Update']
Deployability,Update of SU2-Python 3.0,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1363:0,Update,Update,0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1363,1,['Update'],['Update']
Deployability,Update of meson and ninja to most recent version,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/998:0,Update,Update,0,https://su2code.github.io,https://github.com/su2code/SU2/pull/998,1,['Update'],['Update']
Deployability,Update of the python fsi interface and new feature coupling SU2 with Nastran,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1124:0,Update,Update,0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1124,1,['Update'],['Update']
Deployability,Update option_structure.hpp,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/154:0,Update,Update,0,https://su2code.github.io,https://github.com/su2code/SU2/pull/154,1,['Update'],['Update']
Deployability,Update solver_direct_mean.cpp,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/71:0,Update,Update,0,https://su2code.github.io,https://github.com/su2code/SU2/pull/71,1,['Update'],['Update']
Deployability,Update tests and fix windows compilation,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2165:0,Update,Update,0,https://su2code.github.io,https://github.com/su2code/SU2/pull/2165,1,['Update'],['Update']
Deployability,"Update the email on the code of conduct to the su2 Foundation site. ## Proposed Changes; Just a minor change to point to the Foundation info email in the code of conduct. ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/695:0,Update,Update,0,https://su2code.github.io,https://github.com/su2code/SU2/pull/695,1,['Update'],['Update']
Deployability,Update to check convergence in elasticity adjoint problems.,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/901:0,Update,Update,0,https://su2code.github.io,https://github.com/su2code/SU2/pull/901,1,['Update'],['Update']
Deployability,Update to my comment above ~~But Nemo does not implement its own BC_Sym_Plane and uses the standard FVM implementation~~ ...turns out Nemo uses its own implementation. So Please re-use / adapt the one in CFVMSolver,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1625#issuecomment-1117417733:0,Update,Update,0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1625#issuecomment-1117417733,1,['Update'],['Update']
Deployability,Update to start volume averaging after StartWindowIteration.,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2251:0,Update,Update,0,https://su2code.github.io,https://github.com/su2code/SU2/pull/2251,2,['Update'],['Update']
Deployability,"Update to the current version of SU2 please, we updated the Metis partitioning strategy here: https://github.com/su2code/SU2/pull/1059",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1307#issuecomment-866983616:0,Update,Update,0,https://su2code.github.io,https://github.com/su2code/SU2/issues/1307#issuecomment-866983616,2,"['Update', 'update']","['Update', 'updated']"
Deployability,Update turbomachinery testcases and regression tests,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2158:0,Update,Update,0,https://su2code.github.io,https://github.com/su2code/SU2/pull/2158,1,['Update'],['Update']
Deployability,Update variable_direct_mean.cpp,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/308:0,Update,Update,0,https://su2code.github.io,https://github.com/su2code/SU2/pull/308,2,['Update'],['Update']
Deployability,Update xcode,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1405:0,Update,Update,0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1405,1,['Update'],['Update']
Deployability,"Update/Solution: [d42692f](https://github.com/su2code/SU2/pull/1536/commits/d42692ff23874d84be2c735c3d9b678f77cb1155) and [44bc57b](https://github.com/su2code/SU2/pull/1536/commits/44bc57b8fa4a799dea3a0b84b0ba142cdae78a96) add the Intermediate storage of the adjoint solution and the storage for the external(OF) contribution to the pressure drop adjoint which solves the issue described in this post :blush: . So for CHT the situation is this:. For prescribed massflow I do get a good gradient agreement (DA vs FD). Below a picture with avgTemp and massflow OF; ![image](https://user-images.githubusercontent.com/31306376/152950660-a44bc925-22df-4195-b82b-1704c3f8b258.png). But if I switch to prescribed massflow and look at the avgTemp and pressureDrop OF then the gradient is again bad; ![image](https://user-images.githubusercontent.com/31306376/152951575-2df956a8-1c20-43e9-a68d-a19199025656.png). Here an comparison of sensitivities (wrt to mdot and dp OF (top/bottom)) for massflow and pressure drop precsribed flows (red/orange). The expectation is, that for massflow prescription, the sensitivity wrt to the massflow OF would be zero ... but we see that the sensitivities are very similar to the pressure-drop prescribed flow, so the hypothesis now is, for multizone the algorithm for some reason does not incorporate the pressure-drop adjoint which works like a charm for singlezone ; ![image](https://user-images.githubusercontent.com/31306376/152971870-9c37081b-0e5a-45b7-b320-04a10aafd293.png)",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1536#issuecomment-1032360593:0,Update,Update,0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1536#issuecomment-1032360593,1,['Update'],['Update']
Deployability,Update: Everything seems to work correctly now.,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2194#issuecomment-2033753653:0,Update,Update,0,https://su2code.github.io,https://github.com/su2code/SU2/pull/2194#issuecomment-2033753653,1,['Update'],['Update']
Deployability,"Update: This should be fixed in #2011, apologies this took so long to get round it in what is a very simple fix.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/857#issuecomment-1701148094:0,Update,Update,0,https://su2code.github.io,https://github.com/su2code/SU2/issues/857#issuecomment-1701148094,1,['Update'],['Update']
Deployability,"Update: Wally found an index issue with the Ds calculation. Now model works for neutral and ionized flows, as long as free-stream concentrations are non-zero. Forward work is to fix it so that free-stream concentrations can be zero and not cause a problem.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1887#issuecomment-1397531390:0,Update,Update,0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1887#issuecomment-1397531390,1,['Update'],['Update']
Deployability,"Update: model runs with air-5 and air-7 but diverges in ~10 iterations. Need to check implementation, look for bugs.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1887#issuecomment-1396289511:0,Update,Update,0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1887#issuecomment-1396289511,1,['Update'],['Update']
Deployability,Updated Adjoint variable to Continuous_Adjoint,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/244:0,Update,Updated,0,https://su2code.github.io,https://github.com/su2code/SU2/pull/244,1,['Update'],['Updated']
Deployability,Updated FEA solver (steady state),MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/43:0,Update,Updated,0,https://su2code.github.io,https://github.com/su2code/SU2/pull/43,1,['Update'],['Updated']
Deployability,Updated MLPCpp module supporting additional input/output scaling methods,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2369:0,Update,Updated,0,https://su2code.github.io,https://github.com/su2code/SU2/pull/2369,1,['Update'],['Updated']
Deployability,Updated SU2_DEF,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/130:0,Update,Updated,0,https://su2code.github.io,https://github.com/su2code/SU2/pull/130,1,['Update'],['Updated']
Deployability,Updated Xcode projects,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/602:0,Update,Updated,0,https://su2code.github.io,https://github.com/su2code/SU2/pull/602,1,['Update'],['Updated']
Deployability,"Updated all the regression test values. Ran all of them to convergence and the difference in the integrated quantities (lift, drag, sens_press, entropy generation etc) were < 1%. . While running the regression tests, I saw that some of them weren't up to date with the best practices from the recent PRs. I know they are for Regressions and not necessarily as example configs, but I think it'd be good to have the configs reflect best practices so that people can look to them for reference. . If people are on board with that, I can update some of the rans configs to include things like ILU, adaptive CFL, the new convergence monitoring systems etc. I will make sure that the tests still cover all the relevant config options. I will also make sure that if you were to run the test individually, it would run to convergence.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/905#issuecomment-600991354:0,Update,Updated,0,https://su2code.github.io,https://github.com/su2code/SU2/pull/905#issuecomment-600991354,3,"['Update', 'integrat', 'update']","['Updated', 'integrated', 'update']"
Deployability,Updated binomial,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/212:0,Update,Updated,0,https://su2code.github.io,https://github.com/su2code/SU2/pull/212,1,['Update'],['Updated']
Deployability,Updated name of PR to reflect requested changes,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2001#issuecomment-1495495238:0,Update,Updated,0,https://su2code.github.io,https://github.com/su2code/SU2/pull/2001#issuecomment-1495495238,1,['Update'],['Updated']
Deployability,Updates of SU2-python,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1357:0,Update,Updates,0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1357,1,['Update'],['Updates']
Deployability,"Updates to .travis.yml to get the tests working after the Travis CI move to Ubuntu Trusty. Script is a bit cleaner, but there were also a few important changes to fix problems related to compilers and Python packages.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/420:0,Update,Updates,0,https://su2code.github.io,https://github.com/su2code/SU2/pull/420,1,['Update'],['Updates']
Deployability,Updates to NEMO solvers,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1111:0,Update,Updates,0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1111,1,['Update'],['Updates']
Deployability,"Updates to compute_polar.py and supporting library before releasing. Added a new test case to the regressions. Thanks again for the contribution, Eran!",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/361:0,Update,Updates,0,https://su2code.github.io,https://github.com/su2code/SU2/pull/361,1,['Update'],['Updates']
Deployability,Updates to interpolation:; - Parallelized isoparametric interpolation; - Modified variable names w/in isoparametric calc for easier human-interpretation; - Introduced 'mirror' interpolation for use with Consistent & Conservative interpolation; - modified driver_structure such that structure -> fluid interpolation is defined first (which is necessary for C&C interpolation); - some code which was repeated in multiple interpolator child classes was moved to functions defined in the parent interpolator class (Determine_ArraySize and Collect_VertexInfo).,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/231:0,Update,Updates,0,https://su2code.github.io,https://github.com/su2code/SU2/pull/231,1,['Update'],['Updates']
Deployability,Updates to the Elastic mesh solver and AD-wrapped code,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/760:0,Update,Updates,0,https://su2code.github.io,https://github.com/su2code/SU2/pull/760,1,['Update'],['Updates']
Deployability,Updates were just pushed to the related PR.,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/698#issuecomment-595945548:0,Update,Updates,0,https://su2code.github.io,https://github.com/su2code/SU2/issues/698#issuecomment-595945548,1,['Update'],['Updates']
Deployability,"Updating my Fork. ## Proposed Changes; *Give a brief overview of your contribution here in a few sentences.*; . ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [ ] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [ ] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1018:883,update,updated,883,https://su2code.github.io,https://github.com/su2code/SU2/pull/1018,1,['update'],['updated']
Deployability,"Upfront: I am running a mingw-64 terminal on windows as suggested in the SUAVE build instructions. . From another thread, it was suggested to go into SU2\externals\AMGIO\su2io and try to manually build the _amgio; When I run the command 'python setup.py build_ext -c mingw32' I get the following output. . `running build_ext; building '_amgio' extension; swigging ./sources/Python3.7/amgio_py.i to ./sources/Python3.7/amgio_py_wrap.c; C:\Softwares\swigwin-4.0.2\swig.exe -python -o ./sources/Python3.7/amgio_py_wrap.c ./sources/Python3.7/amgio_py.i; creating build; creating build\temp.win-amd64-3.8; creating build\temp.win-amd64-3.8\Release; creating build\temp.win-amd64-3.8\Release\sources; creating build\temp.win-amd64-3.8\Release\sources\python3.7; C:\Program Files\mingw-w64\x86_64-8.1.0-posix-seh-rt_v6-rev0\mingw64\bin\gcc.exe -mdll -O -Wall -DMS_WIN64 -IC:\Users\Danie\Anaconda3\envs\vsptools\include -IC:\Users\Danie\Anaconda3\envs\vsptools\include -c ./sources/Python3.7/amgio_py.c -o build\temp.win-amd64-3.8\Release\.\sources\python3.7\amgio_py.o -std=c99 -Wno-unused-variable -Wno-unused-result -O3; ./sources/Python3.7/amgio_py.c: In function 'py_WriteMeshAndSol':; ./sources/Python3.7/amgio_py.c:628:28: warning: '.csv' directive writing 4 bytes into a region of size between 1 and 1024 [-Wformat-overflow=]; sprintf(OutSol, ""%s.csv"", BasNamSol);; ^~~~; ./sources/Python3.7/amgio_py.c:628:9: note: 'sprintf' output between 5 and 1028 bytes into a destination of size 1024; sprintf(OutSol, ""%s.csv"", BasNamSol);; ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~; ./sources/Python3.7/amgio_py.c:624:28: warning: '.dat' directive writing 4 bytes into a region of size between 1 and 1024 [-Wformat-overflow=]; sprintf(OutSol, ""%s.dat"", BasNamSol);; ^~~~; ./sources/Python3.7/amgio_py.c:624:9: note: 'sprintf' output between 5 and 1028 bytes into a destination of size 1024; sprintf(OutSol, ""%s.dat"", BasNamSol);; ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~; ./sources/Python3.7/amgio_py.c:614:26: warning: ",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1379:635,Release,Release,635,https://su2code.github.io,https://github.com/su2code/SU2/issues/1379,3,['Release'],['Release']
Deployability,Upgrade external CGNS library to 4.4 release.,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2179:0,Upgrade,Upgrade,0,https://su2code.github.io,https://github.com/su2code/SU2/pull/2179,2,"['Upgrade', 'release']","['Upgrade', 'release']"
Deployability,Upgrade to meson 0.61.1,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1509:0,Upgrade,Upgrade,0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1509,1,['Upgrade'],['Upgrade']
Deployability,Use doxygen to keep config options updated,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/122:35,update,updated,35,https://su2code.github.io,https://github.com/su2code/SU2/issues/122,1,['update'],['updated']
Deployability,Use latest build-su2-cross Docker image for `release-management` Github Actions workflow,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1693:45,release,release-management,45,https://su2code.github.io,https://github.com/su2code/SU2/pull/1693,1,['release'],['release-management']
Deployability,Use setuptools to install SU2 Python package and scripts into Python environment,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/463:18,install,install,18,https://su2code.github.io,https://github.com/su2code/SU2/issues/463,1,['install'],['install']
Deployability,UserPackages/SU2_INSTALL_NEW/bin/SU2/io; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/mesh/adapt.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/mesh; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/mesh/tools.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/mesh; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/mesh/__init__.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/mesh; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/opt/project.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/opt; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/opt/scipy_tools.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/opt; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/opt/__init__.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/opt; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/run/adaptation.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/run; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/run/adjoint.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/run; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/run/deform.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/run; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/run/direct.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/run; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/run/interface.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/run; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/run/merge.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/run; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/run/geometry.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/run; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/run/projection.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/run; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/991#issuecomment-632032044:6497,Install,Installing,6497,https://su2code.github.io,https://github.com/su2code/SU2/issues/991#issuecomment-632032044,1,['Install'],['Installing']
Deployability,"Vajjala,; you may want to try to use the older preconfig/mame/make install procedure.; Just do the preconfig process (with -u parameter) on a machine that is; connected to the internet so codi/medi versions will be updated; Next step: search the preconfig.py file for the codi/medi version (look; for ""sha_version_codi="" and ""sha_version_medi="").; Write down the two strings somewhere.; Then transfer the whole install folder to the disconnected cluster.; Once on the cluster, go to folder external/codi and touch a file by the; name of the string you have written down.; Repeat the same with medi (external/medi).; Now do on the cluster preconfig.py/make/make install (without -u). The; codi/medi versions will match now and the installation should work.; The problem with this procedure is that it is not supported anymore. It; still worked for me a short time ago with the develop branch (but failed on; the master branch). Meson/ninja installation is significantly more; efficient and most of the developers here ain't familiar with life without; an internet connection ... Last warning: the above-listed messages seem to point over a compiler; issue. If indeed this is the case then the bypass that I suggested is; irrelevant. On Tue, Apr 28, 2020 at 7:43 PM SumanVajjala <notifications@github.com>; wrote:. > @economon <https://github.com/economon> I have personally installed SU2; > software (from versions 3 to 6) in our cluster without problems. I think; > the issues could be because of lack of C11 features. I tried to run a; > sample code with aligned_alloc and I had problems with both Intel and GCC; > compilers. I'll test this again. I think I'll have to install gcc myself.; >; > Regards; > Suman; >; > —; > You are receiving this because you are subscribed to this thread.; > Reply to this email directly, view it on GitHub; > <https://github.com/su2code/SU2/issues/955#issuecomment-620724039>, or; > unsubscribe; > <https://github.com/notifications/unsubscribe-auth/ADZI3G66H554WAUPB",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/955#issuecomment-621078198:945,install,installation,945,https://su2code.github.io,https://github.com/su2code/SU2/issues/955#issuecomment-621078198,1,['install'],['installation']
Deployability,"Variable name change (Adjoint -> ContinuousAdjoint). There is now a clear distinction between DiscreteAdjoint variable and ContinuousAdjoint variable (booleans). I have also fixed some bugs in the I/O (tecplot and fieldview) due to the previous problem: we were using only the Adjoint boolean and the Discrete adjoint output was incorrect. An interesting bug in geometry.py has been also fixed. We must keep an eye on shape design using geometrical constraints. Because of this problem, it is not working in the master repository and current release.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/244:33,Continuous,ContinuousAdjoint,33,https://su2code.github.io,https://github.com/su2code/SU2/pull/244,3,"['Continuous', 'release']","['ContinuousAdjoint', 'release']"
Deployability,"Version 4.1.0 ""Cardinal"", installed both on my own MacBook Pro and the super computer at my school. Neither can output flow solution when using more than one cores, but the restart file is written with no problem. Not quite sure why... Have to trick the code and restart it to get the solution. . Thanks,; Paul",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/268:26,install,installed,26,https://su2code.github.io,https://github.com/su2code/SU2/issues/268,1,['install'],['installed']
Deployability,"Version: 0.54.999; Source dir: C:\Users\Danie\Documents\SU2; Build dir: C:\Users\Danie\Documents\SU2\build; Build type: native build; Project name: SU2; Project version: 7.2.0 ""Blackbird""; C compiler for the host machine: gcc (gcc 8.1.0 ""gcc (x86_64-posix-seh-rev0, Built by MinGW-W64 project) 8.1.0""); C linker for the host machine: gcc ld.bfd 2.30; C++ compiler for the host machine: c++ (gcc 8.1.0 ""c++ (x86_64-posix-seh-rev0, Built by MinGW-W64 project) 8.1.0""); C++ linker for the host machine: c++ ld.bfd 2.30; Host machine cpu family: x86_64; Host machine cpu: x86_64; Program python3 found: YES (C:\Users\Danie\Anaconda3\envs\vsptools\python.exe); Did not find pkg-config by name 'pkg-config'; Found Pkg-config: NO; mpicc found: NO; Run-time dependency MPI for c found: NO (tried pkgconfig and config-tool); mpic++ found: NO; Run-time dependency MPI for cpp found: NO (tried pkgconfig and config-tool); Program swig found: YES (C:\Softwares\swigwin-4.0.2\swig.EXE); Dependency python found: YES (sysconfig); Program install.sh found: YES (sh C:\Users\Danie\Documents\SU2\SU2_PY/pySU2\install.sh); Message: -------------------------------------------------------------------------; | ___ _ _ ___ |; | / __| | | |_ ) Release 7.2.0 ""Blackbird"" |; | \__ \ |_| |/ / |; | |___/\___//___| Meson Configuration Summary |; | |; -------------------------------------------------------------------------. Option Value; ---------------------; TecIO: false; CGNS: true; AD (reverse): true; AD (forward): true; Python Wrapper: true; Intel-MKL: false; OpenBlas: false; PaStiX: false; Mixed Float: false; libROM: false. Please be sure to add the $SU2_HOME and $SU2_RUN environment variables,; and update your $PATH (and $PYTHONPATH if applicable) with $SU2_RUN. Based on the input to this configuration, add these lines to your .bashrc file:. export SU2_RUN=C:\bin/bin; export SU2_HOME=C:\Users\Danie\Documents\SU2; export PATH=$PATH:$SU2_RUN; export PYTHONPATH=$PYTHONPATH:$SU2_RUN. Use './ninja -C C:\Users\",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1376:1613,install,install,1613,https://su2code.github.io,https://github.com/su2code/SU2/issues/1376,1,['install'],['install']
Deployability,"Very nice job, Tim. I can report that it works fine for me on Mac and a linux cluster. One suggestion to make our transition easier: if you agree, can you please add a 'bootstrap_meson' file in the root that will set up the build system like our current 'bootstrap' script? I am thinking just something like:; ```; git submodule update --init --recursive; cd externals/ninja; ./configure.py --bootstrap; cd ..; export PATH=$PWD/externals/ninja:$PWD/externals/meson:$PATH; ```; since I found that I usually need to get meson and ninja on my systems. This should also be familiar to folks given our current workflow.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/745#issuecomment-516687563:329,update,update,329,https://su2code.github.io,https://github.com/su2code/SU2/pull/745#issuecomment-516687563,1,['update'],['update']
Deployability,"Volume Source term only this pressure drop is used. The initial value at solver start is the value given in `STREAMWISE_PERIODIC_PRESSURE_DROP= ??` and for restarted/adjoint simulations the `STREAMWISE_PERIODIC_PRESSURE_DROP` from `flow.meta` is taken. Now this PR:. Until now, the update of the pressure drop, based on the difference between current and prescribed massflow, was done in the Flow solver Preprocessing. That causes some trouble as that routine is called multiple times during normal starts, restarts and even twice(!) for every normal iteration. So do not put any iterated quantities in those like I did. I now did put the update right in front of where it is used -> in the Source_Residual. Like so there shoulnd't be that much trouble of correct taping in that one iteration for the adjoint and it makes the logic of `Inner_iter/outer_iter==0` etc unnecessary. I am not sure the changes up until now are necessary but I am not sure whether they are enough tbh. I will update this description accordingly:. Update: So to give you an idea of the current state of gradient validation. My setup is the good'ol 2D periodic Pin case (fluid-only) with the Design variables being FFD-parameters only around the middle pin (so no Periodic Interface shenanigans up to now) and I have 4 OF: Avg_Temp and Drag on the middle-Pin Surface as well as the Pressure-drop between In/outlet plus massflow through in- OR outlet (which is the same in value but maybe not for the gradient :thinking: ):; 1. For prescribed pressure drop I get a very good agreement for Avg_Temp and Drag (below 0.1% relative diff across the board).; ![image](https://user-images.githubusercontent.com/31306376/152566341-c2d7dc06-c968-41d4-b655-6ba94c211684.png); For Massflow and pressure drop the gradients are off by quite a bit but not too shabby (a good optimizer certainly could make good use of those gradients). Of course the Pressure-drop gradient should be 0 but there are prob some numerical gains to be made. The ",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1536:1239,update,update,1239,https://su2code.github.io,https://github.com/su2code/SU2/pull/1536,1,['update'],['update']
Deployability,WIP and I think there will be some updates on tomorrow's developers meeting.,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/733#issuecomment-655044357:35,update,updates,35,https://su2code.github.io,https://github.com/su2code/SU2/issues/733#issuecomment-655044357,1,['update'],['updates']
Deployability,"Was playing around with the turbomachinery cases with the new multi-zone config. I like the new changes, makes it much clearer!. Just a remark, don't know if this is on purpose, but for the configuration parameter TURBOMACHINERY_KIND, you still need to supply them in the general configuration file for both zones (so in case of a two zone problem: TURBOMACHINERY_KIND = CENTRIFUGAL CENTRIFUGAL). Wouldnt it make more sense to have this per zone specified in the respective configuration file?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/715#issuecomment-514208185:190,configurat,configuration,190,https://su2code.github.io,https://github.com/su2code/SU2/pull/715#issuecomment-514208185,6,['configurat'],['configuration']
Deployability,"We can compute the HBoperator alternatively without using the complex; variables too for now by replacing the routine if fixing this issue is; complex so that we have a working version of HB. Complex numbers and; vectors are used for elegance but I agree with Francisco that getting the; code compiled without any issues is more important. We can keep it; commented for now and I'll push the updated subroutine soon for a working; version of HB and make sure that it is compiled without errors on Mac. Thanks,; Sravya. On Sat, Nov 12, 2016 at 7:24 AM, Tim Albring notifications@github.com; wrote:. > From what I see there is no easy way to resolve this. The problem is that; > the multiplication operator of the complex type in LLVM uses copysign which; > is a function that only excepts double and int... so that means it is not; > possible to instantiate complex with anything else than these types ...; > from my point of view it is not a very smart design decision. We should; > maybe enable the code section depending on the compiler. A possible; > solution would be to implement our own operators, which we would directly; > in codi then.; > ; > —; > You are receiving this because you are subscribed to this thread.; > Reply to this email directly, view it on GitHub; > https://github.com/su2code/SU2/issues/319#issuecomment-260128156, or mute; > the thread; > https://github.com/notifications/unsubscribe-auth/AHenIObXD9Yd0margHrl2xNq7641i7uWks5q9doigaJpZM4KYAX3; > .",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/319#issuecomment-260167765:392,update,updated,392,https://su2code.github.io,https://github.com/su2code/SU2/issues/319#issuecomment-260167765,1,['update'],['updated']
Deployability,"We can remove the calls to SetVolume_Deformation() in between each of the updates of the surface positions for DEFORMING mode in iteration_structure.cpp.. in the case that multiple sequential surface movements are present, they should be additive (they use an increment to the position) and we should be able to call SetVolume_Deformation() just once at the end of the sequence instead.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/730:74,update,updates,74,https://su2code.github.io,https://github.com/su2code/SU2/issues/730,1,['update'],['updates']
Deployability,"We have also encountered the significant memory requirements of the discrete adjoint. Actually, this requirement prevented the use of fine mesh (of 10-20M cells) in optimizations process. This is not the case while using continuous adjoint but the effectiveness of the discrete adjoint is higher by far.; I think this is a very important issue in the actual use of the method. Unfortunately, I do not have any solution to suggest.; Best,; Eran",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/594#issuecomment-427554385:221,continuous,continuous,221,https://su2code.github.io,https://github.com/su2code/SU2/issues/594#issuecomment-427554385,1,['continuous'],['continuous']
Deployability,"We have not found that to be necessary because the interface is mostly unchanged, but if you are aware of anything please open a pull request to the website repository with updates, we welcome all contributors.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/2361#issuecomment-2395582565:173,update,updates,173,https://su2code.github.io,https://github.com/su2code/SU2/issues/2361#issuecomment-2395582565,1,['update'],['updates']
Deployability,"We have releases every month and the official build system is meson.; If this (or any other) feature is fundamental to you, I kindly suggest that you follow the pull requests, and/or test the develop branch prior to each release to make sure it still works.; -DNDEBUG should be added to the compiler flags (CXXFLAGS) not to the preconfigure options (with meson this is done automatically).",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/910#issuecomment-601083184:8,release,releases,8,https://su2code.github.io,https://github.com/su2code/SU2/issues/910#issuecomment-601083184,2,['release'],"['release', 'releases']"
Deployability,"We have resolved this issue: the problem was with the particular combination of MPI implementation and compiler. The problem appeared with Intel MPI (mpigcc for the Intel(R) MPI Library 2017 Update 2 for Linux*) and GCC 6.3.0. Switching to an OpenMPI implementation fixed the issue. As this may be a machine-specific problem, we will close the issue, but please be advised of possible problems with this combination.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/477#issuecomment-361351607:191,Update,Update,191,https://su2code.github.io,https://github.com/su2code/SU2/issues/477#issuecomment-361351607,1,['Update'],['Update']
Deployability,"We use ""develop"" as the staging branch, update your branch with develop when you push the changes.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1951#issuecomment-1465050844:40,update,update,40,https://su2code.github.io,https://github.com/su2code/SU2/pull/1951#issuecomment-1465050844,1,['update'],['update']
Deployability,Well happy new year to you as well 🎉 🥳 🍾 ; I guess you did a find and replace over the repo for 2012-2020 -> 2012-2021. I briefly scrolled over the diff in case we are really unlucky and somewhere for some reason used that somewhere else. Maybe you had a more elaborate method :). When I saw the `+-2`'s at a merge I first thought I missed a release :D,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1239#issuecomment-802823863:342,release,release,342,https://su2code.github.io,https://github.com/su2code/SU2/pull/1239#issuecomment-802823863,1,['release'],['release']
Deployability,Well thanks for reverting the latest two commits with RealReverseIndex and the CoDiPack update and merging this. I guess that work will go on in another PR,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1284#issuecomment-850848108:88,update,update,88,https://su2code.github.io,https://github.com/su2code/SU2/pull/1284#issuecomment-850848108,1,['update'],['update']
Deployability,"Were there [a few update candidates left over](https://github.com/su2code/SU2/blob/6d6727d350a918e78592c7e33316edcad06ffb66/SU2_CFD/src/variable_direct_elasticity.cpp#L160 ""Update candidate: Destructor for CFEM_ElasVariable"")?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/26#issuecomment-307589790:18,update,update,18,https://su2code.github.io,https://github.com/su2code/SU2/issues/26#issuecomment-307589790,2,"['Update', 'update']","['Update', 'update']"
Deployability,"We’re carrying on as usual: please submit PRs to the develop branch when ready. We’ll have more regular releases going forward, and these fixes can be in a maintanence release before long.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/508#issuecomment-365829775:104,release,releases,104,https://su2code.github.io,https://github.com/su2code/SU2/pull/508#issuecomment-365829775,2,['release'],"['release', 'releases']"
Deployability,"What about mpicc and mpicxx? You are trying to build a parallel executable, so is MPI installed?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/738#issuecomment-513848082:86,install,installed,86,https://su2code.github.io,https://github.com/su2code/SU2/issues/738#issuecomment-513848082,1,['install'],['installed']
Deployability,What if we remove all the generated files (Makefile.in) from the repository except for the master branch ? In my opinion that makes perfectly sense since developers (so all people which use branches other than master) usually have autotools installed.,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/586#issuecomment-423765856:241,install,installed,241,https://su2code.github.io,https://github.com/su2code/SU2/pull/586#issuecomment-423765856,1,['install'],['installed']
Deployability,"What is your goal in including LAPACK?. You might want to see the issue I raised ( #478 ). I asked what the LAPACK compile option does, and the short answer is that it doesn't do anything for the master and develop branches. The long answer is that several integrations, such as the higher-order finite element branch, use LAPACK but in different ways.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/481#issuecomment-355588717:257,integrat,integrations,257,https://su2code.github.io,https://github.com/su2code/SU2/issues/481#issuecomment-355588717,1,['integrat'],['integrations']
Deployability,Whats the status here? Release v7.0.5 will be out tmrw :),MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1004#issuecomment-635341008:23,Release,Release,23,https://su2code.github.io,https://github.com/su2code/SU2/pull/1004#issuecomment-635341008,1,['Release'],['Release']
Deployability,"When I enter the ""shape_optimization.py -f unsteady_naca0012_opt.cfg"" in the commend the error is:; ```; Traceback (most recent call last):; File ""C:\Users\74351\Desktop\SU2\SU2\bin\test2\shape_optimization.py"", line 116, in <module>; main(); File ""C:\Users\74351\Desktop\SU2\SU2\bin\test2\shape_optimization.py"", line 34, in main; shape_optimization( options.filename ,; File ""C:\Users\74351\Desktop\SU2\SU2\bin\test2\shape_optimization.py"", line 51, in shape_optimization; config = SU2.io.Config(filename); File ""C:\Users\74351\Desktop\SU2\SU2\bin\SU2\io\config.py"", line 88, in __init__; super(Config,self).__init__(*args,**kwarg); File ""C:\Users\74351\Desktop\SU2\SU2\bin\SU2\util\ordered_bunch.py"", line 83, in __init__; super(OrderedBunch,self).__init__(*args,**kwarg); File ""C:\Users\74351\Desktop\SU2\SU2\bin\SU2\util\ordered_dict.py"", line 48, in __init__; self.__update(*args, **kwds); File ""C:\Users\74351\Desktop\SU2\SU2\bin\SU2\util\ordered_dict.py"", line 174, in update; for key, value in other:; TypeError: 'NoneType' object is not iterable; ```; When I enter the ""parallel_computation.py -f turb_naca0012.cfg -n NP in the commend the error is:; ```; Traceback (most recent call last):; File ""C:\Users\74351\Desktop\SU2\SU2\bin\parallel_computation.py"", line 110, in <module>; main(); File ""C:\Users\74351\Desktop\SU2\SU2\bin\parallel_computation.py"", line 53, in main; raise Exception(""No config file provided. Use -f flag""); Exception: No config file provided. Use -f flag; ```; Any solvers related to "".py"" cannot be executed, but I can run any cases with SU2_CFD. So I wonder if this situation is a problem with the Python Wrapper? . I will be very appreciated if I could get some feedback on this issue.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1567#issuecomment-1074910200:977,update,update,977,https://su2code.github.io,https://github.com/su2code/SU2/issues/1567#issuecomment-1074910200,2,['update'],['update']
Deployability,"When I run config_gui.by, it goes wrong. Traceback (most recent call last):; File ""./SU2_PY/config_gui.py"", line 314, in <module>; option_data = prepare_data() ; File ""./SU2_PY/config_gui.py"", line 300, in prepare_data; option_list = parse_config(config_cpp, config_hpp); File ""/home/ubuntu/SU2/SU2_PY/parse_config.py"", line 84, in parse_config; thisval = s2.split('""')[1]; IndexError: list index out of range. When it reads an empty line, split() returns a list with one element. So the index [1] goes beyond the range. ---. My OS:; Linux ip-172-31-10-55 3.13.0-48-generic #80-Ubuntu SMP Thu Mar 12 11:16:15 UTC 2015 x86_64 x86_64 x86_64 GNU/Linux. SU2 version:; 4.0.2. ---. p.s. Another problem is I have to install wxpython to run config_gui.py. But I think it would be better to use Tkinter which is distributed with python. So it would be helpful to run in cluster environment.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/216:710,install,install,710,https://su2code.github.io,https://github.com/su2code/SU2/issues/216,1,['install'],['install']
Deployability,"When I try to build with Metis 5 I get the following error : ; ../src/geometry_structure.cpp:4994:101: error: cannot convert 'int_' to 'idx_t_ {aka long int_}' for argument '1' to 'int METIS_PartMeshNodal(idx_t_, idx_t_, idx_t_, idx_t_, idx_t_, idx_t_, idx_t_, real_t_, idx_t_, idx_t_, idx_t_, idx_t*)'; METIS_PartMeshNodal(&ne, &nn, eptr, elmnts, NULL, NULL, &nparts, NULL, NULL, &edgecut, epart, npart);. the other problem is that you are using metis static (libmetis.a ) instead of libmetis.so (shared). that' s a problem when you try to package SU^2 for a Linux distribution like Mageia or Fedora or Debian. Just for information , here the patch I made : . ```; Index: SU2-2.0.8/configure; ===================================================================; --- SU2-2.0.8/configure; +++ SU2-2.0.8/configure 2013-12-08 13:56:04.120804942 +0100; @@ -1369,7 +1369,7 @@; --with-Tecio-lib=ARG Tecio library directory, ARG = path to libtecio.a; --with-Tecio-include=ARG; Tecio include directory, ARG = path to TECIO.h; - --with-Metis-lib=ARG Metis library directory, ARG = path to libmetis.a; + --with-Metis-lib=ARG Metis library directory, ARG = path to libmetis.so; --with-Metis-include=ARG; Metis include directory, ARG = path to metis.h; --with-Metis-version=ARG; @@ -2619,7 +2619,7 @@; ###########################. # check for lib; -METISlib=libmetis.a; +METISlib=libmetis.so; METISheader=metis.h; METISversion=; have_METIS=""no""; Index: SU2-2.0.8/configure.ac; ===================================================================; --- SU2-2.0.8/configure.ac; +++ SU2-2.0.8/configure.ac 2013-12-08 13:56:33.410426071 +0100; @@ -32,7 +32,7 @@; AS_HELP_STRING([--with-Tecio-include[=ARG]], [Tecio include directory, ARG = path to TECIO.h]), ; [with_Tecio_include=$withval], [with_Tecio_include=""no""]); AC_ARG_WITH(Metis-lib,; - AS_HELP_STRING([--with-Metis-lib[=ARG]], [Metis library directory, ARG = path to libmetis.a]), ; + AS_HELP_STRING([--with-Metis-lib[=ARG]], [Metis library directory, ARG = p",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/19:644,patch,patch,644,https://su2code.github.io,https://github.com/su2code/SU2/issues/19,1,['patch'],['patch']
Deployability,"When compiling SU2, it appears the LAPACK can be used for some linear solver routines. There's a optional compile flag `--with-LAPACK-lib` and a `LAPACK support: no` readout. There's even a comment in the configure.ac file: `LAPACK connection added by Teus van der Stelt, 11/13/2014`. However, I can't find any code at all that uses LAPACK. At least, there aren't any sections that switch on with `HAVE_LAPACK`. Am I missing something? Was this removed at some point? Is there a branch that does have this integration?",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/478:506,integrat,integration,506,https://su2code.github.io,https://github.com/su2code/SU2/issues/478,1,['integrat'],['integration']
Deployability,"When running discrete_adjoint.py (or shape_optimization.py with a discrete adjoint method) for the test case steady_inverse_design, the value of the adjoint variables at the first iterations is already O(1e-10) and after a while the following message is printed on screen:. CSysSolve::FGMRES(): system solved by initial guess. This problem does not occur when using other objective functions or a continuous adjoint method. P.S. I am using SU2 v 6.0.0.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/515:397,continuous,continuous,397,https://su2code.github.io,https://github.com/su2code/SU2/issues/515,1,['continuous'],['continuous']
Deployability,"When you finish building SU2, you are told to set both $SU2_RUN (pointing to the install path) and $SU2_HOME (pointing to the source path). However, if you install a precompiled binary, there's no source in it, and [you are told](https://su2code.github.io/docs_v7/SU2-Linux-MacOS/) to set $SU2_RUN only. Do I really need to set $SU2_HOME for using SU2 if I built it from source? What if I prefer to keep the source packed in a tarball rather than extracted? What's the use of $SU2_HOME?",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/886:81,install,install,81,https://su2code.github.io,https://github.com/su2code/SU2/issues/886,2,['install'],['install']
Deployability,Which meson version is used ?; Is it possible to upgrade it ?,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1507#issuecomment-1018746746:49,upgrade,upgrade,49,https://su2code.github.io,https://github.com/su2code/SU2/issues/1507#issuecomment-1018746746,1,['upgrade'],['upgrade']
Deployability,"While `SU2_CFD` has been made to use binary restart files by default, the `SU2_MSH` code has not been updated to be compatible with binary restarts. If a grid adaptation strategy requires a solution (as in `GRAD_FLOW`), then `SU2_MSH` tries to read from the restart file. This is handled by `CGridAdaptation::GetFlowSolution`. If you look into the code, you'll notice that it's still set up for ASCII restart files. There's no check for binary restarts, and no ability to load a binary restart. The code tries to read the binary file as an ASCII file without complaint. A brief check on my part confirmed that ASCII restart files work with `SU2_MSH`, but binary restart files do not. This bug results in errors that are not caught by the program, as seen in Issue #606.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/610:102,update,updated,102,https://su2code.github.io,https://github.com/su2code/SU2/issues/610,1,['update'],['updated']
Deployability,"While doing some simulations with the version 6.2.0, I found a strange behaviour on the pressure field.; The test case is a naca0012 at AoA=0°, M=0.7, Re=9e6.; When running with SST turbulence model, the pressure field in the ""boundary layer region"" is not constant. Using SA turbulence model, this behaviour is not shown. It looks like the tubulent kinetic energy field affect the computation of pressure field, leading to a non zero gradient pressure at wall, as shown in the attached figures:. In the figures it can be seen a comparison between the in-house solver of the Italian Aerospace Research Center (CIRA), where SST model is implemented, and SU2 using both available turbulence models, SST and SA. The isolines represent the pressure field and the contour is the TKE field obtained with SU2 with SST. In particular, solid red line is CIRA solver, the solid black line is SU2-SST, and dashed black line is SU2-SA. Near the LE where TKE is 0, the isolines are similar and 0 pressure gradient at the wall is obtained with both turbulence models. When TKE starts to grow, the pressure computed with SU2-SST shows a non constant behaviour and at the wall has non 0 gradient. Furthermore, in the wake region the defect is more evident. Leading edge detail:; ![cp_tke_detail_Le](https://user-images.githubusercontent.com/36844965/66407922-53448b00-e9ee-11e9-877d-88ace3a222fb.png). Detail at 30% of the chord length:; ![cp_tke_detail_1](https://user-images.githubusercontent.com/36844965/66407921-53448b00-e9ee-11e9-8a22-87106066984b.png). Wake region detail:; ![cp_tke_detail_wake](https://user-images.githubusercontent.com/36844965/66407920-53448b00-e9ee-11e9-92ad-b770e0ac5743.png). Has anyone found previously this behaviour? Could it depend on the set up that I have used? . I attach the grid and configurations files.; [grid_and_conf_files.zip](https://github.com/su2code/SU2/files/3703135/grid_and_conf_files.zip). Thanks in advance.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/797:1806,configurat,configurations,1806,https://su2code.github.io,https://github.com/su2code/SU2/issues/797,1,['configurat'],['configurations']
Deployability,"While playing around with the APU turbocharger test case I observed some weird behaviour. For some specific number of cores (in my case 10 or 40 [works for 6, 8, 12, 20]), the test case fails in the pre-processing step of the geometry, and gives me the following error:. Error in ""virtual void CPhysicalGeometry::ComputeNSpan(CConfig*, short unsigned int, short unsigned int, bool)"": ; -------------------------------------------------------------------------; At the moment only turbomachinery with the same amount of span-wise section can be simulated; nSpan inflow 16, nSpan outflow 0; ------------------------------ Error Exit -------------------------------. I have the idea that this is due to the way the mesh is partitioned. But don't how to solve it. - OS: Ubuntu 16.04; - MPI implementation and version: OpenMPI 1.10.2; - SU2 Version: develop branch @ b12ec3aab87002480a56f6109a281c323a553087. Update:; Did some more testing. For the current master branch @ 284b2a5b8f74fcf2f6ff16d97f24e5b36c4bbb4d. ; The APU turbocharger runs for the 10 cores. However it gives a segmentation fault for 20 cores in the geometry prepocessing step (works for 19 and 21). For 40, 38 and 32 cores the code hangs in the geometry pre-processing at ""Compute the surface curvature.""",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/749:904,Update,Update,904,https://su2code.github.io,https://github.com/su2code/SU2/issues/749,1,['Update'],['Update']
Deployability,Will be available in the next release thanks to @bigfooted,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1463#issuecomment-1013344430:30,release,release,30,https://su2code.github.io,https://github.com/su2code/SU2/issues/1463#issuecomment-1013344430,1,['release'],['release']
Deployability,Will it be a good idea to provide the optional control of these under-relaxation parameters to the users in configuration (.cfg) file? (ANSYS-Fluent does have such controls). It may be useful sometimes.,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/790#issuecomment-543913900:108,configurat,configuration,108,https://su2code.github.io,https://github.com/su2code/SU2/pull/790#issuecomment-543913900,1,['configurat'],['configuration']
Deployability,WinError123 ：installation SU2 from source on Win10,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1048:13,install,installation,13,https://su2code.github.io,https://github.com/su2code/SU2/issues/1048,1,['install'],['installation']
Deployability,With commit [1836f11](https://github.com/su2code/SU2/pull/1536/commits/1836f111c0759eb50946ba6b68ac281ef4b1b717) the gradients (for massflow prescribed in the primal) can now be validated really well (tested for AvgTemp and PRESSURE_DROP OF's). . BUT only for serial execution ... for multiple processes the adjoint diverges after a few iterations. I need to give that parallel treatment another thought.; UPDATE: With [ce164a2](https://github.com/su2code/SU2/pull/1536/commits/ce164a232d6c0f845784f37e45336f7276746d61) also the parallel execution works fine. Please read my explanation attempt in the commit message (in case you are interested) and let me know what you think,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1536#issuecomment-1030848657:406,UPDATE,UPDATE,406,https://su2code.github.io,https://github.com/su2code/SU2/pull/1536#issuecomment-1030848657,1,['UPDATE'],['UPDATE']
Deployability,"Would you mind letting us know where the double pointer is that has this problem? ; If you are using the master branch or an older release, you may also want to check if this problem was solved on the current developer branch - there have been a few recent updates to clean up allocation/deallocation. ; If you would like to submit your fix as a pull request (benefits include being recorded by Github as a contributer to this code), please look over the developer docs for instructions on code style, which branch to use, etc: https://github.com/su2code/SU2/wiki/Gitting-Started",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/273#issuecomment-216085558:131,release,release,131,https://su2code.github.io,https://github.com/su2code/SU2/issues/273#issuecomment-216085558,2,"['release', 'update']","['release', 'updates']"
Deployability,Xcode Update,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/832:6,Update,Update,6,https://su2code.github.io,https://github.com/su2code/SU2/pull/832,1,['Update'],['Update']
Deployability,Xcode update,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/750:6,update,update,6,https://su2code.github.io,https://github.com/su2code/SU2/pull/750,1,['update'],['update']
Deployability,Y\compute_polar.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\compute_multipoint.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\discrete_adjoint.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\direct_differentiation.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\fsi_computation.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2_CFD.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/__init__.py to C:\bin\bin/SU2; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/eval/design.py to C:\bin\bin/SU2/eval; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/eval/functions.py to C:\bin\bin/SU2/eval; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/eval/gradients.py to C:\bin\bin/SU2/eval; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/eval/__init__.py to C:\bin\bin/SU2/eval; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/io/config.py to C:\bin\bin/SU2/io; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/io/config_options.py to C:\bin\bin/SU2/io; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/io/data.py to C:\bin\bin/SU2/io; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/io/filelock.py to C:\bin\bin/SU2/io; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/io/redirect.py to C:\bin\bin/SU2/io; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/io/state.py to C:\bin\bin/SU2/io; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/io/tools.py to C:\bin\bin/SU2/io; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/io/historyMap.py to C:\bin\bin/SU2/io; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/io/__init__.py to C:\bin\bin/SU2/io; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/opt/project.py to C:\bin\bin/SU2/opt; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/opt/scipy_tools.py to C:\bin\bin/SU2/opt; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/opt/__init__.py to C:\bin\bin/SU2/opt; Installing C:\Users\Danie\Documents\SU2\SU2_PY\S,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1376:5604,Install,Installing,5604,https://su2code.github.io,https://github.com/su2code/SU2/issues/1376,1,['Install'],['Installing']
Deployability,"Yeah the config is a bit confusing. The initial CFD run (in adap/ini) uses the value specified in ITER (unless RESTART_SOL= YES, then it runs one iteration just to get force coefficients). . After that, it runs a series of adaptations based on the settings in PYADAP_SUBITE, PYADAP_FLOW_ITER, and PYADAP_COMPLEXITY. . 1. AMG interpolates the solution; 2. A simulation is run for PYADAP_FLOW_ITER[0] iterations (2999 in your case); 3. An adaptation is performed with a target size of PYADAP_COMPLEXITY[0] (20000 in your case). This is done PYADAP_SUBITE[0] times. Then it moves on to the next mesh level. I admit that I haven't really debugged the feature-based (e.g. Mach-based) adaptation much. I found a couple bugs in the python scripts and just updated them, so could you pull again and rerun ninja?. The AMG output is pretty long, but since it's developed at Inria, I don't have any control over that. I guess as long as none of the lines are error statements (usually complaining about invalid projections or negative eigenvalues of the metric from my experience) it should be fine. The only actual information I get from amg.log is usually in the last line; ```; NbSensor 30518 msh->npobk 30518 NbrTyp 19 msh->npoin 52477; ```; which just tells you how many points are in the old vs. new mesh, but you could just look at the .su2 files for that. Another important note is that the python version of AMG currently only supports triangle and tetrahedral volume elements.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/948#issuecomment-619584815:749,update,updated,749,https://su2code.github.io,https://github.com/su2code/SU2/issues/948#issuecomment-619584815,1,['update'],['updated']
Deployability,"Yeah this issue is not unique to Arch Linux or to my machine specifically either!. I have tried this on at least 3 different ubuntu machines, with different versions, from 16.04 to 20.04. A few of my friends and juniors have tried as well, same error. I have built mpich several times, thinking I installed it improperly, to no avail. I would suggest, if you want to use mpich, use version 6.2 FALCON. I have it installed on one of my machines and it works just fine. I am not sure why there is such less support for this issue, you can see I sent multiple replies last time but did not get any response after some time so I just dropped it, thinking it will get resolved eventually. Please reopen this issue since this has not been resolved and is faced by multiple people. Thanks and regards,",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1000#issuecomment-721308181:297,install,installed,297,https://su2code.github.io,https://github.com/su2code/SU2/issues/1000#issuecomment-721308181,2,['install'],['installed']
Deployability,"Yeah, looks like python 3.7 did the trick. I can update the installation documentation. The init.py script checks that the python version is at least. Should we have it check that it's at least 3.7 instead?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/937#issuecomment-613571585:49,update,update,49,https://su2code.github.io,https://github.com/su2code/SU2/issues/937#issuecomment-613571585,2,"['install', 'update']","['installation', 'update']"
Deployability,"Yeah... It sounded more like an hardware limitation than a software implementation (mpi) issue. About the hybrid solver, you are running into load balancing issues (there are more threads than work packets, i.e. edge groups) it will be better for larger meshes, and maybe an 8x8 division works better than 4x16.; As you are using JST you can also try running at higher CFL to shift work to the linear solver which has no load balancing issues regardless of the group size parameter (the adaptive CFL mode may be necessary to get through the initial transient). Let us know if the new hardware solves the problem.; I will let you know via this issue when we have a release where the hybrid implementation might scale better on unstructured grids.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/894#issuecomment-593573398:664,release,release,664,https://su2code.github.io,https://github.com/su2code/SU2/issues/894#issuecomment-593573398,1,['release'],['release']
Deployability,"Yep, I think there is something going on with MPI-IO. Check if any special flags are necessary to enable MPI-IO for your system when installing the flavor of MPI that you are using.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/971#issuecomment-624243375:133,install,installing,133,https://su2code.github.io,https://github.com/su2code/SU2/issues/971#issuecomment-624243375,1,['install'],['installing']
Deployability,"Yes but it would be kind of you to check if a feature of a future release is going in the direction of what you need.; Compiled libraries would be easy to handle via pkg config.; But your choices of words sound a bit unfriendly so I honestly don't care, we can also close the issue until the next release.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/2086#issuecomment-1645668805:66,release,release,66,https://su2code.github.io,https://github.com/su2code/SU2/issues/2086#issuecomment-1645668805,2,['release'],['release']
Deployability,"Yes it definitely is confusing. Then we have to use set_ffd_design_var.py giving i,j,k which are not really 'units' in x,y,z. The website should be updated to show this. I am wondering how does SU2_DEF will determine the ""logic axis"". Won't a simple x,y,z approach have been simpler?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/977#issuecomment-626875076:148,update,updated,148,https://su2code.github.io,https://github.com/su2code/SU2/issues/977#issuecomment-626875076,2,['update'],['updated']
Deployability,"Yes there is a `lapack.pc` file in each of those folders.; ```; slimshady@arch-linux-hp-probook-g3-450: ~$ cat /usr/lib/pkgconfig/lapack.pc ; libdir=/usr/lib; includedir=/usr/include. Name: LAPACK; Description: FORTRAN reference implementation of LAPACK Linear Algebra PACKage; Version: 3.9.0; URL: http://www.netlib.org/lapack/; Libs: -L${libdir} -llapack; Requires.private: blas; ```; The output of `pkg-config openblas --version` is 0.3.8, but it shows a message as well:; ```; slimshady@arch-linux-hp-probook-g3-450: ~$ pkg-config openblas --version; pkg-config: --version specified with other options or module names, assuming --modversion.; 0.3.8; ```; I also installed using the same meson arguments on an Ubuntu system (Python v3.7.5, mpich v3.3.2) which did not need the `$PKG_CONFIG_PATH` variable to be set. So all this is a little confusing for me.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/991#issuecomment-632009282:666,install,installed,666,https://su2code.github.io,https://github.com/su2code/SU2/issues/991#issuecomment-632009282,1,['install'],['installed']
Deployability,"Yes, I agree that if this factor 100 should remain in the code, than it is the configuration file of the tutorial that should be modified with a lower turbulence intensity Tu to get the proper results. Thank you!",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1719#issuecomment-1191863697:79,configurat,configuration,79,https://su2code.github.io,https://github.com/su2code/SU2/issues/1719#issuecomment-1191863697,1,['configurat'],['configuration']
Deployability,"Yes, I have activated the option for the force breakdown in my configuration file and currently running it. I'll update you with the findings I get.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1175#issuecomment-765907601:63,configurat,configuration,63,https://su2code.github.io,https://github.com/su2code/SU2/issues/1175#issuecomment-765907601,2,"['configurat', 'update']","['configuration', 'update']"
Deployability,"Yes, I'd say that the V&V regression tests should definitely start from the converged solutions that were used to produce the results on the V&V website. . But for cases that do not have V&V documentation, the regression tests are imo merely a way to detect and prevent unwanted changes/side-effects (so, what you said). If they need to be more than that, they should be upgraded to a V&V with proper documentation. For the cases that are not VandV I'd rather have a 'start' + 'restart' regression test, with restarts from the 'start' results. In that way the restart files are always generated from the current code.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1784#issuecomment-1304306759:371,upgrade,upgraded,371,https://su2code.github.io,https://github.com/su2code/SU2/pull/1784#issuecomment-1304306759,1,['upgrade'],['upgraded']
Deployability,"Yes, all those automatically generated files should be removed, so everything in the folder .idea (including the folder), and the entire cmake-build-debug folder. If they come from coolprop, tell it to install into another directory outside of SU2.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1782#issuecomment-1268887325:202,install,install,202,https://su2code.github.io,https://github.com/su2code/SU2/pull/1782#issuecomment-1268887325,1,['install'],['install']
Deployability,"Yes, extra warnings had to be disabled once we updated the compiler used for regressions. As a workaround you remove the offending options from meson.build. While we sort it out.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1701#issuecomment-1176700894:47,update,updated,47,https://su2code.github.io,https://github.com/su2code/SU2/issues/1701#issuecomment-1176700894,1,['update'],['updated']
Deployability,"Yes, nothing more from me on this. Once this is merged, the comparison in PR #1260 should become simpler too. I've just updated this branch with develop, we can merge once the regression tests pass again.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1174#issuecomment-827981242:120,update,updated,120,https://su2code.github.io,https://github.com/su2code/SU2/pull/1174#issuecomment-827981242,2,['update'],['updated']
Deployability,"Yes, the minimum required version is now 4.7 (which has full C++11 support). But only for the AD binaries!; We have to move forward, otherwise it is not possible to include current and future changes that improve the performance. But I can provide a patch to make it work with gcc < 4.7 if necessary.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/350#issuecomment-271090352:250,patch,patch,250,https://su2code.github.io,https://github.com/su2code/SU2/pull/350#issuecomment-271090352,1,['patch'],['patch']
Deployability,"Yes. I did have installed g++.; ```; (base) root@a5502ebdff64:/home# g++ --version; g++ (Ubuntu 7.4.0-1ubuntu1~18.04.1) 7.4.0; Copyright (C) 2017 Free Software Foundation, Inc.; This is free software; see the source for copying conditions. There is NO; warranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.; ```; ```; (base) root@a5502ebdff64:/home/SU2# apt-get install gcc g++; Reading package lists... Done; Building dependency tree ; Reading state information... Done; g++ is already the newest version (4:7.4.0-1ubuntu2.3).; gcc is already the newest version (4:7.4.0-1ubuntu2.3).; 0 upgraded, 0 newly installed, 0 to remove and 0 not upgraded.; ```",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/738#issuecomment-513847853:16,install,installed,16,https://su2code.github.io,https://github.com/su2code/SU2/issues/738#issuecomment-513847853,5,"['install', 'upgrade']","['install', 'installed', 'upgraded']"
Deployability,Yes. Thank you all. I installed libopenmpi-dev and openmpi-common. I don't know which one is the key but I can see SU2_RUN and SU2_HOME environment variables displayed at the conclusion of configure.,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/738#issuecomment-513853762:22,install,installed,22,https://su2code.github.io,https://github.com/su2code/SU2/issues/738#issuecomment-513853762,1,['install'],['installed']
Deployability,"Yet another doubt on the same subject: I just realized that SU2V7.31 (I; have not tested it on later SU2 releases) accepts imposing both adiabatic; walls plus isothermal boundary condition on some walls (when running Menter; model), but when I simply impose only isothermal conditions (leaving; commented out the adiabatic markers), I get the message: SU2 process; returned error '1'. Is there a workaround for this? Kind regards. On Thu, Sep 28, 2023 at 8:25 PM Pedro Gomes ***@***.***>; wrote:. > you are correct, there is a discussion on CFD-online about it. we impose 0; > heat flux, but report an ""apparent heat flux"" most codes will simply give; > you back the imposed heat flux value you specify, nevertheless there will; > probably be a temperature gradient close to the wall; >; > —; > Reply to this email directly, view it on GitHub; > <https://github.com/su2code/SU2/pull/2109#issuecomment-1740118992>, or; > unsubscribe; > <https://github.com/notifications/unsubscribe-auth/AHGXZUUZNE6B63SH7XJLY2DX4YBMZANCNFSM6AAAAAA3QKLVDU>; > .; > You are receiving this because you commented.Message ID:; > ***@***.***>; >",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2109#issuecomment-1775968391:105,release,releases,105,https://su2code.github.io,https://github.com/su2code/SU2/pull/2109#issuecomment-1775968391,2,['release'],['releases']
Deployability,"You are installing it in the folder SU2_install/ according to ""--prefix=$PWD/SU2_Install""; So i think your last line should be:; exec /SU2_Install/bin/$1 $2. However I have no experience with this singularity so i could be wrong.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/739#issuecomment-515372015:8,install,installing,8,https://su2code.github.io,https://github.com/su2code/SU2/issues/739#issuecomment-515372015,1,['install'],['installing']
Deployability,"You can use the --prefix option (most ""build from source"" software works; like that).; Do you know of a portable way to determine the user name?. On Mon, 11 May 2020, 21:04 Max Le, <notifications@github.com> wrote:. >; > -; >; > When installing SU2 from fresh or recompiling to update changes, the; > installation process always requires root permission to finish. The reason; > is that the binaries are installed in /usr/local/bin, which needs root; > access. The installation went well, it is just that I don't feel like; > entering root password everytime.; > -; >; > A way to go around this would be to have the binaries installed in the; > bin folder in the home folder, so on Linux that would be /home/user/bin.; > Even better, we can have it creates a separate SU2bin folder, where only; > the binaries from SU2 will be stored. Of course, doing this would change; > the environmental variables as well.; > -; >; > What do you all think? Is this too much hassle?; >; > —; > You are receiving this because you are subscribed to this thread.; > Reply to this email directly, view it on GitHub; > <https://github.com/su2code/SU2/issues/979>, or unsubscribe; > <https://github.com/notifications/unsubscribe-auth/AJCOXN3VS6AOUOBHLOHSCULRRBK6DANCNFSM4M6GX6DA>; > .; >",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/979#issuecomment-626952122:234,install,installing,234,https://su2code.github.io,https://github.com/su2code/SU2/issues/979#issuecomment-626952122,6,"['install', 'update']","['installation', 'installed', 'installing', 'update']"
Deployability,"You could try making a soft link (ln -s) in that directory for mpirun that points to the mpirun-mpich-mp (does it work if you call that directly btw?). Otherwise, you could try a different MPI installation, e.g., openmpi",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/938#issuecomment-617582095:193,install,installation,193,https://su2code.github.io,https://github.com/su2code/SU2/issues/938#issuecomment-617582095,1,['install'],['installation']
Deployability,"You have to add that particular branch to the .travis.yml file.; See https://travis-ci.org/su2code/SU2/requests (Branch ""feature_STLwriter"" not included per configuration.)",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/748#issuecomment-526150574:157,configurat,configuration,157,https://su2code.github.io,https://github.com/su2code/SU2/issues/748#issuecomment-526150574,1,['configurat'],['configuration']
Deployability,You just have to update the files in the TestCases repository (`TestCases/cont_adj_euler/naca0012/of_grad_directdiff.dat.ref` and `TestCases/cont_adj_euler/naca0012/of_grad_cd_disc.dat.ref`),MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/444#issuecomment-332825983:17,update,update,17,https://su2code.github.io,https://github.com/su2code/SU2/pull/444#issuecomment-332825983,1,['update'],['update']
Deployability,"You mentioned issues with the develop branch, those are likely due to compilation differences.; Yes run to convergence with both branches and compare please. I expect integrated quantities will be exactly the same.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2095#issuecomment-1659015548:167,integrat,integrated,167,https://su2code.github.io,https://github.com/su2code/SU2/pull/2095#issuecomment-1659015548,1,['integrat'],['integrated']
Deployability,You need to specify an installation direction for which you have permissions via meson option `--prefix`; Further information here: https://su2code.github.io/docs_v7/Build-SU2-Linux-MacOS/; In the SU2 section of CFD Online (https://www.cfd-online.com/Forums/su2/) you can find a lot of useful info about compiling / installing / running SU2 on clusters.,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/936#issuecomment-613013547:23,install,installation,23,https://su2code.github.io,https://github.com/su2code/SU2/issues/936#issuecomment-613013547,2,['install'],"['installation', 'installing']"
Deployability,You will need to install it for python3 if you plan to use that. So use:; pip3 install mpi4py; or ; python3 -m pip install mpi4py,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/739#issuecomment-515374119:17,install,install,17,https://su2code.github.io,https://github.com/su2code/SU2/issues/739#issuecomment-515374119,3,['install'],['install']
Deployability,"You've reminded me that there is an old python script (parse_config.py) which parses the c++ config structure code - I couldn't get it to run right away, but maybe you can update that script to generate your list automatically from the c++ code, and so not require much change (and also not require you to manually write out all the defaults). . Personally I think that we should keep the default definitions in the C++ as it is now, as this keeps the executables self-contained among other things. ; By the way, I think you meant SetConfig_Options().",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/520#issuecomment-377420170:172,update,update,172,https://su2code.github.io,https://github.com/su2code/SU2/pull/520#issuecomment-377420170,1,['update'],['update']
Deployability,"[ issue title should say ""Python modules install to /usr/bin"" - it's not just FSI_tools ]. Building v7.5.1 on Linux (Slackware 15.0) installs three subdirectories to /usr/bin:. /usr/bin/FSI_tools/; /usr/bin/SU2/; /usr/bin/SU2_Nastran/. These appear to be Python modules. Is this install location intended? Perhaps I missed an important build step. The difficulty is that this conflicts with the Linux filesystem hierarchy: ""4.4.2: There must be no subdirectories in /usr/bin."". https://refspecs.linuxfoundation.org/FHS_3.0/fhs/ch04s04.html. ... and results in complaints when building e.g. a Slackbuild package. In any event, /usr/bin is not where Python modules belong. Minor problem, I know, but the fix is probably pretty easy: Install these modules using pip. I believe pip is supposed to know the correct place to install modules. For example, on my system, pip installs them to /usr/lib64/python<version>/site-packages, which seems to be on the default module search path. Side benefit: one can dispense with setting SU2_RUN and PYTHONPATH in ~/.bashrc. And PATH in any event, since /usr/bin should already be in the path except in rare cases. I would offer to implement this but surely there are others more familiar with meson+ninja ... but if need be, I'll give it my best shot. - JM. **Bug report checklist**; *Please make sure that you have followed the checklist below, many common problems can be solved by:*. - [x] Consulting the build instructions (https://su2code.github.io/docs_v7/Build-SU2-Linux-MacOS/).; - [x] Looking for similar problems on GitHub or CFD-Online (https://www.cfd-online.com/Forums/su2/).; - [x] Updating to the newest version of SU2 (either develop, master, or the pre-built executables https://su2code.github.io/download.html). **Desktop (please complete the following information):**; - OS: Linux Slackware 15.0; - C++ compiler and version: gcc 11.2; - MPI implementation and version: mpich 4.1.2; - SU2 Version: v7.5.1",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/2075:41,install,install,41,https://su2code.github.io,https://github.com/su2code/SU2/issues/2075,6,"['Install', 'install']","['Install', 'install', 'installs']"
Deployability,"[...]; > If either you or @frx-wintermute are interested in complementing the feature by adding an option to prefer system libraries (via pkg-config, no paths because 99.9% of users will not know what to do) instead of the versions shipped with SU2, please go ahead and open a PR. Hello @pcarruscag!. To be honest, my daydream is: I would love to see SU2 shipping nothing in 'externals/' (or just empty subdirectories such as 'externals/meson/' ); then those external dependencies are by default downloaded from external repositories or tar archives. This defaul behavior would be obtained by configuring with the './meson.py' script and then by building with './ninja'. But, if a user wants to build SU2 from source and prefers to use system-wide Meson and Ninja and system-wide versions of the external dependencies, it would be possible to avoid downloading these external dependencies. By running './preconfigure.py' with appropriate options, it would be possible to decide which external dependencies to **not** download. At that point, system-wide Meson and Ninja could be used to build SU2 from source. And the 'meson.build' file would do the following:. * for each required or enabled (at configure time) dependency **\<foo\>**, it would check whether it is found in 'externals/**\<foo\>**/'; if not, it would check whether it can be found as a system-wide installation (perhaps via pkgconfig); if not, it would exit with error; * for each dependency which is not required nor enabled at configure time, it would avoid using it at all. I think this daydream is achievable, and I hope that other people consider it as a useful goal.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/2086#issuecomment-1646970778:1365,install,installation,1365,https://su2code.github.io,https://github.com/su2code/SU2/issues/2086#issuecomment-1646970778,1,['install'],['installation']
Deployability,"[//]: # (dependabot-start); ⚠️ **Dependabot is rebasing this PR** ⚠️ . Rebasing might not happen immediately, so don't worry if this takes some time. Note: if you make any changes to this PR yourself, they will take precedence over the rebase. ---. [//]: # (dependabot-end). Bumps [actions/cache](https://github.com/actions/cache) from 3 to 4.; <details>; <summary>Release notes</summary>; <p><em>Sourced from <a href=""https://github.com/actions/cache/releases"">actions/cache's releases</a>.</em></p>; <blockquote>; <h2>v4.0.0</h2>; <h2>What's Changed</h2>; <ul>; <li>Update action to node20 by <a href=""https://github.com/takost""><code>@​takost</code></a> in <a href=""https://redirect.github.com/actions/cache/pull/1284"">actions/cache#1284</a></li>; <li>feat: save-always flag by <a href=""https://github.com/to-s""><code>@​to-s</code></a> in <a href=""https://redirect.github.com/actions/cache/pull/1242"">actions/cache#1242</a></li>; </ul>; <h2>New Contributors</h2>; <ul>; <li><a href=""https://github.com/takost""><code>@​takost</code></a> made their first contribution in <a href=""https://redirect.github.com/actions/cache/pull/1284"">actions/cache#1284</a></li>; <li><a href=""https://github.com/to-s""><code>@​to-s</code></a> made their first contribution in <a href=""https://redirect.github.com/actions/cache/pull/1242"">actions/cache#1242</a></li>; </ul>; <p><strong>Full Changelog</strong>: <a href=""https://github.com/actions/cache/compare/v3...v4.0.0"">https://github.com/actions/cache/compare/v3...v4.0.0</a></p>; <h2>v3.3.3</h2>; <h2>What's Changed</h2>; <ul>; <li>Cache v3.3.3 by <a href=""https://github.com/robherley""><code>@​robherley</code></a> in <a href=""https://redirect.github.com/actions/cache/pull/1302"">actions/cache#1302</a></li>; </ul>; <h2>New Contributors</h2>; <ul>; <li><a href=""https://github.com/robherley""><code>@​robherley</code></a> made their first contribution in <a href=""https://redirect.github.com/actions/cache/pull/1302"">actions/cache#1302</a></li>; </ul>; <p><strong>",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2232:365,Release,Release,365,https://su2code.github.io,https://github.com/su2code/SU2/pull/2232,4,"['Release', 'Update', 'release']","['Release', 'Update', 'releases']"
Deployability,"[//]: # (dependabot-start); ⚠️ **Dependabot is rebasing this PR** ⚠️ . Rebasing might not happen immediately, so don't worry if this takes some time. Note: if you make any changes to this PR yourself, they will take precedence over the rebase. ---. [//]: # (dependabot-end). Bumps [actions/upload-release-asset](https://github.com/actions/upload-release-asset) from 1.0.1 to 1.0.2.; <details>; <summary>Release notes</summary>; <p><em>Sourced from <a href=""https://github.com/actions/upload-release-asset/releases"">actions/upload-release-asset's releases</a>.</em></p>; <blockquote>; <h2>Automate sliding major version number</h2>; <p>This is a minor update to make the current release have the latest code from master, and additionally allows for a new automation workflow to execute to automate the sliding of the major (v1, v2, v3, etc) version numbers for ease of referencing</p>; </blockquote>; </details>; <details>; <summary>Commits</summary>; <ul>; <li><a href=""https://github.com/actions/upload-release-asset/commit/e8f9f06c4b078e705bd2ea027f0926603fc9b4d5""><code>e8f9f06</code></a> Merge pull request <a href=""https://github-redirect.dependabot.com/actions/upload-release-asset/issues/27"">#27</a> from actions/IAmHughes/add-automated-versioning</li>; <li><a href=""https://github.com/actions/upload-release-asset/commit/14187540b829095dbe6f33eb1b166503318e9ceb""><code>1418754</code></a> Add versioning action to automatically slide major versions with releases</li>; <li><a href=""https://github.com/actions/upload-release-asset/commit/7d8fb6c931cb341bda0f898a0d2191cf54abc69a""><code>7d8fb6c</code></a> Merge pull request <a href=""https://github-redirect.dependabot.com/actions/upload-release-asset/issues/6"">#6</a> from actions/IAmHughes/fix-link-to-license</li>; <li><a href=""https://github.com/actions/upload-release-asset/commit/c53f077c5d8c19236718abc4697a59634ef534cf""><code>c53f077</code></a> Fix link to LICENSE</li>; <li><a href=""https://github.com/actions/upload-release-asset/commit",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1754:297,release,release-asset,297,https://su2code.github.io,https://github.com/su2code/SU2/pull/1754,9,"['Release', 'release', 'update']","['Release', 'release', 'release-asset', 'releases', 'update']"
Deployability,"[; [errors_SU2_71.pdf](https://github.com/su2code/SU2/files/6914931/errors_SU2_71.pdf); Hi ; Attached is a printout of errors (part of it, it keeps repeating). It seems to me that it is not related to the problem that was resolved by the patch, mentioned above: it happens before during the compilation, It happens also both with and without the patch. This one is from the master version, downloaded a few days ago. Had the same errors from develop branch, a few days earlier. Needless to say that this issue arises only with GCC that is not up-to-date. On my web-connected laptop, everything compiles and links fine. Sorry for the delay in response and the format of the printout. It takes time to get data out of the disconnected network.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/955#issuecomment-890774781:238,patch,patch,238,https://su2code.github.io,https://github.com/su2code/SU2/issues/955#issuecomment-890774781,2,['patch'],['patch']
Deployability,"[Here](https://github.com/su2code/SU2/files/3302370/benchmark.zip) are some comparisons for a case where the linear solver does little work (so not much benefit from this PR) and another where the linear solver has to work harder (18 iterations per iteration on average) and this makes a substantial difference.; I have started updated the residuals of things that seem consequence of round-off error, only one case requires closer inspection where things change several orders of magnitude (for the best).",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/700#issuecomment-503201187:328,update,updated,328,https://su2code.github.io,https://github.com/su2code/SU2/pull/700#issuecomment-503201187,1,['update'],['updated']
Deployability,"[WIP] CI pipeline test, no merging intended",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1292:9,pipeline,pipeline,9,https://su2code.github.io,https://github.com/su2code/SU2/pull/1292,1,['pipeline'],['pipeline']
Deployability,[WIP] Improve implementation of periodicity for implicit integration,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1585:57,integrat,integration,57,https://su2code.github.io,https://github.com/su2code/SU2/pull/1585,1,['integrat'],['integration']
Deployability,[WIP] Update turbo interfaces,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2209:6,Update,Update,6,https://su2code.github.io,https://github.com/su2code/SU2/pull/2209,1,['Update'],['Update']
Deployability,[WIP] pyBeam integration into SU2 as a subproject,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/902:13,integrat,integration,13,https://su2code.github.io,https://github.com/su2code/SU2/pull/902,1,['integrat'],['integration']
Deployability,"[case728.txt](https://github.com/su2code/SU2/files/5137616/case728.txt). What does:; ```; OPT_BOUND_UPPER= 0.0001; OPT_BOUND_LOWER= -0.0001; ```; achieve?. It shows the upper and lower bounds have been read:; `Lower and upper bound for each independent variable: [(-0.0001, 0.0001), (-0.0001, 0.0001), (-0.0001, 0.0001),...`. However, the max deformation of the FFD box never satisfies this limit. I am getting way more deformations than I want. The limit is only satisfied if I specify:. `OPT_LINE_SEARCH_BOUND=0.0001`; and shown by:; ```; SU2 is fixing the planes to maintain a continuous 2nd order derivative.; Update cartesian coord | FFD box: FFD_BOX. Max Diff: 0.000340635.; Out-of-bounds, re-adjusting scale factor to safisfy line search limit.; Update cartesian coord | FFD box: FFD_BOX. Max Diff: 0.0001.; ```. What is the intended purpose of upper and lower bound options and what is the correct way to use them?. Using SU2 v6.1.0. I don't think this part of the optimization script has changed in the newer version. Config is attached.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1069:580,continuous,continuous,580,https://su2code.github.io,https://github.com/su2code/SU2/issues/1069,3,"['Update', 'continuous']","['Update', 'continuous']"
Deployability,"[sd2_case1b_ddes_v7.cfg.txt](https://github.com/su2code/SU2/files/4531160/sd2_case1b_ddes_v7.cfg.txt). Hello,. We are currently unable to restart SU2 in DDES mode from a restart file that includes time-averaged data on very large (~180 million cell) meshes. Compiled in release mode, the code gives the error ""FGMRES orthogonalization failed, linear solver diverged."". Compiled in debug mode, the code issues an assertion failure at line 1881 of $SU2_HOME/SU2_CFD/src/numerics_structure.cpp, which is a check in the CNumerics::SetRoe_Dissipation(...) method to make sure that variable 'Dissipation_j' is between zero and one. This problem only appears when attempting to restart from solution files that include ""TIME_AVERAGE"" data on very large meshes. Note the above behavior is occurring with commit 382e82f5e43fadb5d64e63289db8e125e37ffe95 of the ""develop"" branch. . I have pulled the latest commits of develop (c093a62a2b) and master (d9c867d342), but get segfaults during Jacobian structure initialization when attempting to restart on multiple cores. All help is appreciated. -Paul. **To Reproduce**; Config file attached, but mesh file is quite large... 17.6 GB. **Desktop (please complete the following information):**; - Department of Defense Unclassified System: ""Onyx""; - System type: Cray XC40/50; - OS: Variant of SuSe Linux 12.3 and/or Cray Linux Environment; - Compiler: Intel 19.0.1.144; - MPI: cray-mpich 7.6.3; - SU2 v. 7.0.1, develop branch, commit 382e82f5e43fadb5d64e63289db8e125e37ffe95 (and segfaults with latest commits of develop (c093a62a2b) and master (d9c867d342) ).",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/949:270,release,release,270,https://su2code.github.io,https://github.com/su2code/SU2/issues/949,1,['release'],['release']
Deployability,\Danie\Documents\SU2\SU2_PY\shape_optimization.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\merge_solution.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\set_ffd_design_var.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\compute_polar.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\compute_multipoint.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\discrete_adjoint.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\direct_differentiation.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\fsi_computation.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2_CFD.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/__init__.py to C:\bin\bin/SU2; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/eval/design.py to C:\bin\bin/SU2/eval; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/eval/functions.py to C:\bin\bin/SU2/eval; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/eval/gradients.py to C:\bin\bin/SU2/eval; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/eval/__init__.py to C:\bin\bin/SU2/eval; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/io/config.py to C:\bin\bin/SU2/io; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/io/config_options.py to C:\bin\bin/SU2/io; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/io/data.py to C:\bin\bin/SU2/io; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/io/filelock.py to C:\bin\bin/SU2/io; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/io/redirect.py to C:\bin\bin/SU2/io; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/io/state.py to C:\bin\bin/SU2/io; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/io/tools.py to C:\bin\bin/SU2/io; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/io/historyMap.py to C:\bin\bin/SU2/io; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/io/__init__.py to C:\bin\bin/SU2/io; Installing C:\Users\Danie\Documents\SU2\SU2_PY\,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1376:5333,Install,Installing,5333,https://su2code.github.io,https://github.com/su2code/SU2/issues/1376,1,['Install'],['Installing']
Deployability,\Documents\SU2\SU2_PY\compute_uncertainty.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\finite_differences.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\mesh_deformation.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\parallel_computation.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\parallel_computation_fsi.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\package_tests.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\shape_optimization.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\merge_solution.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\set_ffd_design_var.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\compute_polar.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\compute_multipoint.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\discrete_adjoint.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\direct_differentiation.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\fsi_computation.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2_CFD.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/__init__.py to C:\bin\bin/SU2; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/eval/design.py to C:\bin\bin/SU2/eval; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/eval/functions.py to C:\bin\bin/SU2/eval; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/eval/gradients.py to C:\bin\bin/SU2/eval; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/eval/__init__.py to C:\bin\bin/SU2/eval; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/io/config.py to C:\bin\bin/SU2/io; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/io/config_options.py to C:\bin\bin/SU2/io; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/io/data.py to C:\bin\bin/SU2/io; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/io/filelock.py to C,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1376:4826,Install,Installing,4826,https://su2code.github.io,https://github.com/su2code/SU2/issues/1376,1,['Install'],['Installing']
Deployability,\SU2\SU2_PY\SU2/run/projection.py to C:\bin\bin/SU2/run; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/run/__init__.py to C:\bin\bin/SU2/run; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/util/bunch.py to C:\bin\bin/SU2/util; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/util/filter_adjoint.py to C:\bin\bin/SU2/util; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/util/lhc_unif.py to C:\bin\bin/SU2/util; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/util/misc.py to C:\bin\bin/SU2/util; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/util/mp_eval.py to C:\bin\bin/SU2/util; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/util/ordered_bunch.py to C:\bin\bin/SU2/util; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/util/ordered_dict.py to C:\bin\bin/SU2/util; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/util/plot.py to C:\bin\bin/SU2/util; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/util/polarSweepLib.py to C:\bin\bin/SU2/util; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/util/which.py to C:\bin\bin/SU2/util; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/util/switch.py to C:\bin\bin/SU2/util; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/util/__init__.py to C:\bin\bin/SU2/util; Installing C:\Users\Danie\Documents\SU2\SU2_PY\FSI_tools/__init__.py to C:\bin\bin/FSI_tools; Installing C:\Users\Danie\Documents\SU2\SU2_PY\FSI_tools/FSIInterface.py to C:\bin\bin/FSI_tools; Installing C:\Users\Danie\Documents\SU2\SU2_PY\FSI_tools/FSI_config.py to C:\bin\bin/FSI_tools; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2_Nastran/__init__.py to C:\bin\bin/SU2_Nastran; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2_Nastran/pysu2_nastran.py to C:\bin\bin/SU2_Nastran; Running custom install script 'sh C:\\Users\\Danie\\Documents\\SU2\\SU2_PY/pySU2\\install.sh C:\\Users\\Danie\\Documents\\SU2\\build\\SU2_PY/pySU2 pysu2.py'; Failed to run install script 'sh C:\\Users\\Danie\\Documents\\SU2\\SU2_PY/pySU2\\install.sh C:\\User,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1376:8129,Install,Installing,8129,https://su2code.github.io,https://github.com/su2code/SU2/issues/1376,1,['Install'],['Installing']
Deployability,\bin/SU2/io; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/io/data.py to C:\bin\bin/SU2/io; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/io/filelock.py to C:\bin\bin/SU2/io; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/io/redirect.py to C:\bin\bin/SU2/io; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/io/state.py to C:\bin\bin/SU2/io; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/io/tools.py to C:\bin\bin/SU2/io; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/io/historyMap.py to C:\bin\bin/SU2/io; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/io/__init__.py to C:\bin\bin/SU2/io; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/opt/project.py to C:\bin\bin/SU2/opt; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/opt/scipy_tools.py to C:\bin\bin/SU2/opt; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/opt/__init__.py to C:\bin\bin/SU2/opt; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/run/adjoint.py to C:\bin\bin/SU2/run; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/run/deform.py to C:\bin\bin/SU2/run; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/run/direct.py to C:\bin\bin/SU2/run; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/run/interface.py to C:\bin\bin/SU2/run; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/run/merge.py to C:\bin\bin/SU2/run; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/run/geometry.py to C:\bin\bin/SU2/run; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/run/projection.py to C:\bin\bin/SU2/run; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/run/__init__.py to C:\bin\bin/SU2/run; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/util/bunch.py to C:\bin\bin/SU2/util; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/util/filter_adjoint.py to C:\bin\bin/SU2/util; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/util/lhc_unif.py to C:\bin\bin/SU2/util; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/util/misc.py to C:\bin\bin/SU2/util; Installing C:\Users\Danie,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1376:6667,Install,Installing,6667,https://su2code.github.io,https://github.com/su2code/SU2/issues/1376,1,['Install'],['Installing']
Deployability,"_3.2.1/include'; CGNS_LD='/gshare/soft/code_saturne/4.0.0/prod/cgnslib_3.2.1/lib/libcgns.a'; CPP='gcc -E'; CPPFLAGS=''; CXX='g++'; CXXDEPMODE='depmode=gcc3'; CXXFLAGS='-g -O2'; CYGPATH_W='echo'; DEFS='-DPACKAGE_NAME=\""SU2\"" -DPACKAGE_TARNAME=\""SU2\"" -DPACKAGE_VERSION=\""4.1.0\"" -DPACKAGE_STRING=\""SU2\ 4.1.0\"" -DPACKAGE_BUGREPORT=\""su2code-dev@lists.stanford.edu\"" -DPACKAGE_URL=\""https://github.com/su2code\"" -DPACKAGE=\""SU2\"" -DVERSION=\""4.1.0\"" -DSTDC_HEADERS=1 -DHAVE_SYS_TYPES_H=1 -DHAVE_SYS_STAT_H=1 -DHAVE_STDLIB_H=1 -DHAVE_STRING_H=1 -DHAVE_MEMORY_H=1 -DHAVE_STRINGS_H=1 -DHAVE_INTTYPES_H=1 -DHAVE_STDINT_H=1 -DHAVE_UNISTD_H=1 -DSIZEOF_SHORT_INT=2 -DSIZEOF_INT=4 -DSIZEOF_UNSIGNED_INT=4 -DSIZEOF_LONG_INT=8 -DSIZEOF_FLOAT=4 -DSIZEOF_DOUBLE=8 -DSIZEOF_VOID_P=8'; DEPDIR='.deps'; DIRECTDIFF_CXX=''; DIRECTDIFF_LIBS=''; ECHO_C=''; ECHO_N='-n'; ECHO_T=''; EGREP='/bin/grep -E'; EXEEXT=''; GREP='/bin/grep'; HDF5_CXX=''; HDF5_LD=''; INSTALL_DATA='${INSTALL} -m 644'; INSTALL_PROGRAM='${INSTALL}'; INSTALL_SCRIPT='${INSTALL}'; INSTALL_STRIP_PROGRAM='$(install_sh) -c -s'; JSONCPP_CXX=''; JSONCPP_LD=''; LAPACK_CXX=''; LAPACK_LD=''; LDFLAGS=''; LIBOBJS=''; LIBS=''; LTLIBOBJS=''; MAKEINFO='${SHELL} /home/antodech/SU2-4.1.0/missing --run makeinfo'; METIS_INCLUDE=''; METIS_LIB=''; MKDIR_P='/bin/mkdir -p'; MUTATIONPP_CXX=''; MUTATIONPP_LD=''; OBJEXT='o'; PACKAGE='SU2'; PACKAGE_BUGREPORT='su2code-dev@lists.stanford.edu'; PACKAGE_NAME='SU2'; PACKAGE_STRING='SU2 4.1.0'; PACKAGE_TARNAME='SU2'; PACKAGE_URL='https://github.com/su2code'; PACKAGE_VERSION='4.1.0'; PARMETIS_INCLUDE=''; PARMETIS_LIB=''; PATH_SEPARATOR=':'; RANLIB='ranlib'; REVERSE_CXX=''; REVERSE_LIBS=''; SET_MAKE=''; SHELL='/bin/sh'; STRIP=''; SU2_METIS_CPPFLAGS=''; SU2_PARMETIS_CPPFLAGS=''; SZIP_CXX=''; SZIP_LD=''; TECIO_CPPFLAGS=''; TECIO_INCLUDE=''; VERSION='4.1.0'; ZLIB_CXX=''; ZLIB_LD=''; ac_ct_CC='gcc'; ac_ct_CXX='g++'; am__EXEEXT_FALSE=''; am__EXEEXT_TRUE='#'; am__fastdepCC_FALSE='#'; am__fastdepCC_TRUE=''; am__fastdepCXX_",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/250#issuecomment-205167006:23950,INSTALL,INSTALL,23950,https://su2code.github.io,https://github.com/su2code/SU2/issues/250#issuecomment-205167006,3,['INSTALL'],['INSTALL']
Deployability,"_CFD/src/libSU2core.a(fluid_CMutationTCLib.cpp.o) has no symbols; /Library/Developer/CommandLineTools/usr/bin/ranlib: file: SU2_CFD/src/libSU2core.a(numerics_scalar_scalar_sources.cpp.o) has no symbols; [701/711] Linking target SU2_SOL/src/SU2_SOL; ld: warning: -undefined error is deprecated; ld: warning: ignoring duplicate libraries: '-lz'; [703/711] Linking target SU2_GEO/src/SU2_GEO; ld: warning: -undefined error is deprecated; ld: warning: ignoring duplicate libraries: '-lz'; [705/711] Linking target SU2_CFD/src/SU2_CFD; ld: warning: -undefined error is deprecated; ld: warning: ignoring duplicate libraries: '-lz'; [707/711] Linking target SU2_DEF/src/SU2_DEF; ld: warning: -undefined error is deprecated; ld: warning: ignoring duplicate libraries: '-lz'; [710/711] Linking target SU2_DOT/src/SU2_DOT; ld: warning: -undefined error is deprecated; ld: warning: ignoring duplicate libraries: '-lz'; [710/711] Installing files.; Installing SU2_CFD/src/SU2_CFD to /usr/local/bin; Traceback (most recent call last):; File ""/Users/vanessachung/Downloads/SU2-8.0.0/externals/meson/mesonbuild/mesonmain.py"", line 146, in run; return options.run_func(options); File ""/Users/vanessachung/Downloads/SU2-8.0.0/externals/meson/mesonbuild/minstall.py"", line 811, in run; installer.do_install(datafilename); File ""/Users/vanessachung/Downloads/SU2-8.0.0/externals/meson/mesonbuild/minstall.py"", line 587, in do_install; self.install_targets(d, dm, destdir, fullprefix); File ""/Users/vanessachung/Downloads/SU2-8.0.0/externals/meson/mesonbuild/minstall.py"", line 730, in install_targets; file_copied = self.do_copyfile(fname, outname, makedirs=(dm, outdir)); File ""/Users/vanessachung/Downloads/SU2-8.0.0/externals/meson/mesonbuild/minstall.py"", line 458, in do_copyfile; self.copy2(from_file, to_file); File ""/Users/vanessachung/Downloads/SU2-8.0.0/externals/meson/mesonbuild/minstall.py"", line 353, in copy2; shutil.copy2(*args, **kwargs); File ""/Library/Frameworks/Python.framework/Versions/3.9/lib/pyt",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/2199:1357,Install,Installing,1357,https://su2code.github.io,https://github.com/su2code/SU2/issues/2199,1,['Install'],['Installing']
Deployability,"_INSTALL; slimshady@arch-linux-hp-probook-g3-450: SU2_HOME$ ./meson.py setup --wipe build; The Meson build system; Version: 0.54.999; Source dir: /home/slimshady/UserPackages/SU2_HOME; Build dir: /home/slimshady/UserPackages/SU2_HOME/build; Build type: native build; Project name: SU2; Project version: 7.0.4 ""Blackbird""; C compiler for the host machine: cc (gcc 9.2.1 ""cc (Arch Linux 9.2.1+20200130-2) 9.2.1 20200130""); C linker for the host machine: cc ld.bfd 2.34; C++ compiler for the host machine: c++ (gcc 9.2.1 ""c++ (Arch Linux 9.2.1+20200130-2) 9.2.1 20200130""); C++ linker for the host machine: c++ ld.bfd 2.34; Host machine cpu family: x86_64; Host machine cpu: x86_64; Program python3 found: YES (/usr/bin/python3); Message: Boost sources found.; Found pkg-config: /usr/bin/pkg-config (1.6.3); Run-time dependency openblas found: YES 0.3.8; Program swig found: YES (/usr/bin/swig); Message: Using mpi4py from /home/slimshady/.local/lib/python3.8/site-packages/mpi4py/include; Dependency python found: YES (pkgconfig); Program install.sh found: YES (/bin/sh /home/slimshady/UserPackages/SU2_HOME/SU2_PY/pySU2/install.sh); Message: -------------------------------------------------------------------------; | ___ _ _ ___ |; | / __| | | |_ ) Release 7.0.4 ""Blackbird"" |; | \__ \ |_| |/ / |; | |___/\___//___| Meson Configuration Summary |; | |; -------------------------------------------------------------------------; ; Option Value; ---------------------; TecIO: true; CGNS: true; AD (reverse): true; AD (forward): true; Python Wrapper: true; Intel-MKL: false; OpenBlas: true; PaStiX: false. Please be sure to add the $SU2_HOME and $SU2_RUN environment variables,; and update your $PATH (and $PYTHONPATH if applicable) with $SU2_RUN. Based on the input to this configuration, add these lines to your .bashrc file:. export SU2_RUN=/home/slimshady/UserPackages/SU2_INSTALL/bin; export SU2_HOME=/home/slimshady/UserPackages/SU2_HOME; export PATH=$PATH:$SU2_RUN; export PYTHONPATH=$PYTHONPATH:",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1000#issuecomment-634298776:1702,install,install,1702,https://su2code.github.io,https://github.com/su2code/SU2/issues/1000#issuecomment-634298776,1,['install'],['install']
Deployability,_INSTALL_NEW/bin/SU2/util; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/util/lhc_unif.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/util; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/util/misc.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/util; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/util/mp_eval.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/util; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/util/ordered_bunch.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/util; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/util/ordered_dict.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/util; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/util/plot.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/util; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/util/polarSweepLib.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/util; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/util/which.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/util; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/util/switch.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/util; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/util/__init__.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/util; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/FSI/__init__.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/FSI; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/FSI/FSIInterface.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/FSI; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/FSI/PitchPlungeAirfoilStructuralTester.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/FSI; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/FSI/io/__init__.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/FSI; Installing /home/slimshady/UserPackages/SU2_NEW/S,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/991#issuecomment-632032044:8830,Install,Installing,8830,https://su2code.github.io,https://github.com/su2code/SU2/issues/991#issuecomment-632032044,1,['Install'],['Installing']
Deployability,_NEW/SU2_PY/finite_differences.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/mesh_deformation.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/parallel_computation.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/parallel_computation_fsi.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/package_tests.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/shape_optimization.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/merge_solution.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/set_ffd_design_var.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/compute_polar.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/compute_multipoint.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/discrete_adjoint.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/direct_differentiation.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/fsi_computation.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2_CFD.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/__init__.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/eval/design.py to /home/slimshady/UserPackages/SU2_INSTAL,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/991#issuecomment-632032044:2896,Install,Installing,2896,https://su2code.github.io,https://github.com/su2code/SU2/issues/991#issuecomment-632032044,1,['Install'],['Installing']
Deployability,"` is called. You can reproduce the bugs using the following MWE:. #### Minimal working example. As per the documentation, you should be able to restart a previous shape optimization problem with a command like:; ```; python shape_optimization.py -f turb_SA_RAE2822.cfg -r project.pkl; ```; where the `-r` command specifies a pickle files with the saved project state from a previous run. I checked the problem on the [RAE2822 constrained optimization tutorial](https://su2code.github.io/tutorials/Turbulent_2D_Constrained_RAE2822/). You can download the files using the instructions on that page. In order to reproduce the bug, run the following chain of commands:. 1. As per the tutorial, run `SU2_GEO turb_SA_RAE2822.cfg`; 2. Modify the `turb_SA_RAE2822.cfg` file to specify that `OPT_ITERATIONS=1`; 3. Run `python $SU2_RUN/shape_optimization.py -f turb_SA_RAE2822.cfg`; 4. Modify the `turb_SA_RAE2822.cfg` file to specify that `OPT_ITERATIONS=2`; 5. Run `python $SU2_RUN/shape_optimization.py -f turb_SA_RAE2822.cfg -r project.pkl`. ## Remaining work. This should be covered by a test case. The problem I used takes a bit of time to compute, even using just the restart. Is there an cheaper shape optimization problem that could run quickly as a test case?. ## Related Work; None. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [x] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/921:2234,update,updated,2234,https://su2code.github.io,https://github.com/su2code/SU2/pull/921,1,['update'],['updated']
Deployability,"` to be set properly. However, in the FEM/DG solver, the `base_nodes` is defaulted to `nullptr` and we have workarounds in the FEM/DG sovler that does not require a call to `GetNodes()` in other parts of the code (we use elements instead of nodes, so the concept of nodes is not really well-defined in the FEM/DG solver). . At the moment, the develop branch will fail at this line if anyone attempts to use the FEM/DG solver. . E.g., Taking the `hom_euler/NACA0012_5thOrder` test case in the repo gives the following error message:; ```SU2_CFD: ../SU2_CFD/src/output/../../include/solvers/CSolver.hpp:230: const CVariable* CSolver::GetNodes() const: Assertion `base_nodes!=nullptr && ""CSolver::base_nodes was not set properly, see brief for CSolver::SetBaseClassPointerToNodes()""' failed.``` at the pre-processing stage before any computation is done. Hence, a conditional operator is added to avoid this call for DG solvers. ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*; @vdweide and I are working on a new version of the DG solver that needs this workaround anyway. This is just added for now in case anyone else wants to work on the current version of DG solver available. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [x] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1772:2396,update,updated,2396,https://su2code.github.io,https://github.com/su2code/SU2/pull/1772,1,['update'],['updated']
Deployability,"``; Installing _amgio.; The Meson build system; Version: 0.52.999; Source dir: /opt/su2/SU2_src; Build dir: /opt/su2/SU2_src/build; Build type: native build; Project name: SU2; Project version: 7.0.3 ""Blackbird""; C compiler for the host machine: /usr/lib64/openmpi/bin/mpicc (gcc 8.3.1 ""gcc (GCC) 8.3.1 20191121 (Red Hat 8.3.1-5)""); C linker for the host machine: GNU ld.bfd 2.30-79; C++ compiler for the host machine: /usr/lib64/openmpi/bin/mpicxx (gcc 8.3.1 ""g++ (GCC) 8.3.1 20191121 (Red Hat 8.3.1-5)""); C++ linker for the host machine: GNU ld.bfd 2.30-79; Host machine cpu family: x86_64; Host machine cpu: x86_64; Program python3 found: YES (/home/tjim/anaconda3/envs/sound/bin/python); Run-time dependency MPI for c found: YES 4.0.3; Run-time dependency MPI for cpp found: YES 4.0.3; WARNING: Use the 'pic' kwarg instead of passing '-fpic' manually to 'meshb7'; Message: Boost sources found.; Run-time dependency mkl-static-lp64-seq found: YES 2020 Update 4; Program swig found: YES (/home/tjim/anaconda3/envs/sound/bin/swig); Message: Using mpi4py from /home/tjim/anaconda3/envs/sound/lib/python3.7/site-packages/mpi4py/include; Run-time dependency python3 found: YES 3.6; Program install.sh found: YES (/bin/sh /opt/su2/SU2_src/SU2_PY/pySU2/install.sh); Message: -------------------------------------------------------------------------; | ___ _ _ ___ |; | / __| | | |_ ) Release 7.0.3 ""Blackbird"" |; | \__ \ |_| |/ / |; | |___/\___//___| Meson Configuration Summary |; | |; -------------------------------------------------------------------------; ; Option Value; ---------------------; TecIO: true; CGNS: true; AD (reverse): true; AD (forward): true; Python Wrapper: true; Intel-MKL: true; OpenBlas: false; PaStiX: false. Please be sure to add the $SU2_HOME and $SU2_RUN environment variables,; and update your $PATH (and $PYTHONPATH if applicable) with $SU2_RUN. Based on the input to this configuration, add these lines to your .bashrc file:. export SU2_RUN=/opt/su2/SU2v7_adap/bin; expor",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/948#issuecomment-751431778:1935,Update,Update,1935,https://su2code.github.io,https://github.com/su2code/SU2/issues/948#issuecomment-751431778,1,['Update'],['Update']
Deployability,"```/SU2/SU2_BASE/../SU2_PY/pySU2/pySU2.i:64: Error: Unable to find 'mpi4py/mpi4py.i'```. Use pip to install mpi4py. PS: just saw you already did that, sorry.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/739#issuecomment-515360878:100,install,install,100,https://su2code.github.io,https://github.com/su2code/SU2/issues/739#issuecomment-515360878,1,['install'],['install']
Deployability,"```diff; $ git --no-pager diff --cached ; diff --git a/meson.build b/meson.build; index ca86992ea..b68a03c52 100644; --- a/meson.build; +++ b/meson.build; @@ -1,15 +1,12 @@; project('SU2', 'c', 'cpp',; version: '7.5.1 ""Blackbird""',; + meson_version: '0.61.1',; license: 'LGPL2',; default_options: ['buildtype=release',; 'warning_level=0',; 'c_std=c99',; 'cpp_std=c++11']); ; -if meson.version() != '0.61.1'; - error('SU2 must be configured with the extended Meson script (./meson.py) in the SU2 root directory.'); -endif; -; pymod = import('python'); python = pymod.find_installation(); ; ```. I used this patch, and then ran the following:. ```; $ meson setup builddir --wipe; The Meson build system; Version: 1.0.1; Source dir: /tmp/SU2; Build dir: /tmp/SU2/builddir; Build type: native build. meson.build:1:0: ERROR: Meson version is 1.0.1 but project requires 0.61.1; ```. Using the >= comparison, it configures fine, and downloads a git submodule for mutationpp/coolprop on demand. From a hasty look around, it seems like the other git submodules are used as externals/ directories, not meson subprojects. Another project I know uses e.g. ```; if not fs.exists('submoduledir/README.md'); error('Missing the `submoduledir` submodule! Run `git submodule update --init` to fix this.'); endif; ```. for each submodule before it gets processed by meson. This is less automatic than wrapping it in meson.py, but does provide pretty clear directions... the sticking point is if people download tarballs. You currently point people to github's autogenerated archives, which is NOT sufficient as it doesn't have submodules included. I would actually suggest using `meson dist --include-subprojects --no-tests` to produce your own tarballs and attach them as additional releases artifacts. Meson *does* include submodules (whether or not they are subprojects) automatically to the tarball it creates.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1945#issuecomment-1451057434:309,release,release,309,https://su2code.github.io,https://github.com/su2code/SU2/issues/1945#issuecomment-1451057434,8,"['patch', 'release', 'update']","['patch', 'release', 'releases', 'update']"
Deployability,"`update testcases, streamwise pin converges well` Thanks for checking @pcarruscag :)",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1679#issuecomment-1177421770:1,update,update,1,https://su2code.github.io,https://github.com/su2code/SU2/pull/1679#issuecomment-1177421770,1,['update'],['update']
Deployability,"able). This allows; > people to see the performance of SU2 and replicate it, if need be.; >; > The first step would be compiling a list of cases that should be covered.; > The SU2 2014 SciTech paper; > <https://su2code.github.io/documents/SU2_AIAA_SciTech2014.pdf> would be a; > good starting point as it already had a couple of validation cases. This; > list can be bolstered with some of the NASA TMR cases, and with grid; > convergence studies. I would like to propose an initial list that the; > community can talk through and make changes as we see fit. I am mostly only; > familiar with canonical CFD flows that are used in these cases. But it; > would be great to have other cases, such as Turbo-machinary or FSI cases,; > that show the full breadth of SU2's abilities. This is by no means an; > exhaustive list:; >; > 1. Zero Gradient Flat Plate; > 2. 2D and 3D Bump in Channel; > 3. Asymmetric Diffuser; > 4. Backward facing step; > 5. Unsteady Square cylinder; > 6. NACA0012; > 7. NACA4412 Trailing Edge Seperation; > 8. Joukowski Airfoil; > 9. 30P30N High Lift airfoil; > 10. ONERAM6 Wing; > 11. NASA CRM; > 12. Subsonic and Supersonic Jets; >; > It would be ideal for these test cases to have either high-fidelity data; > (wind tunnel tests, or LES/DNS data), and/or published results of other; > solvers so that comparisons can be made.; >; > I also want to point out the difference between this and the TestCases; > repository. The TestCases repo is used in regression tests to ensure that; > parts of the code don't break when changes are made. This is more a test of; > SU2's fidelity. It would feature large grids and configuration files that; > can be run to convergence.; >; > —; > You are receiving this because you are subscribed to this thread.; > Reply to this email directly, view it on GitHub; > <https://github.com/su2code/SU2/issues/581>, or mute the thread; > <https://github.com/notifications/unsubscribe-auth/APKNm0MgSdkhQbG8dvGsdxlxIf9pa1xsks5ucppYgaJpZM4Ww0V4>; > .; >",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/581#issuecomment-423070900:3050,configurat,configuration,3050,https://su2code.github.io,https://github.com/su2code/SU2/issues/581#issuecomment-423070900,1,['configurat'],['configuration']
Deployability,"able-directdiff=true -Denable-pywrapper=true -Dwith-mpi=enabled build. Message: -------------------------------------------------------------------------; | ___ _ _ ___ |; | / __| | | |_ ) Release 7.3.0 ""Blackbird"" |; | \__ \ |_| |/ / |; | |___/\___//___| Meson Configuration Summary |; | |; -------------------------------------------------------------------------. Option Value; ---------------------; TecIO: true; CGNS: true; AD (reverse): true; AD (forward): true; Python Wrapper: true; Intel-MKL: true; OpenBlas: false; PaStiX: false; Mixed Float: false; libROM: false. Please be sure to add the $SU2_HOME and $SU2_RUN environment variables,; and update your $PATH (and $PYTHONPATH if applicable) with $SU2_RUN. Based on the input to this configuration, add these lines to your .bashrc file:. export SU2_RUN=/home/panos/Applications/SU2/bin; export SU2_HOME=/home/panos/Development/SU2/SU2_SRC; export PATH=$PATH:$SU2_RUN; export PYTHONPATH=$PYTHONPATH:$SU2_RUN. Use './ninja -C build install' to compile and install SU2. Build targets in project: 25. SU2 7.3.0 ""Blackbird"". User defined options; optimization : 3; prefix : /home/panos/Applications/SU2; enable-autodiff : true; enable-cgns : true; enable-directdiff: true; enable-mkl : true; enable-pywrapper : true; with-mpi : enabled. Found ninja-1.10.0.git at /home/panos/Development/SU2/SU2_SRC/ninja; ```. When compiling the process fails when trying to link with the libz library:. ```; [1357/1358] Linking target SU2_PY/pySU2/_pysu2ad.so; FAILED: SU2_PY/pySU2/_pysu2ad.so; /usr/lib64/openmpi/bin/mpicxx -o SU2_PY/pySU2/_pysu2ad.so SU2_PY/pySU2/_pysu2ad.so.p/meson-generated_pySU2ad.cxx.o SU2_CFD/src/libSU2core_AD.a.p/definition_structure.cpp.o SU2_CFD/src/libSU2core_AD.a.p/python_wrapper_structure.cpp.o SU2_CFD/src/libSU2core_AD.a.p/CMarkerProfileReaderFVM.cpp.o SU2_CFD/src/libSU2core_AD.a.p/fluid_CFluidModel.cpp.o SU2_CFD/src/libSU2core_AD.a.p/fluid_CIdealGas.cpp.o SU2_CFD/src/libSU2core_AD.a.p/fluid_CPengRobinson.cpp.o SU2_CFD/sr",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1568:1962,install,install,1962,https://su2code.github.io,https://github.com/su2code/SU2/issues/1568,2,['install'],['install']
Deployability,able-mpi --with-cc=mpicc --with-cxx=mpicxx --prefix=/home/eran/applications/SU2/SU2test ; -------------------------------------------------------------------------; | ___ _ _ ___ | ; | / __| | | |_ ) Release 6.2.0 'Falcon' | ; | \__ \ |_| |/ / | ; | |___/\___//___| Pre-configuration Script | ; | | ; -........ (I removed the header print here) ... Checking the status of submodules; =====================================================================; Initialize submodule externals/codi using git ... ; Submodule 'externals/codi' (https://github.com/scicompkl/CoDiPack) registered for path 'externals/codi'; Cloning into '/home/eran/applications/SU2/git_noMeson/SU2/externals/codi'...; Submodule path 'externals/codi': checked out '501dcf0305df147481630f20ce37c2e624fb351f'; Found correct version of CoDiPack in externals/codi.; Initialize submodule externals/medi using git ... ; Submodule 'externals/medi' (https://github.com/SciCompKL/MeDiPack) registered for path 'externals/medi'; Cloning into '/home/eran/applications/SU2/git_noMeson/SU2/externals/medi'...; Submodule path 'externals/medi': checked out 'edde14f9ac4026b72b1e130f61c0a78e8652afa5'; Found correct version of MeDiPack in externals/medi. Preparing build environment; =====================================================================; Command: ./bootstrap; Logfile written to bootstrap.log. Running configure in folder SU2_AD using CODI; =====================================================================; Command: ../configure --with-cc=mpicc --with-cxx=mpicxx --prefix=/home/eran/applications/SU2/SU2test --enable-mpi --enable-codi-reverse. There was an error while running command '../configure --with-cc=mpicc --with-cxx=mpicxx --prefix=/home/eran/applications/SU2/SU2test --enable-mpi --enable-codi-reverse'.; === Error Log ===; /bin/sh: 1: ../configure: not found. ---------------------------------------------; When I copied configure.py from older installations it kept running but then aborted on; missing modules,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/910#issuecomment-598686170:2167,install,installations,2167,https://su2code.github.io,https://github.com/su2code/SU2/issues/910#issuecomment-598686170,1,['install'],['installations']
Deployability,"ache/issues/891"">#891</a>.</li>; <li>Allowing users to provide a custom timeout as input for aborting download of a cache segment using an environment variable <code>SEGMENT_DOWNLOAD_TIMEOUT_MIN</code>. Default is 60 minutes.</li>; </ul>; </blockquote>; </details>; <details>; <summary>Commits</summary>; <ul>; <li><a href=""https://github.com/actions/cache/commit/fd5de65bc895cf536527842281bea11763fefd77""><code>fd5de65</code></a> Merge pull request <a href=""https://github-redirect.dependabot.com/actions/cache/issues/899"">#899</a> from actions/kotewar/download-and-compression-fix</li>; <li><a href=""https://github.com/actions/cache/commit/d49b6bb21d712fc1556f99339b8324b1603f7560""><code>d49b6bb</code></a> Updated actions/cache toolkit dep to v3.0.4</li>; <li><a href=""https://github.com/actions/cache/commit/a7c34adf76222e77931dedbf4a45b2e4648ced19""><code>a7c34ad</code></a> Merge pull request <a href=""https://github-redirect.dependabot.com/actions/cache/issues/894"">#894</a> from actions/kotewar/update-toolkit-version</li>; <li><a href=""https://github.com/actions/cache/commit/83394c99b7089b29ee6c302fad5e940df48c472a""><code>83394c9</code></a> Updated cache version in license file</li>; <li><a href=""https://github.com/actions/cache/commit/e839c25979e6ffdd90792d34de69d6a87d3016f6""><code>e839c25</code></a> Updated actions/cache version to 3.0.3</li>; <li><a href=""https://github.com/actions/cache/commit/33a923d660988a68affcd47de6bd6744193223a6""><code>33a923d</code></a> Added release information</li>; <li><a href=""https://github.com/actions/cache/commit/a404368986bb049d406166fc20afc01d032ad8a2""><code>a404368</code></a> Updated actions/cache version to 3.0.2</li>; <li><a href=""https://github.com/actions/cache/commit/f4278025ab0f432ce369118909e46deec636f50c""><code>f427802</code></a> Merge pull request <a href=""https://github-redirect.dependabot.com/actions/cache/issues/887"">#887</a> from actions/pdotl-version-patch</li>; <li><a href=""https://github.com/actions/cache/commit/9916fe1701",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1755:7651,update,update-toolkit-version,7651,https://su2code.github.io,https://github.com/su2code/SU2/pull/1755,1,['update'],['update-toolkit-version']
Deployability,ackages/SU2_INSTALL_NEW/bin/SU2/run; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/run/interface.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/run; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/run/merge.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/run; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/run/geometry.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/run; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/run/projection.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/run; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/run/__init__.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/run; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/util/bunch.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/util; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/util/filter_adjoint.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/util; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/util/lhc_unif.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/util; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/util/misc.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/util; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/util/mp_eval.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/util; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/util/ordered_bunch.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/util; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/util/ordered_dict.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/util; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/util/plot.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/util; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/util/polarSweepLib.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/util; Installing /home/slimshady/UserPa,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/991#issuecomment-632032044:7859,Install,Installing,7859,https://su2code.github.io,https://github.com/su2code/SU2/issues/991#issuecomment-632032044,1,['Install'],['Installing']
Deployability,ackages/SU2_INSTALL_NEW/bin/SU2/util; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/util/ordered_dict.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/util; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/util/plot.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/util; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/util/polarSweepLib.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/util; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/util/which.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/util; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/util/switch.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/util; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/util/__init__.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/util; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/FSI/__init__.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/FSI; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/FSI/FSIInterface.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/FSI; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/FSI/PitchPlungeAirfoilStructuralTester.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/FSI; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/FSI/io/__init__.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/FSI; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/FSI/io/FSI_config.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/FSI; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/FSI/util/__init__.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/FSI; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/FSI/util/switch.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/FSI; Running custom install script '/bin/sh /home/slimshady/UserPackages/SU2_NEW/SU2_PY/pySU2/install.sh /home/slimshady/UserPackages/SU2_NEW/build/SU2_PY/pySU2 pysu2.py'; Running custom install sc,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/991#issuecomment-632032044:9367,Install,Installing,9367,https://su2code.github.io,https://github.com/su2code/SU2/issues/991#issuecomment-632032044,1,['Install'],['Installing']
Deployability,"acting boost ...; Using 'PKG_CONFIG_PATH' from environment with value: '/usr/local/mpich-3.3.2/lib/pkgconfig'; Run-time dependency openblas found: YES 0.3.10; Program swig found: YES (/usr/bin/swig); Message: Using mpi4py from /home/slimshady/.local/lib/python3.8/site-packages/mpi4py/include; Dependency python found: YES (pkgconfig); Program install.sh found: YES (/bin/sh /home/slimshady/UserPackages/SU2_HOME/SU2_PY/pySU2/install.sh); Message: -------------------------------------------------------------------------; | ___ _ _ ___ |; | / __| | | |_ ) Release 7.0.6 ""Blackbird"" |; | \__ \ |_| |/ / |; | |___/\___//___| Meson Configuration Summary |; | |; -------------------------------------------------------------------------; ; Option Value; ---------------------; TecIO: true; CGNS: true; AD (reverse): true; AD (forward): true; Python Wrapper: true; Intel-MKL: false; OpenBlas: true; PaStiX: false; Mixed Float: false. Please be sure to add the $SU2_HOME and $SU2_RUN environment variables,; and update your $PATH (and $PYTHONPATH if applicable) with $SU2_RUN. Based on the input to this configuration, add these lines to your .bashrc file:. export SU2_RUN=/home/slimshady/UserPackages/SU2_INSTALL/bin; export SU2_HOME=/home/slimshady/UserPackages/SU2_HOME; export PATH=$PATH:$SU2_RUN; export PYTHONPATH=$PYTHONPATH:$SU2_RUN. Use './ninja -C build install' to compile and install SU2. Build targets in project: 21. Found ninja-1.10.0.git at /home/slimshady/UserPackages/SU2_HOME/ninja; ```; The ninja command fails like so:; ```; slimshady@arch-linux-hp-probook-g3-450: SU2_HOME$ ./ninja -C build install ; ninja: Entering directory `build'; [583/894] Linking target SU2_CFD/src/SU2_CFD; FAILED: SU2_CFD/src/SU2_CFD ; /usr/bin/g++ -o SU2_CFD/src/SU2_CFD SU2_CFD/src/SU2_CFD.p/SU2_CFD.cpp.o -Wl,--as-needed -Wl,--no-undefined -Wl,-O1 -Wl,--start-group SU2_CFD/src/libSU2core.a externals/cgns/libcgns.a externals/metis/libmetis.a externals/parmetis/libparmetis.a externals/tecio/teciompisrc/",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1000#issuecomment-721366137:3333,update,update,3333,https://su2code.github.io,https://github.com/su2code/SU2/issues/1000#issuecomment-721366137,1,['update'],['update']
Deployability,"action-required-labels/commit/5384b5bb3bf2c6b1c100a2a5821e1ddac8c38cae""><code>5384b5b</code></a> Add newline after the match token in error comments (<a href=""https://redirect.github.com/mheap/github-action-required-labels/issues/55"">#55</a>)</li>; <li><a href=""https://github.com/mheap/github-action-required-labels/commit/e33092117bdd8c435e9b654d53726c6936f19518""><code>e330921</code></a> Only use a single comment when the action fails (<a href=""https://redirect.github.com/mheap/github-action-required-labels/issues/53"">#53</a>)</li>; <li>Additional commits viewable in <a href=""https://github.com/mheap/github-action-required-labels/compare/v3...v5"">compare view</a></li>; </ul>; </details>; <br />. [![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=mheap/github-action-required-labels&package-manager=github_actions&previous-version=3&new-version=5)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores). Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`. [//]: # (dependabot-automerge-start); [//]: # (dependabot-automerge-end). ---. <details>; <summary>Dependabot commands and options</summary>; <br />. You can trigger Dependabot actions by commenting on this PR:; - `@dependabot rebase` will rebase this PR; - `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it; - `@dependabot merge` will merge this PR after your CI passes on it; - `@dependabot squash and merge` will squash and merge this PR after your CI passes on it; - `@dependabot cancel merge` will cancel a previously requested merge and block automerging; - `@dependabot reopen` will reopen this PR if it is closed; - `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by c",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2125:5874,update,updates,5874,https://su2code.github.io,https://github.com/su2code/SU2/pull/2125,2,['update'],['updates']
Deployability,"actions/upload-artifact/issues/281"">#281</a></p>; <h2>v2.3.0 Upload Artifact</h2>; <ul>; <li>Optimizations for faster uploads of larger files that are already compressed</li>; <li>Significantly improved logging when there are chunked uploads</li>; <li>Clarifications in logs around the upload size and prohibited characters that aren't allowed in the artifact name or any uploaded files</li>; <li>Various other small bugfixes &amp; optimizations</li>; </ul>; <h2>v2.2.4</h2>; <ul>; <li>Retry on HTTP 500 responses from the service</li>; </ul>; <h2>v2.2.3</h2>; <ul>; <li>Fixes for proxy related issues</li>; </ul>; <h2>v2.2.2</h2>; <ul>; <li>Improved retryability and error handling</li>; </ul>; <h2>v2.2.1</h2>; <ul>; <li>Update used actions/core package to the latest version</li>; </ul>; <h2>v2.2.0</h2>; <ul>; <li>Support for artifact retention</li>; </ul>; <h2>v2.1.4</h2>; <ul>; <li>Add Third Party License Information</li>; </ul>; <h2>v2.1.3</h2>; <ul>; <li>Use updated version of the <code>@action/artifact</code> NPM package</li>; </ul>; <h2>v2.1.2</h2>; <ul>; <li>Increase upload chunk size from 4MB to 8MB</li>; <li>Detect case insensitive file uploads</li>; </ul>; <h2>v2.1.1</h2>; <ul>; <li>Fix for certain symlinks not correctly being identified as directories before starting uploads</li>; </ul>; <h2>v2.1.0</h2>; <ul>; <li>Support for uploading artifacts with multiple paths</li>; <li>Support for using exclude paths</li>; <li>Updates to dependencies</li>; </ul>; <!-- raw HTML omitted -->; </blockquote>; <p>... (truncated)</p>; </details>; <details>; <summary>Commits</summary>; <ul>; <li><a href=""https://github.com/actions/upload-artifact/commit/3cea5372237819ed00197afe530f5a7ea3e805c8""><code>3cea537</code></a> Merge pull request <a href=""https://github-redirect.dependabot.com/actions/upload-artifact/issues/327"">#327</a> from actions/robherley/artifact-1.1.0</li>; <li><a href=""https://github.com/actions/upload-artifact/commit/849aa7758a428ee22be38de371b49c8bd57c4b9d""><code>8",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1756:1833,update,updated,1833,https://su2code.github.io,https://github.com/su2code/SU2/pull/1756,1,['update'],['updated']
Deployability,add sudo in front of make install,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/659#issuecomment-532002423:26,install,install,26,https://su2code.github.io,https://github.com/su2code/SU2/issues/659#issuecomment-532002423,1,['install'],['install']
Deployability,"adding a comment to prevent ""stale"" and ""closed"" status. I look forward to these updates being made; thank you",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/971#issuecomment-888494154:81,update,updates,81,https://su2code.github.io,https://github.com/su2code/SU2/issues/971#issuecomment-888494154,1,['update'],['updates']
Deployability,ady/UserPackages/SU2_INSTALL_NEW/bin/SU2; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/eval/design.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/eval; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/eval/functions.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/eval; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/eval/gradients.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/eval; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/eval/__init__.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/eval; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/io/config.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/io; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/io/config_options.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/io; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/io/data.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/io; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/io/filelock.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/io; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/io/redirect.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/io; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/io/state.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/io; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/io/tools.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/io; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/io/historyMap.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/io; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/io/__init__.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/io; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/mesh/adapt.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/mesh; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/mesh/tools,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/991#issuecomment-632032044:4741,Install,Installing,4741,https://su2code.github.io,https://github.com/su2code/SU2/issues/991#issuecomment-632032044,1,['Install'],['Installing']
Deployability,ages/SU2_NEW/SU2_PY/package_tests.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/shape_optimization.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/merge_solution.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/set_ffd_design_var.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/compute_polar.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/compute_multipoint.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/discrete_adjoint.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/direct_differentiation.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/fsi_computation.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2_CFD.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/__init__.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/eval/design.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/eval; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/eval/functions.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/eval; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/eval/gradients.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/eval; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/eval/__init__.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/eval; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/io/config.py to /home/s,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/991#issuecomment-632032044:3413,Install,Installing,3413,https://su2code.github.io,https://github.com/su2code/SU2/issues/991#issuecomment-632032044,1,['Install'],['Installing']
Deployability,"ails. |; | |; | You should have received a copy of the GNU Lesser General Public |; | License along with SU2. If not, see <http://www.gnu.org/licenses/>. |; -------------------------------------------------------------------------. Build Configuration Summary:. Source code location: /home/antodech/SU2-4.1.0; Install location: /gshare/work/hpascalj/CodeSU2-master; Version: 4.1.0; C++ Compiler: g++; C Compiler: gcc; Preprocessor flags: ; Compiler flags: -g -O2; Linker flags: ; MPI support: no; Metis support: no; Parmetis support: no; TecIO support: no; CGNS support: yes; HDF5 support: no; SZIP support: no; ZLIB support: no; Mutation++ support: no; Jsoncpp support: no; LAPACK support: no; Datatype support:; double yes; complex no; codi_reverse no; codi_forward no. External includes: ; External libs: . Build SU2_CFD: yes; Build SU2_DOT: yes; Build SU2_MSH: yes; Build SU2_DEF: yes; Build SU2_SOL: yes; Build SU2_GEO: yes. Please be sure to add the $SU2_HOME and $SU2_RUN environment variables,; and update your $PATH (and $PYTHONPATH if applicable) with $SU2_RUN. Based on the input to this configuration, add these lines to your .bashrc file:. export SU2_RUN=""/gshare/work/hpascalj/CodeSU2-master/bin""; export SU2_HOME=""/home/antodech/SU2-4.1.0""; export PATH=$PATH:$SU2_RUN; export PYTHONPATH=$PYTHONPATH:$SU2_RUN. ## ---------------- ##; ## Cache variables. ##; ## ---------------- ##. ac_cv_build=x86_64-unknown-linux-gnu; ac_cv_c_compiler_gnu=yes; ac_cv_cxx_compiler_gnu=yes; ac_cv_env_CCC_set=; ac_cv_env_CCC_value=; ac_cv_env_CC_set=; ac_cv_env_CC_value=; ac_cv_env_CFLAGS_set=; ac_cv_env_CFLAGS_value=; ac_cv_env_CPPFLAGS_set=; ac_cv_env_CPPFLAGS_value=; ac_cv_env_CPP_set=; ac_cv_env_CPP_value=; ac_cv_env_CXXFLAGS_set=; ac_cv_env_CXXFLAGS_value=; ac_cv_env_CXX_set=; ac_cv_env_CXX_value=; ac_cv_env_LDFLAGS_set=; ac_cv_env_LDFLAGS_value=; ac_cv_env_LIBS_set=; ac_cv_env_LIBS_value=; ac_cv_env_build_alias_set=; ac_cv_env_build_alias_value=; ac_cv_env_host_alias_set=; ac_cv_env_host_",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/250#issuecomment-205167006:19184,update,update,19184,https://su2code.github.io,https://github.com/su2code/SU2/issues/250#issuecomment-205167006,2,['update'],['update']
Deployability,"ainst `z_errmsg' in read-only section `.text'; /usr/bin/ld: /usr/lib64/libz.a(zutil.o): relocation R_X86_64_PC32 against symbol `z_errmsg' can not be used when making a shared object; recompile with -fPIC; /usr/bin/ld: final link failed: bad value; collect2: error: ld returned 1 exit status. ```; **To Reproduce**. I configured the source code with the commands:. ```; module load mkl/latest; module load mpi/openmpi-x86_64. CFLAGS=""-mtune=native -march=native -fPIC"" CXXFLAGS=""-mtune=native -march=native -fPIC"" LDFLAGS=""-fPIC"" CC=$(which mpiicc) CC=$(which mpicc) CXX=$(which mpicxx) ./meson.py --prefix=/home/panos/Applications/SU2 --optimization=3 -Denable-cgns=true -Denable-mkl=true -Denable-autodiff=true -Denable-directdiff=true -Denable-pywrapper=true -Dwith-mpi=enabled build. Message: -------------------------------------------------------------------------; | ___ _ _ ___ |; | / __| | | |_ ) Release 7.3.0 ""Blackbird"" |; | \__ \ |_| |/ / |; | |___/\___//___| Meson Configuration Summary |; | |; -------------------------------------------------------------------------. Option Value; ---------------------; TecIO: true; CGNS: true; AD (reverse): true; AD (forward): true; Python Wrapper: true; Intel-MKL: true; OpenBlas: false; PaStiX: false; Mixed Float: false; libROM: false. Please be sure to add the $SU2_HOME and $SU2_RUN environment variables,; and update your $PATH (and $PYTHONPATH if applicable) with $SU2_RUN. Based on the input to this configuration, add these lines to your .bashrc file:. export SU2_RUN=/home/panos/Applications/SU2/bin; export SU2_HOME=/home/panos/Development/SU2/SU2_SRC; export PATH=$PATH:$SU2_RUN; export PYTHONPATH=$PYTHONPATH:$SU2_RUN. Use './ninja -C build install' to compile and install SU2. Build targets in project: 25. SU2 7.3.0 ""Blackbird"". User defined options; optimization : 3; prefix : /home/panos/Applications/SU2; enable-autodiff : true; enable-cgns : true; enable-directdiff: true; enable-mkl : true; enable-pywrapper : true; with-mpi : e",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1568:1234,Configurat,Configuration,1234,https://su2code.github.io,https://github.com/su2code/SU2/issues/1568,1,['Configurat'],['Configuration']
Deployability,"al value at solver start is the value given in `STREAMWISE_PERIODIC_PRESSURE_DROP= ??` and for restarted/adjoint simulations the `STREAMWISE_PERIODIC_PRESSURE_DROP` from `flow.meta` is taken. Now this PR:. Until now, the update of the pressure drop, based on the difference between current and prescribed massflow, was done in the Flow solver Preprocessing. That causes some trouble as that routine is called multiple times during normal starts, restarts and even twice(!) for every normal iteration. So do not put any iterated quantities in those like I did. I now did put the update right in front of where it is used -> in the Source_Residual. Like so there shoulnd't be that much trouble of correct taping in that one iteration for the adjoint and it makes the logic of `Inner_iter/outer_iter==0` etc unnecessary. I am not sure the changes up until now are necessary but I am not sure whether they are enough tbh. I will update this description accordingly:. Update: So to give you an idea of the current state of gradient validation. My setup is the good'ol 2D periodic Pin case (fluid-only) with the Design variables being FFD-parameters only around the middle pin (so no Periodic Interface shenanigans up to now) and I have 4 OF: Avg_Temp and Drag on the middle-Pin Surface as well as the Pressure-drop between In/outlet plus massflow through in- OR outlet (which is the same in value but maybe not for the gradient :thinking: ):; 1. For prescribed pressure drop I get a very good agreement for Avg_Temp and Drag (below 0.1% relative diff across the board).; ![image](https://user-images.githubusercontent.com/31306376/152566341-c2d7dc06-c968-41d4-b655-6ba94c211684.png); For Massflow and pressure drop the gradients are off by quite a bit but not too shabby (a good optimizer certainly could make good use of those gradients). Of course the Pressure-drop gradient should be 0 but there are prob some numerical gains to be made. The Pressure-drop gradient is O(1e-5) where the others are O(1 -",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1536:1277,Update,Update,1277,https://su2code.github.io,https://github.com/su2code/SU2/pull/1536,1,['Update'],['Update']
Deployability,"alexfeld; Thanks for your support in the compute_polar.; However, I don't manage to reproduce the failure that you have described. I have run a case; where the cfg file containes no MARKER_DESIGNING definition. Consequently, both ; config_CFD.cfg and config_SOL.cfg had no definition of that marker but nothing failed.; Could you share with me you cfg file so that I will be able to reproduce the error that you; have encountered?; BTW, I havn' t updated yet to 6.1.0 (I'm in 6.0.1). May this be the reason for the different behavior?; Best,; Eran",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/545#issuecomment-400878975:447,update,updated,447,https://su2code.github.io,https://github.com/su2code/SU2/issues/545#issuecomment-400878975,1,['update'],['updated']
Deployability,alling C:\Users\Danie\Documents\SU2\SU2_PY\SU2/io/__init__.py to C:\bin\bin/SU2/io; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/opt/project.py to C:\bin\bin/SU2/opt; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/opt/scipy_tools.py to C:\bin\bin/SU2/opt; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/opt/__init__.py to C:\bin\bin/SU2/opt; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/run/adjoint.py to C:\bin\bin/SU2/run; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/run/deform.py to C:\bin\bin/SU2/run; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/run/direct.py to C:\bin\bin/SU2/run; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/run/interface.py to C:\bin\bin/SU2/run; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/run/merge.py to C:\bin\bin/SU2/run; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/run/geometry.py to C:\bin\bin/SU2/run; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/run/projection.py to C:\bin\bin/SU2/run; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/run/__init__.py to C:\bin\bin/SU2/run; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/util/bunch.py to C:\bin\bin/SU2/util; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/util/filter_adjoint.py to C:\bin\bin/SU2/util; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/util/lhc_unif.py to C:\bin\bin/SU2/util; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/util/misc.py to C:\bin\bin/SU2/util; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/util/mp_eval.py to C:\bin\bin/SU2/util; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/util/ordered_bunch.py to C:\bin\bin/SU2/util; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/util/ordered_dict.py to C:\bin\bin/SU2/util; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/util/plot.py to C:\bin\bin/SU2/util; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/util/polarSweepLib.py to C:\bin\bin/SU2/util; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/util/which.py to C:\bin\bin/SU2/util; Inst,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1376:7203,Install,Installing,7203,https://su2code.github.io,https://github.com/su2code/SU2/issues/1376,1,['Install'],['Installing']
Deployability,alling SU2_CFD/src/SU2_CFD_AD to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing SU2_CFD/src/SU2_CFD_DIRECTDIFF to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing SU2_DOT/src/SU2_DOT to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing SU2_DOT/src/SU2_DOT_AD to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing SU2_DEF/src/SU2_DEF to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing SU2_GEO/src/SU2_GEO to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing SU2_MSH/src/SU2_MSH to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing SU2_SOL/src/SU2_SOL to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing SU2_PY/pySU2/_pysu2.so to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing SU2_PY/pySU2/_pysu2ad.so to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/continuous_adjoint.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/compute_uncertainty.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/finite_differences.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/mesh_deformation.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/parallel_computation.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/parallel_computation_fsi.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/package_tests.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/shape_optimization.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/merge_solution.py to /home/slimshady/UserPa,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/991#issuecomment-632032044:1728,Install,Installing,1728,https://su2code.github.io,https://github.com/su2code/SU2/issues/991#issuecomment-632032044,1,['Install'],['Installing']
Deployability,alling SU2_GEO/src\SU2_GEO.exe to C:\bin\bin; Installing SU2_SOL/src\SU2_SOL.exe to C:\bin\bin; Installing SU2_PY/pySU2\_pysu2.dll to C:\bin\bin; Installing SU2_PY/pySU2\_pysu2.dll.a to C:\bin\lib; Installing SU2_PY/pySU2\_pysu2ad.dll to C:\bin\bin; Installing SU2_PY/pySU2\_pysu2ad.dll.a to C:\bin\lib; Installing C:\Users\Danie\Documents\SU2\SU2_PY\continuous_adjoint.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\compute_uncertainty.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\finite_differences.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\mesh_deformation.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\parallel_computation.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\parallel_computation_fsi.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\package_tests.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\shape_optimization.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\merge_solution.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\set_ffd_design_var.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\compute_polar.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\compute_multipoint.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\discrete_adjoint.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\direct_differentiation.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\fsi_computation.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2_CFD.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/__init__.py to C:\bin\bin/SU2; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/eval/design.py to C:\bin\bin/SU2/eval; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/eval/functions.py to C:\bin\bin/SU2/eval; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/eval/gradients.py to C:\bin\bin/SU2/eval; Installing C:,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1376:4417,Install,Installing,4417,https://su2code.github.io,https://github.com/su2code/SU2/issues/1376,1,['Install'],['Installing']
Deployability,"allows for a new automation workflow to execute to automate the sliding of the major (v1, v2, v3, etc) version numbers for ease of referencing</p>; </blockquote>; </details>; <details>; <summary>Commits</summary>; <ul>; <li><a href=""https://github.com/actions/upload-release-asset/commit/e8f9f06c4b078e705bd2ea027f0926603fc9b4d5""><code>e8f9f06</code></a> Merge pull request <a href=""https://github-redirect.dependabot.com/actions/upload-release-asset/issues/27"">#27</a> from actions/IAmHughes/add-automated-versioning</li>; <li><a href=""https://github.com/actions/upload-release-asset/commit/14187540b829095dbe6f33eb1b166503318e9ceb""><code>1418754</code></a> Add versioning action to automatically slide major versions with releases</li>; <li><a href=""https://github.com/actions/upload-release-asset/commit/7d8fb6c931cb341bda0f898a0d2191cf54abc69a""><code>7d8fb6c</code></a> Merge pull request <a href=""https://github-redirect.dependabot.com/actions/upload-release-asset/issues/6"">#6</a> from actions/IAmHughes/fix-link-to-license</li>; <li><a href=""https://github.com/actions/upload-release-asset/commit/c53f077c5d8c19236718abc4697a59634ef534cf""><code>c53f077</code></a> Fix link to LICENSE</li>; <li><a href=""https://github.com/actions/upload-release-asset/commit/72e8a5ef036620fb7afff8bbb8f9e78910c7ccbc""><code>72e8a5e</code></a> Merge pull request <a href=""https://github-redirect.dependabot.com/actions/upload-release-asset/issues/5"">#5</a> from cesperanc/documentation-update</li>; <li><a href=""https://github.com/actions/upload-release-asset/commit/bf2a7fbecfaaaa29f7819c650ad302e52f68238e""><code>bf2a7fb</code></a> Update example to use the fixed version</li>; <li>See full diff in <a href=""https://github.com/actions/upload-release-asset/compare/v1.0.1...v1.0.2"">compare view</a></li>; </ul>; </details>; <br />. [![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=actions/upload-release-asset&package-manager=github_actions&pr",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1737:1418,release,release-asset,1418,https://su2code.github.io,https://github.com/su2code/SU2/pull/1737,3,['release'],['release-asset']
Deployability,"ally detect the default package location, but it's not equipped to handle multiple package locations. There are some hardcoded includes, but these only work for python 2.7. I don't consider this a bug *per se* because multiple python package directories is not a standard use case. #### The symptoms. When building SU2 with the python wrapper you'll see the following error during the swig build:; ```; <install directory>/../SU2_PY/pySU2/pySU2.i:64: Error: Unable to find 'mpi4py/mpi4py.i'; ```; But mpi4py is indeed installed on your system and it's on your python path, as confirmed by opening a python terminal and running `import mpi4py`. #### The easiest workaround. Switch to a [virtualenv](https://packaging.python.org/guides/installing-using-pip-and-virtual-environments/). This will ensure that all of your python packages are stored in single location. #### Alternate workaround. In this method, you change the hardcoded includes to match mpi4py's package location. First I figure out where my mpi4py is installed. I start a terminal session of python using the python environment I want to use (in this case, it's python 3.6), and then run:; ```; from mpi4py import MPI; MPI; ```. Since I have mpi4py installed on your system and it's on my python path, I see something like:; ```; <module 'mpi4py.MPI' from '/home/clarkpede/.local/lib/python3.6/site-packages/mpi4py/MPI.cpython-34m.so'>; ```. The `/home/clarkpede/.local/lib/python3.6/` directory is where my mpi4py package is installed. But the swig compile command includes `/home/clarkpede/.local/lib/python2.7/`. That's not the right directory! So first I find the hardcoded paths of the makefile by running (on a bash terminal):; ```; grep -rn python2\.7 SU2_PY/ ; ```; On my system, this prints out four lines. I don't care about the `Makefile.in` files, because those are generated automatically and will be overwritten every time I run ""configure"" or ""preconfigure.py."" The `NUMPY_INCLUDE` line is also commented out, so I ignore ",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/722#issuecomment-515693590:1393,install,installed,1393,https://su2code.github.io,https://github.com/su2code/SU2/issues/722#issuecomment-515693590,2,['install'],['installed']
Deployability,"als that the problem variables in `val` are the jacobian components calculated in the Roe and JST scheme (these are the two options I have tested). It is possible to resolve this error by simply moving the stopping of the preaccumulation region from before the call to `updateLinearSystem` in the `ComputeFlux` method of both these schemes, to after, as show below. `/*--- Update the vector and system matrix. ---*/. updateLinearSystem(iEdge, iPoint, jPoint, implicit, updateType,; updateMask, flux, jac_i, jac_j, vector, matrix);. /*--- Stop preaccumulation. ---*/. stopPreacc(flux);`. However, whilst this resolve the error in this location, the next error appears in the Giles boundary condition. Here the two jacobian components within the residual object are not recorded correctly in the preaccumulation output region also. This in `CEulerSolver.cpp:6556`. `/*--- Compute the residual using an upwind scheme ---*/; auto residual = conv_numerics->ComputeResidual(config);. /*--- Update residual value ---*/; LinSysRes.AddBlock(iPoint, residual);`. I have tried simpy adding these components as preacc outputs however they are SIMD arrays and the datatype cannot be converted using the existing implementation. . I am not sure what is going on here, or the next steps to resolve this problem. Any further assistance would be greatly appreciated, thank you :). **Bug report checklist**; *Please make sure that you have followed the checklist below, many common problems can be solved by:*. - [X] Consulting the build instructions (https://su2code.github.io/docs_v7/Build-SU2-Linux-MacOS/).; - [X] Looking for similar problems on GitHub or CFD-Online (https://www.cfd-online.com/Forums/su2/).; - [X] Updating to the newest version of SU2 (either develop, master, or the pre-built executables https://su2code.github.io/download.html). **Desktop (please complete the following information):**; - OS: [MacOS Sonoma 14.6.1]; - C++ compiler and version: [clang 14.0.3 ""Apple clang version 14.0.3 (clang-",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/2368:1629,Update,Update,1629,https://su2code.github.io,https://github.com/su2code/SU2/issues/2368,1,['Update'],['Update']
Deployability,"am install.sh found: YES (sh C:\Users\Danie\Documents\SU2\SU2_PY/pySU2\install.sh); Message: -------------------------------------------------------------------------; | ___ _ _ ___ |; | / __| | | |_ ) Release 7.2.0 ""Blackbird"" |; | \__ \ |_| |/ / |; | |___/\___//___| Meson Configuration Summary |; | |; -------------------------------------------------------------------------. Option Value; ---------------------; TecIO: false; CGNS: true; AD (reverse): true; AD (forward): true; Python Wrapper: true; Intel-MKL: false; OpenBlas: false; PaStiX: false; Mixed Float: false; libROM: false. Please be sure to add the $SU2_HOME and $SU2_RUN environment variables,; and update your $PATH (and $PYTHONPATH if applicable) with $SU2_RUN. Based on the input to this configuration, add these lines to your .bashrc file:. export SU2_RUN=C:\bin/bin; export SU2_HOME=C:\Users\Danie\Documents\SU2; export PATH=$PATH:$SU2_RUN; export PYTHONPATH=$PYTHONPATH:$SU2_RUN. Use './ninja -C C:\Users\Danie\Documents\SU2\build install' to compile and install SU2. Build targets in project: 17. Found ninja.exe-1.9.0 at C:\Users\Danie\Documents\SU2\ninja.exe`. **526 files install successfully.** . `WARNING: the currently checked out submodule commit in C:\Users\Danie\Documents\SU2\externals\opdi does not match the SHA-1 found in the index.; Use 'git submodule update --init C:\Users\Danie\Documents\SU2\externals\opdi' to reset the module if necessary.; SHA-1 tag stored in index does not match SHA tag stored in this script.; Installing SU2_CFD/src\SU2_CFD.exe to C:\bin\bin; Installing SU2_CFD/src\SU2_CFD_AD.exe to C:\bin\bin; Installing SU2_CFD/src\SU2_CFD_DIRECTDIFF.exe to C:\bin\bin; Installing SU2_DOT/src\SU2_DOT.exe to C:\bin\bin; Installing SU2_DOT/src\SU2_DOT_AD.exe to C:\bin\bin; Installing SU2_DEF/src\SU2_DEF.exe to C:\bin\bin; Installing SU2_GEO/src\SU2_GEO.exe to C:\bin\bin; Installing SU2_SOL/src\SU2_SOL.exe to C:\bin\bin; Installing SU2_PY/pySU2\_pysu2.dll to C:\bin\bin; Installing SU2_PY/pySU2\_p",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1376:2615,install,install,2615,https://su2code.github.io,https://github.com/su2code/SU2/issues/1376,2,['install'],['install']
Deployability,"ame| Dim. value| Ref. value| Unit|Non-dim. value|; +------------------------------------------------------------------------------+; | Static Pressure| 41342.4| 1| Pa| 41342.4|; | Density| 0.499813| 1| kg/m^3| 0.499813|; | Temperature| 288.15| 1| K| 288.15|; | Total Energy| 236805| 1| m^2/s^2| 236805|; | Velocity-X| 244.973| 1| m/s| 244.973|; | Velocity-Y| 0| 1| m/s| 0|; | Velocity-Z| 4.48986| 1| m/s| 4.48986|; | Velocity Magnitude| 245.014| 1| m/s| 245.014|; +------------------------------------------------------------------------------+; | Viscosity| 1.7248e-05| 1| N.s/m^2| 1.7248e-05|; | Conductivity| -| 1| W/m^2.K| -|; | Turb. Kin. Energy| 225.119| 1| m^2/s^2| 225.119|; | Spec. Dissipation| 652349| 1| 1/s| 652349|; +------------------------------------------------------------------------------+; | Mach Number| -| -| -| 0.72|; | Reynolds Number| -| -| -| 7.1e+06|; +------------------------------------------------------------------------------+; Initialize Jacobian structure (Navier-Stokes). MG level: 0.; Initialize Jacobian structure (SA model). ----------------- Integration and Numerics Preprocessing ----------------; Integration Preprocessing.; Numerics Preprocessing. ---------------------- Python Interface Preprocessing ---------------------; Setting customized boundary conditions for zone 0. ```; ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [x] My contribution is commented and consistent with SU2 style.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/633:8646,Integrat,Integration,8646,https://su2code.github.io,https://github.com/su2code/SU2/pull/633,2,['Integrat'],['Integration']
Deployability,"amination of the shear stress transport assumption with a low-Reynolds number k-omega model for aerodynamic flows."" Eq 17.; - Boundary conditions errors at inlets, following the Issue #1851. A fix has been proposed following @pcarruscag suggestions for the supersonic inlet BC.; - Boundary conditions definitions are different than the ones proposed in TMR. Maybe give the user the choice to use the BCs implemented in SU2 or the ones from TMR. Changes to SST model proposed:; - Inclusion of non modified versions of SST. In this case I think that more work is needed to be sure that the correct terms are taken into account everywhere in the code.; - Give the user the possibility of changing the production limiter for TKE (not essential).; - Change values of default turbulent to laminar viscosity to 1e-2 (NASA TMR reports that it should be in the range of 1e-2 to 1e-5, but in SU2 this is set to 10 as default). . I've seen the proposed changes to the lower limits of k and w in #2323 and I tried implementing it in my branch. However, if the implementation proposed in the respective PR is preferred then I will change mine. . ## Related Work; #2323 #1851 . ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [ ] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [ ] I used the pre-commit hook to prevent dirty commits and used `pre-commit run --all` to format old commits.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2329:2912,update,updated,2912,https://su2code.github.io,https://github.com/su2code/SU2/pull/2329,1,['update'],['updated']
Deployability,"andle, buf);; ^; In file included from ../../../Common/lib/../src/../include/./mpi_structure.hpp:42:0,; from ../../../Common/lib/../src/../include/config_structure.hpp:41,; from ../../../Common/lib/../src/config_structure.cpp:38:; /usr/include/mpich-x86_64/mpi.h:1460:5: error: initializing argument 3 of ‘int MPI_T_pvar_write(MPI_T_pvar_session, MPI_T_pvar_handle, void*)’ [-fpermissive]; int MPI_T_pvar_write(MPI_T_pvar_session session, MPI_T_pvar_handle handle, void *buf);; ^; make[2]: *** [../src/libSU2_AD_a-config_structure.o] Error 1; make[2]: Leaving directory `/home/bu/SU2/SU2_AD/Common/lib'; make[1]: *** [all-recursive] Error 1; make[1]: Leaving directory `/home/bu/SU2/SU2_AD'; make: *** [SU2_AD] Error 2; ```; Following is the config log:; ```; checking build system type... x86_64-unknown-linux-gnu; checking host system type... x86_64-unknown-linux-gnu; checking target system type... x86_64-unknown-linux-gnu; checking for a BSD-compatible install... /usr/bin/install -c; checking whether build environment is sane... yes; checking for a thread-safe mkdir -p... /usr/bin/mkdir -p; checking for gawk... gawk; checking whether make sets $(MAKE)... yes; checking whether make supports nested variables... yes; checking for style of include used by make... GNU; checking whether the C++ compiler works... yes; checking for C++ compiler default output file name... a.out; checking for suffix of executables... ; checking whether we are cross compiling... no; checking for suffix of object files... o; checking whether we are using the GNU C++ compiler... yes; checking whether /usr/lib64/mpich/bin/mpicxx accepts -g... yes; checking dependency style of /usr/lib64/mpich/bin/mpicxx... gcc3; checking whether we are using the GNU C compiler... yes; checking whether /usr/lib64/mpich/bin/mpicc accepts -g... yes; checking for /usr/lib64/mpich/bin/mpicc option to accept ISO C89... none needed; checking dependency style of /usr/lib64/mpich/bin/mpicc... gcc3; checking whether /usr/lib64/mpic",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/587:2976,install,install,2976,https://su2code.github.io,https://github.com/su2code/SU2/issues/587,1,['install'],['install']
Deployability,"anford.edu and develop respectively:. Jairos-Mac-mini:SU2 jaspe$ git status. On branch feature_force_read_target_on_AD. Changes not staged for commit:. (use ""git add <file>..."" to update what will be committed). (use ""git checkout -- <file>..."" to discard changes in working directory). modified: .travis.yml. no changes added to commit (use ""git add"" and/or ""git commit -a""). Jairos-Mac-mini:SU2 jaspe$ git commit -am ""This is an update of .travis.yml; for feature_force_read_target_on_AD."". [feature_force_read_target_on_AD 3f2115373] This is an update of; .travis.yml for feature_force_read_target_on_AD. 1 file changed, 2 insertions(+), 2 deletions(-); After that, I issued git push origin feature_force_read_target_on_AD, and; got the error message:. To https://github.com/su2code/SU2.git. ! [rejected] feature_force_read_target_on_AD ->; feature_force_read_target_on_AD (fetch first). error: failed to push some refs to 'https://github.com/su2code/SU2.git'. hint: Updates were rejected because the remote contains work that you do. hint: not have locally. This is usually caused by another repository pushing. hint: to the same ref. You may want to first integrate the remote changes. hint: (e.g., 'git pull ...') before pushing again. hint: See the 'Note about fast-forwards' in 'git push --help' for details.; I issued then git pull origin develop, to merge changes in remote to my; local branch, successfully , but a new git push origin; feature_force_read_target_on_AD, produced the same error message.; Would be the first commit command enough?. With kind regards,. Jairo. On Tue, Oct 30, 2018 at 7:25 PM Thomas D. Economon <notifications@github.com>; wrote:. > Hi @jaspe55 <https://github.com/jaspe55> - thanks for the first; > contribution!; >; > Can you please switch the email and branch name in .travis.yml back to; > su2code-dev@lists.stanford.edu and develop, respectively? That should get; > the tests running so we can give this a proper review (should be quick; > given the small",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/600#issuecomment-434929137:1038,Update,Updates,1038,https://su2code.github.io,https://github.com/su2code/SU2/pull/600#issuecomment-434929137,1,['Update'],['Updates']
Deployability,"ase 4.0.0 (<a href=""https://redirect.github.com/actions/checkout/issues/1447"">#1447</a>)</li>; <li><a href=""https://github.com/actions/checkout/commit/8b5e8b768746b50394015010d25e690bfab9dfbc""><code>8b5e8b7</code></a> Support fetching without the --progress option (<a href=""https://redirect.github.com/actions/checkout/issues/1067"">#1067</a>)</li>; <li><a href=""https://github.com/actions/checkout/commit/97a652b80035363df47baee5031ec8670b8878ac""><code>97a652b</code></a> Update default runtime to node20 (<a href=""https://redirect.github.com/actions/checkout/issues/1436"">#1436</a>)</li>; <li>See full diff in <a href=""https://github.com/actions/checkout/compare/v3...v4"">compare view</a></li>; </ul>; </details>; <br />. [![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=actions/checkout&package-manager=github_actions&previous-version=3&new-version=4)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores). Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`. [//]: # (dependabot-automerge-start); [//]: # (dependabot-automerge-end). ---. <details>; <summary>Dependabot commands and options</summary>; <br />. You can trigger Dependabot actions by commenting on this PR:; - `@dependabot rebase` will rebase this PR; - `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it; - `@dependabot merge` will merge this PR after your CI passes on it; - `@dependabot squash and merge` will squash and merge this PR after your CI passes on it; - `@dependabot cancel merge` will cancel a previously requested merge and block automerging; - `@dependabot reopen` will reopen this PR if it is closed; - `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by c",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2126:10865,update,updates,10865,https://su2code.github.io,https://github.com/su2code/SU2/pull/2126,2,['update'],['updates']
Deployability,"ated. ```; ------------------------ Physical Case Definition -----------------------; Compressible RANS equations.; Turbulence model: Spalart Allmaras; Hybrid RANS/LES: No Hybrid RANS/LES; Mach number: 0.15.; Angle of attack (AoA): 10 deg, and angle of sideslip (AoS): 0 deg.; Reynolds number: 6e+06. Reference length 1.; No restart solution, use the values at infinity (freestream).; Non-Dimensional simulation (P=1.0, Rho=1.0, T=1.0 at the farfield).; The reference area is 1 m^2.; The semi-span will be computed using the max y(3D) value.; The reference length is 1 m.; Reference origin for moment evaluation is (0.25, 0, 0).; Surface(s) where the force coefficients are evaluated: airfoil. Surface(s) plotted in the output file: airfoil.; Input mesh file name: n0012_225-65.su2. ---------------------- Space Numerical Integration ----------------------; Roe (with entropy fix = 0.001) solver for the flow inviscid terms.; Standard Roe without low-dissipation function.; Second order integration in space, with slope limiter.; Venkatakrishnan slope-limiting method, with constant: 0.03. ; The reference element size is: 1. ; Scalar upwind solver for the turbulence model.; Second order integration in space with slope limiter.; No slope-limiting method. ; Average of gradients with correction (viscous flow terms).; Average of gradients with correction (viscous turbulence terms).; Gradient Computation using weighted Least-Squares method. ---------------------- Time Numerical Integration -----------------------; Local time stepping (steady state simulation).; Euler implicit method for the flow equations.; FGMRES is used for solving the linear system.; Using a LU-SGS preconditioning.; Convergence criteria of the linear solver: 1e-10.; Max number of linear iterations: 5.; V Multigrid Cycle, with 3 multigrid levels.; Damping factor for the residual restriction: 0.75.; Damping factor for the correction prolongation: 0.75.; No CFL adaptation.; +-------------------------------------------+; ",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/591:2409,integrat,integration,2409,https://su2code.github.io,https://github.com/su2code/SU2/issues/591,1,['integrat'],['integration']
Deployability,ation.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2_CFD.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/__init__.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/eval/design.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/eval; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/eval/functions.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/eval; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/eval/gradients.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/eval; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/eval/__init__.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/eval; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/io/config.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/io; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/io/config_options.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/io; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/io/data.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/io; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/io/filelock.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/io; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/io/redirect.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/io; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/io/state.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/io; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/io/tools.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/io; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/io/historyMap.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/io; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/io/__init__.,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/991#issuecomment-632032044:4471,Install,Installing,4471,https://su2code.github.io,https://github.com/su2code/SU2/issues/991#issuecomment-632032044,1,['Install'],['Installing']
Deployability,"ation; either |; | version 2.1 of the License, or (at your option) any later version. |; | |; | SU2 is distributed in the hope that it will be useful, |; | but WITHOUT ANY WARRANTY; without even the implied warranty of |; | MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU |; | Lesser General Public License for more details. |; | |; | You should have received a copy of the GNU Lesser General Public |; | License along with SU2. If not, see <http://www.gnu.org/licenses/>. |; -------------------------------------------------------------------------. Build Configuration Summary:. Source code location: /home/bu/SU2; Install location: 	 /home/bu/SU2; Version: 6.1.0; C++ Compiler: /usr/lib64/mpich/bin/mpicxx; C Compiler: /usr/lib64/mpich/bin/mpicc; Preprocessor flags: -DHAVE_MPI ; Compiler flags: -O3 -Wall; Linker flags: ; MPI support: yes; Metis support: yes; Parmetis support: yes; TecIO support: no; CGNS support: yes; HDF5 support: no; SZIP support: no; ZLIB support: no; Mutation++ support: no; Jsoncpp support: 	 no; LAPACK support: no; Datatype support:; double no; complex no; codi_reverse yes; codi_forward no. External includes: -DHAVE_CGNS -I$(top_srcdir)/externals/cgns -I$(top_srcdir)/externals/cgns/adf -DHAVE_PARMETIS -I$(top_srcdir)/externals/parmetis/include -DHAVE_METIS -I$(top_srcdir)/externals/metis/include ; External libs: $(top_builddir)/externals/cgns/libcgns.a $(top_builddir)/externals/parmetis/libparmetis.a $(top_builddir)/externals/metis/libmetis.a . Build SU2_CFD: yes; Build SU2_DOT: yes; Build SU2_MSH: no; Build SU2_DEF: no; Build SU2_SOL: no; Build SU2_GEO: no; Build Py Wrapper: no. Please be sure to add the $SU2_HOME and $SU2_RUN environment variables,; and update your $PATH (and $PYTHONPATH if applicable) with $SU2_RUN. Based on the input to this configuration, add these lines to your .bashrc file:. export SU2_RUN=""/home/bu/SU2/bin""; export SU2_HOME=""/home/bu/SU2""; export PATH=$PATH:$SU2_RUN; export PYTHONPATH=$PYTHONPATH:$SU2_RUN; ```",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/587:9898,update,update,9898,https://su2code.github.io,https://github.com/su2code/SU2/issues/587,2,"['configurat', 'update']","['configuration', 'update']"
Deployability,"ave expected. . In SU2, I compute the drag force by multiplying CD with the non-dimensional factor written to the forces_breakdown file. For Paraview, I wrote a script which does the following to compute the drag force:; - Load surface flow solution for the wing surface; - Compute surface normals; - Compute Drag = -Pressure*(Normals_X * cos(AoA/180 * 3.1415) + Normals_Z * sin(AoA/180 * 3.1415)); - Integrate this over the whole wing surface to get the total drag force. You can also find this Paraview script attached.; I validated the Paraview script for multiple simple testcases, for which SU2 and Paraview gave me exactly the same drag force. When I applied it to the initial optimization geometry, I however realized, that SU2 computes a drag force of 60.95 N while Paraview gets 143.6 N. Furthermore, for the final optimization geometry, Paraview computes 53.3 N while SU2 gets a drag force of -55.95 N. . To my understanding, the drag computed from pressure integration over the surface should be independent of the solver, the flow conditions and (ideally) even the programme. Furthermore, the Paraview result seems more trustworthy than the SU2 result as SU2 calculates a negative drag, which should physically not be possible, not even with the Euler equations. This leads me to the conclusion that there might be something wrong with the drag computation in SU2 for some geometries. Has anybody encountered a similar issue? Or are there specific criteria a geometry must fulfill in order that the drag is computed correctly?. **To Reproduce**; To reproduce the drag force calculation for either the initial or the final result:; - Open ""Drag Force computation.pvsm"" in Paraview with load state. Open it with the .vtu file you want to analzye; - Read the correct AoA in the forces_breakout.dat file. Then go to ""Calculator1"" in the Paraview script and insert the correct AoA into the formula.; - Read the Paraview Drag result. The script assumes surface normal vectors pointing outwards. ",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1716:1507,integrat,integration,1507,https://su2code.github.io,https://github.com/su2code/SU2/issues/1716,1,['integrat'],['integration']
Deployability,"ave to bear with me, I might get some of this wrong, I am not entirely sure what is going on here so I will try and include as much information as possible. Using the tape tagging method developed by @oleburghardt in #2343 and presented at the most recent SU2 Conference, a run of the full tape reveals that a variable used in a preaccumulation output is not properly recorded. The variable is the `val` in the function `PassiveAssign` in `CSysMatrix.hpp` line 215. `FORCEINLINE static ScalarType PassiveAssign(const SrcType& val) {; return SU2_TYPE::GetValue(val);; }`. Following the call stack of the error reveals that the problem variables in `val` are the jacobian components calculated in the Roe and JST scheme (these are the two options I have tested). It is possible to resolve this error by simply moving the stopping of the preaccumulation region from before the call to `updateLinearSystem` in the `ComputeFlux` method of both these schemes, to after, as show below. `/*--- Update the vector and system matrix. ---*/. updateLinearSystem(iEdge, iPoint, jPoint, implicit, updateType,; updateMask, flux, jac_i, jac_j, vector, matrix);. /*--- Stop preaccumulation. ---*/. stopPreacc(flux);`. However, whilst this resolve the error in this location, the next error appears in the Giles boundary condition. Here the two jacobian components within the residual object are not recorded correctly in the preaccumulation output region also. This in `CEulerSolver.cpp:6556`. `/*--- Compute the residual using an upwind scheme ---*/; auto residual = conv_numerics->ComputeResidual(config);. /*--- Update residual value ---*/; LinSysRes.AddBlock(iPoint, residual);`. I have tried simpy adding these components as preacc outputs however they are SIMD arrays and the datatype cannot be converted using the existing implementation. . I am not sure what is going on here, or the next steps to resolve this problem. Any further assistance would be greatly appreciated, thank you :). **Bug report checklist*",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/2368:1018,Update,Update,1018,https://su2code.github.io,https://github.com/su2code/SU2/issues/2368,1,['Update'],['Update']
Deployability,"b96cc""><code>a30777e</code></a> <a href=""https://github.com/eggyhead""><code>@​eggyhead</code></a></li>; <li><a href=""https://github.com/actions/upload-artifact/commit/3a8048248f2f288c271830f8ecf2a1c5d8eb0e9a""><code>3a80482</code></a> Merge pull request <a href=""https://redirect.github.com/actions/upload-artifact/issues/511"">#511</a> from actions/robherley/migration-docs-typo</li>; <li><a href=""https://github.com/actions/upload-artifact/commit/9d63e3f2f81d9dc4e13d83fc330408f8a94b79d1""><code>9d63e3f</code></a> Merge branch 'main' into robherley/migration-docs-typo</li>; <li><a href=""https://github.com/actions/upload-artifact/commit/dfa1ab292d2fdd78d056187f11c568c16ab53de9""><code>dfa1ab2</code></a> fix typo with v3 artifact downloads in migration guide</li>; <li><a href=""https://github.com/actions/upload-artifact/commit/d00351bf698398c17253d21cf8f90e57a344e14b""><code>d00351b</code></a> Merge pull request <a href=""https://redirect.github.com/actions/upload-artifact/issues/509"">#509</a> from markmssd/patch-1</li>; <li><a href=""https://github.com/actions/upload-artifact/commit/707f5a7b71e0fb01c5df1e16e9679a3292606ef2""><code>707f5a7</code></a> Update limitation of <code>10</code> artifacts upload to <code>500</code></li>; <li><a href=""https://github.com/actions/upload-artifact/commit/26f96dfa697d77e81fd5907df203aa23a56210a8""><code>26f96df</code></a> Merge pull request <a href=""https://redirect.github.com/actions/upload-artifact/issues/505"">#505</a> from actions/robherley/merge-artifacts</li>; <li>Additional commits viewable in <a href=""https://github.com/actions/upload-artifact/compare/v3...v4"">compare view</a></li>; </ul>; </details>; <br />. [![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=actions/upload-artifact&package-manager=github_actions&previous-version=3&new-version=4)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2231:5379,patch,patch-,5379,https://su2code.github.io,https://github.com/su2code/SU2/pull/2231,1,['patch'],['patch-']
Deployability,"be computed using the max y(3D) value.; The reference length is 1 m.; Reference origin for moment evaluation is (0.25, 0, 0).; Surface(s) where the force coefficients are evaluated: airfoil. Surface(s) plotted in the output file: airfoil.; Input mesh file name: n0012_225-65.su2. ---------------------- Space Numerical Integration ----------------------; Roe (with entropy fix = 0.001) solver for the flow inviscid terms.; Standard Roe without low-dissipation function.; Second order integration in space, with slope limiter.; Venkatakrishnan slope-limiting method, with constant: 0.03. ; The reference element size is: 1. ; Scalar upwind solver for the turbulence model.; Second order integration in space with slope limiter.; No slope-limiting method. ; Average of gradients with correction (viscous flow terms).; Average of gradients with correction (viscous turbulence terms).; Gradient Computation using weighted Least-Squares method. ---------------------- Time Numerical Integration -----------------------; Local time stepping (steady state simulation).; Euler implicit method for the flow equations.; FGMRES is used for solving the linear system.; Using a LU-SGS preconditioning.; Convergence criteria of the linear solver: 1e-10.; Max number of linear iterations: 5.; V Multigrid Cycle, with 3 multigrid levels.; Damping factor for the residual restriction: 0.75.; Damping factor for the correction prolongation: 0.75.; No CFL adaptation.; +-------------------------------------------+; | MG Level| Presmooth|PostSmooth|CorrectSmo|; +-------------------------------------------+; | 0| 1| 0| 0|; | 1| 1| 0| 0|; | 2| 1| 0| 0|; | 3| 1| 0| 0|; +-------------------------------------------+; Courant-Friedrichs-Lewy number: 10; Euler implicit time integration for the turbulence model. ------------------------- Convergence Criteria --------------------------; Maximum number of iterations: 99999.; Reduce the density residual 10 orders of magnitude.; The minimum bound for the density residual ",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/591:2903,Integrat,Integration,2903,https://su2code.github.io,https://github.com/su2code/SU2/issues/591,1,['Integrat'],['Integration']
Deployability,"be the loop over the number of physical disciplines involved in the problem and not the zones. Whether the individual disciplines contain one or multiple zones is irrelevant at this level, in my opinion. The loop over the multiple zones of a single discipline should take place at a much lower level, namely where the spatial residual is computed. At least, this should be the case for the fluid dynamics part. I don't know whether this is also the case for other disciplines, like structures. What about the following high level structure?. - Loop over the number of iterations, or time steps for unsteady problems.; - Loop over the number of pseudo-time steps for implicit time integration schemes; (DT_STEPPING_1ST and DT_STEPPING_2ND). For other cases this loop is 1.; - Loop over the number of disciplines involved; Call iterate for each of the disciplines.; In iterate: ; - Loop over the (Runge-Kutta) stages; - Loop over the zones of a single discipline; Compute spatial residual.; Update the state vector.; - End loop over the zones of a single discipline.; Exchange halo data. This includes the halo data between zones of a single discipline.; - End loop over the (Runge-Kutta) stages ; - End loop over the disciplines; - End loop over the pseudo time steps.; - End loop over the number of iterations, or time steps for unsteady problems. The weakness of this approach is that it still does not work when one would like to employ multi-stage time integration schemes for an unsteady, multi-disciplinary problem (does not work for the current implementation either), but maybe this is something we simply have to accept. The alternative is that all the details of the different time integration schemes have to be moved to the driver classes, which is highly undesirable, I think. The structure above implies that the iteration_container and the integration_container should be defined per discipline and not per zone anymore. The geometry_container and solver_container should still be defin",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/437#issuecomment-328368371:1049,Update,Update,1049,https://su2code.github.io,https://github.com/su2code/SU2/issues/437#issuecomment-328368371,1,['Update'],['Update']
Deployability,"bin/SU2/eval/design.py"", line 380, in obj_df; grad = su2grad(this_obj,grad_method,config,state); File ""/usr/local/bin/SU2/eval/gradients.py"", line 96, in gradient; grads = adjoint( func_name, config, state ); File ""/usr/local/bin/SU2/eval/gradients.py"", line 294, in adjoint; info = su2run.adjoint(konfig); File ""/usr/local/bin/SU2/run/adjoint.py"", line 79, in adjoint; SU2_CFD(konfig); File ""/usr/local/bin/SU2/run/interface.py"", line 112, in CFD; run_command( the_Command ); File ""/usr/local/bin/SU2/run/interface.py"", line 292, in run_command; raise exception(message); RuntimeError: Path = /home/xxx/SU2/SU2-7.0.4/test1/DESIGNS/DSN_001/ADJOINT_DRAG/,; Command = /home/xxx/SU2/SU2-7.0.4/SU2_CFD/bin/SU2_CFD_AD config_CFD_AD.cfg; SU2 process returned error '127'; /bin/sh: 1: /home/xxx/SU2/SU2-7.0.4/SU2_CFD/bin/SU2_CFD_AD: not found; ```; So I tried to build AD under the instruction. I copied the exact same thing and pasted to the command. The error is:. ```; Checking the status of submodules; =====================================================================; Found an old or unspecified version of CoDiPack in externals/codi.; Use -u to reset module.; ```; However, when I try to update/reinstall the codi, I failed in the extraction process. The error is:; ```; Checking the status of submodules; =====================================================================. git command failed (either git is not installed or this is not a git repository). Using fall-back method to initialize submodule CoDiPack. Initializing CoDiPack 'bd4a639c2fe625a80946c8365bd2976a2868cf46'; =====================================================================; Downloading module from https://github.com/scicompkl/CoDiPack; Extracting archive ...; Extraction of module CoDiPack failed. See preconf.err for more information.; ```; So how can I build the SU2_CFD_AD and run the shape_optimization.py? Thank you very much. All the direct solutions can work well.; My SU2 version is 7.0.4 under Linux system.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1602:3335,update,update,3335,https://su2code.github.io,https://github.com/su2code/SU2/issues/1602,2,"['install', 'update']","['installed', 'update']"
Deployability,bin/bin; export SU2_HOME=C:\Users\Danie\Documents\SU2; export PATH=$PATH:$SU2_RUN; export PYTHONPATH=$PYTHONPATH:$SU2_RUN. Use './ninja -C C:\Users\Danie\Documents\SU2\build install' to compile and install SU2. Build targets in project: 17. Found ninja.exe-1.9.0 at C:\Users\Danie\Documents\SU2\ninja.exe`. **526 files install successfully.** . `WARNING: the currently checked out submodule commit in C:\Users\Danie\Documents\SU2\externals\opdi does not match the SHA-1 found in the index.; Use 'git submodule update --init C:\Users\Danie\Documents\SU2\externals\opdi' to reset the module if necessary.; SHA-1 tag stored in index does not match SHA tag stored in this script.; Installing SU2_CFD/src\SU2_CFD.exe to C:\bin\bin; Installing SU2_CFD/src\SU2_CFD_AD.exe to C:\bin\bin; Installing SU2_CFD/src\SU2_CFD_DIRECTDIFF.exe to C:\bin\bin; Installing SU2_DOT/src\SU2_DOT.exe to C:\bin\bin; Installing SU2_DOT/src\SU2_DOT_AD.exe to C:\bin\bin; Installing SU2_DEF/src\SU2_DEF.exe to C:\bin\bin; Installing SU2_GEO/src\SU2_GEO.exe to C:\bin\bin; Installing SU2_SOL/src\SU2_SOL.exe to C:\bin\bin; Installing SU2_PY/pySU2\_pysu2.dll to C:\bin\bin; Installing SU2_PY/pySU2\_pysu2.dll.a to C:\bin\lib; Installing SU2_PY/pySU2\_pysu2ad.dll to C:\bin\bin; Installing SU2_PY/pySU2\_pysu2ad.dll.a to C:\bin\lib; Installing C:\Users\Danie\Documents\SU2\SU2_PY\continuous_adjoint.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\compute_uncertainty.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\finite_differences.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\mesh_deformation.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\parallel_computation.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\parallel_computation_fsi.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\package_tests.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\shape_optimization.py to C:\bin\bin; Installing C:\Users\Dani,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1376:3435,Install,Installing,3435,https://su2code.github.io,https://github.com/su2code/SU2/issues/1376,1,['Install'],['Installing']
Deployability,bin; Installing SU2_PY/pySU2\_pysu2ad.dll.a to C:\bin\lib; Installing C:\Users\Danie\Documents\SU2\SU2_PY\continuous_adjoint.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\compute_uncertainty.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\finite_differences.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\mesh_deformation.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\parallel_computation.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\parallel_computation_fsi.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\package_tests.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\shape_optimization.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\merge_solution.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\set_ffd_design_var.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\compute_polar.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\compute_multipoint.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\discrete_adjoint.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\direct_differentiation.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\fsi_computation.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2_CFD.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/__init__.py to C:\bin\bin/SU2; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/eval/design.py to C:\bin\bin/SU2/eval; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/eval/functions.py to C:\bin\bin/SU2/eval; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/eval/gradients.py to C:\bin\bin/SU2/eval; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/eval/__init__.py to C:\bin\bin/SU2/eval; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/io/config.py to C:\bin\bin/SU2/io; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/io/config_options.py to C:\bi,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1376:4660,Install,Installing,4660,https://su2code.github.io,https://github.com/su2code/SU2/issues/1376,1,['Install'],['Installing']
Deployability,"ble */; ^; ../externals/cgns/hdf5/H5Dchunk.c: In function 'H5D__chunk_copy_cb':; ../externals/cgns/hdf5/H5Dchunk.c:6081:75: warning: passing argument 3 of 'H5O_copy_expand_ref' discards 'const' qualifier from pointer target type [-Wdiscarded-qualifiers]; if (H5O_copy_expand_ref(udata->file_src, udata->tid_src, udata->dt_src, buf, nbytes,; ~~~~~^~~~~~~~; In file included from ../externals/cgns/hdf5/H5Dprivate.h:25,; from ../externals/cgns/hdf5/H5Dpkg.h:30,; from ../externals/cgns/hdf5/H5Dchunk.c:55:; ../externals/cgns/hdf5/H5Oprivate.h:997:74: note: expected 'H5T_t *' {aka 'struct H5T_t *'} but argument is of type 'const H5T_t *' {aka 'const struct H5T_t *'}; H5_DLL herr_t H5O_copy_expand_ref(H5F_t *file_src, hid_t tid_src, H5T_t *dt_src, void *buf_src,; ~~~~~~~^~~~~~; [50/903] Compiling C object externals/cgns/hdf5/libsu2hdf5.a.p/H5C.c.obj; ninja: build stopped: subcommand failed.; PS C:\su2code-SU2-09ba9e3> python ninja.exe -C C:\su2code-SU2-09ba9e3\build install; SyntaxError: Non-UTF-8 code starting with '\x90' in file C:\su2code-SU2-09ba9e3\ninja.exe on line 1, but no encoding declared; see https://peps.python.org/pep-0263/ for details; PS C:\su2code-SU2-09ba9e3> python ninja.exe -C C:\su2code-SU2-09ba9e3\build install; SyntaxError: Non-UTF-8 code starting with '\x90' in file C:\su2code-SU2-09ba9e3\ninja.exe on line 1, but no encoding declared; see https://peps.python.org/pep-0263/ for details; PS C:\su2code-SU2-09ba9e3> ninja.exe -C C:\su2code-SU2-09ba9e3\build install; ninja: Entering directory `C:\su2code-SU2-09ba9e3\build'; [1/854] Linking target externals/cgns/hdf5/H5make_libsettings.exe; FAILED: externals/cgns/hdf5/H5make_libsettings.exe; ""gcc"" -o externals/cgns/hdf5/H5make_libsettings.exe externals/cgns/hdf5/H5make_libsettings.exe.p/H5make_libsettings.c.obj ""-Wl,--allow-shlib-undefined"" ""-Wl,-O1"" ""-Wl,--start-group"" ""-lz"" ""-lC:\Program Files (x86)\Microsoft SDKs\MPI\Lib\x64\msmpi"" ""-Wl,--subsystem,console"" ""-lkernel32"" ""-luser32"" ""-lgdi32"" ""-lwinspool"" ""-ls",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1982:4812,install,install,4812,https://su2code.github.io,https://github.com/su2code/SU2/issues/1982,1,['install'],['install']
Deployability,"ble-multilib --disable-werror --enable-checking=release --enable-default-pie --enable-default-ssp --enable-cet=auto gdc_include_dir=/usr/include/dlang/gdc; Thread model: posix; gcc version 9.2.1 20200130 (Arch Linux 9.2.1+20200130-2) ; ```; I did what you suggested and here is how my meson.build file looks.; ```; # If custom mpi mode is enabled, include and library pathes for MPI have to be set manually to env variables; if get_option('custom-mpi'); mpi_dep = []; mpi = true; # Otherwise they are automatically determined; else; mpi_dep = [dependency('mpich', required : get_option('with-mpi'))]; # mpi_dep = [dependency('mpi', language:'c', required : get_option('with-mpi')),; # dependency('mpi', language:'cpp', required : get_option('with-mpi'))]; #if mpi_dep[0].found() or mpi_dep[1].found(); # mpi = true; #endif; endif; ```; My SU2 build was successful but there were a couple of warnings.; Also, instead of 870 there were only 772 files in total. Is that okay?; ```; slimshady@arch-linux-hp-probook-g3-450: SU2HOME$ ./ninja -C build install; ninja: Entering directory `build'; [756/772] Generating 'SU2_PY/pySU2/_pysu2.so.p/pySU2.cxx'.; ../SU2_PY/pySU2/../../Common/include/mpi_structure.hpp:348: Warning 325: Nested struct not currently supported (Status ignored); [760/772] Generating 'SU2_PY/pySU2/_pysu2ad.so.p/pySU2ad.cxx'.; ../SU2_PY/pySU2/../../Common/include/mpi_structure.hpp:348: Warning 325: Nested struct not currently supported (Status ignored); [771/772] Installing files.; .; .; ```; Here is the [entire output for `./ninja`](https://github.com/su2code/SU2/files/4672490/ninja_build_mpich.log). Even though the build was successful, SU2 does not seem to run properly. It displays the same thing ""NP"" (`mpirun -n NP ...`) number of times. And the console prints the output in chunks, like 57 iterations suddenly ""NP"" times, then a pause, then 57-119 ""NP"" times and so on. You can see the [logfile here](https://github.com/su2code/SU2/files/4672491/mpirun_SU2_CFD_error.log).",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1000#issuecomment-633139474:2057,install,install,2057,https://su2code.github.io,https://github.com/su2code/SU2/issues/1000#issuecomment-633139474,3,"['Install', 'install']","['Installing', 'install']"
Deployability,"blockquote>; <p>... (truncated)</p>; </details>; <details>; <summary>Commits</summary>; <ul>; <li><a href=""https://github.com/actions/cache/commit/ab5e6d0c87105b4c9c2047343972218f562e4319""><code>ab5e6d0</code></a> Merge pull request <a href=""https://redirect.github.com/actions/cache/issues/1341"">#1341</a> from bethanyj28/main</li>; <li><a href=""https://github.com/actions/cache/commit/89c7d86c71006451e399dfcc588eed8e392e0dcf""><code>89c7d86</code></a> licensed cache</li>; <li><a href=""https://github.com/actions/cache/commit/d2c84da363007d814e47d50565ba3794c1a84c56""><code>d2c84da</code></a> update <code>@​actions/cache</code></li>; <li><a href=""https://github.com/actions/cache/commit/37e7d4eb166540050942d75a6e40742cbfc92f65""><code>37e7d4e</code></a> Merge pull request <a href=""https://redirect.github.com/actions/cache/issues/1340"">#1340</a> from actions/bethanyj28/update-publish-flow</li>; <li><a href=""https://github.com/actions/cache/commit/a18323f50430a57f9094db3ce508dc1e3a25d4a2""><code>a18323f</code></a> add release action</li>; <li><a href=""https://github.com/actions/cache/commit/a2ed59d39b352305bdd2f628719a53b2cc4f9613""><code>a2ed59d</code></a> Merge pull request <a href=""https://redirect.github.com/actions/cache/issues/1305"">#1305</a> from actions/yacaovsnc/update_examples</li>; <li><a href=""https://github.com/actions/cache/commit/dc88ab52d723eb4cc3a0af43f6bee825c4742280""><code>dc88ab5</code></a> Update examples</li>; <li><a href=""https://github.com/actions/cache/commit/1d78355196cc3f88914ca91332c58d431a78513d""><code>1d78355</code></a> Merge pull request <a href=""https://redirect.github.com/actions/cache/issues/1304"">#1304</a> from actions/yacaovsnc/update_readme</li>; <li><a href=""https://github.com/actions/cache/commit/c36458f13bdfaeff50a47b181b7368ae66b21f28""><code>c36458f</code></a> Update README.md</li>; <li><a href=""https://github.com/actions/cache/commit/13aacd865c20de90d75de3b17ebe84f7a17d57d2""><code>13aacd8</code></a> Merge pull request <a href=""https://r",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2232:8618,release,release,8618,https://su2code.github.io,https://github.com/su2code/SU2/pull/2232,1,['release'],['release']
Deployability,"both codes deliver the same results (of course with some minor differences). So far so good. Unsteady cases are a bit trickier: the latest 2D results of @RoccoBombardieri show pretty much no difference including the first timesteps. The onera m6 case in contrast converges to the same (steady-state) results for both code version eventually but their initial transient phase differs quite significantly. . A possible explanation for the different initial transient phase: In both implementations a ""reflected state"" is constructed where the normal component of the velocity is subtracted [once in the older code version & twice in the newer version]. I.e. subtracting the normal component of velocity twice means mirroring the velocity along the symmetry plane. The newer code version is a bit ""stronger"" in enforcing the boundary conditions which could lead to the reduced oscillation in CD and CL. If we agree that both code versions produce physically correct results for steady cases and unsteady cases that were integrated long enough in time to get rid of the influence of the initial condition ... then we are left with this initial transient phase that differs. Of course if there is more evidence that one or the other version produces physically ""better"" results I would love to see that. Until then, both initial oscillations are equally correct/uncorrect in my opinion. [I'll add a few words about the adjoint here later]. [I'll add the idea of an FSI case of @cvencro here later where the initial phase has a major impact]; Consider an FSI computation of an airfoil where the trailing edge can exhibit flutter (periodic up-and-down-movement of the trailing edge) in certain flow regimes. Now if during the initial transient the forces on the airfoil are higher than in the converged state then the fluttering can be excited where the initial transient can be seen as an activation energy. If you were to e.g. ramp up flow speed/conditions slowly up to the same magnitude as before one mig",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/828#issuecomment-563314747:1909,integrat,integrated,1909,https://su2code.github.io,https://github.com/su2code/SU2/issues/828#issuecomment-563314747,2,['integrat'],['integrated']
Deployability,"bsonic engine intake option; - Small output change; - Added output_su2.cpp; - Updated Engine BC; - Working on Engine BCs; - Added Supersonic Outlet BC; - Minor change; - Merge remote-tracking branch 'upstream/develop' into develop; - adjoints, solid boundary, doxygen in config; - continued fixing; - re-added adjoint bc mods; - re-adding avg outlet pressure (static pressure adjoint); - re-adding avg outlet pressure (static pressure adjoint); - Merge branch 'temp' of https://github.com/hlkline/SU2 into temp; - continued fixing; - average total pressure and fixes to avg outlet pressure; - adding stagnation pressure output to SU2_DOT; - Merge pull request #146 from hlkline/temp; - Updated Entropy fix (now it is active).; - Another change in BC_Engine_Exhaust; - Updated CGNS in parallel; - Added runtime file; - Small typo; - Adjustment of the Entropy fix coefficient; - Bug in SU2_GEO; - Debug version with print statements.; - Updated release 3.2.7.1; - Small change; - Updated config file; - Code update; - MPI Status and Request fix.; - Another MPI Status/Request fix.; - Actuator disk update.; - Small update; - Initial implementation of pyramids and prisms for Tecplot binary.; - Small fix for Tecplot binaries. Closes #56. Closes #57.; - Removed extra allocation related to markers during partitioning.; - Non-working version; - Small update; - Updated memory deallocation.; - Merge branch 'feature_MarkerMax' into develop; - Time and date in the header.; - Small fix to the latest commit.; - Simplification of entropy correction; - Critical stability improvement.; - Minor release 3.2.7.2; - Fixing issues to run with the latest intel compiler; - Fix for Tecplot binary solutions for unsteady flows. Fixes #150.; - Now SU2 should work with the latest version of the Intel compiler.; - Merge branch 'develop' of https://github.com/su2code/SU2 into develop; - Working on the O3 stuff; - Small change.; - Add another check to improve stability.; - Collection of improvements.; - Updated ac",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/174#issuecomment-101443812:4098,Update,Updated,4098,https://su2code.github.io,https://github.com/su2code/SU2/pull/174#issuecomment-101443812,3,"['Update', 'update']","['Updated', 'update']"
Deployability,"c3b7d2c0c86f1ccaba""><code>c26a7ba</code></a> Bump ajv from 6.11.0 to 6.12.6</li>; <li><a href=""https://github.com/actions/upload-artifact/commit/6ed6c729229a623bcb1fdd75903dc6e436b3d0a7""><code>6ed6c72</code></a> Merge pull request <a href=""https://github-redirect.dependabot.com/actions/upload-artifact/issues/303"">#303</a> from actions/dependabot/npm_and_yarn/yargs-parser-13.1.2</li>; <li><a href=""https://github.com/actions/upload-artifact/commit/2aeee267b2cb1f938c861a763b9770ee6e921dc3""><code>2aeee26</code></a> Bump yargs-parser from 13.1.1 to 13.1.2</li>; <li>Additional commits viewable in <a href=""https://github.com/actions/upload-artifact/compare/v1...v3"">compare view</a></li>; </ul>; </details>; <br />. [![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=actions/upload-artifact&package-manager=github_actions&previous-version=1&new-version=3)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores). Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`. [//]: # (dependabot-automerge-start); [//]: # (dependabot-automerge-end). ---. <details>; <summary>Dependabot commands and options</summary>; <br />. You can trigger Dependabot actions by commenting on this PR:; - `@dependabot rebase` will rebase this PR; - `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it; - `@dependabot merge` will merge this PR after your CI passes on it; - `@dependabot squash and merge` will squash and merge this PR after your CI passes on it; - `@dependabot cancel merge` will cancel a previously requested merge and block automerging; - `@dependabot reopen` will reopen this PR if it is closed; - `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by c",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1756:5149,update,updates,5149,https://su2code.github.io,https://github.com/su2code/SU2/pull/1756,1,['update'],['updates']
Deployability,"c` we resolve 4/8 row/column pairs into 1D indexes, while this calculation is vectorized, it seems to be less optimizable by compilers, for example this; ```c++; for(size_t iDim=0; iDim<nDim; ++iDim); phiL += grad.getVec(iPoint,iVar,iDim)*d_ij[iDim];; ```; gets compiled into this monstrosity; ```asm; .L13:; vpmuludq ymm0, ymm4, ymm1; vmovq xmm15, rax; vmovapd ymm6, ymm11; mov rdx, rax; vpbroadcastq ymm15, xmm15; sal rdx, 5; add rax, 1; vpaddq ymm0, ymm0, ymm2; vpsllq ymm0, ymm0, 32; vpaddq ymm0, ymm5, ymm0; vmovdqa YMMWORD PTR [rbp-240], ymm0; vpaddq ymm0, ymm3, ymm0; vmovdqa YMMWORD PTR [rbp-208], ymm0; vpaddq ymm0, ymm15, ymm0; vmovdqa YMMWORD PTR [rbp-176], ymm0; vgatherqpd ymm15, QWORD PTR [rdi+ymm0*8], ymm6; vmovapd ymm0, YMMWORD PTR [rsi+rdx]; vfmadd213pd ymm0, ymm15, YMMWORD PTR [rbp-336]; vmovapd YMMWORD PTR [rbp-336], ymm0; cmp rbx, rax; jne .L13; ```; the meat of which is `vgatherqpd` (`getVec`) and `vfmadd213pd` fused-multiply-add to update `phiL`, everything else is integer arithmetic which in the scalar version gets factored out of the inner loop so that the resulting assembly looks much simpler:; ```asm; .L15:; vmovsd xmm5, QWORD PTR [rsp-40+rax*8]; vfmadd231sd xmm0, xmm5, QWORD PTR [r15+rax*8]; add rax, 1; cmp rcx, rax; jne .L15; ```; I think the reason for this is that there are plenty of integer registers (64bit) to keep memory locations (rsp, rax, r15 in the above) but there are only 16 ymm registers (256bit). In any case we need to give the compiler a hand, the calculation we need is; `index = iPoint*nVar*nDim + iVar*nDim + iDim` where iPoint is an array of ints; Note that as we loop by nDim and then by nVar all we need is to compute `iPoint*nVar*nDim` outside the loops and then add 1 on each access (which is more or less what the compiler does for the scalar code), in other words we need an **iterator**, something silly like; ```c++; template<size_t VecLen, size_t Incr = VecLen>; class GatherIterator; {; private:; using IntVec = Array<size_t,VecLe",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/789#issuecomment-535977206:10097,update,update,10097,https://su2code.github.io,https://github.com/su2code/SU2/issues/789#issuecomment-535977206,2,['update'],['update']
Deployability,"ca_coll_hcoll_allreduce (); from /share/hpc_apps/openmpi/3.1.6/gnu/5.3.0/lib/openmpi/mca_coll_hcoll.so; #3 0x00002aaaaad2c20f in PMPI_Allreduce (); from /share/hpc_apps/openmpi/3.1.6/gnu/5.3.0/lib/libmpi.so.40; #4 0x000000000048a83f in CBaseMPIWrapper::Allreduce (sendbuf=0x7fffffff8a20, ; recvbuf=0x1646158 <double CSysVector<double>::dot<CSysVector<double> >(VecExpr::CVecExpr<CSysVector<double>, double> const&) const::dotRes>, count=1, ; datatype=0x2aaaaafb4de0 <ompi_mpi_double>, ; op=0x2aaaaafc9920 <ompi_mpi_op_sum>, ; comm=0x2aaaaafbbc60 <ompi_mpi_comm_world>); at ../SU2_CFD/src/drivers/../../include/drivers/../../../Common/include/parallelization/mpi_structure.hpp:205; #5 0x00000000004b0ef3 in CSysVector<double>::dot<CSysVector<double> > (; this=0x23a20d0, expr=...); at ../SU2_CFD/src/integration/../../include/integration/../solvers/../../../Common/include/linear_algebra/CSysVector.hpp:317; #6 0x00000000004b0dcf in CSysVector<double>::squaredNorm (this=0x23a20d0); at ../SU2_CFD/src/integration/../../include/integration/../solvers/../../../Common/include/linear_algebra/CSysVector.hpp:331; ---Type <return> to continue, or q <return> to quit---; #7 0x00000000004b0cf0 in CSysVector<double>::norm (this=0x23a20d0); at ../SU2_CFD/src/integration/../../include/integration/../solvers/../../../Common/include/linear_algebra/CSysVector.hpp:337; #8 0x0000000000da260b in CSysSolve<double>::BCGSTAB_LinSolver (; this=0x23a2240, b=..., x=..., mat_vec=..., precond=..., ; tol=1.0000000000000001e-15, m=20, residual=@0x7fffffff8fb8: 0, ; monitoring=false, config=0x209bc10); at ../Common/src/linear_algebra/CSysSolve.cpp:553; #9 0x0000000000da404a in CSysSolve<double>::Solve (this=0x23a2240, ; Jacobian=..., LinSysRes=..., LinSysSol=..., geometry=0x2105400, ; config=0x209bc10) at ../Common/src/linear_algebra/CSysSolve.cpp:883; #10 0x00000000007b69da in CHeatSolver::ImplicitEuler_Iteration (; this=0x23a1de0, geometry=0x2105400, solver_container=0x23a1d70, ; config=0x209bc10) at ../SU2_CF",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1241:5532,integrat,integration,5532,https://su2code.github.io,https://github.com/su2code/SU2/issues/1241,1,['integrat'],['integration']
Deployability,cannot find cngstypes.h and cngsconfig.h files during installation,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1629:54,install,installation,54,https://su2code.github.io,https://github.com/su2code/SU2/issues/1629,1,['install'],['installation']
Deployability,"ce some structural changes are made which could potentially effect things outside the regression tests, and I want to make it easier for code review.; > ; > In this pull request, the ability to run multiple objectives is added to the python tools and to the config options. Within the CFD and adjoint solvers, the only major change is in the data structure containing the objectives - it now can hold a list of objectives, but when the adjoint solver is run only one objective is included. Later pull requests are planned to include the ability to run a single adjoint solution for a sum of objectives defined on different markers.; > ; > You can view, comment on, or merge this pull request online at:; > ; > https://github.com/su2code/SU2/pull/237 https://github.com/su2code/SU2/pull/237; > Commit Summary; > ; > config options updated to be compatible with multiple objectives - mdo not yet implemented; > python tools; > python adjusted for multiple objectives: will always run 1st objective only with continuous adjoint, but will run separate continuous adjoint evaluations within optimization; > continuous adjoint evaluates the requested objectives; > fixing some errors; > File Changes; > ; > M Common/include/config_structure.hpp https://github.com/su2code/SU2/pull/237/files#diff-0 (20); > M Common/include/config_structure.inl https://github.com/su2code/SU2/pull/237/files#diff-1 (6); > M Common/src/config_structure.cpp https://github.com/su2code/SU2/pull/237/files#diff-2 (90); > M SU2_PY/SU2/eval/design.py https://github.com/su2code/SU2/pull/237/files#diff-3 (8); > M SU2_PY/SU2/eval/functions.py https://github.com/su2code/SU2/pull/237/files#diff-4 (14); > M SU2_PY/SU2/eval/gradients.py https://github.com/su2code/SU2/pull/237/files#diff-5 (4); > M SU2_PY/SU2/io/config.py https://github.com/su2code/SU2/pull/237/files#diff-6 (21); > M SU2_PY/SU2/io/tools.py https://github.com/su2code/SU2/pull/237/files#diff-7 (21); > M SU2_PY/SU2/opt/project.py https://github.com/su2code/SU2/pull",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/237#issuecomment-182175757:1319,update,updated,1319,https://su2code.github.io,https://github.com/su2code/SU2/pull/237#issuecomment-182175757,4,"['continuous', 'update']","['continuous', 'updated']"
Deployability,ceData.h (135) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeStrXML/rtCaepSupportData.h (89) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeStrXML/rtPwpInitItems.h (68) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeStrXML/rtPwpPluginInfo.h (75) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeStrXML/rtPwpVersions.h (62) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeStrXML/runtimeWrite.c (443) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsSU2/CaeUnsSU2.sdf (0) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsSU2/CaeUnsSU2.sln (26) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsSU2/CaeUnsSU2.suo (0) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsSU2/CaeUnsSU2.vcproj (511) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsSU2/CaeUnsSU2.vcxproj (307) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsSU2/CaeUnsSU2.vcxproj.filters (78) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsSU2/CaeUnsSU2.vcxproj.user (3) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsSU2/UpgradeLog.XML (47) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsSU2/_UpgradeReport_Files/UpgradeReport.css (207) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsSU2/_UpgradeReport_Files/UpgradeReport.xslt (232) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsSU2/_UpgradeReport_Files/UpgradeReport_Minus.gif (0) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsSU2/_UpgradeReport_Files/UpgradeReport_Plus.gif (0) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsSU2/module.mk (240) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsSU2/modulelocal-sample.mk (84) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsSU2/rtCaepInitItems.h (142) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsSU2/rtCaepInstanceData.h (135) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsSU2/rtCaepSupportData.h (83) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsSU2/rtPwpInitItems.h (68) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsS,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/174#issuecomment-101443812:15579,Upgrade,UpgradeLog,15579,https://su2code.github.io,https://github.com/su2code/SU2/pull/174#issuecomment-101443812,1,['Upgrade'],['UpgradeLog']
Deployability,che variables. ##; ## ---------------- ##. ac_cv_build=x86_64-unknown-linux-gnu; ac_cv_c_compiler_gnu=yes; ac_cv_cxx_compiler_gnu=yes; ac_cv_env_CCC_set=; ac_cv_env_CCC_value=; ac_cv_env_CC_set=; ac_cv_env_CC_value=; ac_cv_env_CFLAGS_set=; ac_cv_env_CFLAGS_value=; ac_cv_env_CPPFLAGS_set=; ac_cv_env_CPPFLAGS_value=; ac_cv_env_CPP_set=; ac_cv_env_CPP_value=; ac_cv_env_CXXFLAGS_set=; ac_cv_env_CXXFLAGS_value=; ac_cv_env_CXX_set=; ac_cv_env_CXX_value=; ac_cv_env_LDFLAGS_set=; ac_cv_env_LDFLAGS_value=; ac_cv_env_LIBS_set=; ac_cv_env_LIBS_value=; ac_cv_env_build_alias_set=; ac_cv_env_build_alias_value=; ac_cv_env_host_alias_set=; ac_cv_env_host_alias_value=; ac_cv_env_target_alias_set=; ac_cv_env_target_alias_value=; ac_cv_file__gshare_soft_code_saturne_4_0_0_prod_cgnslib_3_2_1_include_cgnslib_h=yes; ac_cv_file__gshare_soft_code_saturne_4_0_0_prod_cgnslib_3_2_1_lib_libcgns_a=yes; ac_cv_header_X11_Intrinsic_h=no; ac_cv_header_inttypes_h=yes; ac_cv_header_memory_h=yes; ac_cv_header_stdc=yes; ac_cv_header_stdint_h=yes; ac_cv_header_stdlib_h=yes; ac_cv_header_string_h=yes; ac_cv_header_strings_h=yes; ac_cv_header_sys_stat_h=yes; ac_cv_header_sys_types_h=yes; ac_cv_header_unistd_h=yes; ac_cv_host=x86_64-unknown-linux-gnu; ac_cv_objext=o; ac_cv_path_EGREP='/bin/grep -E'; ac_cv_path_GREP=/bin/grep; ac_cv_path_install='/usr/bin/install -c'; ac_cv_path_mkdir=/bin/mkdir; ac_cv_prog_AWK=gawk; ac_cv_prog_CPP='gcc -E'; ac_cv_prog_ac_ct_CC=gcc; ac_cv_prog_ac_ct_CXX=g++; ac_cv_prog_ac_ct_RANLIB=ranlib; ac_cv_prog_cc_c89=; ac_cv_prog_cc_g=yes; ac_cv_prog_cc_gcc_c_o=yes; ac_cv_prog_cxx_g=yes; ac_cv_prog_make_make_set=yes; ac_cv_sizeof_double=8; ac_cv_sizeof_float=4; ac_cv_sizeof_int=4; ac_cv_sizeof_long_int=8; ac_cv_sizeof_short_int=2; ac_cv_sizeof_unsigned_int=4; ac_cv_sizeof_void_p=8; ac_cv_target=x86_64-unknown-linux-gnu; am_cv_CC_dependencies_compiler_type=gcc3; am_cv_CXX_dependencies_compiler_type=gcc3; am_cv_make_support_nested_variables=yes. ## ----------------- ##; ## Output variab,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/250#issuecomment-205167006:20866,install,install,20866,https://su2code.github.io,https://github.com/su2code/SU2/issues/250#issuecomment-205167006,2,['install'],['install']
Deployability,ckages/SU2_INSTALL_NEW/bin/SU2/run; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/run/geometry.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/run; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/run/projection.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/run; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/run/__init__.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/run; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/util/bunch.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/util; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/util/filter_adjoint.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/util; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/util/lhc_unif.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/util; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/util/misc.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/util; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/util/mp_eval.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/util; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/util/ordered_bunch.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/util; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/util/ordered_dict.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/util; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/util/plot.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/util; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/util/polarSweepLib.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/util; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/util/which.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/util; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/util/switch.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/util; Installing /home/slimshady/UserPac,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/991#issuecomment-632032044:8131,Install,Installing,8131,https://su2code.github.io,https://github.com/su2code/SU2/issues/991#issuecomment-632032044,1,['Install'],['Installing']
Deployability,ckages/SU2_INSTALL_NEW/bin/SU2/util; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/util/plot.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/util; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/util/polarSweepLib.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/util; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/util/which.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/util; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/util/switch.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/util; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/util/__init__.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/util; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/FSI/__init__.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/FSI; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/FSI/FSIInterface.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/FSI; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/FSI/PitchPlungeAirfoilStructuralTester.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/FSI; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/FSI/io/__init__.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/FSI; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/FSI/io/FSI_config.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/FSI; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/FSI/util/__init__.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/FSI; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/FSI/util/switch.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/FSI; Running custom install script '/bin/sh /home/slimshady/UserPackages/SU2_NEW/SU2_PY/pySU2/install.sh /home/slimshady/UserPackages/SU2_NEW/build/SU2_PY/pySU2 pysu2.py'; Running custom install script '/bin/sh /home/slimshady/UserPackages/SU2_NEW/SU2_PY/pySU2/install.sh /home/slimshady/UserPackages/SU2_NEW/build/SU2_PY/pySU2 pysu2ad.py';,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/991#issuecomment-632032044:9499,Install,Installing,9499,https://su2code.github.io,https://github.com/su2code/SU2/issues/991#issuecomment-632032044,1,['Install'],['Installing']
Deployability,ckages/SU2_NEW/SU2_PY/shape_optimization.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/merge_solution.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/set_ffd_design_var.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/compute_polar.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/compute_multipoint.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/discrete_adjoint.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/direct_differentiation.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/fsi_computation.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2_CFD.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/__init__.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/eval/design.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/eval; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/eval/functions.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/eval; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/eval/gradients.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/eval; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/eval/__init__.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/eval; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/io/config.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/io; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/io/config_opti,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/991#issuecomment-632032044:3540,Install,Installing,3540,https://su2code.github.io,https://github.com/su2code/SU2/issues/991#issuecomment-632032044,1,['Install'],['Installing']
Deployability,"code></a> made their first contribution in <a href=""https://redirect.github.com/actions/checkout/pull/1436"">actions/checkout#1436</a></li>; <li><a href=""https://github.com/simonbaird""><code>@​simonbaird</code></a> made their first contribution in <a href=""https://redirect.github.com/actions/checkout/pull/1067"">actions/checkout#1067</a></li>; </ul>; <p><strong>Full Changelog</strong>: <a href=""https://github.com/actions/checkout/compare/v3...v4.0.0"">https://github.com/actions/checkout/compare/v3...v4.0.0</a></p>; <h2>v3.6.0</h2>; <h2>What's Changed</h2>; <ul>; <li>Mark test scripts with Bash'isms to be run via Bash by <a href=""https://github.com/dscho""><code>@​dscho</code></a> in <a href=""https://redirect.github.com/actions/checkout/pull/1377"">actions/checkout#1377</a></li>; <li>Add option to fetch tags even if fetch-depth &gt; 0 by <a href=""https://github.com/RobertWieczoreck""><code>@​RobertWieczoreck</code></a> in <a href=""https://redirect.github.com/actions/checkout/pull/579"">actions/checkout#579</a></li>; <li>Release 3.6.0 by <a href=""https://github.com/luketomlinson""><code>@​luketomlinson</code></a> in <a href=""https://redirect.github.com/actions/checkout/pull/1437"">actions/checkout#1437</a></li>; </ul>; <h2>New Contributors</h2>; <ul>; <li><a href=""https://github.com/RobertWieczoreck""><code>@​RobertWieczoreck</code></a> made their first contribution in <a href=""https://redirect.github.com/actions/checkout/pull/579"">actions/checkout#579</a></li>; <li><a href=""https://github.com/luketomlinson""><code>@​luketomlinson</code></a> made their first contribution in <a href=""https://redirect.github.com/actions/checkout/pull/1437"">actions/checkout#1437</a></li>; </ul>; <p><strong>Full Changelog</strong>: <a href=""https://github.com/actions/checkout/compare/v3.5.3...v3.6.0"">https://github.com/actions/checkout/compare/v3.5.3...v3.6.0</a></p>; <h2>v3.5.3</h2>; <h2>What's Changed</h2>; <ul>; <li>Fix: Checkout Issue in self hosted runner due to faulty submodule check-ins by <a",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2126:2034,Release,Release,2034,https://su2code.github.io,https://github.com/su2code/SU2/pull/2126,2,['Release'],['Release']
Deployability,"codeql-cli/v2.16.2/ruby/ql/src"">source</a>)</li>; <li><code>codeql/ruby-all</code> (<a href=""https://github.com/github/codeql/tree/codeql-cli/v2.16.2/ruby/ql/lib/CHANGELOG.md"">changelog</a>, <a href=""https://github.com/github/codeql/tree/codeql-cli/v2.16.2/ruby/ql/lib"">source</a>)</li>; <li><code>codeql/swift-queries</code> (<a href=""https://github.com/github/codeql/tree/codeql-cli/v2.16.2/swift/ql/src/CHANGELOG.md"">changelog</a>, <a href=""https://github.com/github/codeql/tree/codeql-cli/v2.16.2/swift/ql/src"">source</a>)</li>; <li><code>codeql/swift-all</code> (<a href=""https://github.com/github/codeql/tree/codeql-cli/v2.16.2/swift/ql/lib/CHANGELOG.md"">changelog</a>, <a href=""https://github.com/github/codeql/tree/codeql-cli/v2.16.2/swift/ql/lib"">source</a>)</li>; </ul>; <h2>CodeQL Bundle v2.16.1</h2>; <p>Bundles CodeQL CLI v2.16.1</p>; <ul>; <li>(<a href=""https://github.com/github/codeql-cli-binaries/blob/HEAD/CHANGELOG.md"">changelog</a>, <a href=""https://github.com/github/codeql-cli-binaries/releases/tag/v2.16.1"">release</a>)</li>; </ul>; <p>Includes the following CodeQL language packs from <a href=""https://github.com/github/codeql/tree/codeql-cli/v2.16.1""><code>github/codeql@codeql-cli/v2.16.1</code></a>:</p>; <ul>; <li><code>codeql/cpp-queries</code> (<a href=""https://github.com/github/codeql/tree/codeql-cli/v2.16.1/cpp/ql/src/CHANGELOG.md"">changelog</a>, <a href=""https://github.com/github/codeql/tree/codeql-cli/v2.16.1/cpp/ql/src"">source</a>)</li>; </ul>; <!-- raw HTML omitted -->; </blockquote>; <p>... (truncated)</p>; </details>; <details>; <summary>Changelog</summary>; <p><em>Sourced from <a href=""https://github.com/github/codeql-action/blob/main/CHANGELOG.md"">github/codeql-action's changelog</a>.</em></p>; <blockquote>; <h2>3.24.6 - 29 Feb 2024</h2>; <p>No user facing changes.</p>; <h2>3.24.5 - 23 Feb 2024</h2>; <ul>; <li>Update default CodeQL bundle version to 2.16.3. <a href=""https://redirect.github.com/github/codeql-action/pull/2156"">#2156</a></li>; </ul>;",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2229:9200,release,releases,9200,https://su2code.github.io,https://github.com/su2code/SU2/pull/2229,1,['release'],['releases']
Deployability,"codeql-cli/v2.16.3/ruby/ql/src"">source</a>)</li>; <li><code>codeql/ruby-all</code> (<a href=""https://github.com/github/codeql/tree/codeql-cli/v2.16.3/ruby/ql/lib/CHANGELOG.md"">changelog</a>, <a href=""https://github.com/github/codeql/tree/codeql-cli/v2.16.3/ruby/ql/lib"">source</a>)</li>; <li><code>codeql/swift-queries</code> (<a href=""https://github.com/github/codeql/tree/codeql-cli/v2.16.3/swift/ql/src/CHANGELOG.md"">changelog</a>, <a href=""https://github.com/github/codeql/tree/codeql-cli/v2.16.3/swift/ql/src"">source</a>)</li>; <li><code>codeql/swift-all</code> (<a href=""https://github.com/github/codeql/tree/codeql-cli/v2.16.3/swift/ql/lib/CHANGELOG.md"">changelog</a>, <a href=""https://github.com/github/codeql/tree/codeql-cli/v2.16.3/swift/ql/lib"">source</a>)</li>; </ul>; <h2>CodeQL Bundle v2.16.2</h2>; <p>Bundles CodeQL CLI v2.16.2</p>; <ul>; <li>(<a href=""https://github.com/github/codeql-cli-binaries/blob/HEAD/CHANGELOG.md"">changelog</a>, <a href=""https://github.com/github/codeql-cli-binaries/releases/tag/v2.16.2"">release</a>)</li>; </ul>; <p>Includes the following CodeQL language packs from <a href=""https://github.com/github/codeql/tree/codeql-cli/v2.16.2""><code>github/codeql@codeql-cli/v2.16.2</code></a>:</p>; <ul>; <li><code>codeql/cpp-queries</code> (<a href=""https://github.com/github/codeql/tree/codeql-cli/v2.16.2/cpp/ql/src/CHANGELOG.md"">changelog</a>, <a href=""https://github.com/github/codeql/tree/codeql-cli/v2.16.2/cpp/ql/src"">source</a>)</li>; <li><code>codeql/cpp-all</code> (<a href=""https://github.com/github/codeql/tree/codeql-cli/v2.16.2/cpp/ql/lib/CHANGELOG.md"">changelog</a>, <a href=""https://github.com/github/codeql/tree/codeql-cli/v2.16.2/cpp/ql/lib"">source</a>)</li>; <li><code>codeql/csharp-queries</code> (<a href=""https://github.com/github/codeql/tree/codeql-cli/v2.16.2/csharp/ql/src/CHANGELOG.md"">changelog</a>, <a href=""https://github.com/github/codeql/tree/codeql-cli/v2.16.2/csharp/ql/src"">source</a>)</li>; <li><code>codeql/csharp-all</code> (<a hr",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2229:4848,release,releases,4848,https://su2code.github.io,https://github.com/su2code/SU2/pull/2229,1,['release'],['releases']
Deployability,"cogs.com/gif.latex?%5Ctau_w%3Dc_f%5Cfrac%7B1%7D%7B2%7D%5Crho%20V_%5Cinfty%5E2).; We found this possible problem while doing a run on a NACA0012 airfoil.; The problem found is that the skin friction coefficient along the airfoil is too high compared to the theory.; The grid has 257 nodes on the airfoil, and it has been downloaded from the NASA website (https://turbmodels.larc.nasa.gov/naca0012_grids.html).; The solved equations are the RANS with the SST turbulence model, in compressible regime. M=0.1, Re=1e6, TU=10%, mut/mu=0.001; The run is dimensional.; ![ImmaginiSU2-1](https://user-images.githubusercontent.com/53580993/96976601-5688b700-151c-11eb-8a72-ed0e0ff340dc.png); In this figure ""Rough Wall 1"" is the case of tau wall computed with the current version.; ""Rough Wall 2"" is the case of tau wall computed after this modification.; The chosen k+ is 4 because, considering the Wilcox paper ""Formulation of the k-w Turbulence Model Revisited, AIAA Journal, Vol. 46, No. 11, November 2008"", the smooth wall has k+ < 5.; Moreover, the order of magnitude of omega wall is O(1e9). In case of the ""Rough Wall 1"" it is of O(1e6), while in case of ""Rough Wall 2"" it is of O(1e9).; We don't know if the problem is somewhere else, but changing the computation of the tau wall it seems to be fixed.; We hope this could be useful. Authors: TAARG (Theoretical and Applied Aerodynamic Research Group), University of Naples Federico II.; Ettore Saetta, Lorenzo Russo, Renato Tognaccini, Benedetto Mele. ## Related Work; #877 . ## PR Checklist. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [x] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1097:2221,update,updated,2221,https://su2code.github.io,https://github.com/su2code/SU2/pull/1097,1,['update'],['updated']
Deployability,"com/actions/upload-artifact/issues/509"">#509</a> from markmssd/patch-1</li>; <li><a href=""https://github.com/actions/upload-artifact/commit/707f5a7b71e0fb01c5df1e16e9679a3292606ef2""><code>707f5a7</code></a> Update limitation of <code>10</code> artifacts upload to <code>500</code></li>; <li><a href=""https://github.com/actions/upload-artifact/commit/26f96dfa697d77e81fd5907df203aa23a56210a8""><code>26f96df</code></a> Merge pull request <a href=""https://redirect.github.com/actions/upload-artifact/issues/505"">#505</a> from actions/robherley/merge-artifacts</li>; <li>Additional commits viewable in <a href=""https://github.com/actions/upload-artifact/compare/v3...v4"">compare view</a></li>; </ul>; </details>; <br />. [![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=actions/upload-artifact&package-manager=github_actions&previous-version=3&new-version=4)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores). Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`. [//]: # (dependabot-automerge-start); [//]: # (dependabot-automerge-end). ---. <details>; <summary>Dependabot commands and options</summary>; <br />. You can trigger Dependabot actions by commenting on this PR:; - `@dependabot rebase` will rebase this PR; - `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it; - `@dependabot merge` will merge this PR after your CI passes on it; - `@dependabot squash and merge` will squash and merge this PR after your CI passes on it; - `@dependabot cancel merge` will cancel a previously requested merge and block automerging; - `@dependabot reopen` will reopen this PR if it is closed; - `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by c",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2231:6335,update,updates,6335,https://su2code.github.io,https://github.com/su2code/SU2/pull/2231,1,['update'],['updates']
Deployability,"compare view</a></li>; </ul>; </details>; <br />. [![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=actions/cache&package-manager=github_actions&previous-version=3&new-version=4)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores). Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`. [//]: # (dependabot-automerge-start); [//]: # (dependabot-automerge-end). ---. <details>; <summary>Dependabot commands and options</summary>; <br />. You can trigger Dependabot actions by commenting on this PR:; - `@dependabot rebase` will rebase this PR; - `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it; - `@dependabot merge` will merge this PR after your CI passes on it; - `@dependabot squash and merge` will squash and merge this PR after your CI passes on it; - `@dependabot cancel merge` will cancel a previously requested merge and block automerging; - `@dependabot reopen` will reopen this PR if it is closed; - `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually; - `@dependabot show <dependency name> ignore conditions` will show all of the ignore conditions of the specified dependency; - `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself); - `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself); - `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself). </details>",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2232:11385,upgrade,upgrade,11385,https://su2code.github.io,https://github.com/su2code/SU2/pull/2232,3,['upgrade'],['upgrade']
Deployability,"concise description of what the bug is and what you expect the behavior to be instead. If applicable, add screenshots to help explain your problem.*. Hi,. I am currently using SU2 to do some test cases for AIAA 1st Stability and Control Workshop. These cases need to run with a fixed-Cl as the DPW6 cases did. When I tried to use the knobs “FIXED_CL_MODE= YES” and “TARGET_CL= 0.50” in the .cfg input file to run these cases, the Cl change always got some odd significant jumps even though the AoA change was quite small and then the computations diverged after a while. . I am not sure if I used a correct way for the fixed-Cl computations (no optimization and design needed). I know some reported research did use SU2 for DPW6 cases with fixed-Cls. . Thank you very much!. Wei. **To Reproduce**; *Please provide a config file and mesh for a minimal example that recreates the problem.*. %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%; % %; % SU2 configuration file %; % Case description: CRM model for S&C workshop %; % Author: %; % Institution: %; % Date: %; % File Version 7.1.1 ""Blackbird"" %; % %; %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%. % ------------- DIRECT, ADJOINT, AND LINEARIZED PROBLEM DEFINITION ------------%; %; % Physical governing equations (EULER, NAVIER_STOKES,RANS,; % WAVE_EQUATION, HEAT_EQUATION, FEM_ELASTICITY,; % POISSON_EQUATION) ; SOLVER= RANS; %; % Specify turbulence model (NONE, SA, SA_NEG, SST); KIND_TURB_MODEL= SST; %; % Mathematical problem (DIRECT, CONTINUOUS_ADJOINT, DISCRETE_ADJOINT); MATH_PROBLEM= DIRECT; %; % Restart solution (NO, YES); RESTART_SOL= YES; %; % System of measurements (SI, US); % International system of units (SI): ( meters, kilograms, Kelvins,; % Newtons = kg m/s^2, Pascals = N/m^2, ; % Density = kg/m^3, Speed = m/s,; % Equiv. Area = m^2 ); % United States customary units (US): ( inches, slug, Rankines, lbf = slug ft/s^2, ; % psf = lbf/ft^2, Density = slug/ft^3,",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1297:1017,configurat,configuration,1017,https://su2code.github.io,https://github.com/su2code/SU2/issues/1297,1,['configurat'],['configuration']
Deployability,"copy_expand_ref(udata->file_src, udata->tid_src, udata->dt_src, buf, nbytes,; ~~~~~^~~~~~~~; In file included from ../externals/cgns/hdf5/H5Dprivate.h:25,; from ../externals/cgns/hdf5/H5Dpkg.h:30,; from ../externals/cgns/hdf5/H5Dchunk.c:55:; ../externals/cgns/hdf5/H5Oprivate.h:997:74: note: expected 'H5T_t *' {aka 'struct H5T_t *'} but argument is of type 'const H5T_t *' {aka 'const struct H5T_t *'}; H5_DLL herr_t H5O_copy_expand_ref(H5F_t *file_src, hid_t tid_src, H5T_t *dt_src, void *buf_src,; ~~~~~~~^~~~~~; [50/903] Compiling C object externals/cgns/hdf5/libsu2hdf5.a.p/H5C.c.obj; ninja: build stopped: subcommand failed.; PS C:\su2code-SU2-09ba9e3> python ninja.exe -C C:\su2code-SU2-09ba9e3\build install; SyntaxError: Non-UTF-8 code starting with '\x90' in file C:\su2code-SU2-09ba9e3\ninja.exe on line 1, but no encoding declared; see https://peps.python.org/pep-0263/ for details; PS C:\su2code-SU2-09ba9e3> python ninja.exe -C C:\su2code-SU2-09ba9e3\build install; SyntaxError: Non-UTF-8 code starting with '\x90' in file C:\su2code-SU2-09ba9e3\ninja.exe on line 1, but no encoding declared; see https://peps.python.org/pep-0263/ for details; PS C:\su2code-SU2-09ba9e3> ninja.exe -C C:\su2code-SU2-09ba9e3\build install; ninja: Entering directory `C:\su2code-SU2-09ba9e3\build'; [1/854] Linking target externals/cgns/hdf5/H5make_libsettings.exe; FAILED: externals/cgns/hdf5/H5make_libsettings.exe; ""gcc"" -o externals/cgns/hdf5/H5make_libsettings.exe externals/cgns/hdf5/H5make_libsettings.exe.p/H5make_libsettings.c.obj ""-Wl,--allow-shlib-undefined"" ""-Wl,-O1"" ""-Wl,--start-group"" ""-lz"" ""-lC:\Program Files (x86)\Microsoft SDKs\MPI\Lib\x64\msmpi"" ""-Wl,--subsystem,console"" ""-lkernel32"" ""-luser32"" ""-lgdi32"" ""-lwinspool"" ""-lshell32"" ""-lole32"" ""-loleaut32"" ""-luuid"" ""-lcomdlg32"" ""-ladvapi32"" ""-Wl,--end-group""; C:/mingw64/bin/../lib/gcc/x86_64-w64-mingw32/8.1.0/../../../../x86_64-w64-mingw32/bin/ld.exe: cannot find -lC:\Program Files (x86)\Microsoft SDKs\MPI\Lib\x64\msmpi; collect2.exe:",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1982:5075,install,install,5075,https://su2code.github.io,https://github.com/su2code/SU2/issues/1982,1,['install'],['install']
Deployability,"corresponding to different operating cases) can coupled with other solvers and tools, to perform coupled aero-structural shape optimisation. . The framework initialises MPI and assigns processors to the different solvers and tools as required. The SU2 instances are initialised and controlled through Python, and given a communicator for the relevant subset of the MPI processes. . **Issue**; Shape optimisation with SU2 (using discrete adjoints) require four operations at each major optimisation iteration:. 1. `SU2_DEF`: Deform the mesh according to the new design variables (or _design deformations_, in contrast to e.g. the _structural deformations_ in an aeroelastic analysis), and output the deformed mesh to file,; 2. `SU2_CFD`: Update the primal solution, which may include a mesh deformation due to structural deformations in an aeroelastic analysis, and output the converged state to file,; 3. `SU2_CFD_AD`: Update the discrete adjoint solution corresponding to the converged primal solution, once for each objective function of interest, and output the converged adjoints to file,; 4. `SU2_DOT_AD`: Calculate the surface sensititivities from the discrete adjoint solution (from what I can gather, this step is required in the discrete-adjoint sensitivity analysis to account for the in-direct influence surface deformations have on the objective through the volume deformation; essentially a differentiation of `SU2_DEF`), and output these to file. Currently, the SU2 Python wrapper exposes _driver_ classes which allow control of the execution of steps 2 and 3 described above, namely `CSinglezoneDriver` and `CDiscAdjSinglezonedriver` (among other variants). For steps 1 and 4 however, there is no such option: these steps must be executed by a ""command-line call"" in a newly spawned sub-process, as is done in the SU2 Python tools, in `SU2.run.DEF` and `SU2.run.DOT` respectively. However, spawning new -- parallel -- processes using `subprocess` from within an MPI environment is ""dan",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1262:1012,Update,Update,1012,https://su2code.github.io,https://github.com/su2code/SU2/issues/1262,1,['Update'],['Update']
Deployability,"ctivity[iEdge].first;; size_t jPoint = connectivity[iEdge].second;. matrix.updateBlocks(iEdge, iPoint, jPoint, blk_i, blk_j);; }; }; ```; where; ```c++; STRONGINLINE void SparseMatrix::updateBlocks(size_t edge,; size_t row, size_t col, const double* blk_i, const double* blk_j); {; size_t bii = diagMap[row], bij = edgeMap[edge].first,; bjj = diagMap[col], bji = edgeMap[edge].second;. #pragma omp simd; for(size_t k=0; k<blkSz; ++k); {; coeffs[bii+k] += blk_i[k]; coeffs[bij+k] = +blk_j[k];; coeffs[bji+k] = -blk_i[k]; coeffs[bjj+k] -= blk_j[k];; }; }; ```; This is **47% faster**, which for a memory bound task is massive!; Yes, this does increase the memory footprint a bit (makes CSysMatrix 4% larger for a 3D problem) but I can get that back by sharing sparsity patterns and maps across turbulence and bulk flow (I think @talbring was already working on this in the template linear solver branch he had started). We could also parallelize the matrix updates without colouring by setting only the off-diagonal coefficients and then setting the diagonal entries to the column sum.; It turns out that this is worse (by about 10%), maybe if the matrix were symmetric (row sum) but a column sum accesses blocks very far apart. Also we want to interleave compute and load/stores as much as possible to allow the CPU pipelining magic to mask the latency of the latter (even if it looks like you can only write the block after it is computed, CPU's have all kinds of buffers that allow the next loop iteration to begin while data is in flight). **Therefore colouring is the way to go.**. _Note: With vectorized numerics we insert blocks for 4 or 8 edges into the matrix at a time, the data for those inserts will be in a slightly weird format, which will make `SparseMatrix::updateBlocks` a bit harder on the eye, more on that later._. ## MUSCL Reconstruction; The MUSCL reconstruction, characteristic of upwind schemes, is the simplest building block to show the (negative) implications of storing the ",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/789#issuecomment-535977206:4710,update,updates,4710,https://su2code.github.io,https://github.com/su2code/SU2/issues/789#issuecomment-535977206,2,['update'],['updates']
Deployability,cuments\SU2\SU2_PY\merge_solution.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\set_ffd_design_var.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\compute_polar.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\compute_multipoint.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\discrete_adjoint.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\direct_differentiation.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\fsi_computation.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2_CFD.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/__init__.py to C:\bin\bin/SU2; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/eval/design.py to C:\bin\bin/SU2/eval; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/eval/functions.py to C:\bin\bin/SU2/eval; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/eval/gradients.py to C:\bin\bin/SU2/eval; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/eval/__init__.py to C:\bin\bin/SU2/eval; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/io/config.py to C:\bin\bin/SU2/io; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/io/config_options.py to C:\bin\bin/SU2/io; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/io/data.py to C:\bin\bin/SU2/io; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/io/filelock.py to C:\bin\bin/SU2/io; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/io/redirect.py to C:\bin\bin/SU2/io; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/io/state.py to C:\bin\bin/SU2/io; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/io/tools.py to C:\bin\bin/SU2/io; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/io/historyMap.py to C:\bin\bin/SU2/io; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/io/__init__.py to C:\bin\bin/SU2/io; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/opt/project.py to C:\bin\bin/SU2/opt; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1376:5426,Install,Installing,5426,https://su2code.github.io,https://github.com/su2code/SU2/issues/1376,1,['Install'],['Installing']
Deployability,"d 2.27-27; C++ compiler for the host machine: c++ (gcc 4.8.5 ""c++ (GCC) 4.8.5 20150623 (Red Hat 4.8.5-28)""); C++ linker for the host machine: c++ ld.bfd 2.27-27; Host machine cpu family: x86_64; Host machine cpu: x86_64; Program python3 found: YES (/home/FDa/FDa045/anaconda3/bin/python3); Found pkg-config: /usr/bin/pkg-config (0.27.1); mpicc found: YES (/work/A/openmpi/3.0.0_intel2018u2/bin/mpicc) 3.0.0; Run-time dependency MPI for c found: YES 3.0.0; mpic++ found: YES (/work/A/openmpi/3.0.0_intel2018u2/bin/mpic++) 3.0.0; Run-time dependency MPI for cpp found: YES 3.0.0; Message: Boost sources found.; Found CMake: /home/FDa/FDa045/programs/cmake/cmake-3.17.3/bin/cmake (3.17.3); Run-time dependency mkl-static-lp64-seq found: NO (tried pkgconfig and cmake); Program swig found: YES (/usr/bin/swig); Message: Using mpi4py from /home/FDa/FDa045/anaconda3/lib/python3.7/site-packages/mpi4py/include; Dependency python found: YES (pkgconfig); Program install.sh found: YES (/bin/sh /home/FDa/FDa045/programs/SU2/SU2_PY/pySU2/install.sh). **Next, I copied the 4-line output needed for .bashrc, and run ninja.**; `./ninja -j36 -C build install`. **Then, I got the following errors:**. > ninja: Entering directory `build'; [691/994] Compiling C++ object SU2_CFD/src/libSU2core_AD.a.p/solvers_CTurbSolver.cpp.o; FAILED: SU2_CFD/src/libSU2core_AD.a.p/solvers_CTurbSolver.cpp.o; c++ -ISU2_CFD/src/libSU2core_AD.a.p -ISU2_CFD/src -I../SU2_CFD/src -I../externals/CLI11 -I../externals/cgns/adf -Iexternals/cgns -I../externals/cgns -I../externals/metis/include -I../externals/metis/GKlib -I../externals/metis/libmetis -I../externals/parmetis/include -I../externals/parmetis/libparmetis -Iexternals/tecio -I../externals/tecio -Iexternals/tecio/teciompisrc -I../externals/tecio/teciompisrc -I/home/FDa/FDa045/programs/intel/2020_update4/mkl/include -I../externals/codi/include -I../externals/medi/include -I../externals/medi/src -ICommon/src -I../Common/src -I/work/A/openmpi/3.0.0_intel2018u2/include -pipe ",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1420:1724,install,install,1724,https://su2code.github.io,https://github.com/su2code/SU2/issues/1420,1,['install'],['install']
Deployability,"d <file>..."" to update what will be committed). (use ""git checkout -- <file>..."" to discard changes in working directory). modified: .travis.yml. no changes added to commit (use ""git add"" and/or ""git commit -a""). Jairos-Mac-mini:SU2 jaspe$ git commit -am ""This is an update of .travis.yml; for feature_force_read_target_on_AD."". [feature_force_read_target_on_AD 3f2115373] This is an update of; .travis.yml for feature_force_read_target_on_AD. 1 file changed, 2 insertions(+), 2 deletions(-); After that, I issued git push origin feature_force_read_target_on_AD, and; got the error message:. To https://github.com/su2code/SU2.git. ! [rejected] feature_force_read_target_on_AD ->; feature_force_read_target_on_AD (fetch first). error: failed to push some refs to 'https://github.com/su2code/SU2.git'. hint: Updates were rejected because the remote contains work that you do. hint: not have locally. This is usually caused by another repository pushing. hint: to the same ref. You may want to first integrate the remote changes. hint: (e.g., 'git pull ...') before pushing again. hint: See the 'Note about fast-forwards' in 'git push --help' for details.; I issued then git pull origin develop, to merge changes in remote to my; local branch, successfully , but a new git push origin; feature_force_read_target_on_AD, produced the same error message.; Would be the first commit command enough?. With kind regards,. Jairo. On Tue, Oct 30, 2018 at 7:25 PM Thomas D. Economon <notifications@github.com>; wrote:. > Hi @jaspe55 <https://github.com/jaspe55> - thanks for the first; > contribution!; >; > Can you please switch the email and branch name in .travis.yml back to; > su2code-dev@lists.stanford.edu and develop, respectively? That should get; > the tests running so we can give this a proper review (should be quick; > given the small change).; >; > —; > You are receiving this because you were mentioned.; > Reply to this email directly, view it on GitHub; > <https://github.com/su2code/SU2/pull/6",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/600#issuecomment-434929137:1229,integrat,integrate,1229,https://su2code.github.io,https://github.com/su2code/SU2/pull/600#issuecomment-434929137,1,['integrat'],['integrate']
Deployability,"d Ninja. They are pretty impressive. It looks like Meson uses both pkg-config and (more recently) CMake under the hood. For specific packages that don’t play nicely with pkg-config, it will look for other similar utilities, such as llvm-config for the LLVM library. I have a beef mostly with documentation, but that’s hardly unusual in the open source world, and maybe not so relevant to SU2, which doesn’t have the multitude of external dependencies that many open source projects do. I think the struggles I have had relate mostly to the non-transparent way that Meson interacts with the underlying utilities (pkg-config, CMake, llvm-config,…). For example, I had to fumble around to get Meson to find llvm-config in a non-standard location (adding that location to $PATH turned out to be the answer), as well as to get pkg-config to find its required pkgconfig directories in non-standard locations (adding them to $PKG_CONFIG_PATH was the answer there). I also had to build/install Python 3 (required by Meson), and found that the Python 3.7 has problems with OpenSSL (module _ssl), on which Meson depends, so I went back to Python 3.6. I imagine any pre-built Python 3.7 would be fine, though a related bug appears to still be open (https://bugs.python.org/issue34028). On Windows, Meson will output Visual Studio projects, which would make any Windows developer happy, but your source still has to be cross-platform friendly—not a problem for TecIO, but I don’t know if that’s true elsewhere in SU2. FWIW,. Dave. From: Tim Albring [mailto:notifications@github.com]; Sent: Wednesday, May 22, 2019 7:31 AM; To: su2code/SU2 <SU2@noreply.github.com>; Cc: Subscribed <subscribed@noreply.github.com>; Subject: Re: [su2code/SU2] Meson build system (#685). To see a major advantage, just compare the meson.build and the configure.ac file ... —; You are receiving this because you are subscribed to this thread.; Reply to this email directly, view it on GitHub<https://github.com/su2code/SU2/issues/685?e",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/685#issuecomment-494848848:1107,install,install,1107,https://su2code.github.io,https://github.com/su2code/SU2/issues/685#issuecomment-494848848,1,['install'],['install']
Deployability,"d `WALL_TIME` is supposed to hold the . > Current average wall-clock time for one iteration. as per the documentation and dry-run output. However, the screen and history outputs of this field do not seem to actually represent this value. The screen-output of the 0th inner iteration of each time-iteration seems to represent the accumulated WCT since the last output (or restart file) was written. What the screen- and history-output of other inner iterations within a timestep mean is not obvious. See attached discussion for more details. **Expected behaviour**; During transient simulations the `WALL_TIME` history output should either be the average WCT for one time-iteration or the accumulated WCT since simulation start.; The screen output of `WALL_TIME ` should either be the average WCT for a time-iteration ( thus the same for all inner iterations ) or (better) correctly compute the average WCT of one inner iteration. **To Reproduce**; See attached mesh and config, but any transient simulation with activated WALL_TIME and implicit time integration should do.; [MeshAndConfig.zip](https://github.com/su2code/SU2/files/8034224/MeshAndConfig.zip). **Desktop (please complete the following information):**; - OS: SLES 15; - C++ compiler and version: icpc (intel 19.0.5.281); - MPI implementation and version: intelMPI 2019; - SU2 Version: 7.3.0 (master/develop). <div type='discussions-op-text'>. <sup>Originally posted by **ChristianBauerEng** February 8, 2022</sup>; Hi All!. I'm currently running transient, 2D axisymmetric simulations of an oscillating resonator. For now I'm still in the validation and testing phase, but the results look promising!. However, I've noticed that solver performance (as in Time/Iteration) seems to degrade over runtime, so I wanted to measure that by including `WALL_TIME` in screen and history output. I still have trouble understanding the outputs, though. The screen output looks like this:. > +-------------------------------------; > | Time_Iter| Inn",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1542:1167,integrat,integration,1167,https://su2code.github.io,https://github.com/su2code/SU2/issues/1542,1,['integrat'],['integration']
Deployability,"d non-dimensionalization is more readible this way. Furthermore the convergence history uses the same table class. Let me know what you think. Any comments are appreciated. ```; ------------------------ Physical Case Definition -----------------------; Compressible RANS equations.; Turbulence model: Spalart Allmaras; Hybrid RANS/LES: No Hybrid RANS/LES; Mach number: 0.15.; Angle of attack (AoA): 10 deg, and angle of sideslip (AoS): 0 deg.; Reynolds number: 6e+06. Reference length 1.; No restart solution, use the values at infinity (freestream).; Non-Dimensional simulation (P=1.0, Rho=1.0, T=1.0 at the farfield).; The reference area is 1 m^2.; The semi-span will be computed using the max y(3D) value.; The reference length is 1 m.; Reference origin for moment evaluation is (0.25, 0, 0).; Surface(s) where the force coefficients are evaluated: airfoil. Surface(s) plotted in the output file: airfoil.; Input mesh file name: n0012_225-65.su2. ---------------------- Space Numerical Integration ----------------------; Roe (with entropy fix = 0.001) solver for the flow inviscid terms.; Standard Roe without low-dissipation function.; Second order integration in space, with slope limiter.; Venkatakrishnan slope-limiting method, with constant: 0.03. ; The reference element size is: 1. ; Scalar upwind solver for the turbulence model.; Second order integration in space with slope limiter.; No slope-limiting method. ; Average of gradients with correction (viscous flow terms).; Average of gradients with correction (viscous turbulence terms).; Gradient Computation using weighted Least-Squares method. ---------------------- Time Numerical Integration -----------------------; Local time stepping (steady state simulation).; Euler implicit method for the flow equations.; FGMRES is used for solving the linear system.; Using a LU-SGS preconditioning.; Convergence criteria of the linear solver: 1e-10.; Max number of linear iterations: 5.; V Multigrid Cycle, with 3 multigrid levels.; Damping",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/591:2244,Integrat,Integration,2244,https://su2code.github.io,https://github.com/su2code/SU2/issues/591,1,['Integrat'],['Integration']
Deployability,"d on GitHub.com; your repository will automatically benefit from the most recently released version. #### The analysis doesn’t seem to be working; If you get an error in GitHub Actions that indicates that CodeQL wasn’t able to analyze your code, please [follow the instructions here](https://docs.github.com/en/code-security/code-scanning/automatically-scanning-your-code-for-vulnerabilities-and-errors/troubleshooting-the-codeql-workflow) to debug the analysis. #### How do I disable LGTM.com?; If you have LGTM’s automatic pull request analysis enabled, then you can [follow these steps to disable the LGTM pull request analysis](https://lgtm.com/help/lgtm/managing-automated-code-review#disabling-pr-integration). You don’t actually need to remove your repository from LGTM.com; it will automatically be removed in the next few months as part of the deprecation of LGTM.com ([more info here](https://github.blog/2022-08-15-the-next-step-for-lgtm-com-github-code-scanning/)). #### Which source code hosting platforms does code scanning support?; GitHub code scanning is deeply integrated within GitHub itself. If you’d like to scan source code that is hosted elsewhere, we suggest that you create a mirror of that code on GitHub. #### How do I know this PR is legitimate?; This PR is filed by the official LGTM.com GitHub App, in line with the [deprecation timeline that was announced on the official GitHub Blog](https://github.blog/2022-08-15-the-next-step-for-lgtm-com-github-code-scanning/). The proposed GitHub Action workflow uses the [official open source GitHub CodeQL Action](https://github.com/github/codeql-action/). If you have any other questions or concerns, please join the discussion [here](https://github.com/orgs/community/discussions/29534) in the official GitHub community!. #### I have another question / how do I get in touch?; Please join the discussion [here](https://github.com/orgs/community/discussions/29534) to ask further questions and send us suggestions!. </details>",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1840:4391,integrat,integrated,4391,https://su2code.github.io,https://github.com/su2code/SU2/pull/1840,1,['integrat'],['integrated']
Deployability,"d pkgconfig and config-tool); mpic++ found: NO; Run-time dependency MPI for cpp found: NO (tried pkgconfig and config-tool); Program swig found: YES (C:\Softwares\swigwin-4.0.2\swig.EXE); Dependency python found: YES (sysconfig); Program install.sh found: YES (sh C:\Users\Danie\Documents\SU2\SU2_PY/pySU2\install.sh); Message: -------------------------------------------------------------------------; | ___ _ _ ___ |; | / __| | | |_ ) Release 7.2.0 ""Blackbird"" |; | \__ \ |_| |/ / |; | |___/\___//___| Meson Configuration Summary |; | |; -------------------------------------------------------------------------. Option Value; ---------------------; TecIO: false; CGNS: true; AD (reverse): true; AD (forward): true; Python Wrapper: true; Intel-MKL: false; OpenBlas: false; PaStiX: false; Mixed Float: false; libROM: false. Please be sure to add the $SU2_HOME and $SU2_RUN environment variables,; and update your $PATH (and $PYTHONPATH if applicable) with $SU2_RUN. Based on the input to this configuration, add these lines to your .bashrc file:. export SU2_RUN=C:\bin/bin; export SU2_HOME=C:\Users\Danie\Documents\SU2; export PATH=$PATH:$SU2_RUN; export PYTHONPATH=$PYTHONPATH:$SU2_RUN. Use './ninja -C C:\Users\Danie\Documents\SU2\build install' to compile and install SU2. Build targets in project: 17. Found ninja.exe-1.9.0 at C:\Users\Danie\Documents\SU2\ninja.exe`. **526 files install successfully.** . `WARNING: the currently checked out submodule commit in C:\Users\Danie\Documents\SU2\externals\opdi does not match the SHA-1 found in the index.; Use 'git submodule update --init C:\Users\Danie\Documents\SU2\externals\opdi' to reset the module if necessary.; SHA-1 tag stored in index does not match SHA tag stored in this script.; Installing SU2_CFD/src\SU2_CFD.exe to C:\bin\bin; Installing SU2_CFD/src\SU2_CFD_AD.exe to C:\bin\bin; Installing SU2_CFD/src\SU2_CFD_DIRECTDIFF.exe to C:\bin\bin; Installing SU2_DOT/src\SU2_DOT.exe to C:\bin\bin; Installing SU2_DOT/src\SU2_DOT_AD.exe to C:",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1376:2369,configurat,configuration,2369,https://su2code.github.io,https://github.com/su2code/SU2/issues/1376,1,['configurat'],['configuration']
Deployability,"d"">changelog</a>, <a href=""https://github.com/github/codeql/tree/codeql-cli/v2.16.1/cpp/ql/src"">source</a>)</li>; </ul>; <!-- raw HTML omitted -->; </blockquote>; <p>... (truncated)</p>; </details>; <details>; <summary>Changelog</summary>; <p><em>Sourced from <a href=""https://github.com/github/codeql-action/blob/main/CHANGELOG.md"">github/codeql-action's changelog</a>.</em></p>; <blockquote>; <h2>3.24.6 - 29 Feb 2024</h2>; <p>No user facing changes.</p>; <h2>3.24.5 - 23 Feb 2024</h2>; <ul>; <li>Update default CodeQL bundle version to 2.16.3. <a href=""https://redirect.github.com/github/codeql-action/pull/2156"">#2156</a></li>; </ul>; <h2>3.24.4 - 21 Feb 2024</h2>; <ul>; <li>Fix an issue where an existing, but empty, <code>/sys/fs/cgroup/cpuset.cpus</code> file always resulted in a single-threaded run. <a href=""https://redirect.github.com/github/codeql-action/pull/2151"">#2151</a></li>; </ul>; <h2>3.24.3 - 15 Feb 2024</h2>; <ul>; <li>Fix an issue where the CodeQL Action would fail to load a configuration specified by the <code>config</code> input to the <code>init</code> Action. <a href=""https://redirect.github.com/github/codeql-action/pull/2147"">#2147</a></li>; </ul>; <h2>3.24.2 - 15 Feb 2024</h2>; <ul>; <li>Enable improved multi-threaded performance on larger runners for GitHub Enterprise Server users. This feature is already available to GitHub.com users. <a href=""https://redirect.github.com/github/codeql-action/pull/2141"">#2141</a></li>; </ul>; <h2>3.24.1 - 13 Feb 2024</h2>; <ul>; <li>Update default CodeQL bundle version to 2.16.2. <a href=""https://redirect.github.com/github/codeql-action/pull/2124"">#2124</a></li>; <li>The CodeQL action no longer fails if it can't write to the telemetry api endpoint. <a href=""https://redirect.github.com/github/codeql-action/pull/2121"">#2121</a></li>; </ul>; <h2>3.24.0 - 02 Feb 2024</h2>; <ul>; <li>CodeQL Python analysis will no longer install dependencies on GitHub Enterprise Server, as is already the case for GitHub.com. See <a href=",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2229:10556,configurat,configuration,10556,https://su2code.github.io,https://github.com/su2code/SU2/pull/2229,1,['configurat'],['configuration']
Deployability,"d68184-2d20-4a93-abb2-0b6fd361846e); ![image](https://github.com/su2code/SU2/assets/50565314/57a76a0b-d8a2-4da7-b1e8-ddee848e7062); ![image](https://github.com/su2code/SU2/assets/50565314/afd310db-3aa2-48e3-813b-c20b198df8fe); ![image](https://github.com/su2code/SU2/assets/50565314/4863963a-533c-4e6b-8e45-c632e571704c). ## Validation Case. Validation analysis is conducted for the [hypersonic flat plate](https://turbmodels.larc.nasa.gov/ZPGflatplateSS_val.html). Two different wall temperature(T_w/T_free = 1.090 and T_w/T_free = 2.725) results are presented and compared with simulation results of ANSYS Fluent. . The CC of Fluent and Wilcox is almost same, but they have different coefficients(Wilcox : ![image](https://github.com/su2code/SU2/assets/50565314/a9e69d6e-7ad2-4752-8aa8-0dfe718306ce) / Fluent : ![image](https://github.com/su2code/SU2/assets/50565314/e2786d93-f933-424e-bd23-171ba1fa0347)). So, The results show a similar behavior to the Fluent results. ; ![image](https://github.com/su2code/SU2/assets/50565314/711274f0-ab32-4281-bc72-168445f24766); ![image](https://github.com/su2code/SU2/assets/50565314/9d8a39a2-423f-4ca1-b209-cbe613a9d76c). ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [x] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [x] I used the pre-commit hook to prevent dirty commits and used `pre-commit run --all` to format old commits.; - [x] I have added a test case that demonstrates my contribution, if necessary.; - [x] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2271:3687,update,updated,3687,https://su2code.github.io,https://github.com/su2code/SU2/pull/2271,1,['update'],['updated']
Deployability,"d` ant `ninja.exe build install` , but it can't compile with ` py .\meson.py build -Dwith-mpi=enabled`. the error message :; ```; Version: 0.61.1; Source dir: F:\suflow\code\Su-FVMu-Solver; Build dir: F:\suflow\code\Su-FVMu-Solver\build; Build type: native build; Project name: SU2; Project version: 7.5.1 ""Blackbird""; C compiler for the host machine: gcc (gcc 8.1.0 ""gcc.exe (x86_64-posix-seh-rev0, Built by MinGW-W64 project) 8.1.0""); C linker for the host machine: gcc ld.bfd 2.30; C++ compiler for the host machine: c++ (gcc 8.1.0 ""c++.exe (x86_64-posix-seh-rev0, Built by MinGW-W64 project) 8.1.0""); C++ linker for the host machine: c++ ld.bfd 2.30; Host machine cpu family: x86_64; Host machine cpu: x86_64; Program python3 found: YES (C:\Users\zeng\AppData\Local\Programs\Python\Python37\python.exe); WARNING: Python files installed by Meson might not be found by python interpreter.; This warning can be avoided by setting ""python.platlibdir"" option.; WARNING: Python files installed by Meson might not be found by python interpreter.; This warning can be avoided by setting ""python.purelibdir"" option.; Found pkg-config: C:\Program Files\mingw-w64\bin\pkg-config.EXE (0.26); mpicc found: NO; Run-time dependency MPI for c found: YES; mpic++ found: NO; Run-time dependency MPI for cpp found: NO (tried pkgconfig, config-tool and system). meson.build:61:2: ERROR: Dependency ""mpi"" not found, tried pkgconfig, config-tool and system. A full log can be found at F:\suflow\code\Su-FVMu-Solver\build\meson-logs\meson-log.txt; ```. meson-log.txt: ; [meson-log.txt](https://github.com/su2code/SU2/files/12427739/meson-log.txt). **Bug report checklist**. - [x] Consulting the build instructions (https://su2code.github.io/docs_v7/Build-SU2-Windows/).; - [x] Looking for similar problems on GitHub or CFD-Online (https://www.cfd-online.com/Forums/su2/).; - [x] Updating to the newest version of SU2 (either develop, master, or the pre-built executables https://su2code.github.io/download.html). **Desk",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/2114:1094,install,installed,1094,https://su2code.github.io,https://github.com/su2code/SU2/issues/2114,1,['install'],['installed']
Deployability,"dary condition, which is implemented in the `CEulerSolver.cpp`, the `Inflow_Mach_old` returned is 0.0, causing the computation of the updated pressure to be incorrect. In practice, this drives the pressure lower and lower until it becomes negative. To find this, I added debug statements to `SU2_CFD/src/solvers/CEulerSolver.cpp` where the FAN_FACE_MACH BC logic is to iterate on the outflow pressure. . // cout << endl << ""PRINTING DEBUG INFO FOR FAN_FACE_MACH"" << endl;; // cout << ""Rank = "" << rank << endl;; // cout << ""Kind_Engine_Inflow = "" << Kind_Engine_Inflow << endl;; // cout << ""Target_Inflow_Mach = "" << Target_Inflow_Mach << endl;; // cout << ""Inflow_Pressure_old = "" << Inflow_Pressure_old << endl;; // cout << ""Inflow_Mach_old = "" << Inflow_Mach_old << endl;; // cout << ""Inflow_Pressure_inc = "" << Inflow_Pressure_inc << endl;; // cout << ""Inflow_Pressure = "" << Inflow_Pressure << endl;. which resulted in the output:. PRINTING DEBUG INFO FOR FAN_FACE_MACH; Rank = 1; Kind_Engine_Inflow = 1; Target_Inflow_Mach = 0.64; Inflow_Pressure_old = 2.36396; Inflow_Mach_old = 0; ... So it seems the main issue is that in the `config` the `Inflow_Mach` quantity is never getting updated. I _believe_ this should happen in `src/solvers/CEulerSolver.cpp` starting at line 2855 `if (Engine) { ... ` . Here, a call to `config->SetInflow_Mach(iMarker_Inlet, Inlet_Mach_Total[iMarker_Inlet]);` is completely missing. I'm not familiar with the code base, so I'm not sure if it is supposed to be updated elsewhere. However, inserting that line appears to fix the problem and the above logic around FAN_FACE_MACH begins working as expected. **Reproduce**; Perhaps the only thing about my problem worth mentioning is it is ran as axisymmetric. I'm running RANS, with the SST model. . **Desktop (please complete the following information):**; - OS: [e.g., Linux (Centos 7)]; - C++ compiler and version: [g++ (GCC) 4.8.5]; - MPI implementation and version: [e.g., OpenMPI 4.0.1]; - SU2 Version: [v7.3.1]",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1607:1292,update,updated,1292,https://su2code.github.io,https://github.com/su2code/SU2/issues/1607,2,['update'],['updated']
Deployability,"date README and RELEASES</li>; <li>Additional commits viewable in <a href=""https://github.com/actions/cache/compare/v1...v3"">compare view</a></li>; </ul>; </details>; <br />. [![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=actions/cache&package-manager=github_actions&previous-version=1&new-version=3)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores). Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`. [//]: # (dependabot-automerge-start); [//]: # (dependabot-automerge-end). ---. <details>; <summary>Dependabot commands and options</summary>; <br />. You can trigger Dependabot actions by commenting on this PR:; - `@dependabot rebase` will rebase this PR; - `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it; - `@dependabot merge` will merge this PR after your CI passes on it; - `@dependabot squash and merge` will squash and merge this PR after your CI passes on it; - `@dependabot cancel merge` will cancel a previously requested merge and block automerging; - `@dependabot reopen` will reopen this PR if it is closed; - `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually; - `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself); - `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself); - `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself). </details>",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1755:10487,upgrade,upgrade,10487,https://su2code.github.io,https://github.com/su2code/SU2/pull/1755,3,['upgrade'],['upgrade']
Deployability,"dentation (FSI_config.py, line 61); Listing './FSI/util'...; Listing './SU2'...; Listing './SU2/eval'...; Listing './SU2/io'...; Listing './SU2/mesh'...; Listing './SU2/opt'...; Listing './SU2/run'...; Listing './SU2/util'...; Compiling './SU2/util/filter_adjoint.py'...; *** File ""./SU2/util/filter_adjoint.py"", line 182; raise Exception, 'unknown filter type'; ^; SyntaxError: invalid syntax. Compiling './compute_uncertainty.py'...; *** File ""./compute_uncertainty.py"", line 69; print ""\n\n =================== Performing "" + str(comp) + "" Component Perturbation =================== \n\n""; ^; SyntaxError: invalid syntax. Compiling './fsi_computation.py'...; *** Sorry: TabError: inconsistent use of tabs and spaces in indentation (fsi_computation.py, line 77); Listing './pySU2'...; ```; After fixing them and running `python -m compileall .` again the next set of similar error messages appears. This patch fix such `TabError`, `SyntaxError` (for `raise` and `print` functions), replace some indent tabs with spaces (generally with 8 spaces) before comments, remove trailing spaces where needed. Please fix this small issue as resulting patch to fix it for distributive build script is rather huge (~ 100 Kb). Many changes are in `SU2_PY/FSI/FSIInterface.py` and the `Split` mode of github change preview is more suitable to compare and to recheck the correctness of new indentation (or via Meld application). ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [ ] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [ ] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my cont",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/983:2049,patch,patch,2049,https://su2code.github.io,https://github.com/su2code/SU2/pull/983,1,['patch'],['patch']
Deployability,differentiation.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/fsi_computation.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2_CFD.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/__init__.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/eval/design.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/eval; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/eval/functions.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/eval; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/eval/gradients.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/eval; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/eval/__init__.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/eval; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/io/config.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/io; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/io/config_options.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/io; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/io/data.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/io; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/io/filelock.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/io; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/io/redirect.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/io; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/io/state.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/io; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/io/tools.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/io; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/io/historyM,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/991#issuecomment-632032044:4339,Install,Installing,4339,https://su2code.github.io,https://github.com/su2code/SU2/issues/991#issuecomment-632032044,1,['Install'],['Installing']
Deployability,"direct.github.com/github/codeql-action/pull/2079"">#2079</a></li>; </ul>; <h2>3.23.0 - 08 Jan 2024</h2>; <ul>; <li>We are rolling out a feature in January 2024 that will disable Python dependency installation by default for all users. This improves the speed of analysis while having only a very minor impact on results. You can override this behavior by setting <code>CODEQL_ACTION_DISABLE_PYTHON_DEPENDENCY_INSTALLATION=false</code> in your workflow, however we plan to remove this ability in future versions of the CodeQL Action. <a href=""https://redirect.github.com/github/codeql-action/pull/2031"">#2031</a></li>; <li>The CodeQL Action now requires CodeQL version 2.11.6 or later. For more information, see <a href=""https://github.com/github/codeql-action/blob/main/#2227---16-nov-2023"">the corresponding changelog entry for CodeQL Action version 2.22.7</a>. <a href=""https://redirect.github.com/github/codeql-action/pull/2009"">#2009</a></li>; </ul>; <h2>3.22.12 - 22 Dec 2023</h2>; <ul>; <li>Update default CodeQL bundle version to 2.15.5. <a href=""https://redirect.github.com/github/codeql-action/pull/2047"">#2047</a></li>; </ul>; <h2>3.22.11 - 13 Dec 2023</h2>; <!-- raw HTML omitted -->; </blockquote>; <p>... (truncated)</p>; </details>; <details>; <summary>Commits</summary>; <ul>; <li><a href=""https://github.com/github/codeql-action/commit/66c3cec3e84942c64294dd8ea34532318b12a14e""><code>66c3cec</code></a> Update checked-in dependencies</li>; <li><a href=""https://github.com/github/codeql-action/commit/36f1104e11cf100d92d694d3df5330397e1a1a2d""><code>36f1104</code></a> Bump the npm group with 5 updates</li>; <li><a href=""https://github.com/github/codeql-action/commit/905ae4af531685eaee37e94f46845bf4c420dc62""><code>905ae4a</code></a> Merge pull request <a href=""https://redirect.github.com/github/codeql-action/issues/2163"">#2163</a> from github/mergeback/v3.24.5-to-main-47b3d888</li>; <li><a href=""https://github.com/github/codeql-action/commit/6dab9f2356bef6518153087116230299a4ee671",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2229:13585,Update,Update,13585,https://su2code.github.io,https://github.com/su2code/SU2/pull/2229,1,['Update'],['Update']
Deployability,djoint.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\direct_differentiation.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\fsi_computation.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2_CFD.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/__init__.py to C:\bin\bin/SU2; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/eval/design.py to C:\bin\bin/SU2/eval; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/eval/functions.py to C:\bin\bin/SU2/eval; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/eval/gradients.py to C:\bin\bin/SU2/eval; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/eval/__init__.py to C:\bin\bin/SU2/eval; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/io/config.py to C:\bin\bin/SU2/io; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/io/config_options.py to C:\bin\bin/SU2/io; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/io/data.py to C:\bin\bin/SU2/io; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/io/filelock.py to C:\bin\bin/SU2/io; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/io/redirect.py to C:\bin\bin/SU2/io; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/io/state.py to C:\bin\bin/SU2/io; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/io/tools.py to C:\bin\bin/SU2/io; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/io/historyMap.py to C:\bin\bin/SU2/io; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/io/__init__.py to C:\bin\bin/SU2/io; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/opt/project.py to C:\bin\bin/SU2/opt; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/opt/scipy_tools.py to C:\bin\bin/SU2/opt; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/opt/__init__.py to C:\bin\bin/SU2/opt; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/run/adjoint.py to C:\bin\bin/SU2/run; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/run/deform.py to C:\bin\bin/SU2/run; Installing C:\Users\Danie\Documents\SU2\SU2_PY,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1376:5782,Install,Installing,5782,https://su2code.github.io,https://github.com/su2code/SU2/issues/1376,1,['Install'],['Installing']
Deployability,"dy detailed in #591. I added a table output class for structuring screen output. As a first step I used it for the preprocessing output, but it will eventually be also used in the new output structure that follows soon. I am pretty sure there are more places where a table can be helpful for readability, but we can make these changes as we go. Note: the convergence output is not affected yet!. The class is added in a folder called ""Common/toolboxes"". My intention is that in the future we will add there more small helper tools/classes, which are essentially independent of the rest of the code. . Below you find an example output of the current preprocessing:. ```. ---------------------- Space Numerical Integration ----------------------; Jameson-Schmidt-Turkel scheme (2nd order in space) for the flow inviscid terms.; JST viscous coefficients (2nd & 4th): 0.5, 0.02.; The method includes a grid stretching correction (p = 0.3).; Scalar upwind solver for the turbulence model.; First order integration in space.; Average of gradients with correction (viscous flow terms).; Average of gradients with correction (viscous turbulence terms).; Gradient Computation using weighted Least-Squares method. ---------------------- Time Numerical Integration -----------------------; Local time stepping (steady state simulation).; Euler implicit method for the flow equations.; FGMRES is used for solving the linear system.; Using a LU-SGS preconditioning.; Convergence criteria of the linear solver: 1e-06.; Max number of linear iterations: 7.; CFL adaptation. Factor down: 1.5, factor up: 0.5,; lower limit: 0.5, upper limit: 3.5.; Courant-Friedrichs-Lewy number: 1; Euler implicit time integration for the turbulence model. ------------------------- Convergence Criteria --------------------------; Maximum number of iterations: 999999.; Reduce the density residual 6 orders of magnitude.; The minimum bound for the density residual is 10^(-5.9).; Start convergence criteria at iteration 10. ----------",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/633:1074,integrat,integration,1074,https://su2code.github.io,https://github.com/su2code/SU2/pull/633,1,['integrat'],['integration']
Deployability,dy/UserPackages/SU2_INSTALL_NEW/bin/SU2/io; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/io/historyMap.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/io; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/io/__init__.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/io; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/mesh/adapt.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/mesh; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/mesh/tools.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/mesh; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/mesh/__init__.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/mesh; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/opt/project.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/opt; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/opt/scipy_tools.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/opt; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/opt/__init__.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/opt; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/run/adaptation.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/run; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/run/adjoint.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/run; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/run/deform.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/run; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/run/direct.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/run; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/run/interface.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/run; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/run/merge.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/run; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/991#issuecomment-632032044:6223,Install,Installing,6223,https://su2code.github.io,https://github.com/su2code/SU2/issues/991#issuecomment-632032044,1,['Install'],['Installing']
Deployability,dy/UserPackages/SU2_INSTALL_NEW/bin/SU2/opt; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/opt/scipy_tools.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/opt; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/opt/__init__.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/opt; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/run/adaptation.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/run; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/run/adjoint.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/run; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/run/deform.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/run; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/run/direct.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/run; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/run/interface.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/run; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/run/merge.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/run; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/run/geometry.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/run; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/run/projection.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/run; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/run/__init__.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/run; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/util/bunch.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/util; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/util/filter_adjoint.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/util; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/util/lhc_unif.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/util; Installing /home/slimshady/UserPackages/SU2,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/991#issuecomment-632032044:7037,Install,Installing,7037,https://su2code.github.io,https://github.com/su2code/SU2/issues/991#issuecomment-632032044,1,['Install'],['Installing']
Deployability,"e bug**; When creating a CDriver instance, for example through the Python wrapper, with an MPI communicator which is defined only on a subset of the processes on which the MPI library was initialised, SU2 will deadlock. This seems to be because most of the MPI communication and synchronisation operations in SU2 explicitly refer to the global `MPI_COMM_WORLD`. The issue arose when attempting to control several Euler/RANS SU2 `CSinglezoneDriver` and `CDiscAdjSinglezoneDriver` instances in parallel (i.e. simultaneously) within a larger optimisation code, which provides each analysis with a subset of the ranks in its own MPI communicator. Naively replacing _all_ references to `MPI_COMM_WORLD` with `SU2_MPI::GetComm()` throughout the code (except where it is defined, and where it is used to initialise the MPI wrapper in the SU2_XXX.cpp files) prevents the deadlock and results in the desired behaviour. However, I imagine that this ""fix"" may well cause all sorts of issues outside of my own, limited use case. **To Reproduce**; The issue can be reproduced with any SU2_CFD configuration file and mesh, run in parallel using the Python wrapper as follows: ; ```; from mpi4py import MPI; import pysu2 # or pysu2ad. filename = 'example.cfg'; zones = 1. rank = MPI.COMM_WORLD.Get_rank(); size = MPI.COMM_WORLD.Get_size(). group = MPI.COMM_WORLD.group.Excl([0]) # exclude the first rank; comm = MPI.COMM_WORLD.Create_group(group). if comm: # is False only on the excluded rank; print(""Running SU2 on global rank {} of {} ... "".format(rank, size)). # create SU2 instance -- will hang during Geometry preprocessing; instance = pysu2.CSinglezoneDriver(filename, zones, comm). else:; print(""Doing nothing on global rank {} of {} ... "".format(rank, size)). ```. **Desktop (please complete the following information):**; - OS: Redhat 7.7; - C++ compiler and version: g++ (GCC) 4.8.5; - MPI implementation and version: MPICH 3.2.1; - SU2 Version: 7.0.2 ""Blackbird"" (looks to be reproducible on 7.1.0 also)",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1179:1093,configurat,configuration,1093,https://su2code.github.io,https://github.com/su2code/SU2/issues/1179,1,['configurat'],['configuration']
Deployability,"e more granularity such that you could manipulate the geometry from python (without writing it to files).; > We also wanted introspection, i.e. you could probe SU2 via python for what variables and functions are available.; > We also talked about having the projection step (DOT) included in CFD_AD so that you only need to worry about surface sensitivities, note that DEF is already part of CFD for forward mode AD.; > (talking does not go very far); > ; > If you want to lead this work, we can help you understand the inner workings. We meet every Wednesday at 4pm CET https://meet.jit.si/SU2_DevMeeting to discuss this type of issue. Thank you for the quick reply. The discussions you mention sound very promising, I would be glad to join tomorrow afternoon and learn more, so that I might contribute. One quick remark: I am aware that it is indeed possible to deform the mesh within `SU2_CFD`, I use this extensively for static aero-elastic analysis. However, I have not been able to have the deformed mesh be written to file at output (in SU2 or CGNS format). This is fine for aero-elastic updates (movement of the surface due to _structural displacements_), where it is sufficient to see the deformed mesh in the post-processing files. It becomes impractical though, for design updates (movement of the surface to due to _design displacements_, i.e. representing changes in the design variables) where the new mesh is a useful intermediate result. Even if this is just an issue in my configuration file, I think that a stand-alone driver or equivalent of `SU2_DEF` would remain useful. For each new set of updated design variables during shape optimisation, a single mesh deformation is sufficient to provide the new, updated jig geometry which all of the aerodynamic or aero-elastic analyses (one for each operating point) have in common. There would be no need to initialise the entire `SU2_CFD` machinery for this step, or to apply the design update separately for each of the SU2 instances.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1262#issuecomment-818839696:1279,update,updates,1279,https://su2code.github.io,https://github.com/su2code/SU2/issues/1262#issuecomment-818839696,12,"['configurat', 'update']","['configuration', 'update', 'updated', 'updates']"
Deployability,e-1.9.0 at C:\Users\Danie\Documents\SU2\ninja.exe`. **526 files install successfully.** . `WARNING: the currently checked out submodule commit in C:\Users\Danie\Documents\SU2\externals\opdi does not match the SHA-1 found in the index.; Use 'git submodule update --init C:\Users\Danie\Documents\SU2\externals\opdi' to reset the module if necessary.; SHA-1 tag stored in index does not match SHA tag stored in this script.; Installing SU2_CFD/src\SU2_CFD.exe to C:\bin\bin; Installing SU2_CFD/src\SU2_CFD_AD.exe to C:\bin\bin; Installing SU2_CFD/src\SU2_CFD_DIRECTDIFF.exe to C:\bin\bin; Installing SU2_DOT/src\SU2_DOT.exe to C:\bin\bin; Installing SU2_DOT/src\SU2_DOT_AD.exe to C:\bin\bin; Installing SU2_DEF/src\SU2_DEF.exe to C:\bin\bin; Installing SU2_GEO/src\SU2_GEO.exe to C:\bin\bin; Installing SU2_SOL/src\SU2_SOL.exe to C:\bin\bin; Installing SU2_PY/pySU2\_pysu2.dll to C:\bin\bin; Installing SU2_PY/pySU2\_pysu2.dll.a to C:\bin\lib; Installing SU2_PY/pySU2\_pysu2ad.dll to C:\bin\bin; Installing SU2_PY/pySU2\_pysu2ad.dll.a to C:\bin\lib; Installing C:\Users\Danie\Documents\SU2\SU2_PY\continuous_adjoint.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\compute_uncertainty.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\finite_differences.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\mesh_deformation.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\parallel_computation.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\parallel_computation_fsi.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\package_tests.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\shape_optimization.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\merge_solution.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\set_ffd_design_var.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\compute_polar.py to C:\bin\bin; Installing C:\Users\Danie\Documents\,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1376:3689,Install,Installing,3689,https://su2code.github.io,https://github.com/su2code/SU2/issues/1376,1,['Install'],['Installing']
Deployability,e.; - Add another check to improve stability.; - Collection of improvements.; - Updated actuator disk; - Merge branch 'develop' of https://github.com/su2code/SU2 into develop; - Preliminary implementation of the Neg SA; - Minor updates; - Preliminary implementation of the Negative SA; - Bug fixing; - Fixed memory issued for very large meshes with ParMETIS.; - Clear evaluation of Vorticity and StrainMag; - Viscous limiter; - Updated RELAXATION_FACTOR; - RANS MG; - Partial fix to no MPI output; - Updated I/O; - Updated Adapt CFL; - Updated Adaptive CFL number; - Release 3.2.8; - Updated SetCFL_Number; - Small update; - Small change; - Small adjustments; - Minor changes; - Updated release 3.2.8; - MPI disabled by default in build. Added --enable-mpi flag to configure.; - Merged the ParMETIS implementation. Updated the build files.; - bootstrap; - Started parallel CGNS reader.; - Memory fix.; - Minor change; - Merge branch 'develop' of https://github.com/su2code/SU2 into develop; - Updated binaries; - Small change to configure.ac. Bootstrap.; - Small change; - Cleaning the code; - Updated grid deformation subroutine; - Fixing the mesh deformation; - Updated SU2_MSH; - Bug fixing; - Initial implementation of parallel CGNS reader. Works on 1 rank.; - Merged in recent changes to geometry_structure.cpp.; - Periodic BC working in serial; - Update option_structure.hpp; - Merge pull request #154 from su2code/fixCOptionEnumList; - Bug fixing (periodic bc); - Merge branch 'develop' of https://github.com/su2code/SU2 into develop; - Another important updated to BC in parallel; - More implementation and clean up of the parallel CGNS reader.; - Merge branch 'develop' of https://github.com/su2code/SU2 into develop; - CGNS reader bug fix.; - Updated adj. NS solver with primitive variables and farfield bc including viscous contribution.; - Merge branch 'develop' of https://github.com/su2code/SU2 into develop; - Small change; - Back to the previous version; - Fixed some loop variables.;,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/174#issuecomment-101443812:6023,Update,Updated,6023,https://su2code.github.io,https://github.com/su2code/SU2/pull/174#issuecomment-101443812,1,['Update'],['Updated']
Deployability,e/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/__init__.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/eval/design.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/eval; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/eval/functions.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/eval; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/eval/gradients.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/eval; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/eval/__init__.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/eval; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/io/config.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/io; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/io/config_options.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/io; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/io/data.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/io; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/io/filelock.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/io; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/io/redirect.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/io; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/io/state.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/io; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/io/tools.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/io; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/io/historyMap.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/io; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/io/__init__.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/io; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/mesh/adapt.py,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/991#issuecomment-632032044:4611,Install,Installing,4611,https://su2code.github.io,https://github.com/su2code/SU2/issues/991#issuecomment-632032044,1,['Install'],['Installing']
Deployability,"e> (<a href=""https://github.com/github/codeql/tree/codeql-cli/v2.16.2/ruby/ql/lib/CHANGELOG.md"">changelog</a>, <a href=""https://github.com/github/codeql/tree/codeql-cli/v2.16.2/ruby/ql/lib"">source</a>)</li>; <li><code>codeql/swift-queries</code> (<a href=""https://github.com/github/codeql/tree/codeql-cli/v2.16.2/swift/ql/src/CHANGELOG.md"">changelog</a>, <a href=""https://github.com/github/codeql/tree/codeql-cli/v2.16.2/swift/ql/src"">source</a>)</li>; <li><code>codeql/swift-all</code> (<a href=""https://github.com/github/codeql/tree/codeql-cli/v2.16.2/swift/ql/lib/CHANGELOG.md"">changelog</a>, <a href=""https://github.com/github/codeql/tree/codeql-cli/v2.16.2/swift/ql/lib"">source</a>)</li>; </ul>; <h2>CodeQL Bundle v2.16.1</h2>; <p>Bundles CodeQL CLI v2.16.1</p>; <ul>; <li>(<a href=""https://github.com/github/codeql-cli-binaries/blob/HEAD/CHANGELOG.md"">changelog</a>, <a href=""https://github.com/github/codeql-cli-binaries/releases/tag/v2.16.1"">release</a>)</li>; </ul>; <p>Includes the following CodeQL language packs from <a href=""https://github.com/github/codeql/tree/codeql-cli/v2.16.1""><code>github/codeql@codeql-cli/v2.16.1</code></a>:</p>; <ul>; <li><code>codeql/cpp-queries</code> (<a href=""https://github.com/github/codeql/tree/codeql-cli/v2.16.1/cpp/ql/src/CHANGELOG.md"">changelog</a>, <a href=""https://github.com/github/codeql/tree/codeql-cli/v2.16.1/cpp/ql/src"">source</a>)</li>; </ul>; <!-- raw HTML omitted -->; </blockquote>; <p>... (truncated)</p>; </details>; <details>; <summary>Changelog</summary>; <p><em>Sourced from <a href=""https://github.com/github/codeql-action/blob/main/CHANGELOG.md"">github/codeql-action's changelog</a>.</em></p>; <blockquote>; <h2>3.24.6 - 29 Feb 2024</h2>; <p>No user facing changes.</p>; <h2>3.24.5 - 23 Feb 2024</h2>; <ul>; <li>Update default CodeQL bundle version to 2.16.3. <a href=""https://redirect.github.com/github/codeql-action/pull/2156"">#2156</a></li>; </ul>; <h2>3.24.4 - 21 Feb 2024</h2>; <ul>; <li>Fix an issue where an existing, but e",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2229:9222,release,release,9222,https://su2code.github.io,https://github.com/su2code/SU2/pull/2229,1,['release'],['release']
Deployability,"e> (<a href=""https://github.com/github/codeql/tree/codeql-cli/v2.16.3/ruby/ql/lib/CHANGELOG.md"">changelog</a>, <a href=""https://github.com/github/codeql/tree/codeql-cli/v2.16.3/ruby/ql/lib"">source</a>)</li>; <li><code>codeql/swift-queries</code> (<a href=""https://github.com/github/codeql/tree/codeql-cli/v2.16.3/swift/ql/src/CHANGELOG.md"">changelog</a>, <a href=""https://github.com/github/codeql/tree/codeql-cli/v2.16.3/swift/ql/src"">source</a>)</li>; <li><code>codeql/swift-all</code> (<a href=""https://github.com/github/codeql/tree/codeql-cli/v2.16.3/swift/ql/lib/CHANGELOG.md"">changelog</a>, <a href=""https://github.com/github/codeql/tree/codeql-cli/v2.16.3/swift/ql/lib"">source</a>)</li>; </ul>; <h2>CodeQL Bundle v2.16.2</h2>; <p>Bundles CodeQL CLI v2.16.2</p>; <ul>; <li>(<a href=""https://github.com/github/codeql-cli-binaries/blob/HEAD/CHANGELOG.md"">changelog</a>, <a href=""https://github.com/github/codeql-cli-binaries/releases/tag/v2.16.2"">release</a>)</li>; </ul>; <p>Includes the following CodeQL language packs from <a href=""https://github.com/github/codeql/tree/codeql-cli/v2.16.2""><code>github/codeql@codeql-cli/v2.16.2</code></a>:</p>; <ul>; <li><code>codeql/cpp-queries</code> (<a href=""https://github.com/github/codeql/tree/codeql-cli/v2.16.2/cpp/ql/src/CHANGELOG.md"">changelog</a>, <a href=""https://github.com/github/codeql/tree/codeql-cli/v2.16.2/cpp/ql/src"">source</a>)</li>; <li><code>codeql/cpp-all</code> (<a href=""https://github.com/github/codeql/tree/codeql-cli/v2.16.2/cpp/ql/lib/CHANGELOG.md"">changelog</a>, <a href=""https://github.com/github/codeql/tree/codeql-cli/v2.16.2/cpp/ql/lib"">source</a>)</li>; <li><code>codeql/csharp-queries</code> (<a href=""https://github.com/github/codeql/tree/codeql-cli/v2.16.2/csharp/ql/src/CHANGELOG.md"">changelog</a>, <a href=""https://github.com/github/codeql/tree/codeql-cli/v2.16.2/csharp/ql/src"">source</a>)</li>; <li><code>codeql/csharp-all</code> (<a href=""https://github.com/github/codeql/tree/codeql-cli/v2.16.2/csharp/ql/lib/CHAN",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2229:4870,release,release,4870,https://su2code.github.io,https://github.com/su2code/SU2/pull/2229,1,['release'],['release']
Deployability,"e></a></li>; </ul>; <h2>v3.3.0</h2>; <ul>; <li><a href=""https://redirect.github.com/actions/checkout/pull/1045"">Implement branch list using callbacks from exec function</a></li>; <li><a href=""https://redirect.github.com/actions/checkout/pull/1050"">Add in explicit reference to private checkout options</a></li>; <li>[Fix comment typos (that got added in <a href=""https://redirect.github.com/actions/checkout/issues/770"">#770</a>)](<a href=""https://redirect.github.com/actions/checkout/pull/1057"">actions/checkout#1057</a>)</li>; </ul>; <h2>v3.2.0</h2>; <ul>; <li><a href=""https://redirect.github.com/actions/checkout/pull/942"">Add GitHub Action to perform release</a></li>; <li><a href=""https://redirect.github.com/actions/checkout/pull/967"">Fix status badge</a></li>; <li><a href=""https://redirect.github.com/actions/checkout/pull/1002"">Replace datadog/squid with ubuntu/squid Docker image</a></li>; <li><a href=""https://redirect.github.com/actions/checkout/pull/964"">Wrap pipeline commands for submoduleForeach in quotes</a></li>; <li><a href=""https://redirect.github.com/actions/checkout/pull/1029"">Update <code>@​actions/io</code> to 1.1.2</a></li>; <li><a href=""https://redirect.github.com/actions/checkout/pull/1039"">Upgrading version to 3.2.0</a></li>; </ul>; <h2>v3.1.0</h2>; <ul>; <li><a href=""https://redirect.github.com/actions/checkout/pull/939"">Use <code>@​actions/core</code> <code>saveState</code> and <code>getState</code></a></li>; <li><a href=""https://redirect.github.com/actions/checkout/pull/922"">Add <code>github-server-url</code> input</a></li>; </ul>; <h2>v3.0.2</h2>; <ul>; <li><a href=""https://redirect.github.com/actions/checkout/pull/770"">Add input <code>set-safe-directory</code></a></li>; </ul>; <h2>v3.0.1</h2>; <!-- raw HTML omitted -->; </blockquote>; <p>... (truncated)</p>; </details>; <details>; <summary>Commits</summary>; <ul>; <li><a href=""https://github.com/actions/checkout/commit/3df4ab11eba7bda6032a0b82a6bb43b11571feac""><code>3df4ab1</code></a> Release 4.0.0",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2126:8828,pipeline,pipeline,8828,https://su2code.github.io,https://github.com/su2code/SU2/pull/2126,2,['pipeline'],['pipeline']
Deployability,e\Documents\SU2\SU2_PY\continuous_adjoint.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\compute_uncertainty.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\finite_differences.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\mesh_deformation.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\parallel_computation.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\parallel_computation_fsi.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\package_tests.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\shape_optimization.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\merge_solution.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\set_ffd_design_var.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\compute_polar.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\compute_multipoint.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\discrete_adjoint.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\direct_differentiation.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\fsi_computation.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2_CFD.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/__init__.py to C:\bin\bin/SU2; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/eval/design.py to C:\bin\bin/SU2/eval; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/eval/functions.py to C:\bin\bin/SU2/eval; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/eval/gradients.py to C:\bin\bin/SU2/eval; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/eval/__init__.py to C:\bin\bin/SU2/eval; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/io/config.py to C:\bin\bin/SU2/io; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/io/config_options.py to C:\bin\bin/SU2/io; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/io/data.py to C:\b,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1376:4744,Install,Installing,4744,https://su2code.github.io,https://github.com/su2code/SU2/issues/1376,1,['Install'],['Installing']
Deployability,e\Documents\SU2\SU2_PY\finite_differences.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\mesh_deformation.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\parallel_computation.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\parallel_computation_fsi.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\package_tests.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\shape_optimization.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\merge_solution.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\set_ffd_design_var.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\compute_polar.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\compute_multipoint.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\discrete_adjoint.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\direct_differentiation.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\fsi_computation.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2_CFD.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/__init__.py to C:\bin\bin/SU2; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/eval/design.py to C:\bin\bin/SU2/eval; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/eval/functions.py to C:\bin\bin/SU2/eval; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/eval/gradients.py to C:\bin\bin/SU2/eval; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/eval/__init__.py to C:\bin\bin/SU2/eval; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/io/config.py to C:\bin\bin/SU2/io; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/io/config_options.py to C:\bin\bin/SU2/io; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/io/data.py to C:\bin\bin/SU2/io; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/io/filelock.py to C:\bin\bin/SU2/io; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/io/redirect.py t,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1376:4914,Install,Installing,4914,https://su2code.github.io,https://github.com/su2code/SU2/issues/1376,1,['Install'],['Installing']
Deployability,"e_Exhaust and BC_Engine_Bleed; - Small change; - Fixing subsonic engine intake option; - Small output change; - Added output_su2.cpp; - Updated Engine BC; - Working on Engine BCs; - Added Supersonic Outlet BC; - Minor change; - Merge remote-tracking branch 'upstream/develop' into develop; - adjoints, solid boundary, doxygen in config; - continued fixing; - re-added adjoint bc mods; - re-adding avg outlet pressure (static pressure adjoint); - re-adding avg outlet pressure (static pressure adjoint); - Merge branch 'temp' of https://github.com/hlkline/SU2 into temp; - continued fixing; - average total pressure and fixes to avg outlet pressure; - adding stagnation pressure output to SU2_DOT; - Merge pull request #146 from hlkline/temp; - Updated Entropy fix (now it is active).; - Another change in BC_Engine_Exhaust; - Updated CGNS in parallel; - Added runtime file; - Small typo; - Adjustment of the Entropy fix coefficient; - Bug in SU2_GEO; - Debug version with print statements.; - Updated release 3.2.7.1; - Small change; - Updated config file; - Code update; - MPI Status and Request fix.; - Another MPI Status/Request fix.; - Actuator disk update.; - Small update; - Initial implementation of pyramids and prisms for Tecplot binary.; - Small fix for Tecplot binaries. Closes #56. Closes #57.; - Removed extra allocation related to markers during partitioning.; - Non-working version; - Small update; - Updated memory deallocation.; - Merge branch 'feature_MarkerMax' into develop; - Time and date in the header.; - Small fix to the latest commit.; - Simplification of entropy correction; - Critical stability improvement.; - Minor release 3.2.7.2; - Fixing issues to run with the latest intel compiler; - Fix for Tecplot binary solutions for unsteady flows. Fixes #150.; - Now SU2 should work with the latest version of the Intel compiler.; - Merge branch 'develop' of https://github.com/su2code/SU2 into develop; - Working on the O3 stuff; - Small change.; - Add another check to impro",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/174#issuecomment-101443812:4055,Update,Updated,4055,https://su2code.github.io,https://github.com/su2code/SU2/pull/174#issuecomment-101443812,3,"['Update', 'release']","['Updated', 'release']"
Deployability,"earch group at UT Austin has implemented a unit testing framework on our branch, which we're happy with. Some choices were arbitrary, and some choices were made based on our development environment. Those choices may be different for other groups. Here's what we have done:. The unit testing framework is compiled and run using autotools. For more information on autotool's setup, see [their documentation](https://www.gnu.org/software/automake/manual/html_node/Tests.html). Since autotools is the build system for SU2, this involves minimal changes. Using automake, the build process for building unit tests becomes:. ```; ./bootstrap; ./configure; make; make check; ```. We use [Boost's unit testing framework](https://www.boost.org/doc/libs/1_70_0/libs/test/doc/html/index.html). This provides a convenient set of macros for instatiating tests, grouping tests into suites, and running checks. This choice was based on what is available in our development setup. We have integrated our unit tests into our Travis CI regression testing. Every time we push commits or submit a pull request, the unit tests are run and checked. ## What is my vision for unit testing in SU2?. I am *not* proposing that we start trying to get 100% code coverage with pre-existing code. That would not provide a good return on investment. Instead, I see people adding unit tests as they write new code and as they find bugs. For each new behavior added to SU2, tests are first added to document the related existing behavior. These tests serve to check that the existing behavior isn't damaged by the new code. Then new tests are added to prove that the new behavior is working correctly. For bug fixes, the process is simpler. A test is added to confirm that something is not behaving as expected. Then the code is fixed to make the test pass. ## What frameworks are available?. For a unit testing framework, here are the most popular options, with the following pros and cons:. #### Roll-your-own. + Requires no external",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/698:2574,integrat,integrated,2574,https://su2code.github.io,https://github.com/su2code/SU2/issues/698,1,['integrat'],['integrated']
Deployability,"earest neighbor which will lead to wrong results. . This PR introduces a small modification to the MatchPeriodic routine that will allow nodes on the axis to map onto themselves. . ## Related Work. As a test, consider the dummy geometry below. The domain is periodic about the Z-axis. I added a wall BC in the middle of the domain and the flow is supposed to separate at that point. This case is not very realistic but the main idea was to have periodic boundaries with points on the axis of rotation. The domain and the boundary conditions are similar to what we typically have when solving turbine blades. I wasn't sure if I can share the geometry, so I made this dummy test case. This case diverges with the develop branch. The image is from an intermediate result using the fix.; ![sample_test_case_fix](https://user-images.githubusercontent.com/28007882/70721921-b4425500-1cf6-11ea-829c-7d91ca8bb1ef.jpeg). A quick way to verify if the nodes are matched properly is to check the velocity on the nodes that lie on the axis of rotation. Due to the periodicity constraint, the velocities must be aligned with the axis (here the Z-axis) which can be seen here as well. ![vel](https://user-images.githubusercontent.com/28007882/70722647-eef8bd00-1cf7-11ea-9b25-971f9718e151.jpeg). ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [ X] I am submitting my contribution to the develop branch.; - [ X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [ X] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/840:2309,update,updated,2309,https://su2code.github.io,https://github.com/su2code/SU2/pull/840,1,['update'],['updated']
Deployability,"easier implementation experience. Certainly, this is not the only consideration but it should be taken into account. Currently, resulting from the significant contributions of the members of this developers group, SU2 implementation works like a charm. I think we should strive to conserve this feature, especially if we aim at attracting more users and developers into the community. (...). >@vdweide; >(...) @bmunguia and @EduardoMolina, what type of application did you have in mind for PETSc? The only thing I can think of is a full Newton solver. And no matter how much I like PETSc, @juanjosealonso and @erangit have a point here. Looks like I start to belong to the group of old conservatives as well.... >@economon ; >(...) If you really would like to give PETSc a shot, I recommend talking with @anilvar who had an interface for connecting it to SU2 in one of our branches. >@pcarruscag; >(...) being able to use PETSc or HYPRE would be interesting as it would give us access to AMG, and @talbring 's branch feature_template_linear_solver would make such an integration compatible with AD. (...). >@EduardoMolina; >(...) When Brian (@bmunguia ) and I mentioned PETSc, it was an idea to try a different Newton-Krylov (with preconditioner) library in order to improve the convergence of SU2.; Since the slow convergence of the SU2-FV is the main feedback that I received from other users from industry and academia, I think it worth try an external library and evaluate the performance. (...). >@pcarruscag ; >(...) That is something I am also interested in as for some of my structural cases the current linear solvers simply do not converge. (...). >@economon ; >I would add one practical comment for consideration: it is worth checking whether the main restriction we have is related to approximations in the Jacobian that limit the effective CFL we can use or whether the convergence of the linear solver itself is a problem (speed or complete lack of convergence). A quick test without re",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/648#issuecomment-460853218:2535,integrat,integration,2535,https://su2code.github.io,https://github.com/su2code/SU2/issues/648#issuecomment-460853218,2,['integrat'],['integration']
Deployability,"eb1b166503318e9ceb""><code>1418754</code></a> Add versioning action to automatically slide major versions with releases</li>; <li><a href=""https://github.com/actions/upload-release-asset/commit/7d8fb6c931cb341bda0f898a0d2191cf54abc69a""><code>7d8fb6c</code></a> Merge pull request <a href=""https://github-redirect.dependabot.com/actions/upload-release-asset/issues/6"">#6</a> from actions/IAmHughes/fix-link-to-license</li>; <li><a href=""https://github.com/actions/upload-release-asset/commit/c53f077c5d8c19236718abc4697a59634ef534cf""><code>c53f077</code></a> Fix link to LICENSE</li>; <li><a href=""https://github.com/actions/upload-release-asset/commit/72e8a5ef036620fb7afff8bbb8f9e78910c7ccbc""><code>72e8a5e</code></a> Merge pull request <a href=""https://github-redirect.dependabot.com/actions/upload-release-asset/issues/5"">#5</a> from cesperanc/documentation-update</li>; <li><a href=""https://github.com/actions/upload-release-asset/commit/bf2a7fbecfaaaa29f7819c650ad302e52f68238e""><code>bf2a7fb</code></a> Update example to use the fixed version</li>; <li>See full diff in <a href=""https://github.com/actions/upload-release-asset/compare/v1.0.1...v1.0.2"">compare view</a></li>; </ul>; </details>; <br />. [![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=actions/upload-release-asset&package-manager=github_actions&previous-version=1.0.1&new-version=1.0.2)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores). Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`. [//]: # (dependabot-automerge-start); [//]: # (dependabot-automerge-end). ---. <details>; <summary>Dependabot commands and options</summary>; <br />. You can trigger Dependabot actions by commenting on this PR:; - `@dependabot rebase` will rebase this PR; - `@dependabot recr",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1737:1996,release,release-asset,1996,https://su2code.github.io,https://github.com/su2code/SU2/pull/1737,6,"['Update', 'release']","['Update', 'release-asset']"
Deployability,"ect.github.com/actions/download-artifact/pull/178"">Bump <code>@​actions/core</code> to 1.10.0</a></li>; </ul>; </blockquote>; </details>; <details>; <summary>Commits</summary>; <ul>; <li><a href=""https://github.com/actions/download-artifact/commit/c850b930e6ba138125429b7e5c93fc707a7f8427""><code>c850b93</code></a> Merge pull request <a href=""https://redirect.github.com/actions/download-artifact/issues/307"">#307</a> from bethanyj28/main</li>; <li><a href=""https://github.com/actions/download-artifact/commit/6fd111f15ace90c9fbd0d73880db8338a776aaed""><code>6fd111f</code></a> update <code>@​actions/artifact</code></li>; <li><a href=""https://github.com/actions/download-artifact/commit/87c55149d96e628cc2ef7e6fc2aab372015aec85""><code>87c5514</code></a> Merge pull request <a href=""https://redirect.github.com/actions/download-artifact/issues/303"">#303</a> from bethanyj28/main</li>; <li><a href=""https://github.com/actions/download-artifact/commit/47f9ce604fdcae5583e5ef84048eeb7ef2893652""><code>47f9ce6</code></a> update <code>@​actions/artifact</code></li>; <li><a href=""https://github.com/actions/download-artifact/commit/127824d34cb0da7dc3cb064a37ae280b7c09aca6""><code>127824d</code></a> Merge pull request <a href=""https://redirect.github.com/actions/download-artifact/issues/299"">#299</a> from bethanyj28/main</li>; <li><a href=""https://github.com/actions/download-artifact/commit/6dd49bff0a6150b47d41011c034b762053acaf6f""><code>6dd49bf</code></a> licensed only artifact</li>; <li><a href=""https://github.com/actions/download-artifact/commit/f71c0e3da3bb6b4fcc53196b9ac75ee981db5bc6""><code>f71c0e3</code></a> Revert &quot;licensed&quot;</li>; <li><a href=""https://github.com/actions/download-artifact/commit/7c63dfde29f42bb9cb0f61b67e54c91106a6586e""><code>7c63dfd</code></a> licensed</li>; <li><a href=""https://github.com/actions/download-artifact/commit/67d37cd34678091933f0a88cd1bb026171ea20d2""><code>67d37cd</code></a> Update toolkit</li>; <li><a href=""https://github.com/actions/download-ar",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2230:3403,update,update,3403,https://su2code.github.io,https://github.com/su2code/SU2/pull/2230,1,['update'],['update']
Deployability,"ect.github.com/actions/upload-artifact/issues/351"">#351</a></li>; </ul>; <h2>v3.1.0</h2>; <h2>What's Changed</h2>; <ul>; <li>Bump <code>@​actions/artifact</code> to v1.1.0 (<a href=""https://redirect.github.com/actions/upload-artifact/pull/327"">actions/upload-artifact#327</a>); <ul>; <li>Adds checksum headers on artifact upload (<a href=""https://redirect.github.com/actions/toolkit/pull/1095"">actions/toolkit#1095</a>) (<a href=""https://redirect.github.com/actions/toolkit/pull/1063"">actions/toolkit#1063</a>)</li>; </ul>; </li>; </ul>; </blockquote>; </details>; <details>; <summary>Commits</summary>; <ul>; <li><a href=""https://github.com/actions/upload-artifact/commit/5d5d22a31266ced268874388b861e4b58bb5c2f3""><code>5d5d22a</code></a> Merge pull request <a href=""https://redirect.github.com/actions/upload-artifact/issues/515"">#515</a> from actions/eggyhead/update-artifact-v2.1.1</li>; <li><a href=""https://github.com/actions/upload-artifact/commit/f1e993d9663a03508e7fc0370c744c4b963f0044""><code>f1e993d</code></a> update artifact license</li>; <li><a href=""https://github.com/actions/upload-artifact/commit/4881bfd3f27855c63733d8cfff17721cc0ad611f""><code>4881bfd</code></a> updating dist:</li>; <li><a href=""https://github.com/actions/upload-artifact/commit/a30777e2653648a0a7bbd3efb5c96ef9131b96cc""><code>a30777e</code></a> <a href=""https://github.com/eggyhead""><code>@​eggyhead</code></a></li>; <li><a href=""https://github.com/actions/upload-artifact/commit/3a8048248f2f288c271830f8ecf2a1c5d8eb0e9a""><code>3a80482</code></a> Merge pull request <a href=""https://redirect.github.com/actions/upload-artifact/issues/511"">#511</a> from actions/robherley/migration-docs-typo</li>; <li><a href=""https://github.com/actions/upload-artifact/commit/9d63e3f2f81d9dc4e13d83fc330408f8a94b79d1""><code>9d63e3f</code></a> Merge branch 'main' into robherley/migration-docs-typo</li>; <li><a href=""https://github.com/actions/upload-artifact/commit/dfa1ab292d2fdd78d056187f11c568c16ab53de9""><code>dfa1ab2</code",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2231:4089,update,update,4089,https://su2code.github.io,https://github.com/su2code/SU2/pull/2231,1,['update'],['update']
Deployability,"ed.; Determining dependency 'python-3.9-embed' with pkg-config executable 'D:\\Programme\\pkg-config-lite-0.28-1_bin-win32\\pkg-config-lite-0.28-1\\bin\\pkg-config.EXE'; PKG_CONFIG_PATH: ; Called `D:\Programme\pkg-config-lite-0.28-1_bin-win32\pkg-config-lite-0.28-1\bin\pkg-config.EXE --modversion python-3.9-embed` -> 1; ; Found ""python-3.9-embed"" via fallback pkgconfig lookup in PKG_CONFIG_LIBDIR/PKG_CONFIG_PATH; Found ""python-3.9"" via SYSCONFIG module; Dependency python found: YES (sysconfig); Program install.sh found: YES (sh D:\Programme\SU2-7.1.1\SU2_PY/pySU2\install.sh); Message: -------------------------------------------------------------------------; | ___ _ _ ___ |; | / __| | | |_ ) Release 7.1.1 ""Blackbird"" |; | \__ \ |_| |/ / |; | |___/\___//___| Meson Configuration Summary |; | |; -------------------------------------------------------------------------; ; Option Value; ---------------------; TecIO: true; CGNS: true; AD (reverse): true; AD (forward): true; Python Wrapper: true; Intel-MKL: false; OpenBlas: false; PaStiX: false; Mixed Float: false; ; Please be sure to add the $SU2_HOME and $SU2_RUN environment variables,; and update your $PATH (and $PYTHONPATH if applicable) with $SU2_RUN; ; Based on the input to this configuration, add these lines to your .bashrc file:; ; export SU2_RUN=D:\Programme\SU2-7.1.1\bin/bin; export SU2_HOME=D:\Programme\SU2-7.1.1; export PATH=$PATH:$SU2_RUN; export PYTHONPATH=$PYTHONPATH:$SU2_RUN; ; Use './ninja -C D:\Programme\SU2-7.1.1\build install' to compile and install SU2; ; Build targets in project: 20; ; Found ninja.exe-1.9.0 at D:\Programme\SU2-7.1.1\ninja.exe; Running compile:; Working directory: C:\Users\MANUEL~1\AppData\Local\Temp\tmpctmi2f32; Command line: c++ C:\Users\MANUEL~1\AppData\Local\Temp\tmpctmi2f32\testfile.cpp -o C:\Users\MANUEL~1\AppData\Local\Temp\tmpctmi2f32\output.obj -pipe -c -std=c++11 ; ; Code:; int i = static_cast<int>(0);; Compiler stdout:; ; Compiler stderr:; ; Compiler accepts -std=c++11: YES; ",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/888#issuecomment-821840286:8610,Configurat,Configuration,8610,https://su2code.github.io,https://github.com/su2code/SU2/issues/888#issuecomment-821840286,3,"['Configurat', 'configurat', 'update']","['Configuration', 'configuration', 'update']"
Deployability,"ef6518153087116230299a4ee6712""><code>6dab9f2</code></a> Update checked-in dependencies</li>; <li><a href=""https://github.com/github/codeql-action/commit/4d6d2bfeaa911ec12eaaa346f581bb7ab1dc238d""><code>4d6d2bf</code></a> Merge remote-tracking branch 'origin/releases/v3' into mergeback/v3.24.5-to-m...</li>; <li><a href=""https://github.com/github/codeql-action/commit/633baf86c326c07635ec576d7f97ae3f76871e4c""><code>633baf8</code></a> Merge pull request <a href=""https://redirect.github.com/github/codeql-action/issues/2165"">#2165</a> from github/nickfyson/fix-3.24.5-changelog</li>; <li>See full diff in <a href=""https://github.com/github/codeql-action/compare/v2...v3"">compare view</a></li>; </ul>; </details>; <br />. [![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=github/codeql-action&package-manager=github_actions&previous-version=2&new-version=3)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores). Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`. [//]: # (dependabot-automerge-start); [//]: # (dependabot-automerge-end). ---. <details>; <summary>Dependabot commands and options</summary>; <br />. You can trigger Dependabot actions by commenting on this PR:; - `@dependabot rebase` will rebase this PR; - `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it; - `@dependabot merge` will merge this PR after your CI passes on it; - `@dependabot squash and merge` will squash and merge this PR after your CI passes on it; - `@dependabot cancel merge` will cancel a previously requested merge and block automerging; - `@dependabot reopen` will reopen this PR if it is closed; - `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by c",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2229:15581,update,updates,15581,https://su2code.github.io,https://github.com/su2code/SU2/pull/2229,1,['update'],['updates']
Deployability,"ef=""https://redirect.github.com/actions/setup-python/issues/723"">#723</a>)</li>; <li><a href=""https://github.com/actions/setup-python/commit/f6cc428f535856f9c23558d01765a42a4d6cf758""><code>f6cc428</code></a> Use non-deprecated versions in examples (<a href=""https://redirect.github.com/actions/setup-python/issues/724"">#724</a>)</li>; <li><a href=""https://github.com/actions/setup-python/commit/5f2af211d616f86005883b44826180b21abb4060""><code>5f2af21</code></a> Add GraalPy support (<a href=""https://redirect.github.com/actions/setup-python/issues/694"">#694</a>)</li>; <li>Additional commits viewable in <a href=""https://github.com/actions/setup-python/compare/v4...v5"">compare view</a></li>; </ul>; </details>; <br />. [![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=actions/setup-python&package-manager=github_actions&previous-version=4&new-version=5)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores). Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`. [//]: # (dependabot-automerge-start); [//]: # (dependabot-automerge-end). ---. <details>; <summary>Dependabot commands and options</summary>; <br />. You can trigger Dependabot actions by commenting on this PR:; - `@dependabot rebase` will rebase this PR; - `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it; - `@dependabot merge` will merge this PR after your CI passes on it; - `@dependabot squash and merge` will squash and merge this PR after your CI passes on it; - `@dependabot cancel merge` will cancel a previously requested merge and block automerging; - `@dependabot reopen` will reopen this PR if it is closed; - `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by c",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2233:7698,update,updates,7698,https://su2code.github.io,https://github.com/su2code/SU2/pull/2233,1,['update'],['updates']
Deployability,"egin to run much larger models. Otherwise the preprocessing time for the searches can become excessive and dominant. If someone wanted to try using PCL for this, that would be quite interesting. Given the open source license, as Tom mentions, there should not be a problem interfacing with SU2. Now, an issue we faced in the ASC / PSAAP programs is that for extremely large calculations, the surface mesh (to be searched for minimum distance calculations) may actually not fit in a single processor. For that purpose we built parallel ADTs in the past (unfortunately in FORTRAN90) which replicate a small portion of the upper structure of the tree in all processors (without consuming a lot of memory) and then decomposed the tree into the various processors participating in the searches. While the parallel speedups / efficiencies were not earth-shattering, we did manage to overcome the memory bottlenecks. Does anyone know if PCL can also handle trees that are decomposed in parallel? Would PCL work with its own MPI communicator and automate the communication needed for the searches?. Cheers,. Juan. On Jun 5, 2016, at 4:06 AM, Thomas D. Economon <notifications@github.com<mailto:notifications@github.com>> wrote:. Indeed, at the moment, we are relying on brute force searches. We have discussed using tree searches internally (and potentially have some reusable code available for this), but nothing has been implemented. It looks like pointcloud is released under a BSD license, which is very permissive. Do you have an implementation in SU2 already with this code embedded? It is also fairly straightforward for us to add hooks in the configure process to installed libraries on your system. —; You are receiving this because you are subscribed to this thread.; Reply to this email directly, view it on GitHubhttps://github.com/su2code/SU2/issues/282#issuecomment-223807001, or mute the threadhttps://github.com/notifications/unsubscribe/ADpSxPh8ni-GpSN-zKjD9Nyi47sf5sqZks5qIq2jgaJpZM4ItVbi.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/282#issuecomment-223861540:1687,release,released,1687,https://su2code.github.io,https://github.com/su2code/SU2/issues/282#issuecomment-223861540,2,"['install', 'release']","['installed', 'released']"
Deployability,"ehensive set of V&V cases for SU2 that can showcase it's performance in comparison to other solvers. . I think the the [NASA TMR website](https://turbmodels.larc.nasa.gov/index.html) is a good model to base it on. The idea would be to present the V&V case, provide working configuration and mesh files, and provide results comparing performance to other solvers and to higher fidelity data (when available). This allows people to see the performance of SU2 and replicate it, if need be. . The first step would be compiling a list of cases that should be covered. The [SU2 2014 SciTech paper](https://su2code.github.io/documents/SU2_AIAA_SciTech2014.pdf) would be a good starting point as it already had a couple of validation cases. This list can be bolstered with some of the NASA TMR cases, and with grid convergence studies. I would like to propose an initial list that the community can talk through and make changes as we see fit. I am mostly only familiar with canonical CFD flows that are used in these cases. But it would be great to have other cases, such as Turbo-machinary or FSI cases, that show the full breadth of SU2's abilities. This is by no means an exhaustive list:. 1. Zero Gradient Flat Plate; 2. 2D and 3D Bump in Channel; 3. Asymmetric Diffuser; 4. Backward facing step; 5. Unsteady Square cylinder; 6. NACA0012; 7. NACA4412 Trailing Edge Seperation; 8. Joukowski Airfoil; 9. 30P30N High Lift airfoil; 10. ONERAM6 Wing; 11. NASA CRM; 12. Subsonic and Supersonic Jets. It would be ideal for these test cases to have either high-fidelity data (wind tunnel tests, or LES/DNS data), and/or published results of other solvers so that comparisons can be made. . I also want to point out the difference between this and the TestCases repository. The TestCases repo is used in regression tests to ensure that parts of the code don't break when changes are made. This is more a test of SU2's fidelity. It would feature large grids and configuration files that can be run to convergence.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/581:2088,configurat,configuration,2088,https://su2code.github.io,https://github.com/su2code/SU2/issues/581,1,['configurat'],['configuration']
Deployability,"els (and the other solvers probably); - code this common interface and push all turb-specific things back into the respective files (that is why I didn't `git mv` ). In order to keep this somewhat limited I would focus on porting the Turbsolvers to the new structure (however that might look, but looking at #1223 is what I'll do first) and maybe a simple transported passive scalar or so. We want the turb solver to be integrated under that Scalar-class which is arguably what most/all people use, that's why I want to have in this work at the beginning. We also have quite a few RANS Testcases so it is directly visible if something in the actual computation is changed. In case there are comments, ideas foreseeable stepping stones from experience please let me know here. ## Related Work; #777 by @economon which is the initial push towards this separate scalar solver class for additionally transported scalars (not merged); #1223 by @danielmayer @bigfooted which builds up on #777 and extends it to its needs (but does not support the turb solvers e.g.); #1226 by @oleburghardt - In this PR is a discussion on creating the structure which this (and following) PR('s) try to achieve; #1332 by @mheimgartner - implementing multi component flow (or analytic mixing properties of said multicomp flow). That PR is built upon #1223 but will merge this PR (once it is done) and throw out all additional changes in order to be merged into develop without relying on feature_flamelet. ## PR Checklist. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1330:2988,update,updated,2988,https://su2code.github.io,https://github.com/su2code/SU2/pull/1330,1,['update'],['updated']
Deployability,"ementation we introduce 2 additional transported scalars: the progress variable **c** and the total enthalpy **h**. All fluid properties like density, viscosity, temperature, diffusivity, reaction source terms, etc. are obtained from a lookup table that is made by the user with external 1D detailed chemistry codes like Cantera. Since temperature is now a dependent variable, we do not need to solve the regular temperature equation. However, We keep the SU2 temperature field and simply write our lookup temperature T(c,h) into this field. . As a 'limiting case', a nonreacting passive scalar transport equation has also been implemented. All fluid properties for this passive scalar are constant, but this passive scalar can be easily extended to model nonreacting mixing flows of two fluids with different properties. This model has also been verified to work together with turbulence, although no turbulence chemistry interaction has been implemented for this WIP. . ## Related Work; This PR implements a generic scalar transport framework which can be aligned with other physics models that make use of transported scalars, e.g. turbulence models. It furthermore implements a generic lookup table framework that can be used as a basis for lookup table based physics models, such as real gas models. ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [ ] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary. ## Notes; As indicated, this is work in progress. The code compiles and runs with a test case but is far from being clean. Side effects in non-flamelet simulations might occur.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1223:2309,update,updated,2309,https://su2code.github.io,https://github.com/su2code/SU2/pull/1223,1,['update'],['updated']
Deployability,"ence over the rebase. ---. [//]: # (dependabot-end). Bumps [actions/upload-release-asset](https://github.com/actions/upload-release-asset) from 1.0.1 to 1.0.2.; <details>; <summary>Release notes</summary>; <p><em>Sourced from <a href=""https://github.com/actions/upload-release-asset/releases"">actions/upload-release-asset's releases</a>.</em></p>; <blockquote>; <h2>Automate sliding major version number</h2>; <p>This is a minor update to make the current release have the latest code from master, and additionally allows for a new automation workflow to execute to automate the sliding of the major (v1, v2, v3, etc) version numbers for ease of referencing</p>; </blockquote>; </details>; <details>; <summary>Commits</summary>; <ul>; <li><a href=""https://github.com/actions/upload-release-asset/commit/e8f9f06c4b078e705bd2ea027f0926603fc9b4d5""><code>e8f9f06</code></a> Merge pull request <a href=""https://github-redirect.dependabot.com/actions/upload-release-asset/issues/27"">#27</a> from actions/IAmHughes/add-automated-versioning</li>; <li><a href=""https://github.com/actions/upload-release-asset/commit/14187540b829095dbe6f33eb1b166503318e9ceb""><code>1418754</code></a> Add versioning action to automatically slide major versions with releases</li>; <li><a href=""https://github.com/actions/upload-release-asset/commit/7d8fb6c931cb341bda0f898a0d2191cf54abc69a""><code>7d8fb6c</code></a> Merge pull request <a href=""https://github-redirect.dependabot.com/actions/upload-release-asset/issues/6"">#6</a> from actions/IAmHughes/fix-link-to-license</li>; <li><a href=""https://github.com/actions/upload-release-asset/commit/c53f077c5d8c19236718abc4697a59634ef534cf""><code>c53f077</code></a> Fix link to LICENSE</li>; <li><a href=""https://github.com/actions/upload-release-asset/commit/72e8a5ef036620fb7afff8bbb8f9e78910c7ccbc""><code>72e8a5e</code></a> Merge pull request <a href=""https://github-redirect.dependabot.com/actions/upload-release-asset/issues/5"">#5</a> from cesperanc/documentation-update</li>",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1754:1174,release,release-asset,1174,https://su2code.github.io,https://github.com/su2code/SU2/pull/1754,1,['release'],['release-asset']
Deployability,"ense to have an updated value for the limiter. However this is not 100% accurate because we are using old gradients to compute the new limiter. Anyway, the spirit is to have a limiter computed using the latest flow variables value and we should probably check that the gradients have been also updated before computing limiters again for the turbulence equation. What I don't really like is Upwind_Residual. ` bool limiter = (config->GetSpatialOrder() == SECOND_ORDER_LIMITER);; `. in this case we are using only the info about limiters or not in the turbulence model... so if, for example, we are using JST for the mean flow equations then the limiter for the flow equations have never been computed and. ```; if (limiter) {; FlowPrimVar_i[iVar] = V_i[iVar] + Limiter_i[iVar]*Project_Grad_i;; FlowPrimVar_j[iVar] = V_j[iVar] + Limiter_j[iVar]*Project_Grad_j;; }. ``` . Is incorrect because Limiter_i has never been computed (if we are lucky maybe we are using a zero value by default... but we need to check). In other words, I think this require a deeper look. @jschuele, could you please think on this and submit a new pull request (I'll close this one). If you don't have time, please let me know and we really appreciate if you could add this situation as an Issue. We'll try to fix this problem as soon as possible. By the way the initial confusion was that the SpatialOrder in . ` config->GetSpatialOrder(); `; is updated in ; ```; void CConfig::SetGlobalParam(unsigned short val_solver,; unsigned short val_system,; unsigned long val_extiter) {; ```. so it will change during runtime and as we are solving the turbulence model . `config->GetSpatialOrder()` is the same as `config->GetSpatialOrder_Turb()`. in ; `void CTurbSASolver::Preprocessing(CGeometry *geometry, CSolver **solver_container, CConfig *config, unsigned short iMesh, unsigned short iRKStep, unsigned short RunTime_EqSystem, bool Output) {`. @jschuele and @paulhzhang thanks a lot for working with us on SU2!; Best,; Francisco",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/403#issuecomment-320490588:2058,update,updated,2058,https://su2code.github.io,https://github.com/su2code/SU2/pull/403#issuecomment-320490588,1,['update'],['updated']
Deployability,"ent for make and is used to execute the compiler and to resolve dependencies. Meson uses ninja as the default backend. So instead of using configure + make, we use meson + ninja. As with meson, we can ship it as a submodule. It needs a compilation, but again it has no dependencies apart from python. ### How to use ?; The correct meson and ninja versions are added as git submodules. So in case you don't have meson and ninja installed (there should be packages available for all major distros), compile ninja using:. ```; cd externals/ninja; ./configure.py --bootstrap; cd ..; export PATH=$PWD/externals/ninja:$PWD/externals/meson:$PATH; ```; and run meson using; ```; meson.py build --prefix=$PWD -Denable-pywrapper=true -Denable-autodiff=true; ```; to ocnfigure SU2 with the python wrapper and AD support enabled. MPI support will be enabled by default if a proper mpi installation can be found. ; Finally compile the code with; ```; ninja -C build; ```. - ""build"" in the commands above is a folder where the configuration will be stored. You can configure multiple directories with different configurations (like for a debug build etc); - ninja uses all available cores in your system by default. Still you can set the number of jobs using `-j N`. ### Additional notes; - Meson requires python 3, so implicitly we get this requirement now. But I think it is less of a problem than some of you probably might think. A lot of problems we have come from the fact the we support python 2 and python 3. As I was setting up travis (getting there in a moment) I noticed that is easily possible to compile the code with python 3 (for the python wrapper) and run the python scripts with python 2 and vice versa, which eventually leads to errors and crashes. If we require(!) version 3 (which should be installed on all machines now ...) we can avoid such problems from the beginning. Furthermore, python 2 is deprecated anyway ... - I already changed travis to use the new build system. This as one major",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/745:1957,configurat,configuration,1957,https://su2code.github.io,https://github.com/su2code/SU2/pull/745,1,['configurat'],['configuration']
Deployability,"ent to 2° = approx doubling of the lift coefficient; - [x] ~~gust + moving grid --> plausibility check by comparison with farfield onflow condition from above~~; - [x] ~~new python interface for grid movement update --> plausibility check with a) sudden jump in heave velocity w, b) sinusoidal velocity w at different frequencies to observe influence of unsteady aerodynamics (phase shift and reduction of resulting lift)~~; - [x] mesh deformation via python interface --> plausibility check with sinusoidal displacement z, scaled and shifted by 90° to correspond to velocity w from above, leads to same results; - [ ] ~~mesh deformation + moving grid --> differences with respect to farfield onflow condition / does NOT lead to same results as above. The grid velocities look right though, both on the temporary screen output and when plotting them by slicing through the volume results, but the amplitude of the lift coefficient is too small. I guess that the velocities are not set properly / mixed up / require a call to some update function or similar. **I'm stuck at this point. Does someone have any idea what I'm doing wrong?? I feel that I am missing an important step here...**~~; - [ ] ~~final test: mesh deformation + moving grid + gust~~; - [x] final test: mesh deformation + gust. Apart from the steps above, the following questions / tasks remain:; - [ ] ~~The the Split Velocity Method (classes SetWind_GustField and CSourceWindGust) is not used in SU2 as far a I understand and for all gust types, the inputs are zero. Instead, the Field Velocity Method is used, but when trying to remove the functions SetWindGust and SetWindGustDer, I broke the code elsewhere. In order to enable 3D meshes, I simply set the outputs to zero for now. I believe that we should clean up the code, but my C++ skills are the limiting factor here, so I need some help with that.~~ --> In a new, dedicated pull request. ## Related Work; The gust encounter for 3D meshes was requested in #1319 and in the Fo",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1954:2931,update,update,2931,https://su2code.github.io,https://github.com/su2code/SU2/pull/1954,1,['update'],['update']
Deployability,"eps for unsteady problems.; * Loop over the number of pseudo-time steps for implicit time integration schemes; (DT_STEPPING_1ST and DT_STEPPING_2ND). For other cases this loop is 1.; * Loop over the number of disciplines involved; Call iterate for each of the disciplines.; In iterate:; * Loop over the (Runge-Kutta) stages; * Loop over the zones of a single discipline; Compute spatial residual.; Update the state vector.; * End loop over the zones of a single discipline.; Exchange halo data. This includes the halo data between zones of a single discipline.; * End loop over the (Runge-Kutta) stages; * End loop over the disciplines; * End loop over the pseudo time steps.; * End loop over the number of iterations, or time steps for unsteady problems. The weakness of this approach is that it still does not work when one would like to employ multi-stage time integration schemes for an unsteady, multi-disciplinary problem (does not work for the current implementation either), but maybe this is something we simply have to accept. The alternative is that all the details of the different time integration schemes have to be moved to the driver classes, which is highly undesirable, I think. The structure above implies that the iteration_container and the integration_container should be defined per discipline and not per zone anymore. The geometry_container and solver_container should still be defined per zone. Well, I suppose this leaves plenty of room for discussion, so I would say to continue the online discussion a bit further, such that things become a bit clearer how to tackle this issue. After that having a telecon would be good to iron out the details. Regards,. Edwin. —; You are receiving this because you are subscribed to this thread.; Reply to this email directly, view it on GitHub<https://github.com/su2code/SU2/issues/437#issuecomment-328368371>, or mute the thread<https://github.com/notifications/unsubscribe-auth/ADpSxHiNAbZtzVEvIm0XDsNvQmZ6lrwwks5shEHjgaJpZM4PQ90s>.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/437#issuecomment-328403160:3260,integrat,integration,3260,https://su2code.github.io,https://github.com/su2code/SU2/issues/437#issuecomment-328403160,2,['integrat'],['integration']
Deployability,"epts in Aeronautics at Tech. Inst. of Aeronautics. |; -------------------------------------------------------------------------; | Copyright 2012-2018, Francisco D. Palacios, Thomas D. Economon, |; | Tim Albring, and the SU2 contributors. |; | |; | SU2 is free software; you can redistribute it and/or |; | modify it under the terms of the GNU Lesser General Public |; | License as published by the Free Software Foundation; either |; | version 2.1 of the License, or (at your option) any later version. |; | |; | SU2 is distributed in the hope that it will be useful, |; | but WITHOUT ANY WARRANTY; without even the implied warranty of |; | MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU |; | Lesser General Public License for more details. |; | |; | You should have received a copy of the GNU Lesser General Public |; | License along with SU2. If not, see <http://www.gnu.org/licenses/>. |; -------------------------------------------------------------------------. Build Configuration Summary:. Source code location: /home/bu/SU2; Install location: 	 /home/bu/SU2; Version: 6.1.0; C++ Compiler: /usr/lib64/mpich/bin/mpicxx; C Compiler: /usr/lib64/mpich/bin/mpicc; Preprocessor flags: -DHAVE_MPI ; Compiler flags: -O3 -Wall; Linker flags: ; MPI support: yes; Metis support: yes; Parmetis support: yes; TecIO support: no; CGNS support: yes; HDF5 support: no; SZIP support: no; ZLIB support: no; Mutation++ support: no; Jsoncpp support: 	 no; LAPACK support: no; Datatype support:; double no; complex no; codi_reverse yes; codi_forward no. External includes: -DHAVE_CGNS -I$(top_srcdir)/externals/cgns -I$(top_srcdir)/externals/cgns/adf -DHAVE_PARMETIS -I$(top_srcdir)/externals/parmetis/include -DHAVE_METIS -I$(top_srcdir)/externals/metis/include ; External libs: $(top_builddir)/externals/cgns/libcgns.a $(top_builddir)/externals/parmetis/libparmetis.a $(top_builddir)/externals/metis/libmetis.a . Build SU2_CFD: yes; Build SU2_DOT: yes; Build SU2_MSH: no; Build SU2_DEF: no; Bui",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/587:8756,Configurat,Configuration,8756,https://su2code.github.io,https://github.com/su2code/SU2/issues/587,1,['Configurat'],['Configuration']
Deployability,"er and AD support enabled. MPI support will be enabled by default if a proper mpi installation can be found. ; Finally compile the code with; ```; ninja -C build; ```. - ""build"" in the commands above is a folder where the configuration will be stored. You can configure multiple directories with different configurations (like for a debug build etc); - ninja uses all available cores in your system by default. Still you can set the number of jobs using `-j N`. ### Additional notes; - Meson requires python 3, so implicitly we get this requirement now. But I think it is less of a problem than some of you probably might think. A lot of problems we have come from the fact the we support python 2 and python 3. As I was setting up travis (getting there in a moment) I noticed that is easily possible to compile the code with python 3 (for the python wrapper) and run the python scripts with python 2 and vice versa, which eventually leads to errors and crashes. If we require(!) version 3 (which should be installed on all machines now ...) we can avoid such problems from the beginning. Furthermore, python 2 is deprecated anyway ... - I already changed travis to use the new build system. This as one major advantage: we can now properly use ccache and the caching feature of travis (that means only files that have changed will be compiled if a cache is available). This should speed up the runs by a lot. . - automake and meson can coexist without any problems. Maybe we can keep this compatibility for version 7 and remove it later if we all agree. Also the preconfigure.py should not be necessary anymore then. - (unit) tests can be easily added and integrated into the build process. - I will add a proper documentation soon. ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. #685 . ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any qu",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/745:2742,install,installed,2742,https://su2code.github.io,https://github.com/su2code/SU2/pull/745,1,['install'],['installed']
Deployability,erPackages/SU2_INSTALL_NEW/bin/SU2/mesh; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/mesh/tools.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/mesh; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/mesh/__init__.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/mesh; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/opt/project.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/opt; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/opt/scipy_tools.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/opt; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/opt/__init__.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/opt; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/run/adaptation.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/run; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/run/adjoint.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/run; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/run/deform.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/run; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/run/direct.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/run; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/run/interface.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/run; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/run/merge.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/run; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/run/geometry.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/run; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/run/projection.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/run; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/run/__init__.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/run; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/991#issuecomment-632032044:6632,Install,Installing,6632,https://su2code.github.io,https://github.com/su2code/SU2/issues/991#issuecomment-632032044,1,['Install'],['Installing']
Deployability,"erical scheme or the other options are changed. Which configuration file would you want?; > > By any chance, are you implementing or developing a transition model? Can you tell me what model you are willing to use if it's a model implementation? My next goal is to implement the AFT model or the k-w-gamma model, but I'm trying to implement a k-w-gamma model because it seems like the AFT model is being implemented by the other developer.; > ; > If you could send me the config files for the T3A, T3A- and NLF test cases it would be awesome!; > ; > I have implemented the same model as yours, the LM model, in parallel to you 'cause I needed it for some simulations. I also tried implementing the same version but related to the SA turbulence model, however it still is bothering me that I cannot seem to get good results on it.; > ; > If you want, I also tried the prolate spheroid test-case with good results. If you need I can give the configs and the meshes. The only thing about this test-case is that it is more related to the cross-flow transition, thus it needs to be implemented, which I think I'll do in these days.; > ; > I think that the k-w-gamma model is the way to go right after the implementation of the LM model since it has lots of equations in common. Do you think that you need another class for it or you will write on the same classes that you have already built (like the CTransLMSolver)?. The test case(T3A, T3A-, and NLF-0416) configuration files were uploaded to my git repository. Here is the [link](https://github.com/sun5k/SU2/tree/develop/TestCases/transition ). Suggestions for the prolate spheroid test-case is appreciated. However, my transition model is the LM-2009, and I have no plans for the 2015-LM model. Therefore, the cross-flow transition is left for future developers. I think the CTransGammaSolver, CTransGSolver, or the other name of classes will be added for the k-w-gamma transition model. It's a vague idea, I haven't really thought about detail yet.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1592#issuecomment-1201919830:1784,configurat,configuration,1784,https://su2code.github.io,https://github.com/su2code/SU2/pull/1592#issuecomment-1201919830,1,['configurat'],['configuration']
Deployability,"erify it try opening a python shell, checking the version displayed (should be your 3.7.8) and try `import pyamg` in the shell. If the ""No such file or directory"" error shows up, it means pyamg was not correctly installed; otherwise it is in fact installed. In the latter case, you can check if your python is configured to enable shared libraries. To do it, according to [this](https://stackoverflow.com/questions/23201498/how-to-check-if-python3-was-built-with-enable-shared), in the python shell you can type ; `import sysconfig`; `sysconfig.get_config_vars('Py_ENABLE_SHARED')`; If the result is `[0]`, ie ""False"", you have to build python with the option `--enable-shared`. ; Now, I don't know how to do accomplish that with conda, but with [pyenv](https://github.com/pyenv/pyenv) it involves installing the desired python version with `CONFIGURE_OPTS=--enable-shared pyenv install <version>`. To recap, a ""workflow for newbies"" which appears to be working for me is. 1. install pyenv either from [source](https://github.com/pyenv/pyenv#installation) or from your distibution repositories, if available. IMPORTANT: make sure the environment variables are correctly set and `pyenv init` is added to your shell, as per the installation instructions.; 2. install the desired python version (for example 3.7.8), enabling shared libraries: ; `CONFIGURE_OPTS=--enable-shared pyenv install 3.7.8`; 3. clone/download the [feature_adap](https://github.com/su2code/SU2/tree/feature_adap) branch of SU2;; 4. in the SU2 folder, configure meson ; `./meson.py build` ; and make sure to update the environment variables in your `.bashrc` as indicated by meson's output.; 5. use ninja to build and install SU2 ; `./ninja -C build install`;; if you run into a permission error, specify an installation directory passing the `--prefix` option to meson, as explained [here](https://www.cfd-online.com/Forums/su2-installation/227676-su-installation-failed-due-insufficient-permissions.html). These passages, at least",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/948#issuecomment-751823130:1088,install,install,1088,https://su2code.github.io,https://github.com/su2code/SU2/issues/948#issuecomment-751823130,1,['install'],['install']
Deployability,"ersion: 7.0.3 ""Blackbird""; C compiler for the host machine: /usr/lib64/openmpi/bin/mpicc (gcc 8.3.1 ""gcc (GCC) 8.3.1 20191121 (Red Hat 8.3.1-5)""); C linker for the host machine: GNU ld.bfd 2.30-79; C++ compiler for the host machine: /usr/lib64/openmpi/bin/mpicxx (gcc 8.3.1 ""g++ (GCC) 8.3.1 20191121 (Red Hat 8.3.1-5)""); C++ linker for the host machine: GNU ld.bfd 2.30-79; Host machine cpu family: x86_64; Host machine cpu: x86_64; Program python3 found: YES (/home/tjim/anaconda3/envs/sound/bin/python); Run-time dependency MPI for c found: YES 4.0.3; Run-time dependency MPI for cpp found: YES 4.0.3; WARNING: Use the 'pic' kwarg instead of passing '-fpic' manually to 'meshb7'; Message: Boost sources found.; Run-time dependency mkl-static-lp64-seq found: YES 2020 Update 4; Program swig found: YES (/home/tjim/anaconda3/envs/sound/bin/swig); Message: Using mpi4py from /home/tjim/anaconda3/envs/sound/lib/python3.7/site-packages/mpi4py/include; Run-time dependency python3 found: YES 3.6; Program install.sh found: YES (/bin/sh /opt/su2/SU2_src/SU2_PY/pySU2/install.sh); Message: -------------------------------------------------------------------------; | ___ _ _ ___ |; | / __| | | |_ ) Release 7.0.3 ""Blackbird"" |; | \__ \ |_| |/ / |; | |___/\___//___| Meson Configuration Summary |; | |; -------------------------------------------------------------------------; ; Option Value; ---------------------; TecIO: true; CGNS: true; AD (reverse): true; AD (forward): true; Python Wrapper: true; Intel-MKL: true; OpenBlas: false; PaStiX: false. Please be sure to add the $SU2_HOME and $SU2_RUN environment variables,; and update your $PATH (and $PYTHONPATH if applicable) with $SU2_RUN. Based on the input to this configuration, add these lines to your .bashrc file:. export SU2_RUN=/opt/su2/SU2v7_adap/bin; export SU2_HOME=/opt/su2/SU2_src; export PATH=$PATH:$SU2_RUN; export PYTHONPATH=$PYTHONPATH:$SU2_RUN. Use './ninja -C build install' to compile and install SU2. Build targets in project: 19; ",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/948#issuecomment-751431778:2168,install,install,2168,https://su2code.github.io,https://github.com/su2code/SU2/issues/948#issuecomment-751431778,1,['install'],['install']
Deployability,"es &amp; optimizations</li>; </ul>; <h2>v2.2.4</h2>; <ul>; <li>Retry on HTTP 500 responses from the service</li>; </ul>; <h2>v2.2.3</h2>; <ul>; <li>Fixes for proxy related issues</li>; </ul>; <h2>v2.2.2</h2>; <ul>; <li>Improved retryability and error handling</li>; </ul>; <h2>v2.2.1</h2>; <ul>; <li>Update used actions/core package to the latest version</li>; </ul>; <h2>v2.2.0</h2>; <ul>; <li>Support for artifact retention</li>; </ul>; <h2>v2.1.4</h2>; <ul>; <li>Add Third Party License Information</li>; </ul>; <h2>v2.1.3</h2>; <ul>; <li>Use updated version of the <code>@action/artifact</code> NPM package</li>; </ul>; <h2>v2.1.2</h2>; <ul>; <li>Increase upload chunk size from 4MB to 8MB</li>; <li>Detect case insensitive file uploads</li>; </ul>; <h2>v2.1.1</h2>; <ul>; <li>Fix for certain symlinks not correctly being identified as directories before starting uploads</li>; </ul>; <h2>v2.1.0</h2>; <ul>; <li>Support for uploading artifacts with multiple paths</li>; <li>Support for using exclude paths</li>; <li>Updates to dependencies</li>; </ul>; <!-- raw HTML omitted -->; </blockquote>; <p>... (truncated)</p>; </details>; <details>; <summary>Commits</summary>; <ul>; <li><a href=""https://github.com/actions/upload-artifact/commit/3cea5372237819ed00197afe530f5a7ea3e805c8""><code>3cea537</code></a> Merge pull request <a href=""https://github-redirect.dependabot.com/actions/upload-artifact/issues/327"">#327</a> from actions/robherley/artifact-1.1.0</li>; <li><a href=""https://github.com/actions/upload-artifact/commit/849aa7758a428ee22be38de371b49c8bd57c4b9d""><code>849aa77</code></a> nvm use 12 &amp; npm run release</li>; <li><a href=""https://github.com/actions/upload-artifact/commit/4d3986961d0423ba9a593efb490a2960eb65f43b""><code>4d39869</code></a> recompile with correct ncc version</li>; <li><a href=""https://github.com/actions/upload-artifact/commit/2e0d362ec5cf81e334dda822c49c96dcd4b7df2c""><code>2e0d362</code></a> bump <code>@​actions/artifact</code> to 1.1.0</li>; <li><a href=""",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1756:2307,Update,Updates,2307,https://su2code.github.io,https://github.com/su2code/SU2/pull/1756,1,['Update'],['Updates']
Deployability,"es are definitely validation cases too. We can continue to add test cases to the TestCases repo, knowing that only a subset of those cases belong in the V&V list. 2. An important aspect of the V&V is the convergence of the solution as the mesh is refined. As Jayant knows well, this can help us catch bugs. This means that a well-constructed V&V suite needs to include a series of meshes (of increasing density), the corresponding configuration files, and the actual experimental data (or other numerical data from runs on different solvers). I strongly agree with the suggestions made that (a) the entire V&V suite needs to be run before every major release (with configuration files updated), (b) that this should be linked form the main SU2 page, (c) that the 2014 AIAA paper (and Tom’s AVIATION 2018 paper) should serve as a starting point, (d) that the NASA TMR website can give us ideas of additional access, and (e) that the SU2 V&V page should be managed within GitHub.com<http://GitHub.com> so the entire community can edit / add to this / these page/s to continue to grow the number of cases and their relevance. Best,. Juan. On Sep 20, 2018, at 3:02 AM, Ruben Sanchez <notifications@github.com<mailto:notifications@github.com>> wrote:. Thanks, Pedro, I think that's a great idea. As you mention, we would have to work out the logistics as this would require quite a bit of implication from the community, but the extra burden on the release would be compensated by avoiding big ""updating"" operations every now and then. Also as most users only work with the released versions, so it's a way to ensure they always know what updates have happened / which new features are available. —; You are receiving this because you are subscribed to this thread.; Reply to this email directly, view it on GitHub<https://github.com/su2code/SU2/issues/581#issuecomment-423122949>, or mute the thread<https://github.com/notifications/unsubscribe-auth/ADpSxJzh9dwbOM_5DoymCA6lAIqv3biyks5uc2eqgaJpZM4Ww0V4>.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/581#issuecomment-423207120:1624,release,release,1624,https://su2code.github.io,https://github.com/su2code/SU2/issues/581#issuecomment-423207120,3,"['release', 'update']","['release', 'released', 'updates']"
Deployability,"es is not a standard use case. #### The symptoms. When building SU2 with the python wrapper you'll see the following error during the swig build:; ```; <install directory>/../SU2_PY/pySU2/pySU2.i:64: Error: Unable to find 'mpi4py/mpi4py.i'; ```; But mpi4py is indeed installed on your system and it's on your python path, as confirmed by opening a python terminal and running `import mpi4py`. #### The easiest workaround. Switch to a [virtualenv](https://packaging.python.org/guides/installing-using-pip-and-virtual-environments/). This will ensure that all of your python packages are stored in single location. #### Alternate workaround. In this method, you change the hardcoded includes to match mpi4py's package location. First I figure out where my mpi4py is installed. I start a terminal session of python using the python environment I want to use (in this case, it's python 3.6), and then run:; ```; from mpi4py import MPI; MPI; ```. Since I have mpi4py installed on your system and it's on my python path, I see something like:; ```; <module 'mpi4py.MPI' from '/home/clarkpede/.local/lib/python3.6/site-packages/mpi4py/MPI.cpython-34m.so'>; ```. The `/home/clarkpede/.local/lib/python3.6/` directory is where my mpi4py package is installed. But the swig compile command includes `/home/clarkpede/.local/lib/python2.7/`. That's not the right directory! So first I find the hardcoded paths of the makefile by running (on a bash terminal):; ```; grep -rn python2\.7 SU2_PY/ ; ```; On my system, this prints out four lines. I don't care about the `Makefile.in` files, because those are generated automatically and will be overwritten every time I run ""configure"" or ""preconfigure.py."" The `NUMPY_INCLUDE` line is also commented out, so I ignore that too. That leaves me with one line, line 51 of `SU2_PY/pySU2/Makefile.am`:. ```; SU2_PY/pySU2/Makefile.am:51:MPI4PY_INCLUDE = ${HOME}/.local/lib/python2.7/site-packages/mpi4py/include \; ```. I now modify line 51 of Makefile.am to read:. ```; MPI",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/722#issuecomment-515693590:1591,install,installed,1591,https://su2code.github.io,https://github.com/su2code/SU2/issues/722#issuecomment-515693590,2,['install'],['installed']
Deployability,"es/27"">#27</a> from actions/IAmHughes/add-automated-versioning</li>; <li><a href=""https://github.com/actions/upload-release-asset/commit/14187540b829095dbe6f33eb1b166503318e9ceb""><code>1418754</code></a> Add versioning action to automatically slide major versions with releases</li>; <li><a href=""https://github.com/actions/upload-release-asset/commit/7d8fb6c931cb341bda0f898a0d2191cf54abc69a""><code>7d8fb6c</code></a> Merge pull request <a href=""https://github-redirect.dependabot.com/actions/upload-release-asset/issues/6"">#6</a> from actions/IAmHughes/fix-link-to-license</li>; <li><a href=""https://github.com/actions/upload-release-asset/commit/c53f077c5d8c19236718abc4697a59634ef534cf""><code>c53f077</code></a> Fix link to LICENSE</li>; <li><a href=""https://github.com/actions/upload-release-asset/commit/72e8a5ef036620fb7afff8bbb8f9e78910c7ccbc""><code>72e8a5e</code></a> Merge pull request <a href=""https://github-redirect.dependabot.com/actions/upload-release-asset/issues/5"">#5</a> from cesperanc/documentation-update</li>; <li><a href=""https://github.com/actions/upload-release-asset/commit/bf2a7fbecfaaaa29f7819c650ad302e52f68238e""><code>bf2a7fb</code></a> Update example to use the fixed version</li>; <li>See full diff in <a href=""https://github.com/actions/upload-release-asset/compare/v1.0.1...v1.0.2"">compare view</a></li>; </ul>; </details>; <br />. [![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=actions/upload-release-asset&package-manager=github_actions&previous-version=1.0.1&new-version=1.0.2)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores). Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`. [//]: # (dependabot-automerge-start); [//]: # (dependabot-automerge-end). ---. <details>; <summary>Dependabot comman",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1737:1876,release,release-asset,1876,https://su2code.github.io,https://github.com/su2code/SU2/pull/1737,6,"['release', 'update']","['release-asset', 'update']"
Deployability,es/SU2_INSTALL_NEW/bin/SU2/run; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/run/projection.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/run; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/run/__init__.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/run; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/util/bunch.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/util; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/util/filter_adjoint.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/util; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/util/lhc_unif.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/util; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/util/misc.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/util; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/util/mp_eval.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/util; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/util/ordered_bunch.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/util; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/util/ordered_dict.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/util; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/util/plot.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/util; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/util/polarSweepLib.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/util; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/util/which.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/util; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/util/switch.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/util; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/util/__init__.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/util; Installing /home/slimshady/UserPacka,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/991#issuecomment-632032044:8268,Install,Installing,8268,https://su2code.github.io,https://github.com/su2code/SU2/issues/991#issuecomment-632032044,1,['Install'],['Installing']
Deployability,"est case are presented. Two configurations of CFL adaptation were tested on both the original and modified lower limit code, ; 1. CFL_ADAPT_PARAM= ( 0.99, 1.005, 5.0, 50.0, 0.0001 ) named max CFL 50 ; 2. CFL_ADAPT_PARAM= ( 0.99, 1.05, 5.0, 200.0, 0.0001 ) named max CFL 200. ![rms Rho](https://github.com/su2code/SU2/assets/139676851/6481464c-6da3-4565-8415-d19d9ea211ab). ![rms k](https://github.com/su2code/SU2/assets/139676851/e1582ea2-f77e-4814-9eda-dd41c006aabf). we point out that beyond the change in maximum CFL, also the acceleration rate is changed. . Beyond adding robustness allowing the the use of a CFL of 200 which diverges under the original limit , the modified limit allows for better convergence of the flow and turbulence residuals for CFL of 50. Plots of the Lift and drag Coefficients are added here showing that results are not affected by the new limit, and additionally convergence is slightly quicker for the lift coefficient even with a CFL of 50 . . ![CL](https://github.com/su2code/SU2/assets/139676851/61adc0af-9449-41e8-aac7-e985ca3c9bdb); ![CD](https://github.com/su2code/SU2/assets/139676851/17b877df-7eff-47d4-9a77-95e3ccd2afcd). ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [X] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [X] I used the pre-commit hook to prevent dirty commits and used `pre-commit run --all` to format old commits.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2323:3274,update,updated,3274,https://su2code.github.io,https://github.com/su2code/SU2/pull/2323,1,['update'],['updated']
Deployability,"et BC; - Minor change; - Merge remote-tracking branch 'upstream/develop' into develop; - adjoints, solid boundary, doxygen in config; - continued fixing; - re-added adjoint bc mods; - re-adding avg outlet pressure (static pressure adjoint); - re-adding avg outlet pressure (static pressure adjoint); - Merge branch 'temp' of https://github.com/hlkline/SU2 into temp; - continued fixing; - average total pressure and fixes to avg outlet pressure; - adding stagnation pressure output to SU2_DOT; - Merge pull request #146 from hlkline/temp; - Updated Entropy fix (now it is active).; - Another change in BC_Engine_Exhaust; - Updated CGNS in parallel; - Added runtime file; - Small typo; - Adjustment of the Entropy fix coefficient; - Bug in SU2_GEO; - Debug version with print statements.; - Updated release 3.2.7.1; - Small change; - Updated config file; - Code update; - MPI Status and Request fix.; - Another MPI Status/Request fix.; - Actuator disk update.; - Small update; - Initial implementation of pyramids and prisms for Tecplot binary.; - Small fix for Tecplot binaries. Closes #56. Closes #57.; - Removed extra allocation related to markers during partitioning.; - Non-working version; - Small update; - Updated memory deallocation.; - Merge branch 'feature_MarkerMax' into develop; - Time and date in the header.; - Small fix to the latest commit.; - Simplification of entropy correction; - Critical stability improvement.; - Minor release 3.2.7.2; - Fixing issues to run with the latest intel compiler; - Fix for Tecplot binary solutions for unsteady flows. Fixes #150.; - Now SU2 should work with the latest version of the Intel compiler.; - Merge branch 'develop' of https://github.com/su2code/SU2 into develop; - Working on the O3 stuff; - Small change.; - Add another check to improve stability.; - Collection of improvements.; - Updated actuator disk; - Merge branch 'develop' of https://github.com/su2code/SU2 into develop; - Preliminary implementation of the Neg SA; - Minor updates;",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/174#issuecomment-101443812:4233,update,update,4233,https://su2code.github.io,https://github.com/su2code/SU2/pull/174#issuecomment-101443812,2,['update'],['update']
Deployability,"etails>; <details>; <summary>Commits</summary>; <ul>; <li><a href=""https://github.com/mheap/github-action-required-labels/commit/4e9ef4ce8c697cf55716ecbf7f13a3d9e0b6ac6a""><code>4e9ef4c</code></a> Automatic compilation</li>; <li><a href=""https://github.com/mheap/github-action-required-labels/commit/18f57d781fe045548933f7465750a46e9994f1fd""><code>18f57d7</code></a> Allow labels to be provided one per line in input</li>; <li><a href=""https://github.com/mheap/github-action-required-labels/commit/1b8424df557fae55fef867af22d5d0625fe6742f""><code>1b8424d</code></a> Update README to v5</li>; <li><a href=""https://github.com/mheap/github-action-required-labels/commit/418d9eb4e79b6ba0ec64538e261b3e87c946f8ba""><code>418d9eb</code></a> Support running multiple instances without collision (<a href=""https://redirect.github.com/mheap/github-action-required-labels/issues/54"">#54</a>)</li>; <li><a href=""https://github.com/mheap/github-action-required-labels/commit/ae0422e63fb7b70f0adcc7c0e40882c7dcf0f84d""><code>ae0422e</code></a> Update GH Action versions</li>; <li><a href=""https://github.com/mheap/github-action-required-labels/commit/ef663c01940ab85ef6d576ecbf82f6bd46c29ce5""><code>ef663c0</code></a> Run CI on PRs from forks</li>; <li><a href=""https://github.com/mheap/github-action-required-labels/commit/0b719abe3b9b0890d9806348507d9e704fc39643""><code>0b719ab</code></a> npm run lint:fix</li>; <li><a href=""https://github.com/mheap/github-action-required-labels/commit/65d195bf4a9b738e8f2a9c540d0cc182bb80df72""><code>65d195b</code></a> Add <code>labels</code> output which will contain all the matching/intersecting labels i...</li>; <li><a href=""https://github.com/mheap/github-action-required-labels/commit/5384b5bb3bf2c6b1c100a2a5821e1ddac8c38cae""><code>5384b5b</code></a> Add newline after the match token in error comments (<a href=""https://redirect.github.com/mheap/github-action-required-labels/issues/55"">#55</a>)</li>; <li><a href=""https://github.com/mheap/github-action-required-labels/c",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2125:4200,Update,Update,4200,https://su2code.github.io,https://github.com/su2code/SU2/pull/2125,2,['Update'],['Update']
Deployability,"ew</a></li>; </ul>; </details>; <br />. [![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=actions/upload-artifact&package-manager=github_actions&previous-version=3&new-version=4)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores). Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`. [//]: # (dependabot-automerge-start); [//]: # (dependabot-automerge-end). ---. <details>; <summary>Dependabot commands and options</summary>; <br />. You can trigger Dependabot actions by commenting on this PR:; - `@dependabot rebase` will rebase this PR; - `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it; - `@dependabot merge` will merge this PR after your CI passes on it; - `@dependabot squash and merge` will squash and merge this PR after your CI passes on it; - `@dependabot cancel merge` will cancel a previously requested merge and block automerging; - `@dependabot reopen` will reopen this PR if it is closed; - `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually; - `@dependabot show <dependency name> ignore conditions` will show all of the ignore conditions of the specified dependency; - `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself); - `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself); - `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself). </details>",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2231:7612,upgrade,upgrade,7612,https://su2code.github.io,https://github.com/su2code/SU2/pull/2231,3,['upgrade'],['upgrade']
Deployability,"ewriter/../../../include/output/filewriter/../../../../Common/include/parallelization/mpi_structure.hpp:220; #5 0x0000000000860117 in CSolver::SetResidual_RMS (this=0x21381c0, ; geometry=0x21cb340, config=0x2073590); at ../SU2_CFD/src/solvers/CSolver.cpp:2183; #6 0x00000000007b6af8 in CHeatSolver::ImplicitEuler_Iteration (; this=0x21381c0, geometry=0x21cb340, solver_container=0x23a1c10, ; config=0x2073590) at ../SU2_CFD/src/solvers/CHeatSolver.cpp:1549; #7 0x0000000000b5a666 in CIntegration::Time_Integration (this=0x2381f70, ; geometry=0x21cb340, solver_container=0x23a1c10, config=0x2073590, ; iRKStep=0, RunTime_EqSystem=21); ---Type <return> to continue, or q <return> to quit---; at ../SU2_CFD/src/integration/CIntegration.cpp:205; #8 0x00000000004a2973 in CSingleGridIntegration::SingleGrid_Iteration (; this=0x2381f70, geometry=0x1fdc8b0, solver_container=0x1db9ad0, ; numerics_container=0x1fddb10, config=0x1a6cb50, RunTime_EqSystem=21, ; iZone=1, iInst=0); at ../SU2_CFD/src/integration/CSingleGridIntegration.cpp:73; #9 0x00000000004e33e4 in CHeatIteration::Iterate (this=0x218fdc0, ; output=0x20c8630, integration=0x1a59a90, geometry=0x1fdc8b0, ; solver=0x1db9ad0, numerics=0x1fddb10, config=0x1a6cb50, ; surface_movement=0x1a6cc30, grid_movement=0x1a6cc50, FFDBox=0x1a6cc70, ; val_iZone=1, val_iInst=0) at ../SU2_CFD/src/iteration/CHeatIteration.cpp:40; #10 0x00000000004db2ba in CFluidIteration::Solve (this=0x218fdc0, ; output=0x20c8630, integration=0x1a59a90, geometry=0x1fdc8b0, ; solver=0x1db9ad0, numerics=0x1fddb10, config=0x1a6cb50, ; surface_movement=0x1a6cc30, grid_movement=0x1a6cc50, FFDBox=0x1a6cc70, ; val_iZone=1, val_iInst=0); at ../SU2_CFD/src/iteration/CFluidIteration.cpp:302; #11 0x000000000047adec in CMultizoneDriver::Run_GaussSeidel (this=0x1fe0f80); at ../SU2_CFD/src/drivers/CMultizoneDriver.cpp:329; #12 0x000000000047a415 in CMultizoneDriver::StartSolver (this=0x1fe0f80); at ../SU2_CFD/src/drivers/CMultizoneDriver.cpp:193; #13 0x0000000000415413 in main ",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1241:3096,integrat,integration,3096,https://su2code.github.io,https://github.com/su2code/SU2/issues/1241,1,['integrat'],['integration']
Deployability,"f so we can call other methods on top of `[]`.; This does not exactly recover the same interface and it can create some bugs because one would be able to call methods without knowing what index they are on (it is also not thread safe but that is not a problem now).; So the final piece to recover the interface and shield direct calls to methods without specifying the index is a lightweight wrapper.; ```; class DenseWrapper; {; private:; DenseVariableBase* nodes;; public:; DenseWrapper(int nVar, int nNodes);; ~DenseWrapper();; inline DenseVariableBase* operator[] (int iNode); {; return (*nodes)[iNode];; }; };; ```; With this there is no way of getting to the variables without going through `[]` first.; If we run this code we see that it is only **1.08** and **1.57** times slower for the non-virtual and virtual accessors respectively.; This could be an intermediate solution while the CVariable methods would be migrated to allow passing the index as argument e.g. `field->Get(iNode)` and the code is updated gradually. However, I think the wrapper could provide a way of dealing with the loss of versatility that contiguous storage creates...; There are no free lunches and this performance improvement would come at the cost of losing the ability to have different types of variables in different parts of the domain. I think currently only the elasticity solver uses this to keep ""boundary"" and ""internal"" variables.; If this versatility is really required the wrapper can keep special variables separately, that it would know to be special via a boolean vector and know how to access via a hash table (for example). **Alternatives**; We could make the storage continuous by using a memory pool i.e. allocate outside the class and give the class a pointer to its memory location. This is still not truly contiguous as the pointers the class holds are variables themselves and so they would still be separated (albeit by a smaller huge distance), thus the amount of overhead would still inf",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/716:7064,update,updated,7064,https://su2code.github.io,https://github.com/su2code/SU2/issues/716,1,['update'],['updated']
Deployability,"f the result is `[0]`, ie ""False"", you have to build python with the option `--enable-shared`. ; Now, I don't know how to do accomplish that with conda, but with [pyenv](https://github.com/pyenv/pyenv) it involves installing the desired python version with `CONFIGURE_OPTS=--enable-shared pyenv install <version>`. To recap, a ""workflow for newbies"" which appears to be working for me is. 1. install pyenv either from [source](https://github.com/pyenv/pyenv#installation) or from your distibution repositories, if available. IMPORTANT: make sure the environment variables are correctly set and `pyenv init` is added to your shell, as per the installation instructions.; 2. install the desired python version (for example 3.7.8), enabling shared libraries: ; `CONFIGURE_OPTS=--enable-shared pyenv install 3.7.8`; 3. clone/download the [feature_adap](https://github.com/su2code/SU2/tree/feature_adap) branch of SU2;; 4. in the SU2 folder, configure meson ; `./meson.py build` ; and make sure to update the environment variables in your `.bashrc` as indicated by meson's output.; 5. use ninja to build and install SU2 ; `./ninja -C build install`;; if you run into a permission error, specify an installation directory passing the `--prefix` option to meson, as explained [here](https://www.cfd-online.com/Forums/su2-installation/227676-su-installation-failed-due-insufficient-permissions.html). These passages, at least for me, result in a running SU2 with mesh adaptation, although I have made no tests on running actual simulations. That being said, the involvement of pyenv is due to the fact that the provided python wheel for pyamg is for python 3.7 only. If I understand correctly, the library itself is proprietary, sadly, so I assume @bmunguia has access either to the source files or to someone who can package them. Depending on the actual compatibility of the code, it would be nice if the wheel was updated to the latest python version, or at least the dependency on 3.7.* was removed. . @c",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/948#issuecomment-751823130:1689,update,update,1689,https://su2code.github.io,https://github.com/su2code/SU2/issues/948#issuecomment-751823130,1,['update'],['update']
Deployability,"f=""https://redirect.github.com/actions/cache/issues/1340"">#1340</a> from actions/bethanyj28/update-publish-flow</li>; <li><a href=""https://github.com/actions/cache/commit/a18323f50430a57f9094db3ce508dc1e3a25d4a2""><code>a18323f</code></a> add release action</li>; <li><a href=""https://github.com/actions/cache/commit/a2ed59d39b352305bdd2f628719a53b2cc4f9613""><code>a2ed59d</code></a> Merge pull request <a href=""https://redirect.github.com/actions/cache/issues/1305"">#1305</a> from actions/yacaovsnc/update_examples</li>; <li><a href=""https://github.com/actions/cache/commit/dc88ab52d723eb4cc3a0af43f6bee825c4742280""><code>dc88ab5</code></a> Update examples</li>; <li><a href=""https://github.com/actions/cache/commit/1d78355196cc3f88914ca91332c58d431a78513d""><code>1d78355</code></a> Merge pull request <a href=""https://redirect.github.com/actions/cache/issues/1304"">#1304</a> from actions/yacaovsnc/update_readme</li>; <li><a href=""https://github.com/actions/cache/commit/c36458f13bdfaeff50a47b181b7368ae66b21f28""><code>c36458f</code></a> Update README.md</li>; <li><a href=""https://github.com/actions/cache/commit/13aacd865c20de90d75de3b17ebe84f7a17d57d2""><code>13aacd8</code></a> Merge pull request <a href=""https://redirect.github.com/actions/cache/issues/1242"">#1242</a> from to-s/main</li>; <li>Additional commits viewable in <a href=""https://github.com/actions/cache/compare/v3...v4"">compare view</a></li>; </ul>; </details>; <br />. [![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=actions/cache&package-manager=github_actions&previous-version=3&new-version=4)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores). Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`. [//]: # (dependabot-automerge-start); [//]: # (dependabot-automer",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2232:9415,Update,Update,9415,https://su2code.github.io,https://github.com/su2code/SU2/pull/2232,1,['Update'],['Update']
Deployability,"fPIC -Wno-empty-body -Wno-unused-parameter -Wno-deprecated-declarations -Wno-non-virtual-dtor -DHAVE_CGNS -DNDEBUG -DHAVE_MPI -DHAVE_METIS -DHAVE_PARMETIS -MD -MQ UnitTests/test_driver.p/test_driver.cpp.o -MF UnitTests/test_driver.p/test_driver.cpp.o.d -o UnitTests/test_driver.p/test_driver.cpp.o -c ../UnitTests/test_driver.cpp; In file included from /usr/include/signal.h:328,; from ../externals/catch2/catch.hpp:7955,; from ../UnitTests/test_driver.cpp:32:; ../externals/catch2/catch.hpp:10735:58: error: call to non-‘constexpr’ function ‘long int sysconf(int)’; 10735 | static constexpr std::size_t sigStackSize = 32768 >= MINSIGSTKSZ ? 32768 : MINSIGSTKSZ;; | ^~~~~~~~~~~; In file included from /usr/include/x86_64-linux-gnu/bits/sigstksz.h:24,; from /usr/include/signal.h:328,; from ../externals/catch2/catch.hpp:7955,; from ../UnitTests/test_driver.cpp:32:; /usr/include/unistd.h:640:17: note: ‘long int sysconf(int)’ declared here; 640 | extern long int sysconf (int __name) __THROW;; | ^~~~~~~; In file included from ../UnitTests/test_driver.cpp:32:; ../externals/catch2/catch.hpp:10794:45: error: size of array ‘altStackMem’ is not an integral constant-expression; 10794 | char FatalConditionHandler::altStackMem[sigStackSize] = {};; | ^~~~~~~~~~~~; ```. **To Reproduce**; *Please provide a config file and mesh for a minimal example that recreates the problem.*; In my case, this issue occurred when I upgraded my kubuntu version to 22.04; some info:; https://github.com/catchorg/Catch2/issues/2178; https://github.com/catchorg/Catch2/issues/2421. **Desktop (please complete the following information):. Project version: 7.3.1 ""Blackbird""; C compiler for the host machine: /usr/bin/mpicc.mpich (gcc 11.2.0 ""gcc (Ubuntu 11.2.0-19ubuntu1) 11.2.0""); C linker for the host machine: /usr/bin/mpicc.mpich ld.bfd 2.38; C++ compiler for the host machine: /usr/bin/mpicxx.mpich (gcc 11.2.0 ""g++ (Ubuntu 11.2.0-19ubuntu1) 11.2.0""); C++ linker for the host machine: /usr/bin/mpicxx.mpich ld.bfd 2.38",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1724:2963,upgrade,upgraded,2963,https://su2code.github.io,https://github.com/su2code/SU2/issues/1724,1,['upgrade'],['upgraded']
Deployability,"ffff8a20, ; recvbuf=0x1646158 <double CSysVector<double>::dot<CSysVector<double> >(VecExpr::CVecExpr<CSysVector<double>, double> const&) const::dotRes>, count=1, ; datatype=0x2aaaaafb4de0 <ompi_mpi_double>, ; op=0x2aaaaafc9920 <ompi_mpi_op_sum>, ; comm=0x2aaaaafbbc60 <ompi_mpi_comm_world>); at ../SU2_CFD/src/drivers/../../include/drivers/../../../Common/include/parallelization/mpi_structure.hpp:205; #5 0x00000000004b0ef3 in CSysVector<double>::dot<CSysVector<double> > (; this=0x23a20d0, expr=...); at ../SU2_CFD/src/integration/../../include/integration/../solvers/../../../Common/include/linear_algebra/CSysVector.hpp:317; #6 0x00000000004b0dcf in CSysVector<double>::squaredNorm (this=0x23a20d0); at ../SU2_CFD/src/integration/../../include/integration/../solvers/../../../Common/include/linear_algebra/CSysVector.hpp:331; ---Type <return> to continue, or q <return> to quit---; #7 0x00000000004b0cf0 in CSysVector<double>::norm (this=0x23a20d0); at ../SU2_CFD/src/integration/../../include/integration/../solvers/../../../Common/include/linear_algebra/CSysVector.hpp:337; #8 0x0000000000da260b in CSysSolve<double>::BCGSTAB_LinSolver (; this=0x23a2240, b=..., x=..., mat_vec=..., precond=..., ; tol=1.0000000000000001e-15, m=20, residual=@0x7fffffff8fb8: 0, ; monitoring=false, config=0x209bc10); at ../Common/src/linear_algebra/CSysSolve.cpp:553; #9 0x0000000000da404a in CSysSolve<double>::Solve (this=0x23a2240, ; Jacobian=..., LinSysRes=..., LinSysSol=..., geometry=0x2105400, ; config=0x209bc10) at ../Common/src/linear_algebra/CSysSolve.cpp:883; #10 0x00000000007b69da in CHeatSolver::ImplicitEuler_Iteration (; this=0x23a1de0, geometry=0x2105400, solver_container=0x23a1d70, ; config=0x209bc10) at ../SU2_CFD/src/solvers/CHeatSolver.cpp:1528; #11 0x0000000000b5a666 in CIntegration::Time_Integration (this=0x270d150, ; geometry=0x2105400, solver_container=0x23a1d70, config=0x209bc10, ; iRKStep=0, RunTime_EqSystem=21); at ../SU2_CFD/src/integration/CIntegration.cpp:205; #12 0x0000000",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1241:5808,integrat,integration,5808,https://su2code.github.io,https://github.com/su2code/SU2/issues/1241,1,['integrat'],['integration']
Deployability,"fig'; Run-time dependency openblas found: YES 0.3.10; Program swig found: YES (/usr/bin/swig); Message: Using mpi4py from /home/slimshady/.local/lib/python3.8/site-packages/mpi4py/include; Dependency python found: YES (pkgconfig); Program install.sh found: YES (/bin/sh /home/slimshady/UserPackages/SU2_HOME/SU2_PY/pySU2/install.sh); Message: -------------------------------------------------------------------------; | ___ _ _ ___ |; | / __| | | |_ ) Release 7.0.6 ""Blackbird"" |; | \__ \ |_| |/ / |; | |___/\___//___| Meson Configuration Summary |; | |; -------------------------------------------------------------------------; ; Option Value; ---------------------; TecIO: true; CGNS: true; AD (reverse): true; AD (forward): true; Python Wrapper: true; Intel-MKL: false; OpenBlas: true; PaStiX: false; Mixed Float: false. Please be sure to add the $SU2_HOME and $SU2_RUN environment variables,; and update your $PATH (and $PYTHONPATH if applicable) with $SU2_RUN. Based on the input to this configuration, add these lines to your .bashrc file:. export SU2_RUN=/home/slimshady/UserPackages/SU2_INSTALL/bin; export SU2_HOME=/home/slimshady/UserPackages/SU2_HOME; export PATH=$PATH:$SU2_RUN; export PYTHONPATH=$PYTHONPATH:$SU2_RUN. Use './ninja -C build install' to compile and install SU2. Build targets in project: 21. Found ninja-1.10.0.git at /home/slimshady/UserPackages/SU2_HOME/ninja; ```; The ninja command fails like so:; ```; slimshady@arch-linux-hp-probook-g3-450: SU2_HOME$ ./ninja -C build install ; ninja: Entering directory `build'; [583/894] Linking target SU2_CFD/src/SU2_CFD; FAILED: SU2_CFD/src/SU2_CFD ; /usr/bin/g++ -o SU2_CFD/src/SU2_CFD SU2_CFD/src/SU2_CFD.p/SU2_CFD.cpp.o -Wl,--as-needed -Wl,--no-undefined -Wl,-O1 -Wl,--start-group SU2_CFD/src/libSU2core.a externals/cgns/libcgns.a externals/metis/libmetis.a externals/parmetis/libparmetis.a externals/tecio/teciompisrc/libteciompi.a Common/src/libSU2Common.a -Wl,-rpath -Wl,/usr/local/mpich-3.3.2/lib /usr/local/mpich-3.3.2/",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1000#issuecomment-721366137:3425,configurat,configuration,3425,https://su2code.github.io,https://github.com/su2code/SU2/issues/1000#issuecomment-721366137,1,['configurat'],['configuration']
Deployability,"figure:3654: g++ -c -g conftest.cpp >&5; configure:3654: $? = 0; configure:3695: result: yes; configure:3720: checking dependency style of g++; configure:3831: result: gcc3; configure:3921: checking for gcc; configure:3937: found /usr/bin/gcc; configure:3948: result: gcc; configure:3979: checking for C compiler version; configure:3988: gcc --version >&5; gcc (GCC) 4.4.6 20120305 (Red Hat 4.4.6-4); Copyright (C) 2010 Free Software Foundation, Inc.; This is free software; see the source for copying conditions. There is NO; warranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. configure:3999: $? = 0; configure:3988: gcc -v >&5; Using built-in specs.; Target: x86_64-redhat-linux; Configured with: ../configure --prefix=/usr --mandir=/usr/share/man --infodir=/usr/share/info --with-bugurl=http://bugzilla.redhat.com/bugzilla --enable-bootstrap --enable-shared --enable-threads=posix --enable-checking=release --with-system-zlib --enable-__cxa_atexit --disable-libunwind-exceptions --enable-gnu-unique-object --enable-languages=c,c++,objc,obj-c++,java,fortran,ada --enable-java-awt=gtk --disable-dssi --with-java-home=/usr/lib/jvm/java-1.5.0-gcj-1.5.0.0/jre --enable-libgcj-multifile --enable-java-maintainer-mode --with-ecj-jar=/usr/share/java/eclipse-ecj.jar --disable-libjava-multilib --with-ppl --with-cloog --with-tune=generic --with-arch_32=i686 --build=x86_64-redhat-linux; Thread model: posix; gcc version 4.4.6 20120305 (Red Hat 4.4.6-4) (GCC) ; configure:3999: $? = 0; configure:3988: gcc -V >&5; gcc: '-V' option must have argument; configure:3999: $? = 1; configure:3988: gcc -qversion >&5; gcc: unrecognized option '-qversion'; gcc: no input files; configure:3999: $? = 1; configure:4003: checking whether we are using the GNU C compiler; configure:4022: gcc -c conftest.c >&5; configure:4022: $? = 0; configure:4031: result: yes; configure:4040: checking whether gcc accepts -g; configure:4060: gcc -c -g conftest.c >&5; configure:4060: $? = 0; configure:4101: r",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/250#issuecomment-205167006:6016,release,release,6016,https://su2code.github.io,https://github.com/su2code/SU2/issues/250#issuecomment-205167006,2,['release'],['release']
Deployability,"file was extended by SU2 config.status 4.1.0, which was; generated by GNU Autoconf 2.69. Invocation command line was. CONFIG_FILES = ; CONFIG_HEADERS = ; CONFIG_LINKS = ; CONFIG_COMMANDS = ; $ ./config.status . on master. config.status:875: creating externals/tecio/Makefile; config.status:875: creating externals/metis/Makefile; config.status:875: creating externals/parmetis/Makefile; config.status:875: creating Makefile; config.status:875: creating externals/Makefile; config.status:875: creating Common/lib/Makefile; config.status:875: creating SU2_CFD/obj/Makefile; config.status:875: creating SU2_DOT/obj/Makefile; config.status:875: creating SU2_MSH/obj/Makefile; config.status:875: creating SU2_DEF/obj/Makefile; config.status:875: creating SU2_SOL/obj/Makefile; config.status:875: creating SU2_GEO/obj/Makefile; config.status:875: creating SU2_PY/Makefile; config.status:1047: executing depfiles commands; configure:8181: result:. -------------------------------------------------------------------------; | ___ _ _ ___ |; | / __| | | |_ ) Release 4.1.0 'Cardinal' |; | \__ \ |_| |/ / |; | |___/\___//___| Suite |; | |; -------------------------------------------------------------------------; | SU2 Lead Dev.: Dr. Francisco Palacios, Francisco.D.Palacios@boeing.com|; | Dr. Thomas D. Economon, economon@stanford.edu |; -------------------------------------------------------------------------; | SU2 Developers: |; | - Prof. Juan J. Alonso's group at Stanford University. |; | - Prof. Piero Colonna's group at Delft University of Technology. |; | - Prof. Nicolas R. Gauger's group at Kaiserslautern U. of Technology. |; | - Prof. Alberto Guardone's group at Polytechnic University of Milan. |; | - Prof. Rafael Palacios' group at Imperial College London. |; -------------------------------------------------------------------------; | Copyright (C) 2012-2015 SU2, the open-source CFD code. |; | |; | SU2 is free software; you can redistribute it and/or |; | modify it under the terms of t",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/250#issuecomment-205167006:16810,Release,Release,16810,https://su2code.github.io,https://github.com/su2code/SU2/issues/250#issuecomment-205167006,1,['Release'],['Release']
Deployability,first release of the turbomachinery capabilities,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/413:6,release,release,6,https://su2code.github.io,https://github.com/su2code/SU2/pull/413,1,['release'],['release']
Deployability,fix axisym source term + update regression cases,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1366:25,update,update,25,https://su2code.github.io,https://github.com/su2code/SU2/pull/1366,1,['update'],['update']
Deployability,"fixed set functions for NEMO axisymmetric, implemented auxvargrad correction in nemo axisymmetric source residual, fixed fluid model/transport model print statement. Signed-off-by: jtneedels <jneedels@stanford.edu>. ## Proposed Changes; This PR addresses an issue found with not setting primitive and conservative variables in computing the axisymmetric source residual, as well as implementing the auxvargrad indexing correction applied in the standard air axisymmetric source residual and fixing an issue with printing the fluid and transport models. . ## Related Work; This PR is related to #1192 and #1162. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1205:1276,update,updated,1276,https://su2code.github.io,https://github.com/su2code/SU2/pull/1205,1,['update'],['updated']
Deployability,flag to configure.; - Merged the ParMETIS implementation. Updated the build files.; - bootstrap; - Started parallel CGNS reader.; - Memory fix.; - Minor change; - Merge branch 'develop' of https://github.com/su2code/SU2 into develop; - Updated binaries; - Small change to configure.ac. Bootstrap.; - Small change; - Cleaning the code; - Updated grid deformation subroutine; - Fixing the mesh deformation; - Updated SU2_MSH; - Bug fixing; - Initial implementation of parallel CGNS reader. Works on 1 rank.; - Merged in recent changes to geometry_structure.cpp.; - Periodic BC working in serial; - Update option_structure.hpp; - Merge pull request #154 from su2code/fixCOptionEnumList; - Bug fixing (periodic bc); - Merge branch 'develop' of https://github.com/su2code/SU2 into develop; - Another important updated to BC in parallel; - More implementation and clean up of the parallel CGNS reader.; - Merge branch 'develop' of https://github.com/su2code/SU2 into develop; - CGNS reader bug fix.; - Updated adj. NS solver with primitive variables and farfield bc including viscous contribution.; - Merge branch 'develop' of https://github.com/su2code/SU2 into develop; - Small change; - Back to the previous version; - Fixed some loop variables.; - Merge branch 'develop' of https://github.com/su2code/SU2 into develop; - Bug fixes for CGNS.; - New slope limiter based on the wall distance; - Merge branch 'develop' of https://github.com/su2code/SU2 into develop; - Bug fixing; - Non-dimensional adjoint bc; - CGNS bug.; - Mixed-element support in new CGNS reader.; - Memory fix for mixed-element CGNS in parallel.; - Activated the parallel CGNS reader.; - New FFD input; - Adjacency building for Parmetis improve to account for VTK structure; - added if viscous steps to some adjeuler bcs; - Minor changes; - Back to previous version of ParMetis; - Small change; - Final update.; - Minor bug fixed.; - Updated SU2_DEF (cgns); - CGNS global element ID bug fix.; - Heat flux bug fix.; - Small fix.; - Mer,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/174#issuecomment-101443812:6783,Update,Updated,6783,https://su2code.github.io,https://github.com/su2code/SU2/pull/174#issuecomment-101443812,1,['Update'],['Updated']
Deployability,"flows); SIDESLIP_ANGLE= 1.0; %; % Free-stream temperature (518.67 R by default); FREESTREAM_TEMPERATURE= 559.67; %; % Reynolds number (non-dimensional, based on the free-stream values); REYNOLDS_NUMBER= 260025.6363; %REYNOLDS_NUMBER= 4260000; %; % Reynolds length (1 in by default); REYNOLDS_LENGTH= 1.0; % Compressible flow non-dimensionalization (DIMENSIONAL, FREESTREAM_PRESS_EQ_ONE,; % FREESTREAM_VEL_EQ_MACH, FREESTREAM_VEL_EQ_ONE); REF_DIMENSIONALIZATION= FREESTREAM_VEL_EQ_MACH. % ----------------------------- CL DRIVER DEFINITION ---------------------------%; %; % Activate fixed lift mode (specify a CL instead of AoA, NO/YES); FIXED_CL_MODE= YES; %; % Target coefficient of lift for fixed lift mode (0.80 by default); TARGET_CL= 0.5; %; % Estimation of dCL/dAlpha (0.2 per degree by default); DCL_DALPHA= 0.3; %; % Maximum number of iterations between AoA updates; UPDATE_AOA_ITER_LIMIT= 200; %; % Number of iterations to evaluate dCL_dAlpha by using finite differences (500 by default); ITER_DCL_DALPHA= 500; %; % ---------------------- REFERENCE VALUE DEFINITION ---------------------------%; %; % Reference origin for moment computation (in); REF_ORIGIN_MOMENT_X = 78.759; REF_ORIGIN_MOMENT_Y = 0.0; REF_ORIGIN_MOMENT_Z = 10.570; %; % Reference length for pitching, rolling, and yawing non-dimensional; % moment (in); REF_LENGTH= 16.383; %; % Reference area for force coefficients (0 implies automatic; % calculation) (in^2); REF_AREA= 2098.39; %; % Aircraft semi-span (0 implies automatic calculation) (m or in); SEMI_SPAN= 68.71; %; % -------------------- BOUNDARY CONDITION DEFINITION --------------------------%; %; % Navier-Stokes wall boundary marker(s) (NONE = no marker); MARKER_HEATFLUX= ( Sting, 0.0, Fuselage, 0.0, WingUpper, 0.0, WingLower, 0.0, VT, 0.0, HTUpper, 0.0, HTLower, 0.0, HTTE, 0.0, VTWingTip, 0.0, VTTE, 0.0, WingTE, 0.0, WBFairing, 0.0, PWUpper, 0.0, PWLower, 0.0, PWTE, 0.0 )%; % Far-field boundary marker(s) (NONE = no marker); MARKER_FAR= ( Farfield ); %; % ",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1297:3262,update,updates,3262,https://su2code.github.io,https://github.com/su2code/SU2/issues/1297,1,['update'],['updates']
Deployability,"flows. To perform such analysis, I need to firstly obtain a steady-state solution of the Navier-Stokes equations. This is not a problem when a physical steady-state exists but becomes cumbersome otherwise. In the latter case, I need to drive the flow to a steady-state numerically such that the flow becomes steady and linear stability analysis can be performed. Presently, there is no compressible open-source CFD code capable of supersonic simulations, as far as I know, able to obtain ''unstable'' steady-states. The solutions outlined below not only would give the users capabilities needed to perform stability analysis of globally unstable flows with help of SU2 code but would also provide means of accelerating convergence of any unsteady solution. **Describe the solution you'd like**; Implementation of selective frequency damping (SFD) for unsteady simulation as introduced in [1] and boostconv algorithm as proposed by [2]. _SFD_: A method, enabling the computation of steady solutions of the Navier-Stokes equations in globally unstable configurations. Steady-state is achieved by damping the unstable temporal frequencies with addition of a dissipative relaxation term proportional to the high-frequency content of the velocity fluctuations. [1]. _boostconv_: An iterative algorithm, inspired by Krylov-subspace methods, which is able to compute unstable steady states and/or accelerate the convergence to stable configurations. This algorithm is based on the minimization of the residual norm at each iteration step with a projection basis updated at each iteration rather than at periodic restarts like in the classical GMRES method. The algorithm is able to stabilize any dynamical system without increasing the computational time of the original numerical procedure used to solve the governing equations. _Moreover, it can be easily inserted into a pre-existing relaxation (integration) procedure with a call to a single black-box subroutine_. [2]. **Additional context**; I would b",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/2022:1322,configurat,configurations,1322,https://su2code.github.io,https://github.com/su2code/SU2/issues/2022,1,['configurat'],['configurations']
Deployability,"for the host machine: cc (gcc 9.2.1 ""cc (Arch Linux 9.2.1+20200130-2) 9.2.1 20200130""); C linker for the host machine: cc ld.bfd 2.34; C++ compiler for the host machine: c++ (gcc 9.2.1 ""c++ (Arch Linux 9.2.1+20200130-2) 9.2.1 20200130""); C++ linker for the host machine: c++ ld.bfd 2.34; Host machine cpu family: x86_64; Host machine cpu: x86_64; Program python3 found: YES (/usr/bin/python); Found pkg-config: /usr/bin/pkg-config (1.6.3); Dependency python found: YES (pkgconfig); Run-time dependency MPI for c found: YES 4.0.2; Run-time dependency MPI for cpp found: YES 4.0.2; Message: Boost sources found.; Run-time dependency openblas found: YES 0.3.8; Program swig found: YES (/usr/bin/swig); Message: Using mpi4py from /home/slimshady/.local/lib/python3.8/site-packages/mpi4py/include; Run-time dependency python3 found: YES 3.8; Program install.sh found: YES (/bin/sh /home/slimshady/UserPackages/SU2_NEW/SU2_PY/pySU2/install.sh); Message: -------------------------------------------------------------------------; | ___ _ _ ___ |; | / __| | | |_ ) Release 7.0.4 ""Blackbird"" |; | \__ \ |_| |/ / |; | |___/\___//___| Meson Configuration Summary |; | |; -------------------------------------------------------------------------; ; Option Value; ---------------------; TecIO: true; CGNS: true; AD (reverse): true; AD (forward): true; Python Wrapper: true; Intel-MKL: false; OpenBlas: true; PaStiX: false. Please be sure to add the $SU2_HOME and $SU2_RUN environment variables,; and update your $PATH (and $PYTHONPATH if applicable) with $SU2_RUN. Based on the input to this configuration, add these lines to your .bashrc file:. export SU2_RUN=/home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; export SU2_HOME=/home/slimshady/UserPackages/SU2_NEW; export PATH=$PATH:$SU2_RUN; export PYTHONPATH=$PYTHONPATH:$SU2_RUN. Use './ninja -C build install' to compile and install SU2. Build targets in project: 21. Found ninja-1.10.0 at /usr/bin/ninja; ```. ```; slimshady@arch-linux-hp-probook-g3-450: SU2_",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/991#issuecomment-631986633:1999,Release,Release,1999,https://su2code.github.io,https://github.com/su2code/SU2/issues/991#issuecomment-631986633,1,['Release'],['Release']
Deployability,"from /share/hpc_apps/openmpi/3.1.6/gnu/5.3.0/lib/openmpi/mca_coll_hcoll.so; #3 0x00002aaaaad2c20f in PMPI_Allreduce (); from /share/hpc_apps/openmpi/3.1.6/gnu/5.3.0/lib/libmpi.so.40; #4 0x000000000048a83f in CBaseMPIWrapper::Allreduce (sendbuf=0x7fffffff8a20, ; recvbuf=0x1646158 <double CSysVector<double>::dot<CSysVector<double> >(VecExpr::CVecExpr<CSysVector<double>, double> const&) const::dotRes>, count=1, ; datatype=0x2aaaaafb4de0 <ompi_mpi_double>, ; op=0x2aaaaafc9920 <ompi_mpi_op_sum>, ; comm=0x2aaaaafbbc60 <ompi_mpi_comm_world>); at ../SU2_CFD/src/drivers/../../include/drivers/../../../Common/include/parallelization/mpi_structure.hpp:205; #5 0x00000000004b0ef3 in CSysVector<double>::dot<CSysVector<double> > (; this=0x23a20d0, expr=...); at ../SU2_CFD/src/integration/../../include/integration/../solvers/../../../Common/include/linear_algebra/CSysVector.hpp:317; #6 0x00000000004b0dcf in CSysVector<double>::squaredNorm (this=0x23a20d0); at ../SU2_CFD/src/integration/../../include/integration/../solvers/../../../Common/include/linear_algebra/CSysVector.hpp:331; ---Type <return> to continue, or q <return> to quit---; #7 0x00000000004b0cf0 in CSysVector<double>::norm (this=0x23a20d0); at ../SU2_CFD/src/integration/../../include/integration/../solvers/../../../Common/include/linear_algebra/CSysVector.hpp:337; #8 0x0000000000da260b in CSysSolve<double>::BCGSTAB_LinSolver (; this=0x23a2240, b=..., x=..., mat_vec=..., precond=..., ; tol=1.0000000000000001e-15, m=20, residual=@0x7fffffff8fb8: 0, ; monitoring=false, config=0x209bc10); at ../Common/src/linear_algebra/CSysSolve.cpp:553; #9 0x0000000000da404a in CSysSolve<double>::Solve (this=0x23a2240, ; Jacobian=..., LinSysRes=..., LinSysSol=..., geometry=0x2105400, ; config=0x209bc10) at ../Common/src/linear_algebra/CSysSolve.cpp:883; #10 0x00000000007b69da in CHeatSolver::ImplicitEuler_Iteration (; this=0x23a1de0, geometry=0x2105400, solver_container=0x23a1d70, ; config=0x209bc10) at ../SU2_CFD/src/solvers/CHeatSolver.cp",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1241:5558,integrat,integration,5558,https://su2code.github.io,https://github.com/su2code/SU2/issues/1241,1,['integrat'],['integration']
Deployability,"from a simple time average to a time averaged weighted with a windowing function. For the direct run this is just a post-processing step and changes happen only in signal_processing_toolbox and Coutput. ; - We adapted the seeding for the adjoint run from a the classic time average to a windowed time average. ; - Tests have shown, that higher order windowing regularizers, tend to converge quickly with respect to the averaged time span. We have implemented a ""timeConvergenceMonitor"", that acts similarly to the convergence monitoring of the inner convergence. It applies a cauchy convergence criterion to the chosen windowed time average output coefficients. ; - The cauchy convergence criterion works for direct run, adjoint run and shape optimization scripts; - In case of shape optimization, the script remembers the final time iteration of the direct run. If the final time step is smaller than the ""original"" final time step stated in the configuration file, it adapts the starting time of the adjoint run; and the time to seed the objective function, such that the seeding does not exceed the original time to end the seeding. ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is commented and consistent with SU2 style.; - [x] I have added a test case that demonstrates my contribution, if necessary.; - [x] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/836:2583,update,updated,2583,https://su2code.github.io,https://github.com/su2code/SU2/pull/836,1,['update'],['updated']
Deployability,"ft2_c, class ModVort_c>; class SA_Base : public CNumerics {; public:; SA_Base() {}. void computeResidual() final {; ft2 = ft2_c::Compute(); S_hat = ModVort_c::Compute(2.0,10); }; };. // the term ""bsl"" stands for baseline; class ft2_bsl { static double Compute() { return 0.0; } }; ; class ft2_nonzero { static double Copmute() { return ...; } };; class ModVort_bsl { static double Compute(const double x, const int y){ return x*y; } };; class ModVort_Neg { static double Compute(const double x, const int y){ return x*y; } };; class ModVort_Edw { static double Compute(const double x, const int y){ return x+y; } };. /*-- Numerics preprocessing --*/; // From the config file (.cfg) determine which corrections/variations we have to use: ft2_variant, ModVort_variant, etc; // Create Frankenstein SA; if(ft2_variant==0 && ModVort_variant==0) numerics[i] = new SA_Base<ft2_bsl, ModVort_bsl>();; if(ft2_variant==0 && ModVort_variant==1) numerics[i] = new SA_Base<ft2_bsl, ModVort_Neg>();; if(ft2_variant==0 && ModVort_variant==2) numerics[i] = new SA_Base<ft2_bsl, ModVort_Edw>();; if(ft2_variant==1 && ModVort_variant==0) numerics[i] = new SA_Base<ft2_nonzero, ModVort_bsl>();; if(ft2_variant==1 && ModVort_variant==1) numerics[i] = new SA_Base<ft2_nonzero, ModVort_Neg>();; // so on. // Proceed to compute the turbulent sources residual as always; ```. ## Related Work; This PR closes the PR #1066.; This PR closes the issue #1364.; This PR will hopefully close the discussion #1403. ## PR Checklist; - [ ] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [ ] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1411:6556,update,updated,6556,https://su2code.github.io,https://github.com/su2code/SU2/pull/1411,1,['update'],['updated']
Deployability,"ft2_c, class ModVort_c>; class SA_Base : public CNumerics {; public:; SA_Base() {}. void computeResidual() final {; ft2 = ft2_c::Compute(); S_hat = ModVort_c::Compute(2.0,10); }; };. // the term ""bsl"" stands for baseline; class ft2_bsl { static double Compute() { return 0.0; } }; ; class ft2_nonzero { static double Copmute() { return ...; } };; class ModVort_bsl { static double Compute(const double x, const int y){ return x*y; } };; class ModVort_Neg { static double Compute(const double x, const int y){ return x*y; } };; class ModVort_Edw { static double Compute(const double x, const int y){ return x+y; } };. /*-- Numerics preprocessing --*/; // From the config file (.cfg) determine which corrections/variations we have to use: ft2_variant, ModVort_variant, etc; // Create Frankenstein SA; if(ft2_variant==0 && ModVort_variant==0) numerics[i] = new SA_Base<ft2_bsl, ModVort_bsl>();; if(ft2_variant==0 && ModVort_variant==1) numerics[i] = new SA_Base<ft2_bsl, ModVort_Neg>();; if(ft2_variant==0 && ModVort_variant==2) numerics[i] = new SA_Base<ft2_bsl, ModVort_Edw>();; if(ft2_variant==1 && ModVort_variant==0) numerics[i] = new SA_Base<ft2_nonzero, ModVort_bsl>();; if(ft2_variant==1 && ModVort_variant==1) numerics[i] = new SA_Base<ft2_nonzero, ModVort_Neg>();; // so on. // Proceed to compute the turbulent sources residual as always; ```. ## Related Work; This PR closes the PR #1066.; This PR closes the issue #1364.; This PR will hopefully close the discussion #1403. ## PR Checklist; - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.; - [x] I have added a test case that demonstrates my contribution, if necessary.; - [x] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1413:6741,update,updated,6741,https://su2code.github.io,https://github.com/su2code/SU2/pull/1413,1,['update'],['updated']
Deployability,ful.; ```; slimshady@arch-linux-hp-probook-g3-450: SU2_NEW$ ninja -j4 -C build install; ninja: Entering directory `build'; [298/299] Installing files.; Installing SU2_CFD/src/SU2_CFD to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing SU2_CFD/src/SU2_CFD_AD to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing SU2_CFD/src/SU2_CFD_DIRECTDIFF to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing SU2_DOT/src/SU2_DOT to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing SU2_DOT/src/SU2_DOT_AD to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing SU2_DEF/src/SU2_DEF to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing SU2_GEO/src/SU2_GEO to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing SU2_MSH/src/SU2_MSH to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing SU2_SOL/src/SU2_SOL to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing SU2_PY/pySU2/_pysu2.so to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing SU2_PY/pySU2/_pysu2ad.so to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/continuous_adjoint.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/compute_uncertainty.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/finite_differences.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/mesh_deformation.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/parallel_computation.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/parallel_computation_fsi.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/package_tests.py to /home/slimshady/UserPackages/SU2_INSTA,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/991#issuecomment-632032044:1509,Install,Installing,1509,https://su2code.github.io,https://github.com/su2code/SU2/issues/991#issuecomment-632032044,1,['Install'],['Installing']
Deployability,"fyi, the surface files output both a .csv and a .dat version, one of which; can be opened by tecplot (.dat) with everything you usually want for; visualization, while the other one contains the global index information; and values that are used in surface-based mesh deformation (and maybe other; tools, but that's the one I know of - I could see that format being useful; for prescribed surface properties as well). So one challenge that would be; faced with this change is how to make sure that both files are still; output. I would argue for switching to no suffixes where possible - less work for; new users, a little more work for us - one way we could get the best of; both worlds is by having the filenames written in the config without; suffix, but when loaded into su2 (and the python version of loading the; config file) store the variable with the appropriate suffix. That way if it; changes in the future it only has to be updated in one place, and all the; old config files would still work after a code change that alterred the; suffix.; -Heather. On Wed, Jul 30, 2014 at 11:05 AM, Brendan Tracey notifications@github.com; wrote:. > SU2 right now is inconsistent with how it does file names in the config; > file. For example, the restart file needs to be specified with a "".dat""; > suffix, but in the case of the surface files, the "".csv"" is added; > automatically. SU2 should be consistent across all filenames. Preferably,; > this will be fixed by having the user specify all suffixes. This is a tiny; > amount of additional work for the user, but it makes writing scripts that; > use the config file much easier. When the suffix is in the config file,; > it's easy to have python say ""open this file"". If the config file just has; > the base name of the file (no extension) then the knowledge of what suffix; > SU2 uses must be hard-coded into the follow-on script (which can then break; > later if SU2 changes).; > ; > —; > Reply to this email directly or view it on GitHub; > https",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/41#issuecomment-50703399:935,update,updated,935,https://su2code.github.io,https://github.com/su2code/SU2/issues/41#issuecomment-50703399,1,['update'],['updated']
Deployability,g C:\Users\Danie\Documents\SU2\SU2_PY\SU2/opt/scipy_tools.py to C:\bin\bin/SU2/opt; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/opt/__init__.py to C:\bin\bin/SU2/opt; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/run/adjoint.py to C:\bin\bin/SU2/run; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/run/deform.py to C:\bin\bin/SU2/run; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/run/direct.py to C:\bin\bin/SU2/run; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/run/interface.py to C:\bin\bin/SU2/run; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/run/merge.py to C:\bin\bin/SU2/run; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/run/geometry.py to C:\bin\bin/SU2/run; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/run/projection.py to C:\bin\bin/SU2/run; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/run/__init__.py to C:\bin\bin/SU2/run; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/util/bunch.py to C:\bin\bin/SU2/util; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/util/filter_adjoint.py to C:\bin\bin/SU2/util; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/util/lhc_unif.py to C:\bin\bin/SU2/util; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/util/misc.py to C:\bin\bin/SU2/util; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/util/mp_eval.py to C:\bin\bin/SU2/util; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/util/ordered_bunch.py to C:\bin\bin/SU2/util; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/util/ordered_dict.py to C:\bin\bin/SU2/util; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/util/plot.py to C:\bin\bin/SU2/util; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/util/polarSweepLib.py to C:\bin\bin/SU2/util; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/util/which.py to C:\bin\bin/SU2/util; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/util/switch.py to C:\bin\bin/SU2/util; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/util/__init__.py to C:\bin\bin/SU2/util; Inst,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1376:7382,Install,Installing,7382,https://su2code.github.io,https://github.com/su2code/SU2/issues/1376,1,['Install'],['Installing']
Deployability,"g externals/Makefile; config.status: creating Common/lib/Makefile; config.status: creating SU2_CFD/obj/Makefile; config.status: creating SU2_DOT/obj/Makefile; config.status: creating SU2_MSH/obj/Makefile; config.status: creating SU2_DEF/obj/Makefile; config.status: creating SU2_SOL/obj/Makefile; config.status: creating SU2_GEO/obj/Makefile; config.status: creating SU2_PY/Makefile; config.status: creating SU2_PY/pySU2/Makefile; config.status: executing depfiles commands. -------------------------------------------------------------------------; | ___ _ _ ___ |; | / __| | | |_ ) Release 6.1.0 'Falcon' |; | \__ \ |_| |/ / |; | |___/\___//___| Suite |; | |; -------------------------------------------------------------------------; | The current SU2 release has been coordinated by the |; | SU2 International Developers Society <www.su2devsociety.org> |; | with selected contributions from the open-source community. |; -------------------------------------------------------------------------; | The main research teams contributing to the current release are: |; | - Prof. Juan J. Alonso's group at Stanford University. |; | - Prof. Piero Colonna's group at Delft University of Technology. |; | - Prof. Nicolas R. Gauger's group at Kaiserslautern U. of Technology. |; | - Prof. Alberto Guardone's group at Polytechnic University of Milan. |; | - Prof. Rafael Palacios' group at Imperial College London. |; | - Prof. Vincent Terrapon's group at the University of Liege. |; | - Prof. Edwin van der Weide's group at the University of Twente. |; | - Lab. of New Concepts in Aeronautics at Tech. Inst. of Aeronautics. |; -------------------------------------------------------------------------; | Copyright 2012-2018, Francisco D. Palacios, Thomas D. Economon, |; | Tim Albring, and the SU2 contributors. |; | |; | SU2 is free software; you can redistribute it and/or |; | modify it under the terms of the GNU Lesser General Public |; | License as published by the Free Software Foundation; either",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/587:7249,release,release,7249,https://su2code.github.io,https://github.com/su2code/SU2/issues/587,1,['release'],['release']
Deployability,"g-config: /home/user/anaconda3/bin/pkg-config (0.29.2); /work/A/openmpi/3.0.0_intel2018u2/bin/mpicc found: YES (/work/A/openmpi/3.0.0_intel2018u2/bin/mpicc) 3.0.0; Run-time dependency MPI for c found: YES 3.0.0; /work/A/openmpi/3.0.0_intel2018u2/bin/mpicxx found: YES (/work/A/openmpi/3.0.0_intel2018u2/bin/mpicxx) 3.0.0; Run-time dependency MPI for cpp found: YES 3.0.0; Message: Boost sources found.; Program swig found: YES (/home/user/anaconda3/bin/swig); Message: Using mpi4py from /home/user/anaconda3/lib/python3.7/site-packages/mpi4py/include; Dependency python found: YES (pkgconfig); Program install.sh found: YES (/bin/sh /home/user/programs/su2/SU2_src/SU2_PY/pySU2/install.sh); Message: -------------------------------------------------------------------------; | ___ _ _ ___ |; | / __| | | |_ ) Release 7.0.8 ""Blackbird"" |; | \__ \ |_| |/ / |; | |___/\___//___| Meson Configuration Summary |; | |; -------------------------------------------------------------------------; ; Option Value; ---------------------; TecIO: true; CGNS: true; AD (reverse): false; AD (forward): false; Python Wrapper: true; Intel-MKL: false; OpenBlas: false; PaStiX: false; Mixed Float: false; ; Please be sure to add the $SU2_HOME and $SU2_RUN environment variables,; and update your $PATH (and $PYTHONPATH if applicable) with $SU2_RUN; ; Based on the input to this configuration, add these lines to your .bashrc file:; ; export SU2_RUN=/home/user/programs/su2/SU2-7.0.8/bin; export SU2_HOME=/home/user/programs/su2/SU2_src; export PATH=$PATH:$SU2_RUN; export PYTHONPATH=$PYTHONPATH:$SU2_RUN; ; Use './ninja -C build install' to compile and install SU2; ; Build targets in project: 12; ; Found ninja-1.10.0.git at /home/user/programs/su2/SU2_src/ninja; Using 'STRIP' from environment with value: '/home/user/anaconda3/bin/x86_64-conda_cos6-linux-gnu-strip'; Using 'STRIP' from environment with value: '/home/user/anaconda3/bin/x86_64-conda_cos6-linux-gnu-strip'; ```. Am I specifying it incorrectly?; Thanks.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1134#issuecomment-744491311:4789,Configurat,Configuration,4789,https://su2code.github.io,https://github.com/su2code/SU2/issues/1134#issuecomment-744491311,5,"['Configurat', 'configurat', 'install', 'update']","['Configuration', 'configuration', 'install', 'update']"
Deployability,"g. Currently, I would have to create a new Design Variable (DV) for most of those variables. If anyone has tried this, they know it is a tedious task with having to make alterations in various parts of the code.; >; > But all of these design variables can be represented by aggregations of FFD point movements. The span of the wing can be controlled by constraining the movement of FFD points in the y-direction to be proportional to their y coordinate. The current twist variable does a similar aggregation, at each twist location it rotates the corresponding 4 FFD points by the given angle. ; >; >These design variables could be represented by simple python functions that take in a set of FFD points and aggregate their movement in the desired way. All this can be done without any incision into the C++ code, given a python interface that can provide the C++ code the final FFD point locations and letting it do the deformation. . Moving functionality to python could also remove the need for some of the other SU2 modules that haven't been updated for a while. For example, SU2_GEO is a bloated wrapper c++ script that calls a couple of CGeometry/CSurfaceMovement functions. The calling of these functions could be easily ported to python and increase the functionality of the Python Wrapper interface. . Some of the specific things I want to do in this PR:. 1. Refactor SU2_GEO such that all its functionality can be performed in python (in progress); 2. Add a generalized thickness constraint (in progress); 3. Be able to do multiple types of geometry evaluation (for example wing+fuselage); 4. Expose some of the mesh deformation functions to python to allow for robust design variable definition; 5. Perform all of the shape optimization using the in-memory python scripts; 6. Intelligent handling of solution divergences that doesn't break the optimization; 7. Better way to define multipoint optimizations; 8. Better multi-objective optimization definition (#913 might be helpful in this);",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/922:2006,update,updated,2006,https://su2code.github.io,https://github.com/su2code/SU2/pull/922,2,['update'],['updated']
Deployability,"ge: Boost sources found.; Run-time dependency openblas found: YES 0.3.8; Program swig found: YES (/usr/bin/swig); Message: Using mpi4py from /home/slimshady/.local/lib/python3.8/site-packages/mpi4py/include; Run-time dependency python3 found: YES 3.8; Program install.sh found: YES (/bin/sh /home/slimshady/UserPackages/SU2_NEW/SU2_PY/pySU2/install.sh); Message: -------------------------------------------------------------------------; | ___ _ _ ___ |; | / __| | | |_ ) Release 7.0.4 ""Blackbird"" |; | \__ \ |_| |/ / |; | |___/\___//___| Meson Configuration Summary |; | |; -------------------------------------------------------------------------; ; Option Value; ---------------------; TecIO: true; CGNS: true; AD (reverse): true; AD (forward): true; Python Wrapper: true; Intel-MKL: false; OpenBlas: true; PaStiX: false. Please be sure to add the $SU2_HOME and $SU2_RUN environment variables,; and update your $PATH (and $PYTHONPATH if applicable) with $SU2_RUN. Based on the input to this configuration, add these lines to your .bashrc file:. export SU2_RUN=/home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; export SU2_HOME=/home/slimshady/UserPackages/SU2_NEW; export PATH=$PATH:$SU2_RUN; export PYTHONPATH=$PYTHONPATH:$SU2_RUN. Use './ninja -C build install' to compile and install SU2. Build targets in project: 21. Found ninja-1.10.0 at /usr/bin/ninja; ```. ```; slimshady@arch-linux-hp-probook-g3-450: SU2_NEW$ ninja -j4 -C build install; ninja: Entering directory `build'; [569/870] Linking target SU2_CFD/src/SU2_CFD.; FAILED: SU2_CFD/src/SU2_CFD ; c++ -o SU2_CFD/src/SU2_CFD 'SU2_CFD/src/37e1b17@@SU2_CFD@exe/SU2_CFD.cpp.o' -Wl,--as-needed -Wl,--no-undefined -Wl,-O1 -Wl,--start-group SU2_CFD/src/libSU2core.a externals/cgns/libcgns.a externals/metis/libmetis.a externals/parmetis/libparmetis.a externals/tecio/teciompisrc/libteciompi.a Common/src/libSU2Common.a -Wl,-rpath -Wl,/usr/lib/openmpi -Wl,--enable-new-dtags /usr/lib/openmpi/libmpi.so -Wl,-rpath -Wl,/usr/lib/openmpi -Wl,--enab",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/991#issuecomment-631986633:2521,configurat,configuration,2521,https://su2code.github.io,https://github.com/su2code/SU2/issues/991#issuecomment-631986633,1,['configurat'],['configuration']
Deployability,"gin\AppData\Local\Programs\Python\Python39\python.exe -c import mpi4py; print(mpi4py.get_include()); --- stdout ---; C:\Users\KleineKampfzwergin\AppData\Local\Programs\Python\Python39\lib\site-packages\mpi4py\include; ; --- stderr ---; ; ; Message: Using mpi4py from C:\Users\KleineKampfzwergin\AppData\Local\Programs\Python\Python39\lib\site-packages\mpi4py\include; ""python-3.9-embed"" could not be found in LIBPC (None), this is likely due to a relocated python installation; Pkg-config binary for MachineChoice.HOST is cached.; Determining dependency 'python-3.9-embed' with pkg-config executable 'D:\\Programme\\pkg-config-lite-0.28-1_bin-win32\\pkg-config-lite-0.28-1\\bin\\pkg-config.EXE'; PKG_CONFIG_PATH: ; Called `D:\Programme\pkg-config-lite-0.28-1_bin-win32\pkg-config-lite-0.28-1\bin\pkg-config.EXE --modversion python-3.9-embed` -> 1; ; Found ""python-3.9-embed"" via fallback pkgconfig lookup in PKG_CONFIG_LIBDIR/PKG_CONFIG_PATH; Found ""python-3.9"" via SYSCONFIG module; Dependency python found: YES (sysconfig); Program install.sh found: YES (sh D:\Programme\SU2-7.1.1\SU2_PY/pySU2\install.sh); Message: -------------------------------------------------------------------------; | ___ _ _ ___ |; | / __| | | |_ ) Release 7.1.1 ""Blackbird"" |; | \__ \ |_| |/ / |; | |___/\___//___| Meson Configuration Summary |; | |; -------------------------------------------------------------------------; ; Option Value; ---------------------; TecIO: true; CGNS: true; AD (reverse): true; AD (forward): true; Python Wrapper: true; Intel-MKL: false; OpenBlas: false; PaStiX: false; Mixed Float: false; ; Please be sure to add the $SU2_HOME and $SU2_RUN environment variables,; and update your $PATH (and $PYTHONPATH if applicable) with $SU2_RUN; ; Based on the input to this configuration, add these lines to your .bashrc file:; ; export SU2_RUN=D:\Programme\SU2-7.1.1\bin/bin; export SU2_HOME=D:\Programme\SU2-7.1.1; export PATH=$PATH:$SU2_RUN; export PYTHONPATH=$PYTHONPATH:$SU2_RUN; ; Use './ninja -",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/888#issuecomment-821840286:8344,install,install,8344,https://su2code.github.io,https://github.com/su2code/SU2/issues/888#issuecomment-821840286,1,['install'],['install']
Deployability,"github.com/actions/cache/pull/1129"">actions/cache#1129</a></li>; </ul>; <p><strong>Full Changelog</strong>: <a href=""https://github.com/actions/cache/compare/v3...v3.3.1"">https://github.com/actions/cache/compare/v3...v3.3.1</a></p>; <h2>v3.3.0</h2>; <h2>What's Changed</h2>; <ul>; <li>Bug: Permission is missing in cache delete example by <a href=""https://github.com/kotokaze""><code>@​kotokaze</code></a> in <a href=""https://redirect.github.com/actions/cache/pull/1123"">actions/cache#1123</a></li>; </ul>; <!-- raw HTML omitted -->; </blockquote>; <p>... (truncated)</p>; </details>; <details>; <summary>Changelog</summary>; <p><em>Sourced from <a href=""https://github.com/actions/cache/blob/main/RELEASES.md"">actions/cache's changelog</a>.</em></p>; <blockquote>; <h1>Releases</h1>; <h3>4.0.1</h3>; <ul>; <li>Updated <code>isGhes</code> check</li>; </ul>; <h3>4.0.0</h3>; <ul>; <li>Updated minimum runner version support from node 12 -&gt; node 20</li>; </ul>; <h3>3.3.3</h3>; <ul>; <li>Updates <code>@​actions/cache</code> to v3.2.3 to fix accidental mutated path arguments to <code>getCacheVersion</code> <a href=""https://redirect.github.com/actions/toolkit/pull/1378"">actions/toolkit#1378</a></li>; <li>Additional audit fixes of npm package(s)</li>; </ul>; <h3>3.3.2</h3>; <ul>; <li>Fixes bug with Azure SDK causing blob downloads to get stuck.</li>; </ul>; <h3>3.3.1</h3>; <ul>; <li>Reduced segment size to 128MB and segment timeout to 10 minutes to fail fast in case the cache download is stuck.</li>; </ul>; <h3>3.3.0</h3>; <ul>; <li>Added option to lookup cache without downloading it.</li>; </ul>; <h3>3.2.6</h3>; <ul>; <li>Fix zstd not being used after zstd version upgrade to 1.5.4 on hosted runners.</li>; </ul>; <h3>3.2.5</h3>; <ul>; <li>Added fix to prevent from setting MYSYS environment variable globally.</li>; </ul>; <h3>3.2.4</h3>; <ul>; <li>Added option to fail job on cache miss.</li>; </ul>; <h3>3.2.3</h3>; <ul>; <li>Support cross os caching on Windows as an opt-in feature.</li",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2232:6328,Update,Updates,6328,https://su2code.github.io,https://github.com/su2code/SU2/pull/2232,1,['Update'],['Updates']
Deployability,"gs mentioned above. However, the current implementation in develop only works correctly for PARAVIEW_MULTIBLOCK and for RESTART type output files. This is because in the case of PARAVIEW_MULTIBLOCK, the additional file output using the iteration number in the filename, is performed in the switch case block directly. . For all other output files, the switch case block only generates the correct filename with the iteration number appended. After the switch block, it is (wrongly) checked if (and only if) the WRT_RESTART_OVERWRITE flag is set to NO. If so, the additional file is written. Therefore, this logic only works correctly for RESTART files (and PARAVIEW_MULTIBLOCK files, because for that format, the file dump is independent of the file dump after the switch block. . The proposed fix here introduces a local boolean (doWriteIterFile) that acts as a switch for the additional file dump. It is set in the switch case block and afterwards it is checked if this variable is true or false. Based on this value, the file dump is executed or not. Furthermore, the fix introduces and corrects some comments to make the function easier to understand. ## Related Work; The flags are already available in the develop branch as config options but they don't work as expected. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [X] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2036:2643,update,updated,2643,https://su2code.github.io,https://github.com/su2code/SU2/pull/2036,1,['update'],['updated']
Deployability,"h the volume results, but the amplitude of the lift coefficient is too small. I guess that the velocities are not set properly / mixed up / require a call to some update function or similar. **I'm stuck at this point. Does someone have any idea what I'm doing wrong?? I feel that I am missing an important step here...**~~; - [ ] ~~final test: mesh deformation + moving grid + gust~~; - [x] final test: mesh deformation + gust. Apart from the steps above, the following questions / tasks remain:; - [ ] ~~The the Split Velocity Method (classes SetWind_GustField and CSourceWindGust) is not used in SU2 as far a I understand and for all gust types, the inputs are zero. Instead, the Field Velocity Method is used, but when trying to remove the functions SetWindGust and SetWindGustDer, I broke the code elsewhere. In order to enable 3D meshes, I simply set the outputs to zero for now. I believe that we should clean up the code, but my C++ skills are the limiting factor here, so I need some help with that.~~ --> In a new, dedicated pull request. ## Related Work; The gust encounter for 3D meshes was requested in #1319 and in the Forum https://www.cfd-online.com/Forums/su2/234021-gusts-3d.html and https://www.cfd-online.com/Forums/su2/225914-no-slip-condition-3d-gust.html. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [ ] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [x] I have added a test case that demonstrates my contribution, if necessary.; - [x] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1954:4676,update,updated,4676,https://su2code.github.io,https://github.com/su2code/SU2/pull/1954,1,['update'],['updated']
Deployability,"h2>; <p>Support 10GB cache upload using the latest version <code>1.0.8</code> of <a href=""https://www.npmjs.com/package/@actions/cache""><code>@actions/cache</code> </a></p>; <h2>v2.1.6</h2>; <ul>; <li>Catch unhandled &quot;bad file descriptor&quot; errors that sometimes occurs when the cache server returns non-successful response (<a href=""https://github-redirect.dependabot.com/actions/cache/pull/596"">actions/cache#596</a>)</li>; </ul>; <h2>v2.1.5</h2>; <ul>; <li>Fix permissions error seen when extracting caches with GNU tar that were previously created using BSD tar (<a href=""https://github-redirect.dependabot.com/actions/cache/issues/527"">actions/cache#527</a>)</li>; </ul>; <h2>v2.1.4</h2>; <ul>; <li>Make caching more verbose <a href=""https://github-redirect.dependabot.com/actions/toolkit/pull/650"">#650</a></li>; <li>Use GNU tar on macOS if available <a href=""https://github-redirect.dependabot.com/actions/toolkit/pull/701"">#701</a></li>; </ul>; <h2>v2.1.3</h2>; <ul>; <li>Upgrades <code>@actions/core</code> to v1.2.6 for <a href=""https://github.com/advisories/GHSA-mfwh-5m23-j46w"">CVE-2020-15228</a>. This action was not using the affected methods.</li>; <li>Fix error handling in <code>uploadChunk</code> where 400-level errors were not being detected and handled correctly</li>; </ul>; <h2>v2.1.2</h2>; <ul>; <li>Adds input to limit the chunk upload size, useful for self-hosted runners with slower upload speeds</li>; <li>No-op when executing on GHES</li>; </ul>; <h2>v2.1.1</h2>; <ul>; <li>Update <code>@actions/cache</code> package to <code>v1.0.2</code> which allows cache action to use posix format when taring files.</li>; </ul>; <h2>v2.1.0</h2>; <ul>; <li>Replaces the <code>http-client</code> with the Azure Storage SDK for NodeJS when downloading cache content from Azure. This should help improve download performance and reliability as the SDK downloads files in 4 MB chunks, which can be parallelized and retried independently</li>; <li>Display download progress and sp",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1755:1934,Upgrade,Upgrades,1934,https://su2code.github.io,https://github.com/su2code/SU2/pull/1755,1,['Upgrade'],['Upgrades']
Deployability,"he host machine: gcc ld.bfd 2.30; C++ compiler for the host machine: c++ (gcc 8.1.0 ""c++ (x86_64-posix-seh-rev0, Built by MinGW-W64 project) 8.1.0""); C++ linker for the host machine: c++ ld.bfd 2.30; Host machine cpu family: x86_64; Host machine cpu: x86_64; Program python3 found: YES (C:\Users\Danie\Anaconda3\envs\vsptools\python.exe); Did not find pkg-config by name 'pkg-config'; Found Pkg-config: NO; mpicc found: NO; Run-time dependency MPI for c found: NO (tried pkgconfig and config-tool); mpic++ found: NO; Run-time dependency MPI for cpp found: NO (tried pkgconfig and config-tool); Program swig found: YES (C:\Softwares\swigwin-4.0.2\swig.EXE); Dependency python found: YES (sysconfig); Program install.sh found: YES (sh C:\Users\Danie\Documents\SU2\SU2_PY/pySU2\install.sh); Message: -------------------------------------------------------------------------; | ___ _ _ ___ |; | / __| | | |_ ) Release 7.2.0 ""Blackbird"" |; | \__ \ |_| |/ / |; | |___/\___//___| Meson Configuration Summary |; | |; -------------------------------------------------------------------------. Option Value; ---------------------; TecIO: false; CGNS: true; AD (reverse): true; AD (forward): true; Python Wrapper: true; Intel-MKL: false; OpenBlas: false; PaStiX: false; Mixed Float: false; libROM: false. Please be sure to add the $SU2_HOME and $SU2_RUN environment variables,; and update your $PATH (and $PYTHONPATH if applicable) with $SU2_RUN. Based on the input to this configuration, add these lines to your .bashrc file:. export SU2_RUN=C:\bin/bin; export SU2_HOME=C:\Users\Danie\Documents\SU2; export PATH=$PATH:$SU2_RUN; export PYTHONPATH=$PYTHONPATH:$SU2_RUN. Use './ninja -C C:\Users\Danie\Documents\SU2\build install' to compile and install SU2. Build targets in project: 17. Found ninja.exe-1.9.0 at C:\Users\Danie\Documents\SU2\ninja.exe`. **526 files install successfully.** . `WARNING: the currently checked out submodule commit in C:\Users\Danie\Documents\SU2\externals\opdi does not match the SH",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1376:1885,Configurat,Configuration,1885,https://su2code.github.io,https://github.com/su2code/SU2/issues/1376,1,['Configurat'],['Configuration']
Deployability,"he problem was not only with the two vectors LinsysSol and LinSysRes, which as you say may be constructed using a 'new' statement. In the case of the StiffMatrix, there is a major difference between calling the constructor of CSysMatrix by using 'new', and calling the StiffMatrix.Initialize() method, for what I see in matrix_structure.cpp. Also, StiffMatrix is a sparse matrix (nDim x nPoint) x (nDim x nPoint), which must be allocated correctly using the Initialize method to avoid carrying around lots of zeros. With regards to the other point, I think that it is interesting to use the Initialize features of the CSysVector and CSysMatrix in the constructor of the class, just as it happens in the rest of the solver classes (see for example solver_direct_mean, line 261, where the Jacobian of the problem is initialized using a Jacobian.Initialize() call in the constructor). As far as I see it, the mesh update problem is nothing but a copy of the linear elasticity problem, so maintaining the parallelism with all the other solvers in the code (and, in particular, with the structural solver) may be interesting. . Moreover, by allocating the memory in the constructor using StiffMatrix.Initialize(nPoint, nPointDomain...) we make sure we can use the linear solvers in parallel by building a compliant sparse matrix. And if we allocate the stiffness matrix in the constructor, it makes sense to also do so with the vectors of the problem. Again, this maintains the similarities with the rest of the solvers. Finally, in my particular case I call the SetVolume_Deformation() function at least as many times as I do with the fluid and the structural solver. The mesh deformation is a third field in the problem, and by initializing the structure at the beginning of the simulation we can reuse the same spaces in memory along the whole of it, given that (at least in unsteady cases) the mesh update routines may be called several times. This way we avoid to be continuously allocating/deallocati",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/200#issuecomment-148017482:1092,update,update,1092,https://su2code.github.io,https://github.com/su2code/SU2/pull/200#issuecomment-148017482,1,['update'],['update']
Deployability,"he tests I did over at #1388 where I will also add a inc+turb+2species-with-2-inlets reg test (and hopefully also non-dimensional). Inlet file non-dimensionalization: The inlet file writes dimensional values for the mean flow, and the values that are read are non-dimensionalized in the BC_Inlet routine itself -> I personally find this approach quite good, but I dont believe the SA+SST are adhering to that. See also [this cfd-online issue](https://www.cfd-online.com/Forums/su2/239313-inlet-profile-sst-nondimensional-treatment.html). I will try to fix this here as well.; - nu tilde is non-dimensionalized by multiplying with densityRef/viscosityRef (which I guess from the code); - TKE by multiplying with 1/VelocityRef^2 (which I guess from the code, and would fit with Feng Liu Non-Dim paper i have); - Omega ~~by multiplying with length_Ref/VelocityRef (which would fit with Feng Liu) or~~ by multiplying with ViscRef/(rhoRef*VelocityRef^2); Any info on this is appreciated.; My approach would be non-dimensionalize in the BC_Inlet routine for Turb as well to stay consistent with the mean flow, For the mean flow it has to be done like that because the meaning of the values is determined in the inlet routine. Otherwise one could do all that consistently a bit earlier. I have to remember to add a little hint to the laminar step tutorial to state that the inlet file should be dimensional. ## Related Work; https://github.com/su2code/SU2/pull/516 initial implementation. ## PR Checklist. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1427:2266,update,updated,2266,https://su2code.github.io,https://github.com/su2code/SU2/pull/1427,1,['update'],['updated']
Deployability,"here's a trace from my ubuntu machine --. ```; ---------------------- Read Grid File Information -----------------------; Three dimensional problem.; 293290 points before parallel partitioning.; Performing linear partitioning of the grid nodes.; 494258 interior elements before parallel partitioning.; Distributing elements across all ranks.; Calling the partitioning functions.; Getting into adjacency function.; Building the graph adjacency structure.; 5 surface markers.; 10222 boundary elements in index 0 (Marker = aircraft).; 9712 boundary elements in index 1 (Marker = farfield).; 3382 boundary elements in index 2 (Marker = inner_nearfield).; 19738 boundary elements in index 3 (Marker = symmetry).; 3382 boundary elements in index 4 (Marker = outer_nearfield).; Calling ParMETIS...; Traceback (most recent call last):; File ""/home/app/SU2/install/bin/parallel_computation.py"", line 110, in <module>; main(); File ""/home/app/SU2/install/bin/parallel_computation.py"", line 61, in main; options.compute ); File ""/home/app/SU2/install/bin/parallel_computation.py"", line 88, in parallel_computation; info = SU2.run.CFD(config) ; RuntimeError:; Command = mpirun -n 12 /home/app/SU2/install/bin/SU2_CFD config_CFD.cfg; SU2 process returned error '15'; [ubuntu:8553] *** An error occurred in MPI_Wait; [ubuntu:8553] *** on communicator MPI COMMUNICATOR 3 DUP FROM 0; [ubuntu:8553] *** MPI_ERR_TRUNCATE: message truncated; [ubuntu:8553] *** MPI_ERRORS_ARE_FATAL: your MPI job will now abort; --------------------------------------------------------------------------; mpirun has exited due to process rank 9 with PID 8554 on; node ubuntu exiting improperly. There are two reasons this could occur:. 1. this process did not call ""init"" before exiting, but others in; the job did. This can cause a job to hang indefinitely while it waits; for all processes to call ""init"". By rule, if one process calls ""init"",; then ALL processes must call ""init"" prior to termination. 2. this process called ""init"", bu",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/159#issuecomment-75485283:848,install,install,848,https://su2code.github.io,https://github.com/su2code/SU2/issues/159#issuecomment-75485283,2,['install'],['install']
Deployability,"hey drewkett,; sorry for the late response... we're getting back in to gear here at school. given the changes that have happend over the last few months, we should move this to a new pull request. this change is important, so would you mind doing this for us? -. pull a fresh copy of the new 'develop' branch. this is the branch we're using to stage new changes, to keep the master branch release ready. ```; git checkout develop; ```. you can make these changes then, commit and then push them back to your develop branch. ```; git commit -m ""description of changes""; git push origin develop; ```. then make a pull request back to the develop branch; let me know if you need any help!",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/20#issuecomment-56600660:389,release,release,389,https://su2code.github.io,https://github.com/su2code/SU2/pull/20#issuecomment-56600660,1,['release'],['release']
Deployability,"hey drewkett,; thanks for the edit, sorry for the delay just getting back from holiday break. it looks like the request includes c++ changes, probably because the master has changed. could you please update that code and we can accept the python change.; thanks!!",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/20#issuecomment-31780927:200,update,update,200,https://su2code.github.io,https://github.com/su2code/SU2/pull/20#issuecomment-31780927,1,['update'],['update']
Deployability,"hine --. ```; ---------------------- Read Grid File Information -----------------------; Three dimensional problem.; 293290 points before parallel partitioning.; Performing linear partitioning of the grid nodes.; 494258 interior elements before parallel partitioning.; Distributing elements across all ranks.; Calling the partitioning functions.; Getting into adjacency function.; Building the graph adjacency structure.; 5 surface markers.; 10222 boundary elements in index 0 (Marker = aircraft).; 9712 boundary elements in index 1 (Marker = farfield).; 3382 boundary elements in index 2 (Marker = inner_nearfield).; 19738 boundary elements in index 3 (Marker = symmetry).; 3382 boundary elements in index 4 (Marker = outer_nearfield).; Calling ParMETIS...; Traceback (most recent call last):; File ""/home/app/SU2/install/bin/parallel_computation.py"", line 110, in <module>; main(); File ""/home/app/SU2/install/bin/parallel_computation.py"", line 61, in main; options.compute ); File ""/home/app/SU2/install/bin/parallel_computation.py"", line 88, in parallel_computation; info = SU2.run.CFD(config) ; RuntimeError:; Command = mpirun -n 12 /home/app/SU2/install/bin/SU2_CFD config_CFD.cfg; SU2 process returned error '15'; [ubuntu:8553] *** An error occurred in MPI_Wait; [ubuntu:8553] *** on communicator MPI COMMUNICATOR 3 DUP FROM 0; [ubuntu:8553] *** MPI_ERR_TRUNCATE: message truncated; [ubuntu:8553] *** MPI_ERRORS_ARE_FATAL: your MPI job will now abort; --------------------------------------------------------------------------; mpirun has exited due to process rank 9 with PID 8554 on; node ubuntu exiting improperly. There are two reasons this could occur:. 1. this process did not call ""init"" before exiting, but others in; the job did. This can cause a job to hang indefinitely while it waits; for all processes to call ""init"". By rule, if one process calls ""init"",; then ALL processes must call ""init"" prior to termination. 2. this process called ""init"", but exited without calling ""finali",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/159#issuecomment-75485283:1032,install,install,1032,https://su2code.github.io,https://github.com/su2code/SU2/issues/159#issuecomment-75485283,1,['install'],['install']
Deployability,"his PR applies the following bugfixes:; - correct retrieval of the wall roughness in a multizone setup, the original intention of this PR; - the non-MPI substitute for `SU2_MPI::Allgatherv` and `Alltoallv` now takes the displacement into account; - fix #1293, adding a missing `#include` statement . Below is the original PR description. ## Proposed Changes; I think that currently the roughness at the closest wall is retrieved in a wrong way for multizone setups. The current structure is like this:. def CGeometry::ComputeWallDistance:; for each iZone:; construct an ADT which stores the markers of iZone; for each jZone:; call CPhysicalGeometry::SetWallDistance to jZone geometry which \; reduces the stored wall distances of jZone's points according to iZone's markers in the ADT and\; sets wall roughnesses of jZone's points according to data from jZone's geometry. The issue I perceive here is that the closest wall in the ADT, identified by the `markerID`, belongs to `iZone`. `iZone`'s geometry and config must therefore be an additional argument to `CPhysicalGeometry::SetWallDistance`. We must not use the wall roughness from `jZone`'s geometry and config associated to the markerID, as it is currently done. ## Related Work; ?; ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X ] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [X ] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1286:1972,update,updated,1972,https://su2code.github.io,https://github.com/su2code/SU2/pull/1286,1,['update'],['updated']
Deployability,"hort array of matrices, the result of that is code like the above that explicitly manipulates the lanes of our SIMD type, such code can be completely hidden inside CSysMatrix which is good because a 4x4 vectorized transpose and matrix update looks like this; ```c++; // block j, subs from jj and goes to ij; T0 = blk_j[ k ].unpackLo(blk_j[k+1]); T1 = blk_j[ k ].unpackHi(blk_j[k+1]);; T2 = blk_j[k+2].unpackLo(blk_j[k+3]); T3 = blk_j[k+2].unpackHi(blk_j[k+3]);. C0 = T0.widePermuteLo(T2); C1 = T1.widePermuteLo(T3);; C2 = T0.widePermuteHi(T2); C3 = T1.widePermuteHi(T3);. (Array4d(&bjj[0][k])-C0).store(&bjj[0][k]);; (Array4d(&bjj[1][k])-C1).store(&bjj[1][k]);; (Array4d(&bjj[2][k])-C2).store(&bjj[2][k]);; (Array4d(&bjj[3][k])-C3).store(&bjj[3][k]);. C0.store(&bij[0][k]); C1.store(&bij[1][k]);; C2.store(&bij[2][k]); C3.store(&bij[3][k]);; ```; I am showing this because it represents a readability worst case in terms of manipulating SIMD types, we might end up with one or two of these to get the best performance possible but they will always be encapsulated and deep in kernel-type areas of SU2 that are almost never touched. ## Conclusions; - Over 45% faster CSysMatrix updates by mapping off-diagonal blocks to edges and diagonal blocks to points.; - Colouring is the best strategy for hybrid parallelism of compute-heavy edge loops and matrix updates as it interleaves compute and memory operations.; - AoS storage should be kept to avoid significant loss of performance in compute-light edge loops due to poor locality of SoA storage.; - Major implication of AoS is on point loops where some data needs to be fetched (transposed) into local variables for effective vectorization.; - An intermediate storage scheme, AoSoA, can provide both good locality and vectorization of point loops, however it requires that data be accessed via special iterators and scalar code based on it would have poor performance. Next I will try to estimate how much we can gain for a ""realistic"" numerics class.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/789#issuecomment-535977206:16719,update,updates,16719,https://su2code.github.io,https://github.com/su2code/SU2/issues/789#issuecomment-535977206,4,['update'],['updates']
Deployability,"https://github.com/kotewar""><code>@​kotewar</code></a> in <a href=""https://redirect.github.com/actions/cache/pull/1129"">actions/cache#1129</a></li>; </ul>; <p><strong>Full Changelog</strong>: <a href=""https://github.com/actions/cache/compare/v3...v3.3.1"">https://github.com/actions/cache/compare/v3...v3.3.1</a></p>; <h2>v3.3.0</h2>; <h2>What's Changed</h2>; <ul>; <li>Bug: Permission is missing in cache delete example by <a href=""https://github.com/kotokaze""><code>@​kotokaze</code></a> in <a href=""https://redirect.github.com/actions/cache/pull/1123"">actions/cache#1123</a></li>; </ul>; <!-- raw HTML omitted -->; </blockquote>; <p>... (truncated)</p>; </details>; <details>; <summary>Changelog</summary>; <p><em>Sourced from <a href=""https://github.com/actions/cache/blob/main/RELEASES.md"">actions/cache's changelog</a>.</em></p>; <blockquote>; <h1>Releases</h1>; <h3>4.0.1</h3>; <ul>; <li>Updated <code>isGhes</code> check</li>; </ul>; <h3>4.0.0</h3>; <ul>; <li>Updated minimum runner version support from node 12 -&gt; node 20</li>; </ul>; <h3>3.3.3</h3>; <ul>; <li>Updates <code>@​actions/cache</code> to v3.2.3 to fix accidental mutated path arguments to <code>getCacheVersion</code> <a href=""https://redirect.github.com/actions/toolkit/pull/1378"">actions/toolkit#1378</a></li>; <li>Additional audit fixes of npm package(s)</li>; </ul>; <h3>3.3.2</h3>; <ul>; <li>Fixes bug with Azure SDK causing blob downloads to get stuck.</li>; </ul>; <h3>3.3.1</h3>; <ul>; <li>Reduced segment size to 128MB and segment timeout to 10 minutes to fail fast in case the cache download is stuck.</li>; </ul>; <h3>3.3.0</h3>; <ul>; <li>Added option to lookup cache without downloading it.</li>; </ul>; <h3>3.2.6</h3>; <ul>; <li>Fix zstd not being used after zstd version upgrade to 1.5.4 on hosted runners.</li>; </ul>; <h3>3.2.5</h3>; <ul>; <li>Added fix to prevent from setting MYSYS environment variable globally.</li>; </ul>; <h3>3.2.4</h3>; <ul>; <li>Added option to fail job on cache miss.</li>; </ul>; <h3",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2232:6223,Update,Updated,6223,https://su2code.github.io,https://github.com/su2code/SU2/pull/2232,1,['Update'],['Updated']
Deployability,"i.so.40; #4 0x000000000062fc74 in CBaseMPIWrapper::Allgather (sendbuf=0x214f670, ; sendcnt=1, sendtype=0x2aaaaafb4de0 <ompi_mpi_double>, recvbuf=0x213a400, ; recvcnt=1, recvtype=0x2aaaaafb4de0 <ompi_mpi_double>, ; comm=0x2aaaaafbbc60 <ompi_mpi_comm_world>); at ../SU2_CFD/src/output/filewriter/../../../include/output/filewriter/../../../../Common/include/parallelization/mpi_structure.hpp:220; #5 0x0000000000860117 in CSolver::SetResidual_RMS (this=0x21381c0, ; geometry=0x21cb340, config=0x2073590); at ../SU2_CFD/src/solvers/CSolver.cpp:2183; #6 0x00000000007b6af8 in CHeatSolver::ImplicitEuler_Iteration (; this=0x21381c0, geometry=0x21cb340, solver_container=0x23a1c10, ; config=0x2073590) at ../SU2_CFD/src/solvers/CHeatSolver.cpp:1549; #7 0x0000000000b5a666 in CIntegration::Time_Integration (this=0x2381f70, ; geometry=0x21cb340, solver_container=0x23a1c10, config=0x2073590, ; iRKStep=0, RunTime_EqSystem=21); ---Type <return> to continue, or q <return> to quit---; at ../SU2_CFD/src/integration/CIntegration.cpp:205; #8 0x00000000004a2973 in CSingleGridIntegration::SingleGrid_Iteration (; this=0x2381f70, geometry=0x1fdc8b0, solver_container=0x1db9ad0, ; numerics_container=0x1fddb10, config=0x1a6cb50, RunTime_EqSystem=21, ; iZone=1, iInst=0); at ../SU2_CFD/src/integration/CSingleGridIntegration.cpp:73; #9 0x00000000004e33e4 in CHeatIteration::Iterate (this=0x218fdc0, ; output=0x20c8630, integration=0x1a59a90, geometry=0x1fdc8b0, ; solver=0x1db9ad0, numerics=0x1fddb10, config=0x1a6cb50, ; surface_movement=0x1a6cc30, grid_movement=0x1a6cc50, FFDBox=0x1a6cc70, ; val_iZone=1, val_iInst=0) at ../SU2_CFD/src/iteration/CHeatIteration.cpp:40; #10 0x00000000004db2ba in CFluidIteration::Solve (this=0x218fdc0, ; output=0x20c8630, integration=0x1a59a90, geometry=0x1fdc8b0, ; solver=0x1db9ad0, numerics=0x1fddb10, config=0x1a6cb50, ; surface_movement=0x1a6cc30, grid_movement=0x1a6cc50, FFDBox=0x1a6cc70, ; val_iZone=1, val_iInst=0); at ../SU2_CFD/src/iteration/CFluidIteration.cpp:302; #",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1241:2815,integrat,integration,2815,https://su2code.github.io,https://github.com/su2code/SU2/issues/1241,1,['integrat'],['integration']
Deployability,"i>; <li><a href=""https://github.com/actions/upload-release-asset/commit/7d8fb6c931cb341bda0f898a0d2191cf54abc69a""><code>7d8fb6c</code></a> Merge pull request <a href=""https://github-redirect.dependabot.com/actions/upload-release-asset/issues/6"">#6</a> from actions/IAmHughes/fix-link-to-license</li>; <li><a href=""https://github.com/actions/upload-release-asset/commit/c53f077c5d8c19236718abc4697a59634ef534cf""><code>c53f077</code></a> Fix link to LICENSE</li>; <li><a href=""https://github.com/actions/upload-release-asset/commit/72e8a5ef036620fb7afff8bbb8f9e78910c7ccbc""><code>72e8a5e</code></a> Merge pull request <a href=""https://github-redirect.dependabot.com/actions/upload-release-asset/issues/5"">#5</a> from cesperanc/documentation-update</li>; <li><a href=""https://github.com/actions/upload-release-asset/commit/bf2a7fbecfaaaa29f7819c650ad302e52f68238e""><code>bf2a7fb</code></a> Update example to use the fixed version</li>; <li>See full diff in <a href=""https://github.com/actions/upload-release-asset/compare/v1.0.1...v1.0.2"">compare view</a></li>; </ul>; </details>; <br />. [![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=actions/upload-release-asset&package-manager=github_actions&previous-version=1.0.1&new-version=1.0.2)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores). Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`. [//]: # (dependabot-automerge-start); [//]: # (dependabot-automerge-end). ---. <details>; <summary>Dependabot commands and options</summary>; <br />. You can trigger Dependabot actions by commenting on this PR:; - `@dependabot rebase` will rebase this PR; - `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it; - `@dependabot merge` will merge this PR af",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1737:2194,release,release-asset,2194,https://su2code.github.io,https://github.com/su2code/SU2/pull/1737,3,['release'],['release-asset']
Deployability,"iable]; int iElt, NbrElt=0, typ, is[8], swi[8], buf, s, idx, res;; ^~~; ./sources/Python3.7/SU2io.c: In function 'GetSU2SolSize':; ./sources/Python3.7/SU2io.c:787:3: warning: implicit declaration of function 'getline'; did you mean 'getenv'? [-Wimplicit-function-declaration]; getline(&lin, &len, FilHdl);; ^~~~~~~; getenv; ./sources/Python3.7/SU2io.c: In function 'WriteSU2SolutionBin':; ./sources/Python3.7/SU2io.c:1317:10: warning: variable 'ret' set but not used [-Wunused-but-set-variable]; size_t ret;; ^~~; ./sources/Python3.7/SU2io.c:1339:5: warning: 'strncpy' specified bound 33 equals destination size [-Wstringop-truncation]; strncpy(str_buf, SolTag[i], CGNS_STRING_SIZE);; ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~; C:\Program Files\mingw-w64\x86_64-8.1.0-posix-seh-rt_v6-rev0\mingw64\bin\gcc.exe -mdll -O -Wall -DMS_WIN64 -IC:\Users\Danie\Anaconda3\envs\vsptools\include -IC:\Users\Danie\Anaconda3\envs\vsptools\include -c ./sources/Python3.7/option.c -o build\temp.win-amd64-3.8\Release\.\sources\python3.7\option.o -std=c99 -Wno-unused-variable -Wno-unused-result -O3; ./sources/Python3.7/option.c: In function 'CheckOptions':; ./sources/Python3.7/option.c:46:32: warning: '.o' directive writing 2 bytes into a region of size between 1 and 1024 [-Wformat-overflow=]; sprintf(mshopt->OutNam, ""%s.o"", mshopt->BasNam);; ^~; ./sources/Python3.7/option.c:46:5: note: 'sprintf' output between 3 and 1026 bytes into a destination of size 1024; sprintf(mshopt->OutNam, ""%s.o"", mshopt->BasNam);; ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~; C:\Program Files\mingw-w64\x86_64-8.1.0-posix-seh-rt_v6-rev0\mingw64\bin\gcc.exe -mdll -O -Wall -DMS_WIN64 -IC:\Users\Danie\Anaconda3\envs\vsptools\include -IC:\Users\Danie\Anaconda3\envs\vsptools\include -c ./sources/Python3.7/libmesh6.c -o build\temp.win-amd64-3.8\Release\.\sources\python3.7\libmesh6.o -std=c99 -Wno-unused-variable -Wno-unused-result -O3; C:\Program Files\mingw-w64\x86_64-8.1.0-posix-seh-rt_v6-rev0\mingw64\bin\gcc.exe -mdll",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1379:4790,Release,Release,4790,https://su2code.github.io,https://github.com/su2code/SU2/issues/1379,1,['Release'],['Release']
Deployability,iation.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\fsi_computation.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2_CFD.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/__init__.py to C:\bin\bin/SU2; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/eval/design.py to C:\bin\bin/SU2/eval; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/eval/functions.py to C:\bin\bin/SU2/eval; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/eval/gradients.py to C:\bin\bin/SU2/eval; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/eval/__init__.py to C:\bin\bin/SU2/eval; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/io/config.py to C:\bin\bin/SU2/io; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/io/config_options.py to C:\bin\bin/SU2/io; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/io/data.py to C:\bin\bin/SU2/io; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/io/filelock.py to C:\bin\bin/SU2/io; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/io/redirect.py to C:\bin\bin/SU2/io; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/io/state.py to C:\bin\bin/SU2/io; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/io/tools.py to C:\bin\bin/SU2/io; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/io/historyMap.py to C:\bin\bin/SU2/io; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/io/__init__.py to C:\bin\bin/SU2/io; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/opt/project.py to C:\bin\bin/SU2/opt; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/opt/scipy_tools.py to C:\bin\bin/SU2/opt; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/opt/__init__.py to C:\bin\bin/SU2/opt; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/run/adjoint.py to C:\bin\bin/SU2/run; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/run/deform.py to C:\bin\bin/SU2/run; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/run/direct.py to C:\bin\bin/SU2/run; Installing C:\Users\Danie\Documents\SU2\SU2_PY,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1376:5870,Install,Installing,5870,https://su2code.github.io,https://github.com/su2code/SU2/issues/1376,1,['Install'],['Installing']
Deployability,"ield and outlet as TOTAL_INLET, FARFIELD, OUTLET and EULER and some (not all) combination between these BC were tried. The mesh was generated with Salome-Meca. It is a tetrahedral mesh. I have a script that permits to change the domain size with ease. So from the mesh perspective it is fairly easy to test different mesh sizes and domain sizes.; Generally the outer domain radius was between 1.5*propRadius to 10*propRadus. Domain height between 3*propRadius to 15*propRadius. The prop was at 2/3 of the total height (1/2 and 3/4 were also tested). Some simulations approximated from a far experimental results (thrust +/-10% error, torque +/-15%). Some completely diverged some converge towards something way out of the 10% error range. **To Reproduce**. You can find the configuration file below.; I cannot provide the mesh at the moment.; If needed I will change the geometry for ""reproduction"". `%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%; % %; % SU2 configuration file %; % Case description: Caradonna & Tung rotor in hover (still air) %; % Author: Thomas D. Economon %; % Institution: Stanford University %; % Date: 2020.05.24 %; % File Version 7.3.1 ""Blackbird"" %; % %; %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%. % ------------- DIRECT, ADJOINT, AND LINEARIZED PROBLEM DEFINITION ------------%; %; % Physical governing equations (EULER, NAVIER_STOKES,; % WAVE_EQUATION, HEAT_EQUATION, FEM_ELASTICITY,; % POISSON_EQUATION); SOLVER= EULER; %; % Mathematical problem (DIRECT, CONTINUOUS_ADJOINT); MATH_PROBLEM= DIRECT; %; % Restart solution (NO, YES); RESTART_SOL= NO . % ----------- COMPRESSIBLE AND INCOMPRESSIBLE FREE-STREAM DEFINITION ----------%; %; % Mach number (non-dimensional, based on the free-stream values); MACH_NUMBER= 0.0; %; % Angle of attack (degrees); AOA= 0.0; %; % Side-slip angle (degrees); SIDESLIP_ANGLE= 0.0; %; % Free-stream pressure (101325.0 N/m^2 by default, only Euler flows) ; FREESTREAM_",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1669:2638,configurat,configuration,2638,https://su2code.github.io,https://github.com/su2code/SU2/issues/1669,1,['configurat'],['configuration']
Deployability,"ild; The Meson build system; Version: 0.54.999; Source dir: /home/slimshady/UserPackages/SU2_HOME; Build dir: /home/slimshady/UserPackages/SU2_HOME/build; Build type: native build; Project name: SU2; Project version: 7.0.4 ""Blackbird""; C compiler for the host machine: cc (gcc 9.2.1 ""cc (Arch Linux 9.2.1+20200130-2) 9.2.1 20200130""); C linker for the host machine: cc ld.bfd 2.34; C++ compiler for the host machine: c++ (gcc 9.2.1 ""c++ (Arch Linux 9.2.1+20200130-2) 9.2.1 20200130""); C++ linker for the host machine: c++ ld.bfd 2.34; Host machine cpu family: x86_64; Host machine cpu: x86_64; Program python3 found: YES (/usr/bin/python3); Message: Boost sources found.; Found pkg-config: /usr/bin/pkg-config (1.6.3); Run-time dependency openblas found: YES 0.3.8; Program swig found: YES (/usr/bin/swig); Message: Using mpi4py from /home/slimshady/.local/lib/python3.8/site-packages/mpi4py/include; Dependency python found: YES (pkgconfig); Program install.sh found: YES (/bin/sh /home/slimshady/UserPackages/SU2_HOME/SU2_PY/pySU2/install.sh); Message: -------------------------------------------------------------------------; | ___ _ _ ___ |; | / __| | | |_ ) Release 7.0.4 ""Blackbird"" |; | \__ \ |_| |/ / |; | |___/\___//___| Meson Configuration Summary |; | |; -------------------------------------------------------------------------; ; Option Value; ---------------------; TecIO: true; CGNS: true; AD (reverse): true; AD (forward): true; Python Wrapper: true; Intel-MKL: false; OpenBlas: true; PaStiX: false. Please be sure to add the $SU2_HOME and $SU2_RUN environment variables,; and update your $PATH (and $PYTHONPATH if applicable) with $SU2_RUN. Based on the input to this configuration, add these lines to your .bashrc file:. export SU2_RUN=/home/slimshady/UserPackages/SU2_INSTALL/bin; export SU2_HOME=/home/slimshady/UserPackages/SU2_HOME; export PATH=$PATH:$SU2_RUN; export PYTHONPATH=$PYTHONPATH:$SU2_RUN. Use './ninja -C build install' to compile and install SU2. Build targets in ",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1000#issuecomment-634298776:1784,install,install,1784,https://su2code.github.io,https://github.com/su2code/SU2/issues/1000#issuecomment-634298776,1,['install'],['install']
Deployability,"im);; ...; ```; Performance wise this is actually better than the SoA version (4% on gradients, 35% on limiters) as it also benefits from better locality, and it is only slightly (3%) worse than zig zag storage, especially when fusing limiters and gradients as the transposition of the gradient into storage is greatly amortised.; Regarding readability, the 3 nested loops can be moved to methods of the container, but we cannot get rid off the local variable (if we want vectorization that is). **We lose the ability to vectorize primitive variable updates efficiently with AoS** but currently that only accounts for 3% of the runtime and it is a memory bound operation therefore it would not gain much from vectorization anyway. On the subject of de-swizzling data remember I said the writes into CSysMatrix would be a bit weird, that is because each Jacobian contribution will be a ""matrix of short arrays"" that needs to be transformed into a short array of matrices, the result of that is code like the above that explicitly manipulates the lanes of our SIMD type, such code can be completely hidden inside CSysMatrix which is good because a 4x4 vectorized transpose and matrix update looks like this; ```c++; // block j, subs from jj and goes to ij; T0 = blk_j[ k ].unpackLo(blk_j[k+1]); T1 = blk_j[ k ].unpackHi(blk_j[k+1]);; T2 = blk_j[k+2].unpackLo(blk_j[k+3]); T3 = blk_j[k+2].unpackHi(blk_j[k+3]);. C0 = T0.widePermuteLo(T2); C1 = T1.widePermuteLo(T3);; C2 = T0.widePermuteHi(T2); C3 = T1.widePermuteHi(T3);. (Array4d(&bjj[0][k])-C0).store(&bjj[0][k]);; (Array4d(&bjj[1][k])-C1).store(&bjj[1][k]);; (Array4d(&bjj[2][k])-C2).store(&bjj[2][k]);; (Array4d(&bjj[3][k])-C3).store(&bjj[3][k]);. C0.store(&bij[0][k]); C1.store(&bij[1][k]);; C2.store(&bij[2][k]); C3.store(&bij[3][k]);; ```; I am showing this because it represents a readability worst case in terms of manipulating SIMD types, we might end up with one or two of these to get the best performance possible but they will always be enc",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/789#issuecomment-535977206:15777,update,update,15777,https://su2code.github.io,https://github.com/su2code/SU2/issues/789#issuecomment-535977206,2,['update'],['update']
Deployability,"ime — to make sure you benefit from the latest updated security analysis even when no code was committed or PRs were opened. #### What will this cost?; Nothing! The CodeQL engine will run inside GitHub Actions, making use of your [unlimited free compute minutes for public repositories](https://docs.github.com/en/actions/learn-github-actions/usage-limits-billing-and-administration#about-billing-for-github-actions). #### What types of problems does CodeQL find?; The CodeQL engine that powers GitHub code scanning is the exact same engine that powers LGTM.com. The exact set of rules has been tweaked slightly, but you should see almost exactly the same types of alerts as you were used to on LGTM.com: we’ve enabled the [`security-and-quality` query suite](https://docs.github.com/en/code-security/code-scanning/automatically-scanning-your-code-for-vulnerabilities-and-errors/configuring-code-scanning#using-queries-in-ql-packs) for you. #### How do I upgrade my CodeQL engine?; No need! New versions of the CodeQL analysis are constantly deployed on GitHub.com; your repository will automatically benefit from the most recently released version. #### The analysis doesn’t seem to be working; If you get an error in GitHub Actions that indicates that CodeQL wasn’t able to analyze your code, please [follow the instructions here](https://docs.github.com/en/code-security/code-scanning/automatically-scanning-your-code-for-vulnerabilities-and-errors/troubleshooting-the-codeql-workflow) to debug the analysis. #### How do I disable LGTM.com?; If you have LGTM’s automatic pull request analysis enabled, then you can [follow these steps to disable the LGTM pull request analysis](https://lgtm.com/help/lgtm/managing-automated-code-review#disabling-pr-integration). You don’t actually need to remove your repository from LGTM.com; it will automatically be removed in the next few months as part of the deprecation of LGTM.com ([more info here](https://github.blog/2022-08-15-the-next-step-for-lgtm-com",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1840:3218,upgrade,upgrade,3218,https://su2code.github.io,https://github.com/su2code/SU2/pull/1840,2,"['deploy', 'upgrade']","['deployed', 'upgrade']"
Deployability,"imizations seem to **run independently of what I set as the OBJECTIVE_WEIGHT**. My understanding is that a negative value means minimization of the objective function and vice versa. However, with OBJECTIVE_WEIGHT=-1, the optimization seems to increase my objective function rather than reduce it. In the config_DOT_AD (and other configs), the objective weight was still +1 so I believe it wasn't being parsed correctly. I had to hardcode all instances of OBJECTIVE_WEIGHT in the C++ and python scripts from +1 to -1 to resolve the issue (which it did in the configs), however, the optimization direction is still opposite to what I want. 4. The DV_Value is always 0.001 in the config files. What is this value and is this hardcoded? . 5. In the _of_grad_*_ file the third column is for _""FINDIFF_STEP""_ = DV_Value. Does it mean that the grid deformation wrt to control points is done via finite differences?. **Problem specific details,**. **Case:** Single blade row stator passage with inlet profiles. OBJECTIVE_FUNCTION= PRESSURE_DROP; **OPTIMIZER= BFGS**; output for history_project.dat:; ""PRESSURE_DROP""; 10791.40653; 10943.29967; 10943.29967; 11041.58637; 11041.58637. The PRESSURE_DROP was supposed to be reduced (weight -1) but it's increasing. **With SLSQP I get:**; Sequential Least SQuares Programming (SLSQP) parameters:; Number of design variables: 56 ( 56 ); Objective function scaling factor: [1.0]; Maximum number of iterations: 20; Requested accuracy: 1e-20; .....; NIT FC OBJFUN GNORM; 1 1 1.078075E+00 6.354859E-11; Optimization terminated successfully. (Exit mode 0); Current function value: 1.07807522; Iterations: 1; Function evaluations: 1; Gradient evaluations: 1. And no further designs are generated. What makes SLSQP to 'converge'?. **I am using branch** [turbo_output_opt](https://github.com/su2code/SU2/compare/develop...turbo_output_opt) (updated to latest develop). Thanks in advance. Config file: [case728.txt](https://github.com/su2code/SU2/files/4606913/case728.txt)",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/976:2403,update,updated,2403,https://su2code.github.io,https://github.com/su2code/SU2/issues/976,1,['update'],['updated']
Deployability,imshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/eval; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/eval/gradients.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/eval; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/eval/__init__.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/eval; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/io/config.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/io; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/io/config_options.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/io; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/io/data.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/io; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/io/filelock.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/io; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/io/redirect.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/io; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/io/state.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/io; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/io/tools.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/io; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/io/historyMap.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/io; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/io/__init__.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/io; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/mesh/adapt.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/mesh; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/mesh/tools.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/mesh; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/mesh/__init__.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/mesh; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/opt/,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/991#issuecomment-632032044:5009,Install,Installing,5009,https://su2code.github.io,https://github.com/su2code/SU2/issues/991#issuecomment-632032044,1,['Install'],['Installing']
Deployability,"in SU2/Common/src/config_structure.cpp:. addStringListOption(""DV_MARKER"", nMarker_DV, Marker_DV);; 	/* DESCRIPTION: Parameters of the shape deformation; - FFD_TWIST_ANGLE ( FFDBox ID, x_Orig, y_Orig, z_Orig, x_End, y_End, z_End ) */. I think FFD_TWIST_ANGLE is superseded (needs confirmation) by FFD_TWIST_2D and FFD_TWIST but the comment has not been updated to reflect this. If FFD_TWIST_ANGLE is not in use anymore, then SU2/SU2_PY/SU2/io/config_options.py needs updating as it references FFD_TWIST_ANGLE also",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/688:352,update,updated,352,https://su2code.github.io,https://github.com/su2code/SU2/issues/688,1,['update'],['updated']
Deployability,"in symmetry planes;; - ~Calculates new residuals to take into account the symmetry of the mesh;~ Only corrects momentum residual vector in current version.; - ~Uses a modified volume to calculate the solution in symmetry planes;~ Does not require modified volume in current version. ## Related Work; #657. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [X] My contribution is commented and consistent with SU2 style.; - [x] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary. ## Results. For the sake of demonstrating the capability of the new Symmetry Boundary condition, the image shows a comparison of pressure at the surface, using the new implementation and the old symmetry boundary condition, for a flow over a 3D cylinder and considering the lateral and bottom surfaces as symmetry plane:. ### New Implementation vs Old Implementation for N2 mixture (2nd Order - NEMO_NS solver - AUSM scheme). ![Screenshot from 2021-01-20 23-28-31](https://user-images.githubusercontent.com/29612207/105253606-b6244c00-5b77-11eb-8689-c6e6190b4b5b.png). I have run this test without changing the viscous eigenvalues, and it converges to the same value. However, for unsteady simulations, changing the eigenvalues provides better results. ### New Implementation (on NEMO) vs Current SU2 Implementation for AIR5 mixture (2nd Order - NS solver - AUSM scheme). ![image](https://user-images.githubusercontent.com/29612207/105",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1168:1171,update,updated,1171,https://su2code.github.io,https://github.com/su2code/SU2/pull/1168,1,['update'],['updated']
Deployability,"in/gcc'; C compiler for the host machine: /usr/bin/gcc (gcc 10.2.0 ""gcc (GCC) 10.2.0""); C linker for the host machine: /usr/bin/gcc ld.bfd 2.35.1; Using 'CXX' from environment with value: '/usr/bin/g++'; C++ compiler for the host machine: /usr/bin/g++ (gcc 10.2.0 ""g++ (GCC) 10.2.0""); C++ linker for the host machine: /usr/bin/g++ ld.bfd 2.35.1; Host machine cpu family: x86_64; Host machine cpu: x86_64; Program python3 found: YES (/usr/bin/python3); Found pkg-config: /usr/bin/pkg-config (1.7.3); Using 'PKG_CONFIG_PATH' from environment with value: '/usr/local/mpich-3.3.2/lib/pkgconfig'; Run-time dependency mpich found: YES 3.3.2; Dependency mpich found: YES 3.3.2 (cached); Message: Extracting boost ...; Using 'PKG_CONFIG_PATH' from environment with value: '/usr/local/mpich-3.3.2/lib/pkgconfig'; Run-time dependency openblas found: YES 0.3.10; Program swig found: YES (/usr/bin/swig); Message: Using mpi4py from /home/slimshady/.local/lib/python3.8/site-packages/mpi4py/include; Dependency python found: YES (pkgconfig); Program install.sh found: YES (/bin/sh /home/slimshady/UserPackages/SU2_HOME/SU2_PY/pySU2/install.sh); Message: -------------------------------------------------------------------------; | ___ _ _ ___ |; | / __| | | |_ ) Release 7.0.6 ""Blackbird"" |; | \__ \ |_| |/ / |; | |___/\___//___| Meson Configuration Summary |; | |; -------------------------------------------------------------------------; ; Option Value; ---------------------; TecIO: true; CGNS: true; AD (reverse): true; AD (forward): true; Python Wrapper: true; Intel-MKL: false; OpenBlas: true; PaStiX: false; Mixed Float: false. Please be sure to add the $SU2_HOME and $SU2_RUN environment variables,; and update your $PATH (and $PYTHONPATH if applicable) with $SU2_RUN. Based on the input to this configuration, add these lines to your .bashrc file:. export SU2_RUN=/home/slimshady/UserPackages/SU2_INSTALL/bin; export SU2_HOME=/home/slimshady/UserPackages/SU2_HOME; export PATH=$PATH:$SU2_RUN; export PYT",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1000#issuecomment-721366137:2670,install,install,2670,https://su2code.github.io,https://github.com/su2code/SU2/issues/1000#issuecomment-721366137,1,['install'],['install']
Deployability,"in/sh /home/slimshady/UserPackages/SU2_HOME/SU2_PY/pySU2/install.sh); Message: -------------------------------------------------------------------------; | ___ _ _ ___ |; | / __| | | |_ ) Release 7.0.6 ""Blackbird"" |; | \__ \ |_| |/ / |; | |___/\___//___| Meson Configuration Summary |; | |; -------------------------------------------------------------------------; ; Option Value; ---------------------; TecIO: true; CGNS: true; AD (reverse): true; AD (forward): true; Python Wrapper: true; Intel-MKL: false; OpenBlas: true; PaStiX: false; Mixed Float: false. Please be sure to add the $SU2_HOME and $SU2_RUN environment variables,; and update your $PATH (and $PYTHONPATH if applicable) with $SU2_RUN. Based on the input to this configuration, add these lines to your .bashrc file:. export SU2_RUN=/home/slimshady/UserPackages/SU2_INSTALL/bin; export SU2_HOME=/home/slimshady/UserPackages/SU2_HOME; export PATH=$PATH:$SU2_RUN; export PYTHONPATH=$PYTHONPATH:$SU2_RUN. Use './ninja -C build install' to compile and install SU2. Build targets in project: 21. Found ninja-1.10.0.git at /home/slimshady/UserPackages/SU2_HOME/ninja; ```; The ninja command fails like so:; ```; slimshady@arch-linux-hp-probook-g3-450: SU2_HOME$ ./ninja -C build install ; ninja: Entering directory `build'; [583/894] Linking target SU2_CFD/src/SU2_CFD; FAILED: SU2_CFD/src/SU2_CFD ; /usr/bin/g++ -o SU2_CFD/src/SU2_CFD SU2_CFD/src/SU2_CFD.p/SU2_CFD.cpp.o -Wl,--as-needed -Wl,--no-undefined -Wl,-O1 -Wl,--start-group SU2_CFD/src/libSU2core.a externals/cgns/libcgns.a externals/metis/libmetis.a externals/parmetis/libparmetis.a externals/tecio/teciompisrc/libteciompi.a Common/src/libSU2Common.a -Wl,-rpath -Wl,/usr/local/mpich-3.3.2/lib /usr/local/mpich-3.3.2/lib/libmpi.so -lm /usr/lib/gcc/x86_64-pc-linux-gnu/10.2.0/../../../../lib/libudev.so /usr/lib/gcc/x86_64-pc-linux-gnu/10.2.0/../../../../lib/libpciaccess.so /usr/lib/gcc/x86_64-pc-linux-gnu/10.2.0/../../../../lib/libxml2.so /usr/lib/gcc/x86_64-pc-linux-gnu/10.2.0/",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1000#issuecomment-721366137:3685,install,install,3685,https://su2code.github.io,https://github.com/su2code/SU2/issues/1000#issuecomment-721366137,2,['install'],['install']
Deployability,in\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/__init__.py to C:\bin\bin/SU2; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/eval/design.py to C:\bin\bin/SU2/eval; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/eval/functions.py to C:\bin\bin/SU2/eval; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/eval/gradients.py to C:\bin\bin/SU2/eval; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/eval/__init__.py to C:\bin\bin/SU2/eval; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/io/config.py to C:\bin\bin/SU2/io; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/io/config_options.py to C:\bin\bin/SU2/io; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/io/data.py to C:\bin\bin/SU2/io; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/io/filelock.py to C:\bin\bin/SU2/io; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/io/redirect.py to C:\bin\bin/SU2/io; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/io/state.py to C:\bin\bin/SU2/io; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/io/tools.py to C:\bin\bin/SU2/io; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/io/historyMap.py to C:\bin\bin/SU2/io; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/io/__init__.py to C:\bin\bin/SU2/io; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/opt/project.py to C:\bin\bin/SU2/opt; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/opt/scipy_tools.py to C:\bin\bin/SU2/opt; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/opt/__init__.py to C:\bin\bin/SU2/opt; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/run/adjoint.py to C:\bin\bin/SU2/run; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/run/deform.py to C:\bin\bin/SU2/run; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/run/direct.py to C:\bin\bin/SU2/run; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/run/interface.py to C:\bin\bin/SU2/run; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/run/merge.py to C:\bin\bin/SU2/run; Installing C:\Users\Danie\Documents\SU2\,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1376:6043,Install,Installing,6043,https://su2code.github.io,https://github.com/su2code/SU2/issues/1376,1,['Install'],['Installing']
Deployability,"ing MAX_NUMBER_MARKER; - Working version with ParMETIS. Fixed bug in global index. Now clean up and testing...; - Cleaned version of ParMETIS routines with better console output during partitioning.; - Small bug in initial element division.; - Made arrays in ParMETIS call dynamic.; - Fixed compiler warnings and added MPI directives so that the pure serial code works with the ParMETIS routines.; - Bootstrap on zion.; - Added some typecasts. Still tracking down a memory problem...; - Critical bug fix for vtxdist array.; - Partial fix; - More MPI improvements.; - Fixing a bug in SU2_DEF; - Updated BC_ActDisk_Boundary (MPI); - Merge remote-tracking branch 'upstream/develop' into develop; - changing solidboundary setting to be heatflux OR euler etc instead of AND, also working on doxygen documentation; - Dynamic allocation for some marker-related arrays.; - visualize part taken out to match upstream/dev; - Collection of improvements; - Release 3.2.7; - Fixing LOW_MEMORY_OUTPUT; - Updated LOW_MEMORY_OUTPUT option; - Updated configure.ac; - After autoconf; - Updated MPI; - Updated BC_Engine_Exhaust and BC_Engine_Bleed; - Small change; - Fixing subsonic engine intake option; - Small output change; - Added output_su2.cpp; - Updated Engine BC; - Working on Engine BCs; - Added Supersonic Outlet BC; - Minor change; - Merge remote-tracking branch 'upstream/develop' into develop; - adjoints, solid boundary, doxygen in config; - continued fixing; - re-added adjoint bc mods; - re-adding avg outlet pressure (static pressure adjoint); - re-adding avg outlet pressure (static pressure adjoint); - Merge branch 'temp' of https://github.com/hlkline/SU2 into temp; - continued fixing; - average total pressure and fixes to avg outlet pressure; - adding stagnation pressure output to SU2_DOT; - Merge pull request #146 from hlkline/temp; - Updated Entropy fix (now it is active).; - Another change in BC_Engine_Exhaust; - Updated CGNS in parallel; - Added runtime file; - Small typo; - Adjustment o",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/174#issuecomment-101443812:2953,Update,Updated,2953,https://su2code.github.io,https://github.com/su2code/SU2/pull/174#issuecomment-101443812,2,['Update'],['Updated']
Deployability,ing SU2_MSH/src/SU2_MSH to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing SU2_SOL/src/SU2_SOL to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing SU2_PY/pySU2/_pysu2.so to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing SU2_PY/pySU2/_pysu2ad.so to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/continuous_adjoint.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/compute_uncertainty.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/finite_differences.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/mesh_deformation.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/parallel_computation.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/parallel_computation_fsi.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/package_tests.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/shape_optimization.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/merge_solution.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/set_ffd_design_var.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/compute_polar.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/compute_multipoint.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/discrete_adjoint.py to /home/slimshady/UserPackages/SU2,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/991#issuecomment-632032044:2249,Install,Installing,2249,https://su2code.github.io,https://github.com/su2code/SU2/issues/991#issuecomment-632032044,1,['Install'],['Installing']
Deployability,"ing on here so I will try and include as much information as possible. Using the tape tagging method developed by @oleburghardt in #2343 and presented at the most recent SU2 Conference, a run of the full tape reveals that a variable used in a preaccumulation output is not properly recorded. The variable is the `val` in the function `PassiveAssign` in `CSysMatrix.hpp` line 215. `FORCEINLINE static ScalarType PassiveAssign(const SrcType& val) {; return SU2_TYPE::GetValue(val);; }`. Following the call stack of the error reveals that the problem variables in `val` are the jacobian components calculated in the Roe and JST scheme (these are the two options I have tested). It is possible to resolve this error by simply moving the stopping of the preaccumulation region from before the call to `updateLinearSystem` in the `ComputeFlux` method of both these schemes, to after, as show below. `/*--- Update the vector and system matrix. ---*/. updateLinearSystem(iEdge, iPoint, jPoint, implicit, updateType,; updateMask, flux, jac_i, jac_j, vector, matrix);. /*--- Stop preaccumulation. ---*/. stopPreacc(flux);`. However, whilst this resolve the error in this location, the next error appears in the Giles boundary condition. Here the two jacobian components within the residual object are not recorded correctly in the preaccumulation output region also. This in `CEulerSolver.cpp:6556`. `/*--- Compute the residual using an upwind scheme ---*/; auto residual = conv_numerics->ComputeResidual(config);. /*--- Update residual value ---*/; LinSysRes.AddBlock(iPoint, residual);`. I have tried simpy adding these components as preacc outputs however they are SIMD arrays and the datatype cannot be converted using the existing implementation. . I am not sure what is going on here, or the next steps to resolve this problem. Any further assistance would be greatly appreciated, thank you :). **Bug report checklist**; *Please make sure that you have followed the checklist below, many common problems c",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/2368:1062,update,updateLinearSystem,1062,https://su2code.github.io,https://github.com/su2code/SU2/issues/2368,3,['update'],"['updateLinearSystem', 'updateMask', 'updateType']"
Deployability,"ing the installation (the exact same steps that @chesiv presented), I encountered a problem when running the mesh_adaptation_amg.py script. The command used was:. ```; python3 $SU2_RUN/mesh_adaptation_amg.py -f adapt_Mesh.cfg -n 4; ```; The script initiates the mesh adaptation process as expected, with the following output:. ```; SU2-AMG Anisotropic Mesh Adaptation. Mesh adaptation options:; PYADAP_COMPLEXITY : (30000, 60000, 120000); PYADAP_SUBITE : (2, 2, 2); PYADAP_SENSOR : GOAL; PYADAP_HMAX : 500.0; PYADAP_HMIN : 1e-9; PYADAP_HGRAD : 1.8. ./adap exists. Removing old mesh adaptation in 10s.; The ./adap folder was deleted. Generating GMF background surface mesh.; Initial CFD solution is provided.; ```; However, no _adap\ite0_ folder gets created. ; The log.err file in the _adap/ini_ directory provides this traceback:. ```; Traceback (most recent call last):; File "".../mesh_adaptation_amg.py"", line 111, in <module>; ...; RuntimeError: ...; Error in TokenizeString(): two or more options before an ""="" sign in the configuration file.; terminate called after throwing an instance of 'int'; ...; *** Process received signal ***; Signal: Aborted (6); Signal code: (-6); ...; ```. The critical part of this error seems to be the Error in TokenizeString() message, suggesting an issue with parsing the configuration file. This error typically indicates a syntax problem, such as having multiple options on a single line without proper separation by an equal sign (=). However, upon reviewing _adap/ini/config_CFD.cfg_, was unable to find any lines that clearly violated this syntax rule. Could this error be indicative of a more subtle issue within the configuration file, or might it be related to specific aspects of the feature_adap branch? Any insights, suggestions, or guidance on how to troubleshoot this error would be greatly appreciated. If anyone has a working adapt_mesh.cfg file for a similar setup or for the feature_adap branch, I would be very interested in seeing it. Underst",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/948#issuecomment-1847333809:1237,configurat,configuration,1237,https://su2code.github.io,https://github.com/su2code/SU2/issues/948#issuecomment-1847333809,2,['configurat'],['configuration']
Deployability,"ion lies below.(CFL = 4.0); >% Mach number (non-dimensional, based on the free-stream values); MACH_NUMBER= 0.8; %; % Angle of attack (degrees); AOA= 1.25; %; % -------------------------- MULTIGRID PARAMETERS -----------------------------%; %; % Multi-Grid Levels (0 = no multi-grid); MGLEVEL= 3; %; % Multi-grid cycle (V_CYCLE, W_CYCLE, FULLMG_CYCLE); MGCYCLE= W_CYCLE; %; % Multi-Grid PreSmoothing Level; MG_PRE_SMOOTH= ( 1, 2, 3, 3 ); %; % Multi-Grid PostSmoothing Level; MG_POST_SMOOTH= ( 0, 0, 0, 0 ); %; % Jacobi implicit smoothing of the correction; MG_CORRECTION_SMOOTH= ( 0, 0, 0, 0 ); %; % Damping factor for the residual restriction; MG_DAMP_RESTRICTION= 1.0; %; % Damping factor for the correction prolongation; MG_DAMP_PROLONGATION= 1.0; % -------------------- FLOW NUMERICAL METHOD DEFINITION -----------------------%; %; % Convective numerical method (JST, LAX-FRIEDRICH, CUSP, ROE, AUSM, HLLC,; % TURKEL_PREC, MSW); CONV_NUM_METHOD_FLOW= CUSP; %; % Spatial numerical order integration (1ST_ORDER, 2ND_ORDER, 2ND_ORDER_LIMITER); %; SPATIAL_ORDER_FLOW= 2ND_ORDER_LIMITER; %; % Slope limiter (VENKATAKRISHNAN, MINMOD); SLOPE_LIMITER_FLOW= VENKATAKRISHNAN; %; % 1st, 2nd and 4th order artificial dissipation coefficients; AD_COEFF_FLOW= ( 0.15, 0.5, 0.02 ); %; % Time discretization (RUNGE-KUTTA_EXPLICIT, EULER_IMPLICIT, EULER_EXPLICIT); TIME_DISCRE_FLOW= EULER_IMPLICIT. ![cusp3levcfl4limiterven](https://user-images.githubusercontent.com/32992485/32143715-c2a2c30c-bce8-11e7-93c6-52a1b2a9a07f.png); When I modify CFL number to 1.0, SU2 doesn't diverged but oscillating at 10^-5 order; ![cusp3levcfl1limiterven](https://user-images.githubusercontent.com/32992485/32143795-16abef90-bcea-11e7-94d5-e248812c385d.png). I forced it stopped and compare result with JST scheme:; >CUSP(3Level multigrid); Total CL: 0.336272 ; Total CD: 0.0220499 ; JST (3Level multigrid); Total CL: 0.326933 ; Total CD: 0.0213497 ; ; The result is acceptable.; But when I change the limiter to""BARTH_JESPERSEN""(T",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/465:1295,integrat,integration,1295,https://su2code.github.io,https://github.com/su2code/SU2/issues/465,1,['integrat'],['integration']
Deployability,"ions/checkout/pull/964"">Wrap pipeline commands for submoduleForeach in quotes</a></li>; <li><a href=""https://redirect.github.com/actions/checkout/pull/1029"">Update <code>@​actions/io</code> to 1.1.2</a></li>; <li><a href=""https://redirect.github.com/actions/checkout/pull/1039"">Upgrading version to 3.2.0</a></li>; </ul>; <h2>v3.1.0</h2>; <ul>; <li><a href=""https://redirect.github.com/actions/checkout/pull/939"">Use <code>@​actions/core</code> <code>saveState</code> and <code>getState</code></a></li>; <li><a href=""https://redirect.github.com/actions/checkout/pull/922"">Add <code>github-server-url</code> input</a></li>; </ul>; <h2>v3.0.2</h2>; <ul>; <li><a href=""https://redirect.github.com/actions/checkout/pull/770"">Add input <code>set-safe-directory</code></a></li>; </ul>; <h2>v3.0.1</h2>; <!-- raw HTML omitted -->; </blockquote>; <p>... (truncated)</p>; </details>; <details>; <summary>Commits</summary>; <ul>; <li><a href=""https://github.com/actions/checkout/commit/3df4ab11eba7bda6032a0b82a6bb43b11571feac""><code>3df4ab1</code></a> Release 4.0.0 (<a href=""https://redirect.github.com/actions/checkout/issues/1447"">#1447</a>)</li>; <li><a href=""https://github.com/actions/checkout/commit/8b5e8b768746b50394015010d25e690bfab9dfbc""><code>8b5e8b7</code></a> Support fetching without the --progress option (<a href=""https://redirect.github.com/actions/checkout/issues/1067"">#1067</a>)</li>; <li><a href=""https://github.com/actions/checkout/commit/97a652b80035363df47baee5031ec8670b8878ac""><code>97a652b</code></a> Update default runtime to node20 (<a href=""https://redirect.github.com/actions/checkout/issues/1436"">#1436</a>)</li>; <li>See full diff in <a href=""https://github.com/actions/checkout/compare/v3...v4"">compare view</a></li>; </ul>; </details>; <br />. [![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=actions/checkout&package-manager=github_actions&previous-version=3&new-version=4)](https://docs.github.com/en/gi",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2126:9842,Release,Release,9842,https://su2code.github.io,https://github.com/su2code/SU2/pull/2126,2,['Release'],['Release']
Deployability,"isoparametric interpolation, the method was incorrect for quadrilaterals (and the code too complex).; - Heavy refactoring of mirror (conservative) interpolation, the algorithm is perhaps more complex but the code is cleaner and 10x faster (this is in #833).; - Medium cleanup of CInterpolator (const correctness, unnecessary mpi ifdefs, etc.).; - Light cleanup of CDriver/CTransfer (deleting copy-pasted code); #### Other enhancements:; - Initialize the linear system solutions in CMeshSolver to speedup 3D FSI simulations, but especially to reduce overhead in FSI discrete adjoint cases.; - Too improve the quality of deformed grids in FSI cases with large ""out-of-plane"" displacements, a thicker layer of stiff cells can be imposed around the deforming boundaries. The thickness of the layer is defined by option `DEFORM_STIFF_LAYER_SIZE = [0]` when `DEFORM_STIFFNESS_TYPE = WALL_DISTANCE`. This allows refined regions around a wing tip to be dragged instead of sheared (which happens with the simple 1/x variation).; #### Other fixes:; - CFEASolver displacement boundary conditions (the weird bug detailed below).; - CFEASolver load integration for FSI simplified to fix mpi-related bug.; - Option CFL_REDUCTION_TURB having no effect.; - Restarts with moving wall cases work by default. I know, there's way too much stuff in this PR, but it was all required to make 3D FSI more reliable, and hey, it works!; ![3D_FSI](https://user-images.githubusercontent.com/38071223/78511123-34069a80-7792-11ea-950f-750cef80f1f8.png). ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/914:2299,integrat,integration,2299,https://su2code.github.io,https://github.com/su2code/SU2/pull/914,2,"['integrat', 'update']","['integration', 'updated']"
Deployability,"it/1d78355196cc3f88914ca91332c58d431a78513d""><code>1d78355</code></a> Merge pull request <a href=""https://redirect.github.com/actions/cache/issues/1304"">#1304</a> from actions/yacaovsnc/update_readme</li>; <li><a href=""https://github.com/actions/cache/commit/c36458f13bdfaeff50a47b181b7368ae66b21f28""><code>c36458f</code></a> Update README.md</li>; <li><a href=""https://github.com/actions/cache/commit/13aacd865c20de90d75de3b17ebe84f7a17d57d2""><code>13aacd8</code></a> Merge pull request <a href=""https://redirect.github.com/actions/cache/issues/1242"">#1242</a> from to-s/main</li>; <li>Additional commits viewable in <a href=""https://github.com/actions/cache/compare/v3...v4"">compare view</a></li>; </ul>; </details>; <br />. [![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=actions/cache&package-manager=github_actions&previous-version=3&new-version=4)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores). Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`. [//]: # (dependabot-automerge-start); [//]: # (dependabot-automerge-end). ---. <details>; <summary>Dependabot commands and options</summary>; <br />. You can trigger Dependabot actions by commenting on this PR:; - `@dependabot rebase` will rebase this PR; - `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it; - `@dependabot merge` will merge this PR after your CI passes on it; - `@dependabot squash and merge` will squash and merge this PR after your CI passes on it; - `@dependabot cancel merge` will cancel a previously requested merge and block automerging; - `@dependabot reopen` will reopen this PR if it is closed; - `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by c",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2232:10108,update,updates,10108,https://su2code.github.io,https://github.com/su2code/SU2/pull/2232,1,['update'],['updates']
Deployability,"ith ParaView from 'adjoint.vtu' looks reasonably similar to the image shown in the tutorial). Finally, I wanted to also try the algorithmic differentiation, so I changed the parameter MATH_PROBLEM to DISCRETE_ADJOINT in the configuration file and:. $ SU2_CFD_AD inv_dadj_NACA0012.cfg. I failed to obtain a correct adjoint solution (I expected to see something really similar to what I got with the CONTINUOUS_ADJOINT method): the density adjoint field seems to have a completely different scale (instead of having values in the approximate range -200 ÷ +200, it has values in the range -0.264 ÷ +0.217 and the values not too close to zero are concentrated in an area near the farfield boundary, far from the airfoil). What's wrong?; Does anything else need to be changed in the configuration file?. **Bug report checklist**. - [X] Consulting the build instructions (https://su2code.github.io/docs_v7/Build-SU2-Linux-MacOS/). From the above mentioned commit, I built with:. $ ./preconfigure.py --no-medi --no-opdi --no-mpp --no-coolprop; $ export CXXFLAGS='-march=native -mtune=native -O3 -msse -mfpmath=sse'; $ meson setup -Dwith-mpi=disabled -Denable-cgns=true -Denable-tecio=false -Denable-autodiff=true -Denable-directdiff=true --prefix=${HOME}/local build; $ ninja -C build install. N.B.: CPU is an Intel Core i5-6600 CPU @ 3.30GHz. - [X] Looking for similar problems on GitHub or CFD-Online (https://www.cfd-online.com/Forums/su2/). I haven't found any other GitHub issue about the Quick Start tutorial. - [X] Updating to the newest version of SU2 (either develop, master, or the pre-built executables https://su2code.github.io/download.html). I used the tip of the develop branch, as of yesterday. **Desktop:**; - OS: Debian GNU/Linux 12.0 'bookworm' (up-to-date Debian testing); - C++ compiler and version: g++ (Debian 12.2.0-14) 12.2.0; - MPI implementation and version: irrelevant (built without MPI support); - SU2 Version: commit 3f68501a7ccb107f05a44c2aa5747797541fb683 , branch 'develop'",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1993:2011,install,install,2011,https://su2code.github.io,https://github.com/su2code/SU2/issues/1993,1,['install'],['install']
Deployability,"ith SU2. libROM captures solution data and either computes the proper orthogonal decomposition (POD) over the data, or saves the solution ""snapshot"" in an hdf5 file for later POD computation. The POD matrix is also saved in an hdf5 file. ## Related Work; There are a couple projects using libROM:; - For projection-based model order reduction (PROM) in the branch feature_MOR; - It is also being used with the NEMO solver to further test the PROM capabilities; - libROM was used in a prior project that used the POD matrix as input to a neural network (to be published). - libROM also has other features, like help choosing the hyper-parameter nodes (a PROM step) and under development are black-box modeling methods like dynamic mode decomposition (DMD). Please let me know if you have any questions / comments / recommendations!. I have tested this on macOS and linux. . ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [X] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary. ## Steps to Compile:. 1. Compile libROM; 2. Compile SU2 with the following meson options:; `./meson.py build --prefix=/your/prefix -Denable-librom=true -Dlibrom_root=/path/to/libROM`; 3. You may need to add the environment variable:; `export LD_LIBRARY_PATH=/path/to/libROM/build/:$LD_LIBRARY_PATH`; 4. You can test by adding `SAVE_LIBROM=YES` to the Quickstart config",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1310:1670,update,updated,1670,https://su2code.github.io,https://github.com/su2code/SU2/pull/1310,1,['update'],['updated']
Deployability,"ithub.com/actions/cache/commit/e839c25979e6ffdd90792d34de69d6a87d3016f6""><code>e839c25</code></a> Updated actions/cache version to 3.0.3</li>; <li><a href=""https://github.com/actions/cache/commit/33a923d660988a68affcd47de6bd6744193223a6""><code>33a923d</code></a> Added release information</li>; <li><a href=""https://github.com/actions/cache/commit/a404368986bb049d406166fc20afc01d032ad8a2""><code>a404368</code></a> Updated actions/cache version to 3.0.2</li>; <li><a href=""https://github.com/actions/cache/commit/f4278025ab0f432ce369118909e46deec636f50c""><code>f427802</code></a> Merge pull request <a href=""https://github-redirect.dependabot.com/actions/cache/issues/887"">#887</a> from actions/pdotl-version-patch</li>; <li><a href=""https://github.com/actions/cache/commit/9916fe1701f098b95a05e7c2bacee7c5a022c553""><code>9916fe1</code></a> Update cache version in licences</li>; <li><a href=""https://github.com/actions/cache/commit/318935ef66557a1906560e4e7d0069344a4b31bf""><code>318935e</code></a> Update README and RELEASES</li>; <li>Additional commits viewable in <a href=""https://github.com/actions/cache/compare/v1...v3"">compare view</a></li>; </ul>; </details>; <br />. [![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=actions/cache&package-manager=github_actions&previous-version=1&new-version=3)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores). Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`. [//]: # (dependabot-automerge-start); [//]: # (dependabot-automerge-end). ---. <details>; <summary>Dependabot commands and options</summary>; <br />. You can trigger Dependabot actions by commenting on this PR:; - `@dependabot rebase` will rebase this PR; - `@dependabot recreate` will recreate this PR, overwriting any edits th",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1755:8866,Update,Update,8866,https://su2code.github.io,https://github.com/su2code/SU2/pull/1755,2,"['RELEASE', 'Update']","['RELEASES', 'Update']"
Deployability,itical stability improvement.; - Minor release 3.2.7.2; - Fixing issues to run with the latest intel compiler; - Fix for Tecplot binary solutions for unsteady flows. Fixes #150.; - Now SU2 should work with the latest version of the Intel compiler.; - Merge branch 'develop' of https://github.com/su2code/SU2 into develop; - Working on the O3 stuff; - Small change.; - Add another check to improve stability.; - Collection of improvements.; - Updated actuator disk; - Merge branch 'develop' of https://github.com/su2code/SU2 into develop; - Preliminary implementation of the Neg SA; - Minor updates; - Preliminary implementation of the Negative SA; - Bug fixing; - Fixed memory issued for very large meshes with ParMETIS.; - Clear evaluation of Vorticity and StrainMag; - Viscous limiter; - Updated RELAXATION_FACTOR; - RANS MG; - Partial fix to no MPI output; - Updated I/O; - Updated Adapt CFL; - Updated Adaptive CFL number; - Release 3.2.8; - Updated SetCFL_Number; - Small update; - Small change; - Small adjustments; - Minor changes; - Updated release 3.2.8; - MPI disabled by default in build. Added --enable-mpi flag to configure.; - Merged the ParMETIS implementation. Updated the build files.; - bootstrap; - Started parallel CGNS reader.; - Memory fix.; - Minor change; - Merge branch 'develop' of https://github.com/su2code/SU2 into develop; - Updated binaries; - Small change to configure.ac. Bootstrap.; - Small change; - Cleaning the code; - Updated grid deformation subroutine; - Fixing the mesh deformation; - Updated SU2_MSH; - Bug fixing; - Initial implementation of parallel CGNS reader. Works on 1 rank.; - Merged in recent changes to geometry_structure.cpp.; - Periodic BC working in serial; - Update option_structure.hpp; - Merge pull request #154 from su2code/fixCOptionEnumList; - Bug fixing (periodic bc); - Merge branch 'develop' of https://github.com/su2code/SU2 into develop; - Another important updated to BC in parallel; - More implementation and clean up of the paralle,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/174#issuecomment-101443812:5614,Update,Updated,5614,https://su2code.github.io,https://github.com/su2code/SU2/pull/174#issuecomment-101443812,6,"['Update', 'release', 'update']","['Updated', 'release', 'update']"
Deployability,"ix=/home/vksuman/SU2_7_0_3_gcc5_5_0_mpich3_2_1; ninja executable not found. Building ...; bootstrapping ninja...; warning: A compatible version of re2c (>= 0.11.3) was not found; changes to src/*.in.cc will not affect your build.; wrote build.ninja.; bootstrap complete. rebuilding...; [29/29] LINK ninja; The Meson build system; Version: 0.52.999; Source dir: /home/vksuman/SU2-7.0.3; Build dir: /home/vksuman/SU2-7.0.3/build; Build type: native build; Project name: SU2; Project version: 7.0.3 ""Blackbird""; C compiler for the host machine: gcc (gcc 5.5.0 ""gcc (GCC) 5.5.0""); C linker for the host machine: GNU ld.bfd 2.20.51.0.2-5; C++ compiler for the host machine: g++ (gcc 5.5.0 ""g++ (GCC) 5.5.0""); C++ linker for the host machine: GNU ld.bfd 2.20.51.0.2-5; Host machine cpu family: x86_64; Host machine cpu: x86_64; Program python3 found: YES (/app/python-3.6.3/bin/python3.6); Dependency mpi skipped: feature with-mpi disabled; Dependency mpi skipped: feature with-mpi disabled; Message: -------------------------------------------------------------------------; | ___ _ _ ___ |; | / __| | | |_ ) Release 7.0.3 ""Blackbird"" |; | \__ \ |_| |/ / |; | |___/\___//___| Meson Configuration Summary |; | |; -------------------------------------------------------------------------; ; Option Value; ---------------------; TecIO: false; CGNS: false; AD (reverse): true; AD (forward): true; Python Wrapper: false; Intel-MKL: false; OpenBlas: false; PaStiX: false. Please be sure to add the $SU2_HOME and $SU2_RUN environment variables,; and update your $PATH (and $PYTHONPATH if applicable) with $SU2_RUN. Based on the input to this configuration, add these lines to your .bashrc file:. export SU2_RUN=/home/vksuman/SU2_7_0_3_gcc5_5_0_mpich3_2_1/bin; export SU2_HOME=/home/vksuman/SU2-7.0.3; export PATH=$PATH:$SU2_RUN; export PYTHONPATH=$PYTHONPATH:$SU2_RUN. Use './ninja -C build install' to compile and install SU2. Build targets in project: 12; Found ninja-1.9.0.git at /home/vksuman/SU2-7.0.3/ninja",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/955#issuecomment-620552610:2542,Configurat,Configuration,2542,https://su2code.github.io,https://github.com/su2code/SU2/issues/955#issuecomment-620552610,5,"['Configurat', 'configurat', 'install', 'update']","['Configuration', 'configuration', 'install', 'update']"
Deployability,"k's 2Temperature model. The system of equations to solve is the conservation of each chemical species mass, momentum, total energy and vibrational energy. Both inviscid and viscous simulations are available, respectively, solver NEMO_EULER and NEMO_NAVIER_STOKES. Most of the changes consisted in the addition of new files (listed below), and all the necessary changes in the high-level classes (drivers, integration, config).; ; new files concerning this solver:; output/CNEMOCompOutput.cpp; variables/CNEMOEulerVariable.cpp; variables/CNEMONSVariable.cpp; solvers/CNEMOEulerSolver.cpp; solvers/CNEMONSSolver.cpp; numerics/NEMO/convection/lax.cpp; numerics/NEMO/convection/roe.cpp; numerics/NEMO/convection/ausm.cpp; numerics/NEMO/convection/ausmplusup2.cpp; numerics/NEMO/convection/ausmpwplus.cpp; numerics/NEMO/convection/msw.cpp; numerics/NEMO/NEMO_diffusion.cpp; numerics/NEMO/NEMO_sources.cpp. Future/ongoing work is looking into making use of the CFluidModel class , introducing a new child class CNEMOGas to handle all mixture/thermodynamics/transport/chemistry related computations - follwing the generic SU2 structure. ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [x] My contribution is commented and consistent with SU2 style.; - [x] I have added a test case that demonstrates my contribution, if necessary.; - [not yet] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1014:2117,update,updated,2117,https://su2code.github.io,https://github.com/su2code/SU2/pull/1014,1,['update'],['updated']
Deployability,"k. This leads to a lot of if-conditions and special cases we have to consider and its hard to actually see what their overall task actually is. One example that I also used to demonstrate a possible solution is the Fixed CL computation. We have routines in CIteration and in CEulerSolver and they modify certain behavior of the baseline code. But its complicated to figure out which routines actually belong together, what they do and when they are called. ### Possible solution. To solve that problem I propose a modular structure that puts all routines that are responsible for a certain functional task together in the same class. At certain predefined places in the code they can modify things by overloading certain functions. These functions are called *Hooks*. What arguments these hooks provide can be different depending on where they are called. As an example I did a quick implementation of such a framework and defined a Fixed CL module. . Right now, I defined a global list of modules (with only one module currently). We can also define modules lists per class, e.g. for CDriver, CIteration, CSolver. But that would mean that we have to provide potentially more than one class per module, which kind of defeats the purpose again. I will add some further comments below. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [ ] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [ ] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/982:2257,update,updated,2257,https://su2code.github.io,https://github.com/su2code/SU2/pull/982,1,['update'],['updated']
Deployability,l SU2. Build targets in project: 17. Found ninja.exe-1.9.0 at C:\Users\Danie\Documents\SU2\ninja.exe`. **526 files install successfully.** . `WARNING: the currently checked out submodule commit in C:\Users\Danie\Documents\SU2\externals\opdi does not match the SHA-1 found in the index.; Use 'git submodule update --init C:\Users\Danie\Documents\SU2\externals\opdi' to reset the module if necessary.; SHA-1 tag stored in index does not match SHA tag stored in this script.; Installing SU2_CFD/src\SU2_CFD.exe to C:\bin\bin; Installing SU2_CFD/src\SU2_CFD_AD.exe to C:\bin\bin; Installing SU2_CFD/src\SU2_CFD_DIRECTDIFF.exe to C:\bin\bin; Installing SU2_DOT/src\SU2_DOT.exe to C:\bin\bin; Installing SU2_DOT/src\SU2_DOT_AD.exe to C:\bin\bin; Installing SU2_DEF/src\SU2_DEF.exe to C:\bin\bin; Installing SU2_GEO/src\SU2_GEO.exe to C:\bin\bin; Installing SU2_SOL/src\SU2_SOL.exe to C:\bin\bin; Installing SU2_PY/pySU2\_pysu2.dll to C:\bin\bin; Installing SU2_PY/pySU2\_pysu2.dll.a to C:\bin\lib; Installing SU2_PY/pySU2\_pysu2ad.dll to C:\bin\bin; Installing SU2_PY/pySU2\_pysu2ad.dll.a to C:\bin\lib; Installing C:\Users\Danie\Documents\SU2\SU2_PY\continuous_adjoint.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\compute_uncertainty.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\finite_differences.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\mesh_deformation.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\parallel_computation.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\parallel_computation_fsi.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\package_tests.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\shape_optimization.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\merge_solution.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\set_ffd_design_var.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\compute_polar.py ,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1376:3637,Install,Installing,3637,https://su2code.github.io,https://github.com/su2code/SU2/issues/1376,1,['Install'],['Installing']
Deployability,l; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/eval/functions.py to C:\bin\bin/SU2/eval; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/eval/gradients.py to C:\bin\bin/SU2/eval; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/eval/__init__.py to C:\bin\bin/SU2/eval; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/io/config.py to C:\bin\bin/SU2/io; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/io/config_options.py to C:\bin\bin/SU2/io; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/io/data.py to C:\bin\bin/SU2/io; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/io/filelock.py to C:\bin\bin/SU2/io; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/io/redirect.py to C:\bin\bin/SU2/io; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/io/state.py to C:\bin\bin/SU2/io; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/io/tools.py to C:\bin\bin/SU2/io; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/io/historyMap.py to C:\bin\bin/SU2/io; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/io/__init__.py to C:\bin\bin/SU2/io; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/opt/project.py to C:\bin\bin/SU2/opt; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/opt/scipy_tools.py to C:\bin\bin/SU2/opt; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/opt/__init__.py to C:\bin\bin/SU2/opt; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/run/adjoint.py to C:\bin\bin/SU2/run; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/run/deform.py to C:\bin\bin/SU2/run; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/run/direct.py to C:\bin\bin/SU2/run; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/run/interface.py to C:\bin\bin/SU2/run; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/run/merge.py to C:\bin\bin/SU2/run; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/run/geometry.py to C:\bin\bin/SU2/run; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/run/projection.py to C:\bin\bin/SU2/run; Installing C:\Users\Danie\Document,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1376:6218,Install,Installing,6218,https://su2code.github.io,https://github.com/su2code/SU2/issues/1376,1,['Install'],['Installing']
Deployability,"labels/compare/v4.0.0...v4.1.0"">https://github.com/mheap/github-action-required-labels/compare/v4.0.0...v4.1.0</a></p>; <h2>v4.0.0</h2>; <h2>What's Changed</h2>; <ul>; <li>Add issues/pull-requests permissions to README by <a href=""https://github.com/mheap""><code>@​mheap</code></a> in <a href=""https://redirect.github.com/mheap/github-action-required-labels/pull/52"">mheap/github-action-required-labels#52</a></li>; <li>Only use a single comment when the action fails by <a href=""https://github.com/mheap""><code>@​mheap</code></a> in <a href=""https://redirect.github.com/mheap/github-action-required-labels/pull/53"">mheap/github-action-required-labels#53</a></li>; </ul>; <h2>New Contributors</h2>; <p><strong>Full Changelog</strong>: <a href=""https://github.com/mheap/github-action-required-labels/compare/v3.0.1...v4.0.0"">https://github.com/mheap/github-action-required-labels/compare/v3.0.1...v4.0.0</a></p>; <h2>v4</h2>; <p>Tag that always points to the latest commit in the v4.x.x series of releases</p>; <h2>v3.0.1</h2>; <h2>What's Changed</h2>; <ul>; <li>Add default error message by <a href=""https://github.com/mheap""><code>@​mheap</code></a> in <a href=""https://redirect.github.com/mheap/github-action-required-labels/pull/51"">mheap/github-action-required-labels#51</a></li>; </ul>; <p><strong>Full Changelog</strong>: <a href=""https://github.com/mheap/github-action-required-labels/compare/v3.0.0...v3.0.1"">https://github.com/mheap/github-action-required-labels/compare/v3.0.0...v3.0.1</a></p>; </blockquote>; </details>; <details>; <summary>Commits</summary>; <ul>; <li><a href=""https://github.com/mheap/github-action-required-labels/commit/4e9ef4ce8c697cf55716ecbf7f13a3d9e0b6ac6a""><code>4e9ef4c</code></a> Automatic compilation</li>; <li><a href=""https://github.com/mheap/github-action-required-labels/commit/18f57d781fe045548933f7465750a46e9994f1fd""><code>18f57d7</code></a> Allow labels to be provided one per line in input</li>; <li><a href=""https://github.com/mheap/github-action-requ",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2125:2646,release,releases,2646,https://su2code.github.io,https://github.com/su2code/SU2/pull/2125,2,['release'],['releases']
Deployability,"ld/lib -lpython3.7m; env[PKG_CONFIG_LIBDIR]: /---/---/---/soft/Python-3.7.9/build/lib/pkgconfig; env[PKG_CONFIG_PATH]: /opt/intel/compilers_and_libraries_2019.1.144/linux/mkl/bin/pkgconfig; Called `/usr/bin/pkg-config --libs python-3.7m` -> 0; -L/---/---/---/soft/Python-3.7.9/build/lib -lpython3.7m; WARNING: extract_all_objects called without setting recursive; keyword argument. Meson currently defaults to; non-recursive to maintain backward compatibility but; the default will be changed in the future. >SU2_PY/pySU2/meson.build:27:2: ERROR: Tried to form an absolute path to a source dir.; You should not do that but use relative paths instead. >To get include path to any directory relative to the current dir do. >incdir = include_directories(dirname). >After this incdir will contain both the current source dir as well as the; corresponding build dir. It can then be used in any subdirectory and; Meson will take care of all the busywork to make paths work. >Dirname can even be '.' to mark the current directory. Though you should; remember that the current source and build directories are always; put in the include directories by default so you only need to do; include_directories('.') if you intend to use the result in a; different subdirectory. **To Reproduce**. > $ cd $HOME/local; > $ git clone https://github.com/su2code/SU2.git; > $ cd SU2; > $ mkdir build; > $ $HOME/local/Python-3.7.9/python -m venv venv; > $ source venv/bin/activate; > (venv)$ export MPICC=/path/to/mpicc; > (venv)$ export MPICXX=/path/to/mpicxx; > (venv)$ export CC=$MPICC ; > (venv)$ export CXX=$MPICXX ; > (venv)$ pip install --upgrade pip; > (venv)$ pip install mpi4py; > (venv)$ ./meson.py build -Dcustom-mpi=true -Denable-pywrapper=True --prefix=$HOME/local/SU2/build/. **Desktop (please complete the following information):**. - OS: Linux (CentOS 7); - MPI implementation and version: mpich-3.2-intel64-19.0.1.144; - Python Version: Python-3.7.9; - swig Version: 3.0.12; - SU2 Version: [e.g., v6.2.0]",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1672:3143,install,install,3143,https://su2code.github.io,https://github.com/su2code/SU2/issues/1672,3,"['install', 'upgrade']","['install', 'upgrade']"
Deployability,"le besides the .su2 and the .cfg ones. Even the _Constrained shape design of a transonic turbulent airfoil tutorial_ does not work. The required files (_initial solution files for the solver and adjoint solution_flow.dat, solution_adj_cd.dat, and solution_adj_cmz.dat_) are given from the beginning and if they are not added to the path in which the tutorial will be run, it cannot be completed. I also tried the **turb_ONERAM6 Test case** and personal files as well. Furthermore, I tried to cheat (?) creating a solution_adj_cd.dat and solution_adj_cmz.dat files from the EULER ADJOINT problem because it was the only way I had to obtain that file: the RANS ADJOINT problem performed better than expected reaching a feasible geometry which is not the one obtained in the tutorial. I do not get why I have this problem, if it is correct or not. Has anyone experienced this before?. Actually, I think I will run this kind of problem with the cheating (?) procedure described before because I need to go ahead with the work and it seems to work relatively fine. In conclusion, the **ADJOINT** problem with **RANS/NAVIER_STOKES** solver does not work because it needs **solution_adj_*.dat** which are created autonomously with EULER solver. I am using SU2 V7.2.1 but I also tested them with versions from this to 7.0.0. The files from the tutorial without solution_*.dat files:; [turb_SA_RAE2822.zip](https://github.com/su2code/SU2/files/7639785/turb_SA_RAE2822.zip). Personal files:; [naca0012_8_1_0_700.zip](https://github.com/su2code/SU2/files/7640051/naca0012_8_1_0_700.zip). The command that I use is: python shape_optimization.py -n 8 -g CONTINUOUS_ADJOINT -o SLSQP -f used_file.cfg. UPDATE: I also compiled the code in Ubuntu 20.04 enabling the DISCRETE_ADJOINT functionality but I always receive the same message. How can I create those solution_adj_*.dat files to start the ADJOINT problem?. Have I missed something written in other tutorials?. Thank you very much for all of the support.</div>",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1466:2551,UPDATE,UPDATE,2551,https://su2code.github.io,https://github.com/su2code/SU2/issues/1466,1,['UPDATE'],['UPDATE']
Deployability,"le boundary conditions setup were tested for the ""inlet"", ""farfield"" and ""outlet"" markers. Furthermore the Inlet BC were tried with many different vertical speeds (vx=0/0.001/0.01/0.1/1/10). Simulations with the inlet, farfield and outlet as TOTAL_INLET, FARFIELD, OUTLET and EULER and some (not all) combination between these BC were tried. The mesh was generated with Salome-Meca. It is a tetrahedral mesh. I have a script that permits to change the domain size with ease. So from the mesh perspective it is fairly easy to test different mesh sizes and domain sizes.; Generally the outer domain radius was between 1.5*propRadius to 10*propRadus. Domain height between 3*propRadius to 15*propRadius. The prop was at 2/3 of the total height (1/2 and 3/4 were also tested). Some simulations approximated from a far experimental results (thrust +/-10% error, torque +/-15%). Some completely diverged some converge towards something way out of the 10% error range. **To Reproduce**. You can find the configuration file below.; I cannot provide the mesh at the moment.; If needed I will change the geometry for ""reproduction"". `%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%; % %; % SU2 configuration file %; % Case description: Caradonna & Tung rotor in hover (still air) %; % Author: Thomas D. Economon %; % Institution: Stanford University %; % Date: 2020.05.24 %; % File Version 7.3.1 ""Blackbird"" %; % %; %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%. % ------------- DIRECT, ADJOINT, AND LINEARIZED PROBLEM DEFINITION ------------%; %; % Physical governing equations (EULER, NAVIER_STOKES,; % WAVE_EQUATION, HEAT_EQUATION, FEM_ELASTICITY,; % POISSON_EQUATION); SOLVER= EULER; %; % Mathematical problem (DIRECT, CONTINUOUS_ADJOINT); MATH_PROBLEM= DIRECT; %; % Restart solution (NO, YES); RESTART_SOL= NO . % ----------- COMPRESSIBLE AND INCOMPRESSIBLE FREE-STREAM DEFINITION ----------%; %; % Mach number (non-dimensional, based on ",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1669:2418,configurat,configuration,2418,https://su2code.github.io,https://github.com/su2code/SU2/issues/1669,1,['configurat'],['configuration']
Deployability,"le phenomena in hypersonic blunt bodies (https://doi.org/10.1016/j.apm.2019.09.005); 2.) Wally - A full refactoring of the AUSM schemes within NEMO; 3.) Removal of AUSMPW+ scheme; ; ## Related Work; This work is a follow-up and a cleaner version of the work in the branch **feature_NEMO_AUSMPLUSM**. I will delete both branches after merge. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [X] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary. ### Benchmark. I have conducted a comparison between the AUSM and AUSM+M for a 2D axisymmetric non-equilibrium flow over a cylinder with a 0.1 meter diameter and a freestream of M=24, P = 10.23 N and T = 224.5 K. ![image](https://user-images.githubusercontent.com/29612207/192250118-eb074187-3002-468a-8406-b01047c790bd.png); The left image represents the converged 2nd order solution using AUSM+M and the right image using the standard AUSM scheme. The new AUSM+M scheme enables to get rid of the pressure oscillations near the stagnation area. ![image](https://user-images.githubusercontent.com/29612207/192250632-85b64454-c54c-4815-8664-f72fc17d705d.png); Temperature at the stagnation line (solid line is AUSM+M and dashed line is AUSM). ![image](https://user-images.githubusercontent.com/29612207/192250763-ee3b96db-b42f-4ebe-a256-bcb9043ecb24.png); ![image](https://user-images.githubusercontent.com/29612207/192250910-2fae95b2-ee",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1773:1120,update,updated,1120,https://su2code.github.io,https://github.com/su2code/SU2/pull/1773,1,['update'],['updated']
Deployability,"les/mingw-w64/x86_64-8.1.0-posix-seh-rt_v6-rev0/mingw64/bin/../lib/gcc/x86_64-w64-mingw32/8.1.0/../../../../x86_64-w64-mingw32/lib/../lib/;C:/Program Files/mingw-w64/x86_64-8.1.0-posix-seh-rt_v6-rev0/mingw64/bin/../lib/gcc/x86_64-w64-mingw32/8.1.0/../../../x86_64-w64-mingw32/8.1.0/;C:/Program Files/mingw-w64/x86_64-8.1.0-posix-seh-rt_v6-rev0/mingw64/bin/../lib/gcc/x86_64-w64-mingw32/8.1.0/../../../../lib/;C:/mingw810/x86_64-810-posix-seh-rt_v6-rev0/mingw64/mingw/lib/x86_64-w64-mingw32/8.1.0/;C:/mingw810/x86_64-810-posix-seh-rt_v6-rev0/mingw64/mingw/lib/../lib/;C:/Program Files/mingw-w64/x86_64-8.1.0-posix-seh-rt_v6-rev0/mingw64/bin/../lib/gcc/x86_64-w64-mingw32/8.1.0/../../../../x86_64-w64-mingw32/lib/;C:/Program Files/mingw-w64/x86_64-8.1.0-posix-seh-rt_v6-rev0/mingw64/bin/../lib/gcc/x86_64-w64-mingw32/8.1.0/../../../;C:/mingw810/x86_64-810-posix-seh-rt_v6-rev0/mingw64/mingw/lib/; ; Compiler stderr:; . In Command Window i got this message:; Message: -------------------------------------------------------------------------; | ___ _ _ ___ |; | / __| | | |_ ) Release 7.1.1 ""Blackbird"" |; | \__ \ |_| |/ / |; | |___/\___//___| Meson Configuration Summary |; | |; -------------------------------------------------------------------------. Option Value; ---------------------; TecIO: true; CGNS: true; AD (reverse): true; AD (forward): true; Python Wrapper: true; Intel-MKL: false; OpenBlas: false; PaStiX: false; Mixed Float: false. Please be sure to add the $SU2_HOME and $SU2_RUN environment variables,; and update your $PATH (and $PYTHONPATH if applicable) with $SU2_RUN. Based on the input to this configuration, add these lines to your .bashrc file:. export SU2_RUN=D:\Programme\SU2-7.1.1\bin/bin; export SU2_HOME=D:\Programme\SU2-7.1.1; export PATH=$PATH:$SU2_RUN; export PYTHONPATH=$PYTHONPATH:$SU2_RUN. Use './ninja -C D:\Programme\SU2-7.1.1\build install' to compile and install SU2. Build targets in project: 20. Found ninja.exe-1.9.0 at D:\Programme\SU2-7.1.1\ninja.exe; Trace",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/888#issuecomment-821840286:12276,Release,Release,12276,https://su2code.github.io,https://github.com/su2code/SU2/issues/888#issuecomment-821840286,1,['Release'],['Release']
Deployability,"li>See full diff in <a href=""https://github.com/actions/upload-release-asset/compare/v1.0.1...v1.0.2"">compare view</a></li>; </ul>; </details>; <br />. [![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=actions/upload-release-asset&package-manager=github_actions&previous-version=1.0.1&new-version=1.0.2)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores). Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`. [//]: # (dependabot-automerge-start); [//]: # (dependabot-automerge-end). ---. <details>; <summary>Dependabot commands and options</summary>; <br />. You can trigger Dependabot actions by commenting on this PR:; - `@dependabot rebase` will rebase this PR; - `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it; - `@dependabot merge` will merge this PR after your CI passes on it; - `@dependabot squash and merge` will squash and merge this PR after your CI passes on it; - `@dependabot cancel merge` will cancel a previously requested merge and block automerging; - `@dependabot reopen` will reopen this PR if it is closed; - `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually; - `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself); - `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself); - `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself). </details>",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1737:3750,upgrade,upgrade,3750,https://su2code.github.io,https://github.com/su2code/SU2/pull/1737,9,['upgrade'],['upgrade']
Deployability,"license did not change, so no need to update that file.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1726#issuecomment-1198611591:38,update,update,38,https://su2code.github.io,https://github.com/su2code/SU2/pull/1726#issuecomment-1198611591,1,['update'],['update']
Deployability,limshady/UserPackages/SU2_INSTALL_NEW/bin; Installing SU2_GEO/src/SU2_GEO to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing SU2_MSH/src/SU2_MSH to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing SU2_SOL/src/SU2_SOL to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing SU2_PY/pySU2/_pysu2.so to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing SU2_PY/pySU2/_pysu2ad.so to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/continuous_adjoint.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/compute_uncertainty.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/finite_differences.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/mesh_deformation.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/parallel_computation.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/parallel_computation_fsi.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/package_tests.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/shape_optimization.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/merge_solution.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/set_ffd_design_var.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/compute_polar.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/compute_multipoint.py to /home/slimshady/UserPackag,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/991#issuecomment-632032044:2117,Install,Installing,2117,https://su2code.github.io,https://github.com/su2code/SU2/issues/991#issuecomment-632032044,1,['Install'],['Installing']
Deployability,ling C:\Users\Danie\Documents\SU2\SU2_PY\parallel_computation_fsi.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\package_tests.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\shape_optimization.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\merge_solution.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\set_ffd_design_var.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\compute_polar.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\compute_multipoint.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\discrete_adjoint.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\direct_differentiation.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\fsi_computation.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2_CFD.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/__init__.py to C:\bin\bin/SU2; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/eval/design.py to C:\bin\bin/SU2/eval; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/eval/functions.py to C:\bin\bin/SU2/eval; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/eval/gradients.py to C:\bin\bin/SU2/eval; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/eval/__init__.py to C:\bin\bin/SU2/eval; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/io/config.py to C:\bin\bin/SU2/io; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/io/config_options.py to C:\bin\bin/SU2/io; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/io/data.py to C:\bin\bin/SU2/io; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/io/filelock.py to C:\bin\bin/SU2/io; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/io/redirect.py to C:\bin\bin/SU2/io; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/io/state.py to C:\bin\bin/SU2/io; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/io/tools.py to C:\bin\bin/SU2/io; Installing C:\Users\Danie\Documents\SU2\SU2,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1376:5150,Install,Installing,5150,https://su2code.github.io,https://github.com/su2code/SU2/issues/1376,1,['Install'],['Installing']
Deployability,"ll -DMS_WIN64 -IC:\Users\Danie\Anaconda3\envs\vsptools\include -IC:\Users\Danie\Anaconda3\envs\vsptools\include -c ./sources/Python3.7/option.c -o build\temp.win-amd64-3.8\Release\.\sources\python3.7\option.o -std=c99 -Wno-unused-variable -Wno-unused-result -O3; ./sources/Python3.7/option.c: In function 'CheckOptions':; ./sources/Python3.7/option.c:46:32: warning: '.o' directive writing 2 bytes into a region of size between 1 and 1024 [-Wformat-overflow=]; sprintf(mshopt->OutNam, ""%s.o"", mshopt->BasNam);; ^~; ./sources/Python3.7/option.c:46:5: note: 'sprintf' output between 3 and 1026 bytes into a destination of size 1024; sprintf(mshopt->OutNam, ""%s.o"", mshopt->BasNam);; ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~; C:\Program Files\mingw-w64\x86_64-8.1.0-posix-seh-rt_v6-rev0\mingw64\bin\gcc.exe -mdll -O -Wall -DMS_WIN64 -IC:\Users\Danie\Anaconda3\envs\vsptools\include -IC:\Users\Danie\Anaconda3\envs\vsptools\include -c ./sources/Python3.7/libmesh6.c -o build\temp.win-amd64-3.8\Release\.\sources\python3.7\libmesh6.o -std=c99 -Wno-unused-variable -Wno-unused-result -O3; C:\Program Files\mingw-w64\x86_64-8.1.0-posix-seh-rt_v6-rev0\mingw64\bin\gcc.exe -mdll -O -Wall -DMS_WIN64 -IC:\Users\Danie\Anaconda3\envs\vsptools\include -IC:\Users\Danie\Anaconda3\envs\vsptools\include -c ./sources/Python3.7/amgio_py_wrap.c -o build\temp.win-amd64-3.8\Release\.\sources\python3.7\amgio_py_wrap.o -std=c99 -Wno-unused-variable -Wno-unused-result -O3; C:\Program Files\mingw-w64\x86_64-8.1.0-posix-seh-rt_v6-rev0\mingw64\bin\gcc.exe -mdll -O -Wall -DMS_WIN64 -IC:\Users\Danie\Anaconda3\envs\vsptools\include -IC:\Users\Danie\Anaconda3\envs\vsptools\include -c ./sources/Python3.7/convert.c -o build\temp.win-amd64-3.8\Release\.\sources\python3.7\convert.o -std=c99 -Wno-unused-variable -Wno-unused-result -O3; ./sources/Python3.7/convert.c: In function 'SplitSolution':; ./sources/Python3.7/convert.c:191:7: warning: variable 'iTemp' set but not used [-Wunused-but-set-variable]; int iTemp = -",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1379:5615,Release,Release,5615,https://su2code.github.io,https://github.com/su2code/SU2/issues/1379,1,['Release'],['Release']
Deployability,lling C:\Users\Danie\Documents\SU2\SU2_PY\SU2/opt/project.py to C:\bin\bin/SU2/opt; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/opt/scipy_tools.py to C:\bin\bin/SU2/opt; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/opt/__init__.py to C:\bin\bin/SU2/opt; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/run/adjoint.py to C:\bin\bin/SU2/run; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/run/deform.py to C:\bin\bin/SU2/run; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/run/direct.py to C:\bin\bin/SU2/run; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/run/interface.py to C:\bin\bin/SU2/run; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/run/merge.py to C:\bin\bin/SU2/run; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/run/geometry.py to C:\bin\bin/SU2/run; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/run/projection.py to C:\bin\bin/SU2/run; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/run/__init__.py to C:\bin\bin/SU2/run; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/util/bunch.py to C:\bin\bin/SU2/util; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/util/filter_adjoint.py to C:\bin\bin/SU2/util; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/util/lhc_unif.py to C:\bin\bin/SU2/util; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/util/misc.py to C:\bin\bin/SU2/util; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/util/mp_eval.py to C:\bin\bin/SU2/util; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/util/ordered_bunch.py to C:\bin\bin/SU2/util; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/util/ordered_dict.py to C:\bin\bin/SU2/util; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/util/plot.py to C:\bin\bin/SU2/util; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/util/polarSweepLib.py to C:\bin\bin/SU2/util; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/util/which.py to C:\bin\bin/SU2/util; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/util/switch.py to C:\bin\bin/SU2/util; Ins,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1376:7293,Install,Installing,7293,https://su2code.github.io,https://github.com/su2code/SU2/issues/1376,1,['Install'],['Installing']
Deployability,lling C:\Users\Danie\Documents\SU2\SU2_PY\package_tests.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\shape_optimization.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\merge_solution.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\set_ffd_design_var.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\compute_polar.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\compute_multipoint.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\discrete_adjoint.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\direct_differentiation.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\fsi_computation.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2_CFD.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/__init__.py to C:\bin\bin/SU2; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/eval/design.py to C:\bin\bin/SU2/eval; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/eval/functions.py to C:\bin\bin/SU2/eval; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/eval/gradients.py to C:\bin\bin/SU2/eval; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/eval/__init__.py to C:\bin\bin/SU2/eval; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/io/config.py to C:\bin\bin/SU2/io; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/io/config_options.py to C:\bin\bin/SU2/io; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/io/data.py to C:\bin\bin/SU2/io; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/io/filelock.py to C:\bin\bin/SU2/io; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/io/redirect.py to C:\bin\bin/SU2/io; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/io/state.py to C:\bin\bin/SU2/io; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/io/tools.py to C:\bin\bin/SU2/io; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/io/historyMap.py to C:\bin\bin/SU2/io; Installing C:\Users\Danie\Documents\SU2\SU,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1376:5240,Install,Installing,5240,https://su2code.github.io,https://github.com/su2code/SU2/issues/1376,1,['Install'],['Installing']
Deployability,location.; - Merge branch 'feature_MarkerMax' into develop; - Time and date in the header.; - Small fix to the latest commit.; - Simplification of entropy correction; - Critical stability improvement.; - Minor release 3.2.7.2; - Fixing issues to run with the latest intel compiler; - Fix for Tecplot binary solutions for unsteady flows. Fixes #150.; - Now SU2 should work with the latest version of the Intel compiler.; - Merge branch 'develop' of https://github.com/su2code/SU2 into develop; - Working on the O3 stuff; - Small change.; - Add another check to improve stability.; - Collection of improvements.; - Updated actuator disk; - Merge branch 'develop' of https://github.com/su2code/SU2 into develop; - Preliminary implementation of the Neg SA; - Minor updates; - Preliminary implementation of the Negative SA; - Bug fixing; - Fixed memory issued for very large meshes with ParMETIS.; - Clear evaluation of Vorticity and StrainMag; - Viscous limiter; - Updated RELAXATION_FACTOR; - RANS MG; - Partial fix to no MPI output; - Updated I/O; - Updated Adapt CFL; - Updated Adaptive CFL number; - Release 3.2.8; - Updated SetCFL_Number; - Small update; - Small change; - Small adjustments; - Minor changes; - Updated release 3.2.8; - MPI disabled by default in build. Added --enable-mpi flag to configure.; - Merged the ParMETIS implementation. Updated the build files.; - bootstrap; - Started parallel CGNS reader.; - Memory fix.; - Minor change; - Merge branch 'develop' of https://github.com/su2code/SU2 into develop; - Updated binaries; - Small change to configure.ac. Bootstrap.; - Small change; - Cleaning the code; - Updated grid deformation subroutine; - Fixing the mesh deformation; - Updated SU2_MSH; - Bug fixing; - Initial implementation of parallel CGNS reader. Works on 1 rank.; - Merged in recent changes to geometry_structure.cpp.; - Periodic BC working in serial; - Update option_structure.hpp; - Merge pull request #154 from su2code/fixCOptionEnumList; - Bug fixing (periodic bc);,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/174#issuecomment-101443812:5458,Update,Updated,5458,https://su2code.github.io,https://github.com/su2code/SU2/pull/174#issuecomment-101443812,5,"['Release', 'Update']","['Release', 'Updated']"
Deployability,"looks good to me, except that there are conflicts. Please fix the conflict - see command line instructions provided by github - and push the change into your branch. When your branch is updated the pull request will be automatically updated and the regression test will be run.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/214#issuecomment-162606139:186,update,updated,186,https://su2code.github.io,https://github.com/su2code/SU2/pull/214#issuecomment-162606139,2,['update'],['updated']
Deployability,"lude()); --- stdout ---; C:\Users\KleineKampfzwergin\AppData\Local\Programs\Python\Python39\lib\site-packages\mpi4py\include; ; --- stderr ---; ; ; Message: Using mpi4py from C:\Users\KleineKampfzwergin\AppData\Local\Programs\Python\Python39\lib\site-packages\mpi4py\include; ""python-3.9-embed"" could not be found in LIBPC (None), this is likely due to a relocated python installation; Pkg-config binary for MachineChoice.HOST is cached.; Determining dependency 'python-3.9-embed' with pkg-config executable 'D:\\Programme\\pkg-config-lite-0.28-1_bin-win32\\pkg-config-lite-0.28-1\\bin\\pkg-config.EXE'; PKG_CONFIG_PATH: ; Called `D:\Programme\pkg-config-lite-0.28-1_bin-win32\pkg-config-lite-0.28-1\bin\pkg-config.EXE --modversion python-3.9-embed` -> 1; ; Found ""python-3.9-embed"" via fallback pkgconfig lookup in PKG_CONFIG_LIBDIR/PKG_CONFIG_PATH; Found ""python-3.9"" via SYSCONFIG module; Dependency python found: YES (sysconfig); Program install.sh found: YES (sh D:\Programme\SU2-7.1.1\SU2_PY/pySU2\install.sh); Message: -------------------------------------------------------------------------; | ___ _ _ ___ |; | / __| | | |_ ) Release 7.1.1 ""Blackbird"" |; | \__ \ |_| |/ / |; | |___/\___//___| Meson Configuration Summary |; | |; -------------------------------------------------------------------------; ; Option Value; ---------------------; TecIO: true; CGNS: true; AD (reverse): true; AD (forward): true; Python Wrapper: true; Intel-MKL: false; OpenBlas: false; PaStiX: false; Mixed Float: false; ; Please be sure to add the $SU2_HOME and $SU2_RUN environment variables,; and update your $PATH (and $PYTHONPATH if applicable) with $SU2_RUN; ; Based on the input to this configuration, add these lines to your .bashrc file:; ; export SU2_RUN=D:\Programme\SU2-7.1.1\bin/bin; export SU2_HOME=D:\Programme\SU2-7.1.1; export PATH=$PATH:$SU2_RUN; export PYTHONPATH=$PYTHONPATH:$SU2_RUN; ; Use './ninja -C D:\Programme\SU2-7.1.1\build install' to compile and install SU2; ; Build targets in proje",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/888#issuecomment-821840286:8406,install,install,8406,https://su2code.github.io,https://github.com/su2code/SU2/issues/888#issuecomment-821840286,1,['install'],['install']
Deployability,"lux = 0.5*(phiL+phiR);. residual(iPoint,iVar) += flux;; residual(jPoint,iVar) -= flux;; }; }; }; ```; after vectorizing this to handle multiple edges simultaneously with the SIMD-friendly type the core of the loop becomes; ```c++; using FltVec = Array<double,SIMDLEN>;; ... FltVec d_ij[MAXNDIM];; for(size_t iDim=0; iDim<nDim; ++iDim); d_ij[iDim] = (coords.getVec(jPoint,iDim)-coords.getVec(iPoint,iDim))*0.5;. for(size_t iVar=0; iVar<nVar; ++iVar); {; FltVec phiL = 0.0;; FltVec phiR = 0.0;. for(size_t iDim=0; iDim<nDim; ++iDim); {; phiL += grad.getVec(iPoint,iVar,iDim)*d_ij[iDim];; phiR -= grad.getVec(jPoint,iVar,iDim)*d_ij[iDim];; }. phiL = phi.getVec(iPoint,iVar) + limiter.getVec(iPoint,iVar)*phiL;; phiR = phi.getVec(jPoint,iVar) + limiter.getVec(jPoint,iVar)*phiR;. FltVec flux = (phiL+phiR)*0.5;. for(size_t k=0; k<SIMDLEN; ++k) {; residual(iPoint[k],iVar) += flux[k];; residual(jPoint[k],iVar) -= flux[k];; }; }; ```; Note that at the end of the loop we need to de-swizzle the flux to update the multiple indexes references by iPoint and jPoint, which are now short arrays of integers (this operation can be moved to the container, akin to `getVec` but I show it here for clarity). **With SoA (aka column major storage) this code is 1.5 times slower than the scalar version.**. The reason for that is poor locality (of the spacial variety), as we loop through the number of variables and dimensions we are accessing the data in strides of nPoint, as the contiguous index is the first one so that we can perform vector read/writes when computing gradients and limiters.; With the scalar version the data for each point is contiguous which means on the first access we get whatever extra data is on the same cache line for free and subsequent accesses will be hardware prefetched since the stride is small (1 in this case). We lose all this with SoA storage. If we go back to arrays of structures (AoS, aka row major storage, basically what we have in #753) performance is only 9% worse (th",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/789#issuecomment-535977206:8006,update,update,8006,https://su2code.github.io,https://github.com/su2code/SU2/issues/789#issuecomment-535977206,2,['update'],['update']
Deployability,"lve this issue:; - Stop removing multigrid levels in CMultiGridGeometry::CMultiGridGeometry() or improve the function. Why do we need to check whether the ratio is below a certain level? We should just check if the coarse level is empty, i.e., no control volumes.; - When removing a MG level in CMultiGridGeometry::CMultiGridGeometry() subtract one to the index of the finest grid, i.e., config->SubtractFinestMesh();. What are your thoughts?. After solving the previous issues, with mpirun and depending on the number of cores to be used SU2 will still produce a segmentation fault when using Full MG. This problem is not present when using mpiexec. I traced it back and found that in CFVMFlowSolverBase<V, FlowRegime>::Friction_Forces the method GetNormal_Neighbor() from CVertex returns a non existing point. Before delving into the problem would be nice if you could corroborate these findings. My versions of mpirun and mpiexec are 3.1.3 and 3.3 respectively. ## Additional Work; Additionally I have corrected the description of the variable Convergence_FullMG in CIntegration.hpp. Related to this same variable, what is the definition of convergence for the full multigrid?; Further, this parameter, Convergence_FullMG, is set to false in CIntegration::CIntegration() and never updated i.e., there is no evaluation whether the FullMG has converged or not. Consequently, the function SetProlongated_Solution() in CMultiGridIntegration::MultiGrid_Iteration() is never executed. ## PR Checklist; - [ ] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [ ] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1362:2822,update,updated,2822,https://su2code.github.io,https://github.com/su2code/SU2/pull/1362,2,['update'],['updated']
Deployability,"m/actions/cache/compare/v3...v3.3.2"">https://github.com/actions/cache/compare/v3...v3.3.2</a></p>; <h2>v3.3.1</h2>; <h2>What's Changed</h2>; <ul>; <li>Reduced download segment size to 128 MB and timeout to 10 minutes by <a href=""https://github.com/kotewar""><code>@​kotewar</code></a> in <a href=""https://redirect.github.com/actions/cache/pull/1129"">actions/cache#1129</a></li>; </ul>; <p><strong>Full Changelog</strong>: <a href=""https://github.com/actions/cache/compare/v3...v3.3.1"">https://github.com/actions/cache/compare/v3...v3.3.1</a></p>; <h2>v3.3.0</h2>; <h2>What's Changed</h2>; <ul>; <li>Bug: Permission is missing in cache delete example by <a href=""https://github.com/kotokaze""><code>@​kotokaze</code></a> in <a href=""https://redirect.github.com/actions/cache/pull/1123"">actions/cache#1123</a></li>; </ul>; <!-- raw HTML omitted -->; </blockquote>; <p>... (truncated)</p>; </details>; <details>; <summary>Changelog</summary>; <p><em>Sourced from <a href=""https://github.com/actions/cache/blob/main/RELEASES.md"">actions/cache's changelog</a>.</em></p>; <blockquote>; <h1>Releases</h1>; <h3>4.0.1</h3>; <ul>; <li>Updated <code>isGhes</code> check</li>; </ul>; <h3>4.0.0</h3>; <ul>; <li>Updated minimum runner version support from node 12 -&gt; node 20</li>; </ul>; <h3>3.3.3</h3>; <ul>; <li>Updates <code>@​actions/cache</code> to v3.2.3 to fix accidental mutated path arguments to <code>getCacheVersion</code> <a href=""https://redirect.github.com/actions/toolkit/pull/1378"">actions/toolkit#1378</a></li>; <li>Additional audit fixes of npm package(s)</li>; </ul>; <h3>3.3.2</h3>; <ul>; <li>Fixes bug with Azure SDK causing blob downloads to get stuck.</li>; </ul>; <h3>3.3.1</h3>; <ul>; <li>Reduced segment size to 128MB and segment timeout to 10 minutes to fail fast in case the cache download is stuck.</li>; </ul>; <h3>3.3.0</h3>; <ul>; <li>Added option to lookup cache without downloading it.</li>; </ul>; <h3>3.2.6</h3>; <ul>; <li>Fix zstd not being used after zstd version upgrade to 1",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2232:6037,RELEASE,RELEASES,6037,https://su2code.github.io,https://github.com/su2code/SU2/pull/2232,1,['RELEASE'],['RELEASES']
Deployability,m/su2code/SU2 into develop; - Preliminary implementation of the Neg SA; - Minor updates; - Preliminary implementation of the Negative SA; - Bug fixing; - Fixed memory issued for very large meshes with ParMETIS.; - Clear evaluation of Vorticity and StrainMag; - Viscous limiter; - Updated RELAXATION_FACTOR; - RANS MG; - Partial fix to no MPI output; - Updated I/O; - Updated Adapt CFL; - Updated Adaptive CFL number; - Release 3.2.8; - Updated SetCFL_Number; - Small update; - Small change; - Small adjustments; - Minor changes; - Updated release 3.2.8; - MPI disabled by default in build. Added --enable-mpi flag to configure.; - Merged the ParMETIS implementation. Updated the build files.; - bootstrap; - Started parallel CGNS reader.; - Memory fix.; - Minor change; - Merge branch 'develop' of https://github.com/su2code/SU2 into develop; - Updated binaries; - Small change to configure.ac. Bootstrap.; - Small change; - Cleaning the code; - Updated grid deformation subroutine; - Fixing the mesh deformation; - Updated SU2_MSH; - Bug fixing; - Initial implementation of parallel CGNS reader. Works on 1 rank.; - Merged in recent changes to geometry_structure.cpp.; - Periodic BC working in serial; - Update option_structure.hpp; - Merge pull request #154 from su2code/fixCOptionEnumList; - Bug fixing (periodic bc); - Merge branch 'develop' of https://github.com/su2code/SU2 into develop; - Another important updated to BC in parallel; - More implementation and clean up of the parallel CGNS reader.; - Merge branch 'develop' of https://github.com/su2code/SU2 into develop; - CGNS reader bug fix.; - Updated adj. NS solver with primitive variables and farfield bc including viscous contribution.; - Merge branch 'develop' of https://github.com/su2code/SU2 into develop; - Small change; - Back to the previous version; - Fixed some loop variables.; - Merge branch 'develop' of https://github.com/su2code/SU2 into develop; - Bug fixes for CGNS.; - New slope limiter based on the wall distance; - Me,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/174#issuecomment-101443812:6124,Update,Updated,6124,https://su2code.github.io,https://github.com/su2code/SU2/pull/174#issuecomment-101443812,2,['Update'],['Updated']
Deployability,makefile fixes and preconfigure version update,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/898:40,update,update,40,https://su2code.github.io,https://github.com/su2code/SU2/pull/898,1,['update'],['update']
Deployability,mall change; - Back to the previous version; - Fixed some loop variables.; - Merge branch 'develop' of https://github.com/su2code/SU2 into develop; - Bug fixes for CGNS.; - New slope limiter based on the wall distance; - Merge branch 'develop' of https://github.com/su2code/SU2 into develop; - Bug fixing; - Non-dimensional adjoint bc; - CGNS bug.; - Mixed-element support in new CGNS reader.; - Memory fix for mixed-element CGNS in parallel.; - Activated the parallel CGNS reader.; - New FFD input; - Adjacency building for Parmetis improve to account for VTK structure; - added if viscous steps to some adjeuler bcs; - Minor changes; - Back to previous version of ParMetis; - Small change; - Final update.; - Minor bug fixed.; - Updated SU2_DEF (cgns); - CGNS global element ID bug fix.; - Heat flux bug fix.; - Small fix.; - Merge branch 'master' into develop; - changed history output to match # of residuals printed in header and body; - further correction to history output; - history file fix; - fixed history output such that massflowrate can be output while in rans; - Removed Parmetis updates to adjacency; - Minor changes; - Merge branch 'develop' of https://github.com/su2code/SU2 into develop; - Bug fixing; - ver 3.2.8.3; - Updated CGNS in parallel.; - Added the ability to writting 2 files at each checkpoint when using 2nd order dual time stepping; - Merge branch 'develop' into feature_dualoutput; - Updated FieldView; - Preliminary implementation (ASCII); - Minor changes; - Update code; - Updated FieldView format; - Merge branch 'develop' into feature_dualoutput; - Bug fixing; - Updated FieldView ASCII format; - Complete implementation of the FFD_CONTINUITY capability; - Updated FFD intersections; - ver 3.2.9; - adding targetea file to equivalent area adjoint folder. address issue #160; - Merge branch 'develop' of github.com:su2code/SU2 into develop; - Final push to v3.2.9; - after bootstrap; - updates to comments in config_structure to make doxygen pretty; - Bug fixing; -,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/174#issuecomment-101443812:8051,update,updates,8051,https://su2code.github.io,https://github.com/su2code/SU2/pull/174#issuecomment-101443812,2,['update'],['updates']
Deployability,me/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing SU2_DOT/src/SU2_DOT to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing SU2_DOT/src/SU2_DOT_AD to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing SU2_DEF/src/SU2_DEF to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing SU2_GEO/src/SU2_GEO to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing SU2_MSH/src/SU2_MSH to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing SU2_SOL/src/SU2_SOL to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing SU2_PY/pySU2/_pysu2.so to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing SU2_PY/pySU2/_pysu2ad.so to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/continuous_adjoint.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/compute_uncertainty.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/finite_differences.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/mesh_deformation.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/parallel_computation.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/parallel_computation_fsi.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/package_tests.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/shape_optimization.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/merge_solution.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/set_ffd_design_var.py to /home/slimshady/UserPa,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/991#issuecomment-632032044:1859,Install,Installing,1859,https://su2code.github.io,https://github.com/su2code/SU2/issues/991#issuecomment-632032044,1,['Install'],['Installing']
Deployability,"medium.su2; %; % Mesh input file format (SU2, CGNS); MESH_FORMAT= SU2; %; % Mesh output file; MESH_OUT_FILENAME= mesh_out.su2; %; % Restart flow input file; SOLUTION_FILENAME= solution_flow.dat; %; % Restart adjoint input file; SOLUTION_ADJ_FILENAME= solution_adj.dat; %; % Output file format (TECPLOT, TECPLOT_BINARY, PARAVIEW,; % FIELDVIEW, FIELDVIEW_BINARY); OUTPUT_FILES= RESTART, PARAVIEW_ASCII, SURFACE_PARAVIEW_ASCII; %; % Output file convergence history (w/o extension) ; CONV_FILENAME= history; %; % Output file with the forces breakdown; BREAKDOWN_FILENAME= forces_breakdown.dat; %; % Output file restart flow; RESTART_FILENAME= restart_flow.dat; %; % Output file restart adjoint; RESTART_ADJ_FILENAME= restart_adj.dat; %; % Output file flow (w/o extension) variables; VOLUME_FILENAME= flow; %; % Output file adjoint (w/o extension) variables; VOLUME_ADJ_FILENAME= adjoint; %; % Output Objective function; VALUE_OBJFUNC_FILENAME= of_eval.dat; %; % Output objective function gradient (using continuous adjoint); GRAD_OBJFUNC_FILENAME= of_grad.dat; %; % Output file surface flow coefficient (w/o extension); SURFACE_FILENAME= surface_flow; %; % Output file surface adjoint coefficient (w/o extension); SURFACE_ADJ_FILENAME= surface_adjoint; %; % Writing frequency for volume/surface output; OUTPUT_WRT_FREQ= 5000; % Writing frequency for history output; HISTORY_WRT_FREQ_INNER= 1; % Writing convergence history frequency; SCREEN_WRT_FREQ_INNER= 1; % Screen output fields. SCREEN_OUTPUT = (INNER_ITER, RMS_DENSITY, RMS_TKE, RMS_DISSIPATION, LIFT, DRAG, MOMENT_Y); % History output groups (use 'SU2_CFD -d <config_file>' to view list of available fields); HISTORY_OUTPUT= (ITER, RMS_RES, AERO_COEFF, WALL_TIME); %; % Volume output fields/groups (use 'SU2_CFD -d <config_file>' to view list of available fields); VOLUME_OUTPUT= (COORDINATES, SOLUTION, PRIMITIVE, VORTEX_IDENTIFICATION). **Desktop (please complete the following information):**; - OS: [e.g., Linux (Redhat 6.6)]; - C++ compiler a",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1297:9878,continuous,continuous,9878,https://su2code.github.io,https://github.com/su2code/SU2/issues/1297,1,['continuous'],['continuous']
Deployability,"meson.build does indeed look short and clean. Tried this on mac, and hit the following error (I guess the OS is more picky?):. ERROR: Could not detect Ninja v1.5 or newer. Any issue with updating to a newer ninja version in the bootstrap? . Also, for older git versions (like mine apparently), you may need to add the --init and --recursive flags to 'git submodule update'",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/685#issuecomment-495097393:365,update,update,365,https://su2code.github.io,https://github.com/su2code/SU2/issues/685#issuecomment-495097393,1,['update'],['update']
Deployability,"metric formulation. In the baseline model, the only term that has an impact is:; ![image](https://github.com/su2code/SU2/assets/65549824/2afb2da5-4fb5-460d-86da-dfec60fb689f); Rewriting it in cylindrical coordinates, an additional source term is obtained:; ![image](https://github.com/su2code/SU2/assets/65549824/7e2a7f15-acae-49b7-9db7-7e65630c0045). In the Negative variant of the model, this source varies slightly due to the presence of $f_n$:; ![image](https://github.com/su2code/SU2/assets/65549824/fdb23203-1c0a-45ea-94ce-e0e6190293db). The compressibility correction also requires a new source. Rewriting; ![image](https://github.com/su2code/SU2/assets/65549824/a639b5a9-18a8-4c6a-aa5a-dfdac00a2e38); in cylindrical coordinates yields the new source; ![image](https://github.com/su2code/SU2/assets/65549824/2c2d7c80-2db3-4a6c-bdd8-68a5e76aaa46). For the other model variants, it looks like the modification of strain magnitude (done for SST) takes care of the differences, but I might be mistaken. . ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*; #1565 . ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [X] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [X] I used the pre-commit hook to prevent dirty commits and used `pre-commit run --all` to format old commits.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2197:2081,update,updated,2081,https://su2code.github.io,https://github.com/su2code/SU2/pull/2197,1,['update'],['updated']
Deployability,"mingw/lib/; ; Compiler stderr:; . In Command Window i got this message:; Message: -------------------------------------------------------------------------; | ___ _ _ ___ |; | / __| | | |_ ) Release 7.1.1 ""Blackbird"" |; | \__ \ |_| |/ / |; | |___/\___//___| Meson Configuration Summary |; | |; -------------------------------------------------------------------------. Option Value; ---------------------; TecIO: true; CGNS: true; AD (reverse): true; AD (forward): true; Python Wrapper: true; Intel-MKL: false; OpenBlas: false; PaStiX: false; Mixed Float: false. Please be sure to add the $SU2_HOME and $SU2_RUN environment variables,; and update your $PATH (and $PYTHONPATH if applicable) with $SU2_RUN. Based on the input to this configuration, add these lines to your .bashrc file:. export SU2_RUN=D:\Programme\SU2-7.1.1\bin/bin; export SU2_HOME=D:\Programme\SU2-7.1.1; export PATH=$PATH:$SU2_RUN; export PYTHONPATH=$PYTHONPATH:$SU2_RUN. Use './ninja -C D:\Programme\SU2-7.1.1\build install' to compile and install SU2. Build targets in project: 20. Found ninja.exe-1.9.0 at D:\Programme\SU2-7.1.1\ninja.exe; Traceback (most recent call last):; File ""D:\Programme\SU2-7.1.1\externals\meson\mesonbuild\mesonmain.py"", line 131, in run; return options.run_func(options); File ""D:\Programme\SU2-7.1.1\externals\meson\mesonbuild\msetup.py"", line 245, in run; app.generate(); File ""D:\Programme\SU2-7.1.1\externals\meson\mesonbuild\msetup.py"", line 159, in generate; self._generate(env); File ""D:\Programme\SU2-7.1.1\externals\meson\mesonbuild\msetup.py"", line 215, in _generate; intr.backend.generate(); File ""D:\Programme\SU2-7.1.1\externals\meson\mesonbuild\backend\ninjabackend.py"", line 321, in generate; self.generate_target(t); File ""D:\Programme\SU2-7.1.1\externals\meson\mesonbuild\backend\ninjabackend.py"", line 641, in generate_target; elem = self.generate_link(target, outname, obj_list, linker, pch_objects, stdlib_args=stdlib_args); File ""D:\Programme\SU2-7.1.1\externals\meson\mesonbuild\",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/888#issuecomment-821840286:13071,install,install,13071,https://su2code.github.io,https://github.com/su2code/SU2/issues/888#issuecomment-821840286,2,['install'],['install']
Deployability,"mme\SU2-7.1.1\SU2_PY/pySU2\install.sh); Message: -------------------------------------------------------------------------; | ___ _ _ ___ |; | / __| | | |_ ) Release 7.1.1 ""Blackbird"" |; | \__ \ |_| |/ / |; | |___/\___//___| Meson Configuration Summary |; | |; -------------------------------------------------------------------------; ; Option Value; ---------------------; TecIO: true; CGNS: true; AD (reverse): true; AD (forward): true; Python Wrapper: true; Intel-MKL: false; OpenBlas: false; PaStiX: false; Mixed Float: false; ; Please be sure to add the $SU2_HOME and $SU2_RUN environment variables,; and update your $PATH (and $PYTHONPATH if applicable) with $SU2_RUN; ; Based on the input to this configuration, add these lines to your .bashrc file:; ; export SU2_RUN=D:\Programme\SU2-7.1.1\bin/bin; export SU2_HOME=D:\Programme\SU2-7.1.1; export PATH=$PATH:$SU2_RUN; export PYTHONPATH=$PYTHONPATH:$SU2_RUN; ; Use './ninja -C D:\Programme\SU2-7.1.1\build install' to compile and install SU2; ; Build targets in project: 20; ; Found ninja.exe-1.9.0 at D:\Programme\SU2-7.1.1\ninja.exe; Running compile:; Working directory: C:\Users\MANUEL~1\AppData\Local\Temp\tmpctmi2f32; Command line: c++ C:\Users\MANUEL~1\AppData\Local\Temp\tmpctmi2f32\testfile.cpp -o C:\Users\MANUEL~1\AppData\Local\Temp\tmpctmi2f32\output.obj -pipe -c -std=c++11 ; ; Code:; int i = static_cast<int>(0);; Compiler stdout:; ; Compiler stderr:; ; Compiler accepts -std=c++11: YES; Running compile:; Working directory: D:\Programme\SU2-7.1.1\build\meson-private\tmp380_12oo; Command line: c++ D:\Programme\SU2-7.1.1\build\meson-private\tmp380_12oo\testfile.cpp -o D:\Programme\SU2-7.1.1\build\meson-private\tmp380_12oo\output.obj -pipe -c -O0 -fpermissive --print-search-dirs ; ; Code:; ; Compiler stdout:; install: C:/Program Files/mingw-w64/x86_64-8.1.0-posix-seh-rt_v6-rev0/mingw64/bin/../lib/gcc/x86_64-w64-mingw32/8.1.0/; programs: =C:/Program Files/mingw-w64/x86_64-8.1.0-posix-seh-rt_v6-rev0/mingw64/bin/../libexec/gcc",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/888#issuecomment-821840286:9342,install,install,9342,https://su2code.github.io,https://github.com/su2code/SU2/issues/888#issuecomment-821840286,2,['install'],['install']
Deployability,"more info on that, the patch need to be more clever. in fact the width (32 or 64 bits) of the elementary data type; used in METIS is controled by the IDXTYPEWIDTH; constant.; For now, on a 32 bit architecture you can only specify a width of 32,; whereas for a 64 bit architecture you can specify a width of either; 32 or 64 bits. and under Fedora and Mageia the metis package set the width to 64 on 64 bit architecture",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/19#issuecomment-30085781:23,patch,patch,23,https://su2code.github.io,https://github.com/su2code/SU2/issues/19#issuecomment-30085781,1,['patch'],['patch']
Deployability,mshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/opt; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/opt/__init__.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/opt; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/run/adaptation.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/run; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/run/adjoint.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/run; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/run/deform.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/run; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/run/direct.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/run; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/run/interface.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/run; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/run/merge.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/run; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/run/geometry.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/run; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/run/projection.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/run; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/run/__init__.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/run; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/util/bunch.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/util; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/util/filter_adjoint.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/util; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/util/lhc_unif.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/util; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/util/misc.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/util; Installing /home/slimshady/UserPackages/SU2,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/991#issuecomment-632032044:7170,Install,Installing,7170,https://su2code.github.io,https://github.com/su2code/SU2/issues/991#issuecomment-632032044,1,['Install'],['Installing']
Deployability,mshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/run; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/run/adjoint.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/run; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/run/deform.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/run; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/run/direct.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/run; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/run/interface.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/run; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/run/merge.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/run; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/run/geometry.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/run; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/run/projection.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/run; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/run/__init__.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/run; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/util/bunch.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/util; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/util/filter_adjoint.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/util; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/util/lhc_unif.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/util; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/util/misc.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/util; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/util/mp_eval.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/util; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/util/ordered_bunch.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/util; Installing /home/slimshady/UserPackag,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/991#issuecomment-632032044:7444,Install,Installing,7444,https://su2code.github.io,https://github.com/su2code/SU2/issues/991#issuecomment-632032044,1,['Install'],['Installing']
Deployability,mshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/run; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/run/deform.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/run; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/run/direct.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/run; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/run/interface.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/run; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/run/merge.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/run; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/run/geometry.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/run; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/run/projection.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/run; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/run/__init__.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/run; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/util/bunch.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/util; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/util/filter_adjoint.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/util; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/util/lhc_unif.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/util; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/util/misc.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/util; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/util/mp_eval.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/util; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/util/ordered_bunch.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/util; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/util/ordered_dict.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/util; Installing /home/slimshady/Use,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/991#issuecomment-632032044:7580,Install,Installing,7580,https://su2code.github.io,https://github.com/su2code/SU2/issues/991#issuecomment-632032044,1,['Install'],['Installing']
Deployability,multipoint.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\discrete_adjoint.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\direct_differentiation.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\fsi_computation.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2_CFD.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/__init__.py to C:\bin\bin/SU2; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/eval/design.py to C:\bin\bin/SU2/eval; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/eval/functions.py to C:\bin\bin/SU2/eval; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/eval/gradients.py to C:\bin\bin/SU2/eval; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/eval/__init__.py to C:\bin\bin/SU2/eval; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/io/config.py to C:\bin\bin/SU2/io; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/io/config_options.py to C:\bin\bin/SU2/io; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/io/data.py to C:\bin\bin/SU2/io; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/io/filelock.py to C:\bin\bin/SU2/io; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/io/redirect.py to C:\bin\bin/SU2/io; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/io/state.py to C:\bin\bin/SU2/io; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/io/tools.py to C:\bin\bin/SU2/io; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/io/historyMap.py to C:\bin\bin/SU2/io; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/io/__init__.py to C:\bin\bin/SU2/io; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/opt/project.py to C:\bin\bin/SU2/opt; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/opt/scipy_tools.py to C:\bin\bin/SU2/opt; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/opt/__init__.py to C:\bin\bin/SU2/opt; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/run/adjoint.py to C:\bin\bin/SU2/run; Installing C:\Users\Danie\Documents\SU2\SU2_PY\S,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1376:5698,Install,Installing,5698,https://su2code.github.io,https://github.com/su2code/SU2/issues/1376,1,['Install'],['Installing']
Deployability,"my late reply and thanks Heather for opening this important discussion.; I fully agree with you and OBJECTIVE_FUNCTION and OPT_OBJECTIVE cause confusion. As far I see the problem, if we focus on a typical users point of view, I think that OPT_OBJECTIVE and OPT_CONSTRAINT must be in the config file and as close as possible. They are the key to define an optimization problem (one of the key features of SU2). On the other hand, as you suggested we need to add some flexibility. It would be interesting to to able to define a multi-objective like; OPT_OBJECTIVE= DRAG \* DRAG_WEIGHT; LIFT^2 \* LIFT^2_WEIGHT;. As Tim pointed out OBJECTIVE_FUNCTION is important because is what we use to play and develop the adjoint capability but, from the users point of view it is not as interesting as the OPT_OBJECTIVE. If everything works ok, OPT_OBJECTIVE should be enough for most of the SU2 users. How many typical users are interested in solving and adjoint problem for the sake of solving of an adjoint problem?. However OBJECTIVE_FUNCTION is not a good name, from the point of view of the continuous adjoint, I would feel comfortable if we change it to ADJ_BND_CONDITION. That probably doesn't work for the discrete adjoint, isn't it? Tim, What key word would work for the Discrete Adjoint? We need something that reflect the effect, in mathematical terms, of the objective function in the AD adjoint problem. Finally, before adding any capability we should ask ourself how general is going to be and if it going to be useful for the most part of the SU2 users community (in my opinion, external aerodynamics). If the new objective function is only useful for us, or a research project, then I think we need to create some kind of custom objective function, (e.g. CUSTOM_OBJFUNC at the same level than DRAG, LIFT, etc) that we can describe with other set of parameters. Thanks,; Francisco. —; Reply to this email directly or view it on GitHubhttps://github.com/su2code/SU2/pull/241#issuecomment-187255862.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/241#issuecomment-187268164:1561,continuous,continuous,1561,https://su2code.github.io,https://github.com/su2code/SU2/pull/241#issuecomment-187268164,1,['continuous'],['continuous']
Deployability,"n Windows runners by upgrading <code>@​actions/github</code> dependency by <a href=""https://github.com/BrettDong""><code>@​BrettDong</code></a> in <a href=""https://redirect.github.com/actions/checkout/pull/1246"">actions/checkout#1246</a></li>; </ul>; <h2>New Contributors</h2>; <ul>; <li><a href=""https://github.com/BrettDong""><code>@​BrettDong</code></a> made their first contribution in <a href=""https://redirect.github.com/actions/checkout/pull/1246"">actions/checkout#1246</a></li>; </ul>; <!-- raw HTML omitted -->; </blockquote>; <p>... (truncated)</p>; </details>; <details>; <summary>Changelog</summary>; <p><em>Sourced from <a href=""https://github.com/actions/checkout/blob/main/CHANGELOG.md"">actions/checkout's changelog</a>.</em></p>; <blockquote>; <h1>Changelog</h1>; <h2>v4.0.0</h2>; <ul>; <li><a href=""https://redirect.github.com/actions/checkout/pull/1067"">Support fetching without the --progress option</a></li>; <li><a href=""https://redirect.github.com/actions/checkout/pull/1436"">Update to node20</a></li>; </ul>; <h2>v3.6.0</h2>; <ul>; <li><a href=""https://redirect.github.com/actions/checkout/pull/1377"">Fix: Mark test scripts with Bash'isms to be run via Bash</a></li>; <li><a href=""https://redirect.github.com/actions/checkout/pull/579"">Add option to fetch tags even if fetch-depth &gt; 0</a></li>; </ul>; <h2>v3.5.3</h2>; <ul>; <li><a href=""https://redirect.github.com/actions/checkout/pull/1196"">Fix: Checkout fail in self-hosted runners when faulty submodule are checked-in</a></li>; <li><a href=""https://redirect.github.com/actions/checkout/pull/1287"">Fix typos found by codespell</a></li>; <li><a href=""https://redirect.github.com/actions/checkout/pull/1369"">Add support for sparse checkouts</a></li>; </ul>; <h2>v3.5.2</h2>; <ul>; <li><a href=""https://redirect.github.com/actions/checkout/pull/1289"">Fix api endpoint for GHES</a></li>; </ul>; <h2>v3.5.1</h2>; <ul>; <li><a href=""https://redirect.github.com/actions/checkout/pull/1246"">Fix slow checkout on Windows</a></li>; <",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2126:6368,Update,Update,6368,https://su2code.github.io,https://github.com/su2code/SU2/pull/2126,2,['Update'],['Update']
Deployability,n.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2_CFD.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/__init__.py to C:\bin\bin/SU2; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/eval/design.py to C:\bin\bin/SU2/eval; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/eval/functions.py to C:\bin\bin/SU2/eval; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/eval/gradients.py to C:\bin\bin/SU2/eval; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/eval/__init__.py to C:\bin\bin/SU2/eval; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/io/config.py to C:\bin\bin/SU2/io; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/io/config_options.py to C:\bin\bin/SU2/io; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/io/data.py to C:\bin\bin/SU2/io; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/io/filelock.py to C:\bin\bin/SU2/io; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/io/redirect.py to C:\bin\bin/SU2/io; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/io/state.py to C:\bin\bin/SU2/io; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/io/tools.py to C:\bin\bin/SU2/io; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/io/historyMap.py to C:\bin\bin/SU2/io; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/io/__init__.py to C:\bin\bin/SU2/io; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/opt/project.py to C:\bin\bin/SU2/opt; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/opt/scipy_tools.py to C:\bin\bin/SU2/opt; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/opt/__init__.py to C:\bin\bin/SU2/opt; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/run/adjoint.py to C:\bin\bin/SU2/run; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/run/deform.py to C:\bin\bin/SU2/run; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/run/direct.py to C:\bin\bin/SU2/run; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/run/interface.py to C:\bin\bin/SU2/run; Installing C:\Users\Danie\Documents\SU2\SU,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1376:5958,Install,Installing,5958,https://su2code.github.io,https://github.com/su2code/SU2/issues/1376,1,['Install'],['Installing']
Deployability,n\bin; Installing SU2_DOT/src\SU2_DOT.exe to C:\bin\bin; Installing SU2_DOT/src\SU2_DOT_AD.exe to C:\bin\bin; Installing SU2_DEF/src\SU2_DEF.exe to C:\bin\bin; Installing SU2_GEO/src\SU2_GEO.exe to C:\bin\bin; Installing SU2_SOL/src\SU2_SOL.exe to C:\bin\bin; Installing SU2_PY/pySU2\_pysu2.dll to C:\bin\bin; Installing SU2_PY/pySU2\_pysu2.dll.a to C:\bin\lib; Installing SU2_PY/pySU2\_pysu2ad.dll to C:\bin\bin; Installing SU2_PY/pySU2\_pysu2ad.dll.a to C:\bin\lib; Installing C:\Users\Danie\Documents\SU2\SU2_PY\continuous_adjoint.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\compute_uncertainty.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\finite_differences.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\mesh_deformation.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\parallel_computation.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\parallel_computation_fsi.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\package_tests.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\shape_optimization.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\merge_solution.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\set_ffd_design_var.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\compute_polar.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\compute_multipoint.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\discrete_adjoint.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\direct_differentiation.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\fsi_computation.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2_CFD.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/__init__.py to C:\bin\bin/SU2; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/eval/design.py to C:\bin\bin/SU2/eval; Installing C:\Users\Danie\Documents\,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1376:4254,Install,Installing,4254,https://su2code.github.io,https://github.com/su2code/SU2/issues/1376,1,['Install'],['Installing']
Deployability,"nd 1024 [-Wformat-overflow=]; sprintf(OutMet, ""%s.solb"", mshopt->OutNam);; ^~~~~; ./sources/Python3.7/convert.c:114:3: note: 'sprintf' output between 6 and 1029 bytes into a destination of size 1024; sprintf(OutMet, ""%s.solb"", mshopt->OutNam);; ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~; ./sources/Python3.7/convert.c: In function 'ConvertSU2SolToGMF':; ./sources/Python3.7/convert.c:143:24: warning: '.solb' directive writing 5 bytes into a region of size between 1 and 1024 [-Wformat-overflow=]; sprintf(OutSol, ""%s.solb"", mshopt->OutNam);; ^~~~~; ./sources/Python3.7/convert.c:143:5: note: 'sprintf' output between 6 and 1029 bytes into a destination of size 1024; sprintf(OutSol, ""%s.solb"", mshopt->OutNam);; ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~; writing build\temp.win-amd64-3.8\Release\.\sources\python3.7\_amgio.cp38-win_amd64.def; creating build\lib.win-amd64-3.8; C:\Program Files\mingw-w64\x86_64-8.1.0-posix-seh-rt_v6-rev0\mingw64\bin\gcc.exe -shared -s build\temp.win-amd64-3.8\Release\.\sources\python3.7\amgio_py.o build\temp.win-amd64-3.8\Release\.\sources\python3.7\mesh.o build\temp.win-amd64-3.8\Release\.\sources\python3.7\gmfio.o build\temp.win-amd64-3.8\Release\.\sources\python3.7\su2io.o build\temp.win-amd64-3.8\Release\.\sources\python3.7\option.o build\temp.win-amd64-3.8\Release\.\sources\python3.7\libmesh6.o build\temp.win-amd64-3.8\Release\.\sources\python3.7\amgio_py_wrap.o build\temp.win-amd64-3.8\Release\.\sources\python3.7\convert.o build\temp.win-amd64-3.8\Release\.\sources\python3.7\_amgio.cp38-win_amd64.def -LC:\Users\Danie\Anaconda3\envs\vsptools\libs -LC:\Users\Danie\Anaconda3\envs\vsptools\PCbuild\amd64 -lpython38 -lmsvcr140 -o build\lib.win-amd64-3.8\_amgio.cp38-win_amd64.pyd; C:/Program Files/mingw-w64/x86_64-8.1.0-posix-seh-rt_v6-rev0/mingw64/bin/../lib/gcc/x86_64-w64-mingw32/8.1.0/../../../../x86_64-w64-mingw32/bin/ld.exe: cannot find -lmsvcr140; collect2.exe: error: ld returned 1 exit status; error: command 'C:\\Program Files\\mingw-w64\",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1379:9532,Release,Release,9532,https://su2code.github.io,https://github.com/su2code/SU2/issues/1379,1,['Release'],['Release']
Deployability,"nd swirl distributions across the propeller disc and is coupled to the SU2 solver. The blade loading and changes to the flow-field are calculated recursively. Propeller geometry details, airfoil characteristics, propeller speed and set blade angle are required as inputs. Using the thrust and power along the blade from BEM, and following the procedure of VLAD, axial and tangential velocities are imposed at the interface. BEM method is verified against the experimental results [Veldhuis, 2005] and found to be performing well. ## Related Work. This work was presented at; SU2 Conference 2022, 5--7 Sept 2022,; Propeller blade load calculation for actuator disk using blade element method.; https://www.youtube.com/watch?v=otM_Lz2MV4U. and published in; International Journal of Aeronautical and Space Sciences; https://doi.org/10.1007/s42405-023-00593-5. The grid file for the test case is in the new branch on the fork at; https://github.com/josy-nal/su2codeTestCases/tree/feature-actuatordisk-bem. This implementation is under active development seeking reviews, instructions and suggestions to meet SU2 code standards. References:. Saetta E, Russo L, Tgnaccini R (2020); Implementation and validation of a new actuator disk model in SU2.; SU2 conference 2020, virtual event. Veldhuis L (2005) Propeller-wing aerodynamic interface,; Ph.D. thesis, Delft University of Technology, Delft, Netherlands. ## PR Checklist. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [x] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [x] I used the pre-commit hook to prevent dirty commits and used `pre-commit run --all` to format old commits.; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2142:2638,update,updated,2638,https://su2code.github.io,https://github.com/su2code/SU2/pull/2142,1,['update'],['updated']
Deployability,"ndabot.com/actions/cache/issues/33"">actions/cache#33</a>)</li>; <li>Increased performance and improved cache sizes using <code>zstd</code> for compression for Linux and macOS runners (<a href=""https://github-redirect.dependabot.com/actions/cache/issues/184"">actions/cache#184</a>)</li>; <li>Allowed caching for all events with a ref (<a href=""https://github-redirect.dependabot.com/actions/cache/issues/63"">actions/cache#63</a>)</li>; <li>Created the <a href=""https://github.com/actions/toolkit/tree/master/packages/cache""><code>@actions/cache</code></a> npm package to allow other actions to utilize caching (<a href=""https://github-redirect.dependabot.com/actions/cache/issues/55"">actions/cache#55</a>)</li>; <li>Added a best-effort step to delete the archive after extraction to reduces storage space (<a href=""https://github-redirect.dependabot.com/actions/cache/pull/209"">actions/cache#209</a>)</li>; </ul>; <h2>v1.2.0</h2>; <h1>Bug Fixes</h1>; <ul>; <li>Fall back to GNU tar on older versions of Windows that do not have BSD tar installed (<a href=""https://github-redirect.dependabot.com/actions/cache/issues/252"">#252</a>)</li>; <li>Fixed chunk upload retry logic (<a href=""https://github-redirect.dependabot.com/actions/cache/issues/305"">#305</a>)</li>; </ul>; <!-- raw HTML omitted -->; </blockquote>; <p>... (truncated)</p>; </details>; <details>; <summary>Changelog</summary>; <p><em>Sourced from <a href=""https://github.com/actions/cache/blob/main/RELEASES.md"">actions/cache's changelog</a>.</em></p>; <blockquote>; <h1>Releases</h1>; <h3>3.0.0</h3>; <ul>; <li>Updated minimum runner version support from node 12 -&gt; node 16</li>; </ul>; <h3>3.0.1</h3>; <ul>; <li>Added support for caching from GHES 3.5.</li>; <li>Fixed download issue for files &gt; 2GB during restore.</li>; </ul>; <h3>3.0.2</h3>; <ul>; <li>Added support for dynamic cache size cap on GHES.</li>; </ul>; <h3>3.0.3</h3>; <ul>; <li>Fixed avoiding empty cache save when no files are available for caching. (<a href=""https",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1755:4285,install,installed,4285,https://su2code.github.io,https://github.com/su2code/SU2/pull/1755,1,['install'],['installed']
Deployability,"ne BC; - Working on Engine BCs; - Added Supersonic Outlet BC; - Minor change; - Merge remote-tracking branch 'upstream/develop' into develop; - adjoints, solid boundary, doxygen in config; - continued fixing; - re-added adjoint bc mods; - re-adding avg outlet pressure (static pressure adjoint); - re-adding avg outlet pressure (static pressure adjoint); - Merge branch 'temp' of https://github.com/hlkline/SU2 into temp; - continued fixing; - average total pressure and fixes to avg outlet pressure; - adding stagnation pressure output to SU2_DOT; - Merge pull request #146 from hlkline/temp; - Updated Entropy fix (now it is active).; - Another change in BC_Engine_Exhaust; - Updated CGNS in parallel; - Added runtime file; - Small typo; - Adjustment of the Entropy fix coefficient; - Bug in SU2_GEO; - Debug version with print statements.; - Updated release 3.2.7.1; - Small change; - Updated config file; - Code update; - MPI Status and Request fix.; - Another MPI Status/Request fix.; - Actuator disk update.; - Small update; - Initial implementation of pyramids and prisms for Tecplot binary.; - Small fix for Tecplot binaries. Closes #56. Closes #57.; - Removed extra allocation related to markers during partitioning.; - Non-working version; - Small update; - Updated memory deallocation.; - Merge branch 'feature_MarkerMax' into develop; - Time and date in the header.; - Small fix to the latest commit.; - Simplification of entropy correction; - Critical stability improvement.; - Minor release 3.2.7.2; - Fixing issues to run with the latest intel compiler; - Fix for Tecplot binary solutions for unsteady flows. Fixes #150.; - Now SU2 should work with the latest version of the Intel compiler.; - Merge branch 'develop' of https://github.com/su2code/SU2 into develop; - Working on the O3 stuff; - Small change.; - Add another check to improve stability.; - Collection of improvements.; - Updated actuator disk; - Merge branch 'develop' of https://github.com/su2code/SU2 into develop; - Pre",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/174#issuecomment-101443812:4216,update,update,4216,https://su2code.github.io,https://github.com/su2code/SU2/pull/174#issuecomment-101443812,2,['update'],['update']
Deployability,"nectivity.second_vec(iEdge);. FltVec d_ij[MAXNDIM];; for(size_t iDim=0; iDim<nDim; ++iDim); d_ij[iDim] = (coords.getVec(jPoint,iDim)-coords.getVec(iPoint,iDim))*0.5;. FltVec phiL[MAXNVAR], phiR[MAXNVAR], flux[MAXNVAR],; blk_i[MAXNVAR*MAXNVAR],; blk_j[MAXNVAR*MAXNVAR];. for(size_t iVar=0; iVar<nVar; ++iVar); {; // Reconstruction goes here. flux[iVar] = (phiL[iVar]+phiR[iVar])*0.5;; }. // some silly way to make the Jacobians depend on the reconstruction; for(size_t iVar=0; iVar<nVar; ++iVar); for(size_t jVar=0; jVar<nVar; ++jVar); blk_j[iVar*nVar+jVar] = (phiL[iVar]*phiR[jVar]-phiL[jVar]*phiR[iVar])*0.5;. // the matrix-matrix multiplications; for(size_t i=0; i<WORKITERS; ++i) {; // blk_i = blk_j * blk_j; for(size_t k=0; k<nVar*nVar; ++k) blk_j[k] = blk_i[k];; }. // something akin to a dissipation term; for(size_t iVar=0; iVar<nVar; ++iVar) {; FltVec sum = flux[iVar];; for(size_t kVar=0; kVar<nVar; ++kVar); sum += blk_j[iVar*nVar+kVar]*(phiL[kVar]-phiR[kVar])*0.5;. // residuals for iPoint and jPoint updated here. matrix.updateBlocks_v(color, iEdge, iPoint, jPoint, blk_i, blk_j);; }; ++color;; }; }; ```; The more WORKITERS we have the better the vectorized code is going to look, I used a conservative number based on:; For the Roe scheme 4 matrices are generated (Jacobian i, Jacobian j, P tensor, P^-1 tensor), each coefficient of those matrices requires a reasonable number of floating point ops, and two of those matrices are indeed multiplied by each other.; So lets say 5 matrix-matrix multiplications are representative, this should be a conservative estimate as I am not considering the eventual fusion of convective and diffusive discretizations. **The vectorized code is 1.5 times faster.**; This is a fair 1.5 as the code is running on 4 fast cores (parallel via colouring for the reasons I explained previously) and 2 memory channels (scalar code can eventually saturate the memory bandwidth too, but it would take an unreasonable ratio of cores to channels to do so).; Furth",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/789#issuecomment-539177957:2242,update,updated,2242,https://su2code.github.io,https://github.com/su2code/SU2/issues/789#issuecomment-539177957,2,['update'],['updated']
Deployability,"ned on different markers.; > ; > You can view, comment on, or merge this pull request online at:; > ; > https://github.com/su2code/SU2/pull/237 https://github.com/su2code/SU2/pull/237; > Commit Summary; > ; > config options updated to be compatible with multiple objectives - mdo not yet implemented; > python tools; > python adjusted for multiple objectives: will always run 1st objective only with continuous adjoint, but will run separate continuous adjoint evaluations within optimization; > continuous adjoint evaluates the requested objectives; > fixing some errors; > File Changes; > ; > M Common/include/config_structure.hpp https://github.com/su2code/SU2/pull/237/files#diff-0 (20); > M Common/include/config_structure.inl https://github.com/su2code/SU2/pull/237/files#diff-1 (6); > M Common/src/config_structure.cpp https://github.com/su2code/SU2/pull/237/files#diff-2 (90); > M SU2_PY/SU2/eval/design.py https://github.com/su2code/SU2/pull/237/files#diff-3 (8); > M SU2_PY/SU2/eval/functions.py https://github.com/su2code/SU2/pull/237/files#diff-4 (14); > M SU2_PY/SU2/eval/gradients.py https://github.com/su2code/SU2/pull/237/files#diff-5 (4); > M SU2_PY/SU2/io/config.py https://github.com/su2code/SU2/pull/237/files#diff-6 (21); > M SU2_PY/SU2/io/tools.py https://github.com/su2code/SU2/pull/237/files#diff-7 (21); > M SU2_PY/SU2/opt/project.py https://github.com/su2code/SU2/pull/237/files#diff-8 (2); > M SU2_PY/SU2/opt/scipy_tools.py https://github.com/su2code/SU2/pull/237/files#diff-9 (24); > M SU2_PY/SU2/run/projection.py https://github.com/su2code/SU2/pull/237/files#diff-10 (4); > M SU2_PY/continuous_adjoint.py https://github.com/su2code/SU2/pull/237/files#diff-11 (22); > Patch Links:; > ; > https://github.com/su2code/SU2/pull/237.patch https://github.com/su2code/SU2/pull/237.patch; > https://github.com/su2code/SU2/pull/237.diff https://github.com/su2code/SU2/pull/237.diff; > —; > Reply to this email directly or view it on GitHub https://github.com/su2code/SU2/pull/237.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/237#issuecomment-182175757:2792,Patch,Patch,2792,https://su2code.github.io,https://github.com/su2code/SU2/pull/237#issuecomment-182175757,3,"['Patch', 'patch']","['Patch', 'patch']"
Deployability,"ng (<a href=""https://github-redirect.dependabot.com/actions/cache/issues/55"">actions/cache#55</a>)</li>; <li>Added a best-effort step to delete the archive after extraction to reduces storage space (<a href=""https://github-redirect.dependabot.com/actions/cache/pull/209"">actions/cache#209</a>)</li>; </ul>; <h2>v1.2.0</h2>; <h1>Bug Fixes</h1>; <ul>; <li>Fall back to GNU tar on older versions of Windows that do not have BSD tar installed (<a href=""https://github-redirect.dependabot.com/actions/cache/issues/252"">#252</a>)</li>; <li>Fixed chunk upload retry logic (<a href=""https://github-redirect.dependabot.com/actions/cache/issues/305"">#305</a>)</li>; </ul>; <!-- raw HTML omitted -->; </blockquote>; <p>... (truncated)</p>; </details>; <details>; <summary>Changelog</summary>; <p><em>Sourced from <a href=""https://github.com/actions/cache/blob/main/RELEASES.md"">actions/cache's changelog</a>.</em></p>; <blockquote>; <h1>Releases</h1>; <h3>3.0.0</h3>; <ul>; <li>Updated minimum runner version support from node 12 -&gt; node 16</li>; </ul>; <h3>3.0.1</h3>; <ul>; <li>Added support for caching from GHES 3.5.</li>; <li>Fixed download issue for files &gt; 2GB during restore.</li>; </ul>; <h3>3.0.2</h3>; <ul>; <li>Added support for dynamic cache size cap on GHES.</li>; </ul>; <h3>3.0.3</h3>; <ul>; <li>Fixed avoiding empty cache save when no files are available for caching. (<a href=""https://github-redirect.dependabot.com/actions/cache/issues/624"">issue</a>)</li>; </ul>; <h3>3.0.4</h3>; <ul>; <li>Fixed tar creation error while trying to create tar with path as <code>~/</code> home folder on <code>ubuntu-latest</code>. (<a href=""https://github-redirect.dependabot.com/actions/cache/issues/689"">issue</a>)</li>; </ul>; <h3>3.0.5</h3>; <ul>; <li>Removed error handling by consuming actions/cache 3.0 toolkit, Now cache server error handling will be done by toolkit. (<a href=""https://github-redirect.dependabot.com/actions/cache/pull/834"">PR</a>)</li>; </ul>; <h3>3.0.6</h3>; <ul>; <li>Fixed <",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1755:4823,Update,Updated,4823,https://su2code.github.io,https://github.com/su2code/SU2/pull/1755,1,['Update'],['Updated']
Deployability,"ng restarts for prescribed massflow in streamwise periodic simulations (primal and adjoint). The massflow is achieved by dialing a pressure drop which is written and read to/from the `flow.meta` file. That file was used mainly for fixed CL stuff as far as I am aware of. The story is not done though really with this one change. There is still the restart-should-contain-everything-in-the-first-iteration-for-the-adjoint-taping issue which is currently not the case ... and not super straightforward to solve -> see https://github.com/su2code/SU2/commit/c11354115757d673a771e04562e6920024e013a2 description for more info. (EDIT: I will not tackle the massflow adjoint part in this PR, as with the PerSurf output it contains enough stuff which I like to have merged); - I added a `weight` to heat-solid zone OF's; - when `pressure_drop` is used, the first two entries of `MARKER_ANALYZE` are used as out-inlet but more than two markers are allowed. This comes in handy with `FLOW_COEFF_SURF` imo; - Adding per surface output for multizone cases. Was not working before in the way that `_SURF[0]` fields were reported to be ignored. A regression test is updated for that.; - Little fix to the regression system where Testcase.py had unsuitable default values such that failing reg tests were reported passing. So I will continue fiddling a little bit with massflow restarts but i already successfully optimized with that setup so it is not completely useless. ## Related Work; #773 . ## PR Checklist. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.; - [x] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1527:1210,update,updated,1210,https://su2code.github.io,https://github.com/su2code/SU2/pull/1527,2,['update'],['updated']
Deployability,"ng with Codi; * Enable modules:; * SU2_ENABLE_CGNS:; * SU2_CGNS_CPPFLAGS: flags to pass when compiling CGNS; * SU2_ENABLE_CODI: no|forward|reverse; * SU2_CODI_CPPFLAGS: flags to pass to SU2 modules when compiling with Codi; * SU2_ENABLE_METIS: ON|OFF; * SU2_METIS_CPPFLAGS: flags to pass when compiling Metis; * SU2_ENABLE_MKL: ON|OFF; * SU2_ENABLE_MPI: ON|OFF; * SU2_ENABLE_MUTATIONPP: ON|OFF; * SU2_ENABLE_PARMETIS: ON|OFF, only available when SU2_ENABLE_MPI is ON; * SU2_PARMETIS_CPPFLAGS: flags to pass when compiling Parmetis; * SU2_ENABLE_TECIO: ON|OFF; * SU2_TECIO_CPPFLAGS: flags to pass when compiling Tecio and TecioMPI; * SU2_TECIOMPI_CPPFLAGS: flags to pass when compiling TecioMPI, requires SU2_ENABLE_MPI. There is an additional variable that is recognized by CMake scripts - DEBUG, turning it ON enables additional STATUS messages, mainly to check that correct include directories, compile definitions and linked libraries were set up correctly. The remaining options like install location and compilers are handled by CMake. Tested this on Ubuntu with CMake 3.15.5 and everything except pySU2ad wrapper compiles. Haven't tested on earlier CMake versions so there might be bugs with them but they should be easy to resolve if any. Related Work. Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any. PR Checklist. Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution. * I am submitting my contribution to the develop branch.; * My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; * My contribution is commented and consistent with SU2 style.; * I have added a test case that demonstrates my contribution, if necessary. _________________________",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/814#issuecomment-552242380:3098,install,install,3098,https://su2code.github.io,https://github.com/su2code/SU2/pull/814#issuecomment-552242380,2,['install'],['install']
Deployability,"ngw-64 terminal on windows as suggested in the SUAVE build instructions. . From another thread, it was suggested to go into SU2\externals\AMGIO\su2io and try to manually build the _amgio; When I run the command 'python setup.py build_ext -c mingw32' I get the following output. . `running build_ext; building '_amgio' extension; swigging ./sources/Python3.7/amgio_py.i to ./sources/Python3.7/amgio_py_wrap.c; C:\Softwares\swigwin-4.0.2\swig.exe -python -o ./sources/Python3.7/amgio_py_wrap.c ./sources/Python3.7/amgio_py.i; creating build; creating build\temp.win-amd64-3.8; creating build\temp.win-amd64-3.8\Release; creating build\temp.win-amd64-3.8\Release\sources; creating build\temp.win-amd64-3.8\Release\sources\python3.7; C:\Program Files\mingw-w64\x86_64-8.1.0-posix-seh-rt_v6-rev0\mingw64\bin\gcc.exe -mdll -O -Wall -DMS_WIN64 -IC:\Users\Danie\Anaconda3\envs\vsptools\include -IC:\Users\Danie\Anaconda3\envs\vsptools\include -c ./sources/Python3.7/amgio_py.c -o build\temp.win-amd64-3.8\Release\.\sources\python3.7\amgio_py.o -std=c99 -Wno-unused-variable -Wno-unused-result -O3; ./sources/Python3.7/amgio_py.c: In function 'py_WriteMeshAndSol':; ./sources/Python3.7/amgio_py.c:628:28: warning: '.csv' directive writing 4 bytes into a region of size between 1 and 1024 [-Wformat-overflow=]; sprintf(OutSol, ""%s.csv"", BasNamSol);; ^~~~; ./sources/Python3.7/amgio_py.c:628:9: note: 'sprintf' output between 5 and 1028 bytes into a destination of size 1024; sprintf(OutSol, ""%s.csv"", BasNamSol);; ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~; ./sources/Python3.7/amgio_py.c:624:28: warning: '.dat' directive writing 4 bytes into a region of size between 1 and 1024 [-Wformat-overflow=]; sprintf(OutSol, ""%s.dat"", BasNamSol);; ^~~~; ./sources/Python3.7/amgio_py.c:624:9: note: 'sprintf' output between 5 and 1028 bytes into a destination of size 1024; sprintf(OutSol, ""%s.dat"", BasNamSol);; ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~; ./sources/Python3.7/amgio_py.c:614:26: warning: '.solb' directive writing ",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1379:1023,Release,Release,1023,https://su2code.github.io,https://github.com/su2code/SU2/issues/1379,1,['Release'],['Release']
Deployability,"niconda3/envs/temp_su5/bin/SU2/__init__.py"", line 14, in <module>; > from SU2 import amginria; > File ""/dfs/user/takashi279/miniconda3/envs/temp_su5/bin/SU2/amginria/__init__.py"", line 4, in <module>; > from .interface import *; > File ""/dfs/user/takashi279/miniconda3/envs/temp_su5/bin/SU2/amginria/interface.py"", line 41, in <module>; > import _amgio as amgio; > ModuleNotFoundError: No module named '_amgio'; > ```. and followed the instructions provided as in [https://github.com/su2code/SU2/issues/948#issuecomment-619334494](url):. > The _amgio extension should be built by default. I haven't had any issues on any of the machines I've built on, so I appreciate the feedback.; > ; > Just curious, are you running with python >=3.7? The shebang in all the SU2 python scripts; > ; > ```; > #!/usr/bin/env python; > ```; > ; > uses whatever python is set to in your environment variables, but pyamg/_amgio will only build/run with python >=3.7. Could you also check if the _amgio extension was installed in your site-packages (probably located in ~/.local/lib/python3.x/site-packages)?; > ; > If it didn't build/install, you could go into extensions/AMGIO/su2io and run; > ; > ```; > python3 setup.py build_ext && python3 setup.py install; > ```; > ; > If it did build/install, try the command; > ; > ```; > python3 $SU2_RUN/mesh_adaptation_amg.py -f invCyl.cfg -n 6; > ```. After doing `python3 setup.py build_ext && python3 setup.py install`, I encountered the following error:. > ```; > (temp_su5) takashi279@turing1:/dfs/user/takashi279/plasma/design/multiscale_adap3/SU2/externals/AMGIO/su2io$ python3 setup.py build_ext && python3 setup.py install; > running build_ext; > running install; > /dfs/user/takashi279/miniconda3/envs/temp_su5/lib/python3.7/site-packages/setuptools/command/install.py:37: SetuptoolsDeprecationWarning: setup.py install is deprecated. Use build and pip and other standards-based tools.; > setuptools.SetuptoolsDeprecationWarning,; > /dfs/user/takashi279/miniconda3/",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1699:1454,install,installed,1454,https://su2code.github.io,https://github.com/su2code/SU2/issues/1699,1,['install'],['installed']
Deployability,nie\Documents\SU2\build install' to compile and install SU2. Build targets in project: 17. Found ninja.exe-1.9.0 at C:\Users\Danie\Documents\SU2\ninja.exe`. **526 files install successfully.** . `WARNING: the currently checked out submodule commit in C:\Users\Danie\Documents\SU2\externals\opdi does not match the SHA-1 found in the index.; Use 'git submodule update --init C:\Users\Danie\Documents\SU2\externals\opdi' to reset the module if necessary.; SHA-1 tag stored in index does not match SHA tag stored in this script.; Installing SU2_CFD/src\SU2_CFD.exe to C:\bin\bin; Installing SU2_CFD/src\SU2_CFD_AD.exe to C:\bin\bin; Installing SU2_CFD/src\SU2_CFD_DIRECTDIFF.exe to C:\bin\bin; Installing SU2_DOT/src\SU2_DOT.exe to C:\bin\bin; Installing SU2_DOT/src\SU2_DOT_AD.exe to C:\bin\bin; Installing SU2_DEF/src\SU2_DEF.exe to C:\bin\bin; Installing SU2_GEO/src\SU2_GEO.exe to C:\bin\bin; Installing SU2_SOL/src\SU2_SOL.exe to C:\bin\bin; Installing SU2_PY/pySU2\_pysu2.dll to C:\bin\bin; Installing SU2_PY/pySU2\_pysu2.dll.a to C:\bin\lib; Installing SU2_PY/pySU2\_pysu2ad.dll to C:\bin\bin; Installing SU2_PY/pySU2\_pysu2ad.dll.a to C:\bin\lib; Installing C:\Users\Danie\Documents\SU2\SU2_PY\continuous_adjoint.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\compute_uncertainty.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\finite_differences.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\mesh_deformation.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\parallel_computation.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\parallel_computation_fsi.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\package_tests.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\shape_optimization.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\merge_solution.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\set_ffd_design_var.py to C:\bin\bin; Installing,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1376:3585,Install,Installing,3585,https://su2code.github.io,https://github.com/su2code/SU2/issues/1376,1,['Install'],['Installing']
Deployability,ninja gets built even when it's already installed,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/911:40,install,installed,40,https://su2code.github.io,https://github.com/su2code/SU2/issues/911,1,['install'],['installed']
Deployability,"nja.exe -C C:\Users\qiang_zhang\Desktop\TestCases\SU2\build install; ninja: Entering directory `C:\Users\qiang_zhang\Desktop\TestCases\SU2\build'; [1/767] Linking target externals/cgns/hdf5/H5detect.exe; FAILED: externals/cgns/hdf5/H5detect.exe; ""gcc"" -o externals/cgns/hdf5/H5detect.exe externals/cgns/hdf5/H5detect.exe.p/H5detect.c.obj ""-Wl,--allow-shlib-undefined"" ""-Wl,-O1"" ""D:/Anaconda/Library/lib/z.lib"" ""-Wl,--start-group"" ""-lC:\Program Files (x86)\Microsoft SDKs\MPI\Lib\x64\msmpi"" ""-Wl,--subsystem,console"" ""-lkernel32"" ""-luser32"" ""-lgdi32"" ""-lwinspool"" ""-lshell32"" ""-lole32"" ""-loleaut32"" ""-luuid"" ""-lcomdlg32"" ""-ladvapi32"" ""-Wl,--end-group""; D:/mingw64/bin/../lib/gcc/x86_64-w64-mingw32/8.1.0/../../../../x86_64-w64-mingw32/bin/ld.exe: cannot find -lC:\Program Files (x86)\Microsoft SDKs\MPI\Lib\x64\msmpi; collect2.exe: error: ld returned 1 exit status; [10/767] Compiling C object externals/cgns/hdf5/libsu2hdf5.a.p/H5Pint.c.obj; ninja: build stopped: subcommand failed.; ```. **To Reproduce**. I can sucess configure su2:; ![image](https://user-images.githubusercontent.com/29271051/159446256-dc866db4-9199-42d0-86b4-c38839753dd3.png); ![image](https://user-images.githubusercontent.com/29271051/159446307-354518f6-3382-401b-80c9-ac9e72f3d224.png). Then, I want to compile it by:; ```; ./ninja.exe -C C:\Users\qiang_zhang\Desktop\TestCases\SU2\build install; ```; And the bug is reported:. ```; cannot find -lC:\Program Files (x86)\Microsoft SDKs\MPI\Lib\x64\msmpi; ```; However, I have install the `msmpisdk.msi` and `msmpisetup.exe`. . ![image](https://user-images.githubusercontent.com/29271051/159446649-f606a381-0896-461c-bd09-9e0b9243ce2e.png). **Desktop (please complete the following information):**; - OS: win10; - C++ compiler and version: as the recommanded `gcc version 8.1.0 (x86_64-posix-seh-rev0, Built by MinGW-W64 project)`; - MPI implementation and version: as the recommanded v10.1.2; - SU2 Version: Project version: 7.3.0 ""Blackbird"". Any suggestion is appreciated~~~",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1570:1428,install,install,1428,https://su2code.github.io,https://github.com/su2code/SU2/issues/1570,2,['install'],['install']
Deployability,"nning)!. With LGTM fully integrated into code scanning, we are focused on improving CodeQL within the native GitHub code scanning experience. In order to take advantage of current and future improvements to our analysis capabilities, we suggest you enable code scanning on your repository. Please take a look at our [blog post for more information](https://github.blog/2022-08-15-the-next-step-for-lgtm-com-github-code-scanning/). This pull request enables code scanning by adding an auto-generated [`codeql.yml` workflow file for GitHub Actions](https://docs.github.com/en/code-security/code-scanning/automatically-scanning-your-code-for-vulnerabilities-and-errors/setting-up-code-scanning-for-a-repository#setting-up-code-scanning-manually) to your repository — take a look! We tested it before opening this pull request, so all should be working :heavy_check_mark:. In fact, you might already have seen some alerts appear on this pull request!. Where needed and if possible, we’ve adjusted the configuration to the needs of your particular repository. But of course, you should feel free to tweak it further! Check [this page](https://docs.github.com/en/code-security/code-scanning/automatically-scanning-your-code-for-vulnerabilities-and-errors/configuring-code-scanning#editing-a-code-scanning-workflow) for detailed documentation. Questions? Check out the FAQ below!. ### FAQ; <details>; <summary>Click here to expand the FAQ section</summary>. #### How often will the code scanning analysis run?; By default, code scanning will trigger a scan with the CodeQL engine on the following events:; * On every pull request — to flag up potential security problems for you to investigate before merging a PR.; * On every push to your default branch and other protected branches — this keeps the analysis results on your repository’s *Security* tab up to date.; * Once a week at a fixed time — to make sure you benefit from the latest updated security analysis even when no code was committed or PRs wer",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1840:1374,configurat,configuration,1374,https://su2code.github.io,https://github.com/su2code/SU2/pull/1840,1,['configurat'],['configuration']
Deployability,"not only would give the users capabilities needed to perform stability analysis of globally unstable flows with help of SU2 code but would also provide means of accelerating convergence of any unsteady solution. **Describe the solution you'd like**; Implementation of selective frequency damping (SFD) for unsteady simulation as introduced in [1] and boostconv algorithm as proposed by [2]. _SFD_: A method, enabling the computation of steady solutions of the Navier-Stokes equations in globally unstable configurations. Steady-state is achieved by damping the unstable temporal frequencies with addition of a dissipative relaxation term proportional to the high-frequency content of the velocity fluctuations. [1]. _boostconv_: An iterative algorithm, inspired by Krylov-subspace methods, which is able to compute unstable steady states and/or accelerate the convergence to stable configurations. This algorithm is based on the minimization of the residual norm at each iteration step with a projection basis updated at each iteration rather than at periodic restarts like in the classical GMRES method. The algorithm is able to stabilize any dynamical system without increasing the computational time of the original numerical procedure used to solve the governing equations. _Moreover, it can be easily inserted into a pre-existing relaxation (integration) procedure with a call to a single black-box subroutine_. [2]. **Additional context**; I would be happy to collaborate on implementation of said algorithms in SU2 but I do not have much experience with C++ (I mostly use Fortran) and I am not too familiar with SU2 source code so it would be great to work with someone more experienced in those areas. Figure from [2] outlining performance of SFD and boostconv on a cylinder:; <img width=""882"" alt=""Screenshot 2023-05-02 at 22 23 19"" src=""https://user-images.githubusercontent.com/67333831/235789512-63bc5e29-6d09-478f-a9e5-9931b5673bd0.png"">. **Bibliography**; [1] Åkervik, E., Brandt, L., He",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/2022:1827,update,updated,1827,https://su2code.github.io,https://github.com/su2code/SU2/issues/2022,1,['update'],['updated']
Deployability,"nother place (or lab server) and in Github we only had the config files, unfortunately we checked that for some users it was frustrating to download the config files and then go to another place to download the grids. From our practical point of view, the current setting is ideal to run the regression tests. But we are open to any change that benefits the SU2 users/developers community. . Now, it is very easy to download and modify the TestCases (keep in mind that the options in the config files change frequently) but, the price to pay is a large GitHub repository that it is difficult to download if you don’t have a good internet connection. Anyway, I think you are coming to Stanford in one week, it would be great to chat with you. We would love to have you and your group as a SU2 developer/user. Looking forward to meeting you and thanks for testing SU2. Best; Francisco. ## . Dr. Francisco Palacios; Engineering Research Associate at Stanford University; AIAA Senior Member, SIAM Member, and SU2 lead developer; Editorial Board Member for Scientific Report (Nature Publishing Group); Intel Parallel Computing Center. Personal webpage: http://adl.stanford.edu/people/fpalacios.html; SU2 webpage: http://su2.stanford.edu/. Department of Aeronautics and Astronautics; Durand Building. Room 357; Stanford University; Stanford CA 94305; United States. On Feb 3, 2015, at 1:32 PM, Lorena A. Barba notifications@github.com wrote:. > And why is your Test repo so large?; > Perhaps some data files would be happier living elsewhere?; > ; > I'm thinking that if your Tests load large mesh files, for example, these mesh files could be placed in a data repository (like Figshare, Data Dryad, Zenodo), and your configuration files for each test could fetch the data it needs. I would imagine that the input data does not change often (or perhaps ever?) and one permalink and DOI is better suited for data than a version-controlled repo.; > ; > —; > Reply to this email directly or view it on GitHub.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/152#issuecomment-72909446:1996,configurat,configuration,1996,https://su2code.github.io,https://github.com/su2code/SU2/issues/152#issuecomment-72909446,1,['configurat'],['configuration']
Deployability,"nterface and it can create some bugs because one would be able to call methods without knowing what index they are on (it is also not thread safe but that is not a problem now).; So the final piece to recover the interface and shield direct calls to methods without specifying the index is a lightweight wrapper.; ```; class DenseWrapper; {; private:; DenseVariableBase* nodes;; public:; DenseWrapper(int nVar, int nNodes);; ~DenseWrapper();; inline DenseVariableBase* operator[] (int iNode); {; return (*nodes)[iNode];; }; };; ```; With this there is no way of getting to the variables without going through `[]` first.; If we run this code we see that it is only **1.08** and **1.57** times slower for the non-virtual and virtual accessors respectively.; This could be an intermediate solution while the CVariable methods would be migrated to allow passing the index as argument e.g. `field->Get(iNode)` and the code is updated gradually. However, I think the wrapper could provide a way of dealing with the loss of versatility that contiguous storage creates...; There are no free lunches and this performance improvement would come at the cost of losing the ability to have different types of variables in different parts of the domain. I think currently only the elasticity solver uses this to keep ""boundary"" and ""internal"" variables.; If this versatility is really required the wrapper can keep special variables separately, that it would know to be special via a boolean vector and know how to access via a hash table (for example). **Alternatives**; We could make the storage continuous by using a memory pool i.e. allocate outside the class and give the class a pointer to its memory location. This is still not truly contiguous as the pointers the class holds are variables themselves and so they would still be separated (albeit by a smaller huge distance), thus the amount of overhead would still influence performance. Right, that is enough writing... please let me know what you think.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/716:7727,continuous,continuous,7727,https://su2code.github.io,https://github.com/su2code/SU2/issues/716,1,['continuous'],['continuous']
Deployability,"ntly playing around. This new version has the same EOS as NIST. It also comes with a variety of bug fixes and improvements. ## PR Checklist. - [x] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - The code generates quite a few warning when compiling on Debian 12, which uses GCC12 , but none were introduced in this commit. I tested the compilation using an Apptainer/Singularity container.; - [ ] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - I changed the Python code, for which I saw no entry in the style guide.; - [ ] I used the pre-commit hook to prevent dirty commits and used `pre-commit run --all` to format old commits.; - I did not run it as I did not know about it, but I do not think it applies for this (though maybe it does); - [ ] I have added a test case that demonstrates my contribution, if necessary.; - Not necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.; - No documentation related to SU2 should be affected. I do have one question which is not directly related to this PR. I have an Apptainer/Singularity container for SU2 which has most of the bells and whistles. I saw that you have docker containers, but for HPC (and normal computers) Docker [can have a large performance penalty](https://www.youtube.com/watch?v=2FPB74YB-ng). Would you like for me to contribute my Apptainer recipes? . Any and all feedback welcome!. P.S: I did not know that even after updating the hash commit of CoolProp in the meson script, I also had to update the submodule, that is not very intuitive. In this current state, the Meson commit hash has little to no value if it gets changed independently afterwards :); P.P.S: I also did not know that SU2 v8.0 was going to be released this earlier, otherwise I would have tried to get it updated earlier!",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2136:1412,update,updated,1412,https://su2code.github.io,https://github.com/su2code/SU2/pull/2136,4,"['release', 'update']","['released', 'update', 'updated']"
Deployability,"ntra_fanin_progress (); from /opt/mellanox/hcoll/lib/hcoll/hmca_bcol_basesmuma.so; #1 0x00002aaabf587798 in _coll_ml_allreduce (); from /opt/mellanox/hcoll/lib/libhcoll.so.1; #2 0x00002aaabf33038d in mca_coll_hcoll_allreduce (); from /share/hpc_apps/openmpi/3.1.6/gnu/5.3.0/lib/openmpi/mca_coll_hcoll.so; #3 0x00002aaaaad2c20f in PMPI_Allreduce (); from /share/hpc_apps/openmpi/3.1.6/gnu/5.3.0/lib/libmpi.so.40; #4 0x000000000048a83f in CBaseMPIWrapper::Allreduce (sendbuf=0x7fffffff8a20, ; recvbuf=0x1646158 <double CSysVector<double>::dot<CSysVector<double> >(VecExpr::CVecExpr<CSysVector<double>, double> const&) const::dotRes>, count=1, ; datatype=0x2aaaaafb4de0 <ompi_mpi_double>, ; op=0x2aaaaafc9920 <ompi_mpi_op_sum>, ; comm=0x2aaaaafbbc60 <ompi_mpi_comm_world>); at ../SU2_CFD/src/drivers/../../include/drivers/../../../Common/include/parallelization/mpi_structure.hpp:205; #5 0x00000000004b0ef3 in CSysVector<double>::dot<CSysVector<double> > (; this=0x23a20d0, expr=...); at ../SU2_CFD/src/integration/../../include/integration/../solvers/../../../Common/include/linear_algebra/CSysVector.hpp:317; #6 0x00000000004b0dcf in CSysVector<double>::squaredNorm (this=0x23a20d0); at ../SU2_CFD/src/integration/../../include/integration/../solvers/../../../Common/include/linear_algebra/CSysVector.hpp:331; ---Type <return> to continue, or q <return> to quit---; #7 0x00000000004b0cf0 in CSysVector<double>::norm (this=0x23a20d0); at ../SU2_CFD/src/integration/../../include/integration/../solvers/../../../Common/include/linear_algebra/CSysVector.hpp:337; #8 0x0000000000da260b in CSysSolve<double>::BCGSTAB_LinSolver (; this=0x23a2240, b=..., x=..., mat_vec=..., precond=..., ; tol=1.0000000000000001e-15, m=20, residual=@0x7fffffff8fb8: 0, ; monitoring=false, config=0x209bc10); at ../Common/src/linear_algebra/CSysSolve.cpp:553; #9 0x0000000000da404a in CSysSolve<double>::Solve (this=0x23a2240, ; Jacobian=..., LinSysRes=..., LinSysSol=..., geometry=0x2105400, ; config=0x209bc10) at ../Common",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1241:5331,integrat,integration,5331,https://su2code.github.io,https://github.com/su2code/SU2/issues/1241,1,['integrat'],['integration']
Deployability,nts\SU2\SU2_PY\SU2/run/geometry.py to C:\bin\bin/SU2/run; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/run/projection.py to C:\bin\bin/SU2/run; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/run/__init__.py to C:\bin\bin/SU2/run; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/util/bunch.py to C:\bin\bin/SU2/util; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/util/filter_adjoint.py to C:\bin\bin/SU2/util; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/util/lhc_unif.py to C:\bin\bin/SU2/util; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/util/misc.py to C:\bin\bin/SU2/util; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/util/mp_eval.py to C:\bin\bin/SU2/util; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/util/ordered_bunch.py to C:\bin\bin/SU2/util; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/util/ordered_dict.py to C:\bin\bin/SU2/util; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/util/plot.py to C:\bin\bin/SU2/util; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/util/polarSweepLib.py to C:\bin\bin/SU2/util; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/util/which.py to C:\bin\bin/SU2/util; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/util/switch.py to C:\bin\bin/SU2/util; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/util/__init__.py to C:\bin\bin/SU2/util; Installing C:\Users\Danie\Documents\SU2\SU2_PY\FSI_tools/__init__.py to C:\bin\bin/FSI_tools; Installing C:\Users\Danie\Documents\SU2\SU2_PY\FSI_tools/FSIInterface.py to C:\bin\bin/FSI_tools; Installing C:\Users\Danie\Documents\SU2\SU2_PY\FSI_tools/FSI_config.py to C:\bin\bin/FSI_tools; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2_Nastran/__init__.py to C:\bin\bin/SU2_Nastran; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2_Nastran/pysu2_nastran.py to C:\bin\bin/SU2_Nastran; Running custom install script 'sh C:\\Users\\Danie\\Documents\\SU2\\SU2_PY/pySU2\\install.sh C:\\Users\\Danie\\Documents\\SU2\\build\\SU2_PY/pySU2 pysu2.py'; Failed ,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1376:8032,Install,Installing,8032,https://su2code.github.io,https://github.com/su2code/SU2/issues/1376,1,['Install'],['Installing']
Deployability,"nvs/temp_su5/bin/SU2/amginria/__init__.py"", line 4, in <module>; > from .interface import *; > File ""/dfs/user/takashi279/miniconda3/envs/temp_su5/bin/SU2/amginria/interface.py"", line 41, in <module>; > import _amgio as amgio; > ModuleNotFoundError: No module named '_amgio'; > ```. and followed the instructions provided as in [https://github.com/su2code/SU2/issues/948#issuecomment-619334494](url):. > The _amgio extension should be built by default. I haven't had any issues on any of the machines I've built on, so I appreciate the feedback.; > ; > Just curious, are you running with python >=3.7? The shebang in all the SU2 python scripts; > ; > ```; > #!/usr/bin/env python; > ```; > ; > uses whatever python is set to in your environment variables, but pyamg/_amgio will only build/run with python >=3.7. Could you also check if the _amgio extension was installed in your site-packages (probably located in ~/.local/lib/python3.x/site-packages)?; > ; > If it didn't build/install, you could go into extensions/AMGIO/su2io and run; > ; > ```; > python3 setup.py build_ext && python3 setup.py install; > ```; > ; > If it did build/install, try the command; > ; > ```; > python3 $SU2_RUN/mesh_adaptation_amg.py -f invCyl.cfg -n 6; > ```. After doing `python3 setup.py build_ext && python3 setup.py install`, I encountered the following error:. > ```; > (temp_su5) takashi279@turing1:/dfs/user/takashi279/plasma/design/multiscale_adap3/SU2/externals/AMGIO/su2io$ python3 setup.py build_ext && python3 setup.py install; > running build_ext; > running install; > /dfs/user/takashi279/miniconda3/envs/temp_su5/lib/python3.7/site-packages/setuptools/command/install.py:37: SetuptoolsDeprecationWarning: setup.py install is deprecated. Use build and pip and other standards-based tools.; > setuptools.SetuptoolsDeprecationWarning,; > /dfs/user/takashi279/miniconda3/envs/temp_su5/lib/python3.7/site-packages/setuptools/command/easy_install.py:147: EasyInstallDeprecationWarning: easy_install command is",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1699:1572,install,install,1572,https://su2code.github.io,https://github.com/su2code/SU2/issues/1699,1,['install'],['install']
Deployability,o C:\bin\bin; Installing SU2_PY/pySU2\_pysu2.dll to C:\bin\bin; Installing SU2_PY/pySU2\_pysu2.dll.a to C:\bin\lib; Installing SU2_PY/pySU2\_pysu2ad.dll to C:\bin\bin; Installing SU2_PY/pySU2\_pysu2ad.dll.a to C:\bin\lib; Installing C:\Users\Danie\Documents\SU2\SU2_PY\continuous_adjoint.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\compute_uncertainty.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\finite_differences.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\mesh_deformation.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\parallel_computation.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\parallel_computation_fsi.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\package_tests.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\shape_optimization.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\merge_solution.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\set_ffd_design_var.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\compute_polar.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\compute_multipoint.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\discrete_adjoint.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\direct_differentiation.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\fsi_computation.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2_CFD.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/__init__.py to C:\bin\bin/SU2; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/eval/design.py to C:\bin\bin/SU2/eval; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/eval/functions.py to C:\bin\bin/SU2/eval; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/eval/gradients.py to C:\bin\bin/SU2/eval; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/eval/__init__.py to C:\bin\bin/SU2/eval; Ins,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1376:4497,Install,Installing,4497,https://su2code.github.io,https://github.com/su2code/SU2/issues/1376,1,['Install'],['Installing']
Deployability,"o identify the symmetry planes and mirror the flux through the faces. ; Blazek continues: ""The second methodology computes the fluxes for the halved control volume (but not accross the boundary). The components of **the residual normal to the symmetry plane** are then zeroed out. It is also necessary to correct normal vectors of those faces of the control volume, which touch the boundary. The modification consists of removing all components of the face vector, which are normal to the symmetry plane. The gradients also have to be corrected according to Eq. (8.40) [points 2,3,4 above]"". 1. Modify Green-Gauss and Least-Squares gradient computation for symmetry planes; -> This seems to work fine; 2. Fix normal components of edges connected to symmetry plane; -> This seems to work fine; 3. Fix residual components of velocity on the symmetry plane; -> This seems to work fine; 4. Multiple symmetry planes, including Euler walls; -> This seems to work fine; 6. multigrid; -> Works fine now that we use the agglomeration as in the paper of Diskin.; 7. grid movement; 8. -> Works fine with the new fix to the residuals (energy update). ## Related Work; #1168 . ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [x] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [x] I used the pre-commit hook to prevent dirty commits and used `pre-commit run --all` to format old commits.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2194:2300,update,update,2300,https://su2code.github.io,https://github.com/su2code/SU2/pull/2194,2,['update'],"['update', 'updated']"
Deployability,o; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/io/tools.py to C:\bin\bin/SU2/io; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/io/historyMap.py to C:\bin\bin/SU2/io; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/io/__init__.py to C:\bin\bin/SU2/io; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/opt/project.py to C:\bin\bin/SU2/opt; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/opt/scipy_tools.py to C:\bin\bin/SU2/opt; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/opt/__init__.py to C:\bin\bin/SU2/opt; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/run/adjoint.py to C:\bin\bin/SU2/run; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/run/deform.py to C:\bin\bin/SU2/run; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/run/direct.py to C:\bin\bin/SU2/run; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/run/interface.py to C:\bin\bin/SU2/run; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/run/merge.py to C:\bin\bin/SU2/run; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/run/geometry.py to C:\bin\bin/SU2/run; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/run/projection.py to C:\bin\bin/SU2/run; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/run/__init__.py to C:\bin\bin/SU2/run; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/util/bunch.py to C:\bin\bin/SU2/util; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/util/filter_adjoint.py to C:\bin\bin/SU2/util; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/util/lhc_unif.py to C:\bin\bin/SU2/util; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/util/misc.py to C:\bin\bin/SU2/util; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/util/mp_eval.py to C:\bin\bin/SU2/util; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/util/ordered_bunch.py to C:\bin\bin/SU2/util; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/util/ordered_dict.py to C:\bin\bin/SU2/util; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/util/plot.py to C:\bin\bin/SU2/util; Installi,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1376:7021,Install,Installing,7021,https://su2code.github.io,https://github.com/su2code/SU2/issues/1376,1,['Install'],['Installing']
Deployability,"ocess to abort the download if it gets stuck and doesn't finish within an hour.</li>; </ul>; <h3>3.0.8</h3>; <ul>; <li>Fix zstd not working for windows on gnu tar in issues <a href=""https://github-redirect.dependabot.com/actions/cache/issues/888"">#888</a> and <a href=""https://github-redirect.dependabot.com/actions/cache/issues/891"">#891</a>.</li>; <li>Allowing users to provide a custom timeout as input for aborting download of a cache segment using an environment variable <code>SEGMENT_DOWNLOAD_TIMEOUT_MIN</code>. Default is 60 minutes.</li>; </ul>; </blockquote>; </details>; <details>; <summary>Commits</summary>; <ul>; <li><a href=""https://github.com/actions/cache/commit/fd5de65bc895cf536527842281bea11763fefd77""><code>fd5de65</code></a> Merge pull request <a href=""https://github-redirect.dependabot.com/actions/cache/issues/899"">#899</a> from actions/kotewar/download-and-compression-fix</li>; <li><a href=""https://github.com/actions/cache/commit/d49b6bb21d712fc1556f99339b8324b1603f7560""><code>d49b6bb</code></a> Updated actions/cache toolkit dep to v3.0.4</li>; <li><a href=""https://github.com/actions/cache/commit/a7c34adf76222e77931dedbf4a45b2e4648ced19""><code>a7c34ad</code></a> Merge pull request <a href=""https://github-redirect.dependabot.com/actions/cache/issues/894"">#894</a> from actions/kotewar/update-toolkit-version</li>; <li><a href=""https://github.com/actions/cache/commit/83394c99b7089b29ee6c302fad5e940df48c472a""><code>83394c9</code></a> Updated cache version in license file</li>; <li><a href=""https://github.com/actions/cache/commit/e839c25979e6ffdd90792d34de69d6a87d3016f6""><code>e839c25</code></a> Updated actions/cache version to 3.0.3</li>; <li><a href=""https://github.com/actions/cache/commit/33a923d660988a68affcd47de6bd6744193223a6""><code>33a923d</code></a> Added release information</li>; <li><a href=""https://github.com/actions/cache/commit/a404368986bb049d406166fc20afc01d032ad8a2""><code>a404368</code></a> Updated actions/cache version to 3.0.2</li>; <li><a",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1755:7358,Update,Updated,7358,https://su2code.github.io,https://github.com/su2code/SU2/pull/1755,1,['Update'],['Updated']
Deployability,ocuments\SU2\SU2_PY\SU2/run/merge.py to C:\bin\bin/SU2/run; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/run/geometry.py to C:\bin\bin/SU2/run; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/run/projection.py to C:\bin\bin/SU2/run; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/run/__init__.py to C:\bin\bin/SU2/run; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/util/bunch.py to C:\bin\bin/SU2/util; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/util/filter_adjoint.py to C:\bin\bin/SU2/util; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/util/lhc_unif.py to C:\bin\bin/SU2/util; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/util/misc.py to C:\bin\bin/SU2/util; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/util/mp_eval.py to C:\bin\bin/SU2/util; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/util/ordered_bunch.py to C:\bin\bin/SU2/util; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/util/ordered_dict.py to C:\bin\bin/SU2/util; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/util/plot.py to C:\bin\bin/SU2/util; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/util/polarSweepLib.py to C:\bin\bin/SU2/util; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/util/which.py to C:\bin\bin/SU2/util; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/util/switch.py to C:\bin\bin/SU2/util; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/util/__init__.py to C:\bin\bin/SU2/util; Installing C:\Users\Danie\Documents\SU2\SU2_PY\FSI_tools/__init__.py to C:\bin\bin/FSI_tools; Installing C:\Users\Danie\Documents\SU2\SU2_PY\FSI_tools/FSIInterface.py to C:\bin\bin/FSI_tools; Installing C:\Users\Danie\Documents\SU2\SU2_PY\FSI_tools/FSI_config.py to C:\bin\bin/FSI_tools; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2_Nastran/__init__.py to C:\bin\bin/SU2_Nastran; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2_Nastran/pysu2_nastran.py to C:\bin\bin/SU2_Nastran; Running custom install script 'sh C:\\Users\\Danie\\Documents\\SU2\\SU2_,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1376:7944,Install,Installing,7944,https://su2code.github.io,https://github.com/su2code/SU2/issues/1376,1,['Install'],['Installing']
Deployability,ode/SU2 into develop; - Another important updated to BC in parallel; - More implementation and clean up of the parallel CGNS reader.; - Merge branch 'develop' of https://github.com/su2code/SU2 into develop; - CGNS reader bug fix.; - Updated adj. NS solver with primitive variables and farfield bc including viscous contribution.; - Merge branch 'develop' of https://github.com/su2code/SU2 into develop; - Small change; - Back to the previous version; - Fixed some loop variables.; - Merge branch 'develop' of https://github.com/su2code/SU2 into develop; - Bug fixes for CGNS.; - New slope limiter based on the wall distance; - Merge branch 'develop' of https://github.com/su2code/SU2 into develop; - Bug fixing; - Non-dimensional adjoint bc; - CGNS bug.; - Mixed-element support in new CGNS reader.; - Memory fix for mixed-element CGNS in parallel.; - Activated the parallel CGNS reader.; - New FFD input; - Adjacency building for Parmetis improve to account for VTK structure; - added if viscous steps to some adjeuler bcs; - Minor changes; - Back to previous version of ParMetis; - Small change; - Final update.; - Minor bug fixed.; - Updated SU2_DEF (cgns); - CGNS global element ID bug fix.; - Heat flux bug fix.; - Small fix.; - Merge branch 'master' into develop; - changed history output to match # of residuals printed in header and body; - further correction to history output; - history file fix; - fixed history output such that massflowrate can be output while in rans; - Removed Parmetis updates to adjacency; - Minor changes; - Merge branch 'develop' of https://github.com/su2code/SU2 into develop; - Bug fixing; - ver 3.2.8.3; - Updated CGNS in parallel.; - Added the ability to writting 2 files at each checkpoint when using 2nd order dual time stepping; - Merge branch 'develop' into feature_dualoutput; - Updated FieldView; - Preliminary implementation (ASCII); - Minor changes; - Update code; - Updated FieldView format; - Merge branch 'develop' into feature_dualoutput; - Bug fixi,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/174#issuecomment-101443812:7656,update,update,7656,https://su2code.github.io,https://github.com/su2code/SU2/pull/174#issuecomment-101443812,2,['update'],['update']
Deployability,"odeQL bundle version to 2.15.5. <a href=""https://redirect.github.com/github/codeql-action/pull/2047"">#2047</a></li>; </ul>; <h2>3.22.11 - 13 Dec 2023</h2>; <!-- raw HTML omitted -->; </blockquote>; <p>... (truncated)</p>; </details>; <details>; <summary>Commits</summary>; <ul>; <li><a href=""https://github.com/github/codeql-action/commit/66c3cec3e84942c64294dd8ea34532318b12a14e""><code>66c3cec</code></a> Update checked-in dependencies</li>; <li><a href=""https://github.com/github/codeql-action/commit/36f1104e11cf100d92d694d3df5330397e1a1a2d""><code>36f1104</code></a> Bump the npm group with 5 updates</li>; <li><a href=""https://github.com/github/codeql-action/commit/905ae4af531685eaee37e94f46845bf4c420dc62""><code>905ae4a</code></a> Merge pull request <a href=""https://redirect.github.com/github/codeql-action/issues/2163"">#2163</a> from github/mergeback/v3.24.5-to-main-47b3d888</li>; <li><a href=""https://github.com/github/codeql-action/commit/6dab9f2356bef6518153087116230299a4ee6712""><code>6dab9f2</code></a> Update checked-in dependencies</li>; <li><a href=""https://github.com/github/codeql-action/commit/4d6d2bfeaa911ec12eaaa346f581bb7ab1dc238d""><code>4d6d2bf</code></a> Merge remote-tracking branch 'origin/releases/v3' into mergeback/v3.24.5-to-m...</li>; <li><a href=""https://github.com/github/codeql-action/commit/633baf86c326c07635ec576d7f97ae3f76871e4c""><code>633baf8</code></a> Merge pull request <a href=""https://redirect.github.com/github/codeql-action/issues/2165"">#2165</a> from github/nickfyson/fix-3.24.5-changelog</li>; <li>See full diff in <a href=""https://github.com/github/codeql-action/compare/v2...v3"">compare view</a></li>; </ul>; </details>; <br />. [![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=github/codeql-action&package-manager=github_actions&previous-version=2&new-version=3)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compat",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2229:14618,Update,Update,14618,https://su2code.github.io,https://github.com/su2code/SU2/pull/2229,1,['Update'],['Update']
Deployability,"of AND, also working on doxygen documentation; - Dynamic allocation for some marker-related arrays.; - visualize part taken out to match upstream/dev; - Collection of improvements; - Release 3.2.7; - Fixing LOW_MEMORY_OUTPUT; - Updated LOW_MEMORY_OUTPUT option; - Updated configure.ac; - After autoconf; - Updated MPI; - Updated BC_Engine_Exhaust and BC_Engine_Bleed; - Small change; - Fixing subsonic engine intake option; - Small output change; - Added output_su2.cpp; - Updated Engine BC; - Working on Engine BCs; - Added Supersonic Outlet BC; - Minor change; - Merge remote-tracking branch 'upstream/develop' into develop; - adjoints, solid boundary, doxygen in config; - continued fixing; - re-added adjoint bc mods; - re-adding avg outlet pressure (static pressure adjoint); - re-adding avg outlet pressure (static pressure adjoint); - Merge branch 'temp' of https://github.com/hlkline/SU2 into temp; - continued fixing; - average total pressure and fixes to avg outlet pressure; - adding stagnation pressure output to SU2_DOT; - Merge pull request #146 from hlkline/temp; - Updated Entropy fix (now it is active).; - Another change in BC_Engine_Exhaust; - Updated CGNS in parallel; - Added runtime file; - Small typo; - Adjustment of the Entropy fix coefficient; - Bug in SU2_GEO; - Debug version with print statements.; - Updated release 3.2.7.1; - Small change; - Updated config file; - Code update; - MPI Status and Request fix.; - Another MPI Status/Request fix.; - Actuator disk update.; - Small update; - Initial implementation of pyramids and prisms for Tecplot binary.; - Small fix for Tecplot binaries. Closes #56. Closes #57.; - Removed extra allocation related to markers during partitioning.; - Non-working version; - Small update; - Updated memory deallocation.; - Merge branch 'feature_MarkerMax' into develop; - Time and date in the header.; - Small fix to the latest commit.; - Simplification of entropy correction; - Critical stability improvement.; - Minor release 3.2.7.2; -",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/174#issuecomment-101443812:3806,Update,Updated,3806,https://su2code.github.io,https://github.com/su2code/SU2/pull/174#issuecomment-101443812,1,['Update'],['Updated']
Deployability,"ogramming may become an entrance barrier to new additions to the community. As I wrote in the preamble of #789:; ""But please participate even if you never heard of these topics, your opinion about readability and ""developability"" of the code is important! I think the code-style should be accessible to people starting a PhD (after they read a bit about C++...).""; I try to encapsulate and hide the tricky bits as much as possible to make the code as readable as possible, whether I am succeeding or not is for the community to decide, in all these PR's I've been pointing to the areas I think are trickier, if someone, anyone, feels they are absolutely incomprehensible please say something... either here, or trough slack, or by email (I think it shows in the commits) (I understand not everyone is keen on github exposure). > I'm aware that you have been doing very well at documenting the code and the various PRs, but I'd say we should try to find an strategy to ease the learning curve on potential new developers (maybe some developer tutorials? a collection of the comments/discussions on the PRs moved to the wiki? a list of links/useful resources?). I agree with documentation of broad design decisions, that is the intent of #789, and developer tutorials (how to implement a new X) once we are content with the restructurings, otherwise they will quickly go outdated... or actually...; We should probably first think about the answers to ""how to implement a new X"" and restructure/refactor as a function of that.; Based on previous efforts of maintaining wiki's updated while code is being developed, I much prefer this github style where you can clearly tell what version of the code the comments refer to. A collection of comments/discussions organized by topic and linked to a feature is somewhat what I had in mind when I opened a ""big PR"" (#824) with little branches such as this one, I can try to complete that with a list of links/useful resources, references as it were, good idea!",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/843#issuecomment-577684728:5176,update,updated,5176,https://su2code.github.io,https://github.com/su2code/SU2/pull/843#issuecomment-577684728,2,['update'],['updated']
Deployability,"oid*’ to ‘void*’ [-fpermissive]; return MPI_T_pvar_write(session, handle, buf);; ^; In file included from ../../../Common/lib/../src/../include/./mpi_structure.hpp:42:0,; from ../../../Common/lib/../src/../include/config_structure.hpp:41,; from ../../../Common/lib/../src/config_structure.cpp:38:; /usr/include/mpich-x86_64/mpi.h:1460:5: error: initializing argument 3 of ‘int MPI_T_pvar_write(MPI_T_pvar_session, MPI_T_pvar_handle, void*)’ [-fpermissive]; int MPI_T_pvar_write(MPI_T_pvar_session session, MPI_T_pvar_handle handle, void *buf);; ^; make[2]: *** [../src/libSU2_AD_a-config_structure.o] Error 1; make[2]: Leaving directory `/home/bu/SU2/SU2_AD/Common/lib'; make[1]: *** [all-recursive] Error 1; make[1]: Leaving directory `/home/bu/SU2/SU2_AD'; make: *** [SU2_AD] Error 2; ```; Following is the config log:; ```; checking build system type... x86_64-unknown-linux-gnu; checking host system type... x86_64-unknown-linux-gnu; checking target system type... x86_64-unknown-linux-gnu; checking for a BSD-compatible install... /usr/bin/install -c; checking whether build environment is sane... yes; checking for a thread-safe mkdir -p... /usr/bin/mkdir -p; checking for gawk... gawk; checking whether make sets $(MAKE)... yes; checking whether make supports nested variables... yes; checking for style of include used by make... GNU; checking whether the C++ compiler works... yes; checking for C++ compiler default output file name... a.out; checking for suffix of executables... ; checking whether we are cross compiling... no; checking for suffix of object files... o; checking whether we are using the GNU C++ compiler... yes; checking whether /usr/lib64/mpich/bin/mpicxx accepts -g... yes; checking dependency style of /usr/lib64/mpich/bin/mpicxx... gcc3; checking whether we are using the GNU C compiler... yes; checking whether /usr/lib64/mpich/bin/mpicc accepts -g... yes; checking for /usr/lib64/mpich/bin/mpicc option to accept ISO C89... none needed; checking dependency style of /",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/587:2956,install,install,2956,https://su2code.github.io,https://github.com/su2code/SU2/issues/587,1,['install'],['install']
Deployability,"om/github/codeql-action/pull/2031"">#2031</a></li>; <li>The CodeQL Action now requires CodeQL version 2.11.6 or later. For more information, see <a href=""https://github.com/github/codeql-action/blob/main/#2227---16-nov-2023"">the corresponding changelog entry for CodeQL Action version 2.22.7</a>. <a href=""https://redirect.github.com/github/codeql-action/pull/2009"">#2009</a></li>; </ul>; <h2>3.22.12 - 22 Dec 2023</h2>; <ul>; <li>Update default CodeQL bundle version to 2.15.5. <a href=""https://redirect.github.com/github/codeql-action/pull/2047"">#2047</a></li>; </ul>; <h2>3.22.11 - 13 Dec 2023</h2>; <!-- raw HTML omitted -->; </blockquote>; <p>... (truncated)</p>; </details>; <details>; <summary>Commits</summary>; <ul>; <li><a href=""https://github.com/github/codeql-action/commit/66c3cec3e84942c64294dd8ea34532318b12a14e""><code>66c3cec</code></a> Update checked-in dependencies</li>; <li><a href=""https://github.com/github/codeql-action/commit/36f1104e11cf100d92d694d3df5330397e1a1a2d""><code>36f1104</code></a> Bump the npm group with 5 updates</li>; <li><a href=""https://github.com/github/codeql-action/commit/905ae4af531685eaee37e94f46845bf4c420dc62""><code>905ae4a</code></a> Merge pull request <a href=""https://redirect.github.com/github/codeql-action/issues/2163"">#2163</a> from github/mergeback/v3.24.5-to-main-47b3d888</li>; <li><a href=""https://github.com/github/codeql-action/commit/6dab9f2356bef6518153087116230299a4ee6712""><code>6dab9f2</code></a> Update checked-in dependencies</li>; <li><a href=""https://github.com/github/codeql-action/commit/4d6d2bfeaa911ec12eaaa346f581bb7ab1dc238d""><code>4d6d2bf</code></a> Merge remote-tracking branch 'origin/releases/v3' into mergeback/v3.24.5-to-m...</li>; <li><a href=""https://github.com/github/codeql-action/commit/633baf86c326c07635ec576d7f97ae3f76871e4c""><code>633baf8</code></a> Merge pull request <a href=""https://redirect.github.com/github/codeql-action/issues/2165"">#2165</a> from github/nickfyson/fix-3.24.5-changelog</li>; <li>See ful",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2229:14197,update,updates,14197,https://su2code.github.io,https://github.com/su2code/SU2/pull/2229,1,['update'],['updates']
Deployability,"on: 7.2.0 ""Blackbird""; C compiler for the host machine: gcc (gcc 8.1.0 ""gcc (x86_64-posix-seh-rev0, Built by MinGW-W64 project) 8.1.0""); C linker for the host machine: gcc ld.bfd 2.30; C++ compiler for the host machine: c++ (gcc 8.1.0 ""c++ (x86_64-posix-seh-rev0, Built by MinGW-W64 project) 8.1.0""); C++ linker for the host machine: c++ ld.bfd 2.30; Host machine cpu family: x86_64; Host machine cpu: x86_64; Program python3 found: YES (C:\Users\Danie\Anaconda3\envs\vsptools\python.exe); Did not find pkg-config by name 'pkg-config'; Found Pkg-config: NO; mpicc found: NO; Run-time dependency MPI for c found: NO (tried pkgconfig and config-tool); mpic++ found: NO; Run-time dependency MPI for cpp found: NO (tried pkgconfig and config-tool); Program swig found: YES (C:\Softwares\swigwin-4.0.2\swig.EXE); Dependency python found: YES (sysconfig); Program install.sh found: YES (sh C:\Users\Danie\Documents\SU2\SU2_PY/pySU2\install.sh); Message: -------------------------------------------------------------------------; | ___ _ _ ___ |; | / __| | | |_ ) Release 7.2.0 ""Blackbird"" |; | \__ \ |_| |/ / |; | |___/\___//___| Meson Configuration Summary |; | |; -------------------------------------------------------------------------. Option Value; ---------------------; TecIO: false; CGNS: true; AD (reverse): true; AD (forward): true; Python Wrapper: true; Intel-MKL: false; OpenBlas: false; PaStiX: false; Mixed Float: false; libROM: false. Please be sure to add the $SU2_HOME and $SU2_RUN environment variables,; and update your $PATH (and $PYTHONPATH if applicable) with $SU2_RUN. Based on the input to this configuration, add these lines to your .bashrc file:. export SU2_RUN=C:\bin/bin; export SU2_HOME=C:\Users\Danie\Documents\SU2; export PATH=$PATH:$SU2_RUN; export PYTHONPATH=$PYTHONPATH:$SU2_RUN. Use './ninja -C C:\Users\Danie\Documents\SU2\build install' to compile and install SU2. Build targets in project: 17. Found ninja.exe-1.9.0 at C:\Users\Danie\Documents\SU2\ninja.exe`. **526 fi",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1376:1812,Release,Release,1812,https://su2code.github.io,https://github.com/su2code/SU2/issues/1376,1,['Release'],['Release']
Deployability,"on\mesonbuild\backend\ninjabackend.py"", line 3062, in generate_link; dep_targets.extend(self.guess_external_link_dependencies(linker, target, commands, internal)); File ""F:\suflow\resources\softwares\SU2\externals\meson\mesonbuild\backend\ninjabackend.py"", line 2907, in guess_external_link_dependencies; search_dirs, static_patterns); File ""F:\suflow\resources\softwares\SU2\externals\meson\mesonbuild\backend\ninjabackend.py"", line 2848, in guess_library_absolute_path; trial = CCompiler._get_file_from_list(self.environment, trial); File ""F:\suflow\resources\softwares\SU2\externals\meson\mesonbuild\compilers\mixins\clike.py"", line 1036, in _get_file_from_list; if p.is_file():; File ""C:\Users\zeng\AppData\Local\Programs\Python\Python37\lib\pathlib.py"", line 1387, in is_file; return S_ISREG(self.stat().st_mode); File ""C:\Users\zeng\AppData\Local\Programs\Python\Python37\lib\pathlib.py"", line 1183, in stat; return self._accessor.stat(self); OSError: [WinError 123] 文件名、目录名或卷标语法不正确。: 'C:\\ProgramData\\chocolatey\\lib\\mingw\\tools\\install\\mingw64\\bin\\..\\lib\\gcc\\x86_64-w64-mingw32\\8.1.0\\libC:\\Program Files (x86)\\Microsoft SDKs\\MPI\\Lib\\x64\\msmpi.a'. I noticed that other people on Github have also raised this issue, but they are on the second step `ninja -C build install` when I got this error on the first step `py meson.py build`. so the solve solutions are not work for me. For issue #1471 I found this silimar proplem between 7.3.1. thanks！. **To Reproduce**; Please provide a config file and mesh for a minimal example that recreates the problem.; [meson-log.txt](https://github.com/su2code/SU2/files/12335918/meson-log.txt); [meson-info.json.txt](https://github.com/su2code/SU2/files/12335924/meson-info.json.txt). **Desktop (please complete the following information):**; OS: [win11 ]; C++ compiler and version: [ g++ (GCC) 8.1.0]; MPI implementation and version: [Microsoft MPI v10.1.2]; SU2 Version: [v7.5.1]. **Other informations:**; the full console output : [conso",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/2106:2133,install,install,2133,https://su2code.github.io,https://github.com/su2code/SU2/issues/2106,1,['install'],['install']
Deployability,ons.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/io; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/io/data.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/io; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/io/filelock.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/io; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/io/redirect.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/io; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/io/state.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/io; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/io/tools.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/io; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/io/historyMap.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/io; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/io/__init__.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/io; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/mesh/adapt.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/mesh; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/mesh/tools.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/mesh; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/mesh/__init__.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/mesh; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/opt/project.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/opt; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/opt/scipy_tools.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/opt; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/opt/__init__.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/opt; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/run/adaptation.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/run; Installing /home/slimshady/UserPackages/SU2_NEW/,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/991#issuecomment-632032044:5541,Install,Installing,5541,https://su2code.github.io,https://github.com/su2code/SU2/issues/991#issuecomment-632032044,1,['Install'],['Installing']
Deployability,"ons@github.com<mailto:notifications@github.com>> wrote:. Hey guys,. the code now works for multizone periodic meshes. After the FSI meeting of yesterday i had a small chat with Ruben and it showed me what was most likely the problem in the geometry_structure.cpp preventing the run of a multizone periodic mesh. I slightly modified the loop, actually now there are 2 loops one reading the marker and another reading the periodic transformations and it works. Thomas your implementation of the multi rotating frame is also working, so now is possible to specify different rotational speeds for each mesh. I attached a picture of a simulation with 2 meshes one with rotational speed and one without. The simulation of the picture doesn´t have any particular meaning, it was just to check if two periodic mesh with 2 different rotational speed can be simultaneously run by SU2. cheers!!!. [2periodicmesh_multirotating]https://cloud.githubusercontent.com/assets/6718364/8984481/2f80c900-36d2-11e5-973d-f72adc9a476a.jpg. ---. You can view, comment on, or merge this pull request online at:. https://github.com/su2code/SU2/pull/186. Commit Summary; - Modified grid movement options and set up to allow multiple rotating frames with multi-zone calculations.; - fix problem reading multizone mesh periodic. File Changes; - M Common/include/geometry_structure.hpphttps://github.com/su2code/SU2/pull/186/files#diff-0 (9); - M Common/include/geometry_structure.inlhttps://github.com/su2code/SU2/pull/186/files#diff-1 (2); - M Common/src/config_structure.cpphttps://github.com/su2code/SU2/pull/186/files#diff-2 (5); - M Common/src/geometry_structure.cpphttps://github.com/su2code/SU2/pull/186/files#diff-3 (38); - M SU2_CFD/src/iteration_structure.cpphttps://github.com/su2code/SU2/pull/186/files#diff-4 (8). Patch Links:; - https://github.com/su2code/SU2/pull/186.patch; - https://github.com/su2code/SU2/pull/186.diff. —; Reply to this email directly or view it on GitHubhttps://github.com/su2code/SU2/pull/186.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/186#issuecomment-126368067:1886,Patch,Patch,1886,https://su2code.github.io,https://github.com/su2code/SU2/pull/186#issuecomment-126368067,2,"['Patch', 'patch']","['Patch', 'patch']"
Deployability,"onstructor of CSysMatrix by using 'new', and calling the StiffMatrix.Initialize() method, for what I see in matrix_structure.cpp. Also, StiffMatrix is a sparse matrix (nDim x nPoint) x (nDim x nPoint), which must be allocated correctly using the Initialize method to avoid carrying around lots of zeros. With regards to the other point, I think that it is interesting to use the Initialize features of the CSysVector and CSysMatrix in the constructor of the class, just as it happens in the rest of the solver classes (see for example solver_direct_mean, line 261, where the Jacobian of the problem is initialized using a Jacobian.Initialize() call in the constructor). As far as I see it, the mesh update problem is nothing but a copy of the linear elasticity problem, so maintaining the parallelism with all the other solvers in the code (and, in particular, with the structural solver) may be interesting. . Moreover, by allocating the memory in the constructor using StiffMatrix.Initialize(nPoint, nPointDomain...) we make sure we can use the linear solvers in parallel by building a compliant sparse matrix. And if we allocate the stiffness matrix in the constructor, it makes sense to also do so with the vectors of the problem. Again, this maintains the similarities with the rest of the solvers. Finally, in my particular case I call the SetVolume_Deformation() function at least as many times as I do with the fluid and the structural solver. The mesh deformation is a third field in the problem, and by initializing the structure at the beginning of the simulation we can reuse the same spaces in memory along the whole of it, given that (at least in unsteady cases) the mesh update routines may be called several times. This way we avoid to be continuously allocating/deallocating memory. Also, this is useful to have a more accurate measure of the amount of memory we will be using along the simulation right at the beginning of the calculation - although peaks of memory are unavoidable.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/200#issuecomment-148017482:2079,update,update,2079,https://su2code.github.io,https://github.com/su2code/SU2/pull/200#issuecomment-148017482,2,"['continuous', 'update']","['continuously', 'update']"
Deployability,"ope of this release, the support for reading python version from pyproject.toml was added (<a href=""https://redirect.github.com/actions/setup-python/pull/669"">actions/setup-python#669</a>).</p>; <pre lang=""yaml""><code> - name: Setup Python; uses: actions/setup-python@v4; &lt;/tr&gt;&lt;/table&gt; ; </code></pre>; </blockquote>; <p>... (truncated)</p>; </details>; <details>; <summary>Commits</summary>; <ul>; <li><a href=""https://github.com/actions/setup-python/commit/0a5c61591373683505ea898e09a3ea4f39ef2b9c""><code>0a5c615</code></a> Update action to node20 (<a href=""https://redirect.github.com/actions/setup-python/issues/772"">#772</a>)</li>; <li><a href=""https://github.com/actions/setup-python/commit/0ae58361cdfd39e2950bed97a1e26aa20c3d8955""><code>0ae5836</code></a> Add example of GraalPy to docs (<a href=""https://redirect.github.com/actions/setup-python/issues/773"">#773</a>)</li>; <li><a href=""https://github.com/actions/setup-python/commit/b64ffcaf5b410884ad320a9cfac8866006a109aa""><code>b64ffca</code></a> update actions/checkout to v4 (<a href=""https://redirect.github.com/actions/setup-python/issues/761"">#761</a>)</li>; <li><a href=""https://github.com/actions/setup-python/commit/8d2896179abf658742de432b3f203d2c2d86a587""><code>8d28961</code></a> Examples now use checkout@v4 (<a href=""https://redirect.github.com/actions/setup-python/issues/738"">#738</a>)</li>; <li><a href=""https://github.com/actions/setup-python/commit/7bc6abb01e0555719edc2dbca70a2fde309e5e56""><code>7bc6abb</code></a> advanced-usage.md: Encourage the use actions/checkout@v4 (<a href=""https://redirect.github.com/actions/setup-python/issues/729"">#729</a>)</li>; <li><a href=""https://github.com/actions/setup-python/commit/e8111cec9d3dc15220d8a3b638f08419f57b906a""><code>e8111ce</code></a> Bump <code>@​babel/traverse</code> from 7.9.0 to 7.23.2 (<a href=""https://redirect.github.com/actions/setup-python/issues/743"">#743</a>)</li>; <li><a href=""https://github.com/actions/setup-python/commit/a00ea43da65e7c04d2",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2233:5367,update,update,5367,https://su2code.github.io,https://github.com/su2code/SU2/pull/2233,1,['update'],['update']
Deployability,"ops, this will NOT be done by super gluing convective and viscous numerics. I do not have a concrete design in mind yet but I hope to be able to do something akin to the *decorator* pattern I mentioned before. I also plan to make the numerics a full-fledged *visitor* to reduce compilation dependencies, currently a change to numerics may affect CVariable CSolver and CNumerics (as mentioned by @clarkpede), CSolver is involved because it is responsible for fetching data, I may move that to CNumerics, which would let them fetch data as needed.; - Lookup accesses to CSysMatrix to avoid linear searches, the small increase in memory usage can be mitigated by sharing these lookup tables/arrays and the sparsity pattern between matrices associated with the same geometry (on the subject of these lookup tables, knowing where the diagonal of a row is should enable more efficient upper/lower multiplications). ## Work items; This is a lot of work and some changes will be significant, I will divide the work in steps, off the top of my head this order seems ok:; - CSysMatrix lookups and any required parallel pragmas put in place.; - Point-loop gradients and limiters, no SIMD (at which point I hope #777 to be finished so the next item does not disrupt it).; - Split CSolvers over multiple files, colour-based parallel residual loops (at this point we have hybrid parallel!).; - Contiguous storage of CGeometry members (to eventually enable vectorization).; - Split CNumerics over files, architecture for fusing convective and viscous loops (the most disruptive change).; - SIMD, of gradients, limiters, and numerics. SIMD in CSysMatrix can be started anywhere after item 1. If you foresee conflicts with your ongoing work let's start talking sooner rather than later, I tried to order items to delay major disruptions as much as possible.; Also I would prefer not to take the silence of the community as acceptance, when you have a minute to spare (after the 7.0 release) please leave your opinion.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/789#issuecomment-539523312:4964,release,release,4964,https://su2code.github.io,https://github.com/su2code/SU2/issues/789#issuecomment-539523312,1,['release'],['release']
Deployability,"opt/xcat/sbin; PATH: /usr/lib64/qt-3.3/bin; PATH: /opt/pbs/default/bin; PATH: /opt/pbs/tools/bin; PATH: /usr/lpp/mmfs/bin/; PATH: /usr/local/bin; PATH: /bin; PATH: /usr/bin; PATH: /usr/local/sbin; PATH: /usr/sbin; PATH: /sbin; PATH: /gshare/soft/init; PATH: /gshare/soft/scripts; PATH: .; PATH: /gshare/soft/init; PATH: /gshare/soft/scripts; PATH: . ## ----------- ##; ## Core tests. ##; ## ----------- ##. configure:2465: checking build system type; configure:2479: result: x86_64-unknown-linux-gnu; configure:2499: checking host system type; configure:2512: result: x86_64-unknown-linux-gnu; configure:2532: checking target system type; configure:2545: result: x86_64-unknown-linux-gnu; configure:2587: checking for a BSD-compatible install; configure:2655: result: /usr/bin/install -c; configure:2666: checking whether build environment is sane; configure:2721: result: yes; configure:2872: checking for a thread-safe mkdir -p; configure:2911: result: /bin/mkdir -p; configure:2918: checking for gawk; configure:2934: found /bin/gawk; configure:2945: result: gawk; configure:2956: checking whether make sets $(MAKE); configure:2978: result: yes; configure:3075: checking whether make supports nested variables; configure:3092: result: yes; configure:3117: checking for style of include used by make; configure:3145: result: GNU; configure:3196: result: >>> MPI support disabled by default <<<; configure:3269: checking for g++; configure:3285: found /usr/bin/g++; configure:3296: result: g++; configure:3323: checking for C++ compiler version; configure:3332: g++ --version >&5; g++ (GCC) 4.4.6 20120305 (Red Hat 4.4.6-4); Copyright (C) 2010 Free Software Foundation, Inc.; This is free software; see the source for copying conditions. There is NO; warranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. configure:3343: $? = 0; configure:3332: g++ -v >&5; Using built-in specs.; Target: x86_64-redhat-linux; Configured with: ../configure --prefix=/usr --mandir=/usr/share/man ",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/250#issuecomment-205167006:1919,install,install,1919,https://su2code.github.io,https://github.com/su2code/SU2/issues/250#issuecomment-205167006,4,['install'],['install']
Deployability,"option to fetch tags even if fetch-depth &gt; 0</a></li>; </ul>; <h2>v3.5.3</h2>; <ul>; <li><a href=""https://redirect.github.com/actions/checkout/pull/1196"">Fix: Checkout fail in self-hosted runners when faulty submodule are checked-in</a></li>; <li><a href=""https://redirect.github.com/actions/checkout/pull/1287"">Fix typos found by codespell</a></li>; <li><a href=""https://redirect.github.com/actions/checkout/pull/1369"">Add support for sparse checkouts</a></li>; </ul>; <h2>v3.5.2</h2>; <ul>; <li><a href=""https://redirect.github.com/actions/checkout/pull/1289"">Fix api endpoint for GHES</a></li>; </ul>; <h2>v3.5.1</h2>; <ul>; <li><a href=""https://redirect.github.com/actions/checkout/pull/1246"">Fix slow checkout on Windows</a></li>; </ul>; <h2>v3.5.0</h2>; <ul>; <li><a href=""https://redirect.github.com/actions/checkout/pull/1237"">Add new public key for known_hosts</a></li>; </ul>; <h2>v3.4.0</h2>; <ul>; <li><a href=""https://redirect.github.com/actions/checkout/pull/1209"">Upgrade codeql actions to v2</a></li>; <li><a href=""https://redirect.github.com/actions/checkout/pull/1210"">Upgrade dependencies</a></li>; <li><a href=""https://redirect.github.com/actions/checkout/pull/1225"">Upgrade <code>@​actions/io</code></a></li>; </ul>; <h2>v3.3.0</h2>; <ul>; <li><a href=""https://redirect.github.com/actions/checkout/pull/1045"">Implement branch list using callbacks from exec function</a></li>; <li><a href=""https://redirect.github.com/actions/checkout/pull/1050"">Add in explicit reference to private checkout options</a></li>; <li>[Fix comment typos (that got added in <a href=""https://redirect.github.com/actions/checkout/issues/770"">#770</a>)](<a href=""https://redirect.github.com/actions/checkout/pull/1057"">actions/checkout#1057</a>)</li>; </ul>; <h2>v3.2.0</h2>; <ul>; <li><a href=""https://redirect.github.com/actions/checkout/pull/942"">Add GitHub Action to perform release</a></li>; <li><a href=""https://redirect.github.com/actions/checkout/pull/967"">Fix status badge</a></li>; <li><a href",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2126:7615,Upgrade,Upgrade,7615,https://su2code.github.io,https://github.com/su2code/SU2/pull/2126,2,['Upgrade'],['Upgrade']
Deployability,or ../externals/codi/include/codi.hpp... yes; checking for ../externals/medi/include/medi/medi.hpp... yes; checking that generated files are newer than configure... done; configure: creating ./config.status; config.status: creating externals/tecio/Makefile; config.status: creating externals/metis/Makefile; config.status: creating externals/parmetis/Makefile; config.status: creating externals/cgns/Makefile; config.status: creating Makefile; config.status: creating externals/Makefile; config.status: creating Common/lib/Makefile; config.status: creating SU2_CFD/obj/Makefile; config.status: creating SU2_DOT/obj/Makefile; config.status: creating SU2_MSH/obj/Makefile; config.status: creating SU2_DEF/obj/Makefile; config.status: creating SU2_SOL/obj/Makefile; config.status: creating SU2_GEO/obj/Makefile; config.status: creating SU2_PY/Makefile; config.status: creating SU2_PY/pySU2/Makefile; config.status: executing depfiles commands. -------------------------------------------------------------------------; | ___ _ _ ___ |; | / __| | | |_ ) Release 6.1.0 'Falcon' |; | \__ \ |_| |/ / |; | |___/\___//___| Suite |; | |; -------------------------------------------------------------------------; | The current SU2 release has been coordinated by the |; | SU2 International Developers Society <www.su2devsociety.org> |; | with selected contributions from the open-source community. |; -------------------------------------------------------------------------; | The main research teams contributing to the current release are: |; | - Prof. Juan J. Alonso's group at Stanford University. |; | - Prof. Piero Colonna's group at Delft University of Technology. |; | - Prof. Nicolas R. Gauger's group at Kaiserslautern U. of Technology. |; | - Prof. Alberto Guardone's group at Polytechnic University of Milan. |; | - Prof. Rafael Palacios' group at Imperial College London. |; | - Prof. Vincent Terrapon's group at the University of Liege. |; | - Prof. Edwin van der Weide's group at the University,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/587:6779,Release,Release,6779,https://su2code.github.io,https://github.com/su2code/SU2/issues/587,1,['Release'],['Release']
Deployability,"or PRs were opened. #### What will this cost?; Nothing! The CodeQL engine will run inside GitHub Actions, making use of your [unlimited free compute minutes for public repositories](https://docs.github.com/en/actions/learn-github-actions/usage-limits-billing-and-administration#about-billing-for-github-actions). #### What types of problems does CodeQL find?; The CodeQL engine that powers GitHub code scanning is the exact same engine that powers LGTM.com. The exact set of rules has been tweaked slightly, but you should see almost exactly the same types of alerts as you were used to on LGTM.com: we’ve enabled the [`security-and-quality` query suite](https://docs.github.com/en/code-security/code-scanning/automatically-scanning-your-code-for-vulnerabilities-and-errors/configuring-code-scanning#using-queries-in-ql-packs) for you. #### How do I upgrade my CodeQL engine?; No need! New versions of the CodeQL analysis are constantly deployed on GitHub.com; your repository will automatically benefit from the most recently released version. #### The analysis doesn’t seem to be working; If you get an error in GitHub Actions that indicates that CodeQL wasn’t able to analyze your code, please [follow the instructions here](https://docs.github.com/en/code-security/code-scanning/automatically-scanning-your-code-for-vulnerabilities-and-errors/troubleshooting-the-codeql-workflow) to debug the analysis. #### How do I disable LGTM.com?; If you have LGTM’s automatic pull request analysis enabled, then you can [follow these steps to disable the LGTM pull request analysis](https://lgtm.com/help/lgtm/managing-automated-code-review#disabling-pr-integration). You don’t actually need to remove your repository from LGTM.com; it will automatically be removed in the next few months as part of the deprecation of LGTM.com ([more info here](https://github.blog/2022-08-15-the-next-step-for-lgtm-com-github-code-scanning/)). #### Which source code hosting platforms does code scanning support?; GitHub c",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1840:3395,release,released,3395,https://su2code.github.io,https://github.com/su2code/SU2/pull/1840,1,['release'],['released']
Deployability,"or my own late answer as well. I am trying to install now the SU2 6.2.0 Falcon. It is the one I particularly need for a program that calls this program for Aeroelastic analyses. I turned from Windows to Linux Manjaro as this program apparently only works with MSL on Windows.; My C++ compiler is not doing the job when I use the command ./configure for the parallel build. I have both cmake and gcc installed as compilers, but this is what happens:. [cid:ae2afe41-51cb-48da-a755-9fb054ea8537]. Which other C++ compilers can I use instead?. Thank you!. Best regards,. Avi; ________________________________; From: Pedro Gomes ***@***.***>; Sent: Tuesday, March 23, 2021 1:40 AM; To: su2code/SU2 ***@***.***>; Cc: Avish Suresh Bhambhani Wadhwani ***@***.***>; Author ***@***.***>; Subject: Re: [su2code/SU2] Microsoft MPI not read, WIndows 10 (#1233). Hi,; Apologies for the silence on our side, the truth is most of us do not run SU2 on Windows.; Even the binaries available with each release are created with cross compilation, not built on a Windows machine.; Usually (i.e. on Linux) when meson does not find something it is because pkg-config is not setup to look in the right directories, you can control this with the environment variable PKG_CONFIG_PATH.; If the serial compilation is working fine, and mpi is installed correctly, you can try using the windows equivalent of ""export CC=mpicc"" and ""export CXX=mpicxx"" before calling meson.py, and -Dcustom-mpi=true when calling it. —; You are receiving this because you authored the thread.; Reply to this email directly, view it on GitHub<https://eur01.safelinks.protection.outlook.com/?url=https%3A%2F%2Fgithub.com%2Fsu2code%2FSU2%2Fissues%2F1233%23issuecomment-804498319&data=04%7C01%7Cavibh096%40student.liu.se%7Ce640ef0977004a33b35608d8ed943870%7C913f18ec7f264c5fa816784fe9a58edd%7C0%7C0%7C637520568150583134%7CUnknown%7CTWFpbGZsb3d8eyJWIjoiMC4wLjAwMDAiLCJQIjoiV2luMzIiLCJBTiI6Ik1haWwiLCJXVCI6Mn0%3D%7C1000&sdata=%2BpP5qwT1upuD56kAXXvmDMqq%2B5",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1233#issuecomment-827688202:1031,release,release,1031,https://su2code.github.io,https://github.com/su2code/SU2/issues/1233#issuecomment-827688202,2,['release'],['release']
Deployability,"or the parallel build. I have both cmake and gcc installed as compilers, but this is what happens:. [cid:ae2afe41-51cb-48da-a755-9fb054ea8537]. Which other C++ compilers can I use instead?. Thank you!. Best regards,. Avi; ________________________________; From: Pedro Gomes ***@***.***>; Sent: Tuesday, March 23, 2021 1:40 AM; To: su2code/SU2 ***@***.***>; Cc: Avish Suresh Bhambhani Wadhwani ***@***.***>; Author ***@***.***>; Subject: Re: [su2code/SU2] Microsoft MPI not read, WIndows 10 (#1233). Hi,; Apologies for the silence on our side, the truth is most of us do not run SU2 on Windows.; Even the binaries available with each release are created with cross compilation, not built on a Windows machine.; Usually (i.e. on Linux) when meson does not find something it is because pkg-config is not setup to look in the right directories, you can control this with the environment variable PKG_CONFIG_PATH.; If the serial compilation is working fine, and mpi is installed correctly, you can try using the windows equivalent of ""export CC=mpicc"" and ""export CXX=mpicxx"" before calling meson.py, and -Dcustom-mpi=true when calling it. —; You are receiving this because you authored the thread.; Reply to this email directly, view it on GitHub<https://eur01.safelinks.protection.outlook.com/?url=https%3A%2F%2Fgithub.com%2Fsu2code%2FSU2%2Fissues%2F1233%23issuecomment-804498319&data=04%7C01%7Cavibh096%40student.liu.se%7Ce640ef0977004a33b35608d8ed943870%7C913f18ec7f264c5fa816784fe9a58edd%7C0%7C0%7C637520568150583134%7CUnknown%7CTWFpbGZsb3d8eyJWIjoiMC4wLjAwMDAiLCJQIjoiV2luMzIiLCJBTiI6Ik1haWwiLCJXVCI6Mn0%3D%7C1000&sdata=%2BpP5qwT1upuD56kAXXvmDMqq%2B5lTmsMaJ6%2Fgx7gHoyM%3D&reserved=0>, or unsubscribe<https://eur01.safelinks.protection.outlook.com/?url=https%3A%2F%2Fgithub.com%2Fnotifications%2Funsubscribe-auth%2FATHYUQAJN6RB6GCI7QDTE7LTE7POTANCNFSM4ZHARKPQ&data=04%7C01%7Cavibh096%40student.liu.se%7Ce640ef0977004a33b35608d8ed943870%7C913f18ec7f264c5fa816784fe9a58edd%7C0%7C0%7C637520568150593131",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1233#issuecomment-827688202:1362,install,installed,1362,https://su2code.github.io,https://github.com/su2code/SU2/issues/1233#issuecomment-827688202,2,['install'],['installed']
Deployability,"ore parallel partitioning.; Performing linear partitioning of the grid nodes.; 494258 interior elements before parallel partitioning.; Distributing elements across all ranks.; Calling the partitioning functions.; Getting into adjacency function.; Building the graph adjacency structure.; 5 surface markers.; 10222 boundary elements in index 0 (Marker = aircraft).; 9712 boundary elements in index 1 (Marker = farfield).; 3382 boundary elements in index 2 (Marker = inner_nearfield).; 19738 boundary elements in index 3 (Marker = symmetry).; 3382 boundary elements in index 4 (Marker = outer_nearfield).; Calling ParMETIS...; Traceback (most recent call last):; File ""/home/app/SU2/install/bin/parallel_computation.py"", line 110, in <module>; main(); File ""/home/app/SU2/install/bin/parallel_computation.py"", line 61, in main; options.compute ); File ""/home/app/SU2/install/bin/parallel_computation.py"", line 88, in parallel_computation; info = SU2.run.CFD(config) ; RuntimeError:; Command = mpirun -n 12 /home/app/SU2/install/bin/SU2_CFD config_CFD.cfg; SU2 process returned error '15'; [ubuntu:8553] *** An error occurred in MPI_Wait; [ubuntu:8553] *** on communicator MPI COMMUNICATOR 3 DUP FROM 0; [ubuntu:8553] *** MPI_ERR_TRUNCATE: message truncated; [ubuntu:8553] *** MPI_ERRORS_ARE_FATAL: your MPI job will now abort; --------------------------------------------------------------------------; mpirun has exited due to process rank 9 with PID 8554 on; node ubuntu exiting improperly. There are two reasons this could occur:. 1. this process did not call ""init"" before exiting, but others in; the job did. This can cause a job to hang indefinitely while it waits; for all processes to call ""init"". By rule, if one process calls ""init"",; then ALL processes must call ""init"" prior to termination. 2. this process called ""init"", but exited without calling ""finalize"".; By rule, all processes that call ""init"" MUST call ""finalize"" prior to; exiting or it will be considered an ""abnormal termination""",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/159#issuecomment-75485283:1185,install,install,1185,https://su2code.github.io,https://github.com/su2code/SU2/issues/159#issuecomment-75485283,1,['install'],['install']
Deployability,"oring duplicate libraries: '-lz'; [710/711] Linking target SU2_DOT/src/SU2_DOT; ld: warning: -undefined error is deprecated; ld: warning: ignoring duplicate libraries: '-lz'; [710/711] Installing files.; Installing SU2_CFD/src/SU2_CFD to /usr/local/bin; Traceback (most recent call last):; File ""/Users/vanessachung/Downloads/SU2-8.0.0/externals/meson/mesonbuild/mesonmain.py"", line 146, in run; return options.run_func(options); File ""/Users/vanessachung/Downloads/SU2-8.0.0/externals/meson/mesonbuild/minstall.py"", line 811, in run; installer.do_install(datafilename); File ""/Users/vanessachung/Downloads/SU2-8.0.0/externals/meson/mesonbuild/minstall.py"", line 587, in do_install; self.install_targets(d, dm, destdir, fullprefix); File ""/Users/vanessachung/Downloads/SU2-8.0.0/externals/meson/mesonbuild/minstall.py"", line 730, in install_targets; file_copied = self.do_copyfile(fname, outname, makedirs=(dm, outdir)); File ""/Users/vanessachung/Downloads/SU2-8.0.0/externals/meson/mesonbuild/minstall.py"", line 458, in do_copyfile; self.copy2(from_file, to_file); File ""/Users/vanessachung/Downloads/SU2-8.0.0/externals/meson/mesonbuild/minstall.py"", line 353, in copy2; shutil.copy2(*args, **kwargs); File ""/Library/Frameworks/Python.framework/Versions/3.9/lib/python3.9/shutil.py"", line 432, in copy2; copyfile(src, dst, follow_symlinks=follow_symlinks); File ""/Library/Frameworks/Python.framework/Versions/3.9/lib/python3.9/shutil.py"", line 261, in copyfile; with open(src, 'rb') as fsrc, open(dst, 'wb') as fdst:; PermissionError: [Errno 13] Permission denied: '/usr/local/bin/SU2_CFD'. ERROR: Unhandled python exception. This is a Meson bug and should be reported!; FAILED: meson-install ; /Library/Frameworks/Python.framework/Versions/3.9/bin/python3 /Users/vanessachung/Downloads/SU2-8.0.0/meson.py install --no-rebuild. **Desktop (please complete the following information):**; - OS: Mac M1; - C++ compiler and version: Apple clang version 15.0.0 (clang-1500.1.0.2.5); - SU2 Version: v8.0.0",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/2199:2840,install,install,2840,https://su2code.github.io,https://github.com/su2code/SU2/issues/2199,2,['install'],['install']
Deployability,"ork; > on our branch, which we're happy with. Some choices were arbitrary, and; > some choices were made based on our development environment. Those choices; > may be different for other groups. Here's what we have done:; >; > The unit testing framework is compiled and run using autotools. For more; > information on autotool's setup, see their documentation; > <https://www.gnu.org/software/automake/manual/html_node/Tests.html>.; > Since autotools is the build system for SU2, this involves minimal changes.; >; > Using automake, the build process for building unit tests becomes:; >; > '''; > ./bootstrap; > ./configure; > make; > make check; > '''; >; > We use Boost's unit testing framework; > <https://www.boost.org/doc/libs/1_70_0/libs/test/doc/html/index.html>.; > This provides a convenient set of macros for instatiating tests, grouping; > tests into suites, and running checks. This choice was based on what is; > available in our development setup.; >; > We have integrated our unit tests into our Travis CI regression testing.; > Every time we push commits or submit a pull request, the unit tests are run; > and checked.; > What is my vision for unit testing in SU2?; >; > I am *not* proposing that we start trying to get 100% code coverage with; > pre-existing code. That would not provide a good return on investment.; >; > Instead, I see people adding unit tests as they write new code and as they; > find bugs. For each new behavior added to SU2, tests are first added to; > document the related existing behavior. These tests serve to check that the; > existing behavior isn't damaged by the new code. Then new tests are added; > to prove that the new behavior is working correctly. For bug fixes, the; > process is simpler. A test is added to confirm that something is not; > behaving as expected. Then the code is fixed to make the test pass.; > What frameworks are available?; >; > For a unit testing framework, here are the most popular options, with the; > following pros and ",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/698#issuecomment-499278427:4538,integrat,integrated,4538,https://su2code.github.io,https://github.com/su2code/SU2/issues/698#issuecomment-499278427,2,['integrat'],['integrated']
Deployability,ory `build'; [298/299] Installing files.; Installing SU2_CFD/src/SU2_CFD to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing SU2_CFD/src/SU2_CFD_AD to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing SU2_CFD/src/SU2_CFD_DIRECTDIFF to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing SU2_DOT/src/SU2_DOT to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing SU2_DOT/src/SU2_DOT_AD to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing SU2_DEF/src/SU2_DEF to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing SU2_GEO/src/SU2_GEO to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing SU2_MSH/src/SU2_MSH to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing SU2_SOL/src/SU2_SOL to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing SU2_PY/pySU2/_pysu2.so to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing SU2_PY/pySU2/_pysu2ad.so to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/continuous_adjoint.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/compute_uncertainty.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/finite_differences.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/mesh_deformation.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/parallel_computation.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/parallel_computation_fsi.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/package_tests.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/shape_optimization.py to /home/slimshady/U,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/991#issuecomment-632032044:1598,Install,Installing,1598,https://su2code.github.io,https://github.com/su2code/SU2/issues/991#issuecomment-632032044,1,['Install'],['Installing']
Deployability,"oup at Polytechnic University of Milan. |; | - Prof. Rafael Palacios' group at Imperial College London. |; -------------------------------------------------------------------------; | Copyright (C) 2012-2015 SU2, the open-source CFD code. |; | |; | SU2 is free software; you can redistribute it and/or |; | modify it under the terms of the GNU Lesser General Public |; | License as published by the Free Software Foundation; either |; | version 2.1 of the License, or (at your option) any later version. |; | |; | SU2 is distributed in the hope that it will be useful, |; | but WITHOUT ANY WARRANTY; without even the implied warranty of |; | MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU |; | Lesser General Public License for more details. |; | |; | You should have received a copy of the GNU Lesser General Public |; | License along with SU2. If not, see <http://www.gnu.org/licenses/>. |; -------------------------------------------------------------------------. Build Configuration Summary:. Source code location: /home/antodech/SU2-4.1.0; Install location: /gshare/work/hpascalj/CodeSU2-master; Version: 4.1.0; C++ Compiler: g++; C Compiler: gcc; Preprocessor flags: ; Compiler flags: -g -O2; Linker flags: ; MPI support: no; Metis support: no; Parmetis support: no; TecIO support: no; CGNS support: yes; HDF5 support: no; SZIP support: no; ZLIB support: no; Mutation++ support: no; Jsoncpp support: no; LAPACK support: no; Datatype support:; double yes; complex no; codi_reverse no; codi_forward no. External includes: ; External libs: . Build SU2_CFD: yes; Build SU2_DOT: yes; Build SU2_MSH: yes; Build SU2_DEF: yes; Build SU2_SOL: yes; Build SU2_GEO: yes. Please be sure to add the $SU2_HOME and $SU2_RUN environment variables,; and update your $PATH (and $PYTHONPATH if applicable) with $SU2_RUN. Based on the input to this configuration, add these lines to your .bashrc file:. export SU2_RUN=""/gshare/work/hpascalj/CodeSU2-master/bin""; export SU2_HOME=""/home/antodech/SU",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/250#issuecomment-205167006:18415,Configurat,Configuration,18415,https://su2code.github.io,https://github.com/su2code/SU2/issues/250#issuecomment-205167006,1,['Configurat'],['Configuration']
Deployability,"oupled discrete adjoint sensitivity analysis. These bottlenecks include a lack of flexibility, modularity, and robustness of the computational tools, as well as the potential startup development costs needed to implement and verify the MDAO features. The purpose of this work is to facilitate the coupling of SU2 with external structural codes (e.g. NASTRAN, TACS, Airbus structural suite Lagrange) for gradient-based aerodynamic shape and structural sizing optimization using dedicated frameworks (e.g. OpenMDAO). . Startup development costs include the creation of modular tools that are _designed to be driven_ by another framework like OpenMDAO, rather than _to drive execution_ themselves. However, leveraging those MDAO frameworks assumes that software codes and modules to be coupled exist, have appropriate data structures, execution and query APIs, and are wrapped in Python for flexibility and ease of use. The proposed changes were motivated with the goal of making SU2 more modular and flexible, particularly to facilitate its integration into large-scale MDAO frameworks. For more details on the motivation, methodology, and verification & validation results, please refer to our [paper from AIAA Aviation 2022](https://doi.org/10.2514/6.2022-3358). . ## Proposed Changes; @aa-g and I propose the following code updates:. 1. Implementation of residual-based discrete adjoint solver as `CDiscAdjResidualSolver`; a. New config option: `KIND_DISC_ADJ` . 2. Enhancements and standardization of SU2 Python API; a. Add pysu2/pysu2ad methods; b. Standardize Python API and function names ; c. Overloaded getter/setter methods to make data handling more flexible. ## Related Work; These efforts are related to Issue #1262, Pull Request #1300, and Discussion [#1325](https://github.com/su2code/SU2/discussions/1325). . ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson)",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1750:1151,integrat,integration,1151,https://su2code.github.io,https://github.com/su2code/SU2/pull/1750,1,['integrat'],['integration']
Deployability,"output classes, we should find a common level of abstraction for all the different physical problems we might want to have. Right now there isn't even a unified way of specifying the kind of problem for each zone (what is fluid, what is solid etc) and the kind of coupling. This might also affect the actual implementation/restructuring since we somehow have to decide what driver we have to instantiate and so on. Hopefully we can gather all the people involved to have a discussion on that. Since we have a lot of people working in their branches on multizone problems we should tackle that better sooner than later. As Edwin already suggested, maybe it is a good idea to put some people in charge of organizing some of the bigger structural changes. Furthermore in case some people don't know, we have a slack channel for the dev team. I think that makes it easier to communicate, arrange meetings, discuss problems and ask questions. In case you need an invite, let me know, everybody who wants to contribute is welcome. Thanks for the discussion, I still think that communication is the key of success !. Tim. On Sep 13, 2017 10:30 AM, Edwin van der Weide <notifications@github.com> wrote:. Hi Tom,. Sounds like a plan then to have a look at CIntegration to see what we can do to generalize the time integration. I definitely want to help with this, but I don't think I am the appropriate person to take the lead, because I simply don't have a good overview of all the multi-physics options. Tom, are you willing to take the lead for this?. Furthermore, it is good to have other people involved as well, preferably with detailed knowledge of the different disciplines. Any volunteers?. Thanks,. Edwin. —; You are receiving this because you were mentioned.; Reply to this email directly, view it on GitHub<https://github.com/su2code/SU2/issues/437#issuecomment-329096830>, or mute the thread<https://github.com/notifications/unsubscribe-auth/AEtI5MkXdqhqPPMuaDziLuDRzWCJfYwrks5sh5KagaJpZM4PQ90s>.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/437#issuecomment-329146567:1347,integrat,integration,1347,https://su2code.github.io,https://github.com/su2code/SU2/issues/437#issuecomment-329146567,2,['integrat'],['integration']
Deployability,"ow match much better (although still diffreent) but both differ quite significantly from the X+1st ground truth. 10 Iter; ```; -4.926899175 -7.918963781 -8.148204896 1.135311148 -4.163756124; -4.926899175 -7.918963781 -8.148204896 1.135311148 -4.163756124; -4.926899175 -7.918963781 -8.148204896 1.135311148 -4.472390292; ```. 200 Iter; ```; -16.0186192 -18.98207162 -19.03351791 -2.806755076 -5.585674129; -16.00510692 -18.97843574 -19.03334954 -2.806755076 -5.585674129; -16.00510692 -18.97843574 -19.03334954 -2.806755076 -5.602103211; ```. 2000 Iter; ```; -16.50635481 -19.9763931 -20.42969871 -10.29288196 -14.21416876; -16.44211089 -19.76100653 -20.35694756 -10.23037364 -13.79321985; -16.44211089 -19.76100653 -20.35694756 -10.23037364 -13.79321861; ```. Note that for this specific 2000 Iter case the adjoint(-primal)-residual for the solid_T is worse compared to the ground truth X+1 ... which is the other way round for all other here seen cht cases (the ""no-coupling"" case shouldnt be counted for this I feel). **To Reproduce**; I post my setups later here. Cannot upload through vpn. I also use a simple bash script to do these comparisons for me. So the chance for manual errors is much lower. **Additional Notes**; A few things ahead, I run FGMRES+ILU for all configurations. No periodic boundaries at all. I went without turbulence for the cht cases to make it simpler. In the past and now we were able to see some good gradient validation against FD. So this issue is not super dramatic (although I am pretty annoyed by that) and I think I simply overlooked it in the past. In case there is sth unclear pls let me know, I'll will try to clarify asap. I still have some debugging to do but I appreciate all hints as I am currently more poking into the fog. . Thanks already , Tobi. **Desktop (please complete the following information):**; - OS: [RHELS 7.6 Maipo]; - C++ compiler and version: [g++ (GCC) 5.3.0]; - MPI implementation and version: [OpenMPI 3.1.6]; - SU2 Version: [#1394]",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1395:6345,configurat,configurations,6345,https://su2code.github.io,https://github.com/su2code/SU2/issues/1395,1,['configurat'],['configurations']
Deployability,"p towards an automatic identification of the aerodynamic transfer functions for state-space models.; * Some changes in the outputs; * The introduction of a test case for this feature. Regarding the last point, I am having issues trying to understand how to appropriately set up the regression. In particular, the fsi interface needs two additional packages to run (libspatialindex and petsc) with their counterparts in python (rtree and petsc4py). @pcarruscag suggested me to add the apt-get lines in the regression.yml file, but I am really not sure where to place them and I do not want to mess it up. ; Further, the files in the tutorial folder cannot be used for this scope. Indeed, in the tutorial, there are the cfg files that can be used to reproduce the same behaviour predicted by the theory of Theodorsen. However, in order to do so, some iterations of fluid only simulation must be performed before the coupling. This takes time so I prepared a test case where the two solvers (fluid and structure) are coupled from the beginning. Unfortunately, the mesh is ignored by git in the TestCase folder, so I am not sure how to make it run. I would really appreciate if you could help me with this last point.; ; ## Related Work; #1124 . ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1148:2102,update,updated,2102,https://su2code.github.io,https://github.com/su2code/SU2/pull/1148,1,['update'],['updated']
Deployability,"p-python's releases</a>.</em></p>; <blockquote>; <h2>v5.0.0</h2>; <h2>What's Changed</h2>; <p>In scope of this release, we update node version runtime from node16 to node20 (<a href=""https://redirect.github.com/actions/setup-python/pull/772"">actions/setup-python#772</a>). Besides, we update dependencies to the latest versions.</p>; <p><strong>Full Changelog</strong>: <a href=""https://github.com/actions/setup-python/compare/v4.8.0...v5.0.0"">https://github.com/actions/setup-python/compare/v4.8.0...v5.0.0</a></p>; <h2>v4.8.0</h2>; <h2>What's Changed</h2>; <p>In scope of this release we added support for GraalPy (<a href=""https://redirect.github.com/actions/setup-python/pull/694"">actions/setup-python#694</a>). You can use this snippet to set up GraalPy:</p>; <pre lang=""yaml""><code>steps:; - uses: actions/checkout@v4; - uses: actions/setup-python@v4 ; with:; python-version: 'graalpy-22.3' ; - run: python my_script.py; </code></pre>; <p>Besides, the release contains such changes as:</p>; <ul>; <li>Trim python version when reading from file by <a href=""https://github.com/FerranPares""><code>@​FerranPares</code></a> in <a href=""https://redirect.github.com/actions/setup-python/pull/628"">actions/setup-python#628</a></li>; <li>Use non-deprecated versions in examples by <a href=""https://github.com/jeffwidman""><code>@​jeffwidman</code></a> in <a href=""https://redirect.github.com/actions/setup-python/pull/724"">actions/setup-python#724</a></li>; <li>Change deprecation comment to past tense by <a href=""https://github.com/jeffwidman""><code>@​jeffwidman</code></a> in <a href=""https://redirect.github.com/actions/setup-python/pull/723"">actions/setup-python#723</a></li>; <li>Bump <code>@​babel/traverse</code> from 7.9.0 to 7.23.2 by <a href=""https://github.com/dependabot""><code>@​dependabot</code></a> in <a href=""https://redirect.github.com/actions/setup-python/pull/743"">actions/setup-python#743</a></li>; <li>advanced-usage.md: Encourage the use actions/checkout@v4 by <a href=""https://gi",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2233:1178,release,release,1178,https://su2code.github.io,https://github.com/su2code/SU2/pull/2233,1,['release'],['release']
Deployability,"p>; </blockquote>; </details>; <details>; <summary>Commits</summary>; <ul>; <li><a href=""https://github.com/actions/upload-release-asset/commit/e8f9f06c4b078e705bd2ea027f0926603fc9b4d5""><code>e8f9f06</code></a> Merge pull request <a href=""https://github-redirect.dependabot.com/actions/upload-release-asset/issues/27"">#27</a> from actions/IAmHughes/add-automated-versioning</li>; <li><a href=""https://github.com/actions/upload-release-asset/commit/14187540b829095dbe6f33eb1b166503318e9ceb""><code>1418754</code></a> Add versioning action to automatically slide major versions with releases</li>; <li><a href=""https://github.com/actions/upload-release-asset/commit/7d8fb6c931cb341bda0f898a0d2191cf54abc69a""><code>7d8fb6c</code></a> Merge pull request <a href=""https://github-redirect.dependabot.com/actions/upload-release-asset/issues/6"">#6</a> from actions/IAmHughes/fix-link-to-license</li>; <li><a href=""https://github.com/actions/upload-release-asset/commit/c53f077c5d8c19236718abc4697a59634ef534cf""><code>c53f077</code></a> Fix link to LICENSE</li>; <li><a href=""https://github.com/actions/upload-release-asset/commit/72e8a5ef036620fb7afff8bbb8f9e78910c7ccbc""><code>72e8a5e</code></a> Merge pull request <a href=""https://github-redirect.dependabot.com/actions/upload-release-asset/issues/5"">#5</a> from cesperanc/documentation-update</li>; <li><a href=""https://github.com/actions/upload-release-asset/commit/bf2a7fbecfaaaa29f7819c650ad302e52f68238e""><code>bf2a7fb</code></a> Update example to use the fixed version</li>; <li>See full diff in <a href=""https://github.com/actions/upload-release-asset/compare/v1.0.1...v1.0.2"">compare view</a></li>; </ul>; </details>; <br />. [![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=actions/upload-release-asset&package-manager=github_actions&previous-version=1.0.1&new-version=1.0.2)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#a",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1737:1545,release,release-asset,1545,https://su2code.github.io,https://github.com/su2code/SU2/pull/1737,3,['release'],['release-asset']
Deployability,"pare view</a></li>; </ul>; </details>; <br />. [![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=actions/checkout&package-manager=github_actions&previous-version=3&new-version=4)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores). Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`. [//]: # (dependabot-automerge-start); [//]: # (dependabot-automerge-end). ---. <details>; <summary>Dependabot commands and options</summary>; <br />. You can trigger Dependabot actions by commenting on this PR:; - `@dependabot rebase` will rebase this PR; - `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it; - `@dependabot merge` will merge this PR after your CI passes on it; - `@dependabot squash and merge` will squash and merge this PR after your CI passes on it; - `@dependabot cancel merge` will cancel a previously requested merge and block automerging; - `@dependabot reopen` will reopen this PR if it is closed; - `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually; - `@dependabot show <dependency name> ignore conditions` will show all of the ignore conditions of the specified dependency; - `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself); - `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself); - `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself). </details>",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2126:12142,upgrade,upgrade,12142,https://su2code.github.io,https://github.com/su2code/SU2/pull/2126,6,['upgrade'],['upgrade']
Deployability,"pare/v3...v4.0.0"">https://github.com/actions/upload-artifact/compare/v3...v4.0.0</a></p>; <h2>v3.1.3</h2>; <h2>What's Changed</h2>; <ul>; <li>chore(github): remove trailing whitespaces by <a href=""https://github.com/ljmf00""><code>@​ljmf00</code></a> in <a href=""https://redirect.github.com/actions/upload-artifact/pull/313"">actions/upload-artifact#313</a></li>; <li>Bump <code>@​actions/artifact</code> version to v1.1.2 by <a href=""https://github.com/bethanyj28""><code>@​bethanyj28</code></a> in <a href=""https://redirect.github.com/actions/upload-artifact/pull/436"">actions/upload-artifact#436</a></li>; </ul>; <p><strong>Full Changelog</strong>: <a href=""https://github.com/actions/upload-artifact/compare/v3...v3.1.3"">https://github.com/actions/upload-artifact/compare/v3...v3.1.3</a></p>; <h2>v3.1.2</h2>; <ul>; <li>Update all <code>@actions/*</code> NPM packages to their latest versions- <a href=""https://redirect.github.com/actions/upload-artifact/issues/374"">#374</a></li>; <li>Update all dev dependencies to their most recent versions - <a href=""https://redirect.github.com/actions/upload-artifact/issues/375"">#375</a></li>; </ul>; <h2>v3.1.1</h2>; <ul>; <li>Update actions/core package to latest version to remove <code>set-output</code> deprecation warning <a href=""https://redirect.github.com/actions/upload-artifact/issues/351"">#351</a></li>; </ul>; <h2>v3.1.0</h2>; <h2>What's Changed</h2>; <ul>; <li>Bump <code>@​actions/artifact</code> to v1.1.0 (<a href=""https://redirect.github.com/actions/upload-artifact/pull/327"">actions/upload-artifact#327</a>); <ul>; <li>Adds checksum headers on artifact upload (<a href=""https://redirect.github.com/actions/toolkit/pull/1095"">actions/toolkit#1095</a>) (<a href=""https://redirect.github.com/actions/toolkit/pull/1063"">actions/toolkit#1063</a>)</li>; </ul>; </li>; </ul>; </blockquote>; </details>; <details>; <summary>Commits</summary>; <ul>; <li><a href=""https://github.com/actions/upload-artifact/commit/5d5d22a31266ced268874388b861e4b58bb5c",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2231:2763,Update,Update,2763,https://su2code.github.io,https://github.com/su2code/SU2/pull/2231,1,['Update'],['Update']
Deployability,"parmetis.a externals/tecio/teciompisrc/libteciompi.a /usr/lib64/libpython3.10.so /usr/lib64/libz.a -lm -ldl -Wl,-rpath -Wl,/usr/lib64/openmpi/lib -Wl,--enable-new-dtags /usr/lib64/openmpi/lib/libmpi.so -Wl,-rpath -Wl,/usr/lib64/openmpi/lib -Wl,--enable-new-dtags /usr/lib64/openmpi/lib/libmpi_cxx.so -Wl,--start-group /opt/intel/oneapi/mkl/latest/lib/pkgconfig/../../lib/intel64/libmkl_intel_lp64.a /opt/intel/oneapi/mkl/latest/lib/pkgconfig/../../lib/intel64/libmkl_sequential.a /opt/intel/oneapi/mkl/latest/lib/pkgconfig/../../lib/intel64/libmkl_core.a -Wl,--end-group -lpthread -Wl,--end-group -Wl,-rpath -Wl,/usr/lib64/openmpi/lib -Wl,--enable-new-dtags -Wl,-rpath -Wl,/usr/lib64/openmpi/lib -Wl,--enable-new-dtags -Wl,--start-group -Wl,--end-group -Wl,-rpath -Wl,/usr/lib64/openmpi/lib -Wl,--enable-new-dtags -Wl,-rpath -Wl,/usr/lib64/openmpi/lib -Wl,--enable-new-dtags -Wl,-rpath -Wl,/usr/lib64/openmpi/lib -Wl,--enable-new-dtags -Wl,-rpath -Wl,/usr/lib64/openmpi/lib -Wl,--enable-new-dtags -Wl,-rpath -Wl,/usr/lib64/openmpi/lib -Wl,--enable-new-dtags -Wl,-rpath -Wl,/usr/lib64/openmpi/lib -Wl,--enable-new-dtags -Wl,-rpath -Wl,/usr/lib64/openmpi/lib -Wl,--enable-new-dtags -Wl,-rpath -Wl,/usr/lib64/openmpi/lib -Wl,--enable-new-dtags; /usr/bin/ld: /usr/lib64/libz.a(deflate.o): warning: relocation against `z_errmsg' in read-only section `.text'; /usr/bin/ld: /usr/lib64/libz.a(zutil.o): relocation R_X86_64_PC32 against symbol `z_errmsg' can not be used when making a shared object; recompile with -fPIC; /usr/bin/ld: final link failed: bad value; collect2: error: ld returned 1 exit status; ninja: build stopped: subcommand failed. ```. I do use the -fPIC option for the compilation process but even if I remove it from the configuration execution line I still get the same linking error. **Desktop (please complete the following information):**. - OS: Linux (Fedora 35); - C++ 11.2.1 20220127 (Red Hat 11.2.1-9) (GCC); - MPI implementation and version: OpenMPI v4.1.1; - SU2 Version: v7.3.0",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1568:16050,configurat,configuration,16050,https://su2code.github.io,https://github.com/su2code/SU2/issues/1568,1,['configurat'],['configuration']
Deployability,"pd.read_csv(config[""CONV_FILENAME""]); 164 if auto_delete:; 165 delete_output_files(config, config_path, num_zones). File ~/miniforge3/envs/cadquery/lib/python3.11/site-packages/pandas/io/parsers/readers.py:1024, in read_csv(filepath_or_buffer, sep, delimiter, header, names, index_col, usecols, dtype, engine, converters, true_values, false_values, skipinitialspace, skiprows, skipfooter, nrows, na_values, keep_default_na, na_filter, verbose, skip_blank_lines, parse_dates, infer_datetime_format, keep_date_col, date_parser, date_format, dayfirst, cache_dates, iterator, chunksize, compression, thousands, decimal, lineterminator, quotechar, quoting, doublequote, escapechar, comment, encoding, encoding_errors, dialect, on_bad_lines, delim_whitespace, low_memory, memory_map, float_precision, storage_options, dtype_backend); 1011 kwds_defaults = _refine_defaults_read(; 1012 dialect,; 1013 delimiter,; (...); 1020 dtype_backend=dtype_backend,; 1021 ); 1022 kwds.update(kwds_defaults); -> 1024 return _read(filepath_or_buffer, kwds). File ~/miniforge3/envs/cadquery/lib/python3.11/site-packages/pandas/io/parsers/readers.py:618, in _read(filepath_or_buffer, kwds); 615 _validate_names(kwds.get(""names"", None)); 617 # Create the parser.; --> 618 parser = TextFileReader(filepath_or_buffer, **kwds); 620 if chunksize or iterator:; 621 return parser. File ~/miniforge3/envs/cadquery/lib/python3.11/site-packages/pandas/io/parsers/readers.py:1618, in TextFileReader.__init__(self, f, engine, **kwds); 1615 self.options[""has_index_names""] = kwds[""has_index_names""]; 1617 self.handles: IOHandles | None = None; -> 1618 self._engine = self._make_engine(f, self.engine). File ~/miniforge3/envs/cadquery/lib/python3.11/site-packages/pandas/io/parsers/readers.py:1878, in TextFileReader._make_engine(self, f, engine); 1876 if ""b"" not in mode:; 1877 mode += ""b""; -> 1878 self.handles = get_handle(; 1879 f,; 1880 mode,; 1881 encoding=self.options.get(""encoding"", None),; 1882 compression=self.options.get(""com",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/2204:4641,update,update,4641,https://su2code.github.io,https://github.com/su2code/SU2/issues/2204,1,['update'],['update']
Deployability,"pecasts. Still tracking down a memory problem...; - Critical bug fix for vtxdist array.; - Partial fix; - More MPI improvements.; - Fixing a bug in SU2_DEF; - Updated BC_ActDisk_Boundary (MPI); - Merge remote-tracking branch 'upstream/develop' into develop; - changing solidboundary setting to be heatflux OR euler etc instead of AND, also working on doxygen documentation; - Dynamic allocation for some marker-related arrays.; - visualize part taken out to match upstream/dev; - Collection of improvements; - Release 3.2.7; - Fixing LOW_MEMORY_OUTPUT; - Updated LOW_MEMORY_OUTPUT option; - Updated configure.ac; - After autoconf; - Updated MPI; - Updated BC_Engine_Exhaust and BC_Engine_Bleed; - Small change; - Fixing subsonic engine intake option; - Small output change; - Added output_su2.cpp; - Updated Engine BC; - Working on Engine BCs; - Added Supersonic Outlet BC; - Minor change; - Merge remote-tracking branch 'upstream/develop' into develop; - adjoints, solid boundary, doxygen in config; - continued fixing; - re-added adjoint bc mods; - re-adding avg outlet pressure (static pressure adjoint); - re-adding avg outlet pressure (static pressure adjoint); - Merge branch 'temp' of https://github.com/hlkline/SU2 into temp; - continued fixing; - average total pressure and fixes to avg outlet pressure; - adding stagnation pressure output to SU2_DOT; - Merge pull request #146 from hlkline/temp; - Updated Entropy fix (now it is active).; - Another change in BC_Engine_Exhaust; - Updated CGNS in parallel; - Added runtime file; - Small typo; - Adjustment of the Entropy fix coefficient; - Bug in SU2_GEO; - Debug version with print statements.; - Updated release 3.2.7.1; - Small change; - Updated config file; - Code update; - MPI Status and Request fix.; - Another MPI Status/Request fix.; - Actuator disk update.; - Small update; - Initial implementation of pyramids and prisms for Tecplot binary.; - Small fix for Tecplot binaries. Closes #56. Closes #57.; - Removed extra allocation re",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/174#issuecomment-101443812:3198,Update,Updated,3198,https://su2code.github.io,https://github.com/su2code/SU2/pull/174#issuecomment-101443812,1,['Update'],['Updated']
Deployability,"pecifically from the Testcases I tried:; ; - `turbomachinery/APU_turbocharger/Jones_rst.cfg`; - `sliding_interface/rotating_cylinders/rot_cylinders_WA.cfg` (I saw a regression test failing for @economon which I was able to reproduce). I did some debugging and I think the code is wrong in `CBaseLineSolver::LoadRestart(...)` in solver_structure.cpp starting in line 3925. Inside that routine the `geometry` container is called as `geometry[iZone]` to address the final `C(Physical)Geometry` object. I think that the addressable level is the instance level i.e. it should be `geometry[iInst]`. ; As the Jones_rst case has two zones but only one instance the object `geometry[iZone=1]` in LoadRestart refers to what is `geometry_container[iZone=1][iInst=1]` in SU2_SOL.cpp - which does not exists and should be `geometry_container[iZone=1][iInst=0]`. Unfortunately it does not fail there directly for as it reaches (I guess) valid memory and simply interprets what it finds which leads to wrong evaluation of e.g. `GetnDim()=2376` or so. . I extracted a patch (apply with `patch -p1 < _patchfile_ ` in the root of the code directory) for the current develop branch which fixes the segfault problem for the above mentioned cases but I don't know whether it works correctly if multiple Instances are computed. ; [SU2_SOL_segfault_patch.txt](https://github.com/su2code/SU2/files/2328459/SU2_SOL_segfault_patch.txt) (github does not accept *.patch files...). Is there a testcase which covers multiple zones and multiple instances. At best with nZones!=nInstances? Can somebody confirm that this is actually a bug and if the patch fixes it? I probably don't know if it occurs somewhere else, so if somebody thinks their problems are related let me know. It is no problem to do a PR if I get some feedback. The (possible) bug was introduced here https://github.com/su2code/SU2/commit/1a75ebd0343694977a98c945833928bcc96932c1 . I hope my explanation of the bug above is somewhat understandable :); Cheers Tobi",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/568:1169,patch,patch,1169,https://su2code.github.io,https://github.com/su2code/SU2/issues/568,4,['patch'],['patch']
Deployability,"pers/sobolev.pdf); This is done by solving an elliptic PDE with the sensitivities, i.e., ( e1 Id - e2 Laplace) delta_x = - dF / dx, with different weights e1, e2. Inserting the sensitivities from the discrete adjoint solver for (dF / dx) leads to the gradient in a Sobolev space.; The method can be extended to incorporate the parameterization of the mesh cells x=M(p) with design values p, [see here.](https://arxiv.org/abs/2109.15279) Using the projected gradient w.r.t. the design values the systems takes the form; (dM/dp)^T (e1 Id - e2 Laplace) (dM/dp) = - dF/dp. Such treatment can help prevent noise in the derivative computation and leads to smoother design updates. Especially, when working in a One-Shot optimization context.; Here the optimization is done with inexact function values and gradients, i.e., the flow and adjoint solvers are only partially converged between design updates. For this setting simple gradient descent with too large update steps will not work, since a few flow iterations are not enough to recover a solution from the restart file from the last optimization step.; See the graphic below for drag minimization of a NACA 0012 airfoil with constant lift, where the Sobolev solver for the gradient leads to smoother deformations and better optimization.; ![pullrequest1](https://user-images.githubusercontent.com/16785869/143250126-e5bdd360-e265-40ca-9d24-5811ecbb759c.jpg). Application is done as a post-processing step in the SU2_DOT_AD executable.; The new solver constructs the necessary operator and solves it using the features of the finite element implementation in SU2. For this, it uses the same elements as the FEA solver but extends the definitions of the Gauss quadrature to be second order.; It can operate in two different modes:. 1) The smoothing can be applied to the mesh sensitivities, either in the complete mesh or only design boundaries. See the picture below for an example of this.; ![PicforSU2](https://user-images.githubusercontent.com/167",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1446:1264,update,update,1264,https://su2code.github.io,https://github.com/su2code/SU2/pull/1446,1,['update'],['update']
Deployability,"piler.; There is a problem when trying to link with the system's libz library. ```; /usr/bin/ld: /usr/lib64/libz.a(deflate.o): warning: relocation against `z_errmsg' in read-only section `.text'; /usr/bin/ld: /usr/lib64/libz.a(zutil.o): relocation R_X86_64_PC32 against symbol `z_errmsg' can not be used when making a shared object; recompile with -fPIC; /usr/bin/ld: final link failed: bad value; collect2: error: ld returned 1 exit status. ```; **To Reproduce**. I configured the source code with the commands:. ```; module load mkl/latest; module load mpi/openmpi-x86_64. CFLAGS=""-mtune=native -march=native -fPIC"" CXXFLAGS=""-mtune=native -march=native -fPIC"" LDFLAGS=""-fPIC"" CC=$(which mpiicc) CC=$(which mpicc) CXX=$(which mpicxx) ./meson.py --prefix=/home/panos/Applications/SU2 --optimization=3 -Denable-cgns=true -Denable-mkl=true -Denable-autodiff=true -Denable-directdiff=true -Denable-pywrapper=true -Dwith-mpi=enabled build. Message: -------------------------------------------------------------------------; | ___ _ _ ___ |; | / __| | | |_ ) Release 7.3.0 ""Blackbird"" |; | \__ \ |_| |/ / |; | |___/\___//___| Meson Configuration Summary |; | |; -------------------------------------------------------------------------. Option Value; ---------------------; TecIO: true; CGNS: true; AD (reverse): true; AD (forward): true; Python Wrapper: true; Intel-MKL: true; OpenBlas: false; PaStiX: false; Mixed Float: false; libROM: false. Please be sure to add the $SU2_HOME and $SU2_RUN environment variables,; and update your $PATH (and $PYTHONPATH if applicable) with $SU2_RUN. Based on the input to this configuration, add these lines to your .bashrc file:. export SU2_RUN=/home/panos/Applications/SU2/bin; export SU2_HOME=/home/panos/Development/SU2/SU2_SRC; export PATH=$PATH:$SU2_RUN; export PYTHONPATH=$PYTHONPATH:$SU2_RUN. Use './ninja -C build install' to compile and install SU2. Build targets in project: 25. SU2 7.3.0 ""Blackbird"". User defined options; optimization : 3; prefix : /home/",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1568:1161,Release,Release,1161,https://su2code.github.io,https://github.com/su2code/SU2/issues/1568,1,['Release'],['Release']
Deployability,"pp.o SU2_CFD/src/libSU2core.a.p/iteration_CFEAIteration.cpp.o SU2_CFD/src/libSU2core.a.p/iteration_CFEMFluidIteration.cpp.o SU2_CFD/src/libSU2core.a.p/iteration_CFluidIteration.cpp.o SU2_CFD/src/libSU2core.a.p/iteration_CHeatIteration.cpp.o SU2_CFD/src/libSU2core.a.p/iteration_CTurboIteration.cpp.o SU2_CFD/src/libSU2core.a.p/limiters_CLimiterDetails.cpp.o ; -Wl,--as-needed -Wl,--no-undefined -shared -fPIC -Wl,--start-group -Wl,-soname,_pysu2.so -Wl,-rpath,/usr/local/lib -Wl,-rpath-link,/usr/local/lib Common/src/libSU2Common.a externals/cgns/libcgns.a externals/cgns/hdf5/libsu2hdf5.a ; externals/metis/libmetis.a externals/parmetis/libparmetis.a externals/tecio/teciompisrc/libteciompi.a /usr/lib/gcc/x86_64-linux-gnu/9/../../../x86_64-linux-gnu/libpython3.8.so /usr/lib/x86_64-linux-gnu/libz.a -lm -ldl -Wl,-rpath -Wl,/usr/local/lib -Wl,--enable-new-dtags /usr/local/lib/libmpi.so -Wl,--end-group -Wl,-rpath -Wl,/usr/local/lib -Wl,--enable-new-dtags -Wl,-rpath -Wl,/usr/local/lib -Wl,--enable-new-dtags -Wl,-rpath -Wl,/usr/local/lib -Wl,--enable-new-dtags -Wl,-rpath -Wl,/usr/local/lib -Wl,--enable-new-dtags -Wl,-rpath -Wl,/usr/local/lib -Wl,--enable-new-dtags -Wl,-rpath -Wl,/usr/local/lib -Wl,--enable-new-dtags -Wl,-rpath -Wl,/usr/local/lib -Wl,--enable-new-dtags -Wl,-rpath -Wl,/usr/local/lib -Wl,--enable-new-dtags -Wl,-rpath -Wl,/usr/local/lib -Wl,--enable-new-dtags -Wl,-rpath -Wl,/usr/local/lib -Wl,--enable-new-dtags -Wl,-rpath -Wl,/usr/local/lib -Wl,--enable-new-dtags; /usr/bin/ld: /usr/lib/x86_64-linux-gnu/libz.a(deflate.o): relocation R_X86_64_PC32 against symbol `z_errmsg' can not be used when making a shared object; recompile with -fPIC. /usr/bin/ld: final link failed: bad value; collect2: error: ld returned 1 exit status; [1352/1355] Linking target SU2_DOT/src/SU2_DOT_AD; ninja: build stopped: subcommand failed.; ```. I am not sure what is the bug here. I have seen some reports on the Python 3.8 update related swig issue. I am not sure if this is related to that bug.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1605:13283,update,update,13283,https://su2code.github.io,https://github.com/su2code/SU2/issues/1605,1,['update'],['update']
Deployability,"pre- and post- update are referring to restart files created before applying this updated file and restart files created by this updated file, respectively.; When I try to run a restart file, the output proceeds to ""Initialize Jacobian structure (SST model)."" and then does not progress any further.; The restart files were created in the same folder.; Copies of the files were made in between the runs, but otherwise, I believe it still qualifies as back-to-back. (For the post-updated file; the pre-updated restart case is not ""back-to-back"" in a strict interpretation as the software was updated)",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1342#issuecomment-891988465:15,update,update,15,https://su2code.github.io,https://github.com/su2code/SU2/pull/1342#issuecomment-891988465,6,['update'],"['update', 'updated']"
Deployability,pressure (static pressure adjoint); - re-adding avg outlet pressure (static pressure adjoint); - Merge branch 'temp' of https://github.com/hlkline/SU2 into temp; - continued fixing; - average total pressure and fixes to avg outlet pressure; - adding stagnation pressure output to SU2_DOT; - Merge pull request #146 from hlkline/temp; - Updated Entropy fix (now it is active).; - Another change in BC_Engine_Exhaust; - Updated CGNS in parallel; - Added runtime file; - Small typo; - Adjustment of the Entropy fix coefficient; - Bug in SU2_GEO; - Debug version with print statements.; - Updated release 3.2.7.1; - Small change; - Updated config file; - Code update; - MPI Status and Request fix.; - Another MPI Status/Request fix.; - Actuator disk update.; - Small update; - Initial implementation of pyramids and prisms for Tecplot binary.; - Small fix for Tecplot binaries. Closes #56. Closes #57.; - Removed extra allocation related to markers during partitioning.; - Non-working version; - Small update; - Updated memory deallocation.; - Merge branch 'feature_MarkerMax' into develop; - Time and date in the header.; - Small fix to the latest commit.; - Simplification of entropy correction; - Critical stability improvement.; - Minor release 3.2.7.2; - Fixing issues to run with the latest intel compiler; - Fix for Tecplot binary solutions for unsteady flows. Fixes #150.; - Now SU2 should work with the latest version of the Intel compiler.; - Merge branch 'develop' of https://github.com/su2code/SU2 into develop; - Working on the O3 stuff; - Small change.; - Add another check to improve stability.; - Collection of improvements.; - Updated actuator disk; - Merge branch 'develop' of https://github.com/su2code/SU2 into develop; - Preliminary implementation of the Neg SA; - Minor updates; - Preliminary implementation of the Negative SA; - Bug fixing; - Fixed memory issued for very large meshes with ParMETIS.; - Clear evaluation of Vorticity and StrainMag; - Viscous limiter; - Updated RELAX,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/174#issuecomment-101443812:4468,update,update,4468,https://su2code.github.io,https://github.com/su2code/SU2/pull/174#issuecomment-101443812,3,"['Update', 'update']","['Updated', 'update']"
Deployability,prisms for Tecplot binary.; - Small fix for Tecplot binaries. Closes #56. Closes #57.; - Removed extra allocation related to markers during partitioning.; - Non-working version; - Small update; - Updated memory deallocation.; - Merge branch 'feature_MarkerMax' into develop; - Time and date in the header.; - Small fix to the latest commit.; - Simplification of entropy correction; - Critical stability improvement.; - Minor release 3.2.7.2; - Fixing issues to run with the latest intel compiler; - Fix for Tecplot binary solutions for unsteady flows. Fixes #150.; - Now SU2 should work with the latest version of the Intel compiler.; - Merge branch 'develop' of https://github.com/su2code/SU2 into develop; - Working on the O3 stuff; - Small change.; - Add another check to improve stability.; - Collection of improvements.; - Updated actuator disk; - Merge branch 'develop' of https://github.com/su2code/SU2 into develop; - Preliminary implementation of the Neg SA; - Minor updates; - Preliminary implementation of the Negative SA; - Bug fixing; - Fixed memory issued for very large meshes with ParMETIS.; - Clear evaluation of Vorticity and StrainMag; - Viscous limiter; - Updated RELAXATION_FACTOR; - RANS MG; - Partial fix to no MPI output; - Updated I/O; - Updated Adapt CFL; - Updated Adaptive CFL number; - Release 3.2.8; - Updated SetCFL_Number; - Small update; - Small change; - Small adjustments; - Minor changes; - Updated release 3.2.8; - MPI disabled by default in build. Added --enable-mpi flag to configure.; - Merged the ParMETIS implementation. Updated the build files.; - bootstrap; - Started parallel CGNS reader.; - Memory fix.; - Minor change; - Merge branch 'develop' of https://github.com/su2code/SU2 into develop; - Updated binaries; - Small change to configure.ac. Bootstrap.; - Small change; - Cleaning the code; - Updated grid deformation subroutine; - Fixing the mesh deformation; - Updated SU2_MSH; - Bug fixing; - Initial implementation of parallel CGNS reader. Works o,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/174#issuecomment-101443812:5258,update,updates,5258,https://su2code.github.io,https://github.com/su2code/SU2/pull/174#issuecomment-101443812,2,['update'],['updates']
Deployability,"process is very helpful and cmake is definitely becoming a standard. Best,. Juan. On Nov 10, 2019, at 11:24 AM, Daumantas Kavolis <notifications@github.com> wrote:. ﻿; Proposed Changes. Added CMake build support for SU2. With this, many popular IDEs will be able to use SU2 as a project with minimal setup. CMake also enables to add dependencies more easily since most libraries have CMake support. vcpkg is great for the libraries available there. SU2 CMake has the same build options as autotools but uses CMake to find system libraries and compilers (MKL, Mutationpp, MPI and Python currently). No longer need to specify paths to compilers/libraries if they are in standard locations. In addition, compile flags can be modified from CMake. There is no need to use preconfigure.py anymore since downloading/unpacking is handled by CMake and is system-agnostic. At the moment, all library targets are static but that could be easily changed to be configurable from CMake. The installation directory is ${CMAKE_PREFIX_PATH}/bin. Similarly to autotools, some build options are disabled if built with Codi forward/reverse datatypes or without MPI. Note that SWIG fails to compile pySU2ad with Nothing known about namespace 'medi' in Common/include/mpi_structure.hpp:57 without -includeall SWIG option but then it takes forever to generate the wrapper (more than 15 minutes on my machine, stopped early). I suggest removing using namespace declarations and either importing used symbols explicitly with using or prepending namespace name, clang-tidy warns against them by default and it makes the code clearer. SU2 CMake options are:. * Build modules:; * SU2_BUILD_CFD: ON|OFF; * SU2_BUILD_DEF: ON|OFF, disabled when building with Codi; * SU2_BUILD_DOT: ON|OFF, disabled when building with Codi forward; * SU2_BUILD_GEO: ON|OFF, disabled when building with Codi; * SU2_BUILD_MSH: ON|OFF, disabled when building with Codi; * SU2_BUILD_PY_WRAPPER: ON|OFF, disabled when building with Codi forward; * SU2_B",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/814#issuecomment-552242380:1049,install,installation,1049,https://su2code.github.io,https://github.com/su2code/SU2/pull/814#issuecomment-552242380,2,['install'],['installation']
Deployability,"ps in reducing numerical diffusion offered by the scheme. Results from the literature shows that using the vorticity confinement technique, a better resolution is achieved in the problems like flow behind bluff bodies, rotors, wings etc. References. J. Steinhoff and D. Underhill, ``Modification of the euler equations for vorticity confinement: Application to the computation of interacting vortex rings,'' Physics of Fluids, vol.6, no.8, pp. 2738--2744, 1994. https://doi.org/10.1063/1.868164. D. A. Caughey and M. M. Hafez, Frontiers of Computational Fluid Dynamics 2006. WORLD SCIENTIFIC, 2005. https://www.worldscientific.com/doi/abs/10.1142/5963. R. Loehner and C. Yang, Vorticity confinement on unstructured grids, 40th AIAA Aerospace Sciences Meeting &amp; Exhibit, 2002. [Online]. Available: https://arc. aiaa.org/doi/abs/10.2514/6.2002-137. A. Povitsky and K. C. Pierson, ``Vorticity confinement applied to accurate prediction of convection of wing tip vortices and induced drag,'' International Journal of Computational Fluid Dynamics, vol. 35, no. 3, pp. 143--156, 2021. https://doi.org/10.1080/10618562.2020.1856822. ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [ ] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1854:2593,update,updated,2593,https://su2code.github.io,https://github.com/su2code/SU2/pull/1854,1,['update'],['updated']
Deployability,"ps://redirect.github.com/actions/checkout/pull/1196"">Fix: Checkout fail in self-hosted runners when faulty submodule are checked-in</a></li>; <li><a href=""https://redirect.github.com/actions/checkout/pull/1287"">Fix typos found by codespell</a></li>; <li><a href=""https://redirect.github.com/actions/checkout/pull/1369"">Add support for sparse checkouts</a></li>; </ul>; <h2>v3.5.2</h2>; <ul>; <li><a href=""https://redirect.github.com/actions/checkout/pull/1289"">Fix api endpoint for GHES</a></li>; </ul>; <h2>v3.5.1</h2>; <ul>; <li><a href=""https://redirect.github.com/actions/checkout/pull/1246"">Fix slow checkout on Windows</a></li>; </ul>; <h2>v3.5.0</h2>; <ul>; <li><a href=""https://redirect.github.com/actions/checkout/pull/1237"">Add new public key for known_hosts</a></li>; </ul>; <h2>v3.4.0</h2>; <ul>; <li><a href=""https://redirect.github.com/actions/checkout/pull/1209"">Upgrade codeql actions to v2</a></li>; <li><a href=""https://redirect.github.com/actions/checkout/pull/1210"">Upgrade dependencies</a></li>; <li><a href=""https://redirect.github.com/actions/checkout/pull/1225"">Upgrade <code>@​actions/io</code></a></li>; </ul>; <h2>v3.3.0</h2>; <ul>; <li><a href=""https://redirect.github.com/actions/checkout/pull/1045"">Implement branch list using callbacks from exec function</a></li>; <li><a href=""https://redirect.github.com/actions/checkout/pull/1050"">Add in explicit reference to private checkout options</a></li>; <li>[Fix comment typos (that got added in <a href=""https://redirect.github.com/actions/checkout/issues/770"">#770</a>)](<a href=""https://redirect.github.com/actions/checkout/pull/1057"">actions/checkout#1057</a>)</li>; </ul>; <h2>v3.2.0</h2>; <ul>; <li><a href=""https://redirect.github.com/actions/checkout/pull/942"">Add GitHub Action to perform release</a></li>; <li><a href=""https://redirect.github.com/actions/checkout/pull/967"">Fix status badge</a></li>; <li><a href=""https://redirect.github.com/actions/checkout/pull/1002"">Replace datadog/squid with ubuntu/squid Docker",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2126:7723,Upgrade,Upgrade,7723,https://su2code.github.io,https://github.com/su2code/SU2/pull/2126,2,['Upgrade'],['Upgrade']
Deployability,"putation/storage of the unit normal (and a tangent to this normal) the current implementation of BC_Sym cannot be ""exploited"" to serve as an ""inviscid (slip) wall"" for non-straight markers. Using `MARKER_EULER= ( sym )` is not correct either as the gradients of the velocity components (used in the viscous stress tensor of the momentum equations) are not computed correctly for the reflected state. Although using MARKER_EULER in the current develop will give you the same results as the master (or older develop before #657 ) with MARKER_SYM (... as it uses the same implementation). If you pull the ""Preprocessing"" part from the develop Sym_BC into the loop over all vertices of the boundary marker, the unit normal (and tangential) gets recomputed for each vertex. That gives you results which should be a lot closer to what happens in the master. Plus handling the velocity gradient correctly. From my point of view this would be the correct way.; Apply this patch in the root of the latest develop code using `patch -p1 < SymAsInviscidSlipWall.diff` to get the code I mean. [SymAsInviscidSlipWall.diff.txt](https://github.com/su2code/SU2/files/3417354/SymAsInviscidSlipWall.diff.txt). The implementation of the Symmetry_BC could serve double as 'Inviscid (slip) wall' (which is prescribed in the NASA documents) for viscous flow if the 'Preprocessing' part gets recomputed for each boundary vertex. But how to integrate that best is s.th. to discuss. One could just pull it in at some higher computational cost, put a conditional together with a boolean (e.g. SYMMETRY_AS_SLIP_WALL= YES) or fixing and using MARKER_EULER for that case. I hope that clarifies what happens with that boundary. Please let me know if that works for you and fixes the issue. When I fixed the Regression Testcases for #657 i think that this one was not part of it, right? Maybe this validation case goes into the su2code/VandV repo :) . Cheers,Tobi. Edit: I think we can all agree, that it is Toms fault due to his req",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/735#issuecomment-513801538:1850,patch,patch,1850,https://su2code.github.io,https://github.com/su2code/SU2/issues/735#issuecomment-513801538,2,['patch'],['patch']
Deployability,py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/io; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/io/filelock.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/io; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/io/redirect.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/io; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/io/state.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/io; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/io/tools.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/io; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/io/historyMap.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/io; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/io/__init__.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/io; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/mesh/adapt.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/mesh; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/mesh/tools.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/mesh; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/mesh/__init__.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/mesh; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/opt/project.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/opt; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/opt/scipy_tools.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/opt; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/opt/__init__.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/opt; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/run/adaptation.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/run; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/run/adjoint.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/run; Installing /home/slimshady/UserPackages/SU2_NEW,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/991#issuecomment-632032044:5676,Install,Installing,5676,https://su2code.github.io,https://github.com/su2code/SU2/issues/991#issuecomment-632032044,1,['Install'],['Installing']
Deployability,"python3); Found pkg-config: /usr/bin/pkg-config (1.7.3); Using 'PKG_CONFIG_PATH' from environment with value: '/usr/local/mpich-3.3.2/lib/pkgconfig'; Run-time dependency mpich found: YES 3.3.2; Dependency mpich found: YES 3.3.2 (cached); Message: Extracting boost ...; Using 'PKG_CONFIG_PATH' from environment with value: '/usr/local/mpich-3.3.2/lib/pkgconfig'; Run-time dependency openblas found: YES 0.3.10; Program swig found: YES (/usr/bin/swig); Message: Using mpi4py from /home/slimshady/.local/lib/python3.8/site-packages/mpi4py/include; Dependency python found: YES (pkgconfig); Program install.sh found: YES (/bin/sh /home/slimshady/UserPackages/SU2_HOME/SU2_PY/pySU2/install.sh); Message: -------------------------------------------------------------------------; | ___ _ _ ___ |; | / __| | | |_ ) Release 7.0.6 ""Blackbird"" |; | \__ \ |_| |/ / |; | |___/\___//___| Meson Configuration Summary |; | |; -------------------------------------------------------------------------; ; Option Value; ---------------------; TecIO: true; CGNS: true; AD (reverse): true; AD (forward): true; Python Wrapper: true; Intel-MKL: false; OpenBlas: true; PaStiX: false; Mixed Float: false. Please be sure to add the $SU2_HOME and $SU2_RUN environment variables,; and update your $PATH (and $PYTHONPATH if applicable) with $SU2_RUN. Based on the input to this configuration, add these lines to your .bashrc file:. export SU2_RUN=/home/slimshady/UserPackages/SU2_INSTALL/bin; export SU2_HOME=/home/slimshady/UserPackages/SU2_HOME; export PATH=$PATH:$SU2_RUN; export PYTHONPATH=$PYTHONPATH:$SU2_RUN. Use './ninja -C build install' to compile and install SU2. Build targets in project: 21. Found ninja-1.10.0.git at /home/slimshady/UserPackages/SU2_HOME/ninja; ```; The ninja command fails like so:; ```; slimshady@arch-linux-hp-probook-g3-450: SU2_HOME$ ./ninja -C build install ; ninja: Entering directory `build'; [583/894] Linking target SU2_CFD/src/SU2_CFD; FAILED: SU2_CFD/src/SU2_CFD ; /usr/bin/g++ -o SU2_",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1000#issuecomment-721366137:2956,Configurat,Configuration,2956,https://su2code.github.io,https://github.com/su2code/SU2/issues/1000#issuecomment-721366137,1,['Configurat'],['Configuration']
Deployability,"r a 3D problem) but I can get that back by sharing sparsity patterns and maps across turbulence and bulk flow (I think @talbring was already working on this in the template linear solver branch he had started). We could also parallelize the matrix updates without colouring by setting only the off-diagonal coefficients and then setting the diagonal entries to the column sum.; It turns out that this is worse (by about 10%), maybe if the matrix were symmetric (row sum) but a column sum accesses blocks very far apart. Also we want to interleave compute and load/stores as much as possible to allow the CPU pipelining magic to mask the latency of the latter (even if it looks like you can only write the block after it is computed, CPU's have all kinds of buffers that allow the next loop iteration to begin while data is in flight). **Therefore colouring is the way to go.**. _Note: With vectorized numerics we insert blocks for 4 or 8 edges into the matrix at a time, the data for those inserts will be in a slightly weird format, which will make `SparseMatrix::updateBlocks` a bit harder on the eye, more on that later._. ## MUSCL Reconstruction; The MUSCL reconstruction, characteristic of upwind schemes, is the simplest building block to show the (negative) implications of storing the data as structures of arrays (SoA) on the performance of some operations.; Here is the most basic numerics you can think of, reconstruct and average (the dummy matrix loop was to benchmark the writes this is to benchmark the reads); ```c++; void computeResidual(size_t nVar,; size_t nDim,; const vector<size_t>& colorStart,; const vector<size_t>& edgeIdx,; const vector<pair<size_t,size_t> >& connectivity,; const Matrix& coords,; const Matrix& phi,; const VectorOfMatrix& grad,; const Matrix& limiter,; Matrix& residual); {; residual.setZero();. for(size_t color=0; color<colorStart.size()-1; ++color); #pragma omp parallel for schedule(dynamic,CHUNK_SIZE); for(size_t k=colorStart[color]; k<colorStart[col",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/789#issuecomment-535977206:5527,update,updateBlocks,5527,https://su2code.github.io,https://github.com/su2code/SU2/issues/789#issuecomment-535977206,2,['update'],['updateBlocks']
Deployability,"r that were previously created using BSD tar (<a href=""https://github-redirect.dependabot.com/actions/cache/issues/527"">actions/cache#527</a>)</li>; </ul>; <h2>v2.1.4</h2>; <ul>; <li>Make caching more verbose <a href=""https://github-redirect.dependabot.com/actions/toolkit/pull/650"">#650</a></li>; <li>Use GNU tar on macOS if available <a href=""https://github-redirect.dependabot.com/actions/toolkit/pull/701"">#701</a></li>; </ul>; <h2>v2.1.3</h2>; <ul>; <li>Upgrades <code>@actions/core</code> to v1.2.6 for <a href=""https://github.com/advisories/GHSA-mfwh-5m23-j46w"">CVE-2020-15228</a>. This action was not using the affected methods.</li>; <li>Fix error handling in <code>uploadChunk</code> where 400-level errors were not being detected and handled correctly</li>; </ul>; <h2>v2.1.2</h2>; <ul>; <li>Adds input to limit the chunk upload size, useful for self-hosted runners with slower upload speeds</li>; <li>No-op when executing on GHES</li>; </ul>; <h2>v2.1.1</h2>; <ul>; <li>Update <code>@actions/cache</code> package to <code>v1.0.2</code> which allows cache action to use posix format when taring files.</li>; </ul>; <h2>v2.1.0</h2>; <ul>; <li>Replaces the <code>http-client</code> with the Azure Storage SDK for NodeJS when downloading cache content from Azure. This should help improve download performance and reliability as the SDK downloads files in 4 MB chunks, which can be parallelized and retried independently</li>; <li>Display download progress and speed</li>; </ul>; <h2>v2.0.0</h2>; <p>Initial v2 release</p>; <h2>What's new in v2</h2>; <ul>; <li>Added support for multiple paths (<a href=""https://github-redirect.dependabot.com/actions/cache/issues/16"">actions/cache#16</a>), glob patterns, and single file caches (<a href=""https://github-redirect.dependabot.com/actions/cache/issues/33"">actions/cache#33</a>)</li>; <li>Increased performance and improved cache sizes using <code>zstd</code> for compression for Linux and macOS runners (<a href=""https://github-redirect.dependabo",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1755:2457,Update,Update,2457,https://su2code.github.io,https://github.com/su2code/SU2/pull/1755,1,['Update'],['Update']
Deployability,"r the host machine: /usr/lib64/openmpi/bin/mpicc (gcc 8.3.1 ""gcc (GCC) 8.3.1 20191121 (Red Hat 8.3.1-5)""); C linker for the host machine: GNU ld.bfd 2.30-79; C++ compiler for the host machine: /usr/lib64/openmpi/bin/mpicxx (gcc 8.3.1 ""g++ (GCC) 8.3.1 20191121 (Red Hat 8.3.1-5)""); C++ linker for the host machine: GNU ld.bfd 2.30-79; Host machine cpu family: x86_64; Host machine cpu: x86_64; Program python3 found: YES (/home/tjim/anaconda3/envs/sound/bin/python); Run-time dependency MPI for c found: YES 4.0.3; Run-time dependency MPI for cpp found: YES 4.0.3; WARNING: Use the 'pic' kwarg instead of passing '-fpic' manually to 'meshb7'; Message: Boost sources found.; Run-time dependency mkl-static-lp64-seq found: YES 2020 Update 4; Program swig found: YES (/home/tjim/anaconda3/envs/sound/bin/swig); Message: Using mpi4py from /home/tjim/anaconda3/envs/sound/lib/python3.7/site-packages/mpi4py/include; Run-time dependency python3 found: YES 3.6; Program install.sh found: YES (/bin/sh /opt/su2/SU2_src/SU2_PY/pySU2/install.sh); Message: -------------------------------------------------------------------------; | ___ _ _ ___ |; | / __| | | |_ ) Release 7.0.3 ""Blackbird"" |; | \__ \ |_| |/ / |; | |___/\___//___| Meson Configuration Summary |; | |; -------------------------------------------------------------------------; ; Option Value; ---------------------; TecIO: true; CGNS: true; AD (reverse): true; AD (forward): true; Python Wrapper: true; Intel-MKL: true; OpenBlas: false; PaStiX: false. Please be sure to add the $SU2_HOME and $SU2_RUN environment variables,; and update your $PATH (and $PYTHONPATH if applicable) with $SU2_RUN. Based on the input to this configuration, add these lines to your .bashrc file:. export SU2_RUN=/opt/su2/SU2v7_adap/bin; export SU2_HOME=/opt/su2/SU2_src; export PATH=$PATH:$SU2_RUN; export PYTHONPATH=$PYTHONPATH:$SU2_RUN. Use './ninja -C build install' to compile and install SU2. Build targets in project: 19; Found ninja-1.10.0.git at /opt/su2/SU2_s",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/948#issuecomment-751431778:2229,install,install,2229,https://su2code.github.io,https://github.com/su2code/SU2/issues/948#issuecomment-751431778,1,['install'],['install']
Deployability,"r: /home/slimshady/UserPackages/SU2_HOME/build; Build type: native build; Project name: SU2; Project version: 7.0.4 ""Blackbird""; C compiler for the host machine: cc (gcc 9.2.1 ""cc (Arch Linux 9.2.1+20200130-2) 9.2.1 20200130""); C linker for the host machine: cc ld.bfd 2.34; C++ compiler for the host machine: c++ (gcc 9.2.1 ""c++ (Arch Linux 9.2.1+20200130-2) 9.2.1 20200130""); C++ linker for the host machine: c++ ld.bfd 2.34; Host machine cpu family: x86_64; Host machine cpu: x86_64; Program python3 found: YES (/usr/bin/python3); Message: Boost sources found.; Found pkg-config: /usr/bin/pkg-config (1.6.3); Run-time dependency openblas found: YES 0.3.8; Program swig found: YES (/usr/bin/swig); Message: Using mpi4py from /home/slimshady/.local/lib/python3.8/site-packages/mpi4py/include; Dependency python found: YES (pkgconfig); Program install.sh found: YES (/bin/sh /home/slimshady/UserPackages/SU2_HOME/SU2_PY/pySU2/install.sh); Message: -------------------------------------------------------------------------; | ___ _ _ ___ |; | / __| | | |_ ) Release 7.0.4 ""Blackbird"" |; | \__ \ |_| |/ / |; | |___/\___//___| Meson Configuration Summary |; | |; -------------------------------------------------------------------------; ; Option Value; ---------------------; TecIO: true; CGNS: true; AD (reverse): true; AD (forward): true; Python Wrapper: true; Intel-MKL: false; OpenBlas: true; PaStiX: false. Please be sure to add the $SU2_HOME and $SU2_RUN environment variables,; and update your $PATH (and $PYTHONPATH if applicable) with $SU2_RUN. Based on the input to this configuration, add these lines to your .bashrc file:. export SU2_RUN=/home/slimshady/UserPackages/SU2_INSTALL/bin; export SU2_HOME=/home/slimshady/UserPackages/SU2_HOME; export PATH=$PATH:$SU2_RUN; export PYTHONPATH=$PYTHONPATH:$SU2_RUN. Use './ninja -C build install' to compile and install SU2. Build targets in project: 21. Found ninja-1.10.0.git at /home/slimshady/UserPackages/SU2_HOME/ninja; ```; I think I should me",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1000#issuecomment-634298776:1915,Release,Release,1915,https://su2code.github.io,https://github.com/su2code/SU2/issues/1000#issuecomment-634298776,1,['Release'],['Release']
Deployability,"r::Allreduce (sendbuf=0x7fffffff8a20, ; recvbuf=0x1646158 <double CSysVector<double>::dot<CSysVector<double> >(VecExpr::CVecExpr<CSysVector<double>, double> const&) const::dotRes>, count=1, ; datatype=0x2aaaaafb4de0 <ompi_mpi_double>, ; op=0x2aaaaafc9920 <ompi_mpi_op_sum>, ; comm=0x2aaaaafbbc60 <ompi_mpi_comm_world>); at ../SU2_CFD/src/drivers/../../include/drivers/../../../Common/include/parallelization/mpi_structure.hpp:205; #5 0x00000000004b0ef3 in CSysVector<double>::dot<CSysVector<double> > (; this=0x23a20d0, expr=...); at ../SU2_CFD/src/integration/../../include/integration/../solvers/../../../Common/include/linear_algebra/CSysVector.hpp:317; #6 0x00000000004b0dcf in CSysVector<double>::squaredNorm (this=0x23a20d0); at ../SU2_CFD/src/integration/../../include/integration/../solvers/../../../Common/include/linear_algebra/CSysVector.hpp:331; ---Type <return> to continue, or q <return> to quit---; #7 0x00000000004b0cf0 in CSysVector<double>::norm (this=0x23a20d0); at ../SU2_CFD/src/integration/../../include/integration/../solvers/../../../Common/include/linear_algebra/CSysVector.hpp:337; #8 0x0000000000da260b in CSysSolve<double>::BCGSTAB_LinSolver (; this=0x23a2240, b=..., x=..., mat_vec=..., precond=..., ; tol=1.0000000000000001e-15, m=20, residual=@0x7fffffff8fb8: 0, ; monitoring=false, config=0x209bc10); at ../Common/src/linear_algebra/CSysSolve.cpp:553; #9 0x0000000000da404a in CSysSolve<double>::Solve (this=0x23a2240, ; Jacobian=..., LinSysRes=..., LinSysSol=..., geometry=0x2105400, ; config=0x209bc10) at ../Common/src/linear_algebra/CSysSolve.cpp:883; #10 0x00000000007b69da in CHeatSolver::ImplicitEuler_Iteration (; this=0x23a1de0, geometry=0x2105400, solver_container=0x23a1d70, ; config=0x209bc10) at ../SU2_CFD/src/solvers/CHeatSolver.cpp:1528; #11 0x0000000000b5a666 in CIntegration::Time_Integration (this=0x270d150, ; geometry=0x2105400, solver_container=0x23a1d70, config=0x209bc10, ; iRKStep=0, RunTime_EqSystem=21); at ../SU2_CFD/src/integration/CIntegr",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1241:5782,integrat,integration,5782,https://su2code.github.io,https://github.com/su2code/SU2/issues/1241,1,['integrat'],['integration']
Deployability,rPackages/SU2_INSTALL_NEW/bin; Installing SU2_PY/pySU2/_pysu2.so to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing SU2_PY/pySU2/_pysu2ad.so to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/continuous_adjoint.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/compute_uncertainty.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/finite_differences.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/mesh_deformation.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/parallel_computation.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/parallel_computation_fsi.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/package_tests.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/shape_optimization.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/merge_solution.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/set_ffd_design_var.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/compute_polar.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/compute_multipoint.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/discrete_adjoint.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/direct_differentiation.py to /home/slimshady/UserPackages/,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/991#issuecomment-632032044:2385,Install,Installing,2385,https://su2code.github.io,https://github.com/su2code/SU2/issues/991#issuecomment-632032044,1,['Install'],['Installing']
Deployability,"rces files and fill them with the contents of the CTurb* or turb_* files.; - Make CScalarSolver/Variable the parent class of CTurbSolver/Variable; - Delete pretty much everything from CTurb* or turb_* files except for some constructors. So far it compiled and some local regression testing showed no problems, lets see what the CI pipeline has to say about this. Now with this additional class introduced the actual works begins:; - figure out what is a reasonable interface in CScalar* to unify transported species and turb-models (and the other solvers probably); - code this common interface and push all turb-specific things back into the respective files (that is why I didn't `git mv` ). In order to keep this somewhat limited I would focus on porting the Turbsolvers to the new structure (however that might look, but looking at #1223 is what I'll do first) and maybe a simple transported passive scalar or so. We want the turb solver to be integrated under that Scalar-class which is arguably what most/all people use, that's why I want to have in this work at the beginning. We also have quite a few RANS Testcases so it is directly visible if something in the actual computation is changed. In case there are comments, ideas foreseeable stepping stones from experience please let me know here. ## Related Work; #777 by @economon which is the initial push towards this separate scalar solver class for additionally transported scalars (not merged); #1223 by @danielmayer @bigfooted which builds up on #777 and extends it to its needs (but does not support the turb solvers e.g.); #1226 by @oleburghardt - In this PR is a discussion on creating the structure which this (and following) PR('s) try to achieve; #1332 by @mheimgartner - implementing multi component flow (or analytic mixing properties of said multicomp flow). That PR is built upon #1223 but will merge this PR (once it is done) and throw out all additional changes in order to be merged into develop without relying on feature_",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1330:1501,integrat,integrated,1501,https://su2code.github.io,https://github.com/su2code/SU2/pull/1330,1,['integrat'],['integrated']
Deployability,re; - adding stagnation pressure output to SU2_DOT; - Merge pull request #146 from hlkline/temp; - Updated Entropy fix (now it is active).; - Another change in BC_Engine_Exhaust; - Updated CGNS in parallel; - Added runtime file; - Small typo; - Adjustment of the Entropy fix coefficient; - Bug in SU2_GEO; - Debug version with print statements.; - Updated release 3.2.7.1; - Small change; - Updated config file; - Code update; - MPI Status and Request fix.; - Another MPI Status/Request fix.; - Actuator disk update.; - Small update; - Initial implementation of pyramids and prisms for Tecplot binary.; - Small fix for Tecplot binaries. Closes #56. Closes #57.; - Removed extra allocation related to markers during partitioning.; - Non-working version; - Small update; - Updated memory deallocation.; - Merge branch 'feature_MarkerMax' into develop; - Time and date in the header.; - Small fix to the latest commit.; - Simplification of entropy correction; - Critical stability improvement.; - Minor release 3.2.7.2; - Fixing issues to run with the latest intel compiler; - Fix for Tecplot binary solutions for unsteady flows. Fixes #150.; - Now SU2 should work with the latest version of the Intel compiler.; - Merge branch 'develop' of https://github.com/su2code/SU2 into develop; - Working on the O3 stuff; - Small change.; - Add another check to improve stability.; - Collection of improvements.; - Updated actuator disk; - Merge branch 'develop' of https://github.com/su2code/SU2 into develop; - Preliminary implementation of the Neg SA; - Minor updates; - Preliminary implementation of the Negative SA; - Bug fixing; - Fixed memory issued for very large meshes with ParMETIS.; - Clear evaluation of Vorticity and StrainMag; - Viscous limiter; - Updated RELAXATION_FACTOR; - RANS MG; - Partial fix to no MPI output; - Updated I/O; - Updated Adapt CFL; - Updated Adaptive CFL number; - Release 3.2.8; - Updated SetCFL_Number; - Small update; - Small change; - Small adjustments; - Minor changes; ,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/174#issuecomment-101443812:4707,release,release,4707,https://su2code.github.io,https://github.com/su2code/SU2/pull/174#issuecomment-101443812,2,['release'],['release']
Deployability,reating ./config.status; config.status: creating externals/tecio/Makefile; config.status: creating externals/metis/Makefile; config.status: creating externals/parmetis/Makefile; config.status: creating externals/cgns/Makefile; config.status: creating Makefile; config.status: creating externals/Makefile; config.status: creating Common/lib/Makefile; config.status: creating SU2_CFD/obj/Makefile; config.status: creating SU2_DOT/obj/Makefile; config.status: creating SU2_MSH/obj/Makefile; config.status: creating SU2_DEF/obj/Makefile; config.status: creating SU2_SOL/obj/Makefile; config.status: creating SU2_GEO/obj/Makefile; config.status: creating SU2_PY/Makefile; config.status: creating SU2_PY/pySU2/Makefile; config.status: executing depfiles commands. -------------------------------------------------------------------------; | ___ _ _ ___ |; | / __| | | |_ ) Release 6.1.0 'Falcon' |; | \__ \ |_| |/ / |; | |___/\___//___| Suite |; | |; -------------------------------------------------------------------------; | The current SU2 release has been coordinated by the |; | SU2 International Developers Society <www.su2devsociety.org> |; | with selected contributions from the open-source community. |; -------------------------------------------------------------------------; | The main research teams contributing to the current release are: |; | - Prof. Juan J. Alonso's group at Stanford University. |; | - Prof. Piero Colonna's group at Delft University of Technology. |; | - Prof. Nicolas R. Gauger's group at Kaiserslautern U. of Technology. |; | - Prof. Alberto Guardone's group at Polytechnic University of Milan. |; | - Prof. Rafael Palacios' group at Imperial College London. |; | - Prof. Vincent Terrapon's group at the University of Liege. |; | - Prof. Edwin van der Weide's group at the University of Twente. |; | - Lab. of New Concepts in Aeronautics at Tech. Inst. of Aeronautics. |; -------------------------------------------------------------------------; | Copyright 2012-20,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/587:6950,release,release,6950,https://su2code.github.io,https://github.com/su2code/SU2/issues/587,1,['release'],['release']
Deployability,"recently (in develop) scale/rotate/translate were changed to do volume deformations (aka, all at once and not requiring a linear elasticity solve to get the updated volume mesh). This branch includes changes to allow scaling, translating, or rotating only a surface w/in the volume. If all markers are included in the deformation, it returns to the all-at-once volume deformation. . Hypothetically this should allow multi-body movements (as in, rotating a control surface) while maintaining the more efficient volume deformation for operations like scaling the mesh.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/187:157,update,updated,157,https://su2code.github.io,https://github.com/su2code/SU2/pull/187,1,['update'],['updated']
Deployability,"recently pushed to develop branch with doxygen group created and a few comments updated to be put into the group. This will add a link on the modules page. Since there are so many config options, everyone please feel free to update other variables in a similar way.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/122#issuecomment-59972462:80,update,updated,80,https://su2code.github.io,https://github.com/su2code/SU2/issues/122#issuecomment-59972462,2,['update'],"['update', 'updated']"
Deployability,"refix=/home/vksuman/SU2_7_0_3_gcc5_5_0_mpich3_2_1; ninja executable not found. Building ...; bootstrapping ninja...; warning: A compatible version of re2c (>= 0.11.3) was not found; changes to src/*.in.cc will not affect your build.; wrote build.ninja.; bootstrap complete. rebuilding...; [29/29] LINK ninja; The Meson build system; Version: 0.52.999; Source dir: /home/vksuman/SU2-7.0.3; Build dir: /home/vksuman/SU2-7.0.3/build; Build type: native build; Project name: SU2; Project version: 7.0.3 ""Blackbird""; C compiler for the host machine: gcc (gcc 5.5.0 ""gcc (GCC) 5.5.0""); C linker for the host machine: GNU ld.bfd 2.20.51.0.2-5; C++ compiler for the host machine: g++ (gcc 5.5.0 ""g++ (GCC) 5.5.0""); C++ linker for the host machine: GNU ld.bfd 2.20.51.0.2-5; Host machine cpu family: x86_64; Host machine cpu: x86_64; Program python3 found: YES (/app/python-3.6.3/bin/python3.6); Dependency mpi skipped: feature with-mpi disabled; Dependency mpi skipped: feature with-mpi disabled; Message: -------------------------------------------------------------------------; | ___ _ _ ___ |; | / __| | | |_ ) Release 7.0.3 ""Blackbird"" |; | \__ \ |_| |/ / |; | |___/\___//___| Meson Configuration Summary |; | |; -------------------------------------------------------------------------; ; Option Value; ---------------------; TecIO: false; CGNS: false; AD (reverse): true; AD (forward): true; Python Wrapper: false; Intel-MKL: false; OpenBlas: false; PaStiX: false. Please be sure to add the $SU2_HOME and $SU2_RUN environment variables,; and update your $PATH (and $PYTHONPATH if applicable) with $SU2_RUN. Based on the input to this configuration, add these lines to your .bashrc file:. export SU2_RUN=/home/vksuman/SU2_7_0_3_gcc5_5_0_mpich3_2_1/bin; export SU2_HOME=/home/vksuman/SU2-7.0.3; export PATH=$PATH:$SU2_RUN; export PYTHONPATH=$PYTHONPATH:$SU2_RUN. Use './ninja -C build install' to compile and install SU2. Build targets in project: 12; Found ninja-1.9.0.git at /home/vksuman/SU2-7.0.3/ni",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/955#issuecomment-620552610:2469,Release,Release,2469,https://su2code.github.io,https://github.com/su2code/SU2/issues/955#issuecomment-620552610,1,['Release'],['Release']
Deployability,"reported by @jtlau . > I'm having an issue compiling on macOS. I get an error after ""./meson.py build"":; > ; > Configuring H5pubconf.h using configuration; > ; > externals/cgns/hdf5/meson.build:662:0: ERROR: #mesondefine does not contain exactly two tokens: #cmakedefine H5_HAVE_WINDOWS @H5_HAVE_WINDOWS@; > ; > I'm not sure where to go from there... since I don't need cgns I workaround this by disabling it...; > LMK if you need the full configure error",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1507:141,configurat,configuration,141,https://su2code.github.io,https://github.com/su2code/SU2/issues/1507,1,['configurat'],['configuration']
Deployability,"res python 3, so implicitly we get this requirement now. But I think it is less of a problem than some of you probably might think. A lot of problems we have come from the fact the we support python 2 and python 3. As I was setting up travis (getting there in a moment) I noticed that is easily possible to compile the code with python 3 (for the python wrapper) and run the python scripts with python 2 and vice versa, which eventually leads to errors and crashes. If we require(!) version 3 (which should be installed on all machines now ...) we can avoid such problems from the beginning. Furthermore, python 2 is deprecated anyway ... - I already changed travis to use the new build system. This as one major advantage: we can now properly use ccache and the caching feature of travis (that means only files that have changed will be compiled if a cache is available). This should speed up the runs by a lot. . - automake and meson can coexist without any problems. Maybe we can keep this compatibility for version 7 and remove it later if we all agree. Also the preconfigure.py should not be necessary anymore then. - (unit) tests can be easily added and integrated into the build process. - I will add a proper documentation soon. ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. #685 . ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [ ] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/745:3392,integrat,integrated,3392,https://su2code.github.io,https://github.com/su2code/SU2/pull/745,1,['integrat'],['integrated']
Deployability,"research group at UT Austing has implemented a unit testing framework on our branch, which we're happy with. Some choices were arbitrary, and some choices were made based on our development environment. Those choices may be different for other groups. Here's what we have done:. The unit testing framework is compiled and run using autotools. For more information on autotool's setup, see their documentation<https://www.gnu.org/software/automake/manual/html_node/Tests.html>. Since autotools is the build system for SU2, this involves minimal changes. Using automake, the build process for building unit tests becomes:. '''; ./bootstrap; ./configure; make; make check; '''. We use Boost's unit testing framework<https://www.boost.org/doc/libs/1_70_0/libs/test/doc/html/index.html>. This provides a convenient set of macros for instatiating tests, grouping tests into suites, and running checks. This choice was based on what is available in our development setup. We have integrated our unit tests into our Travis CI regression testing. Every time we push commits or submit a pull request, the unit tests are run and checked. What is my vision for unit testing in SU2?. I am not proposing that we start trying to get 100% code coverage with pre-existing code. That would not provide a good return on investment. Instead, I see people adding unit tests as they write new code and as they find bugs. For each new behavior added to SU2, tests are first added to document the related existing behavior. These tests serve to check that the existing behavior isn't damaged by the new code. Then new tests are added to prove that the new behavior is working correctly. For bug fixes, the process is simpler. A test is added to confirm that something is not behaving as expected. Then the code is fixed to make the test pass. What frameworks are available?. For a unit testing framework, here are the most popular options, with the following pros and cons:. Roll-your-own. * Requires no external dependencies",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/698#issuecomment-499250240:3388,integrat,integrated,3388,https://su2code.github.io,https://github.com/su2code/SU2/issues/698#issuecomment-499250240,2,['integrat'],['integrated']
Deployability,restart file update https://github.com/su2code/TestCases/pull/85,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1438#issuecomment-968060030:13,update,update,13,https://su2code.github.io,https://github.com/su2code/SU2/pull/1438#issuecomment-968060030,1,['update'],['update']
Deployability,"rity-and-quality` query suite](https://docs.github.com/en/code-security/code-scanning/automatically-scanning-your-code-for-vulnerabilities-and-errors/configuring-code-scanning#using-queries-in-ql-packs) for you. #### How do I upgrade my CodeQL engine?; No need! New versions of the CodeQL analysis are constantly deployed on GitHub.com; your repository will automatically benefit from the most recently released version. #### The analysis doesn’t seem to be working; If you get an error in GitHub Actions that indicates that CodeQL wasn’t able to analyze your code, please [follow the instructions here](https://docs.github.com/en/code-security/code-scanning/automatically-scanning-your-code-for-vulnerabilities-and-errors/troubleshooting-the-codeql-workflow) to debug the analysis. #### How do I disable LGTM.com?; If you have LGTM’s automatic pull request analysis enabled, then you can [follow these steps to disable the LGTM pull request analysis](https://lgtm.com/help/lgtm/managing-automated-code-review#disabling-pr-integration). You don’t actually need to remove your repository from LGTM.com; it will automatically be removed in the next few months as part of the deprecation of LGTM.com ([more info here](https://github.blog/2022-08-15-the-next-step-for-lgtm-com-github-code-scanning/)). #### Which source code hosting platforms does code scanning support?; GitHub code scanning is deeply integrated within GitHub itself. If you’d like to scan source code that is hosted elsewhere, we suggest that you create a mirror of that code on GitHub. #### How do I know this PR is legitimate?; This PR is filed by the official LGTM.com GitHub App, in line with the [deprecation timeline that was announced on the official GitHub Blog](https://github.blog/2022-08-15-the-next-step-for-lgtm-com-github-code-scanning/). The proposed GitHub Action workflow uses the [official open source GitHub CodeQL Action](https://github.com/github/codeql-action/). If you have any other questions or concerns, please",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1840:4015,integrat,integration,4015,https://su2code.github.io,https://github.com/su2code/SU2/pull/1840,1,['integrat'],['integration']
Deployability,"rning: '.dat' directive writing 4 bytes into a region of size between 1 and 1024 [-Wformat-overflow=]; sprintf(OutSol, ""%s.dat"", BasNamSol);; ^~~~; ./sources/Python3.7/amgio_py.c:624:9: note: 'sprintf' output between 5 and 1028 bytes into a destination of size 1024; sprintf(OutSol, ""%s.dat"", BasNamSol);; ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~; ./sources/Python3.7/amgio_py.c:614:26: warning: '.solb' directive writing 5 bytes into a region of size between 1 and 1024 [-Wformat-overflow=]; sprintf(OutSol, ""%s.solb"", BasNamSol);; ^~~~~; ./sources/Python3.7/amgio_py.c:614:7: note: 'sprintf' output between 6 and 1029 bytes into a destination of size 1024; sprintf(OutSol, ""%s.solb"", BasNamSol);; ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~; C:\Program Files\mingw-w64\x86_64-8.1.0-posix-seh-rt_v6-rev0\mingw64\bin\gcc.exe -mdll -O -Wall -DMS_WIN64 -IC:\Users\Danie\Anaconda3\envs\vsptools\include -IC:\Users\Danie\Anaconda3\envs\vsptools\include -c ./sources/Python3.7/mesh.c -o build\temp.win-amd64-3.8\Release\.\sources\python3.7\mesh.o -std=c99 -Wno-unused-variable -Wno-unused-result -O3; C:\Program Files\mingw-w64\x86_64-8.1.0-posix-seh-rt_v6-rev0\mingw64\bin\gcc.exe -mdll -O -Wall -DMS_WIN64 -IC:\Users\Danie\Anaconda3\envs\vsptools\include -IC:\Users\Danie\Anaconda3\envs\vsptools\include -c ./sources/Python3.7/GMFio.c -o build\temp.win-amd64-3.8\Release\.\sources\python3.7\gmfio.o -std=c99 -Wno-unused-variable -Wno-unused-result -O3; C:\Program Files\mingw-w64\x86_64-8.1.0-posix-seh-rt_v6-rev0\mingw64\bin\gcc.exe -mdll -O -Wall -DMS_WIN64 -IC:\Users\Danie\Anaconda3\envs\vsptools\include -IC:\Users\Danie\Anaconda3\envs\vsptools\include -c ./sources/Python3.7/SU2io.c -o build\temp.win-amd64-3.8\Release\.\sources\python3.7\su2io.o -std=c99 -Wno-unused-variable -Wno-unused-result -O3; ./sources/Python3.7/SU2io.c: In function 'LoadSU2Elements':; ./sources/Python3.7/SU2io.c:231:51: warning: variable 'idx' set but not used [-Wunused-but-set-variable]; int iElt, NbrElt=0, typ, is[8], swi[8], ",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1379:2606,Release,Release,2606,https://su2code.github.io,https://github.com/su2code/SU2/issues/1379,1,['Release'],['Release']
Deployability,"rrently working on the backward facing step and I will work on the flatplate too. The choice of the validation test cases is key since the computational cost is quite large, thus if you have any suggestions that may speed up this part then feel free to write them down. . Implemented versions:; - SST-DDES; - SST-IDDES; - SST-SIDDES. I am also working on the Scale Adaptive Simulations (SAS) implementations for SST, following the work in ""ON URANS SOLUTIONS WITH LES-LIKE BEHAVIOUR"", Travis et al., and ""[Evaluation of scale-adaptive simulation for transonic cavity flows"", Babu et al., (https://www.inderscienceonline.com/doi/abs/10.1504/IJESMS.2016.075510). The last one, especially, is quite tricky due to the computation of the velocity laplacian. I tried computing it in Paraview as the divergence of the gradient field and it seems quite similar, but it is the first time that I've touched that section of the code, thus some work might still be needed. Implemented versions:; - SST-SAS_Simple (better naming is necessary), from the article of Travis et al.; - SST-SAS_Complicated (better naming is necessary), it is related to the article from Babu et al. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [X] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [ ] I used the pre-commit hook to prevent dirty commits and used `pre-commit run --all` to format old commits.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2150:2248,update,updated,2248,https://su2code.github.io,https://github.com/su2code/SU2/pull/2150,1,['update'],['updated']
Deployability,rs\Danie\Documents\SU2\SU2_PY\SU2/run/direct.py to C:\bin\bin/SU2/run; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/run/interface.py to C:\bin\bin/SU2/run; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/run/merge.py to C:\bin\bin/SU2/run; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/run/geometry.py to C:\bin\bin/SU2/run; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/run/projection.py to C:\bin\bin/SU2/run; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/run/__init__.py to C:\bin\bin/SU2/run; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/util/bunch.py to C:\bin\bin/SU2/util; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/util/filter_adjoint.py to C:\bin\bin/SU2/util; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/util/lhc_unif.py to C:\bin\bin/SU2/util; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/util/misc.py to C:\bin\bin/SU2/util; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/util/mp_eval.py to C:\bin\bin/SU2/util; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/util/ordered_bunch.py to C:\bin\bin/SU2/util; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/util/ordered_dict.py to C:\bin\bin/SU2/util; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/util/plot.py to C:\bin\bin/SU2/util; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/util/polarSweepLib.py to C:\bin\bin/SU2/util; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/util/which.py to C:\bin\bin/SU2/util; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/util/switch.py to C:\bin\bin/SU2/util; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/util/__init__.py to C:\bin\bin/SU2/util; Installing C:\Users\Danie\Documents\SU2\SU2_PY\FSI_tools/__init__.py to C:\bin\bin/FSI_tools; Installing C:\Users\Danie\Documents\SU2\SU2_PY\FSI_tools/FSIInterface.py to C:\bin\bin/FSI_tools; Installing C:\Users\Danie\Documents\SU2\SU2_PY\FSI_tools/FSI_config.py to C:\bin\bin/FSI_tools; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2_Nastran/__init__.py to C:\bin\bin/,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1376:7751,Install,Installing,7751,https://su2code.github.io,https://github.com/su2code/SU2/issues/1376,1,['Install'],['Installing']
Deployability,rs\Danie\Documents\SU2\SU2_PY\mesh_deformation.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\parallel_computation.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\parallel_computation_fsi.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\package_tests.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\shape_optimization.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\merge_solution.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\set_ffd_design_var.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\compute_polar.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\compute_multipoint.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\discrete_adjoint.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\direct_differentiation.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\fsi_computation.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2_CFD.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/__init__.py to C:\bin\bin/SU2; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/eval/design.py to C:\bin\bin/SU2/eval; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/eval/functions.py to C:\bin\bin/SU2/eval; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/eval/gradients.py to C:\bin\bin/SU2/eval; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/eval/__init__.py to C:\bin\bin/SU2/eval; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/io/config.py to C:\bin\bin/SU2/io; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/io/config_options.py to C:\bin\bin/SU2/io; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/io/data.py to C:\bin\bin/SU2/io; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/io/filelock.py to C:\bin\bin/SU2/io; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/io/redirect.py to C:\bin\bin/SU2/io; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/io/st,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1376:4995,Install,Installing,4995,https://su2code.github.io,https://github.com/su2code/SU2/issues/1376,1,['Install'],['Installing']
Deployability,rt SU2_RUN=D:\Programme\SU2-7.1.1\bin/bin; export SU2_HOME=D:\Programme\SU2-7.1.1; export PATH=$PATH:$SU2_RUN; export PYTHONPATH=$PYTHONPATH:$SU2_RUN; ; Use './ninja -C D:\Programme\SU2-7.1.1\build install' to compile and install SU2; ; Build targets in project: 20; ; Found ninja.exe-1.9.0 at D:\Programme\SU2-7.1.1\ninja.exe; Running compile:; Working directory: C:\Users\MANUEL~1\AppData\Local\Temp\tmpctmi2f32; Command line: c++ C:\Users\MANUEL~1\AppData\Local\Temp\tmpctmi2f32\testfile.cpp -o C:\Users\MANUEL~1\AppData\Local\Temp\tmpctmi2f32\output.obj -pipe -c -std=c++11 ; ; Code:; int i = static_cast<int>(0);; Compiler stdout:; ; Compiler stderr:; ; Compiler accepts -std=c++11: YES; Running compile:; Working directory: D:\Programme\SU2-7.1.1\build\meson-private\tmp380_12oo; Command line: c++ D:\Programme\SU2-7.1.1\build\meson-private\tmp380_12oo\testfile.cpp -o D:\Programme\SU2-7.1.1\build\meson-private\tmp380_12oo\output.obj -pipe -c -O0 -fpermissive --print-search-dirs ; ; Code:; ; Compiler stdout:; install: C:/Program Files/mingw-w64/x86_64-8.1.0-posix-seh-rt_v6-rev0/mingw64/bin/../lib/gcc/x86_64-w64-mingw32/8.1.0/; programs: =C:/Program Files/mingw-w64/x86_64-8.1.0-posix-seh-rt_v6-rev0/mingw64/bin/../libexec/gcc/x86_64-w64-mingw32/8.1.0/;C:/Program Files/mingw-w64/x86_64-8.1.0-posix-seh-rt_v6-rev0/mingw64/bin/../libexec/gcc/;C:/Program Files/mingw-w64/x86_64-8.1.0-posix-seh-rt_v6-rev0/mingw64/bin/../lib/gcc/x86_64-w64-mingw32/8.1.0/../../../../x86_64-w64-mingw32/bin/x86_64-w64-mingw32/8.1.0/;C:/Program Files/mingw-w64/x86_64-8.1.0-posix-seh-rt_v6-rev0/mingw64/bin/../lib/gcc/x86_64-w64-mingw32/8.1.0/../../../../x86_64-w64-mingw32/bin/; libraries: =C:/Program Files/mingw-w64/x86_64-8.1.0-posix-seh-rt_v6-rev0/mingw64/bin/../lib/gcc/x86_64-w64-mingw32/8.1.0/;C:/Program Files/mingw-w64/x86_64-8.1.0-posix-seh-rt_v6-rev0/mingw64/bin/../lib/gcc/;C:/Program Files/mingw-w64/x86_64-8.1.0-posix-seh-rt_v6-rev0/mingw64/bin/../lib/gcc/x86_64-w64-mingw32/8.1.0/../../../../x86_,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/888#issuecomment-821840286:10162,install,install,10162,https://su2code.github.io,https://github.com/su2code/SU2/issues/888#issuecomment-821840286,1,['install'],['install']
Deployability,"s : None; Installed Size : 17.73 MiB; Packager : Felix Yan <felixonmars@archlinux.org>; Build Date : Wed 12 Feb 2020 01:42:30 PM IST; Install Date : Mon 18 May 2020 06:28:46 PM IST; Install Reason : Explicitly installed; Install Script : No; Validated By : Signature. Name : lapack; Version : 3.9.0-2; Description : Linear Algebra PACKage; Architecture : x86_64; URL : https://www.netlib.org/lapack; Licenses : custom; Groups : None; Provides : None; Depends On : blas; Optional Deps : None; Required By : arpack qrupdate suitesparse; Optional For : None; Conflicts With : None; Replaces : None; Installed Size : 7.03 MiB; Packager : Antonio Rojas <arojas@archlinux.org>; Build Date : Sun 24 Nov 2019 04:13:58 PM IST; Install Date : Sat 22 Feb 2020 01:05:19 PM IST; Install Reason : Installed as a dependency for another package; Install Script : No; Validated By : Signature. Name : openblas; Version : 0.3.8-1; Description : An optimized BLAS library based on GotoBLAS2 1.13 BSD; Architecture : x86_64; URL : https://www.openblas.net/; Licenses : BSD; Groups : None; Provides : blas=3.8.0; Depends On : gcc-libs; Optional Deps : None; Required By : lapack; Optional For : None; Conflicts With : blas; Replaces : None; Installed Size : 17.73 MiB; Packager : Felix Yan <felixonmars@archlinux.org>; Build Date : Wed 12 Feb 2020 01:42:30 PM IST; Install Date : Mon 18 May 2020 06:28:46 PM IST; Install Reason : Explicitly installed; Install Script : No; Validated By : Signature. ```. I tried it without enabling openblas, it did move forward but broke further later in the build with a ridiculously long error message. For the sake of readability I am attaching a [logfile](https://github.com/su2code/SU2/files/4652822/su2_build_NoOpenBlas.log) here. For obvious reasons I think this is because of the `-Denable-pywrapper=true` flag. What is the problem here? I want to build SU2 with all these options available. I am also thinking maybe I should install mpich instead of openmpi to use mpi features.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/991#issuecomment-631053271:1926,Install,Installed,1926,https://su2code.github.io,https://github.com/su2code/SU2/issues/991#issuecomment-631053271,6,"['Install', 'install']","['Install', 'Installed', 'install', 'installed']"
Deployability,"s in [https://github.com/su2code/SU2/issues/948#issuecomment-619334494](url):. > The _amgio extension should be built by default. I haven't had any issues on any of the machines I've built on, so I appreciate the feedback.; > ; > Just curious, are you running with python >=3.7? The shebang in all the SU2 python scripts; > ; > ```; > #!/usr/bin/env python; > ```; > ; > uses whatever python is set to in your environment variables, but pyamg/_amgio will only build/run with python >=3.7. Could you also check if the _amgio extension was installed in your site-packages (probably located in ~/.local/lib/python3.x/site-packages)?; > ; > If it didn't build/install, you could go into extensions/AMGIO/su2io and run; > ; > ```; > python3 setup.py build_ext && python3 setup.py install; > ```; > ; > If it did build/install, try the command; > ; > ```; > python3 $SU2_RUN/mesh_adaptation_amg.py -f invCyl.cfg -n 6; > ```. After doing `python3 setup.py build_ext && python3 setup.py install`, I encountered the following error:. > ```; > (temp_su5) takashi279@turing1:/dfs/user/takashi279/plasma/design/multiscale_adap3/SU2/externals/AMGIO/su2io$ python3 setup.py build_ext && python3 setup.py install; > running build_ext; > running install; > /dfs/user/takashi279/miniconda3/envs/temp_su5/lib/python3.7/site-packages/setuptools/command/install.py:37: SetuptoolsDeprecationWarning: setup.py install is deprecated. Use build and pip and other standards-based tools.; > setuptools.SetuptoolsDeprecationWarning,; > /dfs/user/takashi279/miniconda3/envs/temp_su5/lib/python3.7/site-packages/setuptools/command/easy_install.py:147: EasyInstallDeprecationWarning: easy_install command is deprecated. Use build and pip and other standards-based tools.; > EasyInstallDeprecationWarning,; > running bdist_egg; > error: Invalid distribution name or version syntax: -amgio-2.1.1; > ```. Am I missing any dependencies? I previously compiled SU2 feature_adap branch without issues, and have already installed pyAMG. M",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1699:1895,install,install,1895,https://su2code.github.io,https://github.com/su2code/SU2/issues/1699,1,['install'],['install']
Deployability,"s nowadays, so we should always be improving the class design accordingly. I suppose this will just get more important with adding more physics, zones, and more complex time integration schemes. I would like to highlight that when the code was first released, we did not have ""zones"" at all (not until some early sliding mesh work after a couple of versions), and the CDriver and CIteration classes didn't even exist until we dreamed them up a couple of years ago. My point is that, with some proper planning, we have the creativity and the right team to develop the solution we need, and we shouldn't be afraid to make big changes when necessary. Moving quickly while leveraging the team's broad skillset is one of our biggest advantages in this project. As you all know, over the years, we continue to move toward a *_structure.cpp and *_physics.cpp mindset for how we do our abstractions/data encapsulations, with ""structure"" components reused and ""physics"" components being specialized to a certain set of governing equations. This has happened in many places, including recently with the CTransfer class, for instance, and it is likely to happen with the COutput class(es) before long. However, one area where there hasn't been much evolution is within the CIntegration classes. Apart from a couple of additions for structural problems and now the DG integration, it is largely the same as it was in the first release. Perhaps this is our opportunity to rethink and update these classes for future expansion, just as we've done for others over the years. We could rework them, move them up or down in the hierarchy, change where they're instantiated, change the inheritance, and so on. Even if they get a little more complicated (like usual), as long as they're properly abstracted, it isn't likely to bother the developers working in other areas of the code too much. In short, I think some effort spent on the CIntegration classes could help here, and they are due for some updates anyway. Tom",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/437#issuecomment-329078585:1438,integrat,integration,1438,https://su2code.github.io,https://github.com/su2code/SU2/issues/437#issuecomment-329078585,4,"['integrat', 'release', 'update']","['integration', 'release', 'update', 'updates']"
Deployability,"s pyBeam, a non-linear open source beam solver, into the SU2 infrastructure as a subproject, and adds support for coupled FSI simulations using SU2's flow solver and pyBeam's structural solver. Tutorials on how to use the implementation will come soon. At this point, only minor changes to the compilation and the python scripts are required. The impact to the core of the code is minor. I will be away for a few days, but please go ahead and have a look/comment/find room for improvement in the meantime :) I will reply to your comments as soon as I'm back to office. I also added a couple of test cases, but I haven't yet found the best way to hook them to our regression test system. I'll definitely look into it before the PR is merged, but due to personal time constraints, it'd be great if this could be integrated for 7.0.3. ## Related Work; This work is the result of a collaboration with @RoccoBombardieri and @crauno from the University Carlos III Madrid. . Please refer to a recent [paper at EUROGEN 2019](https://www.researchgate.net/publication/335972259_Towards_an_open-source_framework_for_aero-structural_design_and_optimization_within_the_SU2_suite) with regards to this work. Full reference will be provided here upon publication in an Springer ECCOMAS book series. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [x] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/902:1945,update,updated,1945,https://su2code.github.io,https://github.com/su2code/SU2/pull/902,1,['update'],['updated']
Deployability,s which replaced blas while trying to meet the pre-install requirements.; ```; slimshady@arch-linux-hp-probook-g3-450: UserPackages$ pacman -Qi blas lapack openblas; Name : openblas; Version : 0.3.8-1; Description : An optimized BLAS library based on GotoBLAS2 1.13 BSD; Architecture : x86_64; URL : https://www.openblas.net/; Licenses : BSD; Groups : None; Provides : blas=3.8.0; Depends On : gcc-libs; Optional Deps : None; Required By : lapack; Optional For : None; Conflicts With : blas; Replaces : None; Installed Size : 17.73 MiB; Packager : Felix Yan <felixonmars@archlinux.org>; Build Date : Wed 12 Feb 2020 01:42:30 PM IST; Install Date : Mon 18 May 2020 06:28:46 PM IST; Install Reason : Explicitly installed; Install Script : No; Validated By : Signature. Name : lapack; Version : 3.9.0-2; Description : Linear Algebra PACKage; Architecture : x86_64; URL : https://www.netlib.org/lapack; Licenses : custom; Groups : None; Provides : None; Depends On : blas; Optional Deps : None; Required By : arpack qrupdate suitesparse; Optional For : None; Conflicts With : None; Replaces : None; Installed Size : 7.03 MiB; Packager : Antonio Rojas <arojas@archlinux.org>; Build Date : Sun 24 Nov 2019 04:13:58 PM IST; Install Date : Sat 22 Feb 2020 01:05:19 PM IST; Install Reason : Installed as a dependency for another package; Install Script : No; Validated By : Signature. Name : openblas; Version : 0.3.8-1; Description : An optimized BLAS library based on GotoBLAS2 1.13 BSD; Architecture : x86_64; URL : https://www.openblas.net/; Licenses : BSD; Groups : None; Provides : blas=3.8.0; Depends On : gcc-libs; Optional Deps : None; Required By : lapack; Optional For : None; Conflicts With : blas; Replaces : None; Installed Size : 17.73 MiB; Packager : Felix Yan <felixonmars@archlinux.org>; Build Date : Wed 12 Feb 2020 01:42:30 PM IST; Install Date : Mon 18 May 2020 06:28:46 PM IST; Install Reason : Explicitly installed; Install Script : No; Validated By : Signature. ```. I tried it without ,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/991#issuecomment-631053271:1302,Install,Installed,1302,https://su2code.github.io,https://github.com/su2code/SU2/issues/991#issuecomment-631053271,1,['Install'],['Installed']
Deployability,"s**. For less than or equal to 6 processors there is no error. I have this issue with 7.04, 7.1 and now 7.1.1. . This issue has a previous bug report in the MPI partitioning issues for Turbomachinery runs #990. I am sure the config file is correct. I have my solutions from 6 processors, but I really need to scale up the processor count so that the restitution time is within a reasonable time.; Below is an example of where it crashes for 7 processors: ; ### WITH 7 processors:; ---------------------- Turbomachinery Preprocessing ---------------------. Initialize Turbo Vertex Structure.; **_Number of span-wise sections in Zone 0: 139. [This is incorrect number of span-wise sections]_**; Max number of span-wise sections among all zones: 139.; Initialize solver containers for average and performance quantities.; Compute inflow and outflow average geometric quantities.; [1:node0567] unexpected disconnect completion event from [0:node0564]; [3:node0566] unexpected disconnect completion event from [0:node0564]. ### WITH 6 processors:; Initialize Turbo Vertex Structure.; **Number of span-wise sections in Zone 0: 137. [This is the correct number of span-wise sections]**; Max number of span-wise sections among all zones: 137.; Initialize solver containers for average and performance quantities.; Compute inflow and outflow average geometric quantities.; Transfer average geometric quantities to zone 0.; Inlet area for Row 1: 30.7045 cm^2.; Oulet area for Row 1: 16.9716 cm^2.; Recomputed number of blades for Row 1: 36.; Initialize inflow and outflow average solution quantities.; Inlet flow angle for Row 1: -0.00422866°.; Outlet flow angle for Row 1: -28.9224°.; ------------------------------ Begin Solver -----------------------------; ....... System settings:; **CLUSTER**; - OS: CentOS release 6.5; - C++ compiler and version: GCC/7.3.0-2.30; - MPI implementation and version: compiler/intel/2018.0.1 intelmpi/2018.0.1/64 mkl/2018.0.1; - SU2 Version: [v7.1 and 7.1.1]; Thanks; Ashvin",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1219:2252,release,release,2252,https://su2code.github.io,https://github.com/su2code/SU2/issues/1219,1,['release'],['release']
Deployability,"s/checkout/pull/1437"">actions/checkout#1437</a></li>; </ul>; <p><strong>Full Changelog</strong>: <a href=""https://github.com/actions/checkout/compare/v3.5.3...v3.6.0"">https://github.com/actions/checkout/compare/v3.5.3...v3.6.0</a></p>; <h2>v3.5.3</h2>; <h2>What's Changed</h2>; <ul>; <li>Fix: Checkout Issue in self hosted runner due to faulty submodule check-ins by <a href=""https://github.com/megamanics""><code>@​megamanics</code></a> in <a href=""https://redirect.github.com/actions/checkout/pull/1196"">actions/checkout#1196</a></li>; <li>Fix typos found by codespell by <a href=""https://github.com/DimitriPapadopoulos""><code>@​DimitriPapadopoulos</code></a> in <a href=""https://redirect.github.com/actions/checkout/pull/1287"">actions/checkout#1287</a></li>; <li>Add support for sparse checkouts by <a href=""https://github.com/dscho""><code>@​dscho</code></a> and <a href=""https://github.com/dfdez""><code>@​dfdez</code></a> in <a href=""https://redirect.github.com/actions/checkout/pull/1369"">actions/checkout#1369</a></li>; <li>Release v3.5.3 by <a href=""https://github.com/TingluoHuang""><code>@​TingluoHuang</code></a> in <a href=""https://redirect.github.com/actions/checkout/pull/1376"">actions/checkout#1376</a></li>; </ul>; <h2>New Contributors</h2>; <ul>; <li><a href=""https://github.com/megamanics""><code>@​megamanics</code></a> made their first contribution in <a href=""https://redirect.github.com/actions/checkout/pull/1196"">actions/checkout#1196</a></li>; <li><a href=""https://github.com/DimitriPapadopoulos""><code>@​DimitriPapadopoulos</code></a> made their first contribution in <a href=""https://redirect.github.com/actions/checkout/pull/1287"">actions/checkout#1287</a></li>; <li><a href=""https://github.com/dfdez""><code>@​dfdez</code></a> made their first contribution in <a href=""https://redirect.github.com/actions/checkout/pull/1369"">actions/checkout#1369</a></li>; </ul>; <p><strong>Full Changelog</strong>: <a href=""https://github.com/actions/checkout/compare/v3...v3.5.3"">https://git",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2126:3666,Release,Release,3666,https://su2code.github.io,https://github.com/su2code/SU2/pull/2126,2,['Release'],['Release']
Deployability,"s://github.com/actions/download-artifact/commit/47f9ce604fdcae5583e5ef84048eeb7ef2893652""><code>47f9ce6</code></a> update <code>@​actions/artifact</code></li>; <li><a href=""https://github.com/actions/download-artifact/commit/127824d34cb0da7dc3cb064a37ae280b7c09aca6""><code>127824d</code></a> Merge pull request <a href=""https://redirect.github.com/actions/download-artifact/issues/299"">#299</a> from bethanyj28/main</li>; <li><a href=""https://github.com/actions/download-artifact/commit/6dd49bff0a6150b47d41011c034b762053acaf6f""><code>6dd49bf</code></a> licensed only artifact</li>; <li><a href=""https://github.com/actions/download-artifact/commit/f71c0e3da3bb6b4fcc53196b9ac75ee981db5bc6""><code>f71c0e3</code></a> Revert &quot;licensed&quot;</li>; <li><a href=""https://github.com/actions/download-artifact/commit/7c63dfde29f42bb9cb0f61b67e54c91106a6586e""><code>7c63dfd</code></a> licensed</li>; <li><a href=""https://github.com/actions/download-artifact/commit/67d37cd34678091933f0a88cd1bb026171ea20d2""><code>67d37cd</code></a> Update toolkit</li>; <li><a href=""https://github.com/actions/download-artifact/commit/348754975ef0295bfa2c111cba996120cfdf8a5d""><code>3487549</code></a> Update release-new-action-version.yml (<a href=""https://redirect.github.com/actions/download-artifact/issues/292"">#292</a>)</li>; <li>Additional commits viewable in <a href=""https://github.com/actions/download-artifact/compare/v3...v4"">compare view</a></li>; </ul>; </details>; <br />. [![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=actions/download-artifact&package-manager=github_actions&previous-version=3&new-version=4)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores). Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`. [//]: # (dependabot-automer",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2230:4316,Update,Update,4316,https://su2code.github.io,https://github.com/su2code/SU2/pull/2230,1,['Update'],['Update']
Deployability,"s</a></li>; </ul>; <h2>v3.4.0</h2>; <ul>; <li><a href=""https://redirect.github.com/actions/checkout/pull/1209"">Upgrade codeql actions to v2</a></li>; <li><a href=""https://redirect.github.com/actions/checkout/pull/1210"">Upgrade dependencies</a></li>; <li><a href=""https://redirect.github.com/actions/checkout/pull/1225"">Upgrade <code>@​actions/io</code></a></li>; </ul>; <h2>v3.3.0</h2>; <ul>; <li><a href=""https://redirect.github.com/actions/checkout/pull/1045"">Implement branch list using callbacks from exec function</a></li>; <li><a href=""https://redirect.github.com/actions/checkout/pull/1050"">Add in explicit reference to private checkout options</a></li>; <li>[Fix comment typos (that got added in <a href=""https://redirect.github.com/actions/checkout/issues/770"">#770</a>)](<a href=""https://redirect.github.com/actions/checkout/pull/1057"">actions/checkout#1057</a>)</li>; </ul>; <h2>v3.2.0</h2>; <ul>; <li><a href=""https://redirect.github.com/actions/checkout/pull/942"">Add GitHub Action to perform release</a></li>; <li><a href=""https://redirect.github.com/actions/checkout/pull/967"">Fix status badge</a></li>; <li><a href=""https://redirect.github.com/actions/checkout/pull/1002"">Replace datadog/squid with ubuntu/squid Docker image</a></li>; <li><a href=""https://redirect.github.com/actions/checkout/pull/964"">Wrap pipeline commands for submoduleForeach in quotes</a></li>; <li><a href=""https://redirect.github.com/actions/checkout/pull/1029"">Update <code>@​actions/io</code> to 1.1.2</a></li>; <li><a href=""https://redirect.github.com/actions/checkout/pull/1039"">Upgrading version to 3.2.0</a></li>; </ul>; <h2>v3.1.0</h2>; <ul>; <li><a href=""https://redirect.github.com/actions/checkout/pull/939"">Use <code>@​actions/core</code> <code>saveState</code> and <code>getState</code></a></li>; <li><a href=""https://redirect.github.com/actions/checkout/pull/922"">Add <code>github-server-url</code> input</a></li>; </ul>; <h2>v3.0.2</h2>; <ul>; <li><a href=""https://redirect.github.com/actions/che",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2126:8510,release,release,8510,https://su2code.github.io,https://github.com/su2code/SU2/pull/2126,2,['release'],['release']
Deployability,"s\SU2\SU2_PY\SU2/util/bunch.py to C:\bin\bin/SU2/util; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/util/filter_adjoint.py to C:\bin\bin/SU2/util; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/util/lhc_unif.py to C:\bin\bin/SU2/util; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/util/misc.py to C:\bin\bin/SU2/util; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/util/mp_eval.py to C:\bin\bin/SU2/util; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/util/ordered_bunch.py to C:\bin\bin/SU2/util; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/util/ordered_dict.py to C:\bin\bin/SU2/util; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/util/plot.py to C:\bin\bin/SU2/util; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/util/polarSweepLib.py to C:\bin\bin/SU2/util; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/util/which.py to C:\bin\bin/SU2/util; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/util/switch.py to C:\bin\bin/SU2/util; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/util/__init__.py to C:\bin\bin/SU2/util; Installing C:\Users\Danie\Documents\SU2\SU2_PY\FSI_tools/__init__.py to C:\bin\bin/FSI_tools; Installing C:\Users\Danie\Documents\SU2\SU2_PY\FSI_tools/FSIInterface.py to C:\bin\bin/FSI_tools; Installing C:\Users\Danie\Documents\SU2\SU2_PY\FSI_tools/FSI_config.py to C:\bin\bin/FSI_tools; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2_Nastran/__init__.py to C:\bin\bin/SU2_Nastran; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2_Nastran/pysu2_nastran.py to C:\bin\bin/SU2_Nastran; Running custom install script 'sh C:\\Users\\Danie\\Documents\\SU2\\SU2_PY/pySU2\\install.sh C:\\Users\\Danie\\Documents\\SU2\\build\\SU2_PY/pySU2 pysu2.py'; Failed to run install script 'sh C:\\Users\\Danie\\Documents\\SU2\\SU2_PY/pySU2\\install.sh C:\\Users\\Danie\\Documents\\SU2\\build\\SU2_PY/pySU2 pysu2.py'; FAILED: meson-install; ""C:\\Users\\Danie\\Anaconda3\\envs\\vsptools\\python.exe"" ""C:\\Users\\Danie\\Documents\\SU2\\meson.p",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1376:8308,Install,Installing,8308,https://su2code.github.io,https://github.com/su2code/SU2/issues/1376,1,['Install'],['Installing']
Deployability,se lines to your .bashrc file:. export SU2_RUN=C:\bin/bin; export SU2_HOME=C:\Users\Danie\Documents\SU2; export PATH=$PATH:$SU2_RUN; export PYTHONPATH=$PYTHONPATH:$SU2_RUN. Use './ninja -C C:\Users\Danie\Documents\SU2\build install' to compile and install SU2. Build targets in project: 17. Found ninja.exe-1.9.0 at C:\Users\Danie\Documents\SU2\ninja.exe`. **526 files install successfully.** . `WARNING: the currently checked out submodule commit in C:\Users\Danie\Documents\SU2\externals\opdi does not match the SHA-1 found in the index.; Use 'git submodule update --init C:\Users\Danie\Documents\SU2\externals\opdi' to reset the module if necessary.; SHA-1 tag stored in index does not match SHA tag stored in this script.; Installing SU2_CFD/src\SU2_CFD.exe to C:\bin\bin; Installing SU2_CFD/src\SU2_CFD_AD.exe to C:\bin\bin; Installing SU2_CFD/src\SU2_CFD_DIRECTDIFF.exe to C:\bin\bin; Installing SU2_DOT/src\SU2_DOT.exe to C:\bin\bin; Installing SU2_DOT/src\SU2_DOT_AD.exe to C:\bin\bin; Installing SU2_DEF/src\SU2_DEF.exe to C:\bin\bin; Installing SU2_GEO/src\SU2_GEO.exe to C:\bin\bin; Installing SU2_SOL/src\SU2_SOL.exe to C:\bin\bin; Installing SU2_PY/pySU2\_pysu2.dll to C:\bin\bin; Installing SU2_PY/pySU2\_pysu2.dll.a to C:\bin\lib; Installing SU2_PY/pySU2\_pysu2ad.dll to C:\bin\bin; Installing SU2_PY/pySU2\_pysu2ad.dll.a to C:\bin\lib; Installing C:\Users\Danie\Documents\SU2\SU2_PY\continuous_adjoint.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\compute_uncertainty.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\finite_differences.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\mesh_deformation.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\parallel_computation.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\parallel_computation_fsi.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\package_tests.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\shape_optim,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1376:3385,Install,Installing,3385,https://su2code.github.io,https://github.com/su2code/SU2/issues/1376,1,['Install'],['Installing']
Deployability,serPackages/SU2_INSTALL_NEW/bin/SU2/mesh; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/mesh/__init__.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/mesh; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/opt/project.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/opt; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/opt/scipy_tools.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/opt; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/opt/__init__.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/opt; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/run/adaptation.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/run; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/run/adjoint.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/run; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/run/deform.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/run; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/run/direct.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/run; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/run/interface.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/run; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/run/merge.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/run; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/run/geometry.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/run; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/run/projection.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/run; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/run/__init__.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/run; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/util/bunch.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/util; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/991#issuecomment-632032044:6766,Install,Installing,6766,https://su2code.github.io,https://github.com/su2code/SU2/issues/991#issuecomment-632032044,1,['Install'],['Installing']
Deployability,shady/UserPackages/SU2_INSTALL_NEW/bin/SU2/opt; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/run/adaptation.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/run; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/run/adjoint.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/run; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/run/deform.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/run; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/run/direct.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/run; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/run/interface.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/run; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/run/merge.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/run; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/run/geometry.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/run; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/run/projection.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/run; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/run/__init__.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/run; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/util/bunch.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/util; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/util/filter_adjoint.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/util; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/util/lhc_unif.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/util; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/util/misc.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/util; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/util/mp_eval.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/util; Installing /home/slimshady/UserPackages/SU2,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/991#issuecomment-632032044:7306,Install,Installing,7306,https://su2code.github.io,https://github.com/su2code/SU2/issues/991#issuecomment-632032044,1,['Install'],['Installing']
Deployability,slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/io; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/io/tools.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/io; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/io/historyMap.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/io; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/io/__init__.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/io; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/mesh/adapt.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/mesh; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/mesh/tools.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/mesh; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/mesh/__init__.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/mesh; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/opt/project.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/opt; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/opt/scipy_tools.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/opt; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/opt/__init__.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/opt; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/run/adaptation.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/run; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/run/adjoint.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/run; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/run/deform.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/run; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/run/direct.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/run; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/run/interface.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/run; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_P,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/991#issuecomment-632032044:6084,Install,Installing,6084,https://su2code.github.io,https://github.com/su2code/SU2/issues/991#issuecomment-632032044,1,['Install'],['Installing']
Deployability,"so now the file is being committed as deleted... please roll back to this commit; https://github.com/spendres/SU2/commit/6cbddbe59cf5da89e89321b72ae20ab289a66520. here are the commands you can use --. ```; # Reset the index to the desired tree; git reset 6cbddbe59cf5da89e89321b72ae20ab289a66520. # Move the branch pointer back to the previous HEAD; git reset --soft HEAD@{1}. git commit -m ""Revert to 6cbddbe"". # Update working copy to reflect the new commit; git reset --hard; ```",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/144#issuecomment-69462490:414,Update,Update,414,https://su2code.github.io,https://github.com/su2code/SU2/pull/144#issuecomment-69462490,1,['Update'],['Update']
Deployability,sorry I accidently press the Close issue....; anyway Im going to install v 4.3 of the software and try again; then I will report the results. thanks alot for your response,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/296#issuecomment-248937442:65,install,install,65,https://su2code.github.io,https://github.com/su2code/SU2/issues/296#issuecomment-248937442,1,['install'],['install']
Deployability,"st machine cpu family: x86_64; Host machine cpu: x86_64; Program python3 found: YES (/home/tjim/anaconda3/envs/sound/bin/python); Run-time dependency MPI for c found: YES 4.0.3; Run-time dependency MPI for cpp found: YES 4.0.3; WARNING: Use the 'pic' kwarg instead of passing '-fpic' manually to 'meshb7'; Message: Boost sources found.; Run-time dependency mkl-static-lp64-seq found: YES 2020 Update 4; Program swig found: YES (/home/tjim/anaconda3/envs/sound/bin/swig); Message: Using mpi4py from /home/tjim/anaconda3/envs/sound/lib/python3.7/site-packages/mpi4py/include; Run-time dependency python3 found: YES 3.6; Program install.sh found: YES (/bin/sh /opt/su2/SU2_src/SU2_PY/pySU2/install.sh); Message: -------------------------------------------------------------------------; | ___ _ _ ___ |; | / __| | | |_ ) Release 7.0.3 ""Blackbird"" |; | \__ \ |_| |/ / |; | |___/\___//___| Meson Configuration Summary |; | |; -------------------------------------------------------------------------; ; Option Value; ---------------------; TecIO: true; CGNS: true; AD (reverse): true; AD (forward): true; Python Wrapper: true; Intel-MKL: true; OpenBlas: false; PaStiX: false. Please be sure to add the $SU2_HOME and $SU2_RUN environment variables,; and update your $PATH (and $PYTHONPATH if applicable) with $SU2_RUN. Based on the input to this configuration, add these lines to your .bashrc file:. export SU2_RUN=/opt/su2/SU2v7_adap/bin; export SU2_HOME=/opt/su2/SU2_src; export PATH=$PATH:$SU2_RUN; export PYTHONPATH=$PYTHONPATH:$SU2_RUN. Use './ninja -C build install' to compile and install SU2. Build targets in project: 19; Found ninja-1.10.0.git at /opt/su2/SU2_src/ninja; ```; Where the `Run-time dependency python3` is reported as the system v3.6 whereas I'm running 3.7.8. Could it be that amg was installed into the system python? But before running meson, I had activated my python conda environment and mpi4py seems to be picked up from the right one. I'm just not sure why it also finds 3.6.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/948#issuecomment-751431778:2433,Configurat,Configuration,2433,https://su2code.github.io,https://github.com/su2code/SU2/issues/948#issuecomment-751431778,1,['Configurat'],['Configuration']
Deployability,"sting './SU2/mesh'...; Listing './SU2/opt'...; Listing './SU2/run'...; Listing './SU2/util'...; Compiling './SU2/util/filter_adjoint.py'...; *** File ""./SU2/util/filter_adjoint.py"", line 182; raise Exception, 'unknown filter type'; ^; SyntaxError: invalid syntax. Compiling './compute_uncertainty.py'...; *** File ""./compute_uncertainty.py"", line 69; print ""\n\n =================== Performing "" + str(comp) + "" Component Perturbation =================== \n\n""; ^; SyntaxError: invalid syntax. Compiling './fsi_computation.py'...; *** Sorry: TabError: inconsistent use of tabs and spaces in indentation (fsi_computation.py, line 77); Listing './pySU2'...; ```; After fixing them and running `python -m compileall .` again the next set of similar error messages appears. This patch fix such `TabError`, `SyntaxError` (for `raise` and `print` functions), replace some indent tabs with spaces (generally with 8 spaces) before comments, remove trailing spaces where needed. Please fix this small issue as resulting patch to fix it for distributive build script is rather huge (~ 100 Kb). Many changes are in `SU2_PY/FSI/FSIInterface.py` and the `Split` mode of github change preview is more suitable to compare and to recheck the correctness of new indentation (or via Meld application). ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [ ] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [ ] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/983:2285,patch,patch,2285,https://su2code.github.io,https://github.com/su2code/SU2/pull/983,2,"['patch', 'update']","['patch', 'updated']"
Deployability,"sts. If you compile SU2 using `ninja -C builddir`, then the test executable will automatically be compiled. You then have three options for running the tests:. + `meson test` (see documentation [here](https://mesonbuild.com/Unit-tests.html)); + `ninja test`; + Run the exectuable manually: `./UnitTests/test_driver`. When running the executable manually, there are many customization options. Run `./UnitTests/test_driver --help` to see them all. ### How to add unit tests. I have already included a single unit-test example (`UnitTests/SU2_CFD/src/numerics/CNumerics_tests.cpp`). Aside from the headaches with CConfig, this example should be clear. If not, raise questions and I will answer them. ~~I plan on adding a few more example tests, as well as a ""How-To"" page on the website.~~ Please see the PR on the website repo for more documentation. To learn more, check out the [great tutorial](https://github.com/catchorg/Catch2/blob/master/docs/tutorial.md) for Catch2. You can also find more in-depth documentation there. ### I still don't understand unit tests. Where can I learn more?. I highly recommend reading at least one of these two books:. + ""Working Effectively with Legacy Code,"" by Michael Feathers; + ""Modern C++ Programming with Test-Driven Development,"" by Jeff Langr. ## Remaining work. + ~~Add unit-testing to Travis CI~~; + ~~Add support for unit testing in AD builds~~; + ~~Add more examples of unit tests~~; + ~~Add ""How-To Add Unit Tests"" documentation~~. ## Related Work; This resolves issue #698. ## PR Checklist. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [x] My contribution is commented and consistent with SU2 style.; - [x] I have added a test case that demonstrates my contribution, if necessary.; - [x] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/850:4373,update,updated,4373,https://su2code.github.io,https://github.com/su2code/SU2/pull/850,1,['update'],['updated']
Deployability,"t convergence criteria at iteration number; CONV_STARTITER= 10; %; % Number of elements to apply the criteria; CONV_CAUCHY_ELEMS= 100; %; % Epsilon to control the series convergence; CONV_CAUCHY_EPS= 1E-10; %. % ------------------------- INPUT/OUTPUT INFORMATION --------------------------%; %; % Mesh input file; MESH_FILENAME= NLU_Baseline.su2; %; % Mesh input file format (CGNS, NETCDF_ASCII); MESH_FORMAT= SU2; %; % Mesh output file; MESH_OUT_FILENAME= mesh_caradonna_tung_periodic.su2; %; % Restart flow input file; SOLUTION_FILENAME= solution_flow.dat; %; % Restart adjoint input file; SOLUTION_ADJ_FILENAME= solution_adj.dat; %; TABULAR_FORMAT= CSV; %; % Output file convergence history (w/o extension) ; CONV_FILENAME= history; %; % Output file restart flow; RESTART_FILENAME= restart_flow.dat; %; % Output file restart adjoint; RESTART_ADJ_FILENAME= restart_adj.dat; %; % Output file flow (w/o extension) variables; VOLUME_FILENAME= flow; %; % Output file adjoint (w/o extension) variables; VOLUME_ADJ_FILENAME= adjoint; %; % Output Objective function gradient (using continuous adjoint); GRAD_OBJFUNC_FILENAME= of_grad.dat; %; % Output file surface flow coefficient (w/o extension); SURFACE_FILENAME= surface_flow; %; % Output file surface adjoint coefficient (w/o extension); SURFACE_ADJ_FILENAME= surface_adjoint; %; % Writing solution file frequency; OUTPUT_WRT_FREQ= 10; %. SCREEN_OUTPUT= (INNER_ITER, WALL_TIME, RMS_RES, FORCE_X, MOMENT_X); HISTORY_OUTPUT=(INNER_ITER, WALL_TIME, RMS_RES, AERO_COEFF)`. **Desktop (please complete the following information):**; - OS: [e.g., Linux (Redhat 6.6)]; - C++ compiler and version: [e.g., g++ (GCC) 4.8.5]; - MPI implementation and version: [e.g., OpenMPI 3.0.0]; - SU2 Version: [e.g., v6.2.0]; 3 OS were used:; Ubuntu 22.04 on AWS; WSL with ubuntu 20.04 LST; Windows. Latest MPICH package was used on the ubuntu versions; (basically the one that come with a 'sudo apt-get install mpich'); Latest mpiexec version is used on windows. The code wa",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1669:9453,continuous,continuous,9453,https://su2code.github.io,https://github.com/su2code/SU2/issues/1669,1,['continuous'],['continuous']
Deployability,"t involves installing the desired python version with `CONFIGURE_OPTS=--enable-shared pyenv install <version>`. To recap, a ""workflow for newbies"" which appears to be working for me is. 1. install pyenv either from [source](https://github.com/pyenv/pyenv#installation) or from your distibution repositories, if available. IMPORTANT: make sure the environment variables are correctly set and `pyenv init` is added to your shell, as per the installation instructions.; 2. install the desired python version (for example 3.7.8), enabling shared libraries: ; `CONFIGURE_OPTS=--enable-shared pyenv install 3.7.8`; 3. clone/download the [feature_adap](https://github.com/su2code/SU2/tree/feature_adap) branch of SU2;; 4. in the SU2 folder, configure meson ; `./meson.py build` ; and make sure to update the environment variables in your `.bashrc` as indicated by meson's output.; 5. use ninja to build and install SU2 ; `./ninja -C build install`;; if you run into a permission error, specify an installation directory passing the `--prefix` option to meson, as explained [here](https://www.cfd-online.com/Forums/su2-installation/227676-su-installation-failed-due-insufficient-permissions.html). These passages, at least for me, result in a running SU2 with mesh adaptation, although I have made no tests on running actual simulations. That being said, the involvement of pyenv is due to the fact that the provided python wheel for pyamg is for python 3.7 only. If I understand correctly, the library itself is proprietary, sadly, so I assume @bmunguia has access either to the source files or to someone who can package them. Depending on the actual compatibility of the code, it would be nice if the wheel was updated to the latest python version, or at least the dependency on 3.7.* was removed. . @chesiv you can also try checking the logs in the `log.err` and `log.out` files to see if anything has gone wrong. Keep in mind all SU2 output is redirected to them, so you might not get any useful informat",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/948#issuecomment-751823130:1831,install,install,1831,https://su2code.github.io,https://github.com/su2code/SU2/issues/948#issuecomment-751823130,2,['install'],"['install', 'installation']"
Deployability,"t iterate with the basis vectors, the Newton step is cheap as n is small). The residuals are obtained from a fully coupled adjoint CHT problem (2d heated cylinder in laminar flow) with a heatflux objective function. ![plot](https://user-images.githubusercontent.com/22639394/122736716-9ad18000-d280-11eb-9983-c2d47d434dc5.png). (Purple: No correction applied, Green/Blue: Usage of 1-dim. basis after extraction of one basis vector at around 500 iterations, Yellow: MPI run with two processes using the manual but MPI-compatible Gram-Schmidt-QR-decomposition for identification of basis vectors.); ; **The code is WIP.** It needs a lot of additions, changes and testing, though the overall structure should be clear from what's already implemented. ToDo's:; - Remove Eigen dependencies, not needed anymore; - Add a meaningful testcase; - Add eigenvalue estimation / QR criterion values to screen and history output fields; - Implement a basisMaintenance()-routine; - Figure out a proper base class for both `CQuasiNewtonInvLeastSquares` and `CNewtonUpdateOnSubspace`; - Figure out further algorithmic strategies for multiphysics problems, now the default is to create the basis in the outer loop, and to apply it for corrections in the inner. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [ ] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1217:2777,update,updated,2777,https://su2code.github.io,https://github.com/su2code/SU2/pull/1217,1,['update'],['updated']
Deployability,"t means pyamg was not correctly installed; otherwise it is in fact installed. In the latter case, you can check if your python is configured to enable shared libraries. To do it, according to [this](https://stackoverflow.com/questions/23201498/how-to-check-if-python3-was-built-with-enable-shared), in the python shell you can type ; `import sysconfig`; `sysconfig.get_config_vars('Py_ENABLE_SHARED')`; If the result is `[0]`, ie ""False"", you have to build python with the option `--enable-shared`. ; Now, I don't know how to do accomplish that with conda, but with [pyenv](https://github.com/pyenv/pyenv) it involves installing the desired python version with `CONFIGURE_OPTS=--enable-shared pyenv install <version>`. To recap, a ""workflow for newbies"" which appears to be working for me is. 1. install pyenv either from [source](https://github.com/pyenv/pyenv#installation) or from your distibution repositories, if available. IMPORTANT: make sure the environment variables are correctly set and `pyenv init` is added to your shell, as per the installation instructions.; 2. install the desired python version (for example 3.7.8), enabling shared libraries: ; `CONFIGURE_OPTS=--enable-shared pyenv install 3.7.8`; 3. clone/download the [feature_adap](https://github.com/su2code/SU2/tree/feature_adap) branch of SU2;; 4. in the SU2 folder, configure meson ; `./meson.py build` ; and make sure to update the environment variables in your `.bashrc` as indicated by meson's output.; 5. use ninja to build and install SU2 ; `./ninja -C build install`;; if you run into a permission error, specify an installation directory passing the `--prefix` option to meson, as explained [here](https://www.cfd-online.com/Forums/su2-installation/227676-su-installation-failed-due-insufficient-permissions.html). These passages, at least for me, result in a running SU2 with mesh adaptation, although I have made no tests on running actual simulations. That being said, the involvement of pyenv is due to the fact th",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/948#issuecomment-751823130:1338,install,installation,1338,https://su2code.github.io,https://github.com/su2code/SU2/issues/948#issuecomment-751823130,1,['install'],['installation']
Deployability,"t normal (and a tangent to this normal) the current implementation of BC_Sym cannot be ""exploited"" to serve as an ""inviscid (slip) wall"" for non-straight markers. Using `MARKER_EULER= ( sym )` is not correct either as the gradients of the velocity components (used in the viscous stress tensor of the momentum equations) are not computed correctly for the reflected state. Although using MARKER_EULER in the current develop will give you the same results as the master (or older develop before #657 ) with MARKER_SYM (... as it uses the same implementation). If you pull the ""Preprocessing"" part from the develop Sym_BC into the loop over all vertices of the boundary marker, the unit normal (and tangential) gets recomputed for each vertex. That gives you results which should be a lot closer to what happens in the master. Plus handling the velocity gradient correctly. From my point of view this would be the correct way.; Apply this patch in the root of the latest develop code using `patch -p1 < SymAsInviscidSlipWall.diff` to get the code I mean. [SymAsInviscidSlipWall.diff.txt](https://github.com/su2code/SU2/files/3417354/SymAsInviscidSlipWall.diff.txt). The implementation of the Symmetry_BC could serve double as 'Inviscid (slip) wall' (which is prescribed in the NASA documents) for viscous flow if the 'Preprocessing' part gets recomputed for each boundary vertex. But how to integrate that best is s.th. to discuss. One could just pull it in at some higher computational cost, put a conditional together with a boolean (e.g. SYMMETRY_AS_SLIP_WALL= YES) or fixing and using MARKER_EULER for that case. I hope that clarifies what happens with that boundary. Please let me know if that works for you and fixes the issue. When I fixed the Regression Testcases for #657 i think that this one was not part of it, right? Maybe this validation case goes into the su2code/VandV repo :) . Cheers,Tobi. Edit: I think we can all agree, that it is Toms fault due to his requested changes in the PR 😉",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/735#issuecomment-513801538:2302,integrat,integrate,2302,https://su2code.github.io,https://github.com/su2code/SU2/issues/735#issuecomment-513801538,1,['integrat'],['integrate']
Deployability,"t/commit/3a8048248f2f288c271830f8ecf2a1c5d8eb0e9a""><code>3a80482</code></a> Merge pull request <a href=""https://redirect.github.com/actions/upload-artifact/issues/511"">#511</a> from actions/robherley/migration-docs-typo</li>; <li><a href=""https://github.com/actions/upload-artifact/commit/9d63e3f2f81d9dc4e13d83fc330408f8a94b79d1""><code>9d63e3f</code></a> Merge branch 'main' into robherley/migration-docs-typo</li>; <li><a href=""https://github.com/actions/upload-artifact/commit/dfa1ab292d2fdd78d056187f11c568c16ab53de9""><code>dfa1ab2</code></a> fix typo with v3 artifact downloads in migration guide</li>; <li><a href=""https://github.com/actions/upload-artifact/commit/d00351bf698398c17253d21cf8f90e57a344e14b""><code>d00351b</code></a> Merge pull request <a href=""https://redirect.github.com/actions/upload-artifact/issues/509"">#509</a> from markmssd/patch-1</li>; <li><a href=""https://github.com/actions/upload-artifact/commit/707f5a7b71e0fb01c5df1e16e9679a3292606ef2""><code>707f5a7</code></a> Update limitation of <code>10</code> artifacts upload to <code>500</code></li>; <li><a href=""https://github.com/actions/upload-artifact/commit/26f96dfa697d77e81fd5907df203aa23a56210a8""><code>26f96df</code></a> Merge pull request <a href=""https://redirect.github.com/actions/upload-artifact/issues/505"">#505</a> from actions/robherley/merge-artifacts</li>; <li>Additional commits viewable in <a href=""https://github.com/actions/upload-artifact/compare/v3...v4"">compare view</a></li>; </ul>; </details>; <br />. [![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=actions/upload-artifact&package-manager=github_actions&previous-version=3&new-version=4)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores). Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependab",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2231:5523,Update,Update,5523,https://su2code.github.io,https://github.com/su2code/SU2/pull/2231,1,['Update'],['Update']
Deployability,"t: false; libROM: false. Please be sure to add the $SU2_HOME and $SU2_RUN environment variables,; and update your $PATH (and $PYTHONPATH if applicable) with $SU2_RUN. Based on the input to this configuration, add these lines to your .bashrc file:. export SU2_RUN=C:\bin/bin; export SU2_HOME=C:\Users\Danie\Documents\SU2; export PATH=$PATH:$SU2_RUN; export PYTHONPATH=$PYTHONPATH:$SU2_RUN. Use './ninja -C C:\Users\Danie\Documents\SU2\build install' to compile and install SU2. Build targets in project: 17. Found ninja.exe-1.9.0 at C:\Users\Danie\Documents\SU2\ninja.exe`. **526 files install successfully.** . `WARNING: the currently checked out submodule commit in C:\Users\Danie\Documents\SU2\externals\opdi does not match the SHA-1 found in the index.; Use 'git submodule update --init C:\Users\Danie\Documents\SU2\externals\opdi' to reset the module if necessary.; SHA-1 tag stored in index does not match SHA tag stored in this script.; Installing SU2_CFD/src\SU2_CFD.exe to C:\bin\bin; Installing SU2_CFD/src\SU2_CFD_AD.exe to C:\bin\bin; Installing SU2_CFD/src\SU2_CFD_DIRECTDIFF.exe to C:\bin\bin; Installing SU2_DOT/src\SU2_DOT.exe to C:\bin\bin; Installing SU2_DOT/src\SU2_DOT_AD.exe to C:\bin\bin; Installing SU2_DEF/src\SU2_DEF.exe to C:\bin\bin; Installing SU2_GEO/src\SU2_GEO.exe to C:\bin\bin; Installing SU2_SOL/src\SU2_SOL.exe to C:\bin\bin; Installing SU2_PY/pySU2\_pysu2.dll to C:\bin\bin; Installing SU2_PY/pySU2\_pysu2.dll.a to C:\bin\lib; Installing SU2_PY/pySU2\_pysu2ad.dll to C:\bin\bin; Installing SU2_PY/pySU2\_pysu2ad.dll.a to C:\bin\lib; Installing C:\Users\Danie\Documents\SU2\SU2_PY\continuous_adjoint.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\compute_uncertainty.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\finite_differences.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\mesh_deformation.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\parallel_computation.py to C:\bin\bin; Installing C",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1376:3168,Install,Installing,3168,https://su2code.github.io,https://github.com/su2code/SU2/issues/1376,1,['Install'],['Installing']
Deployability,talling C:\Users\Danie\Documents\SU2\SU2_PY\SU2/io/historyMap.py to C:\bin\bin/SU2/io; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/io/__init__.py to C:\bin\bin/SU2/io; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/opt/project.py to C:\bin\bin/SU2/opt; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/opt/scipy_tools.py to C:\bin\bin/SU2/opt; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/opt/__init__.py to C:\bin\bin/SU2/opt; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/run/adjoint.py to C:\bin\bin/SU2/run; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/run/deform.py to C:\bin\bin/SU2/run; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/run/direct.py to C:\bin\bin/SU2/run; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/run/interface.py to C:\bin\bin/SU2/run; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/run/merge.py to C:\bin\bin/SU2/run; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/run/geometry.py to C:\bin\bin/SU2/run; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/run/projection.py to C:\bin\bin/SU2/run; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/run/__init__.py to C:\bin\bin/SU2/run; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/util/bunch.py to C:\bin\bin/SU2/util; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/util/filter_adjoint.py to C:\bin\bin/SU2/util; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/util/lhc_unif.py to C:\bin\bin/SU2/util; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/util/misc.py to C:\bin\bin/SU2/util; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/util/mp_eval.py to C:\bin\bin/SU2/util; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/util/ordered_bunch.py to C:\bin\bin/SU2/util; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/util/ordered_dict.py to C:\bin\bin/SU2/util; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/util/plot.py to C:\bin\bin/SU2/util; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/util/polarSweepLib.py to C:\bin\bin/SU2/util; In,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1376:7111,Install,Installing,7111,https://su2code.github.io,https://github.com/su2code/SU2/issues/1376,1,['Install'],['Installing']
Deployability,tatus and Request fix.; - Another MPI Status/Request fix.; - Actuator disk update.; - Small update; - Initial implementation of pyramids and prisms for Tecplot binary.; - Small fix for Tecplot binaries. Closes #56. Closes #57.; - Removed extra allocation related to markers during partitioning.; - Non-working version; - Small update; - Updated memory deallocation.; - Merge branch 'feature_MarkerMax' into develop; - Time and date in the header.; - Small fix to the latest commit.; - Simplification of entropy correction; - Critical stability improvement.; - Minor release 3.2.7.2; - Fixing issues to run with the latest intel compiler; - Fix for Tecplot binary solutions for unsteady flows. Fixes #150.; - Now SU2 should work with the latest version of the Intel compiler.; - Merge branch 'develop' of https://github.com/su2code/SU2 into develop; - Working on the O3 stuff; - Small change.; - Add another check to improve stability.; - Collection of improvements.; - Updated actuator disk; - Merge branch 'develop' of https://github.com/su2code/SU2 into develop; - Preliminary implementation of the Neg SA; - Minor updates; - Preliminary implementation of the Negative SA; - Bug fixing; - Fixed memory issued for very large meshes with ParMETIS.; - Clear evaluation of Vorticity and StrainMag; - Viscous limiter; - Updated RELAXATION_FACTOR; - RANS MG; - Partial fix to no MPI output; - Updated I/O; - Updated Adapt CFL; - Updated Adaptive CFL number; - Release 3.2.8; - Updated SetCFL_Number; - Small update; - Small change; - Small adjustments; - Minor changes; - Updated release 3.2.8; - MPI disabled by default in build. Added --enable-mpi flag to configure.; - Merged the ParMETIS implementation. Updated the build files.; - bootstrap; - Started parallel CGNS reader.; - Memory fix.; - Minor change; - Merge branch 'develop' of https://github.com/su2code/SU2 into develop; - Updated binaries; - Small change to configure.ac. Bootstrap.; - Small change; - Cleaning the code; - Updated grid defo,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/174#issuecomment-101443812:5110,Update,Updated,5110,https://su2code.github.io,https://github.com/su2code/SU2/pull/174#issuecomment-101443812,1,['Update'],['Updated']
Deployability,"te the grid movement during the time domain simulation via the python interface; Involved parameters: ; GRID_MOVEMENT= ROTATING_FRAME; TRANSLATION_RATE= u v w ; ROTATION_RATE= p q r~~; - update the surface mesh deformation during the time domain simulation via the python interface ; Involved parameters: ; DEFORM_MESH= YES; MARKER_DEFORM_MESH= ( list of markers ). Summing up, I will need to combine the grid velocities due to aircraft movement, elasticity and gust. Currently, this is not possible in SU2. ; I split the work into the following steps. Here is what is working / not working:; - [x] gust with 3D meshes --> plausibility check with rectangular, 3 meter wing at 2° + long gust equivalent to 2° = approx doubling of the lift coefficient; - [x] ~~gust + moving grid --> plausibility check by comparison with farfield onflow condition from above~~; - [x] ~~new python interface for grid movement update --> plausibility check with a) sudden jump in heave velocity w, b) sinusoidal velocity w at different frequencies to observe influence of unsteady aerodynamics (phase shift and reduction of resulting lift)~~; - [x] mesh deformation via python interface --> plausibility check with sinusoidal displacement z, scaled and shifted by 90° to correspond to velocity w from above, leads to same results; - [ ] ~~mesh deformation + moving grid --> differences with respect to farfield onflow condition / does NOT lead to same results as above. The grid velocities look right though, both on the temporary screen output and when plotting them by slicing through the volume results, but the amplitude of the lift coefficient is too small. I guess that the velocities are not set properly / mixed up / require a call to some update function or similar. **I'm stuck at this point. Does someone have any idea what I'm doing wrong?? I feel that I am missing an important step here...**~~; - [ ] ~~final test: mesh deformation + moving grid + gust~~; - [x] final test: mesh deformation + gust. Apart fr",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1954:2110,update,update,2110,https://su2code.github.io,https://github.com/su2code/SU2/pull/1954,1,['update'],['update']
Deployability,"te.h:997:74: note: expected 'H5T_t *' {aka 'struct H5T_t *'} but argument is of type 'const H5T_t *' {aka 'const struct H5T_t *'}; H5_DLL herr_t H5O_copy_expand_ref(H5F_t *file_src, hid_t tid_src, H5T_t *dt_src, void *buf_src,; ~~~~~~~^~~~~~; [50/903] Compiling C object externals/cgns/hdf5/libsu2hdf5.a.p/H5C.c.obj; ninja: build stopped: subcommand failed.; PS C:\su2code-SU2-09ba9e3> python ninja.exe -C C:\su2code-SU2-09ba9e3\build install; SyntaxError: Non-UTF-8 code starting with '\x90' in file C:\su2code-SU2-09ba9e3\ninja.exe on line 1, but no encoding declared; see https://peps.python.org/pep-0263/ for details; PS C:\su2code-SU2-09ba9e3> python ninja.exe -C C:\su2code-SU2-09ba9e3\build install; SyntaxError: Non-UTF-8 code starting with '\x90' in file C:\su2code-SU2-09ba9e3\ninja.exe on line 1, but no encoding declared; see https://peps.python.org/pep-0263/ for details; PS C:\su2code-SU2-09ba9e3> ninja.exe -C C:\su2code-SU2-09ba9e3\build install; ninja: Entering directory `C:\su2code-SU2-09ba9e3\build'; [1/854] Linking target externals/cgns/hdf5/H5make_libsettings.exe; FAILED: externals/cgns/hdf5/H5make_libsettings.exe; ""gcc"" -o externals/cgns/hdf5/H5make_libsettings.exe externals/cgns/hdf5/H5make_libsettings.exe.p/H5make_libsettings.c.obj ""-Wl,--allow-shlib-undefined"" ""-Wl,-O1"" ""-Wl,--start-group"" ""-lz"" ""-lC:\Program Files (x86)\Microsoft SDKs\MPI\Lib\x64\msmpi"" ""-Wl,--subsystem,console"" ""-lkernel32"" ""-luser32"" ""-lgdi32"" ""-lwinspool"" ""-lshell32"" ""-lole32"" ""-loleaut32"" ""-luuid"" ""-lcomdlg32"" ""-ladvapi32"" ""-Wl,--end-group""; C:/mingw64/bin/../lib/gcc/x86_64-w64-mingw32/8.1.0/../../../../x86_64-w64-mingw32/bin/ld.exe: cannot find -lC:\Program Files (x86)\Microsoft SDKs\MPI\Lib\x64\msmpi; collect2.exe: error: ld returned 1 exit status; [2/854] Linking target externals/cgns/hdf5/H5detect.exe; FAILED: externals/cgns/hdf5/H5detect.exe; ""gcc"" -o externals/cgns/hdf5/H5detect.exe externals/cgns/hdf5/H5detect.exe.p/H5detect.c.obj ""-Wl,--allow-shlib-undefined"" ""-Wl,-O1"" ""-Wl,--",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1982:5331,install,install,5331,https://su2code.github.io,https://github.com/su2code/SU2/issues/1982,1,['install'],['install']
Deployability,"te_connection; raise err; File ""/app/python-3.6.3/lib/python3.6/socket.py"", line 713, in create_connection; sock.connect(sa); TimeoutError: [Errno 110] Connection timed out. During handling of the above exception, another exception occurred:. Traceback (most recent call last):; File ""./meson.py"", line 71, in <module>; init_submodules('auto'); File ""/home/vksuman/SU2-7.1.1/meson_scripts/init.py"", line 91, in init_submodules; download_module(codi_name, alt_name_codi, github_repo_codi, sha_version_codi); File ""/home/vksuman/SU2-7.1.1/meson_scripts/init.py"", line 172, in download_module; urllib.request.urlretrieve (url, commit_sha + '.zip'); File ""/app/python-3.6.3/lib/python3.6/urllib/request.py"", line 248, in urlretrieve; with contextlib.closing(urlopen(url, data)) as fp:; File ""/app/python-3.6.3/lib/python3.6/urllib/request.py"", line 223, in urlopen; return opener.open(url, data, timeout); File ""/app/python-3.6.3/lib/python3.6/urllib/request.py"", line 526, in open; response = self._open(req, data); File ""/app/python-3.6.3/lib/python3.6/urllib/request.py"", line 544, in _open; '_open', req); File ""/app/python-3.6.3/lib/python3.6/urllib/request.py"", line 504, in _call_chain; result = func(*args); File ""/app/python-3.6.3/lib/python3.6/urllib/request.py"", line 1361, in https_open; context=self._context, check_hostname=self._check_hostname); File ""/app/python-3.6.3/lib/python3.6/urllib/request.py"", line 1320, in do_open; raise URLError(err); urllib.error.URLError: <urlopen error [Errno 110] Connection timed out>. I have no idea why this is happening. I was able to install SU2 v7.0.3 this way. Any help regarding this will be greatly appreciated. These are the modules in the root directory. MeDiPack-6aef76912e7099c4f08c9705848797ca9e8070da.zip ; CoDiPack-1b8d3f5f03de560fb63a2a76ad91ab7bb3fa67d8.zip ; meson-29ef4478df6d3aaca40c7993f125b29409be1de2.zip ; Mutationpp-5ff579f43781cae07411e5ab46291c9971536be6.zip ; ninja-52649de2c56b63f42bc59513d51286531c595b44.zip. Regards; Suman",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1335:2962,install,install,2962,https://su2code.github.io,https://github.com/su2code/SU2/issues/1335,1,['install'],['install']
Deployability,th ParMETIS.; - Clear evaluation of Vorticity and StrainMag; - Viscous limiter; - Updated RELAXATION_FACTOR; - RANS MG; - Partial fix to no MPI output; - Updated I/O; - Updated Adapt CFL; - Updated Adaptive CFL number; - Release 3.2.8; - Updated SetCFL_Number; - Small update; - Small change; - Small adjustments; - Minor changes; - Updated release 3.2.8; - MPI disabled by default in build. Added --enable-mpi flag to configure.; - Merged the ParMETIS implementation. Updated the build files.; - bootstrap; - Started parallel CGNS reader.; - Memory fix.; - Minor change; - Merge branch 'develop' of https://github.com/su2code/SU2 into develop; - Updated binaries; - Small change to configure.ac. Bootstrap.; - Small change; - Cleaning the code; - Updated grid deformation subroutine; - Fixing the mesh deformation; - Updated SU2_MSH; - Bug fixing; - Initial implementation of parallel CGNS reader. Works on 1 rank.; - Merged in recent changes to geometry_structure.cpp.; - Periodic BC working in serial; - Update option_structure.hpp; - Merge pull request #154 from su2code/fixCOptionEnumList; - Bug fixing (periodic bc); - Merge branch 'develop' of https://github.com/su2code/SU2 into develop; - Another important updated to BC in parallel; - More implementation and clean up of the parallel CGNS reader.; - Merge branch 'develop' of https://github.com/su2code/SU2 into develop; - CGNS reader bug fix.; - Updated adj. NS solver with primitive variables and farfield bc including viscous contribution.; - Merge branch 'develop' of https://github.com/su2code/SU2 into develop; - Small change; - Back to the previous version; - Fixed some loop variables.; - Merge branch 'develop' of https://github.com/su2code/SU2 into develop; - Bug fixes for CGNS.; - New slope limiter based on the wall distance; - Merge branch 'develop' of https://github.com/su2code/SU2 into develop; - Bug fixing; - Non-dimensional adjoint bc; - CGNS bug.; - Mixed-element support in new CGNS reader.; - Memory fix for mixed-elem,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/174#issuecomment-101443812:6383,Update,Update,6383,https://su2code.github.io,https://github.com/su2code/SU2/pull/174#issuecomment-101443812,1,['Update'],['Update']
Deployability,"thanks for the commands. On Sat, Jan 10, 2015 at 11:54 AM, Trent Lukaczyk notifications@github.com; wrote:. > so now the file is being committed as deleted... please roll back to this; > commit; > spendres@6cbddbe; > https://github.com/spendres/SU2/commit/6cbddbe59cf5da89e89321b72ae20ab289a66520; > ; > here are the commands you can use --; > Reset the index to the desired tree; > ; > git reset 6cbddbe; > https://github.com/su2code/SU2/commit/6cbddbe59cf5da89e89321b72ae20ab289a66520; > Move the branch pointer back to the previous HEAD; > ; > git reset --soft HEAD@{1}; > ; > git commit -m ""Revert to 6cbddbe; > https://github.com/su2code/SU2/commit/6cbddbe59cf5da89e89321b72ae20ab289a66520; > ""; > Update working copy to reflect the new commit; > ; > git reset --hard; > ; > —; > Reply to this email directly or view it on GitHub; > https://github.com/su2code/SU2/pull/144#issuecomment-69462490.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/144#issuecomment-69483379:703,Update,Update,703,https://su2code.github.io,https://github.com/su2code/SU2/pull/144#issuecomment-69483379,1,['Update'],['Update']
Deployability,"thanks tom!. On Tue, Oct 14, 2014 at 12:30 AM, Thomas D. Economon <; notifications@github.com> wrote:. > Added the following system calls during the update/build phase to the; > serial and parallel regression python scripts in order to force testing of; > the develop branch:; > ; > $ git fetch; > $ git checkout develop; > $ git pull origin develop; > ; > —; > Reply to this email directly or view it on GitHub; > https://github.com/su2code/SU2/issues/75#issuecomment-59000470. ## ; - Trent Lukaczyk; Stanford University Engineering; Cornell University Engineering 2010; twl26@stanford.edu",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/75#issuecomment-59069424:149,update,update,149,https://su2code.github.io,https://github.com/su2code/SU2/issues/75#issuecomment-59069424,1,['update'],['update']
Deployability,"the desired python version with `CONFIGURE_OPTS=--enable-shared pyenv install <version>`. To recap, a ""workflow for newbies"" which appears to be working for me is. 1. install pyenv either from [source](https://github.com/pyenv/pyenv#installation) or from your distibution repositories, if available. IMPORTANT: make sure the environment variables are correctly set and `pyenv init` is added to your shell, as per the installation instructions.; 2. install the desired python version (for example 3.7.8), enabling shared libraries: ; `CONFIGURE_OPTS=--enable-shared pyenv install 3.7.8`; 3. clone/download the [feature_adap](https://github.com/su2code/SU2/tree/feature_adap) branch of SU2;; 4. in the SU2 folder, configure meson ; `./meson.py build` ; and make sure to update the environment variables in your `.bashrc` as indicated by meson's output.; 5. use ninja to build and install SU2 ; `./ninja -C build install`;; if you run into a permission error, specify an installation directory passing the `--prefix` option to meson, as explained [here](https://www.cfd-online.com/Forums/su2-installation/227676-su-installation-failed-due-insufficient-permissions.html). These passages, at least for me, result in a running SU2 with mesh adaptation, although I have made no tests on running actual simulations. That being said, the involvement of pyenv is due to the fact that the provided python wheel for pyamg is for python 3.7 only. If I understand correctly, the library itself is proprietary, sadly, so I assume @bmunguia has access either to the source files or to someone who can package them. Depending on the actual compatibility of the code, it would be nice if the wheel was updated to the latest python version, or at least the dependency on 3.7.* was removed. . @chesiv you can also try checking the logs in the `log.err` and `log.out` files to see if anything has gone wrong. Keep in mind all SU2 output is redirected to them, so you might not get any useful information on your terminal.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/948#issuecomment-751823130:2010,install,installation,2010,https://su2code.github.io,https://github.com/su2code/SU2/issues/948#issuecomment-751823130,3,"['install', 'update']","['installation', 'installation-failed-due-insufficient-permissions', 'updated']"
Deployability,the module if necessary.; SHA-1 tag stored in index does not match SHA tag stored in this script.; Installing SU2_CFD/src\SU2_CFD.exe to C:\bin\bin; Installing SU2_CFD/src\SU2_CFD_AD.exe to C:\bin\bin; Installing SU2_CFD/src\SU2_CFD_DIRECTDIFF.exe to C:\bin\bin; Installing SU2_DOT/src\SU2_DOT.exe to C:\bin\bin; Installing SU2_DOT/src\SU2_DOT_AD.exe to C:\bin\bin; Installing SU2_DEF/src\SU2_DEF.exe to C:\bin\bin; Installing SU2_GEO/src\SU2_GEO.exe to C:\bin\bin; Installing SU2_SOL/src\SU2_SOL.exe to C:\bin\bin; Installing SU2_PY/pySU2\_pysu2.dll to C:\bin\bin; Installing SU2_PY/pySU2\_pysu2.dll.a to C:\bin\lib; Installing SU2_PY/pySU2\_pysu2ad.dll to C:\bin\bin; Installing SU2_PY/pySU2\_pysu2ad.dll.a to C:\bin\lib; Installing C:\Users\Danie\Documents\SU2\SU2_PY\continuous_adjoint.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\compute_uncertainty.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\finite_differences.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\mesh_deformation.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\parallel_computation.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\parallel_computation_fsi.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\package_tests.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\shape_optimization.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\merge_solution.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\set_ffd_design_var.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\compute_polar.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\compute_multipoint.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\discrete_adjoint.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\direct_differentiation.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\fsi_computation.py to C:\bin\bin; Installing C:\Users\Dani,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1376:3996,Install,Installing,3996,https://su2code.github.io,https://github.com/su2code/SU2/issues/1376,1,['Install'],['Installing']
Deployability,"the older preconfig/mame/make install procedure.; Just do the preconfig process (with -u parameter) on a machine that is; connected to the internet so codi/medi versions will be updated; Next step: search the preconfig.py file for the codi/medi version (look; for ""sha_version_codi="" and ""sha_version_medi="").; Write down the two strings somewhere.; Then transfer the whole install folder to the disconnected cluster.; Once on the cluster, go to folder external/codi and touch a file by the; name of the string you have written down.; Repeat the same with medi (external/medi).; Now do on the cluster preconfig.py/make/make install (without -u). The; codi/medi versions will match now and the installation should work.; The problem with this procedure is that it is not supported anymore. It; still worked for me a short time ago with the develop branch (but failed on; the master branch). Meson/ninja installation is significantly more; efficient and most of the developers here ain't familiar with life without; an internet connection ... Last warning: the above-listed messages seem to point over a compiler; issue. If indeed this is the case then the bypass that I suggested is; irrelevant. On Tue, Apr 28, 2020 at 7:43 PM SumanVajjala <notifications@github.com>; wrote:. > @economon <https://github.com/economon> I have personally installed SU2; > software (from versions 3 to 6) in our cluster without problems. I think; > the issues could be because of lack of C11 features. I tried to run a; > sample code with aligned_alloc and I had problems with both Intel and GCC; > compilers. I'll test this again. I think I'll have to install gcc myself.; >; > Regards; > Suman; >; > —; > You are receiving this because you are subscribed to this thread.; > Reply to this email directly, view it on GitHub; > <https://github.com/su2code/SU2/issues/955#issuecomment-620724039>, or; > unsubscribe; > <https://github.com/notifications/unsubscribe-auth/ADZI3G66H554WAUPBYMWVADRO4BUNANCNFSM4MR3ATFA>; > .; >",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/955#issuecomment-621078198:1379,install,installed,1379,https://su2code.github.io,https://github.com/su2code/SU2/issues/955#issuecomment-621078198,2,['install'],"['install', 'installed']"
Deployability,this: ; ```; slimshady@arch-linux-hp-probook-g3-450: SU2_NEW$ meson --reconfigure build -Denable-openblas=true -Dwith-mpi=enabled -Denable-autodiff=true -Denable-directdiff=true -Denable-pywrapper=true --prefix=/home/slimshady/UserPackages/SU2_INSTALL_NEW; ```; It replaced the default lapack and openblas packages provided by pacman.; Then I ran the `ninja -j4 -C build install` command. It picked up from where it left off. The build was successful.; ```; slimshady@arch-linux-hp-probook-g3-450: SU2_NEW$ ninja -j4 -C build install; ninja: Entering directory `build'; [298/299] Installing files.; Installing SU2_CFD/src/SU2_CFD to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing SU2_CFD/src/SU2_CFD_AD to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing SU2_CFD/src/SU2_CFD_DIRECTDIFF to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing SU2_DOT/src/SU2_DOT to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing SU2_DOT/src/SU2_DOT_AD to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing SU2_DEF/src/SU2_DEF to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing SU2_GEO/src/SU2_GEO to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing SU2_MSH/src/SU2_MSH to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing SU2_SOL/src/SU2_SOL to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing SU2_PY/pySU2/_pysu2.so to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing SU2_PY/pySU2/_pysu2ad.so to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/continuous_adjoint.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/compute_uncertainty.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/finite_differences.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/mesh_d,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/991#issuecomment-632032044:649,Install,Installing,649,https://su2code.github.io,https://github.com/su2code/SU2/issues/991#issuecomment-632032044,10,['Install'],['Installing']
Deployability,"this=0x270d150, ; geometry=0x2105400, solver_container=0x23a1d70, config=0x209bc10, ; iRKStep=0, RunTime_EqSystem=21); at ../SU2_CFD/src/integration/CIntegration.cpp:205; #12 0x00000000004a2973 in CSingleGridIntegration::SingleGrid_Iteration (; this=0x270d150, geometry=0x2005130, solver_container=0x20058c0, ; numerics_container=0x20063b0, config=0x1de0e00, RunTime_EqSystem=21, ; iZone=1, iInst=0); at ../SU2_CFD/src/integration/CSingleGridIntegration.cpp:73; ---Type <return> to continue, or q <return> to quit---; #13 0x00000000004e33e4 in CHeatIteration::Iterate (this=0x270d170, ; output=0x20f0cc0, integration=0x1e3efe0, geometry=0x2005130, ; solver=0x20058c0, numerics=0x20063b0, config=0x1de0e00, ; surface_movement=0x1de0e20, grid_movement=0x1de0e40, FFDBox=0x1de0e60, ; val_iZone=1, val_iInst=0) at ../SU2_CFD/src/iteration/CHeatIteration.cpp:40; #14 0x00000000004db2ba in CFluidIteration::Solve (this=0x270d170, ; output=0x20f0cc0, integration=0x1e3efe0, geometry=0x2005130, ; solver=0x20058c0, numerics=0x20063b0, config=0x1de0e00, ; surface_movement=0x1de0e20, grid_movement=0x1de0e40, FFDBox=0x1de0e60, ; val_iZone=1, val_iInst=0); at ../SU2_CFD/src/iteration/CFluidIteration.cpp:302; #15 0x000000000047adec in CMultizoneDriver::Run_GaussSeidel (this=0x2009490); at ../SU2_CFD/src/drivers/CMultizoneDriver.cpp:329; #16 0x000000000047a415 in CMultizoneDriver::StartSolver (this=0x2009490); at ../SU2_CFD/src/drivers/CMultizoneDriver.cpp:193; #17 0x0000000000415413 in main (argc=2, argv=0x7fffffffbb18); at ../SU2_CFD/src/SU2_CFD.cpp:150; ```; </details>; Look at the backtraces if you like. The first is further in the program (compare 1st number 6 and 2nd number number 10).; The first waits at an `Allgather` and the 2nd at an `Allreduce`. . I am somewhat certain that the problem is this code bit which the second (the furhter back) backtrace points to. CSysVector.hpp -> `ScalarType dot` function l. 317; ```c++; /*--- Update shared variable with ""our"" partial sum. ---*/; atomicAdd",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1241:7570,integrat,integration,7570,https://su2code.github.io,https://github.com/su2code/SU2/issues/1241,1,['integrat'],['integration']
Deployability,"thon/pull/702"">actions/setup-python#702</a></li>; <li>Add range validation for toml files by <a href=""https://github.com/dmitry-shibanov""><code>@​dmitry-shibanov</code></a> in <a href=""https://redirect.github.com/actions/setup-python/pull/726"">actions/setup-python#726</a></li>; </ul>; <p><strong>Full Changelog</strong>: <a href=""https://github.com/actions/setup-python/compare/v4...v4.7.1"">https://github.com/actions/setup-python/compare/v4...v4.7.1</a></p>; <h2>v4.7.0</h2>; <p>In scope of this release, the support for reading python version from pyproject.toml was added (<a href=""https://redirect.github.com/actions/setup-python/pull/669"">actions/setup-python#669</a>).</p>; <pre lang=""yaml""><code> - name: Setup Python; uses: actions/setup-python@v4; &lt;/tr&gt;&lt;/table&gt; ; </code></pre>; </blockquote>; <p>... (truncated)</p>; </details>; <details>; <summary>Commits</summary>; <ul>; <li><a href=""https://github.com/actions/setup-python/commit/0a5c61591373683505ea898e09a3ea4f39ef2b9c""><code>0a5c615</code></a> Update action to node20 (<a href=""https://redirect.github.com/actions/setup-python/issues/772"">#772</a>)</li>; <li><a href=""https://github.com/actions/setup-python/commit/0ae58361cdfd39e2950bed97a1e26aa20c3d8955""><code>0ae5836</code></a> Add example of GraalPy to docs (<a href=""https://redirect.github.com/actions/setup-python/issues/773"">#773</a>)</li>; <li><a href=""https://github.com/actions/setup-python/commit/b64ffcaf5b410884ad320a9cfac8866006a109aa""><code>b64ffca</code></a> update actions/checkout to v4 (<a href=""https://redirect.github.com/actions/setup-python/issues/761"">#761</a>)</li>; <li><a href=""https://github.com/actions/setup-python/commit/8d2896179abf658742de432b3f203d2c2d86a587""><code>8d28961</code></a> Examples now use checkout@v4 (<a href=""https://redirect.github.com/actions/setup-python/issues/738"">#738</a>)</li>; <li><a href=""https://github.com/actions/setup-python/commit/7bc6abb01e0555719edc2dbca70a2fde309e5e56""><code>7bc6abb</code></a> advanc",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2233:4884,Update,Update,4884,https://su2code.github.io,https://github.com/su2code/SU2/pull/2233,1,['Update'],['Update']
Deployability,"thon\Python39\lib\site-packages\mpi4py\include; ; --- stderr ---; ; ; Message: Using mpi4py from C:\Users\KleineKampfzwergin\AppData\Local\Programs\Python\Python39\lib\site-packages\mpi4py\include; ""python-3.9-embed"" could not be found in LIBPC (None), this is likely due to a relocated python installation; Pkg-config binary for MachineChoice.HOST is cached.; Determining dependency 'python-3.9-embed' with pkg-config executable 'D:\\Programme\\pkg-config-lite-0.28-1_bin-win32\\pkg-config-lite-0.28-1\\bin\\pkg-config.EXE'; PKG_CONFIG_PATH: ; Called `D:\Programme\pkg-config-lite-0.28-1_bin-win32\pkg-config-lite-0.28-1\bin\pkg-config.EXE --modversion python-3.9-embed` -> 1; ; Found ""python-3.9-embed"" via fallback pkgconfig lookup in PKG_CONFIG_LIBDIR/PKG_CONFIG_PATH; Found ""python-3.9"" via SYSCONFIG module; Dependency python found: YES (sysconfig); Program install.sh found: YES (sh D:\Programme\SU2-7.1.1\SU2_PY/pySU2\install.sh); Message: -------------------------------------------------------------------------; | ___ _ _ ___ |; | / __| | | |_ ) Release 7.1.1 ""Blackbird"" |; | \__ \ |_| |/ / |; | |___/\___//___| Meson Configuration Summary |; | |; -------------------------------------------------------------------------; ; Option Value; ---------------------; TecIO: true; CGNS: true; AD (reverse): true; AD (forward): true; Python Wrapper: true; Intel-MKL: false; OpenBlas: false; PaStiX: false; Mixed Float: false; ; Please be sure to add the $SU2_HOME and $SU2_RUN environment variables,; and update your $PATH (and $PYTHONPATH if applicable) with $SU2_RUN; ; Based on the input to this configuration, add these lines to your .bashrc file:; ; export SU2_RUN=D:\Programme\SU2-7.1.1\bin/bin; export SU2_HOME=D:\Programme\SU2-7.1.1; export PATH=$PATH:$SU2_RUN; export PYTHONPATH=$PYTHONPATH:$SU2_RUN; ; Use './ninja -C D:\Programme\SU2-7.1.1\build install' to compile and install SU2; ; Build targets in project: 20; ; Found ninja.exe-1.9.0 at D:\Programme\SU2-7.1.1\ninja.exe; Running c",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/888#issuecomment-821840286:8537,Release,Release,8537,https://su2code.github.io,https://github.com/su2code/SU2/issues/888#issuecomment-821840286,1,['Release'],['Release']
Deployability,"thub.com/github/codeql-action/pull/2121"">#2121</a></li>; </ul>; <h2>3.24.0 - 02 Feb 2024</h2>; <ul>; <li>CodeQL Python analysis will no longer install dependencies on GitHub Enterprise Server, as is already the case for GitHub.com. See <a href=""https://github.com/github/codeql-action/blob/main/#3230---08-jan-2024"">release notes for 3.23.0</a> for more details. <a href=""https://redirect.github.com/github/codeql-action/pull/2106"">#2106</a></li>; </ul>; <h2>3.23.2 - 26 Jan 2024</h2>; <ul>; <li>On Linux, the maximum possible value for the <code>--threads</code> option now respects the CPU count as specified in <code>cgroup</code> files to more accurately reflect the number of available cores when running in containers. <a href=""https://redirect.github.com/github/codeql-action/pull/2083"">#2083</a></li>; <li>Update default CodeQL bundle version to 2.16.1. <a href=""https://redirect.github.com/github/codeql-action/pull/2096"">#2096</a></li>; </ul>; <h2>3.23.1 - 17 Jan 2024</h2>; <ul>; <li>Update default CodeQL bundle version to 2.16.0. <a href=""https://redirect.github.com/github/codeql-action/pull/2073"">#2073</a></li>; <li>Change the retention period for uploaded debug artifacts to 7 days. Previously, this was whatever the repository default was. <a href=""https://redirect.github.com/github/codeql-action/pull/2079"">#2079</a></li>; </ul>; <h2>3.23.0 - 08 Jan 2024</h2>; <ul>; <li>We are rolling out a feature in January 2024 that will disable Python dependency installation by default for all users. This improves the speed of analysis while having only a very minor impact on results. You can override this behavior by setting <code>CODEQL_ACTION_DISABLE_PYTHON_DEPENDENCY_INSTALLATION=false</code> in your workflow, however we plan to remove this ability in future versions of the CodeQL Action. <a href=""https://redirect.github.com/github/codeql-action/pull/2031"">#2031</a></li>; <li>The CodeQL Action now requires CodeQL version 2.11.6 or later. For more information, see <a href=""http",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2229:12307,Update,Update,12307,https://su2code.github.io,https://github.com/su2code/SU2/pull/2229,1,['Update'],['Update']
Deployability,"thub.com/robherley""><code>@​robherley</code></a> in <a href=""https://redirect.github.com/actions/cache/pull/1302"">actions/cache#1302</a></li>; </ul>; <h2>New Contributors</h2>; <ul>; <li><a href=""https://github.com/robherley""><code>@​robherley</code></a> made their first contribution in <a href=""https://redirect.github.com/actions/cache/pull/1302"">actions/cache#1302</a></li>; </ul>; <p><strong>Full Changelog</strong>: <a href=""https://github.com/actions/cache/compare/v3...v3.3.3"">https://github.com/actions/cache/compare/v3...v3.3.3</a></p>; <h2>v3.3.2</h2>; <h2>What's Changed</h2>; <ul>; <li>Fixed readme with new segment timeout values by <a href=""https://github.com/kotewar""><code>@​kotewar</code></a> in <a href=""https://redirect.github.com/actions/cache/pull/1133"">actions/cache#1133</a></li>; <li>Readme fixes by <a href=""https://github.com/kotewar""><code>@​kotewar</code></a> in <a href=""https://redirect.github.com/actions/cache/pull/1134"">actions/cache#1134</a></li>; <li>Updated description of the lookup-only input for main action by <a href=""https://github.com/kotewar""><code>@​kotewar</code></a> in <a href=""https://redirect.github.com/actions/cache/pull/1130"">actions/cache#1130</a></li>; <li>Change two new actions mention as quoted text by <a href=""https://github.com/bishal-pdMSFT""><code>@​bishal-pdMSFT</code></a> in <a href=""https://redirect.github.com/actions/cache/pull/1131"">actions/cache#1131</a></li>; <li>Update Cross-OS Caching tips by <a href=""https://github.com/pdotl""><code>@​pdotl</code></a> in <a href=""https://redirect.github.com/actions/cache/pull/1122"">actions/cache#1122</a></li>; <li>Bazel example (Take <a href=""https://redirect.github.com/actions/cache/issues/2"">#2</a>️⃣) by <a href=""https://github.com/vorburger""><code>@​vorburger</code></a> in <a href=""https://redirect.github.com/actions/cache/pull/1132"">actions/cache#1132</a></li>; <li>Remove actions to add new PRs and issues to a project board by <a href=""https://github.com/jorendorff""><code>@​jor",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2232:2591,Update,Updated,2591,https://su2code.github.io,https://github.com/su2code/SU2/pull/2232,1,['Update'],['Updated']
Deployability,"tion/artifact</code> NPM package</li>; </ul>; <h2>v2.1.2</h2>; <ul>; <li>Increase upload chunk size from 4MB to 8MB</li>; <li>Detect case insensitive file uploads</li>; </ul>; <h2>v2.1.1</h2>; <ul>; <li>Fix for certain symlinks not correctly being identified as directories before starting uploads</li>; </ul>; <h2>v2.1.0</h2>; <ul>; <li>Support for uploading artifacts with multiple paths</li>; <li>Support for using exclude paths</li>; <li>Updates to dependencies</li>; </ul>; <!-- raw HTML omitted -->; </blockquote>; <p>... (truncated)</p>; </details>; <details>; <summary>Commits</summary>; <ul>; <li><a href=""https://github.com/actions/upload-artifact/commit/3cea5372237819ed00197afe530f5a7ea3e805c8""><code>3cea537</code></a> Merge pull request <a href=""https://github-redirect.dependabot.com/actions/upload-artifact/issues/327"">#327</a> from actions/robherley/artifact-1.1.0</li>; <li><a href=""https://github.com/actions/upload-artifact/commit/849aa7758a428ee22be38de371b49c8bd57c4b9d""><code>849aa77</code></a> nvm use 12 &amp; npm run release</li>; <li><a href=""https://github.com/actions/upload-artifact/commit/4d3986961d0423ba9a593efb490a2960eb65f43b""><code>4d39869</code></a> recompile with correct ncc version</li>; <li><a href=""https://github.com/actions/upload-artifact/commit/2e0d362ec5cf81e334dda822c49c96dcd4b7df2c""><code>2e0d362</code></a> bump <code>@​actions/artifact</code> to 1.1.0</li>; <li><a href=""https://github.com/actions/upload-artifact/commit/09a5d6a283da3e7c9f3253a5d4cdab2347712a66""><code>09a5d6a</code></a> Merge pull request <a href=""https://github-redirect.dependabot.com/actions/upload-artifact/issues/320"">#320</a> from actions/dependabot/npm_and_yarn/ansi-regex-4.1.1</li>; <li><a href=""https://github.com/actions/upload-artifact/commit/189315d9106f43a2a8eb60836608bb96b1f69d77""><code>189315d</code></a> Bump ansi-regex from 4.1.0 to 4.1.1</li>; <li><a href=""https://github.com/actions/upload-artifact/commit/d159c2d80bf32e77611286e4d71bfe6d15208d88""><code>d159c2",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1756:2908,release,release,2908,https://su2code.github.io,https://github.com/su2code/SU2/pull/1756,1,['release'],['release']
Deployability,"tion=0x1e3efe0, geometry=0x2005130, ; solver=0x20058c0, numerics=0x20063b0, config=0x1de0e00, ; surface_movement=0x1de0e20, grid_movement=0x1de0e40, FFDBox=0x1de0e60, ; val_iZone=1, val_iInst=0); at ../SU2_CFD/src/iteration/CFluidIteration.cpp:302; #15 0x000000000047adec in CMultizoneDriver::Run_GaussSeidel (this=0x2009490); at ../SU2_CFD/src/drivers/CMultizoneDriver.cpp:329; #16 0x000000000047a415 in CMultizoneDriver::StartSolver (this=0x2009490); at ../SU2_CFD/src/drivers/CMultizoneDriver.cpp:193; #17 0x0000000000415413 in main (argc=2, argv=0x7fffffffbb18); at ../SU2_CFD/src/SU2_CFD.cpp:150; ```; </details>; Look at the backtraces if you like. The first is further in the program (compare 1st number 6 and 2nd number number 10).; The first waits at an `Allgather` and the 2nd at an `Allreduce`. . I am somewhat certain that the problem is this code bit which the second (the furhter back) backtrace points to. CSysVector.hpp -> `ScalarType dot` function l. 317; ```c++; /*--- Update shared variable with ""our"" partial sum. ---*/; atomicAdd(sum, dotRes);; SU2_MPI::Barrier(SU2_MPI::GetComm()); //added by tobi; #ifdef HAVE_MPI; /*--- Reduce across all mpi ranks, only master thread communicates.; * The nElm condition is to allow vectors to also be used locally. ---*/; std::cout << ""Rank: "" << SU2_MPI::GetRank() << "", nElm != nElmDomain="" << (nElm != nElmDomain) << std::endl; //added by tobi; if (nElm != nElmDomain) {; SU2_OMP_BARRIER; SU2_OMP_MASTER {; sum = dotRes;; const auto mpi_type = (sizeof(ScalarType) < sizeof(double)) ? MPI_FLOAT : MPI_DOUBLE;; SelectMPIWrapper<ScalarType>::W::Allreduce(&sum, &dotRes, 1, mpi_type, MPI_SUM, SU2_MPI::GetComm());; }; }; #endif; /*--- Make view of result consistent across threads. ---*/; SU2_OMP_BARRIER. return dotRes;; }; ```; The Problem is the `Allreduce` in the `if (nElm != nElmDomain) {` which leads to a freeze if not all ranks get the same result for that boolean.; The eagle eye prob already spotted the cout-Debugging in there. I a",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1241:8564,Update,Update,8564,https://su2code.github.io,https://github.com/su2code/SU2/issues/1241,1,['Update'],['Update']
Deployability,"tions are equivalent for smooth surfaces and clearly surface neighbors are always volume neighbors as well. However, at surfaces with sharp edges, two vertices can be volume neighbors without being surface neighbors. This happens when the edge of the volume element connecting the vertices lies inside the domain. `CInterpolator::ReconstructBoundary` is called from `CSlidingMesh::SetTransferCoeff`, which then hands the connectivity structure to `CSlidingMesh::Build_3D_surface_element`. The latter function forms a circular ordering of the neighbors of each vertex s: e.g. if there are four neighbors a,b,c,d of s with connectivity a-b,c-d,b-c,a-d then it performs an iteration over e.g. a-b-c-d. If we understand ""neighbors"" as ""surface neighbors"", the neighbors of any vertex s can be brought into a ""closed circle"" or ""open chain"" ordering where each of them is neighbor only to its direct predecessor and successor. This is not true for the volume neighbor relation however, and in this case the iteration might enter an infinite loop e-a-b-c-d-a-b-... (until the access to `element[ iElementNode ]` segfaults). That's approximately how we (@maxaehle,@mcmorelli,@BeckettZhou,@EduardoMolina) noticed the bug.; ; ## Related Work; #1344 . ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [X] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1346:2433,update,updated,2433,https://su2code.github.io,https://github.com/su2code/SU2/pull/1346,1,['update'],['updated']
Deployability,"tive(conservative) {}; ^; ../SU2_CFD/src/solvers/../../include/solvers/CScalarSolver.inl:33:101: error: invalid initializer for array member ‘su2double CScalarSolver<CTurbVariable>::upperlimit [2]’; ../SU2_CFD/src/solvers/../../include/solvers/CScalarSolver.inl:33:101: error: invalid initializer for array member ‘su2double CScalarSolver<CTurbVariable>::Solution_Inf [2]’; ../SU2_CFD/src/solvers/../../include/solvers/CScalarSolver.inl: In instantiation of ‘CScalarSolver<VariableType>::CScalarSolver(CGeometry*, CConfig*, bool) [with VariableType = CTurbVariable]’:; ../SU2_CFD/src/solvers/CTurbSolver.cpp:34:16: required from here; ../SU2_CFD/src/solvers/../../include/solvers/CScalarSolver.inl:37:43: error: invalid initializer for array member ‘su2double CScalarSolver<CTurbVariable>::lowerlimit [2]’; : CSolver(), Conservative(conservative) {; ^; ../SU2_CFD/src/solvers/../../include/solvers/CScalarSolver.inl:37:43: error: invalid initializer for array member ‘su2double CScalarSolver<CTurbVariable>::upperlimit [2]’; ../SU2_CFD/src/solvers/../../include/solvers/CScalarSolver.inl:37:43: error: invalid initializer for array member ‘su2double CScalarSolver<CTurbVariable>::Solution_Inf [2]’; [726/994] Compiling C++ object SU2_CFD/src/libSU2core_AD.a.p/solvers_CEulerSolver.cpp.o; ninja: build stopped: subcommand failed. **I suspect it got something to do with my GCC version. Since I can't update the system GCC, I tried to build the newer version of GCC locally and used it to build SU2. But then I encountered another systemic error that seem to be much more complicated (long errors, but one of them is..)**. > /home/FDa/FDa045/.local/lib64/libstdc++.so.6: no version information available (required by /usr/bin/swig) . I am happy if anybody could suggest me anything!!. **The remote server systems**; - OS: Linux (Red Hat Enterprise Linux Server 7.5 (Maipo)); - C++ compiler and version: [g++ (GCC) 4.8.5]; - MPI implementation and version: [OpenMPI 3.0.0]; - SU2 Version: [e.g., v7.2.1]",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1420:5150,update,update,5150,https://su2code.github.io,https://github.com/su2code/SU2/issues/1420,1,['update'],['update']
Deployability,to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/io; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/io/config_options.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/io; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/io/data.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/io; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/io/filelock.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/io; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/io/redirect.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/io; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/io/state.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/io; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/io/tools.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/io; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/io/historyMap.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/io; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/io/__init__.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/io; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/mesh/adapt.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/mesh; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/mesh/tools.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/mesh; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/mesh/__init__.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/mesh; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/opt/project.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/opt; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/opt/scipy_tools.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/opt; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/opt/__init__.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/opt; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/991#issuecomment-632032044:5407,Install,Installing,5407,https://su2code.github.io,https://github.com/su2code/SU2/issues/991#issuecomment-632032044,1,['Install'],['Installing']
Deployability,to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/io; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/io/redirect.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/io; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/io/state.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/io; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/io/tools.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/io; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/io/historyMap.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/io; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/io/__init__.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/io; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/mesh/adapt.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/mesh; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/mesh/tools.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/mesh; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/mesh/__init__.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/mesh; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/opt/project.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/opt; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/opt/scipy_tools.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/opt; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/opt/__init__.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/opt; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/run/adaptation.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/run; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/run/adjoint.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/run; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/run/deform.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/run; Installing /home/slimshady/UserPackages/SU2_NEW/S,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/991#issuecomment-632032044:5811,Install,Installing,5811,https://su2code.github.io,https://github.com/su2code/SU2/issues/991#issuecomment-632032044,1,['Install'],['Installing']
Deployability,"to run v&v on; major releases only, aka 7.0 but not 7.1, and I agree that keeping a record; of the most recent version checked is a good idea-and as necessary minor; releases could be tested, as suggested by individual developers. The regression tests should ensure that the v&v results will be unlikely to; be changed. One thing we can do to reduce that risk further would be to; introduce regression tests that compare solution files rather than the; terminal output alone. I can take a stab at that if there's no other; volunteers- probably only needs to be a couple of critical tests, the file; diff may be slightly more expensive than currently, but given the increase; in test precision and detail I think it would be worth it. H. On Thu, Sep 20, 2018, 1:46 PM erangit <notifications@github.com> wrote:. > Hi All; > I’m a bit worried about the logistics related to checking this v&v data; > base for every new release.; > Unlike the tutorials, these cases, by their nature will be large and will; > require long integrations(the 2D cases might not fall on this category).; > This means also that significant computational resources will be required; > for this evaluation (about twice a year for a growing list of cases). Is it; > practical?; > The only way that I think that it might work is that each contributor will; > be responsible for checking the casesthat he has introduced, before each; > release. Being a voluntary institution, this can not be enforced (and we do; > not want to enforce). How about trying to be less demanding:; > In each validation case there will be a statement about the last version; > that it was checked with and the responsible contributor. Each contributor; > will receive a recommendation to check his cases before a new release, and; > will be able to do that and update the OK label also after the release.; > Less waterproof but might be more workable.; > What do you think?; > Eran; >; > —; > You are receiving this because you are subscribed to this thr",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/581#issuecomment-423283690:1151,integrat,integrations,1151,https://su2code.github.io,https://github.com/su2code/SU2/issues/581#issuecomment-423283690,1,['integrat'],['integrations']
Deployability,"tps://github.com/actions/cache/compare/v3...v3.3.3"">https://github.com/actions/cache/compare/v3...v3.3.3</a></p>; <h2>v3.3.2</h2>; <h2>What's Changed</h2>; <ul>; <li>Fixed readme with new segment timeout values by <a href=""https://github.com/kotewar""><code>@​kotewar</code></a> in <a href=""https://redirect.github.com/actions/cache/pull/1133"">actions/cache#1133</a></li>; <li>Readme fixes by <a href=""https://github.com/kotewar""><code>@​kotewar</code></a> in <a href=""https://redirect.github.com/actions/cache/pull/1134"">actions/cache#1134</a></li>; <li>Updated description of the lookup-only input for main action by <a href=""https://github.com/kotewar""><code>@​kotewar</code></a> in <a href=""https://redirect.github.com/actions/cache/pull/1130"">actions/cache#1130</a></li>; <li>Change two new actions mention as quoted text by <a href=""https://github.com/bishal-pdMSFT""><code>@​bishal-pdMSFT</code></a> in <a href=""https://redirect.github.com/actions/cache/pull/1131"">actions/cache#1131</a></li>; <li>Update Cross-OS Caching tips by <a href=""https://github.com/pdotl""><code>@​pdotl</code></a> in <a href=""https://redirect.github.com/actions/cache/pull/1122"">actions/cache#1122</a></li>; <li>Bazel example (Take <a href=""https://redirect.github.com/actions/cache/issues/2"">#2</a>️⃣) by <a href=""https://github.com/vorburger""><code>@​vorburger</code></a> in <a href=""https://redirect.github.com/actions/cache/pull/1132"">actions/cache#1132</a></li>; <li>Remove actions to add new PRs and issues to a project board by <a href=""https://github.com/jorendorff""><code>@​jorendorff</code></a> in <a href=""https://redirect.github.com/actions/cache/pull/1187"">actions/cache#1187</a></li>; <li>Consume latest toolkit and fix dangling promise bug by <a href=""https://github.com/chkimes""><code>@​chkimes</code></a> in <a href=""https://redirect.github.com/actions/cache/pull/1217"">actions/cache#1217</a></li>; <li>Bump action version to 3.3.2 by <a href=""https://github.com/bethanyj28""><code>@​bethanyj28</code></",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2232:3040,Update,Update,3040,https://su2code.github.io,https://github.com/su2code/SU2/pull/2232,1,['Update'],['Update']
Deployability,"tps://github.com/su2code/SU2/actions/runs/8536216515/job/23386086770?pr=2246#step:7:2062). ```; ==2308==ERROR: AddressSanitizer: heap-buffer-overflow on address 0x60f0008c96a0 at pc 0x558b6435ae51 bp 0x7ffc1cebf680 sp 0x7ffc1cebf670; READ of size 8 at 0x60f0008c96a0 thread T0; #0 0x558b6435ae50 in CInterface::PreprocessAverage(CGeometry*, CGeometry*, CConfig const*, CConfig const*, unsigned short) ../SU2_CFD/src/interfaces/CInterface.cpp:314; #1 0x558b6373d23a in CDriver::PreprocessTurbomachinery(CConfig**, CGeometry****, CSolver*****, CInterface***, bool) ../SU2_CFD/src/drivers/CDriver.cpp:2725; #2 0x558b63770d76 in CDriver::CDriver(char*, unsigned short, int, bool) ../SU2_CFD/src/drivers/CDriver.cpp:250; #3 0x558b637f54c2 in CMultizoneDriver::CMultizoneDriver(char*, unsigned short, int) ../SU2_CFD/src/drivers/CMultizoneDriver.cpp:35; #4 0x558b63615b53 in main ../SU2_CFD/src/SU2_CFD.cpp:135; #5 0x7f0d8c503082 in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x24082); #6 0x558b6367005d in _start (/github/workspace/install/bin/SU2_CFD+0x63405d). 0x60f0008c96a0 is located 0 bytes to the right of 176-byte region [0x60f0008c95f0,0x60f0008c96a0); allocated by thread T0 here:; #0 0x7f0d8ed00787 in operator new[](unsigned long) ../../../../src/libsanitizer/asan/asan_new_delete.cc:107; #1 0x558b656d1590 in CPhysicalGeometry::ComputeNSpan(CConfig*, unsigned short, unsigned short, bool) ../Common/src/geometry/CPhysicalGeometry.cpp:4806; #2 0x558b6373c1df in CDriver::PreprocessTurbomachinery(CConfig**, CGeometry****, CSolver*****, CInterface***, bool) ../SU2_CFD/src/drivers/CDriver.cpp:2649; #3 0x558b63770d76 in CDriver::CDriver(char*, unsigned short, int, bool) ../SU2_CFD/src/drivers/CDriver.cpp:250; #4 0x558b637f54c2 in CMultizoneDriver::CMultizoneDriver(char*, unsigned short, int) ../SU2_CFD/src/drivers/CMultizoneDriver.cpp:35; #5 0x558b63615b53 in main ../SU2_CFD/src/SU2_CFD.cpp:135; #6 0x7f0d8c503082 in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x24082); ```",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2246#issuecomment-2034404720:1744,install,install,1744,https://su2code.github.io,https://github.com/su2code/SU2/pull/2246#issuecomment-2034404720,1,['install'],['install']
Deployability,"try****, CConfig**, unsigned long, unsigned short) (output_structure.cpp:12608); ==29692== by 0x905C0C: CMultizoneDriver::Output(unsigned long) (driver_direct_multizone.cpp:595); ==29692== by 0x905E23: CMultizoneDriver::StartSolver() (driver_direct_multizone.cpp:188); ==29692== by 0x364A19: main (SU2_CFD.cpp:174); ==29692== Block was alloc'd at; ==29692== at 0x483850F: operator new[](unsigned long) (vg_replace_malloc.c:423); ==29692== by 0x99F3EA: COutput::SortVolumetricConnectivity(CConfig*, CGeometry*, unsigned short, bool) (output_structure.cpp:15318); ==29692== by 0x9A14EC: COutput::SortConnectivity(CConfig*, CGeometry*, unsigned short, bool) (output_structure.cpp:14736); ==29692== by 0x9CCD39: COutput::SetResult_Files_Parallel(CSolver*****, CGeometry****, CConfig**, unsigned long, unsigned short) (output_structure.cpp:12485); ==29692== by 0x905C0C: CMultizoneDriver::Output(unsigned long) (driver_direct_multizone.cpp:595); ==29692== by 0x905E23: CMultizoneDriver::StartSolver() (driver_direct_multizone.cpp:188); ==29692== by 0x364A19: main (SU2_CFD.cpp:174); ```. If I run it in parallel and request output from PARAVIEW (so volume files are not written out) the error disappears, but it happens again when PARAVIEW_BINARY output is requested, so it's definitely on the volume writing structure. . There have been some changes to output_structure.cpp since the last released version 6.2.0, I wonder if those are the reason. When running it with the released version the seg fault is not there. I haven't tried yet with the new output currently being finalized by @talbring. . **To Reproduce**; To reproduce, run the case below using ```SU2_CFD config.cfg```; [square_beam.zip](https://github.com/su2code/SU2/files/3289851/square_beam.zip). **Desktop (please complete the following information):**; - OS: Antergos Linux x86-64 kernel 5.0.5-arch1-1-ARCH; - C++ compiler and version: GCC 8.2.1; - MPI implementation and version: OpenMPI 4.0.1; - SU2 Version: current develop vs v6.2.0",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/713:2891,release,released,2891,https://su2code.github.io,https://github.com/su2code/SU2/issues/713,2,['release'],['released']
Deployability,"ts\SU2\SU2_PY\SU2/run/__init__.py to C:\bin\bin/SU2/run; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/util/bunch.py to C:\bin\bin/SU2/util; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/util/filter_adjoint.py to C:\bin\bin/SU2/util; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/util/lhc_unif.py to C:\bin\bin/SU2/util; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/util/misc.py to C:\bin\bin/SU2/util; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/util/mp_eval.py to C:\bin\bin/SU2/util; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/util/ordered_bunch.py to C:\bin\bin/SU2/util; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/util/ordered_dict.py to C:\bin\bin/SU2/util; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/util/plot.py to C:\bin\bin/SU2/util; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/util/polarSweepLib.py to C:\bin\bin/SU2/util; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/util/which.py to C:\bin\bin/SU2/util; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/util/switch.py to C:\bin\bin/SU2/util; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/util/__init__.py to C:\bin\bin/SU2/util; Installing C:\Users\Danie\Documents\SU2\SU2_PY\FSI_tools/__init__.py to C:\bin\bin/FSI_tools; Installing C:\Users\Danie\Documents\SU2\SU2_PY\FSI_tools/FSIInterface.py to C:\bin\bin/FSI_tools; Installing C:\Users\Danie\Documents\SU2\SU2_PY\FSI_tools/FSI_config.py to C:\bin\bin/FSI_tools; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2_Nastran/__init__.py to C:\bin\bin/SU2_Nastran; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2_Nastran/pysu2_nastran.py to C:\bin\bin/SU2_Nastran; Running custom install script 'sh C:\\Users\\Danie\\Documents\\SU2\\SU2_PY/pySU2\\install.sh C:\\Users\\Danie\\Documents\\SU2\\build\\SU2_PY/pySU2 pysu2.py'; Failed to run install script 'sh C:\\Users\\Danie\\Documents\\SU2\\SU2_PY/pySU2\\install.sh C:\\Users\\Danie\\Documents\\SU2\\build\\SU2_PY/pySU2 pysu2.py'; FAILED: meson-install; ""C:\\User",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1376:8218,Install,Installing,8218,https://su2code.github.io,https://github.com/su2code/SU2/issues/1376,1,['Install'],['Installing']
Deployability,"tter cannot be avoided. ### Intro to SPMD; This one is simpler, in a nutshell multiple threads operate on the sub domain of an MPI rank.; The typical implementation has each thread executing a chunk of an edge or cell loop. **Why should we care about SPMD?**; Reduce the communication overhead resulting from domain decomposition and improve load balancing, important for strong scaling.; Some algorithms are more efficient that way, e.g. the ADT (as mentioned by Edwin), the current MG also seems to work better on fewer partitions, and additive versions of preconditioners like the ILU or LU-SGS lose effectiveness with number of partitions.; Optimum hardware utilization, for routines that are bandwidth-bound it may be beneficial to use all threads available, while for compute-bound or ""algorithm-bound"" ones this may not be the case. **Relation with algorithms**; A typical edge loop reads from 2 locations and writes to 2 locations (gather / scatter access pattern, not to be confused with the instructions) processing multiple edges at the same time can therefore result in race conditions where multiple threads try to update the data of the same point.; There are 3 ways to address this:; - **Coloring**: Edges are colored (grouped) such that edges of the same color have no risk of race conditions, i.e. each endpoint is referenced only once per color (this definition gives you the basis of a greedy algorithm to color edges).; - **Scatter to gather transformations**: Edge quantities (e.g. fluxes) are computed and stored on one pass (i.e. we read from 2 locations and write to 1), on a second pass, over points, we reduce (e.g. sum) the edge quantities for each point, again a gather access pattern. It may also be possible to convert the entire algorithm to a loop over points instead of edges.; - **Atomic operations or locks**: Here when a thread wants to write to a memory location it either needs to do so atomically (this is essentially an operations that always goes through main ",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/789#issuecomment-529662724:3961,update,update,3961,https://su2code.github.io,https://github.com/su2code/SU2/issues/789#issuecomment-529662724,2,['update'],['update']
Deployability,"ttps://github.com/actions/cache/commit/83394c99b7089b29ee6c302fad5e940df48c472a""><code>83394c9</code></a> Updated cache version in license file</li>; <li><a href=""https://github.com/actions/cache/commit/e839c25979e6ffdd90792d34de69d6a87d3016f6""><code>e839c25</code></a> Updated actions/cache version to 3.0.3</li>; <li><a href=""https://github.com/actions/cache/commit/33a923d660988a68affcd47de6bd6744193223a6""><code>33a923d</code></a> Added release information</li>; <li><a href=""https://github.com/actions/cache/commit/a404368986bb049d406166fc20afc01d032ad8a2""><code>a404368</code></a> Updated actions/cache version to 3.0.2</li>; <li><a href=""https://github.com/actions/cache/commit/f4278025ab0f432ce369118909e46deec636f50c""><code>f427802</code></a> Merge pull request <a href=""https://github-redirect.dependabot.com/actions/cache/issues/887"">#887</a> from actions/pdotl-version-patch</li>; <li><a href=""https://github.com/actions/cache/commit/9916fe1701f098b95a05e7c2bacee7c5a022c553""><code>9916fe1</code></a> Update cache version in licences</li>; <li><a href=""https://github.com/actions/cache/commit/318935ef66557a1906560e4e7d0069344a4b31bf""><code>318935e</code></a> Update README and RELEASES</li>; <li>Additional commits viewable in <a href=""https://github.com/actions/cache/compare/v1...v3"">compare view</a></li>; </ul>; </details>; <br />. [![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=actions/cache&package-manager=github_actions&previous-version=1&new-version=3)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores). Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`. [//]: # (dependabot-automerge-start); [//]: # (dependabot-automerge-end). ---. <details>; <summary>Dependabot commands and options</summary>; <br />. You can",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1755:8707,Update,Update,8707,https://su2code.github.io,https://github.com/su2code/SU2/pull/1755,1,['Update'],['Update']
Deployability,"ttps://github.com/actions/cache/commit/d49b6bb21d712fc1556f99339b8324b1603f7560""><code>d49b6bb</code></a> Updated actions/cache toolkit dep to v3.0.4</li>; <li><a href=""https://github.com/actions/cache/commit/a7c34adf76222e77931dedbf4a45b2e4648ced19""><code>a7c34ad</code></a> Merge pull request <a href=""https://github-redirect.dependabot.com/actions/cache/issues/894"">#894</a> from actions/kotewar/update-toolkit-version</li>; <li><a href=""https://github.com/actions/cache/commit/83394c99b7089b29ee6c302fad5e940df48c472a""><code>83394c9</code></a> Updated cache version in license file</li>; <li><a href=""https://github.com/actions/cache/commit/e839c25979e6ffdd90792d34de69d6a87d3016f6""><code>e839c25</code></a> Updated actions/cache version to 3.0.3</li>; <li><a href=""https://github.com/actions/cache/commit/33a923d660988a68affcd47de6bd6744193223a6""><code>33a923d</code></a> Added release information</li>; <li><a href=""https://github.com/actions/cache/commit/a404368986bb049d406166fc20afc01d032ad8a2""><code>a404368</code></a> Updated actions/cache version to 3.0.2</li>; <li><a href=""https://github.com/actions/cache/commit/f4278025ab0f432ce369118909e46deec636f50c""><code>f427802</code></a> Merge pull request <a href=""https://github-redirect.dependabot.com/actions/cache/issues/887"">#887</a> from actions/pdotl-version-patch</li>; <li><a href=""https://github.com/actions/cache/commit/9916fe1701f098b95a05e7c2bacee7c5a022c553""><code>9916fe1</code></a> Update cache version in licences</li>; <li><a href=""https://github.com/actions/cache/commit/318935ef66557a1906560e4e7d0069344a4b31bf""><code>318935e</code></a> Update README and RELEASES</li>; <li>Additional commits viewable in <a href=""https://github.com/actions/cache/compare/v1...v3"">compare view</a></li>; </ul>; </details>; <br />. [![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=actions/cache&package-manager=github_actions&previous-version=1&new-version=3)](https://docs",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1755:8281,Update,Updated,8281,https://su2code.github.io,https://github.com/su2code/SU2/pull/1755,1,['Update'],['Updated']
Deployability,ttps://github.com/su2code/SU2 into develop; - Bug fixing; - Non-dimensional adjoint bc; - CGNS bug.; - Mixed-element support in new CGNS reader.; - Memory fix for mixed-element CGNS in parallel.; - Activated the parallel CGNS reader.; - New FFD input; - Adjacency building for Parmetis improve to account for VTK structure; - added if viscous steps to some adjeuler bcs; - Minor changes; - Back to previous version of ParMetis; - Small change; - Final update.; - Minor bug fixed.; - Updated SU2_DEF (cgns); - CGNS global element ID bug fix.; - Heat flux bug fix.; - Small fix.; - Merge branch 'master' into develop; - changed history output to match # of residuals printed in header and body; - further correction to history output; - history file fix; - fixed history output such that massflowrate can be output while in rans; - Removed Parmetis updates to adjacency; - Minor changes; - Merge branch 'develop' of https://github.com/su2code/SU2 into develop; - Bug fixing; - ver 3.2.8.3; - Updated CGNS in parallel.; - Added the ability to writting 2 files at each checkpoint when using 2nd order dual time stepping; - Merge branch 'develop' into feature_dualoutput; - Updated FieldView; - Preliminary implementation (ASCII); - Minor changes; - Update code; - Updated FieldView format; - Merge branch 'develop' into feature_dualoutput; - Bug fixing; - Updated FieldView ASCII format; - Complete implementation of the FFD_CONTINUITY capability; - Updated FFD intersections; - ver 3.2.9; - adding targetea file to equivalent area adjoint folder. address issue #160; - Merge branch 'develop' of github.com:su2code/SU2 into develop; - Final push to v3.2.9; - after bootstrap; - updates to comments in config_structure to make doxygen pretty; - Bug fixing; - Merge branch 'develop'; - EA in ft^2; - further update to config; - Merge remote-tracking branch 'upstream/develop' into upstream_dev; - Minor changes; - Updated NF BC; - More adjustments; - Small update; - Final update Nearfield BC; - added mass,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/174#issuecomment-101443812:8194,Update,Updated,8194,https://su2code.github.io,https://github.com/su2code/SU2/pull/174#issuecomment-101443812,1,['Update'],['Updated']
Deployability,ttps://github.com/su2code/SU2 into develop; - CGNS reader bug fix.; - Updated adj. NS solver with primitive variables and farfield bc including viscous contribution.; - Merge branch 'develop' of https://github.com/su2code/SU2 into develop; - Small change; - Back to the previous version; - Fixed some loop variables.; - Merge branch 'develop' of https://github.com/su2code/SU2 into develop; - Bug fixes for CGNS.; - New slope limiter based on the wall distance; - Merge branch 'develop' of https://github.com/su2code/SU2 into develop; - Bug fixing; - Non-dimensional adjoint bc; - CGNS bug.; - Mixed-element support in new CGNS reader.; - Memory fix for mixed-element CGNS in parallel.; - Activated the parallel CGNS reader.; - New FFD input; - Adjacency building for Parmetis improve to account for VTK structure; - added if viscous steps to some adjeuler bcs; - Minor changes; - Back to previous version of ParMetis; - Small change; - Final update.; - Minor bug fixed.; - Updated SU2_DEF (cgns); - CGNS global element ID bug fix.; - Heat flux bug fix.; - Small fix.; - Merge branch 'master' into develop; - changed history output to match # of residuals printed in header and body; - further correction to history output; - history file fix; - fixed history output such that massflowrate can be output while in rans; - Removed Parmetis updates to adjacency; - Minor changes; - Merge branch 'develop' of https://github.com/su2code/SU2 into develop; - Bug fixing; - ver 3.2.8.3; - Updated CGNS in parallel.; - Added the ability to writting 2 files at each checkpoint when using 2nd order dual time stepping; - Merge branch 'develop' into feature_dualoutput; - Updated FieldView; - Preliminary implementation (ASCII); - Minor changes; - Update code; - Updated FieldView format; - Merge branch 'develop' into feature_dualoutput; - Bug fixing; - Updated FieldView ASCII format; - Complete implementation of the FFD_CONTINUITY capability; - Updated FFD intersections; - ver 3.2.9; - adding targetea file t,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/174#issuecomment-101443812:7687,Update,Updated,7687,https://su2code.github.io,https://github.com/su2code/SU2/pull/174#issuecomment-101443812,1,['Update'],['Updated']
Deployability,"ture of a future release is going in the direction of what you need. Compiled libraries would be easy to handle via pkg config. . Ah, I did not understand that this is something you were already working on and were asking me to test, I thought you were suggesting to use develop to install the software on our production cluster. I should not have assumed that, it's just something that is unfortunately quite frequent in the field of scientific software (just use the head of the git repo). I did not have any clone of the repo, so did not see that script (only the one in `legacy`) initially. . ```; $ ./preconfigure.py --help; usage: preconfigure.py [-h] [--with-own-meson] [--no-codi] [--no-medi]; [--no-opdi] [--no-mpp] [--no-coolprop] [--no-mel]; [--no-mlpcpp]. optional arguments:; -h, --help show this help message and exit; --with-own-meson download own copies of Meson and Ninja; --no-codi do not download own copy of CoDiPack; --no-medi do not download own copy of MeDiPack; --no-opdi do not download own copy of OpDiLib; --no-mpp do not download own copy of Mutationpp; --no-coolprop do not download own copy of CoolProp; --no-mel do not download own copy of MEL; --no-mlpcpp do not download copy of MLpCpp; ``` . It seems like to go in the right direction. Is there a plan to provide options to specify how to find installed copies of those ? Something like `--medi=/path/to/installed/medi` and such ? pkgconfig or other auto-detection mechanisms usually work, but sometimes it doesn't, and explicit workarounds sometimes help. . I also don't see other packages that end up in externals, such as `metis`, `parmetis`, `autotools`, `catch2`. I am not sure how those are used (or if they are used), but I noticed folders for them in the `externals` folder. Is there a plan to allow using external versions of those ?. > But your choices of words sound a bit unfriendly so I honestly don't care, we can also close the issue until the next release. My apologies, I misunderstood your request.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/2086#issuecomment-1645726352:1379,install,installed,1379,https://su2code.github.io,https://github.com/su2code/SU2/issues/2086#issuecomment-1645726352,3,"['install', 'release']","['installed', 'release']"
Deployability,"uch lower level, namely where the spatial residual is computed. At least, this should be the case for the fluid dynamics part. I don't know whether this is also the case for other disciplines, like structures. What about the following high level structure?. - Loop over the number of iterations, or time steps for unsteady problems.; - Loop over the number of pseudo-time steps for implicit time integration schemes; (DT_STEPPING_1ST and DT_STEPPING_2ND). For other cases this loop is 1.; - Loop over the number of disciplines involved; Call iterate for each of the disciplines.; In iterate: ; - Loop over the (Runge-Kutta) stages; - Loop over the zones of a single discipline; Compute spatial residual.; Update the state vector.; - End loop over the zones of a single discipline.; Exchange halo data. This includes the halo data between zones of a single discipline.; - End loop over the (Runge-Kutta) stages ; - End loop over the disciplines; - End loop over the pseudo time steps.; - End loop over the number of iterations, or time steps for unsteady problems. The weakness of this approach is that it still does not work when one would like to employ multi-stage time integration schemes for an unsteady, multi-disciplinary problem (does not work for the current implementation either), but maybe this is something we simply have to accept. The alternative is that all the details of the different time integration schemes have to be moved to the driver classes, which is highly undesirable, I think. The structure above implies that the iteration_container and the integration_container should be defined per discipline and not per zone anymore. The geometry_container and solver_container should still be defined per zone. Well, I suppose this leaves plenty of room for discussion, so I would say to continue the online discussion a bit further, such that things become a bit clearer how to tackle this issue. After that having a telecon would be good to iron out the details. . Regards,. Edwin",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/437#issuecomment-328368371:1516,integrat,integration,1516,https://su2code.github.io,https://github.com/su2code/SU2/issues/437#issuecomment-328368371,4,['integrat'],['integration']
Deployability,"uction and performance.; b. I think it is important to start the validation project, create a link; from the main SU2 web page to it, and than let it grow with the existing; mechanism of community contributions with approvals. Your list is very fine; for beginning. However I think we should strive to enrich it with 3D and; time dependent cases. I hope to be able to be in the loop and contribute to this important venue; Best; Eran; On Wed, Sep 19, 2018 at 8:26 PM Jayant Mukhopadhaya <; notifications@github.com> wrote:. > Hey everyone,; >; > Following the discussions at the SU2 Developers meeting this week, I; > wanted to start a conversation about compiling a comprehensive set of V&V; > cases for SU2 that can showcase it's performance in comparison to other; > solvers.; >; > I think the the NASA TMR website; > <https://turbmodels.larc.nasa.gov/index.html> is a good model to base it; > on. The idea would be to present the V&V case, provide working; > configuration and mesh files, and provide results comparing performance to; > other solvers and to higher fidelity data (when available). This allows; > people to see the performance of SU2 and replicate it, if need be.; >; > The first step would be compiling a list of cases that should be covered.; > The SU2 2014 SciTech paper; > <https://su2code.github.io/documents/SU2_AIAA_SciTech2014.pdf> would be a; > good starting point as it already had a couple of validation cases. This; > list can be bolstered with some of the NASA TMR cases, and with grid; > convergence studies. I would like to propose an initial list that the; > community can talk through and make changes as we see fit. I am mostly only; > familiar with canonical CFD flows that are used in these cases. But it; > would be great to have other cases, such as Turbo-machinary or FSI cases,; > that show the full breadth of SU2's abilities. This is by no means an; > exhaustive list:; >; > 1. Zero Gradient Flat Plate; > 2. 2D and 3D Bump in Channel; > 3. Asymmetric Dif",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/581#issuecomment-423070900:1284,configurat,configuration,1284,https://su2code.github.io,https://github.com/su2code/SU2/issues/581#issuecomment-423070900,1,['configurat'],['configuration']
Deployability,"uctures. What about the following high level structure?. * Loop over the number of iterations, or time steps for unsteady problems.; * Loop over the number of pseudo-time steps for implicit time integration schemes; (DT_STEPPING_1ST and DT_STEPPING_2ND). For other cases this loop is 1.; * Loop over the number of disciplines involved; Call iterate for each of the disciplines.; In iterate:; * Loop over the (Runge-Kutta) stages; * Loop over the zones of a single discipline; Compute spatial residual.; Update the state vector.; * End loop over the zones of a single discipline.; Exchange halo data. This includes the halo data between zones of a single discipline.; * End loop over the (Runge-Kutta) stages; * End loop over the disciplines; * End loop over the pseudo time steps.; * End loop over the number of iterations, or time steps for unsteady problems. The weakness of this approach is that it still does not work when one would like to employ multi-stage time integration schemes for an unsteady, multi-disciplinary problem (does not work for the current implementation either), but maybe this is something we simply have to accept. The alternative is that all the details of the different time integration schemes have to be moved to the driver classes, which is highly undesirable, I think. The structure above implies that the iteration_container and the integration_container should be defined per discipline and not per zone anymore. The geometry_container and solver_container should still be defined per zone. Well, I suppose this leaves plenty of room for discussion, so I would say to continue the online discussion a bit further, such that things become a bit clearer how to tackle this issue. After that having a telecon would be good to iron out the details. Regards,. Edwin. —; You are receiving this because you are subscribed to this thread.; Reply to this email directly, view it on GitHub<https://github.com/su2code/SU2/issues/437#issuecomment-328368371>, or mute the thread<",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/437#issuecomment-328403160:3025,integrat,integration,3025,https://su2code.github.io,https://github.com/su2code/SU2/issues/437#issuecomment-328403160,2,['integrat'],['integration']
Deployability,"ull request!. Where needed and if possible, we’ve adjusted the configuration to the needs of your particular repository. But of course, you should feel free to tweak it further! Check [this page](https://docs.github.com/en/code-security/code-scanning/automatically-scanning-your-code-for-vulnerabilities-and-errors/configuring-code-scanning#editing-a-code-scanning-workflow) for detailed documentation. Questions? Check out the FAQ below!. ### FAQ; <details>; <summary>Click here to expand the FAQ section</summary>. #### How often will the code scanning analysis run?; By default, code scanning will trigger a scan with the CodeQL engine on the following events:; * On every pull request — to flag up potential security problems for you to investigate before merging a PR.; * On every push to your default branch and other protected branches — this keeps the analysis results on your repository’s *Security* tab up to date.; * Once a week at a fixed time — to make sure you benefit from the latest updated security analysis even when no code was committed or PRs were opened. #### What will this cost?; Nothing! The CodeQL engine will run inside GitHub Actions, making use of your [unlimited free compute minutes for public repositories](https://docs.github.com/en/actions/learn-github-actions/usage-limits-billing-and-administration#about-billing-for-github-actions). #### What types of problems does CodeQL find?; The CodeQL engine that powers GitHub code scanning is the exact same engine that powers LGTM.com. The exact set of rules has been tweaked slightly, but you should see almost exactly the same types of alerts as you were used to on LGTM.com: we’ve enabled the [`security-and-quality` query suite](https://docs.github.com/en/code-security/code-scanning/automatically-scanning-your-code-for-vulnerabilities-and-errors/configuring-code-scanning#using-queries-in-ql-packs) for you. #### How do I upgrade my CodeQL engine?; No need! New versions of the CodeQL analysis are constantly deploy",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1840:2310,update,updated,2310,https://su2code.github.io,https://github.com/su2code/SU2/pull/1840,1,['update'],['updated']
Deployability,"uments\SU2\SU2_PY\SU2/util/lhc_unif.py to C:\bin\bin/SU2/util; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/util/misc.py to C:\bin\bin/SU2/util; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/util/mp_eval.py to C:\bin\bin/SU2/util; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/util/ordered_bunch.py to C:\bin\bin/SU2/util; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/util/ordered_dict.py to C:\bin\bin/SU2/util; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/util/plot.py to C:\bin\bin/SU2/util; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/util/polarSweepLib.py to C:\bin\bin/SU2/util; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/util/which.py to C:\bin\bin/SU2/util; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/util/switch.py to C:\bin\bin/SU2/util; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/util/__init__.py to C:\bin\bin/SU2/util; Installing C:\Users\Danie\Documents\SU2\SU2_PY\FSI_tools/__init__.py to C:\bin\bin/FSI_tools; Installing C:\Users\Danie\Documents\SU2\SU2_PY\FSI_tools/FSIInterface.py to C:\bin\bin/FSI_tools; Installing C:\Users\Danie\Documents\SU2\SU2_PY\FSI_tools/FSI_config.py to C:\bin\bin/FSI_tools; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2_Nastran/__init__.py to C:\bin\bin/SU2_Nastran; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2_Nastran/pysu2_nastran.py to C:\bin\bin/SU2_Nastran; Running custom install script 'sh C:\\Users\\Danie\\Documents\\SU2\\SU2_PY/pySU2\\install.sh C:\\Users\\Danie\\Documents\\SU2\\build\\SU2_PY/pySU2 pysu2.py'; Failed to run install script 'sh C:\\Users\\Danie\\Documents\\SU2\\SU2_PY/pySU2\\install.sh C:\\Users\\Danie\\Documents\\SU2\\build\\SU2_PY/pySU2 pysu2.py'; FAILED: meson-install; ""C:\\Users\\Danie\\Anaconda3\\envs\\vsptools\\python.exe"" ""C:\\Users\\Danie\\Documents\\SU2\\meson.py"" ""install"" ""--no-rebuild""; ninja: build stopped: subcommand failed.`. I think it might be due to the fact that I am working in an Anaconda environment. But maybe not. Any thoughts?",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1376:8494,Install,Installing,8494,https://su2code.github.io,https://github.com/su2code/SU2/issues/1376,10,"['Install', 'install']","['Installing', 'install']"
Deployability,"ummary>Release notes</summary>; <p><em>Sourced from <a href=""https://github.com/actions/upload-release-asset/releases"">actions/upload-release-asset's releases</a>.</em></p>; <blockquote>; <h2>Automate sliding major version number</h2>; <p>This is a minor update to make the current release have the latest code from master, and additionally allows for a new automation workflow to execute to automate the sliding of the major (v1, v2, v3, etc) version numbers for ease of referencing</p>; </blockquote>; </details>; <details>; <summary>Commits</summary>; <ul>; <li><a href=""https://github.com/actions/upload-release-asset/commit/e8f9f06c4b078e705bd2ea027f0926603fc9b4d5""><code>e8f9f06</code></a> Merge pull request <a href=""https://github-redirect.dependabot.com/actions/upload-release-asset/issues/27"">#27</a> from actions/IAmHughes/add-automated-versioning</li>; <li><a href=""https://github.com/actions/upload-release-asset/commit/14187540b829095dbe6f33eb1b166503318e9ceb""><code>1418754</code></a> Add versioning action to automatically slide major versions with releases</li>; <li><a href=""https://github.com/actions/upload-release-asset/commit/7d8fb6c931cb341bda0f898a0d2191cf54abc69a""><code>7d8fb6c</code></a> Merge pull request <a href=""https://github-redirect.dependabot.com/actions/upload-release-asset/issues/6"">#6</a> from actions/IAmHughes/fix-link-to-license</li>; <li><a href=""https://github.com/actions/upload-release-asset/commit/c53f077c5d8c19236718abc4697a59634ef534cf""><code>c53f077</code></a> Fix link to LICENSE</li>; <li><a href=""https://github.com/actions/upload-release-asset/commit/72e8a5ef036620fb7afff8bbb8f9e78910c7ccbc""><code>72e8a5e</code></a> Merge pull request <a href=""https://github-redirect.dependabot.com/actions/upload-release-asset/issues/5"">#5</a> from cesperanc/documentation-update</li>; <li><a href=""https://github.com/actions/upload-release-asset/commit/bf2a7fbecfaaaa29f7819c650ad302e52f68238e""><code>bf2a7fb</code></a> Update example to use the fixed versio",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1737:1033,release,release-asset,1033,https://su2code.github.io,https://github.com/su2code/SU2/pull/1737,6,['release'],"['release-asset', 'releases']"
Deployability,update,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/178:0,update,update,0,https://su2code.github.io,https://github.com/su2code/SU2/pull/178,1,['update'],['update']
Deployability,update QuickStart example,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2066:0,update,update,0,https://su2code.github.io,https://github.com/su2code/SU2/pull/2066,1,['update'],['update']
Deployability,update docker images,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1855:0,update,update,0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1855,1,['update'],['update']
Deployability,update master,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1216:0,update,update,0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1216,5,['update'],['update']
Deployability,update regression.yml,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2371:0,update,update,0,https://su2code.github.io,https://github.com/su2code/SU2/pull/2371,1,['update'],['update']
Deployability,update style guide,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/89:0,update,update,0,https://su2code.github.io,https://github.com/su2code/SU2/issues/89,2,['update'],['update']
Deployability,update to TestCases/optimization_euler/steady_oneram6/inv_ONERM6_basic.cfg,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/362:0,update,update,0,https://su2code.github.io,https://github.com/su2code/SU2/pull/362,1,['update'],['update']
Deployability,update xcode,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1660:0,update,update,0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1660,1,['update'],['update']
Deployability,"update: validated with the incompressible solver with SA and SST, will add that as a validation and tutorial. To do: validation with a compressible test case.; Future work: validation for heated walls. Less data is available for validation. Let me know if you have a good test case.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1204#issuecomment-811858115:0,update,update,0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1204#issuecomment-811858115,1,['update'],['update']
Deployability,"upling of SU2 with external structural codes (e.g. NASTRAN, TACS, Airbus structural suite Lagrange) for gradient-based aerodynamic shape and structural sizing optimization using dedicated frameworks (e.g. OpenMDAO). . Startup development costs include the creation of modular tools that are _designed to be driven_ by another framework like OpenMDAO, rather than _to drive execution_ themselves. However, leveraging those MDAO frameworks assumes that software codes and modules to be coupled exist, have appropriate data structures, execution and query APIs, and are wrapped in Python for flexibility and ease of use. The proposed changes were motivated with the goal of making SU2 more modular and flexible, particularly to facilitate its integration into large-scale MDAO frameworks. For more details on the motivation, methodology, and verification & validation results, please refer to our [paper from AIAA Aviation 2022](https://doi.org/10.2514/6.2022-3358). . ## Proposed Changes; @aa-g and I propose the following code updates:. 1. Implementation of residual-based discrete adjoint solver as `CDiscAdjResidualSolver`; a. New config option: `KIND_DISC_ADJ` . 2. Enhancements and standardization of SU2 Python API; a. Add pysu2/pysu2ad methods; b. Standardize Python API and function names ; c. Overloaded getter/setter methods to make data handling more flexible. ## Related Work; These efforts are related to Issue #1262, Pull Request #1300, and Discussion [#1325](https://github.com/su2code/SU2/discussions/1325). . ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [X] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [X] I used the pre-commit hook to prevent dirty commits and used pre-commit run --all to format old commits.; - [ ] I have added a test case that demonstrates my contribution, if",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1750:1437,update,updates,1437,https://su2code.github.io,https://github.com/su2code/SU2/pull/1750,1,['update'],['updates']
Deployability,"urbed solution).; This linear system is much more ill-conditioned, and so in addition to the classical linear preconditioners, it is possible to use the traditional linear system as the preconditioner (you gotta love the kind of stuff SU2 lets you get away with sometimes).; This nesting makes each iteration potentially very expensive, it is crucial not to ""over solve"" the linear systems, and to use adaptive CFL to run always at the highest CFL possible. Notwithstanding the preconditioner madness, this also works for explicit solvers, but that may only be good enough for dual time methods with relatively small time steps. This seems to be good at converging problems that would otherwise not get past a limit cycle.; I do not expect it to be faster when that is not a problem. Some references:; https://arc.aiaa.org/doi/abs/10.2514/6.2021-0857; https://arc.aiaa.org/doi/10.2514/1.J052255. Example config for the RANS ONERA M6 in the repo: [turb_ONERAM6_nk.txt](https://github.com/su2code/SU2/files/5947580/turb_ONERAM6_nk.txt); It contains the explanation and recommendations for the different parameters. The initial idea was to couple all solvers (flow, turbulence, etc.) but that makes the problem even more ill-conditioned and so I took a step back (as that also makes the implementation simpler...).; The skeleton of the coupled iteration exists in commit c97221b6f7dfd315dfceb9f59f8928790c78e0ce and it was functional... if anyone wants to take it further, it's there. ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1183:2194,update,updated,2194,https://su2code.github.io,https://github.com/su2code/SU2/pull/1183,1,['update'],['updated']
Deployability,"urces/Python3.7/convert.c:114:3: note: 'sprintf' output between 6 and 1029 bytes into a destination of size 1024; sprintf(OutMet, ""%s.solb"", mshopt->OutNam);; ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~; ./sources/Python3.7/convert.c: In function 'ConvertSU2SolToGMF':; ./sources/Python3.7/convert.c:143:24: warning: '.solb' directive writing 5 bytes into a region of size between 1 and 1024 [-Wformat-overflow=]; sprintf(OutSol, ""%s.solb"", mshopt->OutNam);; ^~~~~; ./sources/Python3.7/convert.c:143:5: note: 'sprintf' output between 6 and 1029 bytes into a destination of size 1024; sprintf(OutSol, ""%s.solb"", mshopt->OutNam);; ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~; writing build\temp.win-amd64-3.8\Release\.\sources\python3.7\_amgio.cp38-win_amd64.def; creating build\lib.win-amd64-3.8; C:\Program Files\mingw-w64\x86_64-8.1.0-posix-seh-rt_v6-rev0\mingw64\bin\gcc.exe -shared -s build\temp.win-amd64-3.8\Release\.\sources\python3.7\amgio_py.o build\temp.win-amd64-3.8\Release\.\sources\python3.7\mesh.o build\temp.win-amd64-3.8\Release\.\sources\python3.7\gmfio.o build\temp.win-amd64-3.8\Release\.\sources\python3.7\su2io.o build\temp.win-amd64-3.8\Release\.\sources\python3.7\option.o build\temp.win-amd64-3.8\Release\.\sources\python3.7\libmesh6.o build\temp.win-amd64-3.8\Release\.\sources\python3.7\amgio_py_wrap.o build\temp.win-amd64-3.8\Release\.\sources\python3.7\convert.o build\temp.win-amd64-3.8\Release\.\sources\python3.7\_amgio.cp38-win_amd64.def -LC:\Users\Danie\Anaconda3\envs\vsptools\libs -LC:\Users\Danie\Anaconda3\envs\vsptools\PCbuild\amd64 -lpython38 -lmsvcr140 -o build\lib.win-amd64-3.8\_amgio.cp38-win_amd64.pyd; C:/Program Files/mingw-w64/x86_64-8.1.0-posix-seh-rt_v6-rev0/mingw64/bin/../lib/gcc/x86_64-w64-mingw32/8.1.0/../../../../x86_64-w64-mingw32/bin/ld.exe: cannot find -lmsvcr140; collect2.exe: error: ld returned 1 exit status; error: command 'C:\\Program Files\\mingw-w64\\x86_64-8.1.0-posix-seh-rt_v6-rev0\\mingw64\\bin\\gcc.exe' failed with exit status 1`",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1379:9656,Release,Release,9656,https://su2code.github.io,https://github.com/su2code/SU2/issues/1379,7,['Release'],['Release']
Deployability,"ut to the <code>init</code> Action. <a href=""https://redirect.github.com/github/codeql-action/pull/2147"">#2147</a></li>; </ul>; <h2>3.24.2 - 15 Feb 2024</h2>; <ul>; <li>Enable improved multi-threaded performance on larger runners for GitHub Enterprise Server users. This feature is already available to GitHub.com users. <a href=""https://redirect.github.com/github/codeql-action/pull/2141"">#2141</a></li>; </ul>; <h2>3.24.1 - 13 Feb 2024</h2>; <ul>; <li>Update default CodeQL bundle version to 2.16.2. <a href=""https://redirect.github.com/github/codeql-action/pull/2124"">#2124</a></li>; <li>The CodeQL action no longer fails if it can't write to the telemetry api endpoint. <a href=""https://redirect.github.com/github/codeql-action/pull/2121"">#2121</a></li>; </ul>; <h2>3.24.0 - 02 Feb 2024</h2>; <ul>; <li>CodeQL Python analysis will no longer install dependencies on GitHub Enterprise Server, as is already the case for GitHub.com. See <a href=""https://github.com/github/codeql-action/blob/main/#3230---08-jan-2024"">release notes for 3.23.0</a> for more details. <a href=""https://redirect.github.com/github/codeql-action/pull/2106"">#2106</a></li>; </ul>; <h2>3.23.2 - 26 Jan 2024</h2>; <ul>; <li>On Linux, the maximum possible value for the <code>--threads</code> option now respects the CPU count as specified in <code>cgroup</code> files to more accurately reflect the number of available cores when running in containers. <a href=""https://redirect.github.com/github/codeql-action/pull/2083"">#2083</a></li>; <li>Update default CodeQL bundle version to 2.16.1. <a href=""https://redirect.github.com/github/codeql-action/pull/2096"">#2096</a></li>; </ul>; <h2>3.23.1 - 17 Jan 2024</h2>; <ul>; <li>Update default CodeQL bundle version to 2.16.0. <a href=""https://redirect.github.com/github/codeql-action/pull/2073"">#2073</a></li>; <li>Change the retention period for uploaded debug artifacts to 7 days. Previously, this was whatever the repository default was. <a href=""https://redirect.github.com/git",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2229:11628,release,release,11628,https://su2code.github.io,https://github.com/su2code/SU2/pull/2229,1,['release'],['release']
Deployability,"ut; - Adjacency building for Parmetis improve to account for VTK structure; - added if viscous steps to some adjeuler bcs; - Minor changes; - Back to previous version of ParMetis; - Small change; - Final update.; - Minor bug fixed.; - Updated SU2_DEF (cgns); - CGNS global element ID bug fix.; - Heat flux bug fix.; - Small fix.; - Merge branch 'master' into develop; - changed history output to match # of residuals printed in header and body; - further correction to history output; - history file fix; - fixed history output such that massflowrate can be output while in rans; - Removed Parmetis updates to adjacency; - Minor changes; - Merge branch 'develop' of https://github.com/su2code/SU2 into develop; - Bug fixing; - ver 3.2.8.3; - Updated CGNS in parallel.; - Added the ability to writting 2 files at each checkpoint when using 2nd order dual time stepping; - Merge branch 'develop' into feature_dualoutput; - Updated FieldView; - Preliminary implementation (ASCII); - Minor changes; - Update code; - Updated FieldView format; - Merge branch 'develop' into feature_dualoutput; - Bug fixing; - Updated FieldView ASCII format; - Complete implementation of the FFD_CONTINUITY capability; - Updated FFD intersections; - ver 3.2.9; - adding targetea file to equivalent area adjoint folder. address issue #160; - Merge branch 'develop' of github.com:su2code/SU2 into develop; - Final push to v3.2.9; - after bootstrap; - updates to comments in config_structure to make doxygen pretty; - Bug fixing; - Merge branch 'develop'; - EA in ft^2; - further update to config; - Merge remote-tracking branch 'upstream/develop' into upstream_dev; - Minor changes; - Updated NF BC; - More adjustments; - Small update; - Final update Nearfield BC; - added massflowrate as option for cauchy criteria, more config file comments; - Merge remote-tracking branch 'upstream/develop' into upstream_dev; - paraview output modified/added back in for current version for SU2_DEF; - Merge branch 'develop' into feature_",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/174#issuecomment-101443812:8373,Update,Updated,8373,https://su2code.github.io,https://github.com/su2code/SU2/pull/174#issuecomment-101443812,5,['Update'],"['Update', 'Updated']"
Deployability,"v3...v3.3.2</a></p>; <h2>v3.3.1</h2>; <h2>What's Changed</h2>; <ul>; <li>Reduced download segment size to 128 MB and timeout to 10 minutes by <a href=""https://github.com/kotewar""><code>@​kotewar</code></a> in <a href=""https://redirect.github.com/actions/cache/pull/1129"">actions/cache#1129</a></li>; </ul>; <p><strong>Full Changelog</strong>: <a href=""https://github.com/actions/cache/compare/v3...v3.3.1"">https://github.com/actions/cache/compare/v3...v3.3.1</a></p>; <h2>v3.3.0</h2>; <h2>What's Changed</h2>; <ul>; <li>Bug: Permission is missing in cache delete example by <a href=""https://github.com/kotokaze""><code>@​kotokaze</code></a> in <a href=""https://redirect.github.com/actions/cache/pull/1123"">actions/cache#1123</a></li>; </ul>; <!-- raw HTML omitted -->; </blockquote>; <p>... (truncated)</p>; </details>; <details>; <summary>Changelog</summary>; <p><em>Sourced from <a href=""https://github.com/actions/cache/blob/main/RELEASES.md"">actions/cache's changelog</a>.</em></p>; <blockquote>; <h1>Releases</h1>; <h3>4.0.1</h3>; <ul>; <li>Updated <code>isGhes</code> check</li>; </ul>; <h3>4.0.0</h3>; <ul>; <li>Updated minimum runner version support from node 12 -&gt; node 20</li>; </ul>; <h3>3.3.3</h3>; <ul>; <li>Updates <code>@​actions/cache</code> to v3.2.3 to fix accidental mutated path arguments to <code>getCacheVersion</code> <a href=""https://redirect.github.com/actions/toolkit/pull/1378"">actions/toolkit#1378</a></li>; <li>Additional audit fixes of npm package(s)</li>; </ul>; <h3>3.3.2</h3>; <ul>; <li>Fixes bug with Azure SDK causing blob downloads to get stuck.</li>; </ul>; <h3>3.3.1</h3>; <ul>; <li>Reduced segment size to 128MB and segment timeout to 10 minutes to fail fast in case the cache download is stuck.</li>; </ul>; <h3>3.3.0</h3>; <ul>; <li>Added option to lookup cache without downloading it.</li>; </ul>; <h3>3.2.6</h3>; <ul>; <li>Fix zstd not being used after zstd version upgrade to 1.5.4 on hosted runners.</li>; </ul>; <h3>3.2.5</h3>; <ul>; <li>Added fix to p",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2232:6109,Release,Releases,6109,https://su2code.github.io,https://github.com/su2code/SU2/pull/2232,1,['Release'],['Releases']
Deployability,"via pull request #132 into the develop branch - tested on naca0012 in euler and navier stokes continuous adjoint test cases, CFL number is updated and the solution convergs faster.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/131#issuecomment-62266439:94,continuous,continuous,94,https://su2code.github.io,https://github.com/su2code/SU2/issues/131#issuecomment-62266439,2,"['continuous', 'update']","['continuous', 'updated']"
Deployability,"vironment variable <code>SEGMENT_DOWNLOAD_TIMEOUT_MIN</code>. Default is 60 minutes.</li>; </ul>; </blockquote>; </details>; <details>; <summary>Commits</summary>; <ul>; <li><a href=""https://github.com/actions/cache/commit/fd5de65bc895cf536527842281bea11763fefd77""><code>fd5de65</code></a> Merge pull request <a href=""https://github-redirect.dependabot.com/actions/cache/issues/899"">#899</a> from actions/kotewar/download-and-compression-fix</li>; <li><a href=""https://github.com/actions/cache/commit/d49b6bb21d712fc1556f99339b8324b1603f7560""><code>d49b6bb</code></a> Updated actions/cache toolkit dep to v3.0.4</li>; <li><a href=""https://github.com/actions/cache/commit/a7c34adf76222e77931dedbf4a45b2e4648ced19""><code>a7c34ad</code></a> Merge pull request <a href=""https://github-redirect.dependabot.com/actions/cache/issues/894"">#894</a> from actions/kotewar/update-toolkit-version</li>; <li><a href=""https://github.com/actions/cache/commit/83394c99b7089b29ee6c302fad5e940df48c472a""><code>83394c9</code></a> Updated cache version in license file</li>; <li><a href=""https://github.com/actions/cache/commit/e839c25979e6ffdd90792d34de69d6a87d3016f6""><code>e839c25</code></a> Updated actions/cache version to 3.0.3</li>; <li><a href=""https://github.com/actions/cache/commit/33a923d660988a68affcd47de6bd6744193223a6""><code>33a923d</code></a> Added release information</li>; <li><a href=""https://github.com/actions/cache/commit/a404368986bb049d406166fc20afc01d032ad8a2""><code>a404368</code></a> Updated actions/cache version to 3.0.2</li>; <li><a href=""https://github.com/actions/cache/commit/f4278025ab0f432ce369118909e46deec636f50c""><code>f427802</code></a> Merge pull request <a href=""https://github-redirect.dependabot.com/actions/cache/issues/887"">#887</a> from actions/pdotl-version-patch</li>; <li><a href=""https://github.com/actions/cache/commit/9916fe1701f098b95a05e7c2bacee7c5a022c553""><code>9916fe1</code></a> Update cache version in licences</li>; <li><a href=""https://github.com/actions/cach",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1755:7800,Update,Updated,7800,https://su2code.github.io,https://github.com/su2code/SU2/pull/1755,1,['Update'],['Updated']
Deployability,"w"">CVE-2020-15228</a>. This action was not using the affected methods.</li>; <li>Fix error handling in <code>uploadChunk</code> where 400-level errors were not being detected and handled correctly</li>; </ul>; <h2>v2.1.2</h2>; <ul>; <li>Adds input to limit the chunk upload size, useful for self-hosted runners with slower upload speeds</li>; <li>No-op when executing on GHES</li>; </ul>; <h2>v2.1.1</h2>; <ul>; <li>Update <code>@actions/cache</code> package to <code>v1.0.2</code> which allows cache action to use posix format when taring files.</li>; </ul>; <h2>v2.1.0</h2>; <ul>; <li>Replaces the <code>http-client</code> with the Azure Storage SDK for NodeJS when downloading cache content from Azure. This should help improve download performance and reliability as the SDK downloads files in 4 MB chunks, which can be parallelized and retried independently</li>; <li>Display download progress and speed</li>; </ul>; <h2>v2.0.0</h2>; <p>Initial v2 release</p>; <h2>What's new in v2</h2>; <ul>; <li>Added support for multiple paths (<a href=""https://github-redirect.dependabot.com/actions/cache/issues/16"">actions/cache#16</a>), glob patterns, and single file caches (<a href=""https://github-redirect.dependabot.com/actions/cache/issues/33"">actions/cache#33</a>)</li>; <li>Increased performance and improved cache sizes using <code>zstd</code> for compression for Linux and macOS runners (<a href=""https://github-redirect.dependabot.com/actions/cache/issues/184"">actions/cache#184</a>)</li>; <li>Allowed caching for all events with a ref (<a href=""https://github-redirect.dependabot.com/actions/cache/issues/63"">actions/cache#63</a>)</li>; <li>Created the <a href=""https://github.com/actions/toolkit/tree/master/packages/cache""><code>@actions/cache</code></a> npm package to allow other actions to utilize caching (<a href=""https://github-redirect.dependabot.com/actions/cache/issues/55"">actions/cache#55</a>)</li>; <li>Added a best-effort step to delete the archive after extraction to reduces st",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1755:2994,release,release,2994,https://su2code.github.io,https://github.com/su2code/SU2/pull/1755,1,['release'],['release']
Deployability,"w, I don't know how to do accomplish that with conda, but with [pyenv](https://github.com/pyenv/pyenv) it involves installing the desired python version with `CONFIGURE_OPTS=--enable-shared pyenv install <version>`. To recap, a ""workflow for newbies"" which appears to be working for me is. 1. install pyenv either from [source](https://github.com/pyenv/pyenv#installation) or from your distibution repositories, if available. IMPORTANT: make sure the environment variables are correctly set and `pyenv init` is added to your shell, as per the installation instructions.; 2. install the desired python version (for example 3.7.8), enabling shared libraries: ; `CONFIGURE_OPTS=--enable-shared pyenv install 3.7.8`; 3. clone/download the [feature_adap](https://github.com/su2code/SU2/tree/feature_adap) branch of SU2;; 4. in the SU2 folder, configure meson ; `./meson.py build` ; and make sure to update the environment variables in your `.bashrc` as indicated by meson's output.; 5. use ninja to build and install SU2 ; `./ninja -C build install`;; if you run into a permission error, specify an installation directory passing the `--prefix` option to meson, as explained [here](https://www.cfd-online.com/Forums/su2-installation/227676-su-installation-failed-due-insufficient-permissions.html). These passages, at least for me, result in a running SU2 with mesh adaptation, although I have made no tests on running actual simulations. That being said, the involvement of pyenv is due to the fact that the provided python wheel for pyamg is for python 3.7 only. If I understand correctly, the library itself is proprietary, sadly, so I assume @bmunguia has access either to the source files or to someone who can package them. Depending on the actual compatibility of the code, it would be nice if the wheel was updated to the latest python version, or at least the dependency on 3.7.* was removed. . @chesiv you can also try checking the logs in the `log.err` and `log.out` files to see if anything ha",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/948#issuecomment-751823130:1799,install,install,1799,https://su2code.github.io,https://github.com/su2code/SU2/issues/948#issuecomment-751823130,1,['install'],['install']
Deployability,"we could maybe also use multizone, and allow a zone to be selected for volume averaging and integrated variables.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1894#issuecomment-1396603114:92,integrat,integrated,92,https://su2code.github.io,https://github.com/su2code/SU2/issues/1894#issuecomment-1396603114,1,['integrat'],['integrated']
Deployability,"went silent for a bit because in prototyping a typical residual computation and matrix update loop I made some realisations that made me go back to the drawing board regarding data structures, and eventually back to square 0. . ## Parallel strategy for flux computation; Because significant computation is required to obtain each edge's flux, it does not make sense to attempt a ""point-loop"" strategy (which would double the effort).; However, one can either use colouring to avoid the race conditions that would result from updating the residual of cells i and j, or store the edge fluxes and then, on a second point-loop perform the summation of fluxes for each cell, with the direction being accounted by the same adjacency information used in the point-loop GG gradient computation.; If we consider only the update of residuals the two strategies are fairly equivalent performance wise, the tie breaker is the matrix updates. ## Matrix Updates; By this I mean the `addBlock`, `subBlock` we do (two times each) to update diagonal and off-diagonal blocks for each edge.; Here is a dummy numerics loop that does nothing else but setting blocks in the matrix (with colouring).; ```c++; void testLoop1(const vector<size_t>& colorStart,; const vector<size_t>& edgeIdx,; const vector<pair<size_t,size_t> >& connectivity,; double** blk_i, double** blk_j,; SparseMatrix& matrix); {; matrix.setZero();. for(size_t color=0; color<colorStart.size()-1; ++color); #pragma omp parallel for schedule(dynamic,CHUNK_SIZE); for(size_t k=colorStart[color]; k<colorStart[color+1]; ++k); {; size_t iEdge = edgeIdx[k];; size_t iPoint = connectivity[iEdge].first;; size_t jPoint = connectivity[iEdge].second;. matrix.addBlock(iPoint, iPoint, blk_i);; matrix.addBlock(iPoint, jPoint, blk_j);. matrix.subBlock(jPoint, jPoint, blk_j);; matrix.subBlock(jPoint, iPoint, blk_i);; }; }; ```; This and a few more memory reads is why we can't have nice things, i.e. massive speedups with vectorization. Believe it or not this loo",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/789#issuecomment-535977206:1288,Update,Updates,1288,https://su2code.github.io,https://github.com/su2code/SU2/issues/789#issuecomment-535977206,3,"['Update', 'update']","['Updates', 'update']"
Deployability,"when you've installed python packages in two different locations. This could be due to installing some python packages in a system directory (e.g. `/usr/lib/`) and some in a user directory (e.g. `~/.local/`). SU2's build process is set to automatically detect the default package location, but it's not equipped to handle multiple package locations. There are some hardcoded includes, but these only work for python 2.7. I don't consider this a bug *per se* because multiple python package directories is not a standard use case. #### The symptoms. When building SU2 with the python wrapper you'll see the following error during the swig build:; ```; <install directory>/../SU2_PY/pySU2/pySU2.i:64: Error: Unable to find 'mpi4py/mpi4py.i'; ```; But mpi4py is indeed installed on your system and it's on your python path, as confirmed by opening a python terminal and running `import mpi4py`. #### The easiest workaround. Switch to a [virtualenv](https://packaging.python.org/guides/installing-using-pip-and-virtual-environments/). This will ensure that all of your python packages are stored in single location. #### Alternate workaround. In this method, you change the hardcoded includes to match mpi4py's package location. First I figure out where my mpi4py is installed. I start a terminal session of python using the python environment I want to use (in this case, it's python 3.6), and then run:; ```; from mpi4py import MPI; MPI; ```. Since I have mpi4py installed on your system and it's on my python path, I see something like:; ```; <module 'mpi4py.MPI' from '/home/clarkpede/.local/lib/python3.6/site-packages/mpi4py/MPI.cpython-34m.so'>; ```. The `/home/clarkpede/.local/lib/python3.6/` directory is where my mpi4py package is installed. But the swig compile command includes `/home/clarkpede/.local/lib/python2.7/`. That's not the right directory! So first I find the hardcoded paths of the makefile by running (on a bash terminal):; ```; grep -rn python2\.7 SU2_PY/ ; ```; On my system, t",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/722#issuecomment-515693590:1112,install,installing-using-pip-and-virtual-environments,1112,https://su2code.github.io,https://github.com/su2code/SU2/issues/722#issuecomment-515693590,2,['install'],['installing-using-pip-and-virtual-environments']
Deployability,which version are you using? Could have been updated by now.,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/175#issuecomment-212884651:45,update,updated,45,https://su2code.github.io,https://github.com/su2code/SU2/issues/175#issuecomment-212884651,1,['update'],['updated']
Deployability,"while you might be envisioning a more clever approach, the python wrapper has some tools to help with this too. SU2.io.tools.restart2solution(config,state=None); """""" moves restart file to solution file, ; optionally updates state; direct or adjoint is read from config; adjoint objective is read from config; """""". should be called right after a call to SU2_CFD (ie with SU2.run.direct()",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/17#issuecomment-29596087:216,update,updates,216,https://su2code.github.io,https://github.com/su2code/SU2/issues/17#issuecomment-29596087,1,['update'],['updates']
Deployability,"xactly the same error. It occurred during compiling of geometry_structure.cpp. I don't know how to solve this issue. Thanks for your help in advance.; Koray. **To Reproduce**; Here's my configure outputs:. Build Configuration Summary:. Source code location: /home/koray/SU2_TMZHB/SU2; Install location: 	 /usr/local; Version: 6.0.1; C++ Compiler: g++; C Compiler: gcc; Preprocessor flags: ; Compiler flags: -g -O2; Linker flags: ; MPI support: no; Metis support: no; Parmetis support: no; TecIO support: yes; CGNS support: yes; HDF5 support: no; SZIP support: no; ZLIB support: no; Mutation++ support: no; Jsoncpp support: 	 no; LAPACK support: no; Datatype support:; double yes; complex no; codi_reverse no; codi_forward no. External includes: -DHAVE_CGNS -I$(top_srcdir)/externals/cgns -I$(top_srcdir)/externals/cgns/adf -DHAVE_TECIO -I$(top_srcdir)/externals/tecio/include ; External libs: $(top_builddir)/externals/cgns/libcgns.a $(top_builddir)/externals/tecio/libtecio.a . Build SU2_CFD: yes; Build SU2_DOT: yes; Build SU2_MSH: yes; Build SU2_DEF: yes; Build SU2_SOL: yes; Build SU2_GEO: yes; Build Py Wrapper: no; ################. Here are the error lines during make process:. CXX ../src/libSU2_a-dual_grid_structure.o; CXX ../src/libSU2_a-geometry_structure.o; ../src/geometry_structure.cpp: In member function ‘virtual void CPhysicalGeometry::UpdateTurboVertex(CConfig*, short unsigned int, short unsigned int)’:; ../src/geometry_structure.cpp:14365:20: error: ‘HUGE’ was not declared in this scope; 14365 | su2double max = -HUGE;; | ^~~~; make[1]: *** [Makefile:857: ../src/libSU2_a-geometry_structure.o] Error 1; make[1]: Leaving directory '/home/koray/SU2_TMZHB/SU2/Common/lib'; make: *** [Makefile:391: all-recursive] Error 1; ###. **Desktop (please complete the following information):**; - OS: Ubuntu 20.04.2 LTS; - C++ compiler and version: gcc (Ubuntu 9.3.0-17ubuntu1~20.04) 9.3.0; - MPI implementation and version: mpiexec (OpenRTE) 4.0.3; - SU2 Version: SU2 (ver. 6.0.1 ""Falcon"")",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1644:1693,Update,UpdateTurboVertex,1693,https://su2code.github.io,https://github.com/su2code/SU2/issues/1644,1,['Update'],['UpdateTurboVertex']
Deployability,xcbkptlist (0) ; - I SU2_IDE/Xcode/SU2_CFD.xcodeproj/xcuserdata/fpalacios.xcuserdatad/xcschemes/SU2_CFD.xcscheme (0) ; - I SU2_IDE/Xcode/SU2_DEF.xcodeproj/project.pbxproj (0) ; - I SU2_IDE/Xcode/SU2_DOT.xcodeproj/project.xcworkspace/xcshareddata/SU2_DOT.xccheckout (0) ; - I SU2_IDE/Xcode/SU2_GEO.xcodeproj/project.xcworkspace/xcshareddata/SU2_GEO.xccheckout (0) ; - I SU2_IDE/Xcode/SU2_MSH.xcodeproj/project.pbxproj (0) ; - D SU2_IDE/Xcode/SU2_PRT.xcodeproj/fpalacios.mode1v3 (0) ; - D SU2_IDE/Xcode/SU2_PRT.xcodeproj/fpalacios.pbxuser (0) ; - D SU2_IDE/Xcode/SU2_PRT.xcodeproj/project.pbxproj (0) ; - D SU2_IDE/Xcode/SU2_PRT.xcodeproj/project.xcworkspace/contents.xcworkspacedata (0) ; - D SU2_IDE/Xcode/SU2_PRT.xcodeproj/project.xcworkspace/xcshareddata/SU2_DDC.xccheckout (0) ; - I SU2_IDE/Xcode/SU2_SOL.xcodeproj/project.pbxproj (0) ; - I SU2_IDE/Xcode/SU2_SOL.xcodeproj/xcuserdata/fpalacios.xcuserdatad/xcschemes/SU2_SOL.xcscheme (0) ; - I SU2_MSH/include/SU2_MSH.hpp (0) ; - I SU2_MSH/obj/Makefile.am (0) ; - I SU2_MSH/obj/Makefile.in (0) ; - I SU2_MSH/src/SU2_MSH.cpp (0) ; - D SU2_PRT/bin/.gitignore (0) ; - D SU2_PRT/include/SU2_PRT.hpp (0) ; - D SU2_PRT/obj/Makefile.am (0) ; - I SU2_PRT/obj/Makefile.in (0) ; - D SU2_PRT/src/SU2_PRT.cpp (0) ; - D SU2_PY/2DChannel.py (0) ; - D SU2_PY/3DChannel.py (0) ; - I SU2_PY/Makefile.am (0) ; - I SU2_PY/Makefile.in (0) ; - I SU2_PY/SU2/**init**.py (0) ; - I SU2_PY/SU2/eval/design.py (0) ; - I SU2_PY/SU2/eval/functions.py (0) ; - I SU2_PY/SU2/eval/gradients.py (0) ; - I SU2_PY/SU2/io/config.py (0) ; - I SU2_PY/SU2/io/config_options.py (0) ; - I SU2_PY/SU2/io/data.py (0) ; - I SU2_PY/SU2/io/filelock.py (0) ; - I SU2_PY/SU2/io/redirect.py (0) ; - I SU2_PY/SU2/io/state.py (0) ; - I SU2_PY/SU2/io/tools.py (0) ; - I SU2_PY/SU2/mesh/adapt.py (0) ; - I SU2_PY/SU2/mesh/tools.py (0) . Patch Links:; - https://github.com/su2code/SU2/pull/174.patch; - https://github.com/su2code/SU2/pull/174.diff; —; Reply to this email directly or view it on GitHub.,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/174#issuecomment-101443812:27677,Patch,Patch,27677,https://su2code.github.io,https://github.com/su2code/SU2/pull/174#issuecomment-101443812,3,"['Patch', 'patch']","['Patch', 'patch']"
Deployability,"y is static polymorphism.; For example in the non vectorized numerics we have a family of Roe schemes since a lot of code is shared, and the only difference is how the dissipation terms are computed. There this is done with virtual functions, here we want none of that.; Virtual functions allow a parent class to dynamically call methods of its children, we want to do this statically and so we need to let the parent class know who is deriving from it.; ```c++; template<class Derived>; class Parent {; public:; void parentMethod() {; // ""I know I am also a Derived and so I can cast myself.""; auto derived = static_cast<Derived*>(this);; // ""now I can use a method of derived""; derived->childMethod();; }; };. // A derived class needs to inform the parent about itself; class Child : public Parent<Child> {; public:; void childMethod() {...}; };; ```. Why is this better? Note that 2 of these derived classes don't actually have the same parent, i.e. one inherits from `Parent<ChildA>` the other from `Parent<ChildB>` this means that 2 versions of Parent were instantiated specifically for each derived class, this allows code to be inlined and optimized for each, an ability lost with virtual functions. ### Putting it all together; For vectorized central schemes we have something like:; ```c++; // Intermediate class for centered schemes, note the 2 template parameters; template<class Derived, class Base>; class CCenteredBase : public Base {; public:; // Main public method implemented here making use of ""Derived"" and ""Base"".; void ComputeFlux(...) const final {; ... // gather data, do some computation; derived->DissipationTerms(...); // static polymorphism; Base::ViscousTerms(...); // static decorator; ... // update linear system; }; }. // A final centered scheme, which is what we instantiate, with some viscous decorator.; template<class Decorator>; class CJSTScheme : public CCenteredBase<CJSTScheme<Decorator>, Decorator> {; protected:; void DissipationTerms(...) const {...}; }; ```",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1022#issuecomment-699618721:4001,update,update,4001,https://su2code.github.io,https://github.com/su2code/SU2/pull/1022#issuecomment-699618721,1,['update'],['update']
Deployability,"y name 'pkg-config'; Found Pkg-config: NO; mpicc found: NO; Run-time dependency MPI for c found: NO (tried pkgconfig and config-tool); mpic++ found: NO; Run-time dependency MPI for cpp found: NO (tried pkgconfig and config-tool); Program swig found: YES (C:\Softwares\swigwin-4.0.2\swig.EXE); Dependency python found: YES (sysconfig); Program install.sh found: YES (sh C:\Users\Danie\Documents\SU2\SU2_PY/pySU2\install.sh); Message: -------------------------------------------------------------------------; | ___ _ _ ___ |; | / __| | | |_ ) Release 7.2.0 ""Blackbird"" |; | \__ \ |_| |/ / |; | |___/\___//___| Meson Configuration Summary |; | |; -------------------------------------------------------------------------. Option Value; ---------------------; TecIO: false; CGNS: true; AD (reverse): true; AD (forward): true; Python Wrapper: true; Intel-MKL: false; OpenBlas: false; PaStiX: false; Mixed Float: false; libROM: false. Please be sure to add the $SU2_HOME and $SU2_RUN environment variables,; and update your $PATH (and $PYTHONPATH if applicable) with $SU2_RUN. Based on the input to this configuration, add these lines to your .bashrc file:. export SU2_RUN=C:\bin/bin; export SU2_HOME=C:\Users\Danie\Documents\SU2; export PATH=$PATH:$SU2_RUN; export PYTHONPATH=$PYTHONPATH:$SU2_RUN. Use './ninja -C C:\Users\Danie\Documents\SU2\build install' to compile and install SU2. Build targets in project: 17. Found ninja.exe-1.9.0 at C:\Users\Danie\Documents\SU2\ninja.exe`. **526 files install successfully.** . `WARNING: the currently checked out submodule commit in C:\Users\Danie\Documents\SU2\externals\opdi does not match the SHA-1 found in the index.; Use 'git submodule update --init C:\Users\Danie\Documents\SU2\externals\opdi' to reset the module if necessary.; SHA-1 tag stored in index does not match SHA tag stored in this script.; Installing SU2_CFD/src\SU2_CFD.exe to C:\bin\bin; Installing SU2_CFD/src\SU2_CFD_AD.exe to C:\bin\bin; Installing SU2_CFD/src\SU2_CFD_DIRECTDIFF.exe to ",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1376:2277,update,update,2277,https://su2code.github.io,https://github.com/su2code/SU2/issues/1376,1,['update'],['update']
Deployability,y/UserPackages/SU2_INSTALL_NEW/bin/SU2/io; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/io/__init__.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/io; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/mesh/adapt.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/mesh; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/mesh/tools.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/mesh; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/mesh/__init__.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/mesh; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/opt/project.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/opt; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/opt/scipy_tools.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/opt; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/opt/__init__.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/opt; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/run/adaptation.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/run; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/run/adjoint.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/run; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/run/deform.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/run; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/run/direct.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/run; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/run/interface.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/run; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/run/merge.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/run; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/run/geometry.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/run; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/991#issuecomment-632032044:6359,Install,Installing,6359,https://su2code.github.io,https://github.com/su2code/SU2/issues/991#issuecomment-632032044,1,['Install'],['Installing']
Deployability,y/UserPackages/SU2_INSTALL_NEW/bin/SU2/mesh; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/opt/project.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/opt; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/opt/scipy_tools.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/opt; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/opt/__init__.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/opt; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/run/adaptation.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/run; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/run/adjoint.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/run; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/run/deform.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/run; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/run/direct.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/run; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/run/interface.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/run; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/run/merge.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/run; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/run/geometry.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/run; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/run/projection.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/run; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/run/__init__.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/run; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/util/bunch.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/util; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/util/filter_adjoint.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/util; Installing /home/slimshady/UserPackages/SU2_NE,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/991#issuecomment-632032044:6900,Install,Installing,6900,https://su2code.github.io,https://github.com/su2code/SU2/issues/991#issuecomment-632032044,1,['Install'],['Installing']
Deployability,y/UserPackages/SU2_INSTALL_NEW/bin/SU2/run; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/run/direct.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/run; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/run/interface.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/run; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/run/merge.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/run; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/run/geometry.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/run; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/run/projection.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/run; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/run/__init__.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/run; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/util/bunch.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/util; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/util/filter_adjoint.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/util; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/util/lhc_unif.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/util; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/util/misc.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/util; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/util/mp_eval.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/util; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/util/ordered_bunch.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/util; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/util/ordered_dict.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/util; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/util/plot.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/util; Installing /home/slimshady/UserPack,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/991#issuecomment-632032044:7715,Install,Installing,7715,https://su2code.github.io,https://github.com/su2code/SU2/issues/991#issuecomment-632032044,1,['Install'],['Installing']
Deployability,y/UserPackages/SU2_NEW/SU2_PY/merge_solution.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/set_ffd_design_var.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/compute_polar.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/compute_multipoint.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/discrete_adjoint.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/direct_differentiation.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/fsi_computation.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2_CFD.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/__init__.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/eval/design.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/eval; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/eval/functions.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/eval; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/eval/gradients.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/eval; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/eval/__init__.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/eval; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/io/config.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/io; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/io/config_options.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/io; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/991#issuecomment-632032044:3659,Install,Installing,3659,https://su2code.github.io,https://github.com/su2code/SU2/issues/991#issuecomment-632032044,1,['Install'],['Installing']
Deployability,"~~Convergence history is non deterministic when running the RANS solver with SA model using OMP-only parallelism. When fixing the min RMS residual, the computation stops at a different iteration each time I run the solver.~~. ~~That does not happen with the EULER or NAVIER_STOKES solvers.~~. Convergence history is non deterministic when using the NEWTON_KRYLOV solver using OMP-only parallelism. When fixing the min RMS residual, the computation stops at a different iteration each time I run the solver.; That happens with the EULER or NAVIER_STOKES and RANS solvers. I am using a common setup for each case i.e. ROE+MUSCL convective fluxes, WLSQ for viscous gradients, LSQ for MUSCL gradients. Tried also switching ON and OFF the CFL adaptation and limiters, different linear solvers, and precision (single/double) of the linear solver but that doesn't change the outcome of the test (RANS conv history remains non deterministic while EULER and NS have always the same convergence history). I compiled in release (-O3), with OMP support and exported the mtune/march variables to enable SIMD types. ~~I'll be looking in the SA/Scalar solver for some uninitialized vars. Any other idea?~~. I'll be looking in the CNewtonIntegration files for some uninitialized vars/thread safety issue. Any other idea? . **Bug report checklist**; - [x] Consulting the build instructions (https://su2code.github.io/docs_v7/Build-SU2-Linux-MacOS/).; - [x] Looking for similar problems on GitHub or CFD-Online (https://www.cfd-online.com/Forums/su2/).; - [x] Updating to the newest version of SU2 (either develop, master, or the pre-built executables https://su2code.github.io/download.html). **Desktop (please complete the following information):**; - OS: Linux (Ubuntu 18.4 LTS); - C++ compiler and version: g++ (GCC) 7.5.0; - MPI implementation and version: OpenMPI 2.1.1; - SU2 Version: 8.0.1",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/2259:1009,release,release,1009,https://su2code.github.io,https://github.com/su2code/SU2/issues/2259,1,['release'],['release']
Deployability,"~~~~~~~~~~~~~~~~~~~~~~~~; ./sources/Python3.7/convert.c: In function 'ConvertGMFSoltoMet':; ./sources/Python3.7/convert.c:114:22: warning: '.solb' directive writing 5 bytes into a region of size between 1 and 1024 [-Wformat-overflow=]; sprintf(OutMet, ""%s.solb"", mshopt->OutNam);; ^~~~~; ./sources/Python3.7/convert.c:114:3: note: 'sprintf' output between 6 and 1029 bytes into a destination of size 1024; sprintf(OutMet, ""%s.solb"", mshopt->OutNam);; ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~; ./sources/Python3.7/convert.c: In function 'ConvertSU2SolToGMF':; ./sources/Python3.7/convert.c:143:24: warning: '.solb' directive writing 5 bytes into a region of size between 1 and 1024 [-Wformat-overflow=]; sprintf(OutSol, ""%s.solb"", mshopt->OutNam);; ^~~~~; ./sources/Python3.7/convert.c:143:5: note: 'sprintf' output between 6 and 1029 bytes into a destination of size 1024; sprintf(OutSol, ""%s.solb"", mshopt->OutNam);; ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~; writing build\temp.win-amd64-3.8\Release\.\sources\python3.7\_amgio.cp38-win_amd64.def; creating build\lib.win-amd64-3.8; C:\Program Files\mingw-w64\x86_64-8.1.0-posix-seh-rt_v6-rev0\mingw64\bin\gcc.exe -shared -s build\temp.win-amd64-3.8\Release\.\sources\python3.7\amgio_py.o build\temp.win-amd64-3.8\Release\.\sources\python3.7\mesh.o build\temp.win-amd64-3.8\Release\.\sources\python3.7\gmfio.o build\temp.win-amd64-3.8\Release\.\sources\python3.7\su2io.o build\temp.win-amd64-3.8\Release\.\sources\python3.7\option.o build\temp.win-amd64-3.8\Release\.\sources\python3.7\libmesh6.o build\temp.win-amd64-3.8\Release\.\sources\python3.7\amgio_py_wrap.o build\temp.win-amd64-3.8\Release\.\sources\python3.7\convert.o build\temp.win-amd64-3.8\Release\.\sources\python3.7\_amgio.cp38-win_amd64.def -LC:\Users\Danie\Anaconda3\envs\vsptools\libs -LC:\Users\Danie\Anaconda3\envs\vsptools\PCbuild\amd64 -lpython38 -lmsvcr140 -o build\lib.win-amd64-3.8\_amgio.cp38-win_amd64.pyd; C:/Program Files/mingw-w64/x86_64-8.1.0-posix-seh-rt_v6-rev0/mi",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1379:9326,Release,Release,9326,https://su2code.github.io,https://github.com/su2code/SU2/issues/1379,1,['Release'],['Release']
Deployability,"~~~~~~~~~~~~~~~~~~~~~~~~~; C:\Program Files\mingw-w64\x86_64-8.1.0-posix-seh-rt_v6-rev0\mingw64\bin\gcc.exe -mdll -O -Wall -DMS_WIN64 -IC:\Users\Danie\Anaconda3\envs\vsptools\include -IC:\Users\Danie\Anaconda3\envs\vsptools\include -c ./sources/Python3.7/mesh.c -o build\temp.win-amd64-3.8\Release\.\sources\python3.7\mesh.o -std=c99 -Wno-unused-variable -Wno-unused-result -O3; C:\Program Files\mingw-w64\x86_64-8.1.0-posix-seh-rt_v6-rev0\mingw64\bin\gcc.exe -mdll -O -Wall -DMS_WIN64 -IC:\Users\Danie\Anaconda3\envs\vsptools\include -IC:\Users\Danie\Anaconda3\envs\vsptools\include -c ./sources/Python3.7/GMFio.c -o build\temp.win-amd64-3.8\Release\.\sources\python3.7\gmfio.o -std=c99 -Wno-unused-variable -Wno-unused-result -O3; C:\Program Files\mingw-w64\x86_64-8.1.0-posix-seh-rt_v6-rev0\mingw64\bin\gcc.exe -mdll -O -Wall -DMS_WIN64 -IC:\Users\Danie\Anaconda3\envs\vsptools\include -IC:\Users\Danie\Anaconda3\envs\vsptools\include -c ./sources/Python3.7/SU2io.c -o build\temp.win-amd64-3.8\Release\.\sources\python3.7\su2io.o -std=c99 -Wno-unused-variable -Wno-unused-result -O3; ./sources/Python3.7/SU2io.c: In function 'LoadSU2Elements':; ./sources/Python3.7/SU2io.c:231:51: warning: variable 'idx' set but not used [-Wunused-but-set-variable]; int iElt, NbrElt=0, typ, is[8], swi[8], buf, s, idx, res;; ^~~; ./sources/Python3.7/SU2io.c: In function 'LoadSU2ConnData':; ./sources/Python3.7/SU2io.c:466:51: warning: variable 'idx' set but not used [-Wunused-but-set-variable]; int iElt, NbrElt=0, typ, is[8], swi[8], buf, s, idx, res;; ^~~; ./sources/Python3.7/SU2io.c: In function 'GetSU2SolSize':; ./sources/Python3.7/SU2io.c:787:3: warning: implicit declaration of function 'getline'; did you mean 'getenv'? [-Wimplicit-function-declaration]; getline(&lin, &len, FilHdl);; ^~~~~~~; getenv; ./sources/Python3.7/SU2io.c: In function 'WriteSU2SolutionBin':; ./sources/Python3.7/SU2io.c:1317:10: warning: variable 'ret' set but not used [-Wunused-but-set-variable]; size_t ret;; ^~~; ./sources/",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1379:3313,Release,Release,3313,https://su2code.github.io,https://github.com/su2code/SU2/issues/1379,1,['Release'],['Release']
Deployability,"…or maybe libopenmpi-dev. From: Dave Taflin; Sent: Monday, July 22, 2019 9:18 AM; To: su2code/SU2 <reply@reply.github.com>; su2code/SU2 <SU2@noreply.github.com>; Cc: Comment <comment@noreply.github.com>; Subject: RE: [su2code/SU2] C++ compiler cannot create executables (#738). Those would come from package openmpi-dev. From: thw1021 [mailto:notifications@github.com]; Sent: Monday, July 22, 2019 9:13 AM; To: su2code/SU2 <SU2@noreply.github.com<mailto:SU2@noreply.github.com>>; Cc: Dave Taflin <d.taflin@tecplot.com<mailto:d.taflin@tecplot.com>>; Comment <comment@noreply.github.com<mailto:comment@noreply.github.com>>; Subject: Re: [su2code/SU2] C++ compiler cannot create executables (#738). Sorry. Do you mean that although I have installed OpenMPI, I still have to install mpicc and mpicxx ? I am not familiar with such problems.; When I run which mpicc and which mpicxx in the container, there is no outputs. But on the host machine, I can see /usr/bin/mpicc and /usr/bin/mpicxx. Maybe this the reason. —; You are receiving this because you commented.; Reply to this email directly, view it on GitHub<https://github.com/su2code/SU2/issues/738?email_source=notifications&email_token=AADV2HHQUIUX3M4FOVSIWTTQAXL7JA5CNFSM4IFZ52EKYY3PNVWWK3TUL52HS4DFVREXG43VMVBW63LNMVXHJKTDN5WW2ZLOORPWSZGOD2QLXTI#issuecomment-513850317>, or mute the thread<https://github.com/notifications/unsubscribe-auth/AADV2HGXH2W6SXJCN4OLCXLQAXL7JANCNFSM4IFZ52EA>.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/738#issuecomment-513852685:736,install,installed,736,https://su2code.github.io,https://github.com/su2code/SU2/issues/738#issuecomment-513852685,2,['install'],"['install', 'installed']"
Deployability,"👍 for doing this @maxaehle . ; - I am in favor of removing the `_ADJ_` options with the `GRAD_OBJFUNC_FILENAME`.; - As Roe is used the `JST_SENSOR_COEFF` can go. Limiter are turned off so either the slope limiter section with 2 options can be removed or be moved down below the `FLOW NUMERICAL METHOD DEFNITION`.; - `CONV_CRITERIA` will be gone once you merge develop and you can add `CONV_FIELD=RMS_DENSITY` as that is also the default. Removign the `_CAUCHY_` options is prob debatable, but in this very cfg they are unused. ; - The `CFL_ADAPT*` stuff can go (unless the values are chosen in such a way by you that they do work well, otherwise it might even do negative advertisement for an option). I guess I am also a bit aggressive on stripping options from files, so take it with a grain of salt 🧂 . Another aspect ,which is of course nothing to be changed in this PR and is also a bit off-topic, is that lists like `SOLVER` change over time but the list in the comment over the option in the Testcase cfg does not get updated (there might of course be good examples of people doing so ;) ). `WAVE_EQUATION` and `POISSON_EQUATION` e.g. are not available anymore, yet they are in the cfg description of `SOLVER` here... and 200 other Testcases. So a way might be to strip those and sth like ; ```; % See the config_template.cfg in the code root for more information on the options; ```; ... although the info there are not always perfect either, but one place to maintain is easier than a couple hundred",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1240#issuecomment-804890763:1025,update,updated,1025,https://su2code.github.io,https://github.com/su2code/SU2/pull/1240#issuecomment-804890763,1,['update'],['updated']
Deployability,"👍 https://github.com/su2code/SU2/releases/tag/v7.2.1 I am just curious: was this splitting in features, bug fixes and maintenance a manual task or did some script fail to do that?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1416#issuecomment-954843944:33,release,releases,33,https://su2code.github.io,https://github.com/su2code/SU2/pull/1416#issuecomment-954843944,1,['release'],['releases']
Energy Efficiency," ### FAQ; <details>; <summary>Click here to expand the FAQ section</summary>. #### How often will the code scanning analysis run?; By default, code scanning will trigger a scan with the CodeQL engine on the following events:; * On every pull request — to flag up potential security problems for you to investigate before merging a PR.; * On every push to your default branch and other protected branches — this keeps the analysis results on your repository’s *Security* tab up to date.; * Once a week at a fixed time — to make sure you benefit from the latest updated security analysis even when no code was committed or PRs were opened. #### What will this cost?; Nothing! The CodeQL engine will run inside GitHub Actions, making use of your [unlimited free compute minutes for public repositories](https://docs.github.com/en/actions/learn-github-actions/usage-limits-billing-and-administration#about-billing-for-github-actions). #### What types of problems does CodeQL find?; The CodeQL engine that powers GitHub code scanning is the exact same engine that powers LGTM.com. The exact set of rules has been tweaked slightly, but you should see almost exactly the same types of alerts as you were used to on LGTM.com: we’ve enabled the [`security-and-quality` query suite](https://docs.github.com/en/code-security/code-scanning/automatically-scanning-your-code-for-vulnerabilities-and-errors/configuring-code-scanning#using-queries-in-ql-packs) for you. #### How do I upgrade my CodeQL engine?; No need! New versions of the CodeQL analysis are constantly deployed on GitHub.com; your repository will automatically benefit from the most recently released version. #### The analysis doesn’t seem to be working; If you get an error in GitHub Actions that indicates that CodeQL wasn’t able to analyze your code, please [follow the instructions here](https://docs.github.com/en/code-security/code-scanning/automatically-scanning-your-code-for-vulnerabilities-and-errors/troubleshooting-the-codeql-workflow)",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1840:2751,power,powers,2751,https://su2code.github.io,https://github.com/su2code/SU2/pull/1840,2,['power'],['powers']
Energy Efficiency," (NONE = no marker); MARKER_FAR= ( Farfield ); %; % Symmetry boundary marker(s) (NONE = no marker); % MARKER_SYM= ( Symmetry ); %; % ------------------------ SURFACES IDENTIFICATION ----------------------------%; %; % Marker(s) of the surface to be plotted or designed; MARKER_PLOTTING= ( Fuselage, WingUpper, WingLower, VT, HTUpper, HTLower, HTTE, VTWingTip, VTTE, WingTE, WBFairing, PWUpper, PWLower, PWTE ); %; % Marker(s) of the surface where the functional (Cd, Cl, etc.) will be evaluated; MARKER_MONITORING= ( Fuselage, WingUpper, WingLower, VT, HTUpper, HTLower, HTTE, VTWingTip, VTTE, WingTE, WBFairing, PWUpper, PWLower, PWTE ); %; % ------------- COMMON PARAMETERS DEFINING THE NUMERICAL METHOD ---------------%; %; % Numerical method for spatial gradients (GREEN_GAUSS, WEIGHTED_LEAST_SQUARES); NUM_METHOD_GRAD= GREEN_GAUSS; %; % Courant-Friedrichs-Lewy condition of the finest grid; CFL_NUMBER= 20.0; %; % Adaptive CFL number (NO, YES); CFL_ADAPT= NO; %; % Parameters of the adaptive CFL number (factor down, factor up, CFL min value,; % CFL max value ); CFL_ADAPT_PARAM= ( 0.1, 2.0, 10.0, 1e10, 0.001 ); %; %; % ------------------------ LINEAR SOLVER DEFINITION ---------------------------%; %; % Linear solver or smoother for implicit formulations (BCGSTAB, FGMRES, SMOOTHER_JACOBI, ; % SMOOTHER_ILU, SMOOTHER_LUSGS, ; % SMOOTHER_LINELET); LINEAR_SOLVER= FGMRES; %; % Preconditioner of the Krylov linear solver (ILU, LU_SGS, LINELET, JACOBI); LINEAR_SOLVER_PREC= ILU; %; % Minimum error of the linear solver for implicit formulations; LINEAR_SOLVER_ERROR= 1E-6; %; % Max number of iterations of the linear solver for the implicit formulation; LINEAR_SOLVER_ITER= 5 ; % Restart frequency for RESTARTED_FGMRES; LINEAR_SOLVER_RESTART_FREQUENCY= 10; %; % Relaxation factor for smoother-type solvers (LINEAR_SOLVER= SMOOTHER); LINEAR_SOLVER_SMOOTHER_RELAXATION= 0.9; %; % -------------------- FLOW NUMERICAL METHOD DEFINITION -----------------------%; %; % Convective numerical method (JST,",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1297:5262,Adapt,Adaptive,5262,https://su2code.github.io,https://github.com/su2code/SU2/issues/1297,2,"['Adapt', 'adapt']","['Adaptive', 'adaptive']"
Energy Efficiency," added. I haven't tested with single core. As far as I see in CPhysicalGeometry::MatchNearField,; > > > the code looks for a nearest point to a point on the nearfield boundary. If it exceeds 1e-1 (which is usually the case if you have; > > > real scale mesh), it prints this warning. I'm not sure what this is for. I'm ignoring it since I don't see an issue with this distance; > > > exceeding 1e-1.; > > ; > > ; > > Concerning this: I understand this nearfield marker as an internal ""boundary"" which does not alter the usual solution process at all. It is just added to compute some interesting quantity one. So the Nearfield marker needs to be in the mesh right, at the end like all other boundary markers? As such it is defined using mesh points and therefore there should be no discrepancies between nearfield marker nodes and mesh nodes? Am i correct with that, if not please enlighten me what is actually happening :); > ; > Yes, nearfield marker is just used to extract required physical quantities and should not alter the usual solution process at all. There should be no discrepancies between nearfield marker nodes and mesh nodes. I haven't checked this part of the code for a while but if I remember correctly, the ""Bad match..."" message is shown if there is discrepancy between a nearfield marker node and the nearest mesh node that is NOT on nearfield boundary. I did more investigations. This ""Bad match..."" message is output in `CPhysicalGeometry::MatchNearField` and this function has `SetDonorPoint`. However, currently there is no `GetDonorPoint` except for periodic boundary condition. I don't believe this is used any more. I went back in history and found out that `GetDonorPoint` exists in `CGridAdaptation::SetHomothetic_Adaptation2D` in ver.6.2.0. I suspect this is for grid adaptation to make mesh finer to capture shock waves. In ver.7, grid adaptation related parameters in configuration template file are not used, so it appears that grid adaptation function is dead now.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1329#issuecomment-898991111:1985,adapt,adaptation,1985,https://su2code.github.io,https://github.com/su2code/SU2/pull/1329#issuecomment-898991111,3,['adapt'],['adaptation']
Energy Efficiency," are first added to; > document the related existing behavior. These tests serve to check that the; > existing behavior isn't damaged by the new code. Then new tests are added; > to prove that the new behavior is working correctly. For bug fixes, the; > process is simpler. A test is added to confirm that something is not; > behaving as expected. Then the code is fixed to make the test pass.; > What frameworks are available?; >; > For a unit testing framework, here are the most popular options, with the; > following pros and cons:; > Roll-your-own; >; > - Requires no external dependencies; > - The most flexible option; > - Involves the most work to setup; > - Will lack some of the more advances features of mature unit-testing; > frameworks.; >; > Boost Test; >; > - Can be header only, statically linked, or dynamically linked; > - If statically or dynamically linked, then Boost is not very; > lightweight; > - Easy to add if you're already using Boost; >; > Google Test; >; > - Most common unit-testing framework; > - Can be easily combined with Google's powerful GMock mocking library; > - Compiling and linking can be somewhat painful; >; > Catch2; >; > - Used by FEniCS; > - Makes unit tests easily readable with lots of syntactic sugar.; > - Has a very simple syntax; > - Is header-only; > - Requires C++11 compilation; > - Not as feature rich as Google Test or Boost Test; >; > Questions; >; > - How do developers feel about adding unit tests to SU2?; > - If a unit-testing framework were added to SU2, would you actually; > use it?; > - Do developers have a preference (or experience with) any of the unit; > testing frameworks?; > - Should unit tests be expected when submitting PRs?; >; > —; > You are receiving this because you are subscribed to this thread.; > Reply to this email directly, view it on GitHub; > <https://github.com/su2code/SU2/issues/698?email_source=notifications&email_token=AA5FFRG5U3Z55N4W2XWQED3PY3LJ5A5CNFSM4HTDQXQKYY3PNVWWK3TUL52HS4DFUVEXG43VMWVGG33NNVSW4",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/698#issuecomment-499278427:6099,power,powerful,6099,https://su2code.github.io,https://github.com/su2code/SU2/issues/698#issuecomment-499278427,2,['power'],['powerful']
Energy Efficiency," case, we would have something along the lines of: . a) NACA0012; i) 113 x 33; ii) 225 x 65 ; iii) 449 x 129; iv) ... This way we have a family of meshes and configuration files that are specifically built for the purpose of validating the code and comparing with other solvers. I might be useful to compress meshes that are larger than a certain size (say 10MB). We should also put a limit on the size of a single mesh that the repository can handle (say 50MB?). . Within the home directory, the README file should list all the cases in the repository, who the custodian of the test case is (person with meshes in case the meshes are too large), and which version it was last run on. . I thought about splitting it up into Verification cases and Validation cases, but I thought it would be more informative and intuitive to split up according to the physics of the simulations. My thinking might be limited because that's how I have seen the TestCases folder organized, so any other suggestions are welcome. I think it is imperative that this is accompanied with a section on the SU2 website that showcases just the results of the validation test cases (grid convergence studies, residual reductions etc) and links to the v&v repo appropriately. This way, if people are just inquisitive about SU2's performance, they can get a quick snapshot of the results, without the need to run the cases themselves. . I also wanted to broach the topic of convergence here. Would it be a good idea to standardize the termination criteria wherever possible? For example, in the NACA0012 case we can ensure that residuals are reduced by 8 orders of magnitude for all meshes. Or for the ONERAM6, we use Cauchy convergence and make sure the C_L is converged to 6 orders of magnitude. This would have to be flexible since the same level of convergence might not apply to all the cases in the repository. But for within a test case, I think it would be good to use the same convergence criteria for a family of meshes.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/581#issuecomment-426026053:2237,reduce,reduced,2237,https://su2code.github.io,https://github.com/su2code/SU2/issues/581#issuecomment-426026053,2,['reduce'],['reduced']
Energy Efficiency," committed to the develop branch.; > > * When a developer wants to implement something new, they create a new branch from develop, implement their thing, and merge it again with develop. You see that happening here, in the top of the page you see; > > ; > > > [pcarruscag](https://github.com/pcarruscag) wants to merge 2 commits into [develop](https://github.com/su2code/SU2/tree/develop) from [supersonic_profile](https://github.com/su2code/SU2/tree/supersonic_profile); > > ; > > ; > > You see in the section _Files Changed_ the changes compared to the current develop branch. This shows that this branch is up to date with current develop, only the new changes for the inlet profile show up.; > > I did not go through the code yet, but when you run it without having an inlet.dat file present, it should create one for you filled with a uniform profile. When you then use this file unaltered, does that work?; > ; > Hi, I got how the branches work. In this case, I first downloaded the 'develop' branch to make sure everything is consitent with Pedro, and then I downloaded and replaced the 6 new committed files that related to the supersonic inlet profile development. The code should be totally the same at this point. And I did a flat plate test, which actually I need to fill a uniform profile, since the code would only generated an empty one. However, a segment error still occurs, and I attched the error file with Valgrind output. The test files are on the above conversations so that you may also take a try. Thanks for the help! [error.txt](https://github.com/user-attachments/files/16323710/error.txt). From the error, I think The SU2_CFD encountered an invalid memory read operation during an attempt to read the inletUNI.dat file, causing the program to crash with a segment error (SIGSEGV). The specific error occurs in the CConfig::GetInletPtotal function, which seems attempts to access memory that has not been properly initialized or allocated. Any ideas? @pcarruscag @bigfooted",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2327#issuecomment-2241548890:2379,allocate,allocated,2379,https://su2code.github.io,https://github.com/su2code/SU2/pull/2327#issuecomment-2241548890,1,['allocate'],['allocated']
Energy Efficiency," for `issue_complicated.zip`. With `issue_simplified.zip` I try to provide a minimal working example, and it reproduces the same convergence/divergence behaviour, but I'm not sure whether it really covers the complete problem. `issue_simplified.zip` has been created as follows:; - In the singlezone setup, the whole mesh has been exported to `singlezone.su2`. The `singlezone.cfg` is `TestCases/rans/naca0012/turb_NACA0012_sst.cfg` with adapted mesh filename, marker names and Reynolds number, and `RESTART_SOL=NO`.; - In the multizone setup, the mesh has been split into two zones. `multizone-0.su2` is the inner ""ring"" of `1 <= radius <= 4` between the circle and the ""boundary-layer-like"" structure. `multizone-1.su2` is the remaining part `4 <= radius`. I created a `multizone.cfg` that refers to `multizone-0.cfg`, `multizone-1.cfg` and joins the zones by a `MARKER_FLUID_INTERFACE`. The two `multizone-i.cfg`s are identical to the `singlezone.cfg` except that the mesh filename and markers we adapted again, and the `ITER=` option was removed. In `issue_complicated.zip`, filenames and cfg files are a bit different but the meshes are the same. Observed and expected behaviour; ===========================; I would expect that the two simulations give similar results. However, the singlezone setup converges while the multizone setup diverges (`SU2 has diverged (NaN detected).` or `SU2 has diverged (Residual > 10^20 detected).`). The same behaviour is observed for CFL=10 instead of 1000, and also for SA with CFL=10. I ran v7.2.0 (commit 3ec1c680) in serial (without MPI). I reported a similar problem some time ago in the developer meeting, with a ""chopped NACA 0012 airfoil"" testcase. For this issue we created this more basic example which seems to reproduce the error (although I am not completely sure). Typically we would see the `SU2 has diverged (Residual > 10^20 detected).` error. Differences between multizone/fluid-interface and singlezone/joined-meshes; ======================",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1414:2714,adapt,adapted,2714,https://su2code.github.io,https://github.com/su2code/SU2/issues/1414,1,['adapt'],['adapted']
Energy Efficiency," heat flux over different surfaces during runtime would be a good metric for judging convergence and quality of the design. Currently (as of 7.3.0) this does not seem to be possible. *A clear and concise description of what the problem is. Ex. I'm always frustrated when [...]*; In my mesh I have defined various markers which indicate the surfaces of interest, where I would like the average heat-flux to evaluate over time. As suggested by the DryRun info I've indicated the surfaces with the MARKER_MONITORING specifier in the config file:. `MARKER_MONITORING = (NS_WALL_RESONATORTIP, NS_WALL_RESONATOR3, NS_WALL_RESONATOR2)`. However, the history and screen output shows only the heat flux aggregated over all surfaces. **Describe the solution you'd like**; *A clear and concise description of what you want to happen.*. I would like the values of the HEAT group to behave just like those of the FLOW_COEFF group, where the heat flux is indicated on a per-surface basis. This would allow me to track the development of the heat fluxes with good time resolution, without having to write an excessive amount of surface files. The output in the solution history could be similar to that of other output groups, i. e.:; `""Avg_HeatFlux(SURF1)"",""Avg_HeatFlux(SURF2)"",...`. **Describe alternatives you've considered**; *A clear and concise description of any alternative solutions or features you've considered.*; Regularly exporting the entire surface data to discrete files and analyzing them during post-processing is a possible work-around, but leads to an excessive amount of files. **Additional context**; *Add any other context or screenshots about the feature request here.*; My cases are highly transient and require quite some timesteps until a quasi-stationary limit cycle is reached. In the limit cycle the cycle-averaged net heat fluxes should be nearly zero. However, the magnitude of the heat transport is also of interest, which is why I would like to monitor these properties over time.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1531:2185,monitor,monitor,2185,https://su2code.github.io,https://github.com/su2code/SU2/issues/1531,1,['monitor'],['monitor']
Energy Efficiency," of the control volume by mirroring the grid on the boundary. The fluxes and gradients are then evaluated like in the interior using reflected flow variables."" This approach can be implemented in an easy way when computing the Green-Gauss gradients. In SU2, routines are already in place that deal with GG gradients on boundaries. Here, we just have to identify the symmetry planes and mirror the flux through the faces. ; Blazek continues: ""The second methodology computes the fluxes for the halved control volume (but not accross the boundary). The components of **the residual normal to the symmetry plane** are then zeroed out. It is also necessary to correct normal vectors of those faces of the control volume, which touch the boundary. The modification consists of removing all components of the face vector, which are normal to the symmetry plane. The gradients also have to be corrected according to Eq. (8.40) [points 2,3,4 above]"". 1. Modify Green-Gauss and Least-Squares gradient computation for symmetry planes; -> This seems to work fine; 2. Fix normal components of edges connected to symmetry plane; -> This seems to work fine; 3. Fix residual components of velocity on the symmetry plane; -> This seems to work fine; 4. Multiple symmetry planes, including Euler walls; -> This seems to work fine; 6. multigrid; -> Works fine now that we use the agglomeration as in the paper of Diskin.; 7. grid movement; 8. -> Works fine with the new fix to the residuals (energy update). ## Related Work; #1168 . ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [x] My contribution is commented and consistent with SU2 style ",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2194:1772,Green,Green-Gauss,1772,https://su2code.github.io,https://github.com/su2code/SU2/pull/2194,1,['Green'],['Green-Gauss']
Energy Efficiency," of the tutorials. Therefore, there is a mismatch in what the C++ code uses, and what the python code uses. This is an easy problem to fix and is being fixed in the branch fix_set_ffd_script. Next, I want to have a discussion about the shape optimization options and scalings. Currently there are the following options in the config template to control scaling:. ```; % Optimization objective function with scaling factor, separated by semicolons.; % To include quadratic penalty function: use OPT_CONSTRAINT option syntax within the OPT_OBJECTIVE list.; % ex= Objective * Scale; OPT_OBJECTIVE= DRAG * 10; % Optimization constraint functions with pushing factors (affects its value, not the gradient in the python scripts), separated by semicolons; % ex= (Objective = Value ) * Scale, use '>','<','='; OPT_CONSTRAINT= ( LIFT > 0.328188 ) * 0.001; ( MOMENT_Z > 0.034068 ) * 0.001; ( AIRFOIL_THICKNESS > 0.11 ) * 0.001; %; % Factor to reduce the norm of the gradient (affects the objective function and gradient in the python scripts); % In general, a norm of the gradient ~1E-6 is desired.; OPT_GRADIENT_FACTOR= 1E-6; %; % Factor to relax or accelerate the optimizer convergence (affects the line search in SU2_DEF); % In general, surface deformations of 0.01'' or 0.0001m are desirable; OPT_RELAX_FACTOR= 1E3; %; % Optimization bound (bounds the line search in SU2_DEF); OPT_LINE_SEARCH_BOUND= 0.1; %; % Upper bound for each design variable (bound in the python optimizer); OPT_BOUND_UPPER= 1E10; %; % Lower bound for each design variable (bound in the python optimizer); OPT_BOUND_LOWER= -1E10; %; % Optimization design variables, separated by semicolons; DEFINITION_DV= ( 19, 1.0 | airfoil | AIRFOIL, 0, 0, 0, 1.0 ); ...; ```. Now this provides a lot of flexibility in scaling the inputs to the optimizer, which is great because these optimizers aren't very robust with scaling. But the way they behave is sometimes a little odd. I am going to go through each option and talk about how it affects th",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/733:1337,reduce,reduce,1337,https://su2code.github.io,https://github.com/su2code/SU2/issues/733,1,['reduce'],['reduce']
Energy Efficiency," past iterates. Here, they are used to identify eigenvectors with large eigenvalues which slow down the overall convergence and to form a (small) subspace basis from them. Each fixed-point solution update is then [projected onto that subspace and the projected part will be additionally corrected via a ""real"" Newton step (a.k.a. ""RPM"")](https://doi.org/10.1137/0730057) using the computational graph for precise derivative information. This preliminary result with one basis vector indicates that the procedure can be effective at very low additional cost (for n basis vectors, it mainly reduces to n scalar products of the current fixed-point iterate with the basis vectors, the Newton step is cheap as n is small). The residuals are obtained from a fully coupled adjoint CHT problem (2d heated cylinder in laminar flow) with a heatflux objective function. ![plot](https://user-images.githubusercontent.com/22639394/122736716-9ad18000-d280-11eb-9983-c2d47d434dc5.png). (Purple: No correction applied, Green/Blue: Usage of 1-dim. basis after extraction of one basis vector at around 500 iterations, Yellow: MPI run with two processes using the manual but MPI-compatible Gram-Schmidt-QR-decomposition for identification of basis vectors.); ; **The code is WIP.** It needs a lot of additions, changes and testing, though the overall structure should be clear from what's already implemented. ToDo's:; - Remove Eigen dependencies, not needed anymore; - Add a meaningful testcase; - Add eigenvalue estimation / QR criterion values to screen and history output fields; - Implement a basisMaintenance()-routine; - Figure out a proper base class for both `CQuasiNewtonInvLeastSquares` and `CNewtonUpdateOnSubspace`; - Figure out further algorithmic strategies for multiphysics problems, now the default is to create the basis in the outer loop, and to apply it for corrections in the inner. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questi",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1217:1230,Green,Green,1230,https://su2code.github.io,https://github.com/su2code/SU2/pull/1217,1,['Green'],['Green']
Energy Efficiency," points or other DV of choice. I tried to keep config options simple: the new mesh solver is enabled using; ` DEFORM_MESH = YES `; and the relevant markers which will move and introduce deformations into the domain are set using; `MARKER_DEFORM_MESH= ( wall )`; Hopefully, previous mesh deformation structures can be deprecated and removed soon, but we will need to adapt the rigid/imposed boundary deformation of other kinds of grid movement. I kindly ask for your help in there, as I'm not very familiar with some of the legacy code for this purpose. Additionally, in this PR I have done some refactoring so the AD-based adjoint routines are accessible from the python-wrapped version of the code. The SWIG wrapper now compiles the AD binaries and interfaces directly to sensitivity information, which should make it much easier to integrate SU2 within any python-based optimization framework. . ## Related Work; - Some work will be needed to adapt the new contiguous variable structure by @pcarruscag in #753; - I have added a couple of regression tests, but I will add tutorials once #724 is merged. As of now, a bug reported in #713 prevents me from adding any meaningful tutorial - but that should be fixed in #724 according to @talbring ; - I already started adding the mesh solver, numerics and transfer functions in separate files as discussed in #583 and already started in #725. For clarity and ease of merging, only new classes are split so far, but I will probably start splitting other structures soon in PRs to come. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] ",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/760:1852,adapt,adapt,1852,https://su2code.github.io,https://github.com/su2code/SU2/pull/760,1,['adapt'],['adapt']
Energy Efficiency," to construct my custom BC inheriting from one of the existing ones. Put this new BC_TYPE boundary condition in my dynamically-linked library.; > ; > * BUT no recompiling of SU2_CFD; the program should provide facilities to dynamically load libs at RUNTIME (e.g. list of custom ibs in case config file).; > ; > * Now, switching between my custom BC types and the standard ones only requires to edit the config file. For example, the inlet BC of the SA turbulence model is defined in CTurbSASolver::BC_Inlet(); We can place this definition in a separate file bcinit.cpp and dynamically link this file so you have a libbcinit.so file. SU2 knows about libbcinit.so and BC_Inlet() at compile time. ; In your testcases directory, you can put a copy of bcinit.cpp and redefine the boundary condition BC_Inlet. If you change the boundary condition, you only compile bcinit.cpp in your testcase directory and create a libbcinit.so in your testcase directory. You then make sure that when SU2 is looking for dynamically linked libraries, it searches your testcase directory before it searches the SU2 installation directory. . As you see, this can be used for redefining existing (at compile time) functions and modifying its content. I find it especially useful for creating custom initial conditions. If you want to create a completely new custom boundary condition BC_Custom(), it is probably easiest to predefine this structure and create a custom_bc option in the config file. In a CFD problem, there are only a limited number of possibilities (for types of boundary conditions, and systems of equations), so I'm not sure when a BC_Custom() is useful, or when the tipping point is where self-registering classes will become useful for its implementation. Recompiling the code completely takes maybe 2 minutes for me, so I never saw compiling times as a problem. However, this concept could reduce code duplication and improve readability and maintainability, so I'm curious to see the progress on this...",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1058#issuecomment-680758665:2030,reduce,reduce,2030,https://su2code.github.io,https://github.com/su2code/SU2/issues/1058#issuecomment-680758665,1,['reduce'],['reduce']
Energy Efficiency,![Mesh](https://user-images.githubusercontent.com/60317454/74029438-c0c4f000-49bd-11ea-8f83-4a823c7c69d7.jpg); ![Mach](https://user-images.githubusercontent.com/60317454/74029449-c7536780-49bd-11ea-92e6-49c9812e670f.jpg). I have moved PYAMG interface to SU2-6.2.0 and made some changes to Mach sensor on the solid wall.,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/606#issuecomment-583368735:294,sensor,sensor,294,https://su2code.github.io,https://github.com/su2code/SU2/issues/606#issuecomment-583368735,1,['sensor'],['sensor']
Energy Efficiency,"# Failing Regression tests (91 of'em); The Euler Wall BC (comp. & incomp. affected) is used in many Testcases. All failing tests are listed. ; Box checkked -> values adapted to newer ones. ; tiny delta = all delta_vals below 0.1; ; medium delta = one delta val larger than 0.1 but all below 1.0; ; big delta = one delta_val larger than 1.0. I use this post for me to keep track of what I already fixed on what is left to do. ## serial_regression; - [x] channel, tiny delta; - [x] naca0012, tiny delta; - [x] wedge, medium delta; - [x] oneram6, big delta, restart; - [x] fixedcl_naca0012, tiny delta; - [x] polar_naca0012, tiny delta; - [x] bluntbody, medium delta; - [x] inc_euler_naca0012, tiny delta; - [x] inc_nozzle, medium delta; - [x] inc_lam_bend, tiny delta; - [x] contadj_naca0012, big delta, cont.Adj. There is some issue with all the cont.adj. cases in the boundary formulation; - [x] contadj_oneram6, big delta, cont.Adj., great diff to develop; - [x] contadj_wedge, big delta, cont.Adj.; - [x] contadj_fixedcl_naca0012, big delta (no computed vals), cont.Adj.; - [x] harmonic_balance, tiny delta; - [x] sine_gust, tiny delta; - [x] aeroelastic, tiny delta; - [x] edge_VW, tiny delta, NICFD; - [x] edge_PPR, tiny delta, NICFD; - [x] uniform_flow, tiny delta; - [x] channel_2D, tiny delta; - [x] channel_3D, tiny delta; - [x] pipe, tiny delta; - [x] rotating_cylinders, medium delta; - [x] supersonic_vortex_shedding, big delta; - [x] fsi2d, tiny delta; - [x] stat_fsi; - [x] stat_fsi_restart; - [x] dyn_fsi; - [x] airfoil_fsi_rbf, big delta (no computed vals); - [x] contadj_euler_py; - [x] shape_opt_euler_py, big delta; - [x] opt_multiobj_py, medium delta; - [x] opt_multiobjcombo_py, medium delta; - [x] opt_multiobj1surf_py, medium delta; - [x] opt_2surf1obj_py, tiny delta; - [x] pywrapper_naca0012, tiny delta; - [x] pywrapper_aeroelastic, tiny delta; - [x] pywrapper_fsi2d, tiny delta. ## parallel_regression; - [x] channel, tiny delta; - [x] naca0012, tiny delta; - [x] wedge, medi",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/740#issuecomment-524639197:166,adapt,adapted,166,https://su2code.github.io,https://github.com/su2code/SU2/pull/740#issuecomment-524639197,1,['adapt'],['adapted']
Energy Efficiency,"# Print adap options; sys.stdout.write(su2amg.print_adap_options(config, adap_options)); ; #--- How many iterative loops? Using what prescribed mesh sizes? ; ; mesh_sizes = su2amg.get_mesh_sizes(config); sub_iter = su2amg.get_sub_iterations(config); ; # solver iterations/ residual reduction param for each size level; adap_ext_iter = su2amg.get_ext_iter(config); adap_res = su2amg.get_residual_reduction(config). adap_sensor = config.ADAP_SENSOR; sensor_avail = ['MACH', 'PRES', 'MACH_PRES']; ; if adap_sensor not in sensor_avail:; raise RuntimeError , 'Unknown adaptation sensor (ADAP_SENSOR option)\n'; ; if len(mesh_sizes) != len(sub_iter):; raise RuntimeError , 'Inconsistent number of mesh sizes and sub-iterations'; ; #--- Use the python interface to amg, or the executable?; ; amg_python = su2amg.get_python_amg(config); ; #--- Change current directory; ; warn = False; adap_dir = './ADAP'; cwd = os.getcwd(); ; if os.path.exists(adap_dir):; sys.stdout.write('./ADAP exists. Removing old mesh adaptation in 10s.\n'); sys.stdout.flush(); if warn : time.sleep(10); shutil.rmtree(adap_dir); ; os.makedirs(adap_dir); os.chdir(adap_dir); sys.stdout.write('The %s folder was deleted\n' % adap_dir); ; os.symlink(os.path.join(cwd, config.MESH_FILENAME), config.MESH_FILENAME); os.symlink(os.path.join(cwd, config.SOLUTION_FLOW_FILENAME), config.SOLUTION_FLOW_FILENAME); ; #--- Compute initial solution if needed, else link current files; ; config_cfd = copy.deepcopy(config); for opt in adap_options:; config_cfd.pop(opt, None); config_cfd.LOW_MEMORY_OUTPUT = ""NO""; ; config_cfd.WRT_BINARY_RESTART = ""NO""; #config_cfd.READ_BINARY_RESTART = ""NO""; ; current_mesh = ""Initial_mesh""; current_solution = ""Initial_solution""; ; if config['RESTART_SOL'] == 'NO':; ; stdout_hdl = open('ini.stdout','w') # new targets; stderr_hdl = open('ini.stderr','w'); ; success = False; val_out = [False]; ; sys.stdout.write('Running initial CFD solution.\n'); ; try: # run with redirected outputs; ; sav_stdout, sys.stdout",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/606#issuecomment-504636643:4234,adapt,adaptation,4234,https://su2code.github.io,https://github.com/su2code/SU2/issues/606#issuecomment-504636643,1,['adapt'],['adaptation']
Energy Efficiency,"# Proposed Changes; There has been talk about using external solvers in SU2. I am especially interested in this as due to the ill-conditioned matrices I get in structural topology optimization a direct sparse solver will probably be required.; One tricky issue with using external solvers is their compatibility with the discrete adjoint. Luckily in the reverse mode we do not differentiate the solver, only the operation A^-1 * b. Nevertheless currently all CSysVectors and CSysMatrices use su2double which makes them incompatible with external libraries and slower than in direct mode.; To address this issue I want to template the required classes such that we have the option (but not be obligated) to have CSysMatrices of passivedoubles in the discrete adjoint.; Moreover, I want to do some refactoring to make CSysSolve a proper class instead of an aggregate of functions. Currently we instantiate a CSysSolve whenever we need to solve a system, I think it would be beneficial to keep CSysSolve as a member of the classes that use it, so that for example, working memory used by Krylov methods is allocated only once. Note: I am aware that @talbring started some work on this (and more) in the *feature_template_linear_solver* branch, I tried to pick up were Tim left of but it was too much (a lot changes in one year). I really like the refactoring he was doing and will try to bring as much as possible into this, but I need to do it in smaller steps. Now this PR deals with some of the aforementioned refactoring, namely:; - CG, BCGSTAB, and GMRES have their working vectors and matrices as members of CSysSolve and allocate them only on the first call.; - CSysSolve is now a member of CSolver and CVolumetricMovement.; - BCGSTAB uses two fewer vectors than before and the ""p"" and ""v"" vectors are initialized to 0 instead of ""b"" (I think this was a small bug?).; - CSysSolve takes a ""mesh deformation"" flag at construction so that Solve can be called by CSolver and by CElasticityMovement, be",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/650:1104,allocate,allocated,1104,https://su2code.github.io,https://github.com/su2code/SU2/pull/650,1,['allocate'],['allocated']
Energy Efficiency,"## **BUG DESCRIPTION**. ## **Flow scenario**; The following 3D-centrifugal impeller was designed and the flow field simulated. The aim was to optimize the blade leading edge with respect to outlet static pressure (_please note that the mesh is rotating_):. ![Screenshot (157)](https://user-images.githubusercontent.com/96534491/236707270-c9de2899-1a72-4876-975c-eabaec826c4f.png). The mesh is deliberately coarse being the intention to firstly perform the simulation utilizing Euler's convective scheme. ; Subsequently, the flow field is computed correctly and the solution is converged. The solution was obtained setting up the turbomachinery simulation options available in SU2. After this initial procedure the FFD Box was successfully generated ( FFD_DEGREE = 2,2,2 ) and attached to the domain as explained in the tutorials ( *using SU2_DEF* ). The FFD box appears as follows:. *FFD box edges: green ; FFD box control point: yellow; There is no intersection between FFD edges and periodic boundaries*. ![Screenshot (158)](https://user-images.githubusercontent.com/96534491/236707553-92fb9e5a-3808-4ea0-a02e-43b574de44c0.png). It was intended to operate each SU2 module manually: . 1. **SU2_DEF** -> FFD box generation; 2. **SU2_CFD** -> flow field computation; 3. **SU2_CFD_AD** -> adjoint solution; 4. **SU2_DOT_AD** -> gradient calculation; 5. **SU2_DEF** -> shape deformation. ## **Shape deformation test**; Before the actual gradients computation it was preferred to perform a deformation test with the presented settings: . % ----------------------- DESIGN VARIABLE PARAMETERS --------------------------%. DV_KIND= FFD_CONTROL_POINT, FFD_CONTROL_POINT, FFD_CONTROL_POINT, FFD_CONTROL_POINT; %; % Marker of the surface in which we are going apply the shape deformation; DV_MARKER= ( BLADE1 ); %; % Parameters of the shape deformation ; % 	- FFD_CONTROL_POINT ( FFD_BoxTag, i_Ind, j_Ind, k_Ind, x_Disp, y_Disp, z_Disp ); %; DV_PARAM= ( BLADE_BOX, 0, 0, 0, 1.0, 0.0, 0.0 ); ( BLADE_BOX, 0, 1, 0",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/2025:899,green,green,899,https://su2code.github.io,https://github.com/su2code/SU2/issues/2025,1,['green'],['green']
Energy Efficiency,"## Proposed Changes. - Addition of species diffusion terms to surface energy balance in NEMO, important for highly dissociated flows; - Addition of vector for s species, ""enthalpys"", to variable to store values accessed in solver.; - General cleanup/commenting of the NEMO heat flux computation in CFVMFlowSolverBase.inl. ## Related Work. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1383:70,energy,energy,70,https://su2code.github.io,https://github.com/su2code/SU2/pull/1383,1,['energy'],['energy']
Energy Efficiency,"## Proposed Changes. - Temporarily remove sumJhs term from surface energy balance. The species density gradients provided by WLS and GG are very different, and the GG values give incorrect results for surface heating. I want to remove this term for now, until the gradient difference sorted, so it does not result in incorrect surface heating prediction if the user specifies GG. . ## Related Work; This reverts the changes in PR #1383 . ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1400:67,energy,energy,67,https://su2code.github.io,https://github.com/su2code/SU2/pull/1400,1,['energy'],['energy']
Energy Efficiency,"## Proposed Changes. . 1. fixed factor of 100 in the transition turbulence models; 2. changed initialization of inlet profile from 0.0 to values taken from config file. I guess this was done to make this routine more general (for other boundaries) in the future. However, I think generating a default file that works out of the box is better.; 3. added a descriptive comment line to the inlet profile file (one for each marker) with the names of the columns. This line is intended to make editing easier for the user. This comment line is not mandatory and is ignored by the profile reader.; 4. do not write residuals of temperature to output file when energy equation is off. ## Related Work; Related to #1263 and #1265 . ## PR Checklist. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1268:653,energy,energy,653,https://su2code.github.io,https://github.com/su2code/SU2/pull/1268,1,['energy'],['energy']
Energy Efficiency,"## Proposed Changes. 1. fixed factor of 100 in the transition turbulence models; 2. changed initialization of inlet profile from 0.0 to values taken from config file. I guess this was done to make this routine more general (for other boundaries) in the future. However, I think generating a default file that works out of the box is better. ; 3. added a descriptive comment line to the inlet profile file (one for each marker) with the names of the columns. This line is intended to make editing easier for the user. This comment line is not mandatory and is ignored by the profile reader. ; 3. do not write residuals of temperature to output file when energy equation is off. ## Related Work; Related to issue #1265 and #1263. ## PR Checklist. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.; - [x] I have added a test case that demonstrates my contribution, if necessary.; - [x] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1267:653,energy,energy,653,https://su2code.github.io,https://github.com/su2code/SU2/pull/1267,1,['energy'],['energy']
Energy Efficiency,"## Proposed Changes. Add `workflow_call` event to `regression.yml` Github Actions workflow. This way it is possible to [re-use](https://docs.github.com/en/actions/using-workflows/reusing-workflows) it from another workflow. Add a new workflow - `scheduled-arm64.yml`. It is a scheduled workflow that just executes `regressions.yml` on a self-hosted runner. ## Related Work. https://github.com/su2code/Docker-Builds/pull/1 - A PR that updates the build and test Docker images to Ubuntu 20.04 so that they could be used on both AMD64 and ARM64. ## PR Checklist. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [ ] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1619:246,schedul,scheduled-,246,https://su2code.github.io,https://github.com/su2code/SU2/pull/1619,2,['schedul'],"['scheduled', 'scheduled-']"
Energy Efficiency,"## Proposed Changes. The Boundary conditions in the SST turbulence model are based on the free stream conditions. However if we mix two stream with different fluid properties at the inlets, the Turbulent Kinetic Energy, omega and eddy viscosity at the inlets should be based on these local fluid properties. So in this pull request, we aim to use the known fluid properties at the inlets in order to set the BC for the SST model. ; I can add a test case if it is needed. ## Related Work. This pull request is related to #1784. . ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [X] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1796:212,Energy,Energy,212,https://su2code.github.io,https://github.com/su2code/SU2/pull/1796,1,['Energy'],['Energy']
Energy Efficiency,"## Proposed Changes. This PR introduces a completely rewritten output structure. If you have ever looked into the old output_structure.cpp file, you probably noticed that it was quite messy. To add new output to screen or history people just copied what was there and modified it to suit there own needs. This resulted in a lot of if/switch statements and was hard to read ... one reason for this was that we have not really used an object oriented structure for the output. Despite rearranging everything into separate classes, here is a non-exhaustive list of new features and changes:. - Fully customizable screen, history and volume output; - New multizone screen output; - New flexible way so set convergence criteria (any residual and/or coefficient can be used as a monitor); - Consistent naming of iteration variables (TIME_ITER, OUTER_ITER, INNER_ITER); - Consistent file naming options (RESTART_FILENAME, SOLUTION_FILENAME); - On-the-fly writing of all visualization files; - New Singlezone and Multizone drivers are now used by default. Note that this is a very big change. And i apologize for any inconvenience and troubles that this might cause. I can only maintain features covered by the regression tests. So please test it with your cases and let me know if anything is missing (especially in the output). . I will create documentation for all the new features soon. If you want to test it already, please let me know, I need some feedback. . User Documentation on the changes:; https://su2code.github.io/docs/Solver-Setup; https://su2code.github.io/docs/Custom-Output; https://su2code.github.io/docs/Guide-to-v7/. ## Related Work; #715 is already included in this PR and should be merged before. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [ ] I am submitting my contri",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/724:773,monitor,monitor,773,https://su2code.github.io,https://github.com/su2code/SU2/pull/724,1,['monitor'],['monitor']
Energy Efficiency,"## Proposed Changes. This is intended to be a small PR, but a big design shift. As discussed in issue #698, unit tests can serve an important role in software development. They complement, rather than replace, validation and verification tests. They are most useful when you want to isolate a specific behavior. Unit-testing increases development time, but improves the quality of the code and reduces code-maintenance time \[[source](https://collaboration.csc.ncsu.edu/laurie/Papers/TDDpaperv8.pdf)\]. ### Vision. In my mind, the most efficient way to proceed is to add unit tests as new behaviors are added and bugs are fixed. With each new PR, we should ask ""Should this have a unit test to verify this behavior?"" Unit tests will provide a clear way to show that each PR does what the developer promises it will do. This will require refactoring some of the code. Some parts of the code, like the CConfig class, are not unit-testing friendly. Unit testing is hard when you have God-classes and ""do-it-all"" functions. The hope is that refactoring these classes will lead to more modular and easier-to-maintain code. ### Decision to use Catch2. Catch2 was chosen for the unit testing library for the following reasons:. + It can be included as a header-only library.; + It has a very clean, easy-to-use syntax; + It has widespread use, including the FEniCS library. ### Design choices. The following design choices are in place. If you disagree with them, then please start a discussion here:. + All tests are placed in a root-level directory named `UnitTests`. Inside this directory is a structure just like the existing folder structure (e.g. `SU2_CFD/numerics`), except that there are not separate `src` and `include` folders.; + Tests are grouped by class, and put in files such as `CNumerics_tests.cpp`.; + A single test executable is compiled and run, as opposed to a separate test executable for each group of tests. With the single test executable, you can always filter down to groups of tes",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/850:394,reduce,reduces,394,https://su2code.github.io,https://github.com/su2code/SU2/pull/850,2,"['efficient', 'reduce']","['efficient', 'reduces']"
Energy Efficiency,"## Proposed Changes; *Give a brief overview of your contribution here in a few sentences.*; 1. arrays in gettriangle need to be size 2 instead of 3; 2. error message that checks species clipping only checks if the keyword is present, not if clipping is on; 3. added setblock_zero ""per-species"" to CSysVector (added here to reduce the mega-PR for the flamelet model); 4. fix speling eror. ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [X] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1761:323,reduce,reduce,323,https://su2code.github.io,https://github.com/su2code/SU2/pull/1761,1,['reduce'],['reduce']
Energy Efficiency,"## Proposed Changes; *Give a brief overview of your contribution here in a few sentences.*; ; Adapting and fixing mixing density model when species transport equations are being solved.; The species dependent properties will be added in 3 PRs:; 1/3 : mixture density model (this PR); 2/3 : mixture viscosity + heat capacity; 3/3 : mixture mass diffusivity + thermal conductivity. ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*; Mark Heimgartner implemented the MIXTURE_FLUID model during his master thesis at Bosch. In this pull request, we aim to adapt his implementation to the latest version of develop branch, fixing some implementations that we think were causing numerical issues in his original implementation. EDIT: Here, the mixture density will be implemented, based on the ideal gas law (computing mixture molecular weights). ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X ] I am submitting my contribution to the develop branch.; - [ X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [ X] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1620:94,Adapt,Adapting,94,https://su2code.github.io,https://github.com/su2code/SU2/pull/1620,2,"['Adapt', 'adapt']","['Adapting', 'adapt']"
Energy Efficiency,"## Proposed Changes; *Give a brief overview of your contribution here in a few sentences.*; ; Fixes a bug in the Q-criterion and replaces it with a more efficient implementation. It is now computed directly as the second invariant of the velocity gradient tensor. @EduardoMolina : since you had asked about this, can you please check my math :) ?. ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. N/A. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [x] My contribution is commented and consistent with SU2 style.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/704:153,efficient,efficient,153,https://su2code.github.io,https://github.com/su2code/SU2/pull/704,1,['efficient'],['efficient']
Energy Efficiency,"## Proposed Changes; *Give a brief overview of your contribution here in a few sentences.*; ; Fixes a bug that I introduced in #598. When the energy eqn. is not active, the temperature is not written to the restart file, but this was not taken into account for the restart loader. This corrects the restart loader to read the correct number of variables when energy is inactive. I have also taken the opportunity to improve the regression cases for the incompressible solver. ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. Thanks to @TobiKattmann and @talbring for finding this so quickly!. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test case that demonstrates my contribution, if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/601:142,energy,energy,142,https://su2code.github.io,https://github.com/su2code/SU2/pull/601,2,['energy'],['energy']
Energy Efficiency,"## Proposed Changes; *Give a brief overview of your contribution here in a few sentences.*; ; More efficient loops/maps for sorting of grid points and connectivity during initial reading/partitioning. This is important for very large meshes when running on limited resources. Due to the changes in the initial ordering of the connectivity, this PR results in minor differences in the residuals for the regressions. They have been updated accordingly. ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. N/A. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [x] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/576:99,efficient,efficient,99,https://su2code.github.io,https://github.com/su2code/SU2/pull/576,1,['efficient'],['efficient']
Energy Efficiency,"## Proposed Changes; *Give a brief overview of your contribution here in a few sentences.*; ; Removing CFL adaption for the Quick Start. ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. Fixes #887. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [x] My contribution is commented and consistent with SU2 style.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/958:107,adapt,adaption,107,https://su2code.github.io,https://github.com/su2code/SU2/pull/958,1,['adapt'],['adaption']
Energy Efficiency,"## Proposed Changes; *Give a brief overview of your contribution here in a few sentences.*; ; This PR contains a new routine to compute 3 mesh quality metrics (similar to what you may find in commercial codes): orthogonality angle, cell aspect ratio, and cell volume ratio. It replaces an old routine that was not being used. Note that this is for the **dual control volumes of the finite volume solver** (not the primal elements), so the values are vertex-based. The min & max of the 3 metrics are reported to the console during preprocessing, and if you would like the fields to be written to the viz. files, you can use . ```; WRT_MESH_QUALITY= YES; ```. For now, it is just for sanity checks. In the future, we can use this as an optimization objective/constraint, for automatically improving grids (r-adaptation), or as part of advanced limiters/numerical methods. ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [x] My contribution is commented and consistent with SU2 style.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/778:806,adapt,adaptation,806,https://su2code.github.io,https://github.com/su2code/SU2/pull/778,1,['adapt'],['adaptation']
Energy Efficiency,"## Proposed Changes; *Give a brief overview of your contribution here in a few sentences.*; ; This PR greatly improves the robustness and convergence behavior of the flow solvers by implementing a more sophisticated controller for nonlinear iterations along with several other important modifications. The changes are the following:; - New under-relaxation strategy. Variables such as density and energy are only allowed to change by +/- 20% with each nonlinear iteration by applying an under-relaxation parameter to the updates at each node, which helps with difficult transients, especially at calculation startup. Also applied to turbulence model updates (though threshold is larger).; - CFL adaption via an exponential progression with under-relaxation approach, i.e., changes to CFL are coupled to the under-relaxation parameter (small under-relaxation parameter = decrease, and large = increase). CFL is now locally defined for each CV for this process.; - Modified realizability checks to avoid negative density/pressure/temperature at the nodes and also during 2nd-order reconstruction at cell faces.; - CV face states for 2nd-order MUSCL are now optionally reconstructed with a separate gradient method (unweighted least squares recommended), which is very important for robustness. Gradients for viscous terms and sources are still computed via GG or WLS for accuracy reasons.; - SA model was being clipped unnecessarily. This clipping has been removed. Here is my recommendation on how to run all of your 2nd-order cases going forward:. ### Euler / Laminar N-S; Turn off the limiters, unless you truly need them for preserving solution monotonicity (e.g., for shocks/discontinuities). Use ; ```; NUM_METHOD_GRAD_RECON= LEAST_SQUARES; ```; for robustness. Start with a CFL around 10 and converge the implicit system with LINEAR_SOLVER_ITER= 10 for each nonlinear iteration (FGMRES + ILU0 recommended). Activate the CFL adaption with. ```; % Parameters of the adaptive CFL number (factor down",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/790:397,energy,energy,397,https://su2code.github.io,https://github.com/su2code/SU2/pull/790,2,"['adapt', 'energy']","['adaption', 'energy']"
Energy Efficiency,"## Proposed Changes; *Give a brief overview of your contribution here in a few sentences.*; ; This PR will close the release of v6.2.0. The goal is to tag it within the next week or two once this is merged. Soon, folks in the community will be submitting PRs for major changes to the I/O, drivers, MPI, and more, as we prepare for a major v7 release (scheduled around the time of the developers meeting in May). This v6.2.0 is a minor/maintenance release that will serve as a good snapshot before the major changes. ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. We will merge some of the currently open PRs before the release, especially smaller PRs and clean up PRs. Feel free to comment below if there are any outstanding items that you would like to add to develop via PR before release. For significant changes, please wait for the v7 release. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [x] My contribution is commented and consistent with SU2 style.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/641:351,schedul,scheduled,351,https://su2code.github.io,https://github.com/su2code/SU2/pull/641,1,['schedul'],['scheduled']
Energy Efficiency,"## Proposed Changes; *Give a brief overview of your contribution here in a few sentences.*; ; This is one for v7 and needs some testing. This PR contains a complete refactoring of the point-to-point MPI infrastructure and an entirely new implementation of the periodic BC for the FV solvers. For the MPI refactoring:; - All calls are abstracted to parent classes (geometry, solver, matrix), meaning we will remove all Set_MPI_* routines.; - Point-to-point comms are all non-blocking calls that have been separated into InitiateComms() & CompleteComms(), so that, in theory, they can be overlapped with computation where possible. It would also be possible now to group the comms into larger messages easily. These optimizations are a next step (not for this PR).; - Persistent communication schedules and memory are used throughout the calculation.; - Results are the same, this is just a refactoring to improve performance, scalability, etc. while making the code much simpler and separating the periodic part. For the periodic BC:; - No longer need a preprocessing with SU2_MSH - use the original grid and just call SU2_CFD.; - Adjacent periodic faces are now possible, e.g., triply-periodic cube.; - Concept is now based on completing the residuals from partial control volumes on either side of a periodic face instead of creating extra halo cells.; - All periodic comms have been separated from the MPI point-to-point comms and are performed first for consistency. In a follow-up PR, I will remove many lines of code that are no longer needed (all Set_MPI_* routines, many outdated geometry routines, etc.). ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. ~~I could use some help with testing this one, in particular the rotational periodicity, which might still need some changes. Unfortunately, I do not have the original meshes for the periodic cases in the repo that are failing (other than P",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/652:791,schedul,schedules,791,https://su2code.github.io,https://github.com/su2code/SU2/pull/652,1,['schedul'],['schedules']
Energy Efficiency,"## Proposed Changes; *Give a brief overview of your contribution here in a few sentences.*; Based on the observations of Albring et al. in ""Challenges in Sensitivity Computations for (D)DES and URANS"" we implemented the windowing regularizers proposed in the work of Krakos et al. ""Sensitivity analysis of limit cycle oscillations"" and adapted it to the AD framework of SU2. ; We call the feature in the following ""windowing"". ; Windowing can be applied if one takes the (windowed) time average of a periodic function, i.e. in the case of an instationary flow field that exhibits periodic behaviour. ; - We changed the functionality of the output-field-prefix TAVG and D_TAVG from a simple time average to a time averaged weighted with a windowing function. For the direct run this is just a post-processing step and changes happen only in signal_processing_toolbox and Coutput. ; - We adapted the seeding for the adjoint run from a the classic time average to a windowed time average. ; - Tests have shown, that higher order windowing regularizers, tend to converge quickly with respect to the averaged time span. We have implemented a ""timeConvergenceMonitor"", that acts similarly to the convergence monitoring of the inner convergence. It applies a cauchy convergence criterion to the chosen windowed time average output coefficients. ; - The cauchy convergence criterion works for direct run, adjoint run and shape optimization scripts; - In case of shape optimization, the script remembers the final time iteration of the direct run. If the final time step is smaller than the ""original"" final time step stated in the configuration file, it adapts the starting time of the adjoint run; and the time to seed the objective function, such that the seeding does not exceed the original time to end the seeding. ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. ## PR Checklist; *Put an X by all that ap",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/836:336,adapt,adapted,336,https://su2code.github.io,https://github.com/su2code/SU2/pull/836,2,['adapt'],['adapted']
Energy Efficiency,"## Proposed Changes; *Give a brief overview of your contribution here in a few sentences.*; Nodes shared by an inlet and a wall show nonphysical values in the corner node for energy, temperature, pressure, density. This fixes the issue. ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [x] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [x] I used the pre-commit hook to prevent dirty commits and used `pre-commit run --all` to format old commits.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2266:175,energy,energy,175,https://su2code.github.io,https://github.com/su2code/SU2/pull/2266,1,['energy'],['energy']
Energy Efficiency,"## Proposed Changes; - Fixes the adjoint residual computation for multizone cases (which was wrong on first inner iterations due to cross term extraction).; - Fixes (hopefully for good) discadj FEA solutions when INCREMENTAL_LOAD=YES (left over from #933); - Add relaxation to CDiscAdjSolver via option RELAXATION_FACTOR_ADJOINT, that replaces the old RELAXATION_FACTOR_ADJFLOW . I found this to be necessary for adjoint FSI problems, the adjoint of the interpolation matrix (and therefore the cross terms) are not smooth which makes convergence more difficult. In version 6 this was achievable via the old options RELAXATION_FACTOR_FLOW/TURB.; - Adds OpenMP directives to the CFL adaptation routine (a ""todo"" from #861), restricts the Min/Max/Avg CFL calculation to the fine grid (which will change the output but not the solution). ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/950:681,adapt,adaptation,681,https://su2code.github.io,https://github.com/su2code/SU2/pull/950,1,['adapt'],['adaptation']
Energy Efficiency,"## Proposed Changes; Add further parallel regions in discrete adjoint computations. Changes in this PR also reduce the memory footprint of hybrid parallel AD, by avoiding that freed indices end up in tapes not used thereafter, and by aligning the serial and parallel parts between flow and mesh recording. ## Related Work; #1214. ## PR Checklist. - [X] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [X] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [X] I used the pre-commit hook to prevent dirty commits and used `pre-commit run --all` to format old commits.; - [x] I have added a test case that demonstrates my contribution, if necessary.; - [x] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2208:108,reduce,reduce,108,https://su2code.github.io,https://github.com/su2code/SU2/pull/2208,1,['reduce'],['reduce']
Energy Efficiency,"## Proposed Changes; Add the Kenway-Martins separation sensor for buffet-onset detection (see [doi.org/10.2514/1.J055172](https://doi.org/10.2514/1.J055172) for details). Config options include:. 1. BUFFET_MONITORING= YES will compute; a. The sensor value (between 0 and 1) on NS marker vertices, stored in CNSSolver as Buffet_Sensor; b. The integral of the sensor values normalized by reference area (percent of reference area over which separation occurs), stored in CNSSolver as Buffet_Metric (per-surface) and Total_Buffet_Metric; 2. BUFFET_K and BUFFET_LAMBDA specify the sharpness and offset of the Heaviside function used to compute the nodal sensor value; 3. Objective function option BUFFET, which uses the integrated metric as a cost function; . ## Related Work; N/A. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/614:55,sensor,sensor,55,https://su2code.github.io,https://github.com/su2code/SU2/pull/614,4,['sensor'],['sensor']
Energy Efficiency,"## Proposed Changes; Added `SelectZone` function to `CDriverBase` that dynamically sets the zone index; . ## Example Usage; ```python; import pysu2; from mpi4py import MPI. def execute_su2():; # Import mpi4py for parallel run; comm = MPI.COMM_WORLD; rank = comm.Get_rank(); num_zones = 2; # Initialize the corresponding driver of SU2, this includes solver preprocessing; SU2Driver = pysu2.CMultizoneDriver(config_path, num_zones, comm) # type: ignore. # Get all the markers defined on this rank and their associated indices.; allMarkerIDs = SU2Driver.GetMarkerIndices(). # Time loop is defined in Python so that we have acces to SU2 functionalities at each time step; comm.Barrier(). # Time iteration preprocessing; SU2Driver.Preprocess(0). # Run one time-step (static: one simulation); SU2Driver.Run(). # Update the solver for the next time iteration; SU2Driver.Update(). # Monitor the solver and output solution to file if required; SU2Driver.Monitor(0). for izone in range(num_zones):; SU2Driver.SelectZone(izone); # Get all the markers defined on this rank and their associated indices.; allMarkerIDs = SU2Driver.GetMarkerIndices(); print(allMarkerIDs). # Output the solution to file; SU2Driver.Output(0). # Finalize the solver and exit cleanly; SU2Driver.Finalize(); ```. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [X] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2019:875,Monitor,Monitor,875,https://su2code.github.io,https://github.com/su2code/SU2/pull/2019,2,['Monitor'],['Monitor']
Energy Efficiency,"## Proposed Changes; Adding support to use the external library libROM (https://github.com/LLNL/libROM) for reduced order modeling with SU2. libROM captures solution data and either computes the proper orthogonal decomposition (POD) over the data, or saves the solution ""snapshot"" in an hdf5 file for later POD computation. The POD matrix is also saved in an hdf5 file. ## Related Work; There are a couple projects using libROM:; - For projection-based model order reduction (PROM) in the branch feature_MOR; - It is also being used with the NEMO solver to further test the PROM capabilities; - libROM was used in a prior project that used the POD matrix as input to a neural network (to be published). - libROM also has other features, like help choosing the hyper-parameter nodes (a PROM step) and under development are black-box modeling methods like dynamic mode decomposition (DMD). Please let me know if you have any questions / comments / recommendations!. I have tested this on macOS and linux. . ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [X] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary. ## Steps to Compile:. 1. Compile libROM; 2. Compile SU2 with the following meson options:; `./meson.py build --prefix=/your/prefix -Denable-librom=true -Dlibrom_root=/path/to/libROM`; 3. You may need to add the environment variable:; `ex",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1310:108,reduce,reduced,108,https://su2code.github.io,https://github.com/su2code/SU2/pull/1310,1,['reduce'],['reduced']
Energy Efficiency,"## Proposed Changes; Adding the new solver NEMO to the develop branch. The NEMO solver concerns the simulation of hypersonic flows, accounting for thermal nonequilibrium and finite-rate chemistry, following Park's 2Temperature model. The system of equations to solve is the conservation of each chemical species mass, momentum, total energy and vibrational energy. Both inviscid and viscous simulations are available, respectively, solver NEMO_EULER and NEMO_NAVIER_STOKES. ## Related Work; This is a new solver, therefore is mostly new and independent work. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [ X ] I am submitting my contribution to the develop branch.; - [? ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags). I was not able to test this, since these commands do not seem to work with meson/ninja. . - [ X ] My contribution is commented and consistent with SU2 style.; - [ X ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1006:334,energy,energy,334,https://su2code.github.io,https://github.com/su2code/SU2/pull/1006,2,['energy'],['energy']
Energy Efficiency,"## Proposed Changes; Adding the new solver NEMO to the develop branch. The NEMO solver concerns the simulation of hypersonic flows, accounting for thermal nonequilibrium and finite-rate chemistry, following Park's 2Temperature model. The system of equations to solve is the conservation of each chemical species mass, momentum, total energy and vibrational energy. Both inviscid and viscous simulations are available, respectively, solver NEMO_EULER and NEMO_NAVIER_STOKES. Most of the changes consisted in the addition of new files (listed below), and all the necessary changes in the high-level classes (drivers, integration, config).; ; new files concerning this solver:; output/CNEMOCompOutput.cpp; variables/CNEMOEulerVariable.cpp; variables/CNEMONSVariable.cpp; solvers/CNEMOEulerSolver.cpp; solvers/CNEMONSSolver.cpp; numerics/NEMO/convection/lax.cpp; numerics/NEMO/convection/roe.cpp; numerics/NEMO/convection/ausm.cpp; numerics/NEMO/convection/ausmplusup2.cpp; numerics/NEMO/convection/ausmpwplus.cpp; numerics/NEMO/convection/msw.cpp; numerics/NEMO/NEMO_diffusion.cpp; numerics/NEMO/NEMO_sources.cpp. Future/ongoing work is looking into making use of the CFluidModel class , introducing a new child class CNEMOGas to handle all mixture/thermodynamics/transport/chemistry related computations - follwing the generic SU2 structure. ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [x] My contribution is commented and consistent w",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1014:334,energy,energy,334,https://su2code.github.io,https://github.com/su2code/SU2/pull/1014,2,['energy'],['energy']
Energy Efficiency,"## Proposed Changes; Changed the wall distance calculation to calculate the distance to the nearest element rather than calculating the distance to the nearest node. This significantly improves the performance of turbulence models for meshes where the mesh doesn't grow perpendicular to the wall. This pull request also contains a simple improvement to the AD recording in CADTElemClass::DetermineNearestElement that significantly reduces memory usage when running the Discrete Adjoint. . This will likely break any regression test that requires a wall distance calculation, i.e. any test that has a turbulence model. Is there a easy way of changing the regression test values that doesn't require manual changing of the values? . ## Related Work; NA. ## PR Checklist. - [ X ] I am submitting my contribution to the develop branch.; - [ X ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [ X ] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/604:431,reduce,reduces,431,https://su2code.github.io,https://github.com/su2code/SU2/pull/604,1,['reduce'],['reduces']
Energy Efficiency,"## Proposed Changes; Changed the wall distance calculation to calculate the distance to the nearest element rather than calculating the distance to the nearest node. This significantly improves the performance of turbulence models for meshes where the mesh doesn't grow perpendicular to the wall. This pull request also contains a simple improvement to the AD recording in CADTElemClass::DetermineNearestElement that significantly reduces memory usage when running the Discrete Adjoint. This will likely break any regression test that requires a wall distance calculation, i.e. any test that has a turbulence model. Is there a easy way of changing the regression test values that doesn't require manual changing of the values?. (I mistakenly submitted the previous PR to merge with master) . ## Related Work; NA. ## PR Checklist. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/605:431,reduce,reduces,431,https://su2code.github.io,https://github.com/su2code/SU2/pull/605,1,['reduce'],['reduces']
Energy Efficiency,"## Proposed Changes; Check for Nan in the monitored values of COutput (was already done for time domain).; For SU2_CFD_AD and SU2_DOT_AD the default MATH_PROBLEM becomes DISCRETE_ADJOINT; When the MATH_PROBLEM is DISCRETE_ADJOINT the linear solver and preconditioner of primal solvers is made the same as the DISCADJ_** ones, i.e. LINEAR_SOLVER and LINEAR_SOLVER_PREC are ignored (see why I think it makes sense in #942, and let me know if you think it doesn't make sense). ## Related Work; #942 . ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1105:42,monitor,monitored,42,https://su2code.github.io,https://github.com/su2code/SU2/pull/1105,1,['monitor'],['monitored']
Energy Efficiency,"## Proposed Changes; Compute Green-Gauss gradients and limiters via a point-loop (like we do for Least Squares), in the limit this allows one thread per point of parallelization. Parallel regions are started inside the functions and again only the master thread calls MPI routines. Move these routines out of CSolver and make them general to reduce code duplication (compressible/incompressible, solution/primitives), and to improve test-ability (if key areas of the code depend less on large objects we can more easily treat them as units). Introduce a way to create different limiters by defining small details like the limiter function (and its associated constants), or any geometry-based modification. I don't seem to have ""hard"" failures in the regressions but I need to run tests, especially for periodic cases as I had to change the ""communication model"" for the min / max computed for limiters.; I will start documenting anyway. ## Related Work; #789 #824 ; Depends on #830. ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/834:29,Green,Green-Gauss,29,https://su2code.github.io,https://github.com/su2code/SU2/pull/834,2,"['Green', 'reduce']","['Green-Gauss', 'reduce']"
Energy Efficiency,"## Proposed Changes; Dear all,. Here are some updates for the python fsi interface. Namely:. - Better use of mpi4py, using always numpy array (more computationally efficient); - Fix of the restarted coupled simulation; - Automatic use of default values, in case of wrong inputs; - Introduction of a sort of dry run, which actually prints out the mapped modes and the normals of the aerodynamic surface mesh. This is yet another step towards the automatic creation of ROM from aerodynamic response; - Fix of small bugs. ## PR Checklist. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [X] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1357:164,efficient,efficient,164,https://su2code.github.io,https://github.com/su2code/SU2/pull/1357,1,['efficient'],['efficient']
Energy Efficiency,"## Proposed Changes; Edge coloring tends to perform better than reductions for the hybrid parallel discrete adjoint because it uses less memory and enables the shared reading optimization. This PR puts two additional strategies in place for the discrete adjoint that help with obtaining a coloring before resorting to reductions, making successful coloring more likely. 1. If the requested edge color group size does not produce an efficient coloring, the maximum edge color group size that still produces an efficient coloring is chosen instead. This decision is made per rank.; 2. The discrete adjoint is allowed to use more colors. ## Related Work; work on hybrid parallel AD, like #2039. ## PR Checklist. - [X] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [X] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [X] I used the pre-commit hook to prevent dirty commits and used `pre-commit run --all` to format old commits.; - [x] I have added a test case that demonstrates my contribution, if necessary.; - [x] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2167:432,efficient,efficient,432,https://su2code.github.io,https://github.com/su2code/SU2/pull/2167,2,['efficient'],['efficient']
Energy Efficiency,"## Proposed Changes; Extend the Turbulence CFL reduction option, such that it can be used for adaptive CFL too. Turbulence cfl reduction was previously implemented only for a constant cfl, here the treatment is extended also for adaptive cfl. . ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [X] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [X] I used the pre-commit hook to prevent dirty commits and used `pre-commit run --all` to format old commits.; - [] I have added a test case that demonstrates my contribution, if necessary.; - [] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2295:94,adapt,adaptive,94,https://su2code.github.io,https://github.com/su2code/SU2/pull/2295,2,['adapt'],['adaptive']
Energy Efficiency,"## Proposed Changes; Following up on #583 this is a restructuring of the fiels related to the driver. In addition I rearranged preprocessing routines in the driver constructor. I added arguments to the calls to make it more clear what the dependencies are and what is allocated. Furthermore I merged all loops over zones and instances into a single loop. This should make it much more readable. . ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [x] I am submitting my contribution to the develop branch.; - [x] My contribution is commented and consistent with SU2 style.; - [x] I have added a test case that demonstrates my contribution, if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/736:268,allocate,allocated,268,https://su2code.github.io,https://github.com/su2code/SU2/pull/736,1,['allocate'],['allocated']
Energy Efficiency,"## Proposed Changes; Hi all,. In neither solver (incompressible and compressible) viscous fluxes are considered in the symmetry plane boundary condition. In both codes the BC_sym_plane links directly to Euler_Wall. . Compressible: A ""reflected state"" approach is done. Create a reflected halo node which enforces symmetry and compute the occurring flux just as in the interior. Problem: the primitive gradients are not adapted nor a viscous flux based on that is computed. Incompressible: Here a ""direct flux"" approach is chosen in Euler Wall. Insert the symmetry conditions directly in the FV derivation on the boundary part and thereby eliminate most terms. For the convective terms only a pressure contribution in the momentum equation remains. No Viscous terms are currently considered which is not correct for the momentum equation. . For both solvers I implemented a ""reflected state"" approach in C*Solver::BC_sym_plane as I didn't want to touch the Euler_wall implementations especially from the compressible solver. . I (informally) wrote a bit down as explanation in Latex how I did the derivation.; [Symmetry_BC.pdf](https://github.com/su2code/SU2/files/2891210/Symmetry_BC.pdf); Note that in the DG-FEM solver of @vdweide the same ""reflected state"" approach is implemented although it is not clear to me how the derivation was done there. See the bottom of the pdf for more info. I would be happy to get some insight here :). I also did a bit of testing with some cases and will showcase the differences between current develop and my implementation with pictures below. I attached two easy 2D cases (compr. & incompr. half cylinder) which you could quickly compare the current develop and this PR with.; [Sym_plane_testcases.gz](https://github.com/su2code/SU2/files/2891254/Sym_plane_testcases.gz); tar xzf Sym_plane_testcases.gz. 1. Compressible half cylinder, navier-stokes, no Turb-model, Pin has a solid wall, farfield around. You see pressure contour lines:; ![compr_half_cyl_p](https",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/657:419,adapt,adapted,419,https://su2code.github.io,https://github.com/su2code/SU2/pull/657,1,['adapt'],['adapted']
Energy Efficiency,"## Proposed Changes; Hi everyone,. I have been working on the implementation of the DDES formulations for the SST model, following the work in ""Development of DDES and IDDES Formulations for the k-ω Shear Stress Transport Model"" (DOI:10.1007/s10494-011-9378-4). The implementation is easy, whereas the validation may take some time. I am currently working on the backward facing step and I will work on the flatplate too. The choice of the validation test cases is key since the computational cost is quite large, thus if you have any suggestions that may speed up this part then feel free to write them down. . Implemented versions:; - SST-DDES; - SST-IDDES; - SST-SIDDES. I am also working on the Scale Adaptive Simulations (SAS) implementations for SST, following the work in ""ON URANS SOLUTIONS WITH LES-LIKE BEHAVIOUR"", Travis et al., and ""[Evaluation of scale-adaptive simulation for transonic cavity flows"", Babu et al., (https://www.inderscienceonline.com/doi/abs/10.1504/IJESMS.2016.075510). The last one, especially, is quite tricky due to the computation of the velocity laplacian. I tried computing it in Paraview as the divergence of the gradient field and it seems quite similar, but it is the first time that I've touched that section of the code, thus some work might still be needed. Implemented versions:; - SST-SAS_Simple (better naming is necessary), from the article of Travis et al.; - SST-SAS_Complicated (better naming is necessary), it is related to the article from Babu et al. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [X] My contribution is commented and consistent with SU2 style (https://su2",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2150:705,Adapt,Adaptive,705,https://su2code.github.io,https://github.com/su2code/SU2/pull/2150,2,"['Adapt', 'adapt']","['Adaptive', 'adaptive']"
Energy Efficiency,"## Proposed Changes; I have been implementing for SU2 the radial basis function mesh deformation method with the selection of the control points using a greedy algorithm and a volume reduction technique to reduce the computational cost. The method can be used inside the shape optimization framework when calling SU2_DEF, keeping the standard ELA differentiated by codipack for the mesh sensitivity. ; References:; Abergo, Luca, Myles Morelli, and Alberto Guardone. ""Aerodynamic Shape Optimization Based on Discrete Adjoint and RBF."" Journal of Computational Physics (2023): 111951. M. Morelli, T. Bellosta, A. Guardone, Efficient radial basis function mesh deformation methods for aircraft icing, J. Comput. Appl. Math. (2021) 113492,. ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [ ] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [ ] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1959:206,reduce,reduce,206,https://su2code.github.io,https://github.com/su2code/SU2/pull/1959,2,"['Efficient', 'reduce']","['Efficient', 'reduce']"
Energy Efficiency,"## Proposed Changes; I have found it useful to be able to adaptively change deltaT using the Python wrapper -- this PR implements that functionality. Instead of `CDriver::GetUnsteadyTimeStep` returning `CConfig::GetTime_Step`, it was updated to return the actual dimensional timestep used in iterations. A new `CDriver::SetUnsteadyTimeStep` function was implemented that updates both `Delta_UnstTimeND` and `Delta_UnstTime` in `CConfig`. A new setter function for `Delta_UnstTime` had to be implemented to do this as well. A quick grep showed me that the only usage of `CConfig::GetTime_Step` appears to be in SU2_SOL, initialization, and outputting in the NonDimTable. However, I did see one usage of it here, which appears to be called every iteration:. https://github.com/su2code/SU2/blob/2c9fbb6cfc0f9dfbb4a1f6afb9cf5004c33b1c25/SU2_CFD/src/integration/CFEM_DG_Integration.cpp#L75. I can update that line if necessary to instead call `CConfig::GetDelta_UnstTime`. I don't _believe_ that there are any additional issues that may be arisen beyond this. ## Related Work; N/A. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [X] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [ ] I used the pre-commit hook to prevent dirty commits and used `pre-commit run --all` to format old commits.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2190:58,adapt,adaptively,58,https://su2code.github.io,https://github.com/su2code/SU2/pull/2190,1,['adapt'],['adaptively']
Energy Efficiency,"## Proposed Changes; Implements some features that will be necessary to eventually replace the elasticity-based mesh deformation. Namely symmetry boundary condition and the use of the DEFORM_LIMIT option to limit how much of the domain is deformed. Reduces the discrete adjoint memory usage by disabling the recording of routines that are not relevant or differentiable. Cleans up some redundant MPI comms in CFEASolver and moves all of them to the methods of that solver (i.e. no more explicit MPI comms in structural integration / iteration). Makes the structural objective functions available as screen/history output under the name COMBO. Improves/fixes the incremental load approach when used for multizone problems. ## Related Work; #919 #594. ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/933:249,Reduce,Reduces,249,https://su2code.github.io,https://github.com/su2code/SU2/pull/933,1,['Reduce'],['Reduces']
Energy Efficiency,"## Proposed Changes; In a nutshell, we still solve a linear system to update the solution, but the approximate Jacobian is replaced by matrix-free products with the ""real"" Jacobian which are obtained by finite differences (each product requires the computation of the residual for a perturbed solution).; This linear system is much more ill-conditioned, and so in addition to the classical linear preconditioners, it is possible to use the traditional linear system as the preconditioner (you gotta love the kind of stuff SU2 lets you get away with sometimes).; This nesting makes each iteration potentially very expensive, it is crucial not to ""over solve"" the linear systems, and to use adaptive CFL to run always at the highest CFL possible. Notwithstanding the preconditioner madness, this also works for explicit solvers, but that may only be good enough for dual time methods with relatively small time steps. This seems to be good at converging problems that would otherwise not get past a limit cycle.; I do not expect it to be faster when that is not a problem. Some references:; https://arc.aiaa.org/doi/abs/10.2514/6.2021-0857; https://arc.aiaa.org/doi/10.2514/1.J052255. Example config for the RANS ONERA M6 in the repo: [turb_ONERAM6_nk.txt](https://github.com/su2code/SU2/files/5947580/turb_ONERAM6_nk.txt); It contains the explanation and recommendations for the different parameters. The initial idea was to couple all solvers (flow, turbulence, etc.) but that makes the problem even more ill-conditioned and so I took a step back (as that also makes the implementation simpler...).; The skeleton of the coupled iteration exists in commit c97221b6f7dfd315dfceb9f59f8928790c78e0ce and it was functional... if anyone wants to take it further, it's there. ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1183:689,adapt,adaptive,689,https://su2code.github.io,https://github.com/su2code/SU2/pull/1183,1,['adapt'],['adaptive']
Energy Efficiency,"## Proposed Changes; In order to structure the construction of the solvers a little bit and to remove the dependency of the driver on the solver, I created a static solver factory class. There are routines to create individual instances as well as the whole container. It should be much easier now to see what position in the containers are actually allocated for the different solvers. The `createSolver` routine is a generic one that simply calls `new`. The others have some additional checks or calls for the construction. The idea here was to remove any `if` statements in the `createSolverContainer` routine to ease readability. . If everybody agrees, we could use a similar structure for other classes as well. Let me know what you think. Note from TobiKattmann: This PR depends on #861 . ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [ ] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [ ] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/881:350,allocate,allocated,350,https://su2code.github.io,https://github.com/su2code/SU2/pull/881,1,['allocate'],['allocated']
Energy Efficiency,"## Proposed Changes; Not that anyone uses the scheme, but the sensors were missing (i.e. 0 dissipation everywhere all the time). ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is commented and consistent with SU2 style.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1052:62,sensor,sensors,62,https://su2code.github.io,https://github.com/su2code/SU2/pull/1052,1,['sensor'],['sensors']
Energy Efficiency,"## Proposed Changes; On a user-specified upstream half-plane, fix the values of turbulence quantities to their far-field values, instead of integrating the turbulence model equations. In the far-field flow, the production terms of SST for K and omega are zero, while destruction still takes place. Thus the turbulence quantities typically decay on their way from the far-field boundary to the airfoil, until they reach the `lowerlimit`. See for instance this turbulence kinetic energy plot on the NACA0012 mesh:; ![kk_sst_copr_TKE](https://user-images.githubusercontent.com/72806890/111277953-4f805380-8639-11eb-8d34-466e612aac4e.png). This has been presented in [1] together with two solution approaches:; - *Sustaining terms*, which are additional source terms compensating the destruction terms in the far-field flow. This approach has been already implemented with the `KIND_TURB_MODEL= SST_SUST` option.; ![kk_sst_copr_sust_TKE](https://user-images.githubusercontent.com/72806890/111278024-60c96000-8639-11eb-8b1b-f4e95a3f97ab.png); - *Floor values*, which is equivalent to set the `lowerlimit` to the far-field values in the upstream region of the airfoil.; This PR adds floor values, but in the form of *fixed values*: The turbulence quantities are just set to the far-field values in the upstream region. This has been implemented in analogy to the strong boundary conditions. The correction can be activated like this:. TURB_FIXED_VALUES= YES; TURB_FIXED_VALUES_DOMAIN= -1.0. The second parameter specifies the half-plane on which fixed values are applied. This half-plane consists of those points for which the dot product of their coordinate vector with the normalized far-field velocity vector is less than `TURB_FIXED_VALUES_DOMAIN`. . This is the turbulence kinetic energy with AoA=0° and 10°:; ![kk_sst_copr_floor_TKE](https://user-images.githubusercontent.com/72806890/111278035-63c45080-8639-11eb-8ae9-194a5a1ca5f8.png); ![kk_sst_copr_floor_aoa10_TKE](https://user-images.githubuserco",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1236:478,energy,energy,478,https://su2code.github.io,https://github.com/su2code/SU2/pull/1236,1,['energy'],['energy']
Energy Efficiency,"## Proposed Changes; Optimization of the Preprocessing phase;; Inclusion of the Chapmann-Enskog option for Mutation++. ## Related Work; None. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [ X ] I am submitting my contribution to the develop branch.; - [ X ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [ X ] My contribution is commented and consistent with SU2 style.; - [ X ] I have added a test case that demonstrates my contribution, if necessary.; - [ X ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary. ## Work Performed. I have reduced almost by half the time of the preprocessing phase, leading to a ~10% less time per iteration. This was done by:; * Calculate dPdU, dTdU, dTvedU only for the implicit case; * Avoid the calculation of eve_min and eve_max using Mutation++. Instead, return nonphysical if the vibrational temperatures reach the specified minimum and maximum value. Additionally, I have included the option of using Chapmann-Enskog for the calculation of transport equations and thermal conductivity using Mutation++",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1343:937,reduce,reduced,937,https://su2code.github.io,https://github.com/su2code/SU2/pull/1343,1,['reduce'],['reduced']
Energy Efficiency,"## Proposed Changes; Prior to this PR, tape statistics were collected and printed for the tape of thread 0 of rank 0, with special handling for the memory usage of thread 0, which was reduced across MPI processes. This PR extends this to also take OpenMP parallel parts into account (threads other than thread 0), and reduces everything (not only used memory) across MPI processes. ## Related Work; any prior work on hybrid AD. ## PR Checklist. - [X] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [X] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [X] I used the pre-commit hook to prevent dirty commits and used `pre-commit run --all` to format old commits.; - [x] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2235:184,reduce,reduced,184,https://su2code.github.io,https://github.com/su2code/SU2/pull/2235,2,['reduce'],"['reduced', 'reduces']"
Energy Efficiency,"## Proposed Changes; Reduce duplication and maybe make it a bit faster. We were reading the entire mesh file in four passes (open-close, open-close, ...) one for metadata (NDIME, NELEM, etc.) one for points, one for elements, and then one for markers.; Now we have a maximum of 2 (meta + reading) and if the points are listed before the elements we do it in 1 pass (there are some meshes like that in TestCases).; If we need to split actuator disk surfaces there are more passes, don't ask me how many because I'm not going to touch that function (it is probably not used often). We still do a lot of reading for single-file multizone meshes to get to each zone, and usually we put smaller meshes at the end right :sweat_smile: I won't get into that now. ## Related Work; #1345 . ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1361:21,Reduce,Reduce,21,https://su2code.github.io,https://github.com/su2code/SU2/pull/1361,1,['Reduce'],['Reduce']
Energy Efficiency,"## Proposed Changes; Similar to the quasi-Newton acceleration provided by `CQuasiNewtonInvLeastSquares`, the proposed toolbox class `CNewtonUpdateOnSubspace` performs a correction on adjoint solution updates by keeping track of past iterates. Here, they are used to identify eigenvectors with large eigenvalues which slow down the overall convergence and to form a (small) subspace basis from them. Each fixed-point solution update is then [projected onto that subspace and the projected part will be additionally corrected via a ""real"" Newton step (a.k.a. ""RPM"")](https://doi.org/10.1137/0730057) using the computational graph for precise derivative information. This preliminary result with one basis vector indicates that the procedure can be effective at very low additional cost (for n basis vectors, it mainly reduces to n scalar products of the current fixed-point iterate with the basis vectors, the Newton step is cheap as n is small). The residuals are obtained from a fully coupled adjoint CHT problem (2d heated cylinder in laminar flow) with a heatflux objective function. ![plot](https://user-images.githubusercontent.com/22639394/122736716-9ad18000-d280-11eb-9983-c2d47d434dc5.png). (Purple: No correction applied, Green/Blue: Usage of 1-dim. basis after extraction of one basis vector at around 500 iterations, Yellow: MPI run with two processes using the manual but MPI-compatible Gram-Schmidt-QR-decomposition for identification of basis vectors.); ; **The code is WIP.** It needs a lot of additions, changes and testing, though the overall structure should be clear from what's already implemented. ToDo's:; - Remove Eigen dependencies, not needed anymore; - Add a meaningful testcase; - Add eigenvalue estimation / QR criterion values to screen and history output fields; - Implement a basisMaintenance()-routine; - Figure out a proper base class for both `CQuasiNewtonInvLeastSquares` and `CNewtonUpdateOnSubspace`; - Figure out further algorithmic strategies for multiphysics pro",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1217:816,reduce,reduces,816,https://su2code.github.io,https://github.com/su2code/SU2/pull/1217,1,['reduce'],['reduces']
Energy Efficiency,"## Proposed Changes; The ```CLookUpTable``` class allows for the fast interpolation of unstructured 2D data. It was found that the query time of this class scaled significantly with the number of output variables, indicating inefficiencies in the query process.; ; These inefficiencies came from string comparison routines in the ```GetIndexOfVar``` function of the ```CLookUpTable``` class. By implementing overloaded instances of the look-up functions which retrieve data from data indices directly, the query time efficiency scaling was significantly improved. . Also reduced duplicate code within the ```CLookUpTable``` class. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [x] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [x] I used the pre-commit hook to prevent dirty commits and used `pre-commit run --all` to format old commits.; - [x] I have added a test case that demonstrates my contribution, if necessary.; - [x] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2214:571,reduce,reduced,571,https://su2code.github.io,https://github.com/su2code/SU2/pull/2214,1,['reduce'],['reduced']
Energy Efficiency,"## Proposed Changes; The conjugate heat variables were not communicated properly between the flow and flamelet solver, resulting in the interface temperature between the fluid and solid to be always maintained at 300 kelvin for flamelet simulations. The changes mainly regard the recognition of the inclusion of energy for flamelet problems for the CHT methods, while in the flamelet solver, the conjugate variables are obtained from the flow solver instead of the flamelet solver itself. ; . ## Related Work; Related work includes the pull requests regarding the flamelet solver, as well as the related regression tests. The latter were obtained with this bug included, so the solution files have to be updated and the residual values in the regression tests have to be updated. . ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [x] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [x] I have added a test case that demonstrates my contribution, if necessary.; - [x] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2067:312,energy,energy,312,https://su2code.github.io,https://github.com/su2code/SU2/pull/2067,1,['energy'],['energy']
Energy Efficiency,"## Proposed Changes; The following members of `CHeatSolver` were allocated but never freed: `Primitive_Flow_i`, `Primitive_Flow_j`, `HeatFlux_per_Marker`, `AverageT_per_Marker`, `Surface_Areas`, `ConjugateVar`. I propose to correct this in the spirit of #1225, using containers (`std::vector`) instead of pointers. There is a bit of additional cleanup. ## Related Work; #1225 . ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X ] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1256:65,allocate,allocated,65,https://su2code.github.io,https://github.com/su2code/SU2/pull/1256,1,['allocate'],['allocated']
Energy Efficiency,"## Proposed Changes; The hybrid parallel implementation uses grid coloring (edge and element) to avoid race conditions when building the residual vector and Jacobian matrix.; Depending on grid size, type, and ordering, it may be difficult to find a good coloring, i.e. providing locality and enough parallelism (all threads getting almost the same number of work chunks to work on per color). This PR extends the use of the ""reducer strategy"" to fine grids (introduced and described in #861 for coarse grids, which before #894 I thought would be the only problematic scenarios) as a fallback strategy that is automatically selected when the coloring efficiency (highlighted below) drops below a threshold value. The reducer strategy can be forced by setting EDGE_COLORING_GROUP_SIZE to 0 (for some cases it seems to give better performance, contrary to the initial assessment from #789).; For element loops (CFEASolver and CMeshSolver, modified in #843) an automatic fallback was also introduced, but using ""locks"" (explained below) as a ""reducer strategy"" would use too much memory, and element loops are more compute intensive (and therefore less affected by the overhead of using these locks). ## Related Work; Part of #789, namely:; Improves scaling of the work from #861 #843 (should help with #894); Fixes a bug from #830. ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/908:425,reduce,reducer,425,https://su2code.github.io,https://github.com/su2code/SU2/pull/908,3,['reduce'],['reducer']
Energy Efficiency,"## Proposed Changes; The implementation of the symmetry plane is incomplete. We follow here the book of Blazek, _Computational Fluid Dynamics: Principles and Applications_ . According to Blazek, (chapter 8.6) 4 conditions have to be met on a symmetry plane:. 1. No flux across the boundary; 2. $\overline n \cdot \nabla \phi = 0$ (gradient of scalars are zero); 3. $\overline n \cdot \nabla (\overline U \cdot \overline t) = 0$ (gradient of tangential velocity normal to boundary); 4. $\overline t \cdot \nabla (\overline U \cdot \overline n) = 0$ (gradient of normal velocity along the boundary). Points 2-4 all deal with gradients and can be dealt with in the gradient computation, i.e. Green-Gauss or Least Squares. According to Blazek, 2 approaches can be followed. ""One possibility is to construct the missing half of the control volume by mirroring the grid on the boundary. The fluxes and gradients are then evaluated like in the interior using reflected flow variables."" This approach can be implemented in an easy way when computing the Green-Gauss gradients. In SU2, routines are already in place that deal with GG gradients on boundaries. Here, we just have to identify the symmetry planes and mirror the flux through the faces. ; Blazek continues: ""The second methodology computes the fluxes for the halved control volume (but not accross the boundary). The components of **the residual normal to the symmetry plane** are then zeroed out. It is also necessary to correct normal vectors of those faces of the control volume, which touch the boundary. The modification consists of removing all components of the face vector, which are normal to the symmetry plane. The gradients also have to be corrected according to Eq. (8.40) [points 2,3,4 above]"". 1. Modify Green-Gauss and Least-Squares gradient computation for symmetry planes; -> This seems to work fine; 2. Fix normal components of edges connected to symmetry plane; -> This seems to work fine; 3. Fix residual components of velocity",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2194:689,Green,Green-Gauss,689,https://su2code.github.io,https://github.com/su2code/SU2/pull/2194,1,['Green'],['Green-Gauss']
Energy Efficiency,"## Proposed Changes; There was a bug in the CTurbSolver::ComputeUnderRelaxation() that would return a negative UR if the change in solution was too negative (less than the allowable decrease), which could cause the solution to head in the wrong direction. I'm not really sure why the turbulent solver version of this function was written differently than the flow solver (maybe the intention was to have a different allowable increase and decrease but they ended up being the same in the end?), but I changed it to make it consistent with the flow solver version. Also, as I mentioned in #1036, the UR parameters for the flow solver and turbulent solver both took the min of each other and were never reset for steady, meaning it was non-increasing. While on the topic of UR, I was wondering what the community's thoughts are on changing the SST models to use UR instead of solution clipping. The limits seem somewhat arbitrary to me (is there a ref?), and the tests I've done on my mesh adaptation cases have performed well where I've replaced clipping with UR. I realize this is a very limited dataset so if anyone has any strong opinions of why we should be clipping, let me know. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1057:988,adapt,adaptation,988,https://su2code.github.io,https://github.com/su2code/SU2/pull/1057,1,['adapt'],['adaptation']
Energy Efficiency,"## Proposed Changes; This PR adds the [Piperno slope limiter](http://citeseerx.ist.psu.edu/viewdoc/download;jsessionid=71E315A30221171183B3425C51A4A33B?doi=10.1.1.493.3132&rep=rep1&type=pdf) and introduces a parameter to control the relative upwind vs central differencing in the MUSCL scheme:; <img width=""359"" alt=""Screen Shot 2020-07-17 at 11 35 28 AM"" src=""https://user-images.githubusercontent.com/19416354/87819813-b981f800-c821-11ea-85b9-c9427e7b5378.png"">; where ; - X=0 gives the original unstructured formulation for second-order variable extrapolation (default); - X=-1 gives second-order fully-upwinded MUSCL-type variable extrapolation; - X=1/2 gives third-order variable extrapolation to the cell face; - X=1/3 gives a third-order approximation to the derivative at the node (the value used in the Piperno limiter to achieve 4th order dissipation). The reasons for these additions are; - The Piperno limiter is implemented in Inria's Wolf solver and seems to be used in a lot of their mesh adaptation work (see these references for [Euler](https://hal.inria.fr/hal-02378738v2/document) and [RANS](https://hal.inria.fr/tel-01962318/file/these_archivage_3570223.pdf)); - Some preliminary tests with the Piperno limiter have converged solutions on triangulated BL meshes that @jayantmukho and I couldn't get to converge with other limiters in SU2 (e.g. triangulated DSMA661 meshes from TMR); - The MUSCL parameter exists in other solvers (FUN3D, CFL3D, Wolf) and is used by the NASA codes for many of the TMR cases (e.g. CFL3D uses 1/3 and FUN3D uses 1/2 for the DSMA661 case). Further testing still needs to be done on the effect of the MUSCL parameter with other limiters, but leaving the value as default won't affect any of the test cases. ## Relevant config parameters; Piperno limiter:; ```; SLOPE_LIMITER_FLOW= PIPERNO; ```; MUSCL parameter:; ```; % Parameter to control upwinding in MUSCL extrapolation; % Kappa = 1/3 for Piperno limiter, Default = 0 otherwise; MUSCL_KAPPA= 0.0; ``",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1050:1004,adapt,adaptation,1004,https://su2code.github.io,https://github.com/su2code/SU2/pull/1050,1,['adapt'],['adaptation']
Energy Efficiency,"## Proposed Changes; This PR breaks up the following files:; 1. grid_movement_structure; 2. adt_structure. It also gets rid of grid_adaptation_structure and the entire SU2_MSH module. These files have not be updated in a long time are are deprecated. None of the new work in mesh adaptation by @bmunguia uses any of these routines. . ## Related Work; #583 . ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1035:280,adapt,adaptation,280,https://su2code.github.io,https://github.com/su2code/SU2/pull/1035,1,['adapt'],['adaptation']
Energy Efficiency,"## Proposed Changes; This PR contains fixes for two memory issues. - The first issue regards AD builds. The reinterpret cast of the dynamically allocated char array to an `su2double` array prevents `su2double` default constructor calls. In that case, the memory must be zero initialized in order for the AD index management to work correctly.; - Regarding the second issue, invalid reads occur when the pointers to the local arrays are used later in `CConfig::SetDefaults()` when the arrays are already out of scope. ## PR Checklist. - [X] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [ ] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1077:144,allocate,allocated,144,https://su2code.github.io,https://github.com/su2code/SU2/pull/1077,1,['allocate'],['allocated']
Energy Efficiency,"## Proposed Changes; This PR fixes a couple issues in the nonlinear adaptive CFL scheme. - Convergence of the linear solver was assumed if the residual was greater than 0.5, which is quite large. I replaced this with the linear solver tolerance.; - The sum of nonlinear residuals was never computed for steady since `TimeIter` was used.; - The under-relaxation parameters for the flow solver and turbulent solver both took the min of each other and were never reset for steady, meaning it was non-increasing. @jayantmukho and I wanted to discuss more possible improvements to the scheme. I wanted to open this up before making any actual changes. - Currently there is a check for stalling residuals (the sum over 100 iterations of delta_Res must be > 0.1 Res), but this doesn't protect against increasing residuals. We should implement another check to prevent divergence.; - Instead of computing a single local CFL for flow/turbulence with a reduction factor for turbulence, maybe it would be better to have both solvers make their own call to `AdaptCFLNumber` and compute their own local CFL based on their own ResRMS. I feel like this would make more sense since the solvers are decoupled anyway. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1036:68,adapt,adaptive,68,https://su2code.github.io,https://github.com/su2code/SU2/pull/1036,2,"['Adapt', 'adapt']","['AdaptCFLNumber', 'adaptive']"
Energy Efficiency,"## Proposed Changes; This PR fixes a couple of bugs I found recently. I also adapted the config preprocessing output to reflect the new output and convergence criteria options. . Furthermore it fixes the artifacts mentioned by @TobiKattmann in #774 regarding the Heatflux sensitivity. . Feel free to add any other fixes that you might came across. ## Related Work. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [x] My contribution is commented and consistent with SU2 style.; - [] I have added a test case that demonstrates my contribution, if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/798:77,adapt,adapted,77,https://su2code.github.io,https://github.com/su2code/SU2/pull/798,1,['adapt'],['adapted']
Energy Efficiency,"## Proposed Changes; This PR incorporates a P1 solver for Radiative Heat Transfer to SU2. The P1 model is a popular 1-equation model to solve the infinite-dimensional Radiative Heat Equation (RHE) that works under the assumption that the energy distribution is linearly isotropic (1). The implementation is general and thought to allow further extension of the radiation solvers in SU2, e.g., to discrete ordinates or partial moment approximations. The solution method is staggered and works in a very similar way to the turbulence models in SU2. . (1) Frank, M., _et al._ (2006), Partial moment entropy approximation to radiative heat transfer. _Journal of Computational Physics 218(1), 1–18._ DOI: [10.1016/j.jcp.2006.01.038](https://doi.org/10.1016/j.jcp.2006.01.038). ## Related Work; - I'm preparing some tutorials at the moment that I hope to have finalised by the time of the release of 7.0.2. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [x] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/872:238,energy,energy,238,https://su2code.github.io,https://github.com/su2code/SU2/pull/872,1,['energy'],['energy']
Energy Efficiency,"## Proposed Changes; This PR introduces the discrete adjoint counterpart for the multizone driver. It also comes with some heat solver-related additions for the new input/output structure as CHT (conjugate heat transfer) cases are the primary application so far. The new driver adapts many of the well-known routines for registering variables, recording, initializing and extracting adjoints. The main difference is the handling of multiple zones. . The adjoint (fixed point-) iteration approach in `CDiscAdjMultizoneDriver` is to initialize them per-zone in an outer loop and to extract adjoints with respect to _dependent variables from all zones_, thereby inherently capturing the cross dependencies.; Multiple successive evaluations of adjoints with respect to the same zone (equivalent to inner iterations in the multizone driver) are possible.; ; In order not to have to re-record a tape in the (outer) zone-loop as it can be quite costly, this branch includes some new functionalities in the underlying AD-structure which make it possible to record a ""full"" tape that holds all derivative information and that can be accessed flexibly for different input and output variables across zones.; This also overcomes the restriction that adjoints have to be evaluated in the same order as their variables had been registered.; ; This is the first version of the driver and my intention is to continue contributing to it in terms of both performance and coverage of different kinds of physical couplings in SU2. ## PR Checklist; A regression test for a heated cylinder array with conjugate heat transfer is added to `TestCases/coupled_cht/disc_adj_incomp_2d`. The very same case is used in a tutorial showcasing the new driver and CHT sensitivity analysis, see [Heated cylinders test case](https://github.com/su2code/su2code.github.io/pull/14). I'll check carefully for compiler warnings during test phase. - [x] I am submitting my contribution to the develop branch.; - [ ] My contribution generates ",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/774:278,adapt,adapts,278,https://su2code.github.io,https://github.com/su2code/SU2/pull/774,1,['adapt'],['adapts']
Energy Efficiency,"## Proposed Changes; This PR is a preparatory step to reintegrate all the turbo-machinery features with the current develop.; In this first step, I have restructured the single-zone turbomachinery problem to run using both the SingleZoneDriver and the FluidIteration. ; The Next steps will be . - [x] Adapt the turbomachinery output with the new Output structure. ; - [ ] Fix the Multizone steady turbomachinery problem to run with the MultizoneDriver.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/866:301,Adapt,Adapt,301,https://su2code.github.io,https://github.com/su2code/SU2/pull/866,1,['Adapt'],['Adapt']
Energy Efficiency,"## Proposed Changes; This a initial merge to begin incorporating some modification to the sliding mesh interface which we are planning to improve in the next future. ## Related Work; Mostly performance improvements in the creation of the super mesh for the Weighted Average sliding mesh approach.; ADT is now used to initialize the supermesh construction. Some portions of the code were re-implemented using a smarter algorithm which reduces the code length. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [ x] I am submitting my contribution to the develop branch.; - [ x] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [ x] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [x ] I used the pre-commit hook to prevent dirty commits and used `pre-commit run --all` to format old commits.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2334:434,reduce,reduces,434,https://su2code.github.io,https://github.com/su2code/SU2/pull/2334,1,['reduce'],['reduces']
Energy Efficiency,"## Proposed Changes; This a initial merge to begin incorporating some modification to the sliding mesh interface which we are planning to improve in the next future. . ## Related Work; Mostly performance improvements in the creation of the super mesh for the Weighted Average sliding mesh approach.; ADT is now used to initialize the supermesh construction. Some portions of the code were re-implemented using a smarter algorithm which reduces the code length. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X ] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [X] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [X] I used the pre-commit hook to prevent dirty commits and used `pre-commit run --all` to format old commits.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2332:436,reduce,reduces,436,https://su2code.github.io,https://github.com/su2code/SU2/pull/2332,1,['reduce'],['reduces']
Energy Efficiency,"## Proposed Changes; This adds/extends the turbulence solver for NEMO. As of right now, there is a lot of repeated code. ; Much testing is still needed, but the base structure is here. I hoping to get some early comments, and ideas of how to reduces the code repetition. ## Related Work; Other feature developments in NEMO, as PR #1356 and PR #1383 . ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1385:242,reduce,reduces,242,https://su2code.github.io,https://github.com/su2code/SU2/pull/1385,1,['reduce'],['reduces']
Energy Efficiency,"## Proposed Changes; This draft PR aims to generalize and template the turbulence solver/ scalar solvers to reduce code duplication and allow NEMO access to the turbulence solvers. The ideas were discussed with @pcarruscag, @TobiKattmann and @suargi, ; I am opening up the draft PR very early, so this is very much a work in process. The main idea is use templates to introduce differing variable index values into the Scalar/Turb solvers. ## Related Work; This idea follows PR #1375 and PR #1330. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1392:108,reduce,reduce,108,https://su2code.github.io,https://github.com/su2code/SU2/pull/1392,1,['reduce'],['reduce']
Energy Efficiency,"## Proposed Changes; This feature allows for computationally efficient through-flow computations for turbomachinery applications in the form of body-force modeling. The body-force model (BFM) generates density, momentum and energy source terms which turn the flow according to the local flow conditions and blade geometry. The blade geometry is defined through the camberline and blade thickness parameters, which are interpolated onto the mesh nodes prior to the solution process. ; Two BFM formulations are currently implemented: Hall (2015) and Thollet (2017). The code is up-to-date with ""develop"", version 7.1.1. ; Upcoming milestones will be MPI integration and coupling with adjoint. The latter will allow for computationally efficient design workflows of turbomachinery components. This will be especially useful for distortion-tolerant machines, as the design variable count and computational requirements are significantly higher than for machines experiencing uniform inflow. ; . ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1348:61,efficient,efficient,61,https://su2code.github.io,https://github.com/su2code/SU2/pull/1348,3,"['efficient', 'energy']","['efficient', 'energy']"
Energy Efficiency,"## Proposed Changes; This is a preparation for the upcoming release 7 ""Blackbird"". The schedule is planned like this:. - **08/27**: Pull request opening window ends. PRs with **new features** opened after this date will not be considered for v7.0.0.; - **09/01 - 09/29**: Testing phase. Only PRs with **bugfixes** and remaining PRs opened before **08/27** will be merged during that phase. ; - **09/30**: Release date. Note that we will have a stricter policy for new features for this release: Features with no documentation or tutorial(s) will not be advertised. Please also remember to prepare for #724. . If you have any questions, please let me know. Also if you can offer any help with testing/updating documentation. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [x] My contribution is commented and consistent with SU2 style.; - [x] I have added a test case that demonstrates my contribution, if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/762:87,schedul,schedule,87,https://su2code.github.io,https://github.com/su2code/SU2/pull/762,1,['schedul'],['schedule']
Energy Efficiency,"## Proposed Changes; This is the continuation to #650, so please compare these changes to the ones therein. The linear systems solved in the discrete adjoint are now in passivedouble which speeds the discrete adjoint by a factor of about 1.5 (less for low CFL, more for stiff Jacobians like those in structural FEM). This is possible because we only carry the derivatives of the residual. I tried to keep the design simple. CSysSolve and all related classes (vector, matrix, preconditioner, and matrix-vector product) have a single template parameter, the data type (which can be passivedouble or su2double). There are no provisions for ""mixed"" arithmetic, except in CSysSolve where through ::Solve (and only through ::Solve) one can ask for the solution of a system with passive Jacobian and active RHS and solution (this is possible at the expense of temporaries that are allocated only once). Passive-Passive and Active-Active work without temporaries and Active-Passive is not supported as it does not make sense (see end of previous paragraph). This is to keep the need for template specialization to a minimum. Wherever mixing types was necessary small helper methods were defined to provide the compatibility instead of specializing larger methods, I think this keeps the code readable. The place where passive and active types mix the most is CSysMatrix. This happens because the blocks are prepared by the numerics in **su2double and are then ""Set"", ""Add"", or ""Subtract"", on a CSysMatrix<passivedouble>. The solution was to inline those routines and template them also for the data type of the block (or diagonal). I only tested on one fluid adjoint and one FSI adjoint case (fingers cross not to fail too many tests). ## Related Work; #594 Does not help with memory much but helps with speed.; #648 Makes it easier to interface with an external solver and still work with the discrete adjoint.; #650 Builds on top of what is proposed there.; #543 These MKL optimizations will now be possible",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/653:874,allocate,allocated,874,https://su2code.github.io,https://github.com/su2code/SU2/pull/653,1,['allocate'],['allocated']
Energy Efficiency,"## Proposed Changes; This makes the routines InitiateComms and CompleteComms (and periodic counterparts) safe to call in parallel, until now they had to be guarded inside SU2_OMP_MASTER sections.; The calls to MPI are still only made by the master thread (funneled communication) but the buffers are packed and unpacked by all threads.; I also made a slight change which seems to make communications more efficient, we were always communicating the entire buffer, which is sized for the maximum number of variables per point, because the data was packed like this:; `o o o o _ _ _ _ o o o o _ ...` (count = 4, maxCount = 8);; I changed it to:; `o o o o o o o o ... _ _ _ _ ...`; Which allows only part of the buffer to be communicated.; (The maximum size `nPrimVarGrad*nDim*2` is actually quite large compared to the median `nVar`). In the process I also had to make a few more CGeometry routines thread safe. ## Related Work; #789; Resolves #1011. ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is commented and consistent with SU2 style.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1009:405,efficient,efficient,405,https://su2code.github.io,https://github.com/su2code/SU2/pull/1009,1,['efficient'],['efficient']
Energy Efficiency,"## Proposed Changes; This one's really small, but when running valgrind on some of my adaptation runs, I noticed that a lot of memory was being leaked due to not deleting direct_iteration and direct_output in CDiscAdjSinglezoneDriver.; ; ## Related Work; None that I'm aware of after a cursory look through PRs. ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/929:86,adapt,adaptation,86,https://su2code.github.io,https://github.com/su2code/SU2/pull/929,1,['adapt'],['adaptation']
Energy Efficiency,"## Proposed Changes; This project aims to couple the free and open-source thermodynamics library CoolProp with SU2. There are **two advantages:**. 1. More accurate numerical results. ; CoolProp can provide accurate thermodynamics properties (P, T, rho, ect) of commone fluids by either extracting experiment data from published papers, or computing based on the state-of-the-art Helmholtz energy formulations. ; So, thermodynamics properties obtained from CoolProp should be more accurate than those obtained from Van der Waals or peng robinson gas model embedded in SU2. Also, the numerical results should be more accurate.; 2. More user-friendly; To use CoolProp feature, the ony input from the user is the name of fluid. Then all other thermodynamics can be provided by CoolProp.; %FLUID_MODEL = COOLPROP; %FLUID_NAME = nitrogen; ; ## Related Work; This project references the following work:; 1.the work of coupling 'Mutationpp' with SU2.; 4. the pull request of 'Feature nppr gas #1718'. ## PR Checklist. - [ ] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings.; - [ ] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [ ] Simulations with the following test fluids succeed: nitrogen, oxygen, carbon dioxide, MM.; - [ ] Currently, this new feature is applied for only Euler flow. For viscous flow, further work need to be done, including viscosity, conductivity from CoolProp. ; - [ ] CoolProp does not support non-dimension.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1782:389,energy,energy,389,https://su2code.github.io,https://github.com/su2code/SU2/pull/1782,1,['energy'],['energy']
Energy Efficiency,"## Proposed Changes; This project aims to couple the free and open-source thermodynamics library CoolProp with SU2. There are **two advantages:**. 1. More accurate numerical results. ; CoolProp can provide accurate thermodynamics properties (P, T, rho, ect) of commone fluids by either extracting experiment data from published papers, or computing based on the state-of-the-art Helmholtz energy formulations. ; So, thermodynamics properties obtained from CoolProp should be more accurate than those obtained from Van der Waals or peng robinson gas model embedded in SU2. Also, the numerical results should be more accurate.; 2. More user-friendly; To use CoolProp feature, the ony input from the user is the name of fluid. Then all other thermodynamics can be provided by CoolProp.; %FLUID_MODEL = COOLPROP; %FLUID_NAME = nitrogen; ; ## Related Work; This project references the following work:; 1.the work of coupling 'Mutationpp' with SU2.; 4. the pull request of 'Feature nppr gas #1718'. ## PR Checklist. - [x] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings.; - [x] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [x] Simulations with the following test fluids succeed: nitrogen, oxygen, carbon dioxide, MM.; - [x] Currently, this new feature is applied for only Euler flow. For viscous flow, further work need to be done, including viscosity, conductivity from CoolProp. ; - [ ] CoolProp does not support non-dimension.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1806:389,energy,energy,389,https://su2code.github.io,https://github.com/su2code/SU2/pull/1806,2,['energy'],['energy']
Energy Efficiency,"## Proposed Changes; This removes some leftovers from when we deprecated the mesh adaptation.; I had a look at the ""adap"" branches and it seems that the new interface has completely new scripts and these are not needed, @bmunguia correct me if I am wrong. ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1153:82,adapt,adaptation,82,https://su2code.github.io,https://github.com/su2code/SU2/pull/1153,1,['adapt'],['adaptation']
Energy Efficiency,"## Proposed Changes; This temporarily disables the compilation of TecIO in travis to reduce the overall runtime of the jobs. We are not checking the tecplot binary output anyway at the moment.; . ## Related Work; -. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [x] My contribution is commented and consistent with SU2 style.; - [] I have added a test case that demonstrates my contribution, if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/611:85,reduce,reduce,85,https://su2code.github.io,https://github.com/su2code/SU2/pull/611,1,['reduce'],['reduce']
Energy Efficiency,"## Proposed Changes; To improve robustness of the SU2 code, specifically when using the SST (1994/2003) model, we would like to suggest a slight modification to the lower limits of the turbulent kinetic energy (TKE) and the specific turbulent dissipation rate (Omega). Presently, the lower limits are given as follows:; TKE_LoweLimit = 1E-10; Omega_LowerLimit = 1E-4. Estimating if these lower limits are sufficiently low is very difficult.; They may be too high. This is certainly the case whether one runs in a dimensional or non-dimensional mode. It may be sufficiently low for one mode but marginally low for the second mode. Therefore, we suggest clipping the solution relative to the TKE and Omega freestream values such that:. TKE_LowerLimit = C_k * TKE_infinity; Omega _LowerLimit = C_w * Omega_infinity. Where C_k and C_w are constants. . The control over these constants is given to the user, However based on our 20 years of experience with the k-w models, Omega will not drop below 1E-3 * Omega_infinity (converged solution). However, in the process of convergence, it may reach lower values. Therefore, a value of . C_w = 1E-6. is reasonable. The solution of TKE is not very sensitive to C_K (assume it is sufficiently low). We recommended:. C_K = 1E-20. setting these as default values. . ## Related Work; Results of the change on convergence of VFE2 test case are presented. Two configurations of CFL adaptation were tested on both the original and modified lower limit code, ; 1. CFL_ADAPT_PARAM= ( 0.99, 1.005, 5.0, 50.0, 0.0001 ) named max CFL 50 ; 2. CFL_ADAPT_PARAM= ( 0.99, 1.05, 5.0, 200.0, 0.0001 ) named max CFL 200. ![rms Rho](https://github.com/su2code/SU2/assets/139676851/6481464c-6da3-4565-8415-d19d9ea211ab). ![rms k](https://github.com/su2code/SU2/assets/139676851/e1582ea2-f77e-4814-9eda-dd41c006aabf). we point out that beyond the change in maximum CFL, also the acceleration rate is changed. . Beyond adding robustness allowing the the use of a CFL of 200 which diver",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2323:203,energy,energy,203,https://su2code.github.io,https://github.com/su2code/SU2/pull/2323,1,['energy'],['energy']
Energy Efficiency,"## Proposed Changes; With steady computations, the pywrapper call to `SU2Driver.Run()` will run it for the number of iterations in the config file. The first change this PR makes is that a call to `SU2Driver.Preprocess(nIter)` will overwrite the number of inner iterations when the case is not time dependent. We can now do `SU2Driver.Run()` for a single iteration by setting `SU2Driver.Preprocess(1)`. A call to `SU2Driver.Monitor(Iter)` will check the stopping criteria, including the maximum number of iterations. When you have set this to 1 using `SU2Driver.Preprocess(1)`, a call to `SU2Driver.Monitor(0)` will still stop the calculations because we are checking if (iter+1)>=nIter. The second change is that we now check if (iter >= nIter). I also change this behavior for time dependent problems to make this behavior consistent. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [x] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1960:424,Monitor,Monitor,424,https://su2code.github.io,https://github.com/su2code/SU2/pull/1960,2,['Monitor'],['Monitor']
Energy Efficiency,"## Proposed Changes; ```; CVariable -> CFlowVariable -> CEulerVariable -> CNSVariable; ```; **Likewise for incompressible and NEMO.**. **CFlowVariable** stores, allocates, and gives access to, primitives, their gradients and limiters, and a few other odd things.; For now this is just cleanup but it can be used to give non-virtual access to these flow variables to other solvers.; For example, the scalar solver #1330 can static_cast or dynamic_cast the nodes of the flow solver to access some quantities more efficiently.; I'll leave that for after #1330 is merged. ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1375:161,allocate,allocates,161,https://su2code.github.io,https://github.com/su2code/SU2/pull/1375,2,"['allocate', 'efficient']","['allocates', 'efficiently']"
Energy Efficiency,"## Scope; Elasticity problems can be quite demanding linear solver wise as your typical case will have very few Dirichlet boundaries.; Common iterative methods can only go so far, and pseudo time strategies to improve conditioning do not work as well as for fluid problems due to the elliptic nature of the equations.; Scalability is also an issue since most preconditioners get weaker as the problem gets partitioned.; Direct sparse solvers handle these problems just fine, so life is good again, until you run out of RAM that is (which only ever happens in 3D). Time complexity is about O(N^2) and storage O(N^1.5). ## Proposed Changes; Wrapper class for Inria's direct sparse solver [PaStiX](http://pastix.gforge.inria.fr/files/README-txt.html).; Why this solver? Because it is open source, has active development in advanced features like GPU support and compression techniques to reduce memory footprint, and from my experience it is really robust. ## Implementation; As this feature benefits mostly the FSI people (@rsanfer, @cvencro, and me) I tried to keep it as standalone as possible.; The core implementation is in separate files and nothing needs to change in CSysMatrix for this to work. ## Usage; Available factorizations:; - LDLT; - LU; - ILU(k). The ILU is different from the one we have in that it is computed for the entire matrix and not just for the local matrices (i.e. it considers halos), it is not very fast though.; The three factorizations can be used as preconditioners via options PASTIX_ILU, PASTIX_LU, and PASTIX_LDLT. And the first two as solvers via options PASTIX_LU and PASTIX_LDLT (in which case you should use a preconditioner type that does not cause CSysMatrix to allocate extra memory (LU_SGS).; The reason LDLT and LU can also be used as preconditioners is that it is possible to set a factorization frequency (via PASTIX_FACTORIZATION_FREQUENCY) so that the factorizations are only computed every N iterations or only on the first call (frequency set to 0), th",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/771:885,reduce,reduce,885,https://su2code.github.io,https://github.com/su2code/SU2/pull/771,1,['reduce'],['reduce']
Energy Efficiency,"## Steps to reproduce the underlying issue. Compile SU2 with Clang and `-fsanitize=address` (and possibly `-fno-omit-frame-pointer`), and run the testcases as usual. AddressSanitizer warnings appear in the output (if any). So far, only the tests in serial_regression.py have been analyzed. ## Proposed Changes. Depending on the context of the memory leak, ; - add `delete` / `delete[]` statement; - turn `new`-allocated arrays into `std::vector`s, or; - for one bug caused by a `delete` to a base class pointer, make its destructor `virtual`. . ## Related Work. #2211 and #2213 have been detected in the same way, but I'm not sure how to properly fix them. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [ ] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [x] I used the pre-commit hook to prevent dirty commits and used `pre-commit run --all` to format old commits.; - [not necessary] I have added a test case that demonstrates my contribution, if necessary.; - [not necessary] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2212:410,allocate,allocated,410,https://su2code.github.io,https://github.com/su2code/SU2/pull/2212,1,['allocate'],['allocated']
Energy Efficiency,"### Discussed in https://github.com/su2code/SU2/discussions/1877. <div type='discussions-op-text'>. <sup>Originally posted by **ChristianBauerEng** January 5, 2023</sup>; I would like to monitor the average fluid temperatures in parts of the domain volume. For example here i the part marked red.; ![grafik](https://user-images.githubusercontent.com/42602495/210860583-4e521476-096e-454c-9824-33de652b8e40.png); </div>. In the discussion it became clear, that surface-averages and integrals are supported by means of specifying an MARKER_INTERNAL in the mesh. Could it be possible to extend this functionality to support also volume-elements for MARKER_INTERNAL?. Which code changes would be required to make this happen?. Kind regards,. Christian",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1894:187,monitor,monitor,187,https://su2code.github.io,https://github.com/su2code/SU2/issues/1894,1,['monitor'],['monitor']
Energy Efficiency,") = min(limiter(jPoint,iVar), lim_j[iVar]);; }; }. #pragma omp parallel for schedule(dynamic,TARGET_CHUNK_SIZE); for(size_t iPoint=0; iPoint<nPoint; ++iPoint); {; #pragma omp simd; for(size_t iVar=0; iVar<nVar; ++iVar); {; double lim = limiter(iPoint,iVar);; limiter(iPoint,iVar) = lim*(lim+2)/(lim*lim+lim+2);; }; }; }; ```; Again to keep things short here is the parallel and SIMD point-loop version (like for gradients it is very similar to the scalar and sequential version).; ```C++; void computeLimiters(size_t nPoint,; size_t nVar,; size_t nDim,; const Adjacency<4>& adj,; const Matrix& coords,; const Matrix& phi,; const VectorOfMatrix& grad,; Matrix& limiter); {; const size_t SIMDLEN = 4;; using FltVec = Array<double,SIMDLEN>;. // working variables; FltVec phiMax[MAXNVAR], phiMin[MAXNVAR], prjMax[MAXNVAR], prjMin[MAXNVAR];. const double eps = numeric_limits<double>::epsilon();. #pragma omp parallel for schedule(dynamic,128) private(phiMax,phiMin,prjMax,prjMin); for(size_t iPoint=0; iPoint<nPoint; iPoint+=SIMDLEN); {; for(size_t iVar=0; iVar<nVar; ++iVar); {; phiMin[iVar] = phiMax[iVar] = phi.getVec(iPoint,iVar);; prjMax[iVar] = eps;; prjMin[iVar] = -eps;; }. for(size_t iNeigh=0; iNeigh<adj.nNeighbor(iPoint); ++iNeigh); {; auto jPoint = adj.jPoint_vec(iPoint,iNeigh);. FltVec d_ij[3] = {FltVec(0.0), FltVec(0.0), FltVec(0.0)};. for(size_t iDim=0; iDim<nDim; ++iDim); d_ij[iDim] = (coords.getVec(jPoint,iDim)-; coords.getVec(iPoint,iDim))*0.5;. for(size_t iVar=0; iVar<nVar; ++iVar); {; FltVec prj = 0.0;. for(size_t iDim=0; iDim<nDim; ++iDim); prj += d_ij[iDim]*grad.getVec(iPoint,iVar,iDim);. prjMax[iVar] = vmax(prjMax[iVar], prj);; prjMin[iVar] = vmin(prjMin[iVar], prj);. phiMax[iVar] = vmax(phiMax[iVar], phi.getVec(jPoint,iVar));; phiMin[iVar] = vmin(phiMin[iVar], phi.getVec(jPoint,iVar));; }; }. for(size_t iVar=0; iVar<nVar; ++iVar); {; FltVec lim = vmin(FltVec(2.0), vmin(; (phiMax[iVar]-phi.getVec(iPoint,iVar))/prjMax[iVar],; (phiMin[iVar]-phi.getVec(iPoint,iVar))/prjM",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/789#issuecomment-530593912:7910,schedul,schedule,7910,https://su2code.github.io,https://github.com/su2code/SU2/issues/789#issuecomment-530593912,2,['schedul'],['schedule']
Energy Efficiency,"): 0.5, 0.02.; The method includes a grid stretching correction (p = 0.3).; Scalar upwind solver for the turbulence model.; First order integration in space.; Average of gradients with correction (viscous flow terms).; Average of gradients with correction (viscous turbulence terms).; Gradient Computation using weighted Least-Squares method. ---------------------- Time Numerical Integration -----------------------; Local time stepping (steady state simulation).; Euler implicit method for the flow equations.; FGMRES is used for solving the linear system.; Using a LU-SGS preconditioning.; Convergence criteria of the linear solver: 1e-06.; Max number of linear iterations: 7.; CFL adaptation. Factor down: 1.5, factor up: 0.5,; lower limit: 0.5, upper limit: 3.5.; Courant-Friedrichs-Lewy number: 1; Euler implicit time integration for the turbulence model. ------------------------- Convergence Criteria --------------------------; Maximum number of iterations: 999999.; Reduce the density residual 6 orders of magnitude.; The minimum bound for the density residual is 10^(-5.9).; Start convergence criteria at iteration 10. -------------------------- Output Information ---------------------------; Writing a solution file every 999999999 iterations.; Writing the convergence history every 1 iterations.; The output file format is Tecplot binary (.plt).; Convergence history file name: history.; Forces breakdown file name: forces_breakdown.dat.; Surface flow coefficients file name: surface_flow.; Flow variables file name: flow.; Restart flow file name: restart_flow.dat. ------------------- Config File Boundary Information --------------------; +-----------------------------------------+; | Marker Type| Marker Name|; +-----------------------------------------+; | Far-field| Tria-2-Bndry|; | | Tria-4-Bndry|; | | Tria-5-Bndry|; +-----------------------------------------+; | Symmetry plane| Tria-3-Bndry|; | | Quad-6-Bndry|; +-----------------------------------------+; | Heat flux wall| ",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/633:1914,Reduce,Reduce,1914,https://su2code.github.io,https://github.com/su2code/SU2/pull/633,1,['Reduce'],['Reduce']
Energy Efficiency,"**Describe the bug**. For optimising a symmetric NACA 0012 airfoil, SU2 does not detect the `AIRFOIL_THICKNESS` automatically as it does for the complete geometry. . When `SU2_GEO` is utilized, it stops at the following stage without evaluating `AIRFOIL_THICKNES`, `AIRFOIL_TOC` and etc. -------------------- Objective function evaluation ----------------------. Station 1. YCoord: 0 m,. Due to this, I can't set an `OPT_CONSTRAINT` for the simulation. Please help me if there is a workaround for this. **Desktop (please complete the following information):**; - OS: WINDOWS; - C++ compiler and version: WINDOWS POWERSHELL; - SU2 Version: 7.2.0",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1543:612,POWER,POWERSHELL,612,https://su2code.github.io,https://github.com/su2code/SU2/issues/1543,1,['POWER'],['POWERSHELL']
Energy Efficiency,"**Describe the bug**. Hi, everyone. I'm trying to using hybrid rans/les method in my work. However, it seems that the implementation of SA_EDDES length scale in su2 is different from the paper, so I wonder whether it is a bug or just for the sake of experience. The relevant code locate in the void SetDES_LengthScale() function in SU2_CFD/src/solvers/CTurbSASolver.cpp， in line 1480 to 1495 the vorticity-adaptive SGS is calculated. But different for the published function, the absolute value of edge vector between vertex i and j are used and such a form seems unphysical. 1480 ln_max = 0.0;; 1481 deltaDDES = 0.0;; 1482 for (iNeigh = 0;iNeigh < nNeigh; iNeigh++){; 1483 jPoint = geometry->nodes->GetPoint(iPoint, iNeigh);; 1484 coord_j = geometry->nodes->GetCoord(jPoint);; 1485 for (iDim = 0; iDim < nDim; iDim++){; 1486 delta[iDim] = fabs(coord_j[iDim] - coord_i[iDim]); //why absolute value; 1487 }; 1488 deltaDDES = geometry->nodes->GetMaxLength(iPoint);; 1489 ln[0] = delta[1]*ratioOmega[2] - delta[2]*ratioOmega[1];; 1490 ln[1] = delta[2]*ratioOmega[0] - delta[0]*ratioOmega[2];; 1491 ln[2] = delta[0]*ratioOmega[1] - delta[1]*ratioOmega[0];; 1492 aux_ln = sqrt(ln[0]*ln[0] + ln[1]*ln[1] + ln[2]*ln[2]);; 1493 ln_max = max(ln_max,aux_ln);; 1494 vortexTiltingMeasure += nodes->GetVortex_Tilting(jPoint);; 1495 }. Any help would be appreciated.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1462:406,adapt,adaptive,406,https://su2code.github.io,https://github.com/su2code/SU2/issues/1462,1,['adapt'],['adaptive']
Energy Efficiency,"**Describe the bug**. I found a bug while testing the SST model.; I'm trying to simulate the high Mach number flat plate case. The flow condition is below. Temperature (K) | Unit Re (1/m) | Mach | Pressure | Wall Temperature(K); -- | -- | -- | -- | --; 800 | 4.9×10^6 | 6.1 | 12100 | 300. After calculation, I check the flow field, including the boundary. But, the inlet boundary is not the same flow conditions I imposed. ; Here is the comparison of other models using the same flow conditions. . ![image](https://user-images.githubusercontent.com/50565314/208847631-a3ced0ab-7a70-45ee-b67e-41314b2ddfb1.png). ![image](https://user-images.githubusercontent.com/50565314/208847743-6f08eb96-ea5e-4ac5-a50a-0d980f33c547.png). So, I tried to find the cause. . When deriving the RANS equation from the energy equation, the turbulent kinetic energy(TKE) is derived from the kinetic energy of Total Energy(E) as shown below.; ![image](https://user-images.githubusercontent.com/50565314/208849564-da4f1b0a-ff2f-4732-911a-b1ed2a4ca1c8.png). In the boundary condition and initialization part, k is considered depending on whether or not the SST model is used for Total Energy. In CEulerSolver.cpp ; `bool tkeNeeded = (turbulent && config->GetKind_Turb_Model() == TURB_MODEL::SST);`; `if (tkeNeeded) { Energy_FreeStream += Tke_FreeStream; }; config->SetEnergy_FreeStream(Energy_FreeStream);`; `if (tkeNeeded) Energy_FreeStreamND += Tke_FreeStreamND;`. But In the flux calculation part, when calculating the speed of sound(a), using the total enthalpy(H). But, in this part consider only the kinetic energy. . Expressed mathematically ; ![image](https://user-images.githubusercontent.com/50565314/208861650-92b8cad6-5a1f-4742-952b-30d0187ae28b.png). but in the SU2 code using below. ![image](https://user-images.githubusercontent.com/50565314/208861902-ff614d53-d07e-4237-a04d-73a49ad5a55c.png). The speed of sound always has a slightly high value because TKE is not subtracted. See ""roe.cpp"" line 119 ~ 149. ; `",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1851:798,energy,energy,798,https://su2code.github.io,https://github.com/su2code/SU2/issues/1851,4,"['Energy', 'energy']","['Energy', 'energy']"
Energy Efficiency,"**Describe the bug**; *A clear and concise description of what the bug is and what you expect the behavior to be instead. If applicable, add screenshots to help explain your problem.*. Hi all,. The STL-file writer does not write quad surface elements (So far so good :) ). So in case of a Hexa-Grid (i.e. quad surface elements) the .stl is pretty much empty, which is not really what we want.; I will attach an image later (firewall's at it again) down below which shows a mixed surface mesh (tris and quads). On the left will be the current version of SU2 where quads are simply not written and on the right a fixed version where each quad is separated into 2 tris. ![stl_quads_tris](https://user-images.githubusercontent.com/31306376/58827759-17667700-8644-11e9-9e6f-4643d2e7fdb7.JPG). That was found (and fixed) by Fabian Woerenkaemper @ElGarno . As the output is currently overhauled, I shortly chatted with its adoptive father @talbring and I will adapt the fixed STL-writer to the new structure and it will (hopefully) go into develop with that in a somewhat near future. If you desperately ;) need that fix right now, I can add a patch for the current develop down below. Cheers, Tobi. **Desktop (please complete the following information):**; - SU2 Version: latest develop, but this problem is probably also present in older versions.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/694:953,adapt,adapt,953,https://su2code.github.io,https://github.com/su2code/SU2/issues/694,1,['adapt'],['adapt']
Energy Efficiency,"**Describe the bug**; I'd like to use the FFD shape optimization feature of SU2. From a geometrical point of view the domain is very similar to the ""2 way mixing channel optimization"" tutorial example. I've therefore followed the steps of this tutorial and tested the mesh deformation with some dummy values. The result of the deformation can be seen here:; ![grafik](https://user-images.githubusercontent.com/42602495/211366671-1344820b-87f6-429f-b1d4-c396a6467440.png). The lower halve of the picture shows the original, undeformed mesh. The upper halve contains in green the original FFD box (ffd_box_0.vtk), in white the deformed FFD box and the deformed mesh (volume_deformed_0000.vtu) in blue/white. From the definition of the deformation I'd expect that the cells outside the FFD box to remain largely unchanged. Instead, here the largest deformations occur. Following the mixer-example the FFD information was added to the mesh by running SU2_DEF with a config file containing this information:; ```; %%%%%%%%%%%%%%% FFD definition %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%; FFD_DEFINITION = (BOX, \; 0.012, 0.0005, 0.0,\; 0.080, 0.0005, 0.0,\; 0.080, 0.0035, 0.0,\; 0.012, 0.0035, 0.0 ); FFD_DEGREE= (4, 1, 0); FFD_CONTROL_POINT; DV_KIND = FFD_SETTING; DV_MARKER = (NS_Resonator_Wall, NS_ResonatorTip_Wall); DV_PARAM = (1.0); ```. This added the following info to the mesh:; ```; FFD_NBOX= 1; FFD_NLEVEL= 1; FFD_TAG= BOX; FFD_LEVEL= 0; FFD_DEGREE_I= 4; FFD_DEGREE_J= 1; FFD_BLENDING= BEZIER; FFD_PARENTS= 0; FFD_CHILDREN= 0; FFD_CORNER_POINTS= 4; 0.012 0.0005; 0.08 0.0005; 0.08 0.0035; 0.012 0.0035; FFD_CONTROL_POINTS= 20; 0 0 0 0.012 0.0005 -0.5; 0 0 1 0.012 0.0005 0.5; 0 1 0 0.012 0.0035 -0.5; 0 1 1 0.012 0.0035 0.5; 1 0 0 0.029 0.0005 -0.5; 1 0 1 0.029 0.0005 0.5; 1 1 0 0.029 0.0035 -0.5; 1 1 1 0.029 0.0035 0.5; 2 0 0 0.046 0.0006 -0.5; 2 0 1 0.046 0.0005 0.5; 2 1 0 0.046 0.0036 -0.5; 2 1 1 0.046 0.0035 0.5; 3 0 0 0.063 0.0007 -0.5; 3 0 1 0.063 0.0005 0.5; 3 1 0 0.063 0.0037 -0.5; 3 1 1 0.06",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1879:568,green,green,568,https://su2code.github.io,https://github.com/su2code/SU2/issues/1879,1,['green'],['green']
Energy Efficiency,"**Describe the bug**; If you follow the Quickstart tutorial, you get one warning (""The adjoint solver should use a non-dimensional flow solution"") and this error when running the CONTINUOUS_ADJOINT pass:. ```; SU2_CFD inv_NACA0012.cfg; WARNING: The adjoint solver should use a non-dimensional flow solution. Error in ""void CConfig::SetPostprocessing(unsigned short, unsigned short, unsigned short)"": ; -------------------------------------------------------------------------; CFL adaption only available for finite-volume fluid solvers.; Please select CFL_ADAPT = NO.; ------------------------------ Error Exit -------------------------------. --------------------------------------------------------------------------; MPI_ABORT was invoked on rank 0 in communicator MPI_COMM_WORLD; with errorcode 1. NOTE: invoking MPI_ABORT causes Open MPI to kill all MPI processes.; You may or may not see output from other processes, depending on; exactly when Open MPI kills them.; --------------------------------------------------------------------------; ```. **To Reproduce**; *Just follow the steps in the tutorial, one by one, and when you get to step 3 in the CONTINUOUS_ADJOINT run, you get the error.*. **Desktop (please complete the following information):**; - SU2 Version: [e.g., v7.0.1]",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/887:481,adapt,adaption,481,https://su2code.github.io,https://github.com/su2code/SU2/issues/887,1,['adapt'],['adaption']
Energy Efficiency,"**Describe the bug**; In PR #1105 an `isnan(SU2_TYPE::GetValue(monitor))` check was introduced. I get a compiler error (serial build, no AD DD involved) `call of overload isnan(souble&) is ambiguos` so the complier is probably confused about the return type of `SU2_TYPE::GetValue(monitor)` which is `passivedouble` which itself is hardcoded to be `double` in `datatype_structure.hpp`. Or sth else is happening idk. ![image](https://user-images.githubusercontent.com/31306376/99810957-c5b9f100-2b44-11eb-80e6-b58ce4277bd2.png). I only have the problem with gcc5.3.0. On the same system I have an unsupported gcc7.4.0 that works. My private machine with gcc10.2.0 works fine as well. So I guess it is a specific compiler problem. In my I hit the :keyboard: a few times without actually knowing what I am doing:; - use `isnan(monitor)` ... same error; - use `isnan(static_cast<double>(monitor))` ... same error; - use `isnan(static_cast<double>(SU2_TYPE::GetValue(monitor)))` ... same error; - changed the return type of `GetValue` to `double` ...same error. I guess this problem is really specific to my setup. gcc5.3.0 is old but not grandpa kinda old with the release dec 2015 ... well ok maybe it is :older_man: ; I would be happy with some suggestions what to try out maybe, also if I misinterpret the error a pointer in the right direction would help. If @pcarruscag could have a quick look that would be great. . Thanks and warm regards, Tobi. **To Reproduce**; You probably cant without an old enough compiler. **Desktop (please complete the following information):**; - OS: RHES 7.6; - C++ compiler and version: g++ (GCC) 5.3.0; - SU2 Version: latest develop",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1112:63,monitor,monitor,63,https://su2code.github.io,https://github.com/su2code/SU2/issues/1112,5,['monitor'],['monitor']
Energy Efficiency,"**Describe the bug**; In my transient, compressible simulation the achievable residuals strongly depend on the type of boundary condition that is specified for a wall:. MARKER_ISOTHERMAL / MARKER_HEATFLUX (h=0):; rms_density < 1e-8; rms_energy < 1e-3. MARKER_HEATTRANSFER; rms_density > 1e-5; rms_energy > 1e-1. Here the development of the overall residuals can be seen. (other residuals look similar).; ![grafik](https://user-images.githubusercontent.com/42602495/210543380-b231a0a1-6ccf-49cd-94aa-b84ffa901815.png). The temperature development along one of the walls can be seen here and is what I'd expect.; ![grafik](https://user-images.githubusercontent.com/42602495/210544363-b4302822-91fe-411a-958c-e603fddec227.png). A more detailed analysis of local residuals shows, that the energy residuals are the largest directly at the convective wall:; ![grafik](https://user-images.githubusercontent.com/42602495/210545535-70fca515-c2e0-45ed-bed8-1fd54dab0a11.png). I've tried various numerical schemes, limiters, linear solvers and gradient reconstruction methods, but none of these settings seem to improve convergence with convective BCs. I am not sure if this is an actual bug or simply a limitation due to the way the convective BC is implemented. So far the solution looks realistic, but since my case is very sensitive to cumulative heat losses this may possibly have an influence on the final outcome. **Case summary**. - Solver: RANS, transient; - Domain: 2D Axisymmetric; - Convection: SLAU2, NTS_DUCROS; - Gradients: GREEN_GAUSS; - Turbulence: SST V2003m, Sustaining; - Slope Limiter: Venkat_Wang; - Time: 2nd Order. Full setup, mesh and outputs can be found [here](https://tumde-my.sharepoint.com/:u:/g/personal/bauer_christian_tum_de/EVbBCu8i8b9FuXNl4QyC0icB3mnnd2Ac3dRFAlRI-HrVSg?e=7nA0Vt). **Desktop (please complete the following information):**; - OS: SLES 15.1; - C++ compiler and version: Intel 2021.4; - MPI implementation and version: intelMPI 2019; - SU2 Version: current master ",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1872:785,energy,energy,785,https://su2code.github.io,https://github.com/su2code/SU2/issues/1872,1,['energy'],['energy']
Energy Efficiency,"**Describe the bug**; This is something I have noticed multiple times when running with JST on RANS cases: If the CFL number is increased (>5) the density residual stops changing and the solution essentially stalls: . ![image](https://user-images.githubusercontent.com/30271435/65646456-01444400-dfb0-11e9-9c77-59d3458ceb92.png). I am digging into the JST implementation to see what is going on but haven't had any luck so far. Is this something that other people have experienced and have an explanation for? . Changing the LINEAR_SOLVER_PREC sometimes helps. In this flatplate case ILU does better but for other simulations this stalling will persist. Adaptive CFL will almost certainly mess things up (even #790). Sidenote, is there a rule of thumb for which LINEAR_SOLVER_PREC and LINEAR_SOLVER to use?. **To Reproduce**; This was on the basic flatplate test case that is available with the repo. Including files here for completeness ; [flatplate_jst_Sa.tar.gz](https://github.com/su2code/SU2/files/3655187/flatplate_jst_Sa.tar.gz). If the CFL is set to 5, the solution converges as expected. But if it is increased to 8, it stops moving. . **Desktop (please complete the following information):**; - OS: Linux (Ubuntu 16.04.11); - C++ compiler and version: g++ (GCC) 5.4.0; - MPI implementation and version: openmpi 1.10.2; - SU2 Version: v6.2.0 develop. This has been replicated on a variety of systems",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/793:654,Adapt,Adaptive,654,https://su2code.github.io,https://github.com/su2code/SU2/issues/793,1,['Adapt'],['Adaptive']
Energy Efficiency,"**Describe the bug**; When loading grid points for the ith zone, it seems that grid points for all zones after the ith zone will be loaded as well.; This grid point loading is implemented in the function of void CSU2ASCIIMeshReaderFVM::ReadPointCoordinates() . The code snippet below is doing the function. I think there should be a break for the while loop once the grid points for the required zone are loaded. /*--- Open the mesh file and jump to our zone. ---*/. mesh_file.open(meshFilename, ios::in);; FastForwardToMyZone();. /*--- Read the point coordinates into our data structure. ---*/. string text_line;; string::size_type position;; while (getline (mesh_file, text_line)) {. position = text_line.find (""NPOIN="",0);; if (position != string::npos) {. - SU2 Version:7.1.1. It should be noted that this bug is not expected to cause wrong solutions, but lead to unnecessary extra time cost and memory consumption probably.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1345:907,consumption,consumption,907,https://su2code.github.io,https://github.com/su2code/SU2/issues/1345,1,['consumption'],['consumption']
Energy Efficiency,"**Describe the bug**; hello, I use SU2 to do shape optimization for M6 wing. I discover SU2_GEO can not identify the section shape correctly if I use the structured grid. But it can correctly identify the section shape，airfoil，when I use the unstructured grid. Does it means the unstructured grid is the only mesh type can be used in shape optimization? ; I use a unstructured grid do shape optimization, my objective is minimizi drag with fixed lift, I got a model with less drag in SU2. I used the SU2_CFD module to verify whether the optimized model really reduces drag with more volume mesh. I got a nice result. Compared to the original model, the optimized model has reduced drag. But when the same grids, original model grid and optimized model grid, is used for numerical simulation in Fluent, I got a bad result. there is almost no drag reduction, and drag, lift and pitching moment are all smaller than SU2. Is there something wrong with the grid or something else? ; I used SU2 to simulate the structural grid of the CRM model downloaded from the https://aiaa-dpw.larc.nasa.gov. The drag and lift are consistent with the result of Fluent. But pitching moment is 5 times of that calculated by Fluent. I think maybe there is something wrong with my configuration. But I got a relatively correct pitching moment when I use the same configuration to similate with a unstructured grid. This makes me doubt the mesh type.; I am so confused with these problems. I will appreciate very much if someone can give me some advice？. - SU2 Version: [e.g., v6.2.0]",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1229:560,reduce,reduces,560,https://su2code.github.io,https://github.com/su2code/SU2/issues/1229,2,['reduce'],"['reduced', 'reduces']"
Energy Efficiency,"**Disclaimer**; The performance numbers that follow are based on simple implementations of the methods, I do not claim any of my implementations or choice of methods to be optimal. If you know better speak up.; The data is from the case used to benchmark #753 (see #716), it is by no means an extensive collection of different grid types. I will share code and data with anyone who wants to repeat the tests on the condition they post detailed results. With that out of the way :) ... ### Green-Gauss Gradients. This is the plain edge-loop version of the code with boundary contributions omitted for simplicity:; ```C++; void computeGradients(size_t nEdge,; size_t nPoint,; size_t nVar,; size_t nDim,; const vector<pair<size_t,size_t> >& connectivity,; const Matrix& area,; const vector<double>& volume,; const Matrix& phi,; VectorOfMatrix& grad); {; grad.setZero();. for(size_t iEdge=0; iEdge<nEdge; ++iEdge); {; size_t iPoint = connectivity[iEdge].first;; size_t jPoint = connectivity[iEdge].second;. for(size_t iVar=0; iVar<nVar; ++iVar); {; double phi_ave = 0.5*(phi(iPoint,iVar)+phi(jPoint,iVar));. for(size_t iDim=0; iDim<nDim; ++iDim); {; double flux = phi_ave*area(iEdge,iDim);. grad(iPoint,iVar,iDim) += flux;; grad(jPoint,iVar,iDim) -= flux;; }; }; }. for(size_t iPoint=0; iPoint<nPoint; ++iPoint); for(size_t iVar=0; iVar<nVar; ++iVar); for(size_t iDim=0; iDim<nDim; ++iDim); grad(iPoint,iVar,iDim) /= volume[iPoint];; }; ```; This is more or less what SU2 does with minor differences on how the edges (`connectivity`) and area are stored, there is no vectorization nor easy way to make the loop parallel, this will be the reference for execution times. Suppose now that due to a perfect storm the number of variables is 4, here is how with a few pragmas we get gcc to vectorize:; ```C++; template<size_t nVar>; void computeGradients_impl(size_t nEdge,; size_t nPoint,; size_t nDim,; const vector<pair<size_t,size_t> >& connectivity,; const Matrix& area,; const vector<double>& volume,; con",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/789#issuecomment-530328194:489,Green,Green-Gauss,489,https://su2code.github.io,https://github.com/su2code/SU2/issues/789#issuecomment-530328194,1,['Green'],['Green-Gauss']
Energy Efficiency,"**Edit**: Besides introducing the `NdFlattener` data structure, this PR applies the following bugfixes:; - correct retrieval of the wall roughness in a multizone setup, the original intention of this PR; - the non-MPI substitute for `SU2_MPI::Allgatherv` and `Alltoallv` now takes the displacement into account; - fix #1293, adding a missing `#include` statement . Below is the original PR description. ## Proposed Changes; I think that currently the roughness at the closest wall is retrieved in a wrong way for multizone setups. The current structure is like this:. def CGeometry::ComputeWallDistance:; for each iZone:; construct an ADT which stores the markers of iZone; for each jZone:; call CPhysicalGeometry::SetWallDistance to jZone geometry which \; reduces the stored wall distances of jZone's points according to iZone's markers in the ADT and\; sets wall roughnesses of jZone's points according to data from jZone's geometry. The issue I perceive here is that the closest wall in the ADT, identified by the `markerID`, belongs to `iZone`. `iZone`'s geometry and config must therefore be an additional argument to `CPhysicalGeometry::SetWallDistance`. We must not use the wall roughness from `jZone`'s geometry and config associated to the markerID, as it is currently done. ## Related Work; ?; ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X ] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [X ] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documenta",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1286:758,reduce,reduces,758,https://su2code.github.io,https://github.com/su2code/SU2/pull/1286,1,['reduce'],['reduces']
Energy Efficiency,"**Is your feature request related to a problem? Please describe.**. Hello guys,. Have you ever heard about MHD(magnetohydrodynamics) simulation? That's used in plasma physics with the hypothesis that most of the particles in a control volume have the same velocity. However, the atoms' first electrons are stripped and, hence, magnetic field confinement to the plasma is possible due to ions and electrons' net charge. Moreover, due to the huge mass difference between ion and electron, they are normally treated as two-fluid interacting with each other. The most successful MHD code is produced by [PPPL](https://w3.pppl.gov/~nferraro/m3dc1.html), but not open source. I want to base on SU2 to make a flexible one. Do you think a feature_* or develop branch is better?. feature_ExMHD(extended MHD) may be a good branch name?. **Describe alternatives you've considered**; If there already exists the relevant module concerning the electromagnetic content, please let me know. Importantly, if there exists a chemical diffusion problem solver, it would reduce my coding time significantly by imitating the code. . If anyone can give some guidance on how to change the governing equations quickly and safely, please inform me.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/741:411,charge,charge,411,https://su2code.github.io,https://github.com/su2code/SU2/issues/741,2,"['charge', 'reduce']","['charge', 'reduce']"
Energy Efficiency,"**Is your feature request related to a problem? Please describe.**. Overset grids are very advantageous for storage separation or rotorcraft dynamic problems where rigid bodies move independently. In the past, it is shown that SU2 can be adapted to work with the overset grid as shown in [video](https://www.youtube.com/watch?v=tsr-1Qyk1AQ) [paper](https://arc.aiaa.org/doi/abs/10.2514/6.2015-3428) however this future newer added to community version. . **Describe the solution you'd like**. I would like to get the idea of the community about overset grids, the possible implementation, and the work effort required for such a modification. . Any contribution/suggestion is highly appreciated.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1905:238,adapt,adapted,238,https://su2code.github.io,https://github.com/su2code/SU2/issues/1905,1,['adapt'],['adapted']
Energy Efficiency,"**Is your feature request related to a problem? Please describe.**; For the problems in which parameters located in only a limited region vary much faster than others, the mesh is able to self-adjust to reduce the requirement to computational resources. One mature framework of the technique is [Chombo](https://commons.lbl.gov/display/chombo?atl_token=81243520c3e3754ade36ac0a45eb4e156dac45e0), which can surprisingly reduce the time required to finish the computation job for the aforementioned problem such as moving shock-wave. **Describe the solution you'd like**; AMR frame option added. ; Maybe it will be very difficult to merge Chombo and SU2, and not necessary. We can also develop our own AMR algorithm based on current research. **Describe alternatives you've considered**; The aim of AMR is just for reducing run time. Or just increase the Grid number . **Additional context**; [Adaptive Mesh Refinement.pdf](https://github.com/su2code/SU2/files/3426255/Adaptive.Mesh.Refinement.pdf); [An introduction to AMR.pdf](https://github.com/su2code/SU2/files/3426257/An.introduction.to.AMR.pdf)",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/743:203,reduce,reduce,203,https://su2code.github.io,https://github.com/su2code/SU2/issues/743,4,"['Adapt', 'reduce']","['Adaptive', 'reduce']"
Energy Efficiency,"**Is your feature request related to a problem? Please describe.**; In my application the heat flux over various surfaces is an important figure of merit of a specific design. Being able to monitor the average (or total) heat flux over different surfaces during runtime would be a good metric for judging convergence and quality of the design. Currently (as of 7.3.0) this does not seem to be possible. *A clear and concise description of what the problem is. Ex. I'm always frustrated when [...]*; In my mesh I have defined various markers which indicate the surfaces of interest, where I would like the average heat-flux to evaluate over time. As suggested by the DryRun info I've indicated the surfaces with the MARKER_MONITORING specifier in the config file:. `MARKER_MONITORING = (NS_WALL_RESONATORTIP, NS_WALL_RESONATOR3, NS_WALL_RESONATOR2)`. However, the history and screen output shows only the heat flux aggregated over all surfaces. **Describe the solution you'd like**; *A clear and concise description of what you want to happen.*. I would like the values of the HEAT group to behave just like those of the FLOW_COEFF group, where the heat flux is indicated on a per-surface basis. This would allow me to track the development of the heat fluxes with good time resolution, without having to write an excessive amount of surface files. The output in the solution history could be similar to that of other output groups, i. e.:; `""Avg_HeatFlux(SURF1)"",""Avg_HeatFlux(SURF2)"",...`. **Describe alternatives you've considered**; *A clear and concise description of any alternative solutions or features you've considered.*; Regularly exporting the entire surface data to discrete files and analyzing them during post-processing is a possible work-around, but leads to an excessive amount of files. **Additional context**; *Add any other context or screenshots about the feature request here.*; My cases are highly transient and require quite some timesteps until a quasi-stationary limit cycle ",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1531:190,monitor,monitor,190,https://su2code.github.io,https://github.com/su2code/SU2/issues/1531,1,['monitor'],['monitor']
Energy Efficiency,"**Is your feature request related to a problem? Please describe.**; In my transient cases I would like to average the flow-field over many time-iterations, in order to filter out highly dynamic effects. For me the volumentric time-averages and rms values have significant value. However, I have observed, that once averaging is enabled, the solver performance gradually decreases up to a point, where time-iterations are orders of magnitudes slower than without averaging. This does not seem to be a bug but rather inherent to the way averaging is implemented. I suspect, that the averaging occurs over all timesteps and thus a complete history of all the values is required. This may gradually increase memory consumption and effort for calculating averages. I suspect this to happen around here, but I may be wrong. https://github.com/su2code/SU2/blob/72b2fa977b64b9683a388920f05298a40d39e5c5/SU2_CFD/src/output/tools/CWindowingTools.cpp#L69-L76. I assume, that this may be a necessity for the higher-order windows, but seems to be overkill for a rectangular window, where the new time-average can be computed from the previous time-average, the number of iterations and the new values. Nevertheless, also the rectangular window seems to save the full value history:. https://github.com/su2code/SU2/blob/72b2fa977b64b9683a388920f05298a40d39e5c5/SU2_CFD/src/output/tools/CWindowingTools.cpp#L94-L100. **Describe the solution you'd like**; Being able to calculate (at least) non-windowed time-averages without a gradual drop in performance would be a real asset for me. This may be possible by choosing a different averaging method. If this cannot be done due to the data structure used, a dry-run message warning the user about this may be helpful. . **Describe alternatives you've considered**; The same effect can be achieved by running simulations without time-averaging but with regular volumetric outputs and calculating time-averages as a post-processing step. However, the associated data over",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1545:711,consumption,consumption,711,https://su2code.github.io,https://github.com/su2code/SU2/issues/1545,1,['consumption'],['consumption']
Energy Efficiency,"**Is your feature request related to a problem? Please describe.**; There is the option to specify an inlet profile for subsonic flows, but not supersonic flows. This feature would help reduce domain sizes and prevent divergence for no-slip walls at the inlet. **Describe the solution you'd like**; A supersonic inlet profile specification method as similar as possible to the incompressible inlet profile method would be preferable, as that method is very straightforward. Thank you!",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1650:186,reduce,reduce,186,https://su2code.github.io,https://github.com/su2code/SU2/issues/1650,1,['reduce'],['reduce']
Energy Efficiency,"**Issue description**. Hi all, I am trying to run a rather large mesh computation with SU2. The mesh counts 170M cells. I managed to run it with the native SU2 mesh format with 480 cores but the preprocessing step took 90 minutes with a huge load on the file system impacting all the other users of the cluster. To reduce the load, I was thinking about using the CGNS mesh file format. However the preprocessing step fills all the RAM memory available and the job fails. All the setup being identical. . By reducing the number of cells, I am able to run with the CGNS file format. Is it a common behavior with the CGNS file format?. **Hardware and software :**; - OS: Linux Red Hat ELS 6.5; - Nodes: Intel Xeon Ivy bridge; - C++ compiler and version: intel/2018.0.1; - MPI implementation and version: intelmpi/2018.0.1; - SU2 Version: v7.2",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1378:315,reduce,reduce,315,https://su2code.github.io,https://github.com/su2code/SU2/issues/1378,1,['reduce'],['reduce']
Energy Efficiency,"**Observed behaviour**; Thread sanitizer tests in the CI pipeline fail across PRs, e.g. #2158, with errors along the lines; ```; FATAL: ThreadSanitizer: unexpected memory mapping 0x7d81770ae000-0x7d8177500000; ```. **Background and possible causes**. There is some incompatibility between sanitizers and high degrees of address space layout randomization (https://github.com/google/sanitizers/issues/1716), it seems to be triggered by a combination of too recent kernel and/or too old LLVM and affects also github runners (https://github.com/actions/runner-images/issues/9491). **Possible fixes**. From what I understand in https://github.com/actions/runner-images/issues/9491 the corresponding parameters will be adapted in the runner, but it seems that there is also a workaround at the level of the workflow (https://github.com/openvswitch/ovs/commit/fa0dfa18d5344c82bc8387b4f79f4257a59d6f58).",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/2241:714,adapt,adapted,714,https://su2code.github.io,https://github.com/su2code/SU2/issues/2241,1,['adapt'],['adapted']
Energy Efficiency,", propellerUpperSurface, propellerLowerSurface, propellerRightTip, propellerLeftTip ); %; % Marker of the far field (NONE = no marker); %; % Read inlet profile from a file (YES, NO) default: NO; %SPECIFIED_INLET_PROFILE= YES; %; % File specifying inlet profile; INLET_TYPE= TOTAL_CONDITIONS; MARKER_INLET = (inlet, 288.15, 101325, 0.0, 0.0, 0.0 ); MARKER_FAR= (farfield); MARKER_OUTLET = ( outlet, 101325 ); %; % Marker of the surface which is going to be plotted or designed; MARKER_PLOTTING= ( propellerUpperSurface, propellerLowerSurface, propellerRightTip, propellerLeftTip ); %; % Marker of the surface where the functional (Cd, Cl, etc.) will be evaluated; MARKER_MONITORING= ( propellerUpperSurface, propellerLowerSurface, propellerRightTip, propellerLeftTip ). % ------------- COMMON PARAMETERS DEFINING THE NUMERICAL METHOD ---------------%; %; % Numerical method for spatial gradients (GREEN_GAUSS, LEAST_SQUARES, ; % WEIGHTED_LEAST_SQUARES); NUM_METHOD_GRAD= GREEN_GAUSS; %; % Courant-Friedrichs-Lewy condition of the finest grid; CFL_NUMBER= 1; %; % Adaptive CFL number (NO, YES); CFL_ADAPT= NO; %; % Parameters of the adaptive CFL number (factor down, factor up, CFL min value,; % CFL max value ); CFL_ADAPT_PARAM= ( 0.1, 2.0, 15, 1e6 ); %; % Runge-Kutta alpha coefficients; RK_ALPHA_COEFF= ( 0.66667, 0.66667, 1.000000 ); %; % Number of total iterations; ITER= 99999. % ------------------------ LINEAR SOLVER DEFINITION ---------------------------%; %; % Linear solver for implicit formulations (BCGSTAB, FGMRES); LINEAR_SOLVER= FGMRES; %; % Preconditioner of the Krylov linear solver (JACOBI, LINELET, LU_SGS); LINEAR_SOLVER_PREC= ILU; %; % Minimum error of the linear solver for implicit formulations; LINEAR_SOLVER_ERROR= 1E-10; %; % Max number of iterations of the linear solver for the implicit formulation; LINEAR_SOLVER_ITER= 10. % -------------------------- MULTIGRID PARAMETERS -----------------------------%; %; % Multi-Grid Levels (0 = no multi-grid); MGLEVEL= 3; %; % Multi-",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1669:6171,Adapt,Adaptive,6171,https://su2code.github.io,https://github.com/su2code/SU2/issues/1669,2,"['Adapt', 'adapt']","['Adaptive', 'adaptive']"
Energy Efficiency,"- The meshes are available here: https://github.com/su2code/VandV/tree/master/rans/dsma661; - The config files for the GG + LSQ results are here: [dsma661_configs.zip](https://github.com/su2code/SU2/files/3842634/dsma661_configs.zip). - I did not run the other solvers myself. Those are results from the NASA TMR website. I don't have access to those solvers unfortunately. . - Yeah the non-monotonic variation worried me as well. But all the simulations were converged to a density residual of -13. (all of them have over 6 orders of residual reduction). The residuals for the GG+LSQ results shown here:; ![res_SA](https://user-images.githubusercontent.com/30271435/68789548-8a641880-05fa-11ea-8885-4e024fe84eda.png); I tried a few re-runs of that finest mesh with a couple of different options. I reduced the maximum CFL to ~30 from 1000 and it still gave the same result. I reduced the number of cores I was running on from 80 to 20 and that had no effect either. As soon as I ran without the `NUM_METHOD_GRAD_RECON= LEAST_SQUARES` option, it got a C_L of about 0.159402 which would be more in line with the other solvers. @economon I haven't tried a high fixed CFL. Let me check that behavior and report back.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/790#issuecomment-553524258:799,reduce,reduced,799,https://su2code.github.io,https://github.com/su2code/SU2/pull/790#issuecomment-553524258,2,['reduce'],['reduced']
Energy Efficiency,"---- | ---- |; | **Speed** | 1.0 | 2.2 | 0.83 | 1.35 |. **Parallel execution**. I will start at the end for this, all it takes to parallellize the points loops with OpenMP is to take this:; ```C++; for(size_t iPoint=0; iPoint<nPoint; iPoint+=SIMDLEN); ```; And add some pixie dust; ```C++; #pragma omp parallel for schedule(dynamic,128); for(size_t iPoint=0; iPoint<nPoint; iPoint+=SIMDLEN); ```; This means each thread gets chunks of 128 loop iterations (512 points) to work on, assigned in a dynamic way, the 4 core speedup (still relative to our reference) is **3.8** for the SIMD code and **2.8** for the scalar code. Parallelizing the edge loops is a bit more intricate, as this:; ```C++; for(size_t iEdge=0; iEdge<nEdge; ++iEdge); {; size_t iPoint = connectivity[iEdge].first;; size_t jPoint = connectivity[iEdge].second;; ```; Becomes:; ```C++; for(size_t color=0; color<colorStart.size()-1; ++color); #pragma omp parallel for schedule(dynamic,CHUNK_SIZE); for(size_t k=colorStart[color]; k<colorStart[color+1]; ++k); {; #if SORT_BY_COLOR==1; size_t iEdge = k;; #else; size_t iEdge = edgeIdx[k];; #endif. size_t iPoint = connectivity[iEdge].first;; size_t jPoint = connectivity[iEdge].second;; ```; Apologies for the macro but it is just to illustrate that if we re-sort edge data after coloring the edge index is the loop index, otherwise the edge indices for each color need to be stored in a separate array.; Note that for each edge loop we first loop over colors, then over same-color edges, it is this inner loop that can run in parallel in chunk sizes that are multiple of the group size considered during coloring. There is some runtime cost on entry to every #omp parallel section, with coloring we enter one such section once by color. I mentioned in the introduction coloring reduces locality and therefore performance, here is the effect of color group size on the execution time of the scalar code on one thread:; ![image](https://user-images.githubusercontent.com/38071223/6468680",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/789#issuecomment-530328194:12910,schedul,schedule,12910,https://su2code.github.io,https://github.com/su2code/SU2/issues/789#issuecomment-530328194,2,['schedul'],['schedule']
Energy Efficiency,---------------------------------------------+; | Ref. Viscosity| 1.43345e-05| 1| N.s/m^2| 1.43345e-05|; | Sutherland Temp.| 228.71| 1| K| 228.71|; | Sutherland Const.| 110.4| 1| K| 110.4|; +------------------------------------------------------------------------------+; | Prandtl (Lam.)| -| -| -| 0.72|; | Prandtl (Turb.)| -| -| -| 0.9|; +------------------------------------------------------------------------------+; | Gas Constant| 287.058| 1| N.m/kg.K| 287.058|; | Spec. Heat Ratio| -| -| -| 1.4|; +------------------------------------------------------------------------------+; -- Initial and free-stream conditions:; +------------------------------------------------------------------------------+; | Name| Dim. value| Ref. value| Unit|Non-dim. value|; +------------------------------------------------------------------------------+; | Static Pressure| 41342.4| 1| Pa| 41342.4|; | Density| 0.499813| 1| kg/m^3| 0.499813|; | Temperature| 288.15| 1| K| 288.15|; | Total Energy| 236805| 1| m^2/s^2| 236805|; | Velocity-X| 244.973| 1| m/s| 244.973|; | Velocity-Y| 0| 1| m/s| 0|; | Velocity-Z| 4.48986| 1| m/s| 4.48986|; | Velocity Magnitude| 245.014| 1| m/s| 245.014|; +------------------------------------------------------------------------------+; | Viscosity| 1.7248e-05| 1| N.s/m^2| 1.7248e-05|; | Conductivity| -| 1| W/m^2.K| -|; | Turb. Kin. Energy| 225.119| 1| m^2/s^2| 225.119|; | Spec. Dissipation| 652349| 1| 1/s| 652349|; +------------------------------------------------------------------------------+; | Mach Number| -| -| -| 0.72|; | Reynolds Number| -| -| -| 7.1e+06|; +------------------------------------------------------------------------------+; Initialize Jacobian structure (Navier-Stokes). MG level: 0.; Initialize Jacobian structure (SA model). ----------------- Integration and Numerics Preprocessing ----------------; Integration Preprocessing.; Numerics Preprocessing. ---------------------- Python Interface Preprocessing ---------------------; Setting customized ,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/633:7830,Energy,Energy,7830,https://su2code.github.io,https://github.com/su2code/SU2/pull/633,1,['Energy'],['Energy']
Energy Efficiency,"----------------------------------------------------------+; | Gas Constant| 287.058| 1| N.m/kg.K| 287.058|; | Spec. Heat Ratio| -| -| -| 1.4|; +------------------------------------------------------------------------------+; -- Initial and free-stream conditions:; +------------------------------------------------------------------------------+; | Name| Dim. value| Ref. value| Unit|Non-dim. value|; +------------------------------------------------------------------------------+; | Static Pressure| 41342.4| 1| Pa| 41342.4|; | Density| 0.499813| 1| kg/m^3| 0.499813|; | Temperature| 288.15| 1| K| 288.15|; | Total Energy| 236805| 1| m^2/s^2| 236805|; | Velocity-X| 244.973| 1| m/s| 244.973|; | Velocity-Y| 0| 1| m/s| 0|; | Velocity-Z| 4.48986| 1| m/s| 4.48986|; | Velocity Magnitude| 245.014| 1| m/s| 245.014|; +------------------------------------------------------------------------------+; | Viscosity| 1.7248e-05| 1| N.s/m^2| 1.7248e-05|; | Conductivity| -| 1| W/m^2.K| -|; | Turb. Kin. Energy| 225.119| 1| m^2/s^2| 225.119|; | Spec. Dissipation| 652349| 1| 1/s| 652349|; +------------------------------------------------------------------------------+; | Mach Number| -| -| -| 0.72|; | Reynolds Number| -| -| -| 7.1e+06|; +------------------------------------------------------------------------------+; Initialize Jacobian structure (Navier-Stokes). MG level: 0.; Initialize Jacobian structure (SA model). ----------------- Integration and Numerics Preprocessing ----------------; Integration Preprocessing.; Numerics Preprocessing. ---------------------- Python Interface Preprocessing ---------------------; Setting customized boundary conditions for zone 0. ```; ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/633:8207,Energy,Energy,8207,https://su2code.github.io,https://github.com/su2code/SU2/pull/633,1,['Energy'],['Energy']
Energy Efficiency,-| 0.9|; +--------------------------------------------------------------------------+; | Gas Constant| 287.058| 287.058| N.m/kg.K| 1|; | Spec. Heat Ratio| -| -| -| 1.4|; +--------------------------------------------------------------------------+; -- Free-stream conditions:; +--------------------------------------------------------------------------+; | Name| Dim. value| Ref. value| Unit|Non-dim. value|; +--------------------------------------------------------------------------+; | Static Pressure| 183127| 183127| Pa| 1|; | Density| 2.12649| 2.12649| kg/m^3| 1|; | Temperature| 300| 300| K| 1|; | Total Energy| 216650| 86117.4| m^2/s^2| 2.51575|; | Velocity-X| 51.2923| 293.458| m/s| 0.174786|; | Velocity-Y| 9.04422| 293.458| m/s| 0.0308195|; |Velocity Magnitude| 52.0836| 293.458| m/s| 0.177482|; +--------------------------------------------------------------------------+; | Viscosity| 1.84592e-05| 624.034| N.s/m^2| 2.95804e-08|; | Conductivity| -| 179134| W/m^2.K| -|; | Turb. Kin. Energy| 10.1726| 86117.4| m^2/s^2| 0.000118125|; | Spec. Dissipation| 117188| 293.458| 1/s| 399.335|; +--------------------------------------------------------------------------+; | Mach Number| -| -| -| 0.15|; | Reynolds Number| -| -| -| 6e+06|; +--------------------------------------------------------------------------+. Initialize Jacobian structure (Navier-Stokes). MG level: 0.; Initialize Jacobian structure (SA model).; Initialize Jacobian structure (Navier-Stokes). MG level: 1.; Initialize Jacobian structure (Navier-Stokes). MG level: 2.; Initialize Jacobian structure (Navier-Stokes). MG level: 3. ----------------- Integration and Numerics Preprocessing ----------------; Integration Preprocessing.; Numerics Preprocessing. ---------------------- Python Interface Preprocessing ---------------------; Setting customized boundary conditions for zone 0. -------------------------- Output Preprocessing ---------------------------; Zone 1: Euler/Navier-Stokes/RANS output structure.; History fi,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/591:8225,Energy,Energy,8225,https://su2code.github.io,https://github.com/su2code/SU2/issues/591,1,['Energy'],['Energy']
Energy Efficiency,". Start with a CFL around 10 and converge the implicit system with LINEAR_SOLVER_ITER= 10 for each nonlinear iteration (FGMRES + ILU0 recommended). Activate the CFL adaption with. ```; % Parameters of the adaptive CFL number (factor down, factor up, CFL min value,; % CFL max value ); CFL_ADAPT= YES; CFL_ADAPT_PARAM= ( 0.1, 2.0, 10.0, 1e10); ```. It is important that the linear solve behaves well for each nonlinear iteration, so if this does not converge immediately, adjust the tolerance or number of linear iterations. Roe seems very stable, but some of the other upwind schemes or centered schemes may require improved Jacobian accuracy (to recover fast convergence) with:. ```; USE_ACCURATE_FLUX_JACOBIANS= YES; CENTRAL_JACOBIAN_FIX_FACTOR= 4.0; ```. ### RANS; Due to the segregated approach for the turbulence models, you have to be more conservative with the CFL adaption. All else is the same as above, but I recommend. ```; % Parameters of the adaptive CFL number (factor down, factor up, CFL min value,; % CFL max value ); CFL_ADAPT= YES; CFL_ADAPT_PARAM= ( 0.1, 1.2, 10.0, 1e3); ```. Most inviscid/laminar cases that I have tested so far converge to machine precision within a couple of hundred iterations. RANS cases within a few thousand. Ultra fine RANS meshes can still slow things down (MG could help there), but otherwise, speedups of an order of magnitude (or more) are possible for most problems. Experiment yourselves.. sometimes you can get even more performance, sometimes less, case depending. I could use help testing this one with your cases, since I think almost all regression tests will change. As a start, I have run all of the NASA TMR 2D bump-in-channel cases. Everything looks good with that (see figures). I have also checked that the inviscid and laminar MMS give 2nd-order accuracy properly. ![bump_cd_gridconv](https://user-images.githubusercontent.com/4896083/64910870-09f36b00-d6d0-11e9-9e1c-553fd09b42c8.png); ![bump_cf_0p63_gridconv](https://user-images.githu",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/790:2719,adapt,adaptive,2719,https://su2code.github.io,https://github.com/su2code/SU2/pull/790,1,['adapt'],['adaptive']
Energy Efficiency,". Trying to process multiple edges instead of multiple variables has all the problems I mentioned for the gradients, so again we use the trick of templating on the number of variables.; ```C++; template<size_t nVar>; void computeLimiters_impl(size_t nPoint,; size_t nDim,; const vector<size_t>& colorStart,; const vector<size_t>& edgeIdx,; const vector<pair<size_t,size_t> >& connectivity,; const Matrix& coords,; const Matrix& phi,; const VectorOfMatrix& grad,; Matrix& phiMax,; Matrix& phiMin,; Matrix& limiter); {; // initialize; #pragma omp parallel for schedule(dynamic,TARGET_CHUNK_SIZE); for(size_t iPoint=0; iPoint<nPoint; ++iPoint); {; #pragma omp simd; for(size_t iVar=0; iVar<nVar; ++iVar); {; phiMax(iPoint,iVar) = phi(iPoint,iVar);; phiMin(iPoint,iVar) = phi(iPoint,iVar);; limiter(iPoint,iVar) = 2.0;; }; }. // find min and max neighbor; for(size_t color=0; color<colorStart.size()-1; ++color); #pragma omp parallel for schedule(dynamic,CHUNK_SIZE); for(size_t k=colorStart[color]; k<colorStart[color+1]; ++k); {; #if SORT_BY_COLOR==1; size_t iEdge = k;; #else; size_t iEdge = edgeIdx[k];; #endif. size_t iPoint = connectivity[iEdge].first;; size_t jPoint = connectivity[iEdge].second;. // some hand-holding needed for simd min/max with gcc,; // one of the min/max operands needs to be on the stack; // (so the compiler knows the two do not overlap?); double phi_i[nVar], phi_j[nVar];. #pragma omp simd; for(size_t iVar=0; iVar<nVar; ++iVar); {; phi_i[iVar] = phi(iPoint,iVar);; phi_j[iVar] = phi(jPoint,iVar);; }. #pragma omp simd; for(size_t iVar=0; iVar<nVar; ++iVar); {; phiMax(iPoint,iVar) = max(phiMax(iPoint,iVar), phi_j[iVar]);; phiMin(iPoint,iVar) = min(phiMin(iPoint,iVar), phi_j[iVar]);; phiMax(jPoint,iVar) = max(phiMax(jPoint,iVar), phi_i[iVar]);; phiMin(jPoint,iVar) = min(phiMin(jPoint,iVar), phi_i[iVar]);; }; }. for(size_t color=0; color<colorStart.size()-1; ++color); #pragma omp parallel for schedule(dynamic,CHUNK_SIZE); for(size_t k=colorStart[color]; k<colorStart[",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/789#issuecomment-530593912:4268,schedul,schedule,4268,https://su2code.github.io,https://github.com/su2code/SU2/issues/789#issuecomment-530593912,2,['schedul'],['schedule']
Energy Efficiency,"..654ba3dfc207e25c31da9c09860224ad4044a610), which was the original branch merged in #724. . Unfortunately, given that during this time both #753 and #774 were merged, the tests are failing now. Particularly, the disc_adj_fsi case runs into a segfault in `CDiscAdjSolver::ExtractAdjoint_CrossTerm_Geometry`, when trying to execute ; `geometry->node[iPoint]->GetAdjointCoord(Solution_Geometry);`. . I believe this is related to the changes to the index based recording introduced in #774, as the code was running before into the same problem in `CDiscAdjSolver::ExtractAdjoint_CrossTerm`, and now goes beyond this point having changed the Get routine into `direct_solver->GetNodes()->GetAdjointSolution_intIndexBased(iPoint,Solution);`. Currently, there is no `GetAdjointCoord_intIndexBased` or similar available, and its implementation requires some constructs for the indices. Therefore, I would like to ask for support from @oleburghardt and @pcarruscag to make this work with their changes. ## Related Work; #724 involuntarily removed the discrete adjoint FSI cases from the regression tests.; Branch [fix_discadjfsi](https://github.com/su2code/SU2/tree/fix_discadjfsi) successfully recovers the functionality removed.; #774 introduced relevant changes to the adjoint solver that are making.; #753 was merged and, although I tried to adapt to it, I can't guarantee it's working correctly. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [x] My contribution is commented and consistent with SU2 style.; - [x] I have added a test case that demonstrates my contribution, if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/803:1726,adapt,adapt,1726,https://su2code.github.io,https://github.com/su2code/SU2/pull/803,1,['adapt'],['adapt']
Energy Efficiency,"0.27 and the Cd is negative. Here follows a summary of what I have done. I have used several (multiblock structured) meshes:; - Gmsh (1M cells), SU2 and CGNS format; - ICEM (10M cells), CGNS format. At the preprocessing stage when computing the projection area of the EBW in the z-plane, I noticed that the meshes generated by Gmsh gave a wrong projection (~30 m2 instead of ~40 m2!).; I increased the height of the first cell in the boundary layer (which was set to match y+ ~ 1) and the problem disappeared when y+ got close to 30. Of course, this mesh is not usable without wall functions...; However, it does not seem to be the only problem since:; - the ICEM mesh does not converge to the expected value of Cl; - a colleague ran both (Gmsh and ICEM) meshes with identical settings on the commercial solver CFD++ and got the expected results (Cl = [0.4;0.5]). I also tried to tune these different numerical parameters, without success:; - ROE (2nd order with Vankatakrishnan/Vankatakrishnan-Wang limiter) and JST numerical schemes; - Green-Gauss or Weighted Least Square for gradients; - LU_SGS and ILU linear solver preconditionners. To make sure that SU2 was correctly compiled, I also:; - ran those simulations on SU2 v6.0.0 and v4.3.0, both compiled on Linux. I got the same results in both cases; - ran the Onera M6 test case provided with SU2; - created the same mesh that I used for the EBW with my Gmsh script but around the Onera M6 (I just changed the height of the first cell which is smaller for the M6 than for my wing). I recovered the expected results. Finally, I also ran the case with the Euler equations, on the EBW meshed with Gmsh, and recovered the expected results. In summary, I have tried several meshes from different software, with different numerical parameters on different SU2 versions, but always got bad results when solving RANS equations.; Particularly, the Gmsh mesh preprocessing on SU2 gave a bad z-projection of the EBW.; However, the same meshes gave converge",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/533:1434,Green,Green-Gauss,1434,https://su2code.github.io,https://github.com/su2code/SU2/issues/533,1,['Green'],['Green-Gauss']
Energy Efficiency,"04. ## Validation and Verification; - V&V of features that lack coverage (i.e. a particular fluid model, design variable, etc.), followed by regression test and ideally tutorial #581; - Put the V&V cases under regression to ensure they are up to date (similar to what is done with tutorials). ## Testing and test cases; - More unit tests #698; - Cleanup of TestCases to make them ""Minimum working examples"" (no redundant options, no duplication of descriptions from the config template, etc.).; - ""Obscure"" features (""things that SU2 does"" to some extent but are: incomplete, not validated / regression-tested, not documented) cleanup obsolete examples in TestCases, and identify features lacking test coverage, decide what to do with those features. ## Code maintenance; - Better support / documentation for building SU2 directly on Windows. #1468; - Replacing the legacy output #1316; - General C++ cleanup #1218; - Deprecate legacy build system. ## Robust convergence; - Multigrid issues on unstructured grids and less robust with MPI in general e.g. #1362 #1549; - Reduced stability of fluid-fluid interfaces #1414; - Reduced stability of periodic boundary conditions #1467; - Convergence in poor quality meshes, or anisotropically adapted. ## Customization; - More flexible outputs (user-defined #1478, consistent SCREEN and HISTORY #1493, file output frequency #1539); - Python wrapper: expose more inputs to allow e.g. time-dependent boundary conditions; tutorials. ## Optimization; - Add SU2_DOT to python wrapper, refactor to use CMeshSolver #1300; - Allowing more inputs as design variables.; - Overhaul the entire optimization framework #733; - Try to use FADO in more cases to assess the impact of removing the existing shape_optimization.py; - Improve mesh deformation method (maintain quality, prevent intersections, etc.). ## Completely new development areas; - Overset meshes.; - GPU.; - Polygonal meshes.; - Adaptive mesh refinement (some external possibilities possible, e.g. #948).",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1487:2811,Reduce,Reduced,2811,https://su2code.github.io,https://github.com/su2code/SU2/issues/1487,4,"['Adapt', 'Reduce', 'adapt']","['Adaptive', 'Reduced', 'adapted']"
Energy Efficiency,"1) after you install msmpi, you should modify environment Variable of MSMPI_LIB64, you can type **set MSMPI_LIB64=\\%MSMPI_LIB64%** in cmd or **$env:MSMPI_LIB64=""\\""+$env:MSMPI_LIB64** in powershell, then you can build code like ""python meson.py build -Denable-tecio=false -Denable-autodiff=true --prefix=D:\SU2\executable"", it will work this time;; 2)after Configuration, you should find the file named ""build.ninja"" in folder called ""build"", then open it as a text editor, you can look for string ""**-l\\\\**"" through the entire file, you wiil find several of strings like ""-l\\\\D:\\\\mpi\\\\Microsoft_SDKs\\\\MPI\\\\Lib\\\\x64\\\\msmpi"", it's the path of msmpi installation, it may be a little different in your pc, then you should replace all strings with ""D:\\\\mpi\\\\Microsoft_SDKs\\\\MPI\\\\Lib\\\\x64\\\\msmpi.lib"", it's path of **msmpi.lib**, please use your own path;; 3) Last ,type **ninja -C build install** to compile，this time it will be all right.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1471#issuecomment-997986082:188,power,powershell,188,https://su2code.github.io,https://github.com/su2code/SU2/issues/1471#issuecomment-997986082,1,['power'],['powershell']
Energy Efficiency,"42deff0f9524ae0/Common/src/grid_adaptation_structure.cpp#L3640) of `Common/src/grid_adaptation_structure.cpp` below:. 	/*--- Selection of the elements to be adapted ---*/; 	threshold = 0.999;; 	nElem_real = 0;; 	while (nElem_real <= max_elem) {; 		for (iElem = 0; iElem < geometry->GetnElem(); iElem ++); 			if ( Sensor[iElem] >= threshold && !geometry->elem[iElem]->GetDivide() ) {; 				if (geometry->elem[iElem]->GetVTK_Type() == TRIANGLE) nElem_real = nElem_real + 3;; 				if (geometry->elem[iElem]->GetVTK_Type() == QUADRILATERAL) nElem_real = nElem_real + 3;; 				if (geometry->elem[iElem]->GetVTK_Type() == TETRAHEDRON) nElem_real = nElem_real + 7;; 				geometry->elem[iElem]->SetDivide(true);; 				if (nElem_real >= max_elem) break;; 			}	; 		threshold = threshold - 0.001;; 	}. As you can see, if all of the elements are hexahedral, the threshold will keep decreasing but `nElem_real` will never increase, and the loop will never end. This is an easy fix, and I've already fixed it on a local branch. But I'm also wondering why grid adaptation doesn't work for hexahedra. It's not just this section of code that doesn't work. There's other sections too. One of the biggest ones is at [lines 2369-2386](https://github.com/su2code/SU2/blob/22fa337afd26a44234344483142deff0f9524ae0/Common/src/grid_adaptation_structure.cpp#L2369) of `Common/src/grid_adaptation_structure.cpp`. In that section, all hexahedra are explicitly _removed_ from the grid adaptivity process. This is rather confusing, because there is a **lot** of code in the CGridAdaptation class that is set up for adaptation of hexahedra. The [AIAA paper from 2013](https://arc.aiaa.org/doi/abs/10.2514/6.2013-287) even dedicates a whole paragraph to explaining the hexahedral grid adaptation. I understand that a pure hex grid can be a poor case for adaptive grid refinement, but I would like to try the grid adaptivity on a hybrid mesh (with hexes and tets). Is there some reason that grid adaptivity for hexahedra is ""turned off""?",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/487:1485,adapt,adaptation,1485,https://su2code.github.io,https://github.com/su2code/SU2/issues/487,7,['adapt'],"['adaptation', 'adaptive', 'adaptivity']"
Energy Efficiency,"59208-effb0643-a903-48d4-9ef2-3b46162ad5f8.png). From [Running cases with CFD of NASA TMR](https://turbmodels.larc.nasa.gov/noteonrunning.html) : ""In the equation above, the![image](https://user-images.githubusercontent.com/50565314/148731540-ace2cac5-4168-48d8-9125-c053806ba463.png) term is **sometimes ignored for non-supersonic speed flows**, and the second term in parentheses is identically zero for incompressible flows."" And, from [SST Turbulence model of NASA TMR](https://turbmodels.larc.nasa.gov/sst.html) : ""**When the ![image](https://user-images.githubusercontent.com/50565314/148762159-e2b08305-e205-4ffd-9ec1-e9de19cda42d.png) term is ignored in ![image](https://user-images.githubusercontent.com/50565314/148762216-7e565ca3-856d-4c18-8e16-c9ad780452b8.png) in the momentum and energy equations** and the production term is approximated by ![image](https://user-images.githubusercontent.com/50565314/148762331-d102ea3b-b5fe-42d3-aa83-ffa0f18e3104.png), a modified naming convention should be employed : **SSTm**"". In the SU2 source code( line 142 in [SU2_CFD/src/numerics/flow/flow_diffusion.cpp](https://github.com/su2code/SU2/blob/master/SU2_CFD/src/numerics/flow/flow_diffusion.cpp)), The turbulence kinetic energy of the stress tensor is always calculated as 0. I don't know who, someone comments as ; ""// TODO why ignore turb_ke?""; This comment existed until SU2 v.7.1.0 to SU2 v.7.2.1(I'm not sure the same about the bellow SU2 v710). I guess the SST model of SU2 is 'SST' not 'SSTm'. Then, it should be used ![image](https://user-images.githubusercontent.com/50565314/148767053-79a012e3-1061-46b9-b432-359b7b04969f.png) in the stress tensor of the momentum and energy equations. The code always ignores the turbulence kinetic energy to compute the stress tensor for the momentum and energy equation.; Is it under maintenance? . Extra question) Someone working to implement for other kinds of SST(like SST-V, SST-Vm, SST-2003, SST-2003m, ... )? . Thank you for reading. ; </div>",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1551:4912,energy,energy,4912,https://su2code.github.io,https://github.com/su2code/SU2/issues/1551,4,['energy'],['energy']
Energy Efficiency,"88-5 for SST and https://doi.org/10.2514/6.1992-439 for SA. Validation test cases will be uploaded in the following days. . The most important results can be found in the pdf of my presentation at the SU2 Conference 2022. https://polimi365-my.sharepoint.com/:b:/g/personal/10507725_polimi_it/EUswl9Jw0XhIuozrOjXqX6sBdscM30lRZ7mwMZcr5anvyA?e=41db5P. One recent result is the application of the transition model to the Sickle wing test case for -2.67° of the angle of attack. SST+LM2015; ![Cf](https://user-images.githubusercontent.com/43813346/203034422-5a7fb987-208c-4da6-8282-5c912e671dbc.png). SA+LM2015; ![Cf](https://user-images.githubusercontent.com/43813346/203034460-7719f3ce-6674-4281-83fd-82ce064c452a.png). The lower surface is represented on the left, whereas the upper surface is on the right. At the moment the wind tunnel walls have not been taken into account. This can explain the spanwise shift of the transition with respect to the experimental results. More results are incoming. . Please, any suggestions on how to clean up the code or on how to make it more efficient are very well accepted. . ## Related Work; Work is related to the PR #1751. It extends it to SA turbulence model and includes cross-flow effects (LM2015) and turbulence index computations. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [ ] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [x] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1810:2440,efficient,efficient,2440,https://su2code.github.io,https://github.com/su2code/SU2/pull/1810,1,['efficient'],['efficient']
Energy Efficiency,": ffff9ded72916460 R15: ffff9dec7fa9b980; [3042206.619653] FS: 00002b8f7179d840(0000) GS:ffff9e0320040000(0000) knlGS:0000000000000000; [3042206.628899] CS: 0010 DS: 0000 ES: 0000 CR0: 0000000080050033; [3042206.635520] CR2: 0000000000000040 CR3: 0000001691b12000 CR4: 00000000001607e0; [3042206.643699] Call Trace:; [3042206.646631] [<ffffffffb1b46d07>] __audit_inode+0x1d7/0x3f0; [3042206.653063] [<ffffffffb1c6d44b>] do_last+0xd7b/0x1380; [3042206.659009] [<ffffffffb21b6bb0>] ? __mutex_unlock_slowpath+0x70/0xa0; [3042206.666409] [<ffffffffb1c6db1d>] path_openat+0xcd/0x5a0; [3042206.672546] [<ffffffffb1c6f4dd>] do_filp_open+0x4d/0xc0; [3042206.678683] [<ffffffffb1c7dd47>] ? __alloc_fd+0x47/0x180; [3042206.684917] [<ffffffffb1c5aba4>] do_sys_open+0x124/0x220; [3042206.691151] [<ffffffffb1c5acbe>] SyS_open+0x1e/0x30; [3042206.696899] [<ffffffffb21c539a>] system_call_fastpath+0x25/0x2a; [3042206.703812] Code: 00 00 55 48 89 e5 41 55 49 89 f5 48 8d 77 3c 41 54 41 89 cc 53 48 89 fb 48 83 ec 20 65 48 8b 04 25 28 00 00 00 48 89 45 e0 31 c0 <48> 8b 42 40 48 89 47 20 48 8b 42 28 8b 40 10 89 47 28 0f b7 02; [3042206.725757] RIP [<ffffffffb1b3fd8e>] audit_copy_inode+0x2e/0xd0; [3042206.732681] RSP <ffff9df884f7fc20>; [3042206.736776] CR2: 0000000000000040; [3042206.743748] ---[ end trace de1d7ae247551ab1 ]---; [3042206.749109] Kernel panic - not syncing: Fatal exception; [3042207.109891] Kernel Offset: 0x30a00000 from 0xffffffff81000000 (relocation range: 0xffffffff80000000-0xffffffffbfffffff); ; ; It seems that this may be due to temporary locking files being created and deleted quickly in the process of the parallel write, e.g., files like restart_flow.dat.locktest.13. ; ; The errors happen frequently, but for a given dataset may happen after a different number of iterations in replicate runs. Reducing the amount of data written to disk, for example by turning off the writing of restart files or increasing the output write interval greatly reduces the frequency of the crashes.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/2184:4303,reduce,reduces,4303,https://su2code.github.io,https://github.com/su2code/SU2/issues/2184,1,['reduce'],['reduces']
Energy Efficiency,"; 3.) Removal of AUSMPW+ scheme; ; ## Related Work; This work is a follow-up and a cleaner version of the work in the branch **feature_NEMO_AUSMPLUSM**. I will delete both branches after merge. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [X] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary. ### Benchmark. I have conducted a comparison between the AUSM and AUSM+M for a 2D axisymmetric non-equilibrium flow over a cylinder with a 0.1 meter diameter and a freestream of M=24, P = 10.23 N and T = 224.5 K. ![image](https://user-images.githubusercontent.com/29612207/192250118-eb074187-3002-468a-8406-b01047c790bd.png); The left image represents the converged 2nd order solution using AUSM+M and the right image using the standard AUSM scheme. The new AUSM+M scheme enables to get rid of the pressure oscillations near the stagnation area. ![image](https://user-images.githubusercontent.com/29612207/192250632-85b64454-c54c-4815-8664-f72fc17d705d.png); Temperature at the stagnation line (solid line is AUSM+M and dashed line is AUSM). ![image](https://user-images.githubusercontent.com/29612207/192250763-ee3b96db-b42f-4ebe-a256-bcb9043ecb24.png); ![image](https://user-images.githubusercontent.com/29612207/192250910-2fae95b2-eea9-4b78-96d3-0f80bb02486e.png); Pressure at the stagnation line and close-up at the stagnation point (solid line is AUSM+M and dashed line is AUSM)",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1773:1356,meter,meter,1356,https://su2code.github.io,https://github.com/su2code/SU2/pull/1773,1,['meter'],['meter']
Energy Efficiency,"; try :; su2amg.amg_call(config_amg); except:; raise RuntimeError , ""\n##ERROR : Call to AMG failed.\n""; ; if not os.path.exists(config_amg['mesh_out']):; raise RuntimeError , ""\n##ERROR : Mesh adaptation failed.\n""; ; if not os.path.exists(""current.itp.solb""):; raise RuntimeError , ""\n##ERROR AMG: Solution interpolation failed.\n"" ; ; #--- Convert output from Inria mesh format to su2; # Deal with markers; ; save_markers = mesh['markers']; del mesh; ; # Read Inria mesh; mesh = su2amg.read_mesh(config_amg['mesh_out'], ""current.itp.solb""); mesh['markers'] = save_markers; ; current_mesh = ""ite%d.su2"" % global_iter; current_solution = ""ite%d.dat"" % global_iter ; ; su2amg.write_mesh(current_mesh, current_solution, mesh); ; if not os.path.exists(current_mesh) or not os.path.exists(current_solution) :; raise RuntimeError , ""\n##ERROR : Conversion to SU2 failed.\n"". else : # Use pyAmg interface; ; ; #--- Load su2 mesh ; ; mesh = su2amg.read_mesh(current_mesh, current_solution); ; #--- Create sensor used to drive the adaptation; ; sensor_wrap = su2amg.create_sensor(mesh, adap_sensor); ; mesh['sensor'] = sensor_wrap['solution']; ; sys.stdout.write(' %s Generating adapted mesh using AMG\n' % pad_cpt); ; mesh_new = su2amg.amg_call_python(mesh, config_amg); ; #--- print mesh size; ; sys.stdout.write(' %s AMG done: %s\n' % (pad_nul, su2amg.return_mesh_size(mesh_new))); ; mesh_new['markers'] = mesh['markers']; mesh_new['dimension'] = mesh['dimension']; ; current_mesh = ""ite%d.su2"" % global_iter; current_solution = ""ite%d.dat"" % global_iter; ; su2amg.write_mesh(current_mesh, current_solution, mesh_new); ; #--- Run su2; ; log = 'ite%d.SU2'%global_iter; stdout_hdl = open('%sstdout'%log,'w') # new targets; stderr_hdl = open('%sstderr'%log,'w'); ; success = False; val_out = [False]; ; sys.stdout.write(' %s Running CFD\n' % pad_nul); ; try: # run with redirected outputs; ; sav_stdout, sys.stdout = sys.stdout, stdout_hdl ; sav_stderr, sys.stderr = sys.stderr, stderr_hdl; ; current_solutio",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/606#issuecomment-504636643:10189,sensor,sensor,10189,https://su2code.github.io,https://github.com/su2code/SU2/issues/606#issuecomment-504636643,2,"['adapt', 'sensor']","['adaptation', 'sensor']"
Energy Efficiency,"> * From the history output it seems that the maximum CFL value is not being reached, even for small CFL values the update seems to stop one step before max. There was a small factor applied to keep it above and below the CFL min and max (1.001, 0.999), respectively. But I have removed that, since it is not necessary. Btw, I have added the ability to print the min/max time step, and min/max/avg CFL to the screen by adding MIN_DELTA_TIME, MAX_DELTA_TIME, MIN_CFL, MAX_CFL, AVG_CFL to the SCREEN_OUTPUT. > * I still see some residual oscillations with high CFL values (100-1000), I think the issue is that despite the oscillations the linear solver still converges fine, and so the reduction never kicks in. There are reduction checks for both the linear and nonlinear residuals, but they likely still need some tuning (the factors were just empirical from my tests). I am also finding in my tests that if I am having trouble with a particular RANS case, sometimes it is most effective to turn off the adaption and go for a fixed CFL of 250, 500, or even 1000, if stable (don't forget you may need NUM_METHOD_GRAD_RECON= LEAST_SQUARES for that to be stable).",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/790#issuecomment-541376224:1004,adapt,adaption,1004,https://su2code.github.io,https://github.com/su2code/SU2/pull/790#issuecomment-541376224,1,['adapt'],['adaption']
Energy Efficiency,"> 2, g. I follow your instruction and try to rebuil it. The size of SU2_CFD.exe reduces to 596MB. Maybe I need more optimization options.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/754#issuecomment-519749680:80,reduce,reduces,80,https://su2code.github.io,https://github.com/su2code/SU2/issues/754#issuecomment-519749680,1,['reduce'],['reduces']
Energy Efficiency,"> ; > ; > @TobiKattmann - I was just reading your slides on [multizone](https://su2foundation.org/wp-content/uploads/2020/06/Kattmann.pdf), when I noticed that you mention python scripts not working for multizone, and I guess that would include the mesh adaptation scripts... is this still the case? Thank you!. Hi @timjim333, I have to admit I am not fully (i.e. not 😉) aware of the mesh adaption capabilities of/with SU2. And there is quite a bit to read in this issue which i won't really have time to until the weekend but here's already my quicktake:; If you can run the intended feature (with multizone) manually (i.e. a c++ binary) and it works, then probably the python script 'just' sets up some folders and does clever choices for parameters that are put into new .cfg files which are run afterwards. So just orchestrating. There it is likely that it is not fixed with multizone by now but that is usually not too difficult to fix ... it is tedious though. . If you think that I understand what you want to do specifically with the posts in this thread then I will read through that and answer again, otherwise I would not mind a specification 👍",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/948#issuecomment-765021250:254,adapt,adaptation,254,https://su2code.github.io,https://github.com/su2code/SU2/issues/948#issuecomment-765021250,2,['adapt'],"['adaptation', 'adaption']"
Energy Efficiency,"> ; > ; > Dark mode?; > ""Is it possible to learn this power?"". 🧙 Sure, if you just go to your front page (i.e. just github.com) there should be a big button directly on the right side. ; Or Settings->Appearance->Dark. Enjoy :)",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1129#issuecomment-743130745:54,power,power,54,https://su2code.github.io,https://github.com/su2code/SU2/pull/1129#issuecomment-743130745,2,['power'],['power']
Energy Efficiency,"> ; > ; > I'll adapt one of the existing Testcases to use this feature. Well that was a lie. I thought it would be a good idea to adapt the 2D cht streamwise periodic case but I forgot that the used mesh is used for a streamwise periodic primal, FD and DA case as well as HeatTransfer BC Testcase (and that is a bit of work tbh). And for the periodic BC I had to change the mesh (adding new markers). As we do not have a single standalone (always run in a CHT setup) heat-equation Testcase, I went ahead and cut out the solid zone only and made that a Testcase. I already merged the gmsh geo and .su2 over at su2code/Testcases/pull/76 . If this is not liked I can of course do sth different. Note that the new Testcase takes ~2s to complete its 750 iterations until convergence.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1382#issuecomment-927735843:15,adapt,adapt,15,https://su2code.github.io,https://github.com/su2code/SU2/pull/1382#issuecomment-927735843,2,['adapt'],['adapt']
Energy Efficiency,"> > > If you are planning to touch the heat solver, might I suggest you, @bigfooted, @danielmayer, and me get together like the power rangers and do the scalar solver thing properwise without grafting code from 10 versions ago into develop?; > > > The ideia would be to create a CFVMSolverBase (in the style of the one for flow solvers) to cover:; > > > ```; > > > * Turbulence solvers;; > > > ; > > > * Heat solver;; > > > ; > > > * Radiation solver;; > > > ; > > > * General passive/active scalar solvers;; > > > ; > > > * Eventual transition solvers;; > > > ```; > > > ; > > > ; > > > The starting point would be the current base turbulence solver.; > > ; > > ; > > I'm in. The heat solver should be easy to integrate into a generic framework if the framework provides a Laplacian/diffusion coefficient (which will then turn into thermal diffusivity). Apart from that, there's nothing very heat specific in the heat solver :); > ; > Me too. I'm already cleaning up our code a bit so it's easier to see the differences and similarities. Sure! Let's do this.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1226#issuecomment-794646465:128,power,power,128,https://su2code.github.io,https://github.com/su2code/SU2/pull/1226#issuecomment-794646465,1,['power'],['power']
Energy Efficiency,"> > For example Green-Gauss gradients have an exclusion for internal boundaries but not for nearfield ones.; > ; > @pcarruscag So, I need to make something similar to internal boundaries? The flowfield looked reasonable though except when I use the VENKATAKRISHNAN limiter where the nearfield boundary seemed to act like half permeable wall. I am doing some trials after `NEARFIELD_BOUNDARY` is excluded in `computeGradientsGreenGauss` like `INTERNAL_BOUNDARY`. The result looks more reasonable and also the issue I encountered with VENKATAKRISHNAN limiter appears to have been fixed. Can I add changes in this PR or should I create a new PR to address it?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1329#issuecomment-899009860:16,Green,Green-Gauss,16,https://su2code.github.io,https://github.com/su2code/SU2/pull/1329#issuecomment-899009860,1,['Green'],['Green-Gauss']
Energy Efficiency,"> > Hi @mheimgartner, thanks for the PR. I think this is a good use of the fluidmodel classes. There seems to be a lot of potential to generalize some aspects of Mixture_Fluid_Model and CNEMOGas. Im not sure what the best plan to approach this may be, but I think its something worth discussing.; > ; > @WallyMaier I think there might be some overlap in fluid properties like mixing models as well, but I do not know what information you have available in a library like mutation++. I assume that it has general fluid property calculations and mixing rules available that could be used (wilke rule, kinetic models, etc)?. @bigfooted Thats correct! Both the CNEMOGas fluid models (SU2TCLib and CMutation++) have thermodynamic properties and transport properties. I imagine there would be a smart way to reduce overlap, though Im not sure what the best approach would be.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1332#issuecomment-889993718:802,reduce,reduce,802,https://su2code.github.io,https://github.com/su2code/SU2/pull/1332#issuecomment-889993718,1,['reduce'],['reduce']
Energy Efficiency,"> > Hi @rois1995 any progress? Would be very interesting to add this to develop, looking forward to using it actually.; > ; > Hi @bigfooted, unfortunately I do not have enough time/computational power to perform a proper validation. I only tried something with a NACA0021 at 17 deg and 60 deg and they were promising, at least for the DDES implementation. The SAS ones are not that good. I'll upload some post-processing as soon as I have the time to do so. Hi @rois1995, I believe there is an error or a typo in the Babu's paper in the Q_SAS source term and in turn in your implementation, which may be the reason for the poor performance in SAS results. . ![image](https://github.com/user-attachments/assets/5791d344-967a-4cc5-b512-457b7fe61435). This term changes units depending on the output of the max function, which doesn't make any sense. I believe the terms in the max function should be divided by omega^2 and k^2 instead of omega and k, respectively. Which is exactly how it is done in [https://resolver.tudelft.nl/uuid:5d23e2a6-5675-450d-bf3d-1dd40d736cae](url). I will try some of the benchmark cases in these papers when I have the time. Let me know what you think.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2150#issuecomment-2447067474:195,power,power,195,https://su2code.github.io,https://github.com/su2code/SU2/pull/2150#issuecomment-2447067474,1,['power'],['power']
Energy Efficiency,"> > If you are planning to touch the heat solver, might I suggest you, @bigfooted, @danielmayer, and me get together like the power rangers and do the scalar solver thing properwise without grafting code from 10 versions ago into develop?; > > The ideia would be to create a CFVMSolverBase (in the style of the one for flow solvers) to cover:; > > ```; > > * Turbulence solvers;; > > ; > > * Heat solver;; > > ; > > * Radiation solver;; > > ; > > * General passive/active scalar solvers;; > > ; > > * Eventual transition solvers;; > > ```; > > ; > > ; > > The starting point would be the current base turbulence solver.; > ; > I'm in. The heat solver should be easy to integrate into a generic framework if the framework provides a Laplacian/diffusion coefficient (which will then turn into thermal diffusivity). Apart from that, there's nothing very heat specific in the heat solver :). Me too. I'm already cleaning up our code a bit so it's easier to see the differences and similarities.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1226#issuecomment-794344854:126,power,power,126,https://su2code.github.io,https://github.com/su2code/SU2/pull/1226#issuecomment-794344854,1,['power'],['power']
Energy Efficiency,"> > Yes, AFAIK. That is why it is recommended to Pin by SHA; > ; > OK! I see your point here! Indeed the reduced permissions would help if a malicious action is executed!. 👍",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1661#issuecomment-1180170065:105,reduce,reduced,105,https://su2code.github.io,https://github.com/su2code/SU2/pull/1661#issuecomment-1180170065,1,['reduce'],['reduced']
Energy Efficiency,"> @aeroamit What does temperature do? Could you compute the heat flux from the temperature in e.g. paraview? Is the root cause the computation of the energy equation or the computation of heat flux?. Hi @bigfooted, Temperature boundary condition for wall corresponds to Isothermal wall BC (cold wall condition). This condition is applied to obtain heat flux unlike adiabatic wall (no heat transfer). ; The snapshot, I posted from ParaView shows heat flux variation with x. This is obtained directly from surface_flow.vtu. You can simply go to Filters -> Data Analysis -> Plot data and select Points_X for X Array and heat flux in variable. Regarding computing heat flux from temperature field, I am not sure, but ParaView is having calculator utility as well as option to compute gradient of unstructured grid (from there you can obtain temperature gradients in 3 directions). ; Coming to last question, root cause of the problem - @WallyMaier has run the case yesterday, we will be posting some details soon.; Best ; Amit",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1106#issuecomment-741947377:150,energy,energy,150,https://su2code.github.io,https://github.com/su2code/SU2/pull/1106#issuecomment-741947377,2,['energy'],['energy']
Energy Efficiency,"> @antares190 running some more tests, I'm not sure that the adapted grid is still on the surface any more, especially on the trailing edge. Or perhaps it is, but it has lost associativity with its neighbour? This also seems to be the case for the fuselage, where cells seem to be jumping to the opposite side of the aircraft. Did you experience this issue too?; > ![interior_ite1](https://user-images.githubusercontent.com/16842258/105381127-053eaf80-5c52-11eb-8781-707c6438432c.png); > ; > Regarding separating zones, do you mean through SU2's multizone? In this case, did you apply the aircraft surface as a separate zone? Or a 'core' region around the aircraft? Thanks for your thoughts! Kind regards, Tim. When I was referring to separated zones I mean in the mesh, so I'm not referring to SU2 multizone. This is an example I took online (it is apparently a structured hexa mesh, so not the best example for mesh adaptation, hexa not supported), but I hope it explains the different zones at mesher level.; By defining different zones for top and bottom of the wing (and wing tip), the edges, leading and trailing as well as the one on the tip will be maintained after mesh adaptation.; In your case I would also suggest to split the body in body top and body bottom so to prevent (or reduce) artifacts in the trailing cone. ![image](https://user-images.githubusercontent.com/41752169/105387785-2e414f00-5c16-11eb-9284-1d18c9a5981f.png)",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/948#issuecomment-764812340:61,adapt,adapted,61,https://su2code.github.io,https://github.com/su2code/SU2/issues/948#issuecomment-764812340,4,"['adapt', 'reduce']","['adaptation', 'adapted', 'reduce']"
Energy Efficiency,"> Anything else on your side @bigfooted ?. @pcarruscag ; I had some small comments, besides that it looks good. ; @EvertBunschoten ; We can look into generalizing and merging the 2D and 3D LUT approach once the flamelet model is also in develop, but this also means changing the LUT file format. There are some open issues like how to best treat lookups that fall outside of the table, and the extention from the slab approach to the trapezoidal map approach would definitely help with the memory consumption. Not a show stopper right now, but would be nice to do this as part of a student project this year.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1825#issuecomment-1407418155:497,consumption,consumption,497,https://su2code.github.io,https://github.com/su2code/SU2/pull/1825#issuecomment-1407418155,1,['consumption'],['consumption']
Energy Efficiency,"> Delta_Time is only set for the flow, and already includes the flow CFL number, so this is just scaling the time step based on the flow and turbulent CFL. But yes, this ratio would always be one (even for adaptive CFL, @economon can correct me if I'm wrong?) because in `CSolver::AdaptCFLNumber()` we have; > ; > ```; > solverFlow->GetNodes()->SetLocalCFL(iPoint, CFL);; > if ((iMesh == MESH_0) && (config->GetKind_Turb_Model() != NONE)) {; > solverTurb->GetNodes()->SetLocalCFL(iPoint, CFL);; > }; > ```; > ; > Maybe Tom had something in mind when storing separate CFL numbers and scaling, but never got around to it so just left them equal? If you want a different turbulent CFL, the option `CFL_REDUCTION_TURB` still exists so you could probably add a `config->GetCFLRedCoeff_Turb()` and see if that helps. @bmunguia is correct.. I was experimenting with adapting the CFLs independently for the two systems to further improve convergence, but did not have time to find a stable solution. So, I left the framework as-is to accommodate this at some point.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/918#issuecomment-603980676:206,adapt,adaptive,206,https://su2code.github.io,https://github.com/su2code/SU2/issues/918#issuecomment-603980676,3,"['Adapt', 'adapt']","['AdaptCFLNumber', 'adapting', 'adaptive']"
Energy Efficiency,"> Do I understand correctly that two gradients are always computed per iteration?; > Is there any downside to using the unweighted LS for viscous flux correction? Is the statement that this type of gradient is better for reconstruction based on your observations or is it one of those well known things?. Yes - the gradient for now is computed twice and stored separately for viscous flows with 2nd-order upwind. Could be combined into one loop eventually. It is known that weighted LSQ / GG is more accurate (see Mavriplis, ""Revisiting the Least-Squares Procedure for Gradient Reconstruction on Unstructured Meshes"" for instance). However, unweighted LSQ is known to be more robust.. so a good compromise is to use it only for the reconstruction step (which is more susceptible to robustness issues than the viscous term) and then use WLSQ or GG for all other gradients in the viscous flux/sources for accuracy. > Sometimes high CFL leads to limit-cycle oscillations of the residuals and the solution is to reduce it, is this something this controller can pick up?; > High CFL also makes the linear systems harder to solve and as Edwin pointed out _somewhere_ there is not much point going above reasonable values with weakly coupled turbulence. Do you think it would be reasonable to build in some feedback from the linear solver (e.g. it is taking too much time or did not converge -> drop the CFL)?. Yes, I would also like to couple it to the linear solver so that we can remove the need to tune that as well. Ideally the user will not need to adjust parameters. There are some things I am going to try for that..",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/790#issuecomment-531890295:1008,reduce,reduce,1008,https://su2code.github.io,https://github.com/su2code/SU2/pull/790#issuecomment-531890295,2,['reduce'],['reduce']
Energy Efficiency,"> Hi @rois1995 any progress? Would be very interesting to add this to develop, looking forward to using it actually. Hi @bigfooted, unfortunately I do not have enough time/computational power to perform a proper validation. I only tried something with a NACA0021 at 17 deg and 60 deg and they were promising, at least for the DDES implementation. The SAS ones are not that good. I'll upload some post-processing as soon as I have the time to do so.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2150#issuecomment-1983515044:186,power,power,186,https://su2code.github.io,https://github.com/su2code/SU2/pull/2150#issuecomment-1983515044,1,['power'],['power']
Energy Efficiency,"> I am not so familiar with turbomachinery but it looks like all spanwisesection initialization is done in CPhysicalGeometry.cpp. I think it initializes in the function ComputeNSpan. This function is called in CDriver like this:; > ; > ```; > geometry[iZone][INST_0][MESH_0]->ComputeNSpan(config[iZone], iZone, INFLOW, true);; > geometry[iZone][INST_0][MESH_0]->ComputeNSpan(config[iZone], iZone, OUTFLOW, true);; > ```; > ; > So you should get an initialized value for inflow and outflow. Maybe you can check what is going on there and see if this function does what is expected. Hi Nijso! Thanks for your suggestion. ; Indeed, CPhysicalGeometry.cpp is where the initialization is done. I'll also report this to the SU2 Turbo Group, to check whether we can find a solution. Currently I just hardcoded a section of that script as follows:. ```; .; .; if(marker_flag == OUTFLOW){; 	nSpanWiseSections[INFLOW - 1] = 57;; 	nSpanWiseSections[OUTFLOW - 1] = 57; ; if(nSpanWiseSections[INFLOW -1] != nSpanWiseSections[OUTFLOW - 1]){; char buf[100];; SPRINTF(buf, ""nSpan inflow %u, nSpan outflow %u"", nSpanWiseSections[INFLOW], nSpanWiseSections[OUTFLOW]);; SU2_MPI::Error(string("" At the moment only turbomachinery with the same amount of span-wise section can be simulated\n"") + buf, CURRENT_FUNCTION);; }; else{; config->SetnSpanWiseSections(nSpanWiseSections[OUTFLOW -1]);; }; }. }. }; void CPhysicalGeometry::SetTurboVertex(CConfig *config, unsigned short val_iZone, unsigned short marker_flag, bool allocate) {; .; .; .; ```. This modification was firstly suggested by @MKursatUzuner but I'm pasting it in here to have another source in case the topic opened in CFD Online gets deleted.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/2203#issuecomment-1900339640:1497,allocate,allocate,1497,https://su2code.github.io,https://github.com/su2code/SU2/issues/2203#issuecomment-1900339640,1,['allocate'],['allocate']
Energy Efficiency,"> I would focus more on discrete adjoint Vs finite differences, the direct mode can be tricky sometimes.; > About the discrepancy, you can try changing the finite difference step (especially if the 20% error is for small derivatives). I have reduced FIN_DIFF_STEP from 0.001 to 0.0001. Discrepancy is about 2% now. Can I consider this is acceptable?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1329#issuecomment-894794184:242,reduce,reduced,242,https://su2code.github.io,https://github.com/su2code/SU2/pull/1329#issuecomment-894794184,1,['reduce'],['reduced']
Energy Efficiency,"> If you are planning to touch the heat solver, might I suggest you, @bigfooted, @danielmayer, and me get together like the power rangers and do the scalar solver thing properwise without grafting code from 10 versions ago into develop?; > ; > The ideia would be to create a CFVMSolverBase (in the style of the one for flow solvers) to cover:; > ; > * Turbulence solvers;; > ; > * Heat solver;; > ; > * Radiation solver;; > ; > * General passive/active scalar solvers;; > ; > * Eventual transition solvers;; > ; > ; > The starting point would be the current base turbulence solver. I'm in. The heat solver should be easy to integrate into a generic framework if the framework provides a Laplacian/diffusion coefficient (which will then turn into thermal diffusivity). Apart from that, there's nothing very heat specific in the heat solver :)",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1226#issuecomment-793978226:124,power,power,124,https://su2code.github.io,https://github.com/su2code/SU2/pull/1226#issuecomment-793978226,1,['power'],['power']
Energy Efficiency,"> In the discrete adjoint we always to a dry run before the real recording, maybe that could be use to recompute the CFL at 0 overhead?. Isn't that what we were doing before? While I also generally wouldn't want to rely on file I/O, my issues with how we had it were ; 1) if the final CFL of the primal solver was large then even adapting in the dry run would have a much lower CFL, which resulted in super slow adjoint convergence making it a huge (or at least more than necessary) bottleneck in optimization/mesh adaptation; 2) sometimes I would get divergence when adapting in the dry run even with converged primal solutions. Storing the CFL would at least recreate the state at primal convergence, which should be stable if the CFL adaptation is reliable. But maybe this idea is better suited for the python wrapper where we could just keep everything in memory.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1036#issuecomment-739075301:330,adapt,adapting,330,https://su2code.github.io,https://github.com/su2code/SU2/pull/1036#issuecomment-739075301,4,['adapt'],"['adaptation', 'adapting']"
Energy Efficiency,"> Regarding ""Fixed Supersonic inlet BC inclusion of TKE,"" does the energy equation include the contribution of turbulent diffusion?. Yeah, I do think so.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2329#issuecomment-2284274624:67,energy,energy,67,https://su2code.github.io,https://github.com/su2code/SU2/pull/2329#issuecomment-2284274624,1,['energy'],['energy']
Energy Efficiency,"> SU2 is a fantastic library, but the build process is really painful to get static linking within another C++ program. CMake is a standard for building C++ projects and would be extremely helpful. Ideally Python wouldn't be necessary to build SU2 or link it with another project. I'm not sure I understand this... the fact that the build system uses python means that it is really painful to configure the build system to emit a static library? (This should absolutely not be the case! Meson has a core option `-Ddefault_library={static|shared|both}` to select what kind of library you want to build, for any library whose build description claims it can support either one. It's a bit like cmake's `-DBUILD_SHARED_LIBS` except much more powerful.). However, as far as I can tell, su2 doesn't mark any of its libraries as public at all (i.e., installable) so maybe that's a moot point. As far as making python be necessary to build the project, I think this mainly boils down to ""I myself use cmake, I have cmake installed, I don't want to install another program when I could use the program I already have"". Is it really that big of a deal, though? The software *does* use it, and it's not that difficult to install TBH (Linux operating systems in particular almost certainly have it installed already).",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1711#issuecomment-1312985406:739,power,powerful,739,https://su2code.github.io,https://github.com/su2code/SU2/issues/1711#issuecomment-1312985406,1,['power'],['powerful']
Energy Efficiency,"> So are things exploding? If you feed in a solution and look at the gradients after the first iteration does it look like the modifications are doing the job?. I am using a very coarse 2D channel flow with the top a wall and bottom a symmetry, left inlet, right outlet (laminar incompressible navier stokes). The line figure is the normal velocity components at the symmetry axis, which should be zero. The black line develop. The red line is only the Green-Gauss correction. The peak at 0.5 is due to the mixed-mesh problem that the GG method has. The blue line is the current PR. ; ![screenshot_velocity](https://github.com/su2code/SU2/assets/7050568/cd4b535b-248d-424f-a7c6-527497a8f01e). ![screenshot_axis](https://github.com/su2code/SU2/assets/7050568/1364b07a-fd25-4ddb-b811-1b4758dad46a)",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2194#issuecomment-1888091034:453,Green,Green-Gauss,453,https://su2code.github.io,https://github.com/su2code/SU2/pull/2194#issuecomment-1888091034,1,['Green'],['Green-Gauss']
Energy Efficiency,"> So modifying the gradient + residual is an improvement and it's just the normals that cause issues? Or the change to the residual is also problematic?. The modification of the Green-Gauss gradients only is working correctly. If I take the normal velocity on the symmetry plane as a performance indicator, then I observe that there is a mean (or maximum) discrepancy $\Delta V$ for develop, which reduces to less than $0.5 \Delta V$ for the new GG.; [edit: additionally, the convergence behavior does not deteriorate for the GG modification]",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2194#issuecomment-1888699276:178,Green,Green-Gauss,178,https://su2code.github.io,https://github.com/su2code/SU2/pull/2194#issuecomment-1888699276,2,"['Green', 'reduce']","['Green-Gauss', 'reduces']"
Energy Efficiency,"> Thank you Yes we plan on contributing more, this commit was more of a test run just to understand the process. I added Dr Yair Mor Yossef and myself as Authors, per your request. However I do not see a button anywhere that says merge pull request (even before changing Authors.md). It should be below this message,You should see the list of 'things that need to be green': Changes Approved, Conversations resolved, and then Checks passed. At the moment I am writing this, the checks are still running. Below the Checks you should see the button ""Squash and Merge"". Once all checks have passed, you can press that button.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2295#issuecomment-2221211665:367,green,green,367,https://su2code.github.io,https://github.com/su2code/SU2/pull/2295#issuecomment-2221211665,1,['green'],['green']
Energy Efficiency,"> This is too hacky, mixing the iteration counts and adding +1 here and there. Doesn't look safe. We should of course first update the iteration count, and then check the convergence criteria for this iteration. ; Now [edit: in develop branch] the +1 is inside the monitor() function and monitor(iter) actually checks if iter+1 fulfills the convergence criterion, which is not what the stopping criterion should be. If we correct this, then all python files that use this have to be re-ordered a bit. I still have to check if there are other places where we make use of the fact that the current iteration is actually Iter+1.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1960#issuecomment-1464359066:265,monitor,monitor,265,https://su2code.github.io,https://github.com/su2code/SU2/pull/1960#issuecomment-1464359066,2,['monitor'],['monitor']
Energy Efficiency,"> To me it looks like the strange behaviour develops from the area in your mesh where the mesh density along the interface is visibily different (north and south of the image shown). I have encountered the same issue with a finer mesh where the mesh density along the interface is more or less uniform:. <img width=""600"" alt=""vawt_fineMesh"" src=""https://github.com/su2code/SU2/assets/81166192/4e6cc10c-676a-4cba-bcb1-a189c23cf599""> . --------------. > Are you able to reproduce this behaviour with any other cases, say a rotating cylinder perhaps?. I have tried a rotating 2D cylinder case with a similar setting. The only differences are that the time step is reduced to a tenth to prevent any numerical oscillations, and the mesh is generated by using Gmsh (for the VAWT case, it was Pointwise). The simulation diverged at the end. The discontinuity around the interface is quite apparent, especially on the upstream part. **Mesh:**; <img width=""600"" alt=""meshAll"" src=""https://github.com/su2code/SU2/assets/81166192/174d0bb7-d9fe-474d-8fea-39f81c215cd3""> ; <img width=""600"" alt=""meshClose"" src=""https://github.com/su2code/SU2/assets/81166192/12d35aa5-f167-455b-929a-0ee6e009e9af""> . **Axial velocity:**; <img width=""480"" alt=""cyl_velX"" src=""https://media1.giphy.com/media/v1.Y2lkPTc5MGI3NjExdmZtdHNoc2JraTRoZDdpbGozb3FyeDJ2ZTl1aXEwYm15YjVpaWN1ayZlcD12MV9pbnRlcm5hbF9naWZfYnlfaWQmY3Q9Zw/82Sq7bFaCUITTYRjns/giphy.gif""> ; **Eddy viscosity:**; <img width=""480"" alt=""cyl_eddyVisc"" src=""https://media4.giphy.com/media/v1.Y2lkPTc5MGI3NjExaHNoc3B2ZjJnOWt1c2JzYTRqazF1aGs5bmd0bmFoZjMxaDl1NmswMiZlcD12MV9pbnRlcm5hbF9naWZfYnlfaWQmY3Q9Zw/nD011ofucZmvRVcg7H/giphy.gif"">",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/2255#issuecomment-2041086476:661,reduce,reduced,661,https://su2code.github.io,https://github.com/su2code/SU2/issues/2255#issuecomment-2041086476,1,['reduce'],['reduced']
Energy Efficiency,"> Yes, AFAIK. That is why it is recommended to Pin by SHA. OK! I see your point here! Indeed the reduced permissions would help if a malicious action is executed!",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1661#issuecomment-1180145667:97,reduce,reduced,97,https://su2code.github.io,https://github.com/su2code/SU2/pull/1661#issuecomment-1180145667,1,['reduce'],['reduced']
Energy Efficiency,"> You are proposing the exact opposite of the conclusion of the paper:; > ; > ""From the above findings, it is **recommended that all three of these terms be included** when running hypersonic, or even supersonic, turbulent flow simulations, especially for flows with shock wave-induced separations.""; > ; > And they clearly say this: ""While the full inclusion of these terms does not always result in predictions that agree better with DNS/experimental data, this is likely caused by the fact that their exclusion cancels out effects of other flaws in the RANS models employed.""; > ; > If your strategy is to get a better match with experiments by neglecting physics terms, then you should rethink your strategy. Thank you for your comment @bigfooted . The above paper is not presented to improve the current k-w SST model. . As you can see in the first post, there is a problem with the high Mach number and freestream turbulence intensity case. If high turbulence kinetic energy(TKE) and Mach number condition, the boundary condition cannot be maintained the imposed value. (I think there seems to be a bug in the temperature calculation using total energy when including the TKE). The introduction of C1 was intended to provide a 'temporary' solution at the level of first aid (simply commenting out conditional statements in code).",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1851#issuecomment-1521383702:974,energy,energy,974,https://su2code.github.io,https://github.com/su2code/SU2/issues/1851#issuecomment-1521383702,4,['energy'],['energy']
Energy Efficiency,"> You may want to remove the string based interface since it's known to be inneficient. When replacing the string-based with index-based look-up methods, the performance improves substantially. The figure below shows the average measured evaluation time (measured with chrono library) vs the number of output variables. It's clear that using index-based look-up methods results in reduced query time, as well as improved scaling. ![scaling_nVars](https://github.com/su2code/SU2/assets/38651601/31252439-ac6e-4f1b-82d4-e13a55d54c98)",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2214#issuecomment-1952521226:381,reduce,reduced,381,https://su2code.github.io,https://github.com/su2code/SU2/pull/2214#issuecomment-1952521226,2,['reduce'],['reduced']
Energy Efficiency,"> You should be able to use CConfig::SetFinestMesh in CDriver::Geometrical_Preprocessing_FVM to initialize this to the coarsest grid that was produced.; > ; > The threshold to stop agglomeration should stay. But you can expose it as a config option if you want. Your suggestion is also valid, but in my opinion it would be more coherent, in terms of code structure, to reduce the finest mesh level whenever we modify the number of multigrid levels. So in CMultiGridGeometry::CMultiGridGeometry add this line of code; `config->SetFinestMesh(iMesh-1);`; after reducing the number of MGLevels. > The threshold to stop agglomeration should stay. But you can expose it as a config option if you want.; I can do that.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1362#issuecomment-908181097:369,reduce,reduce,369,https://su2code.github.io,https://github.com/su2code/SU2/pull/1362#issuecomment-908181097,1,['reduce'],['reduce']
Energy Efficiency,"> You've got two options:; > ; > 1. Use the cfg option `WRT_BINARY_RESTART= NO` to dump the restart file(s) in human-readable ASCII.; > 2. Use the cfg option `OUTPUT_FORMAT= TECPLOT` or `OUTPUT_FORMAT=PARAVIEW` with SU2_SOL to export the solution to an ASCII-formatted tecplot or paraview file. If you're not familiar with SU2_SOL, then check out [the documentation](https://su2code.github.io/docs/Post-processing/).; > ; > You can find those cfg options in `config_template.cfg` in the root SU2 source code directory.; > ; > In the end, using the tecplot or paraview option may be your best bet. Trying to manually parse the text files smells like an [XY Problem](https://en.wikipedia.org/wiki/XY_problem). Tecplot and Paraview both have scripting capabilities that make post-processing very efficient.; > ; > Does that answer your question? Do you have any follow-up concerns?. Hello @clarkpede can you please tell me how to convert the output flile format from vtu to vtk; I am facing a lots of trouble to open the file in Paraview but the output format is coming vtu everytime Can you please explain how to solve this problem; And whenever i tries to change the output format by editting in notepad it tells an error that check option in SU2 config_template.cfg ; Please Help",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/787#issuecomment-651252372:793,efficient,efficient,793,https://su2code.github.io,https://github.com/su2code/SU2/issues/787#issuecomment-651252372,1,['efficient'],['efficient']
Energy Efficiency,"> You've got two options:; > ; > 1. Use the cfg option `WRT_BINARY_RESTART= NO` to dump the restart file(s) in human-readable ASCII.; > 2. Use the cfg option `OUTPUT_FORMAT= TECPLOT` or `OUTPUT_FORMAT=PARAVIEW` with SU2_SOL to export the solution to an ASCII-formatted tecplot or paraview file. If you're not familiar with SU2_SOL, then check out [the documentation](https://su2code.github.io/docs/Post-processing/).; > ; > You can find those cfg options in `config_template.cfg` in the root SU2 source code directory.; > ; > In the end, using the tecplot or paraview option may be your best bet. Trying to manually parse the text files smells like an [XY Problem](https://en.wikipedia.org/wiki/XY_problem). Tecplot and Paraview both have scripting capabilities that make post-processing very efficient.; > ; > Does that answer your question? Do you have any follow-up concerns?; > ; > _Originally posted by @clarkpede in [#787 (comment)](https://github.com/su2code/SU2/issues/787#issuecomment-528435629)_",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1034#issuecomment-651250250:793,efficient,efficient,793,https://su2code.github.io,https://github.com/su2code/SU2/issues/1034#issuecomment-651250250,1,['efficient'],['efficient']
Energy Efficiency,"> after you install msmpi, you should modify environment Variable of MSMPI_LIB64, you can type set MSMPI_LIB64=\%MSMPI_LIB64% in cmd or $env:MSMPI_LIB64=""\""+$env:MSMPI_LIB64 in powershell, then you can build code like ""python meson.py build -Denable-tecio=false -Denable-autodiff=true --prefix=D:\SU2\executable"", it will work this time;. @Zcaic Hi zcaic, . I tried this, but it still thow the same error. with message; ```; OSError: [WinError 123] 文件名、目录名或卷标语法不正确。: 'D:\\mingw-w64\\x86_64\\mingw64\\bin\\..\\lib\\gcc\\x86_64-w64-mingw32\\8.1.0\\lib\\C:\\Program Files (x86)\\Microsoft SDKs\\MPI\\Lib\\x64\\msmpi.a'; ```. ⬆️ just from `xxx\\8.1.0\\libC:\\Program...` to `xxx\\8.1.0\\libC:\\Program...`. Is that any solutions ?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1471#issuecomment-1190519582:177,power,powershell,177,https://su2code.github.io,https://github.com/su2code/SU2/issues/1471#issuecomment-1190519582,1,['power'],['powershell']
Energy Efficiency,"@EvertBunschoten Thank you for not leaving us with all these alarming red crosses in the regression tests too long :-); This week I will work on a small pywrapper addition to deal with initial conditions, then we can get rid of the flame-specific initialization. That will reduce the PR by a couple of hundred lines and even add functionality. But I'll create a separate PR for this.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1826#issuecomment-1330519424:273,reduce,reduce,273,https://su2code.github.io,https://github.com/su2code/SU2/pull/1826#issuecomment-1330519424,1,['reduce'],['reduce']
Energy Efficiency,"@LaSerpe : thanks for the mesh!. @EduardoMolina : no huge rush on merging this one.. we should make sure everything is working ok. It would be very helpful if you can take a look at the Taylor-Green Vortex case again, like we looked at before, now that the parallelization is improved. The option to run is still there (TGV = YES), and I think you already have the meshes.. @pcarruscag : thanks for the comments (will address soon). Also, thanks for the reminder about the pre-accumulation. I disabled that since I had to rework the least squares routines for the periodic BC and I did not turn it back on. The variables may need to be adjusted now though",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/652#issuecomment-464599593:193,Green,Green,193,https://su2code.github.io,https://github.com/su2code/SU2/pull/652#issuecomment-464599593,1,['Green'],['Green']
Energy Efficiency,"@LaSerpe Hey Giulio. ; Sorry for the delay, I had a couple of deadlines going on and only by the end of last week I had the chance to look back into the code. I had scheduled to look at this pull request this evening or tomorrow morning, so I will try to do it as soon as possible so it can be merged in. ; Thanks for waiting and sorry again for taking so long!",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/322#issuecomment-258805856:165,schedul,scheduled,165,https://su2code.github.io,https://github.com/su2code/SU2/pull/322#issuecomment-258805856,1,['schedul'],['scheduled']
Energy Efficiency,"@MarcoFossati @monika1387 @economon I've been working with Adrien Loseille from INRIA to bring Vic's old fork (referenced above) up to date with develop. Check out [feature_adap](https://github.com/su2code/SU2/tree/feature_adap). It uses goal-oriented (adjoint-based) adaptation instead of feature-based (just based on Mach or pressure) that Vic's fork used. Some things to note:; 1. It's currently only tested on Euler (it uses a Hessian of the Euler fluxes so it might work for NS/RANS, but probably not) (@WallyMaier and I also extended it to TNE2 in [feature_amgtne2](https://github.com/su2code/SU2/tree/feature_amgtne2) but the source terms are giving us trouble on adapted meshes); 2. It requires AD support since it uses the discrete adjoint to weigh the Euler flux Hessians; 3. I did all my testing with the AMG executable since pyAMG doesn't have all the features I currently need, but I just updated the branch to use pyAMG. I just tested the new interface with an airfoil and it seems to be working, but there might still be some bugs. You'll want to run mesh_adaptation_amg.py with the following options:; **ADAP_SIZES:** list of mesh complexities for each adaptive level. This is correlated to mesh size, but picking good values requires some playing around; **ADAP_SUBITE:** number of adaptations performed at each adaptive level. If set to (2,3) for example, it will run 2 adaptive iterations to try to reach ADAP_SIZES[0], and 3 iterations to try to reach ADAP_SIZES[1]; **ADAP_EXT_ITER:** number of iterations used by SU2_CFD and SU2_CFD_AD for each adaptive level; **ADAP_RESIDUAL_REDUCTION:** order of magnitude residual reduction for SU2_CFD and SU2_CFD_AD for each adaptive level; **ADAP_SENSOR:** currently only works for GOAL; **ADAP_HMAX:** maximum cell size (m); **ADAP_HMIN:** minimum cell size (m); **ADAP_HGRAD:** gradation coefficient (>1) used by AMG during mesh smoothing. A larger value corresponds to larger allowed gradient in mesh size. E.g. for the RAE2822 I used:;",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/606#issuecomment-504675574:268,adapt,adaptation,268,https://su2code.github.io,https://github.com/su2code/SU2/issues/606#issuecomment-504675574,2,['adapt'],"['adaptation', 'adapted']"
Energy Efficiency,"@ScottImlay : it is wonderful to have your support from Tecplot, and we really appreciate the contribution for improvements through the open source!. I have a first question... I noticed that there are many new files, especially headers from the Boost library. Is it possible to reduce to a smaller set of files that get included, or are all of those that have been added necessary?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/558#issuecomment-411630702:279,reduce,reduce,279,https://su2code.github.io,https://github.com/su2code/SU2/pull/558#issuecomment-411630702,1,['reduce'],['reduce']
Energy Efficiency,"@TobiKattmann - I was just reading your slides on [multizone](https://su2foundation.org/wp-content/uploads/2020/06/Kattmann.pdf), when I noticed that you mention python scripts not working for multizone, and I guess that would include the mesh adaptation scripts... is this still the case? Thank you!",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/948#issuecomment-764800900:244,adapt,adaptation,244,https://su2code.github.io,https://github.com/su2code/SU2/issues/948#issuecomment-764800900,1,['adapt'],['adaptation']
Energy Efficiency,@TobiKattmann Just test whether it works and gives the same results. The regression test should be added still with the old driver. I will adapt it accordingly.,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/767#issuecomment-527185086:139,adapt,adapt,139,https://su2code.github.io,https://github.com/su2code/SU2/pull/767#issuecomment-527185086,1,['adapt'],['adapt']
Energy Efficiency,"@WallyMaier . I am able to get two forces since I have defined; `% Marker(s) of the surface where the functional (Cd, Cl, etc.) will be evaluated; MARKER_MONITORING= ( shell1, shell2 )`. For instance I see . `Surface name: shell1 ; Total CL... ; ... ; Surface name: shell2; Total CL...; ...`. But these coefficients are dependent on shape attributes like `REF_AREA= 0` and `REF_LENGTH= 0.5` (diameter of sphere being 1 unit). I was just curious if there's a way for the user to define `REF_LENGTH` or `REF_AREA` for two objects that are being monitored? At the moment these shapes are the same dimension but I was curious about what to do in the case they are not identical. Thanks a million!",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/788#issuecomment-531982235:543,monitor,monitored,543,https://su2code.github.io,https://github.com/su2code/SU2/issues/788#issuecomment-531982235,1,['monitor'],['monitored']
Energy Efficiency,"@WallyMaier thank you. Interesting... 1. This reference reminded me to add the contribution of the turbulence kinetic energy (+2/3 v rho k) in the energy equation source (see page 10 equation 2.30, pdf page 37), so that's done. 2. This reference will be helpful If I get to do the axysimmetry source terms for k and omega (by comparing equations 2.31 and 2.31 to equations B.2 and B.3) but that will be in a separate PR. In fact I am getting good results for RANS already (although no time for a thorough validation). 3. In that reference they have also done what I did before and pulled out the primitive derivatives and neglected the viscosity gradient and then came up with the same axisymmetry momentum source terms so that is comforting. However, their energy source terms are different and that made me think. What we have now is according to the first reference, so it should be fine unless there is an error in it. I find it suspicious that both aux derivatives are wrt y and none wrt x given the that we have one wrt x and one wrt y in the momentum equation... Could it be `AxiAuxVar_Grad_i[2][0]` instead of `AxiAuxVar_Grad_i[2][1]` ? The impact on results is almost unnoticeable for my case. Otherwise we are done here I think. @pcarruscag thanks for taking the time to review!",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1106#issuecomment-731141665:118,energy,energy,118,https://su2code.github.io,https://github.com/su2code/SU2/pull/1106#issuecomment-731141665,3,['energy'],['energy']
Energy Efficiency,@aeroamit What does temperature do? Could you compute the heat flux from the temperature in e.g. paraview? Is the root cause the computation of the energy equation or the computation of heat flux?,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1106#issuecomment-740820926:148,energy,energy,148,https://su2code.github.io,https://github.com/su2code/SU2/pull/1106#issuecomment-740820926,1,['energy'],['energy']
Energy Efficiency,"@all, I agree that it might be a problem for bigger cases and that we have to think of some ways to reduce the memory requirements for the discrete adjoint. . One approach that I started already, is to template the linear solver in order to use double datatype also when running the differentiated version of the code. However, that was more involved than I thought, but still its on my agenda. The nice thing is that this also reduces the runtime a lot. . The next thing is, like @pcarruscag correctly pointed out, the use of preaccumulation. However, this also requires a more detailed analysis, since it can also lead to an increased memory footprint if not applied carefully. Currently, a lot of memory is used for the geometrical derivatives, i.e. the derivatives with respect to the mesh coordinates (this requires approx 1.5 times the memory needed for derivatives with respect to the conservative variables). But since these derivatives are only needed when writing the solution we could think of doing some recomputation as runtime is not that important. So you see we have some ideas and I am sure we can reduce the memory by approx 50% if we apply all of them. However, time is unfortunately limited at the moment, but I will definitely continue improving the adjoint solver. Tim",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/594#issuecomment-427848887:100,reduce,reduce,100,https://su2code.github.io,https://github.com/su2code/SU2/issues/594#issuecomment-427848887,3,['reduce'],"['reduce', 'reduces']"
Energy Efficiency,"@antares190 running some more tests, I'm not sure that the adapted grid is still on the surface any more, especially on the trailing edge. Or perhaps it is, but it has lost associativity with its neighbour? This also seems to be the case for the fuselage, where cells seem to be jumping to the opposite side of the aircraft. Did you experience this issue too?; ![interior_ite1](https://user-images.githubusercontent.com/16842258/105381127-053eaf80-5c52-11eb-8781-707c6438432c.png). Regarding separating zones, do you mean through SU2's multizone? In this case, did you apply the aircraft surface as a separate zone? Or a 'core' region around the aircraft? Thanks for your thoughts! Kind regards, Tim",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/948#issuecomment-764777223:59,adapt,adapted,59,https://su2code.github.io,https://github.com/su2code/SU2/issues/948#issuecomment-764777223,1,['adapt'],['adapted']
Energy Efficiency,"@chesiv (and also @timjim333) I confirm that the output you described is the expected one. In the *.cfg file I also make sure to add CSV tabular output management, as well as ASCII outputs.; `TABULAR_FORMAT= CSV`; `OUTPUT_FILES= RESTART_ASCII`. The python script to run the case with mesh adaptation is :; `$ python3 SU2_RUN/mesh_adaptation_amg.py -f adap_ONERAM6.cfg -n 8`; The python script handles all the folder structure, initialization, mesh adaptation(s), sub iteration(s).; 1. At first it removes the contents of an `adap` folder.; 2. creates `adap\ini` and starts the initialization run (with the original mesh).; 3. creates `adap\ite0` and based on the solution of the initialization run adapts the mesh with the given goal. As @bmunguia explained, have a look at the end of `amg.out` if anything doesn't go as expected. . > The only actual information I get from amg.log is usually in the last line ; > `NbSensor 30518 msh->npobk 30518 NbrTyp 19 msh->npoin 52477`; > which just tells you how many points are in the old vs. new mesh, but you could just look at the .su2 files for that. 4. repeats the subite as specified by the user. ; 5. At the end of the run the final results will be copied to the parent directory, as well as an history_adap.csv file which will store the output of the final iteration of the initialization and each mesh adaptation. To answer @chesiv question, in the `adap\ite0` you will find an `adap.su2` file which is the adapted mesh. The configuration file is modified (so to get the new mesh and restart from the previous iterations solution.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/948#issuecomment-750490818:289,adapt,adaptation,289,https://su2code.github.io,https://github.com/su2code/SU2/issues/948#issuecomment-750490818,5,['adapt'],"['adaptation', 'adapted', 'adapts']"
Energy Efficiency,"@chiefenne @oleburghardt : I like this idea a lot. This type of reporting is tremendously useful for assessing a simulation. You might want to take a look at the MARKER_ANALYZE capability, which will at least give you basic quantities averaged at any markers you specify (area- or mass-averaged). It likely needs some extension to better handle heat transfer/energy. However, it may be a good place to start when thinking about a more general framework.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/800#issuecomment-543819420:359,energy,energy,359,https://su2code.github.io,https://github.com/su2code/SU2/issues/800#issuecomment-543819420,1,['energy'],['energy']
Energy Efficiency,"@clarkpede I have not used the mesh adaptation tools since my last post (I was simply learning to use them for an undergrad project). With that said, I do not have any other concerns. It worked well for my application. I appreciate your help.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/606#issuecomment-500491744:36,adapt,adaptation,36,https://su2code.github.io,https://github.com/su2code/SU2/issues/606#issuecomment-500491744,2,['adapt'],['adaptation']
Energy Efficiency,"@drewkett : thanks for your effort here. As this PR is now quite out of date, we will close it for now. . However, now that we have a more efficient process for handling PRs with code review, regressions, etc., I encourage you to resubmit this work if you have the time to update it. We will give it the attention it deserves right away.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/182#issuecomment-429950377:139,efficient,efficient,139,https://su2code.github.io,https://github.com/su2code/SU2/pull/182#issuecomment-429950377,1,['efficient'],['efficient']
Energy Efficiency,"@economon Dr. Alonso emailed me saying that ""We used [grid adaptation] successfully in tetrahedral meshes, but I do not believe the hexahedral adaptation was ever fully functional."" That matches my experience with a few tests I ran.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/492#issuecomment-355796132:59,adapt,adaptation,59,https://su2code.github.io,https://github.com/su2code/SU2/pull/492#issuecomment-355796132,2,['adapt'],['adaptation']
Energy Efficiency,"@economon The behavior without adaptive CFL is similar to its non-adaptive behavior. I cannot increase the CFL greater than a certain value and get convergence. For example, for the 2nd coarsest mesh (297 x 57 or 129) I cannot increase the CFL > 20. This is regardless of weather I use adaptive CFL or not. I cannot set the CFL higher than 20. . But this limit increases slightly for the finer meshes. For example, for the finest mesh I can push the CFL up to 30 (adaptive or otherwise). Basically cannot get high CFLs for the GG reconstruction. I should also mention that all these runs are without slope limiters to get the most accurate solutions.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/790#issuecomment-554101997:31,adapt,adaptive,31,https://su2code.github.io,https://github.com/su2code/SU2/pull/790#issuecomment-554101997,4,['adapt'],['adaptive']
Energy Efficiency,"@economon for prototyping, the changes proposed in #753 allow a container to be added to CVariable as a public member and thus directly accessible everywhere (one can even allocate only in some derived constructors, with no risk of leaking memory). For release-quality code I think encapsulation is desirable, that being said I'm not above declaring the client solver a friend of the specific CVariable it uses (also with the changes introduced, there would be a way to access member variables directly without moving them to base CVariable).; I like encapsulation not because of OOP principles but because of `GetVelocity(iDim)` instead of `GetPrimitive(iDim+1)`. As for overhead I think it is 0 as long as methods are inline: [example](https://gcc.godbolt.org/z/QXoExF); But in all honesty I also chose to change the CVariable interface as little as possible to make my life easier.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/716#issuecomment-520226075:172,allocate,allocate,172,https://su2code.github.io,https://github.com/su2code/SU2/issues/716#issuecomment-520226075,1,['allocate'],['allocate']
Energy Efficiency,"@economon, from the config files in the V&V folder, it seems like you ran without adaptive CFL and without the unweighted LSQ. The main difference between the V&V runs and these ones is that I don't use any slope limiter. In the V&V cases the `SLOPE_LIMITER_TURB= VENKATAKRISHNAN` option was used. . There are some other differences: ; 1. I use adaptive CFL; 2. I use `REF_DIMENSIONALIZATION= FREESTREAM_PRESS_EQ_ONE`; 3. Linear solver settings are slightly different. For the V&V runs the following are used: ; ```; % Minimum error of the linear solver for implicit formulations; LINEAR_SOLVER_ERROR= 1E-15; %; % Max number of iterations of the linear solver for the implicit formulation; LINEAR_SOLVER_ITER= 25; ```; For my runs, I used the settings you had suggested in #790 : ; ```; % Minimum error of the linear solver for implicit formulations; LINEAR_SOLVER_ERROR= 1E-10; %; % Max number of iterations of the linear solver for the implicit formulation; LINEAR_SOLVER_ITER= 10; ```; 4. For the SST runs, I did not specify these options that you used in the V&V case: ; ```; % Free-stream turbulence intensity for the SST model; < FREESTREAM_TURBULENCEINTENSITY = 0.00038729; < %; < % Free-strem turbulence to laminar viscosity ratio for the SST model; < FREESTREAM_TURB2LAMVISCRATIO = 0.009; ```; I have attached the config files I used. I am still working on confirming all the regression tests, everything seems to be reasonable thus far. . [flatplate_configs.zip](https://github.com/su2code/SU2/files/4336003/flatplate_configs.zip)",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/905#issuecomment-599337194:82,adapt,adaptive,82,https://su2code.github.io,https://github.com/su2code/SU2/pull/905#issuecomment-599337194,2,['adapt'],['adaptive']
Energy Efficiency,"@fpalacios : there were two main issues with the regressions. Both are time out problems if Travis waits for over 10 minutes without any console output. The first was that we need to flush the output for Python 3 for each regression test, otherwise there is too long between cases and sometimes it fails. The second is that sometimes it takes too long to download the test cases, so I have added the keywords 'travis_wait 90' in the call to the entire python script in .travis.yml in order to extend the 10 minute restriction to 90 min. We still need to reduce the time for the tests overall, but it seems to be stable for the time being.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/519#issuecomment-381217217:554,reduce,reduce,554,https://su2code.github.io,https://github.com/su2code/SU2/pull/519#issuecomment-381217217,1,['reduce'],['reduce']
Energy Efficiency,"@jayantmukho, the arguments to the ADT are converted to the data structures used in the ADT. This must be done, because sometimes it is necessary to gather surface grids to all ranks for an efficient search. That is why it is safe to release the memory immediately. Note that it is not necessary to do so, but this is just to avoid that an unnecessary amount of memory is allocated.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/605#issuecomment-435131100:190,efficient,efficient,190,https://su2code.github.io,https://github.com/su2code/SU2/pull/605#issuecomment-435131100,2,"['allocate', 'efficient']","['allocated', 'efficient']"
Energy Efficiency,"@monika1387 I suggest you to switch to the INRIA pyAMG to do your mesh adaptation (https://pyamg.saclay.inria.fr). There are a couple of elements you need to keep in mind to use it: 1) at present, it seems to work with a specific branch of SU2 (see the link in the pyAMG website), 2) while working on it with INRIA people we found an issue with a file named ""amg.py"" which resides in the SU2_PY/SU2/run folder. I suggest you to replace that with the one attached here.; Please let me know if this works out for you. #!/usr/bin/env python. ## \file adjoint.py; # \brief python package for running mesh adaptation using the AMG Inria library; # \author Victorien Menier; # \version 6.0.0 ""Falcon""; #; # The current SU2 release has been coordinated by the; # SU2 International Developers Society <www.su2devsociety.org>; # with selected contributions from the open-source community.; #; # The main research teams contributing to the current release are:; # - Prof. Juan J. Alonso's group at Stanford University.; # - Prof. Piero Colonna's group at Delft University of Technology.; # - Prof. Nicolas R. Gauger's group at Kaiserslautern University of Technology.; # - Prof. Alberto Guardone's group at Polytechnic University of Milan.; # - Prof. Rafael Palacios' group at Imperial College London.; # - Prof. Vincent Terrapon's group at the University of Liege.; # - Prof. Edwin van der Weide's group at the University of Twente.; # - Lab. of New Concepts in Aeronautics at Tech. Institute of Aeronautics.; #; # Copyright 2012-2018, Francisco D. Palacios, Thomas D. Economon,; # Tim Albring, and the SU2 contributors.; #; # SU2 is free software; you can redistribute it and/or; # modify it under the terms of the GNU Lesser General Public; # License as published by the Free Software Foundation; either; # version 2.1 of the License, or (at your option) any later version.; #; # SU2 is distributed in the hope that it will be useful,; # but WITHOUT ANY WARRANTY; without even the implied warranty of; # MERC",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/606#issuecomment-504636643:71,adapt,adaptation,71,https://su2code.github.io,https://github.com/su2code/SU2/issues/606#issuecomment-504636643,2,['adapt'],['adaptation']
Energy Efficiency,"@monika1387 There are numerous bugs and difficulties with SU2's in-house mesh adaptivity. Without knowing more specifics about your problem (e.g. seeing your *.cfg file), it's hard to know what the problem is. For example, you should probably *not* be using the `SUPERSONIC_SHOCK` mesh adaptivity option. It seems to be ad-hoc and not generalized to arbitrary shock positions. If you want help with SU2's in-house mesh adaptation, could you post your *.cfg file?. Based on comments by @bmunguia and @MarcoFossati, it seems like you've got a bit of an [X/Y problem](https://meta.stackexchange.com/questions/66377/what-is-the-xy-problem). You could try to fix the problems with SU2's in-house mesh adaptivity. But the bigger question is ""What's the best way to do mesh adaptation in SU2?"" For that, INRIA's AMG library may be the best solution.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/606#issuecomment-505438349:78,adapt,adaptivity,78,https://su2code.github.io,https://github.com/su2code/SU2/issues/606#issuecomment-505438349,5,['adapt'],"['adaptation', 'adaptivity']"
Energy Efficiency,"@pcarruscag @WallyMaier ; I think I've adressed most of what you spotted in the latest commits. Thanks for taking so much care - you already helped me a lot getting everything ready to enter the main version, especially concerning the just-for-development adaptions that I had forgotten about. @TobiKattmann ; I sneaked in another commit for primal CHT that _might_ help with your issue. I'm still running tests that might confirm my guesswork. (Though you can already try it by setting `CHT_ROBIN= NO` which will then just directly apply heat fluxes.) I'm coming back to this once I'm sure about it.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/774#issuecomment-538411667:256,adapt,adaptions,256,https://su2code.github.io,https://github.com/su2code/SU2/pull/774#issuecomment-538411667,1,['adapt'],['adaptions']
Energy Efficiency,"@pcarruscag I tried to restart the solution with zero mach number for config. However, for some reason, convergence takes so much longer than simply solving mach=0.1 config. Indeed, i started my simulation when you post your suggestion and it still haven't converged yet. Residual getting smaller but it is so slow. Therefore it might not be an efficient solution. Thanks for advice anyway.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/997#issuecomment-632892959:345,efficient,efficient,345,https://su2code.github.io,https://github.com/su2code/SU2/issues/997#issuecomment-632892959,2,['efficient'],['efficient']
Energy Efficiency,"@pcarruscag, Nice.....; I saw the results and cross checked with reference results, they seems to be matching. I also observed that you have changed the mesh (adapted+boundary layer continuation for top wall). ; Seems like mesh was the culprit earlier?? (though inlet still seems to have minor issue but doesn't matter); Also see the attached experiment data file (in case you want to use)...; [Schulein_2004_expt.dat.gz](https://github.com/su2code/SU2/files/8799043/Schulein_2004_expt.dat.gz). Regards; Amit",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1651#issuecomment-1141217827:159,adapt,adapted,159,https://su2code.github.io,https://github.com/su2code/SU2/pull/1651#issuecomment-1141217827,1,['adapt'],['adapted']
Energy Efficiency,"@rsanfer , I deleted CFEAFSIBoundVariable and kept its data in CFEABoundVariable because:; - It would require two vertex maps to be build, one for vertices another for interfaces.; - It would be less efficient memory wise, the vertex map is size O(N) the number of vertices is O(N^(2/3)) in the worst case, which means eventually having two maps is worse.; - Most FSI cases have a large interface and small fixed boundaries, allocating FSI tractions for the latter is not so bad. I also removed CDiscAdjMeshVariable, as it was empty, and kept only its ""Bound"" counterpart. With this vertex allocation / mapping strategy we always need to instantiate the ""Bound"" version of the class so if the intermediates are empty they can be omitted. Please review the changes and if you have some more thorough tests run them or send them over to me.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/753#issuecomment-526546118:200,efficient,efficient,200,https://su2code.github.io,https://github.com/su2code/SU2/pull/753#issuecomment-526546118,1,['efficient'],['efficient']
Energy Efficiency,@sun5k maybe you can try implementing the alternative I suggested of obtaining turbulence kinetic energy at inlets from the turbulence solver instead of assuming that the free stream value is imposed exactly?; In the SWBLI case the SST-m versions (without divergence terms in the stress tensor) seem to underpredict the separation region https://su2code.github.io/vandv/swbli/,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1851#issuecomment-1522006064:98,energy,energy,98,https://su2code.github.io,https://github.com/su2code/SU2/issues/1851#issuecomment-1522006064,1,['energy'],['energy']
Energy Efficiency,"@talbring : as you know, the difference between disabled and active grid movement with 0 velocity is that the former case does not even allocate the memory for the grid velocity at each node, and many conditionals checking for grid movement throughout the solver (fluxes, BCs) are avoided. This was to save memory and effort when grid motion is not needed, however, maybe we need to now change the strategy for multizone problems which may have both fixed and moving zones (perhaps always active with 0 as default). . I am a little surprised they are not the same as well, but somewhere in the code path there must be an issue with this.. my guess is something related to BC_Fluid_Interface() or the transfer structure when grid movement is active on both sides but has a value of 0 on one of the interfaces.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/700#issuecomment-505188890:136,allocate,allocate,136,https://su2code.github.io,https://github.com/su2code/SU2/pull/700#issuecomment-505188890,1,['allocate'],['allocate']
Energy Efficiency,"@vdweide It's easy to do, so I'll show the dimensional analysis here. I'll use L for length, T for time, and M for mass. The original paper defined `r_d`, which is supposed to be a nondimensional parameter. (`r_d` gets raised to the 3rd power and put into a hyperbolic tangent, so it would be messy if it were dimensional). In the code you'll see:. r_d = (nu + nu_t)/(uijuij*k2*pow(val_wall_dist, 2.0));. where `nu` is the kinematic viscosity, `nu_t` is the kinematic eddy viscosity, `uijuij` is the magnitude of the velocity gradient tensor, k2 is the square of the von-Karman constant, and `val_wall_dist` is the wall distance. + `nu` has units of L^2/T; + `nu_t` has units of L^2/T; + `uijuij` has units of 1/T; + `val_wall_dist` has units of L. So if you do the math, `r_d` has units of L^/T in the numerator and L^2/T in the denominator. `r_d` is nondimensional. If you switch `nu` and `nu_t` from kinematic viscosities to dynamic viscosities, you get that `r_d` has units matching density, or M/L^3. That's obviously not correct.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/575#issuecomment-418873597:237,power,power,237,https://su2code.github.io,https://github.com/su2code/SU2/pull/575#issuecomment-418873597,1,['power'],['power']
Energy Efficiency,"A new feature of monitoring pressure (or any parameter) values on some specified arbitrary points given by users in case of unsteady simulation. This feature is required for our requirement. I'd implemented this feature for a older one and using a 3rd party library called ANN (Approximate Nearest Neighbor). I wanna know whether implementation using such library can be merged with master version? AFAIK it's not practiced. As Harichand, my colleague said a data structure is already available for tree search which can be implemented. Please tell me how this can be implemented so it clears the eligibility of merge. ; Thanks; Soumen",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/466:17,monitor,monitoring,17,https://su2code.github.io,https://github.com/su2code/SU2/issues/466,1,['monitor'],['monitoring']
Energy Efficiency,"A spark initialization was not possible with CFL adaptation, as the CFL number would increase too far before the spark initiates the combustion. This led to immediate flashback or blow-off. An additional parameter in the CFL adaptation defines the iteration, at which the CFL adaption should start. This allows the combustion to stabilize before the CFL number increases. Before the initial iterations has not started, the CFL number does not get adapted in either direction.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2362:49,adapt,adaptation,49,https://su2code.github.io,https://github.com/su2code/SU2/pull/2362,4,['adapt'],"['adaptation', 'adapted', 'adaption']"
Energy Efficiency,"About the FEA - that is a larger point. I expect that there are quite a few structures being allocated that you don't need for the finite element solver(s) based on the primal grid.. i.e., most of the dual grid structure (edges, dual CVs, etc.). Easy to adjust here for this PR, but we might want to have a larger pass later to selectively allocate only what is needed. Or, adjust the geometry classes slightly to better separate the primal and dual grids.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/778#issuecomment-525824799:93,allocate,allocated,93,https://su2code.github.io,https://github.com/su2code/SU2/pull/778#issuecomment-525824799,2,['allocate'],"['allocate', 'allocated']"
Energy Efficiency,"Actually, on closer look, this seems ok. I am only averaging the grid velocities on either side of the face, not the solution. That routine might be more efficient as an edge loop, but should be correct. If you're really bored, see pg. 83 for details about the Geometric Conservation Law as implemented there: https://economon.github.io/docs/economon_dissertation.pdf",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1005#issuecomment-635495594:154,efficient,efficient,154,https://su2code.github.io,https://github.com/su2code/SU2/issues/1005#issuecomment-635495594,1,['efficient'],['efficient']
Energy Efficiency,Adapt new periodic bc for turbo-vertex,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/666:0,Adapt,Adapt,0,https://su2code.github.io,https://github.com/su2code/SU2/pull/666,1,['Adapt'],['Adapt']
Energy Efficiency,"Adaption of the interpolation method NearestNeighbor to turbomachinery applications when rotating frame is used. ## Proposed Changes; *If the flow is solved in a rotating frame, the grid is not actutally rotating. But the interpolation for a sliding interface should be done with an actually rotated boundary. The proposed changes add the function of rotating grid points on the boundary of a zone solved in rotating frame before the interpolation is executed. Currently, this is only implemented in CNearestneighbor class, other interpolation method should be changed as well in the near future.*. ## Related Work. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [ yes ] I am submitting my contribution to the develop branch.; - [ yes ] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [ yes ] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [x] I used the pre-commit hook to prevent dirty commits and used `pre-commit run --all` to format old commits.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2173:0,Adapt,Adaption,0,https://su2code.github.io,https://github.com/su2code/SU2/pull/2173,1,['Adapt'],['Adaption']
Energy Efficiency,Adaptive CFL condition (apart from currently available fixed/ramp),MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/94:0,Adapt,Adaptive,0,https://su2code.github.io,https://github.com/su2code/SU2/issues/94,1,['Adapt'],['Adaptive']
Energy Efficiency,Adaptive Edge Color Group Size,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2167:0,Adapt,Adaptive,0,https://su2code.github.io,https://github.com/su2code/SU2/pull/2167,1,['Adapt'],['Adaptive']
Energy Efficiency,Adaptive Mesh Refinement,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/743:0,Adapt,Adaptive,0,https://su2code.github.io,https://github.com/su2code/SU2/issues/743,1,['Adapt'],['Adaptive']
Energy Efficiency,"Add x, y, and z force coefficients to the history output for each monitored marker",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/67:66,monitor,monitored,66,https://su2code.github.io,https://github.com/su2code/SU2/issues/67,1,['monitor'],['monitored']
Energy Efficiency,"After removing the local surface element area from the calculation, it results in viewing a map of change in the objective (e.g. drag) per 1 square meter w/ a 1 meter deflection at all nodes (for SI units). Makes it easier to see where the geometry is most sensitive.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/123:148,meter,meter,148,https://su2code.github.io,https://github.com/su2code/SU2/issues/123,2,['meter'],['meter']
Energy Efficiency,"Agreed that libraries are great as long as they are optional - sometimes we need them for highly specialized tasks. Btw, is it possible to use your wrapper for other external solvers? For example, it might be worth testing with PETSc again soon for performance reasons. I would encourage making a single base interface for external solvers that talks to the existing structure in SU2, which never needs to change, and then creating the implementations for each solver that adapts the particular solver data structures to the fixed interface (similar with the grid readers and output routines). Is this easy to do now?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/771#issuecomment-524932838:473,adapt,adapts,473,https://su2code.github.io,https://github.com/su2code/SU2/pull/771#issuecomment-524932838,1,['adapt'],['adapts']
Energy Efficiency,"Agreed, but unfortunately, I think we need to modify how we currently have the test cases set up, because we have a chicken & egg problem. Both of these pull requests require changes to the configs that live in the other repo. Those need to be modified first for the tests to pass, but it seems unsustainable to require commits to separate repos to test the pull requests (this makes this very valuable feature tough to use). We might want to move the configs back into the SU2 repo so that folks can update their tests with their code commits. This way, we will see the green light and accept. On Jul 29, 2015, at 3:31 PM, Brendan Tracey <notifications@github.com<mailto:notifications@github.com>> wrote:. In general, you can wait for Travis to give the green light before merging into develop. This way develop stays working. In addition, when done merging usually I delete the branch to keep things clean. —; Reply to this email directly or view it on GitHubhttps://github.com/su2code/SU2/pull/185#issuecomment-126116253.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/185#issuecomment-126116991:571,green,green,571,https://su2code.github.io,https://github.com/su2code/SU2/pull/185#issuecomment-126116991,2,['green'],['green']
Energy Efficiency,"Ah sorry,; SU2_DOT mostly only uses OpenMP in the passive linear system, I'm not sure if @thomasdick Sobolev smoother has some recorded part that involves OpenMP.; For the python wrapper I usually set the number of threads with env var OMP_NUM_THREADS It may be a bit confusing for most users having to specify the number of threads when instantiating the driver :thinking: ; I think disc_adj_flow would be the easiest to adapt. Those tests print a sensitivity at a particular vertex of a marker to be checked by the regression script, so you would have to make sure that's only printed on one rank (for parallel AD).; disc_adj_fea should also be fine for hybrid AD.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1966#issuecomment-1470288877:422,adapt,adapt,422,https://su2code.github.io,https://github.com/su2code/SU2/pull/1966#issuecomment-1470288877,1,['adapt'],['adapt']
Energy Efficiency,"Ah! Ok, so you may try to tweek PARMETIS_POINT_WEIGHT and PARMETIS_EDGE_WEIGHT.; To balance edges perfectly the point weight may have to be set to a negative value. Those values must be integers. With certain features it is important to have good defaults because a lot of users will not be aware of all the details. So if scotch proves to be much better for large problems, we can create interest. The cost model we use for partitioning is limited, it does not account for boundaries or for multigrid. If you have large symmetry planes this might create imbalance.; The hybrid implementation in SU2 reduces the number of partitions created, which might help parmetis in your case.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1307#issuecomment-867062213:600,reduce,reduces,600,https://su2code.github.io,https://github.com/su2code/SU2/issues/1307#issuecomment-867062213,1,['reduce'],['reduces']
Energy Efficiency,"All for improving the abstractions if possible. We did something similar for the scalar upwinding and the viscous schemes already. . My only comments, which you can probably guess already, are to make sure we don't take a large performance hit by adding more layers (for example, one can make an argument to remove the entire set of CNumerics classes and implement the methods more efficiently directly in the solver class with vectorization, etc) and that we maintain the flexibility for folks to quickly add new convective schemes which was the original motivation for the existing structure (and more layers could complicate this). Sounds like you're already considering these things, but it is important to find the right balance.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/691#issuecomment-500942445:382,efficient,efficiently,382,https://su2code.github.io,https://github.com/su2code/SU2/pull/691#issuecomment-500942445,1,['efficient'],['efficiently']
Energy Efficiency,Allocate linear system for volumetric deformation in class constructor.,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/200:0,Allocate,Allocate,0,https://su2code.github.io,https://github.com/su2code/SU2/pull/200,1,['Allocate'],['Allocate']
Energy Efficiency,"Allows weighted sum of objectives to be evaluated with the discrete adjoint. (Previously available only with continuous adjoint); A test case is added for this functionality in serial_regression_AD.py. Also includes:; related clean-up and standardization, such as making sure that a redundancy check inside python functions does the appropriate thing when multiple objectives are used (previously would duplicate some analyses during optimization). ; treating surface heatflux per-surface (making this more similar to how surface forces are treated) so that if multiple surfaces are included only the one specified as being monitored will be used in the objective function. ; removal of some unused variables that turned up during compiler checks.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/312:624,monitor,monitored,624,https://su2code.github.io,https://github.com/su2code/SU2/pull/312,1,['monitor'],['monitored']
Energy Efficiency,"Alright, Heat-Transfer BC is good to go. Code factor does its usual thing with Complex code but the rest is green. ; Was a bit more than I anticipated but now there is a compressible version as well alongside the incompressible. . An incompressible Testcase was added which briefly explains expected results in the extreme ends of heat transfer coefficient values. What's is left to do for me is to update and merge su2code/su2code.github.io/pull/26 ,In there i will drop a comment or two that advertises the HeatTransfer bc. Thanks @oleburghardt for kicking this off, @pedro for the review and advise and @bigfooted for some chats behind the scenes",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1226#issuecomment-890359244:108,green,green,108,https://su2code.github.io,https://github.com/su2code/SU2/pull/1226#issuecomment-890359244,1,['green'],['green']
Energy Efficiency,"Alright. I did some digging, and the problem has nothing to do with the warning message. It goes much deeper. In a recent release, SU2 switched to reading and writing binary restart files instead of ASCII. The grid adaptation code is still written only for ASCII. If I'm right, then trying to read a binary restart file with the flow solution breaks the program. I'll submit an issue detailing the bug. For now, try adding the following lines to your cfg file when you run `SU2_CFD`:. %; % Write binary restart files (YES, NO); WRT_BINARY_RESTART= NO; %; % Read binary restart files (YES, NO); READ_BINARY_RESTART= NO. Then run `SU2_MSH`, just like you have been. Does that clear things up?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/606#issuecomment-436131167:215,adapt,adaptation,215,https://su2code.github.io,https://github.com/su2code/SU2/issues/606#issuecomment-436131167,2,['adapt'],['adaptation']
Energy Efficiency,"Also since this issue is getting resolved, is there anyway or option I can; reduced number of variables in exported results? I tried using; VOLUME_OUTPUT= (COORDINATES, PRIMITIVE) deleted SOLUTIONS so that I can; able to reduce the size of file from redundant parameters which i don't; need as of now. But seems like that does not work either and exported .vtk; with same size. It supposed to work like that if I understand correctly. On Mon, Mar 16, 2020 at 6:53 PM Monika Chauhan <monika1387@vt.edu> wrote:. > @clarkepede Sure, I will try to make an example to show .; > So my problem is CD nozzle and I am running FEM-LES solver and exported; > data in .csv and PARAVIEW type. Everything seems good its just I was unable; > to visualize exported .vtk files (open but does not show me the final; > result- stuck in just opening it - I am not sure if its paraview issue or; > its 4 GB file which causing this error). So I tried to export my file using; > Tecplot type option but unable to do so and getting this Bus error which I; > never encountered earlier in SU2 ever (what is that error - YOUR; > APPLICATION TERMINATED WITH THE EXIT STRING: Bus error (signal 7)). So; > trying to dump my files in anyway to visualize them, since its FEM-LES; > solver with DG scheme so files are pretty huge. Still let me know if I need; > to send you an example. Attached .cfg file for reference.; >; >; >; > On Mon, Mar 16, 2020 at 6:13 PM Clark Pederson <notifications@github.com>; > wrote:; >; >> @monika1387 <https://github.com/monika1387> I'm sorry, I still don't; >> understand. Do you have a minimal working example, where you can reproduce; >> the problem you're having?; >>; >> Where does the error occur? In SU2_CFD? In SU2_SOL? In Paraview? In; >> Tecplot? What's the specific error message? What's the context?; >>; >> —; >> You are receiving this because you were mentioned.; >> Reply to this email directly, view it on GitHub; >> <https://github.com/su2code/SU2/issues/787#issuecomment-599781328>,",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/787#issuecomment-599795725:76,reduce,reduced,76,https://su2code.github.io,https://github.com/su2code/SU2/issues/787#issuecomment-599795725,2,['reduce'],"['reduce', 'reduced']"
Energy Efficiency,"Although my own participation with SU2 is now reduced due to pursuing other endeavors, I want to say that I hope that your future experiences with SU2 and the open-source community will be more positive, that I hope neither of you have been dissuaded from contributing here or on other open-source projects, and that this has been a good reminder that it is easy for things to get heated quickly, especially on the internet where tone of voice cannot be easily conveyed. . @SumanVajjala: ; conv_numerics→ComputeResidual is setting the fluxes inside of that function, and it uses the normal and flow variable information set at previous lines, ; conv_numerics→SetNormal(Normal); (line 10290 in your example) ; conv_numerics→SetPrimitive(V_domain, V_infty); (line 10433 in your example). ComputeResidual can be found in numerics_direct_mean.cpp, where you will see that SetResidual is handled differently depending on the numerical scheme chosen, and that calls to GetInviscidProjFlux are included. ; A similar pattern is followed in the other boundary conditions, although there may be more going on here which someone else may be able to comment on. . If you have any questions that are not bugs/code issues, SU2 also has a forum at: https://www.cfd-online.com/Forums/su2/. I also recommend using an IDE (xcode, eclipse, etc) to assist with navigating the code. Best,; Heather",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/405#issuecomment-314942908:46,reduce,reduced,46,https://su2code.github.io,https://github.com/su2code/SU2/issues/405#issuecomment-314942908,1,['reduce'],['reduced']
Energy Efficiency,And a comment on memory: buffers for the output are now allocated once at the beginning and the overall peak memory consumption has been reduced compared to develop.,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/724#issuecomment-535044389:56,allocate,allocated,56,https://su2code.github.io,https://github.com/su2code/SU2/pull/724#issuecomment-535044389,3,"['allocate', 'consumption', 'reduce']","['allocated', 'consumption', 'reduced']"
Energy Efficiency,"And here is a simple test case demonstrating potential use. A major benefit of the supersonic inlet is being able to model supersonic propulsion systems, such as a scramjet, where the propulsion system exit boundary is modeled as a supersonic inlet, with distinct properties from the farfield flow conditions. Here we have a two dimensional test case demonstrating the interaction of exhaust flow with free-stream flow at the exit plane of a 2D scramjet system. Flow conditions adapted from [A Design Method for Three-Dimensional Scramjet Nozzles with Shape Transition](https://arc-aiaa-org.stanford.idm.oclc.org/doi/abs/10.2514/1.B38293); Jens Kunze, Michael K. Smart, and Rowan Gollan; Journal of Propulsion and Power 2022 38:1, 3-17. <img width=""1262"" alt=""image"" src=""https://user-images.githubusercontent.com/44848904/211415971-b6122204-0d95-43ca-903b-d60fd6326c39.png"">",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1862#issuecomment-1375043856:478,adapt,adapted,478,https://su2code.github.io,https://github.com/su2code/SU2/pull/1862#issuecomment-1375043856,3,"['Power', 'adapt']","['Power', 'adapted']"
Energy Efficiency,Another charge against pointer to pointer,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1312:8,charge,charge,8,https://su2code.github.io,https://github.com/su2code/SU2/pull/1312,1,['charge'],['charge']
Energy Efficiency,"Another important topic from the meeting was the need to restructure the files on the main repository, to reduce their sizes and improve both readability and compilation times. Of course, any file movement will affect the developers with ongoing branches (see #582) so one suggestion is to restructure one file at a time, maybe once every month or so, to reduce the burden to everybody. I have a number of files in my radar that are priorities:; - driver_structure.cpp (I already have a branch ongoing on this, as some of you know); - iteration_structure.cpp; - config_structure.cpp; - geometry_structure.cpp; because of their length and the mixture of class structures. There is also a need to improve the includes throughout the code. . I would like to collect your thoughts.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/583:106,reduce,reduce,106,https://su2code.github.io,https://github.com/su2code/SU2/issues/583,2,['reduce'],['reduce']
Energy Efficiency,Another possibility would be to compress the boost files and uncompress it during configure/preconfigure. With tar.gz this reduces the size down to 15 MB.,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/558#issuecomment-427287810:123,reduce,reduces,123,https://su2code.github.io,https://github.com/su2code/SU2/pull/558#issuecomment-427287810,1,['reduce'],['reduces']
Energy Efficiency,"Another potential issue is unnecessary recording of computations. Jayant and I noticed that on his fix_wall_distance branch, the MG 2 case mentioned above was using 8GB more than on develop because during the tree search, the distance computations to all possible bounding boxes were being recorded, when the only necessary computation for recording is the final computation (once the minimum distance node is determined). So I wonder if there are other places in the code where we can turn off recording to reduce memory usage. I'm curious what @talbring's thoughts are. Best,; Brian",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/594#issuecomment-427592996:508,reduce,reduce,508,https://su2code.github.io,https://github.com/su2code/SU2/issues/594#issuecomment-427592996,1,['reduce'],['reduce']
Energy Efficiency,"As I mentioned in my initial post, first-order works fine while restarting from the steady flow solution but when I want to restart FSI from a later time iteration, SU2 diverges. By subcycling, I meant that I would like to use different time step sizes for structure and fluid. For example, if I specify an FSI timestep of 1e-02s then I would like to use smaller timesteps on the fluid side (like 1e-05s) and maybe keep the structure time step to 1e-03s, and when both fluid and solid reach the same time, the deformation and load convergence be monitored and if they have not converged then another outer iteration would begin. Does that make sense?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1287#issuecomment-840632215:546,monitor,monitored,546,https://su2code.github.io,https://github.com/su2code/SU2/issues/1287#issuecomment-840632215,1,['monitor'],['monitored']
Energy Efficiency,"As discussed in the last dev meeting, this deprecates the centered scheme for weakly coupled heat transfer, because it had a bug in the speed of sound, and because this made it much easier to adapt the rest of the heat solver to the scalar framework. Bonus:; - Add SLOPE_LIMITER_HEAT option.; - OpenMP of the heat solver.; - Correct issues with Inlet and Outlet boundaries and gain farfield (not implemented before) for free.; - Regression for weakly coupled heat equation (primal was not covered before).; - PyCustom markers for heat solver. ToDo:; - Bounded scalar mode.; - Docs.; - Fix sensitivity wrt inlet velocity.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1892:192,adapt,adapt,192,https://su2code.github.io,https://github.com/su2code/SU2/pull/1892,1,['adapt'],['adapt']
Energy Efficiency,"As for the question I raised, Dr. Alonso mentioned the problem in an email he sent me. He said, ""We used [grid adaptation] successfully in tetrahedral meshes, but I do not believe the hexahedral adaptation was ever fully functional."". That matches my experience with a few tests I ran. After playing around a little, it seems like adaptivity for hexahedra was only partially finished. Many sections of the are implemented, but there seem to be both bugs and unfinished implementation.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/487#issuecomment-355796302:111,adapt,adaptation,111,https://su2code.github.io,https://github.com/su2code/SU2/issues/487#issuecomment-355796302,3,['adapt'],"['adaptation', 'adaptivity']"
Energy Efficiency,"As noted in issue #487, the mesh adaptation routine can fall into an infinite loop if there aren't enough cells to adapt. For example, if you run the mesh adaptation on a grid with pure hexahedra, the program will look for a certain number of cells to adapt but find none. I added an additional break where the adaptivity loop will break if all suitable cells have been marked for adaptation. I also added an additional warning that will pop up if mesh adaptation is run without specifying a NEW_ELEMS percentage. Edit: This fixes #487.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/492:33,adapt,adaptation,33,https://su2code.github.io,https://github.com/su2code/SU2/pull/492,7,['adapt'],"['adapt', 'adaptation', 'adaptivity']"
Energy Efficiency,"As requested, here's an example of a unit test that I made. For context: There's a couple of different modes for the Roe-low-dissipation convective blending. If one of the ""DUCROS"" modes is selected, then the Ducros sensor values are used. Otherwise, they're ignored. Before commit [ac8b3bf](https://github.com/su2code/SU2/commit/ac8b3bf7636cc66ca7f47e15935942a6598e1a9f), the `SetRoe_Dissipation` function checked to see if the sensor values were valid regardless of the type of blending selected. Commit [ac8b3bf](https://github.com/su2code/SU2/commit/ac8b3bf7636cc66ca7f47e15935942a6598e1a9f) changed the behavior to only check the sensor values if they will be used. The unit test sets the convective blending to `NTS`, feeds invalid sensor values into `SetRoe_Dissipation` and checks the output. ```cpp; // Used to set the Roe-low-dissipation option; void WriteCfgFile(unsigned short nDim, const char* filename,; std::string blending) {; std::ofstream cfg_file;. cfg_file.open(filename, ios::out);; cfg_file << ""PHYSICAL_PROBLEM= NAVIER_STOKES"" << std::endl;; cfg_file << ""ROE_LOW_DISSIPATION= "" << blending << std::endl;. cfg_file.close();; }. BOOST_AUTO_TEST_CASE(BadSensorsAllowedForNTS) {. /*--- Setup ---*/. const unsigned short nDim = 3;. /*--- Set up the config class for the test ---*/; char cfg_filename[100] = ""convective_blending_test.cfg"";; WriteCfgFile(nDim, cfg_filename, ""NTS"");; CConfig* config = new CConfig(cfg_filename, SU2_CFD, 0, 1, 2, VERB_NONE);; std::remove(cfg_filename);. /*--- Inputs ---*/; const su2double dissipation_i = 0.4;; const su2double dissipation_j = 0.6;; const su2double sensor_i = NAN; // Intentionally unphysical:; const su2double sensor_j = NAN; // Intentionally unphysical:. /*--- Outputs ---*/; su2double dissipation;. /*--- Test ---*/. CNumerics numerics;; numerics.SetRoe_Dissipation(dissipation_i, dissipation_j,; sensor_i, sensor_j,; dissipation, config);. const su2double tolerance = std::numeric_limits<su2double>::epsilon();; BOOST_CHECK_CLOSE_F",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/698#issuecomment-499999225:216,sensor,sensor,216,https://su2code.github.io,https://github.com/su2code/SU2/issues/698#issuecomment-499999225,8,['sensor'],['sensor']
Energy Efficiency,Axisymmetric viscous source term bug in energy equation,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1365:40,energy,energy,40,https://su2code.github.io,https://github.com/su2code/SU2/issues/1365,1,['energy'],['energy']
Energy Efficiency,"Below is a new testcase, laminar flow around a cylinder. In the line figure I show the normal velocity on the axis y=0, with the solid red line the results from develop. The dashed line is with only the new Green-Gauss correction. It always leads to an improvement. These 2 results were obtained with an undisturbed grid. I then distort the grid a bit (as seen in the contour plot) and rerun the GG correction and I get the green line. Still an improvement, but a bit more bumps on the line.; I then correct the edge normals as done in CPhysicalGeometry. I then get the jagged line shown.; The correction using the residuals in BC_Sym_Plane seems to be ill-defined because the final converged solution depends on the initial solution [so I do not show tests with it here, I kept the original bc_sym_plane]. ; ![Screenshot_cylinder](https://github.com/su2code/SU2/assets/7050568/a16db8e1-78c5-482b-a91a-4b0d59b52f0d)",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2194#issuecomment-1891845061:207,Green,Green-Gauss,207,https://su2code.github.io,https://github.com/su2code/SU2/pull/2194#issuecomment-1891845061,2,"['Green', 'green']","['Green-Gauss', 'green']"
Energy Efficiency,"Below is a zoom of the 2D flow in a rectangular channel. The flow is from left to right. The top side is a wall, the left side is the inlet. We are looking at the corner node shared by the inlet and the wall.; Pictures showing the Pressure for old (develop) and new implementation. The local pressure changes reduce by more than one order of magnitude:; ![2024-04-16_23h37_19](https://github.com/su2code/SU2/assets/7050568/d7ca22c1-19be-42d4-b186-294312b9a0cc); ![2024-04-16_23h34_15](https://github.com/su2code/SU2/assets/7050568/4fe91f44-8072-4c7a-a633-7a9acff09f84). Old and new energy near the corner:; ![2024-04-16_23h35_55](https://github.com/su2code/SU2/assets/7050568/1ad10991-bdf4-4bc8-bf90-2e625bd3ef4d); ![2024-04-16_23h33_50](https://github.com/su2code/SU2/assets/7050568/d237f6bb-3a44-4642-937c-1fd6ce3441a2). Near the corner, the y-momentum (radial velocity) is not zero:; ![2024-04-16_23h34_41](https://github.com/su2code/SU2/assets/7050568/b62c7b32-0402-49ff-983a-dc11c171ba95)",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2266#issuecomment-2059984982:309,reduce,reduce,309,https://su2code.github.io,https://github.com/su2code/SU2/pull/2266#issuecomment-2059984982,2,"['energy', 'reduce']","['energy', 'reduce']"
Energy Efficiency,Build SU2 and run regressions on self hosted aarch64 runner scheduled,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1619:60,schedul,scheduled,60,https://su2code.github.io,https://github.com/su2code/SU2/pull/1619,1,['schedul'],['scheduled']
Energy Efficiency,Build on self hosted aarch64 runner scheduled 2,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1659:36,schedul,scheduled,36,https://su2code.github.io,https://github.com/su2code/SU2/pull/1659,1,['schedul'],['scheduled']
Energy Efficiency,"Can you confirm what results you're actually getting with the `SUPERSONIC_SHOCK` option? I'm having trouble producing something like what you see in the figure above. When I run the `SUPERSONIC_SHOCK` option, I get no elements adapted (3626 elements for both cases). This has to due with how the supersonic shock refinement is set up, which seems ad-hoc. I don't think the `SUPERSONIC_SHOCK` option can be used for general cases. Other developers know more about this than me--that section of the code goes all the way back to v1.0 of SU2. Maybe @fpalacios or @economon can tell you more about the mesh adaptation?. You might also be interested in the recent collaboration between the SU2 developers and the developers of the INRIA-AMG library. It seems like SU2 development is moving away from in-house mesh adaptation codes and more towards leveraging the AMG library. There was a presentation about it back in 2016 [that you can find here](https://su2code.github.io/documents/su2_dev_alonso.pdf). There was also a talk about it at the recent SU2 conference that [you can watch here on YouTube](https://youtu.be/jkZaPsKDvvQ?t=16318).",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/606#issuecomment-438766705:227,adapt,adapted,227,https://su2code.github.io,https://github.com/su2code/SU2/issues/606#issuecomment-438766705,3,['adapt'],"['adaptation', 'adapted']"
Energy Efficiency,"Can you run it with valgrind to check if there is a memory issue? Compile with -g. Also, does the problem persist if you reduce the number of MPI ranks?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1156#issuecomment-755280266:121,reduce,reduce,121,https://su2code.github.io,https://github.com/su2code/SU2/issues/1156#issuecomment-755280266,1,['reduce'],['reduce']
Energy Efficiency,"Certainly sounds like an important data point, as our comms are non-blocking too.; I'm not familiar with Open FOAM to go peek under the hood, but from this page (https://www.openfoam.com/releases/openfoam-v1712/parallel.php) it sounds like it uses a multilevel domain decomposition, decompose by nodes, then by processors, and then by cores (maybe). Which would reduce the number of comms going in/out of each node (which is what the hybrid solver hopes to achieve). I remember seeing output messages from CFX indicative of similar strategies. We don't have as many people working on performance as the organizations behind those codes, but we will get there.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/894#issuecomment-593638807:362,reduce,reduce,362,https://su2code.github.io,https://github.com/su2code/SU2/issues/894#issuecomment-593638807,1,['reduce'],['reduce']
Energy Efficiency,Changed time-averaging algorithm to reduce performance impact.,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1548:36,reduce,reduce,36,https://su2code.github.io,https://github.com/su2code/SU2/pull/1548,1,['reduce'],['reduce']
Energy Efficiency,"Classic stale bot. There are only 2 fixes since the UR fix was merged into develop in #1057, the Inner vs TimeIter fix and turning off CFL adaptation for the discrete adjoint (which I just added). If we're holding off on any algorithmic changes, I guess the only thing to discuss is which CFL should be used for the discrete adjoint. As is, it'll use whatever's specified in CFL_NUMBER in the config file, but I'm personally in favor of storing the local CFL to reduce the bottleneck of the adjoint. This could also be part of a separate PR if you need the bug fixes yesterday.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1036#issuecomment-739058644:139,adapt,adaptation,139,https://su2code.github.io,https://github.com/su2code/SU2/pull/1036#issuecomment-739058644,2,"['adapt', 'reduce']","['adaptation', 'reduce']"
Energy Efficiency,Cleanup adaptation,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1153:8,adapt,adaptation,8,https://su2code.github.io,https://github.com/su2code/SU2/pull/1153,1,['adapt'],['adaptation']
Energy Efficiency,Collection of improvements to reduce the computational cost of the cte. CL mode.,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/455:30,reduce,reduce,30,https://su2code.github.io,https://github.com/su2code/SU2/pull/455,1,['reduce'],['reduce']
Energy Efficiency,"Compile with -g or when using meson just add --buildtype=debug to the arguments to build the executable. Then run it as follows. mpirun -np 40 valgrind SU2_CFD case.cfg. The probably get quite a few false warnings from MPI, but you can filter those out. Try to reduce the number of ranks, if possible.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1156#issuecomment-755310139:261,reduce,reduce,261,https://su2code.github.io,https://github.com/su2code/SU2/issues/1156#issuecomment-755310139,1,['reduce'],['reduce']
Energy Efficiency,"Current within the fluid_model.hpp defines the CFluidModel class with varibles however, the variables have incorrect commenting for the briefs with majority of the second half being repeated. From this it's difficult to determine what the variables actually are a part of as the nomenclature of them is a little ambiguous. Could this be sorted?. `class CFluidModel {. protected:; su2double StaticEnergy, /*!< \brief Internal Energy. */; Entropy, /*!< \brief Entropy. */; Density, /*!< \brief Density. */; Pressure, /*!< \brief Pressure. */; SoundSpeed2, /*!< \brief SpeedSound. */; Temperature, /*!< \brief Temperature. */; dPdrho_e, /*!< \brief DpDd_e. */; dPde_rho, /*!< \brief DpDe_d. */; dTdrho_e, /*!< \brief DTDd_e. */; dTde_rho, /*!< \brief DTDe_d. */; Cp, /*!< \brief Specific Heat Capacity at constant pressure. */; Mu, /*!< \brief Specific Heat Capacity at constant pressure. */; dmudrho_T, /*!< \brief Specific Heat Capacity at constant pressure. */; dmudT_rho, /*!< \brief Specific Heat Capacity at constant pressure. */; Kt, /*!< \brief Specific Heat Capacity at constant pressure. */; dktdrho_T, /*!< \brief Specific Heat Capacity at constant pressure. */; dktdT_rho; /*!< \brief Specific Heat Capacity at constant pressure. */`",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/414:425,Energy,Energy,425,https://su2code.github.io,https://github.com/su2code/SU2/issues/414,1,['Energy'],['Energy']
Energy Efficiency,"Dark mode?; ""Is it possible to learn this power?""",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1129#issuecomment-743123950:42,power,power,42,https://su2code.github.io,https://github.com/su2code/SU2/pull/1129#issuecomment-743123950,2,['power'],['power']
Energy Efficiency,"Dear @ChiefSeaBiscuit ,. thank you very much for bringing up this issue. I will open in the coming days a pull request with the implementation of non-polytropic gas model, in which the specific heat capacity will be a function of the temperature. I will take the opportunity in that pull request to fix all the bad commenting. In the mean time, i can describe what this properties are:. **_dPdrho_e_**, /!< \brief derivative of pressure w.r.t. density at constant energy; **_dPde_rho_**, /!< \brief derivative of pressure w.r.t. energy at constant density; **_dTdrho_e_**, /!< \brief derivative of temperature w.r.t. density at constant energy; **_dTde_rho_**, /!< \brief derivative of temperature w.r.t. energy at constant density; **_Cp_**, /!< \brief Specific Heat Capacity at constant pressure. /; **_Mu_**, /!< \brief laminar viscosity; **_dmudrho_T_**, /!< \brief derivative of the laminar viscosity w.r.t. density at constant temperature; **_dmudT_rho_**, /!< \brief derivative of the laminar viscosity w.r.t. temperature at constant density; **_Kt_**, /!< \brief laminar thermal conductivity; **_dktdrho_T_**, /!< \brief derivative of the laminar thermal conductivity w.r.t. density at constant temperature; **_dktdT_rho_**; /!< \brief derivative of the laminar thermal conductivity w.r.t. temperature at constant density. Regards. Salvo",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/414#issuecomment-315601588:464,energy,energy,464,https://su2code.github.io,https://github.com/su2code/SU2/issues/414#issuecomment-315601588,4,['energy'],['energy']
Energy Efficiency,"Dear Marco,; That’s really an awesome website to show the power of SU2. Definitely make SU2 great. I have no problem now. If I have more relevant questions about AMR, I will reopen the issue. Thanks for your information, Macro!",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/743#issuecomment-514659919:58,power,power,58,https://su2code.github.io,https://github.com/su2code/SU2/issues/743#issuecomment-514659919,1,['power'],['power']
Energy Efficiency,"Dear SU2 developers,. This PR is a long effort to add Hybrid RANS/LES capabilities, specially the Delayed Detached Eddy Simulation with Grey area mitigation and low dissipation schemes proper to unsteady flows. Summary of the contribution:. - Delayed DES:; - Standard SGS; - Vorticity SGS; - Shear Layer Adapted SGS. - Several low dissipation functions:; - DDES FD; - Ducros' shock sensor; - NTS adaptive. - Variants of SA turbulence model:; - Compressibility correction; - Edwards and Chandra; - QCR 2000 (Quadratic constitutive relation). - Low dissipation schemes:; - Low dissipation Roe.; - Low Mach Roe.; - Simple low dissipation AUSM (SLAU and SLAU2). I added only a small regression test for 2D DDES, travis can not handle even the smallest 3D test case that I have. Suggestions are welcome. Best,. Eduardo",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/490:304,Adapt,Adapted,304,https://su2code.github.io,https://github.com/su2code/SU2/pull/490,3,"['Adapt', 'adapt', 'sensor']","['Adapted', 'adaptive', 'sensor']"
Energy Efficiency,"Dear WenyinWei,; presently SU2 is interfaced with the INRIA AMG library for mesh adaptation. You can find all the necessary details and examples at https://pyamg.saclay.inria.fr. There are efforts going on in Stanford to connect it to goal-oriented adaptation.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/743#issuecomment-514651250:81,adapt,adaptation,81,https://su2code.github.io,https://github.com/su2code/SU2/issues/743#issuecomment-514651250,2,['adapt'],['adaptation']
Energy Efficiency,"Dear all,. I simulated Sym_plane_testcases from #657 ; When I simulate axisymmetric probem (AXISYMMETRIC =YES), I found odd value at symmetric axis. This problem doesn't appear when I turn off AXISYMMETRIC option. ![Cp_comparison](https://user-images.githubusercontent.com/74228020/133757118-b17e8772-9919-4cb1-b1f2-8cf18e4a48ac.png); ========================================================================; ========================================================================; .; . ![Density_comparison](https://user-images.githubusercontent.com/74228020/133757136-63ae13a2-7c3d-478f-9a81-7aaf001c6dd2.png); ========================================================================; ========================================================================; .; . ![Mach_comparison](https://user-images.githubusercontent.com/74228020/133757154-9ed10855-3070-4210-b5b5-e2e3f2fad273.png); ========================================================================; ========================================================================; .; . ![Temp_comparison](https://user-images.githubusercontent.com/74228020/133757157-18646978-20e6-49e7-a44f-ac45151b3901.png). It seems that temperature, Mach, and momentum have no problem, but density, pressure, and energy are strange at the symmetric axis...; From #657 , I think it is flux related problem. I attached version 7 configure file I used.; [Sym_BC_test.zip](https://github.com/su2code/SU2/files/7184390/Sym_BC_test.zip). I'm also trying to simulate my axisymmetric problem and this problem appears too in my case.; ![Base_Axis](https://user-images.githubusercontent.com/74228020/133761583-b3ea8fb4-876a-422c-a957-4a0ce1cc9783.png); Symmetric BC is x-axis. How I fix this problem? Could anyone help me?. Thank you. **Desktop (please complete the following information):**; - OS: Ubuntu 18.04; - SU2 Version: v7.1.0",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1373:1256,energy,energy,1256,https://su2code.github.io,https://github.com/su2code/SU2/issues/1373,1,['energy'],['energy']
Energy Efficiency,"Dear all,. I was having some memory issues when running FSI problems using the code in my branch. In particular, when running unsteady F-S simulations (which also subiterate internally on each time step) a big amount of memory was being used, and kept increasing as the simulation moved on. I found out that new spaces in memory were being allocated every time I was updating the mesh using the volumetric movement structure, this is, every subiteration. This lead to a very big amount of memory being used. In my particular case, this problem may be solved by initializing the LinSysSol, LinSysRes and StiffMatrix in the constructor of the CVolumetricMovement class, as opposed to doing so in the function SetVolume_Deformation(). . I changed this into the branch feature_FSI_FEA, and then committed and pushed the changes. Nevertheless, I considered that these changes may affect some of your work, so instead of carrying the modification along with all the other changes in my branch, I think it is better to create a pull request now and make sure it doesn't affect negatively anybody else's work. Cheers,. Ruben",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/200:340,allocate,allocated,340,https://su2code.github.io,https://github.com/su2code/SU2/pull/200,1,['allocate'],['allocated']
Energy Efficiency,"Dear all,. In my opinion, there is a bug in axisymmetric viscous source term of energy equation. ![AxiSymm_3](https://user-images.githubusercontent.com/74228020/131637195-699fc230-e499-4b32-80a4-d309fa6adb01.png); From the equation D-55 of reference in PR#1192 , the energy equation should be ; ```; ...; +v*TWO3*(2*PrimVar_Grad_i[2][1]-PrimVar_Grad_i[1][0]-v*yinv)); ...; ```. below is current code in `void CSourceAxisymmetric_Flow::ResidualDiffusion()` ; ```; residual[3] -= Volume*(yinv*(total_viscosity_i*(u*(PrimVar_Grad_i[2][0]+PrimVar_Grad_i[1][1]); +v*TWO3*(2*PrimVar_Grad_i[1][1]-PrimVar_Grad_i[1][0]; -v*yinv+U_i[0]*turb_ke_i)); +total_conductivity_i*PrimVar_Grad_i[0][1]); -TWO3*(AuxVar_Grad_i[1][1]+AuxVar_Grad_i[2][0]));; ```. I appreciate if someone let me know correct thing if I miss something.; Thank you.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1365:80,energy,energy,80,https://su2code.github.io,https://github.com/su2code/SU2/issues/1365,2,['energy'],['energy']
Energy Efficiency,"Dear reader, . Let me give a little bit background first:. When a massflow is prescribed for periodic flow (`KIND_STREAMWISE_PERIODIC= MASSFLOW`), then a pressure drop is iterated(/adapted in each iteration) to fulfill that massflow requirement. In the Volume Source term only this pressure drop is used. The initial value at solver start is the value given in `STREAMWISE_PERIODIC_PRESSURE_DROP= ??` and for restarted/adjoint simulations the `STREAMWISE_PERIODIC_PRESSURE_DROP` from `flow.meta` is taken. Now this PR:. Until now, the update of the pressure drop, based on the difference between current and prescribed massflow, was done in the Flow solver Preprocessing. That causes some trouble as that routine is called multiple times during normal starts, restarts and even twice(!) for every normal iteration. So do not put any iterated quantities in those like I did. I now did put the update right in front of where it is used -> in the Source_Residual. Like so there shoulnd't be that much trouble of correct taping in that one iteration for the adjoint and it makes the logic of `Inner_iter/outer_iter==0` etc unnecessary. I am not sure the changes up until now are necessary but I am not sure whether they are enough tbh. I will update this description accordingly:. Update: So to give you an idea of the current state of gradient validation. My setup is the good'ol 2D periodic Pin case (fluid-only) with the Design variables being FFD-parameters only around the middle pin (so no Periodic Interface shenanigans up to now) and I have 4 OF: Avg_Temp and Drag on the middle-Pin Surface as well as the Pressure-drop between In/outlet plus massflow through in- OR outlet (which is the same in value but maybe not for the gradient :thinking: ):; 1. For prescribed pressure drop I get a very good agreement for Avg_Temp and Drag (below 0.1% relative diff across the board).; ![image](https://user-images.githubusercontent.com/31306376/152566341-c2d7dc06-c968-41d4-b655-6ba94c211684.png); For Mass",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1536:181,adapt,adapted,181,https://su2code.github.io,https://github.com/su2code/SU2/pull/1536,1,['adapt'],['adapted']
Energy Efficiency,Define Monitored Shape Area,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/788:7,Monitor,Monitored,7,https://su2code.github.io,https://github.com/su2code/SU2/issues/788,1,['Monitor'],['Monitored']
Energy Efficiency,"Delta_Time is only set for the flow, and already includes the flow CFL number, so this is just scaling the time step based on the flow and turbulent CFL. But yes, this ratio would always be one (even for adaptive CFL, @economon can correct me if I'm wrong?) because in `CSolver::AdaptCFLNumber()` we have; ```; solverFlow->GetNodes()->SetLocalCFL(iPoint, CFL);; if ((iMesh == MESH_0) && (config->GetKind_Turb_Model() != NONE)) {; solverTurb->GetNodes()->SetLocalCFL(iPoint, CFL);; }; ```; Maybe Tom had something in mind when storing separate CFL numbers and scaling, but never got around to it so just left them equal? If you want a different turbulent CFL, the option `CFL_REDUCTION_TURB` still exists so you could probably add a `config->GetCFLRedCoeff_Turb()` and see if that helps.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/918#issuecomment-603929367:204,adapt,adaptive,204,https://su2code.github.io,https://github.com/su2code/SU2/issues/918#issuecomment-603929367,2,"['Adapt', 'adapt']","['AdaptCFLNumber', 'adaptive']"
Energy Efficiency,"Documenting the plan discussed in our developers call this morning here:; * Put header and sources together ; * Remove separation between Common/, SU2_CFD/, etc.; * Each major folder becomes a library (geometry/, solvers/, etc.); * Keep some subdirectories in major folders (e.g., solvers/flow/); * Set up include paths in the meson build system to make #include statements clean in the source; * Will prob require removing automake as part of this, which can’t build these libraries in parallel. Still need to finish separating files first. Tasks:; * @talbring - iteration classes; * @jayantmukho - grid adaptation, ADT structure, grid movement; * @pcarruscag - AD structure, folders for fem_\* ; * @economon - fluid model. Somewhat related:; * Run a test to see how many formatting-related conflicts result from running clang-format on and then diffing two fairly different branches (@pcarruscag). Please add anything else I am missing.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/583#issuecomment-631567733:605,adapt,adaptation,605,https://su2code.github.io,https://github.com/su2code/SU2/issues/583#issuecomment-631567733,1,['adapt'],['adaptation']
Energy Efficiency,Enable per-surface heatflux monitoring in history,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1531:28,monitor,monitoring,28,https://su2code.github.io,https://github.com/su2code/SU2/issues/1531,1,['monitor'],['monitoring']
Energy Efficiency,Energy balance,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/800:0,Energy,Energy,0,https://su2code.github.io,https://github.com/su2code/SU2/issues/800,1,['Energy'],['Energy']
Energy Efficiency,Extending CFL adapt to include species transport,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2298:14,adapt,adapt,14,https://su2code.github.io,https://github.com/su2code/SU2/pull/2298,1,['adapt'],['adapt']
Energy Efficiency,"FYI, just so I can keep debugging the RANS adaptation in feature_adap_sst, I've merged it into [feature_adap](https://github.com/su2code/SU2/tree/feature_adap). You should use feature_adap instead from here on out since feature_adap_sst will be pretty volatile. I'll modify my comment above in case anybody references this thread.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/948#issuecomment-619421429:43,adapt,adaptation,43,https://su2code.github.io,https://github.com/su2code/SU2/issues/948#issuecomment-619421429,1,['adapt'],['adaptation']
Energy Efficiency,Feature CFL adaptation initial iteration,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2362:12,adapt,adaptation,12,https://su2code.github.io,https://github.com/su2code/SU2/pull/2362,1,['adapt'],['adaptation']
Energy Efficiency,Feature libROM for reduced order modelling,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1310:19,reduce,reduced,19,https://su2code.github.io,https://github.com/su2code/SU2/pull/1310,1,['reduce'],['reduced']
Energy Efficiency,"First of all, thanks @bmunguia for picking this up.. I ran out of time when we were wrapping up v7, so the approach to check for stalling residuals within the CFL adaption routine was half-baked at best. It can definitely be improved (I'm not happy that I left some magic numbers hard-coded in there!). The implementation that is there to check for stall was very loosely based on the type of check we use for computing the Cauchy criteria (accumulated residual changes over time), but we should consider different approaches altogether. Btw, the original CFL adaption routine used something close to Switched Evolution Relaxation, while the new strategy is Exponential Progression with Under-relaxation (see ""A Robust Adaptive Solution Strategy for High-Order Implicit CFD Solvers,"" AIAA 2011-3696 for a short description of both). As you also guessed, I had wanted to experiment with separate CFL numbers for flow and turbulence but also did not get to it. In the end, as @pcarruscag says, this is a very empirical task. It will be difficult to nail down a perfect configuration for all problems, but we might be able to come up with some best practices for choosing tunable parameters if folks have the time to run a lot of numerical experiments for a range of cases to see what works best.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1036#issuecomment-653182720:163,adapt,adaption,163,https://su2code.github.io,https://github.com/su2code/SU2/pull/1036#issuecomment-653182720,3,"['Adapt', 'adapt']","['Adaptive', 'adaption']"
Energy Efficiency,"First off, I love the changes. A cleanup of COuput and greater output flexibility were much needed. So let me see if I understand this code. Say that I, as a developer, want to add a new variable to the volume output. For example, I want the production of turbulent kinetic energy from the SST model during a compressible simulation. As a user, I can always add new outputs by adding new field names to the config file. But production isn't one of the (currently) available config-file options. So I would have to code it. First, I would obviously make sure that the production is properly stored in the turbulence variable class, with an accessor like `GetTurbProduction()`. Second, in `CFlowCompOutput::LoadVolumeData`, I would add to the appropriate place:. ```cpp; SetVolumeOutputValue(""PRODUCTION"", iPoint, Node_Turb->GetTurbProduction());; ```. Third, I would add `PRODUCTION` as a cfg input by adding the following line to `CFlowCompOutput::SetVolumeOutputFields`:. ```cpp; AddVolumeOutput(""PRODUCTION"", ""Turb_Production"", ""PRIMITVE""); ```. I could also split off production into its own output group by changing `PRIMITVE` to any other name. This name does not have to be registered anywhere else. In other words, I can change `PRIMITVE` to `SST_NUMERICS` and the only other place I need to put `SST_NUMERICS` is my cfg file. Finally, I could add either of the two following lines to my cfg file:; ```; VOLUME_OUTPUT= (COORDINATES, SOLUTION, PRODUCTION) ; VOLUME_OUTPUT= (COORDINATES, SOLUTION, SST_NUMERICS); ``` . Is this example correct? If not, what am I misunderstanding? What am I missing?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/724#issuecomment-514031723:274,energy,energy,274,https://su2code.github.io,https://github.com/su2code/SU2/pull/724#issuecomment-514031723,1,['energy'],['energy']
Energy Efficiency,Fix CFL Turbulence reduction option for adaptive cfl,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2295:40,adapt,adaptive,40,https://su2code.github.io,https://github.com/su2code/SU2/pull/2295,1,['adapt'],['adaptive']
Energy Efficiency,Fix incorrect adaptive CFL reporting,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/233:14,adapt,adaptive,14,https://su2code.github.io,https://github.com/su2code/SU2/pull/233,1,['adapt'],['adaptive']
Energy Efficiency,Fixed bug in green gauss gradient computations for periodic boundaries,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/496:13,green,green,13,https://su2code.github.io,https://github.com/su2code/SU2/pull/496,1,['green'],['green']
Energy Efficiency,Fixed possible infinite loop in mesh adaptation,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/492:37,adapt,adaptation,37,https://su2code.github.io,https://github.com/su2code/SU2/pull/492,1,['adapt'],['adaptation']
Energy Efficiency,"Fixed up the alignment issues, but I really think it is time that we move to an auto-formatter as a project (clang-format or another tool). It is not sustainable in a large project such as this to manually manage it. We can do it as a pre-commit hook, which is a bit harsh as it forces everyone to install the formatter and could cause issues at commit time for folks, or we could also do it as a GitHub action perhaps. For instance, ninja can already do this for us as a one liner: install clang-format, drop a .clang-format file into the root SU2/ directory, configure a build, cd into build folder and ```$ ninja clang-format``` = entire project auto-formatted into a style of our choosing.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/969#issuecomment-625329082:150,sustainab,sustainable,150,https://su2code.github.io,https://github.com/su2code/SU2/pull/969#issuecomment-625329082,1,['sustainab'],['sustainable']
Energy Efficiency,Fixes to turbo monitor,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2320:15,monitor,monitor,15,https://su2code.github.io,https://github.com/su2code/SU2/pull/2320,1,['monitor'],['monitor']
Energy Efficiency,For example Green-Gauss gradients have an exclusion for internal boundaries but not for nearfield ones.,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1329#issuecomment-897967394:12,Green,Green-Gauss,12,https://su2code.github.io,https://github.com/su2code/SU2/pull/1329#issuecomment-897967394,1,['Green'],['Green-Gauss']
Energy Efficiency,"For example, take an average of the surface element size for the markers being monitored.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/100:79,monitor,monitored,79,https://su2code.github.io,https://github.com/su2code/SU2/issues/100,1,['monitor'],['monitored']
Energy Efficiency,"For instance, In Ubuntu you have System Monitor - History where you can see if you hit the memory limits, and you can see which processes are responsible for memory consumption.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/2148#issuecomment-1782420632:40,Monitor,Monitor,40,https://su2code.github.io,https://github.com/su2code/SU2/issues/2148#issuecomment-1782420632,2,"['Monitor', 'consumption']","['Monitor', 'consumption']"
Energy Efficiency,"For simulations with **two or more bodies** defined within a mesh, it is difficult to define their corresponding areas. For instance:. `REF_AREA= 0`. Automatically determines the 'wetted' area of the two shapes 'shell1' and 'shell2' to be plotted or monitored, when we define: . ```; % Marker(s) of the surface to be plotted or designed; MARKER_PLOTTING= ( shell1, shell2 ); %; % Marker(s) of the surface where the functional (Cd, Cl, etc.) will be evaluated; MARKER_MONITORING= ( shell1, shell2 ); ```. **The problem I am having is, how do I manually define the cross-sectional area for both of these shapes, shell1, and shell2.** At the moment I am solely relying on `REF_AREA=0` to determine the area. . For my case this is especially relevant for determining proper drag coefficients.; Thanks.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/788:250,monitor,monitored,250,https://su2code.github.io,https://github.com/su2code/SU2/issues/788,1,['monitor'],['monitored']
Energy Efficiency,"G from a simple time average to a time averaged weighted with a windowing function. For the direct run this is just a post-processing step and changes happen only in signal_processing_toolbox and Coutput. ; - We adapted the seeding for the adjoint run from a the classic time average to a windowed time average. ; - Tests have shown, that higher order windowing regularizers, tend to converge quickly with respect to the averaged time span. We have implemented a ""timeConvergenceMonitor"", that acts similarly to the convergence monitoring of the inner convergence. It applies a cauchy convergence criterion to the chosen windowed time average output coefficients. ; - The cauchy convergence criterion works for direct run, adjoint run and shape optimization scripts; - In case of shape optimization, the script remembers the final time iteration of the direct run. If the final time step is smaller than the ""original"" final time step stated in the configuration file, it adapts the starting time of the adjoint run; and the time to seed the objective function, such that the seeding does not exceed the original time to end the seeding. ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is commented and consistent with SU2 style.; - [x] I have added a test case that demonstrates my contribution, if necessary.; - [x] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/836:1646,adapt,adapts,1646,https://su2code.github.io,https://github.com/su2code/SU2/pull/836,1,['adapt'],['adapts']
Energy Efficiency,"GS lose effectiveness with number of partitions.; Optimum hardware utilization, for routines that are bandwidth-bound it may be beneficial to use all threads available, while for compute-bound or ""algorithm-bound"" ones this may not be the case. **Relation with algorithms**; A typical edge loop reads from 2 locations and writes to 2 locations (gather / scatter access pattern, not to be confused with the instructions) processing multiple edges at the same time can therefore result in race conditions where multiple threads try to update the data of the same point.; There are 3 ways to address this:; - **Coloring**: Edges are colored (grouped) such that edges of the same color have no risk of race conditions, i.e. each endpoint is referenced only once per color (this definition gives you the basis of a greedy algorithm to color edges).; - **Scatter to gather transformations**: Edge quantities (e.g. fluxes) are computed and stored on one pass (i.e. we read from 2 locations and write to 1), on a second pass, over points, we reduce (e.g. sum) the edge quantities for each point, again a gather access pattern. It may also be possible to convert the entire algorithm to a loop over points instead of edges.; - **Atomic operations or locks**: Here when a thread wants to write to a memory location it either needs to do so atomically (this is essentially an operations that always goes through main memory and forces cache coherency) or it needs to acquire a *lock* for the point it is writing to, if it fails to acquire the *lock* (because another thread has it) it needs to wait. None of these is without drawbacks.; - **Coloring** reduces temporal locality, edges are sorted in increasing order of the point indices to reduce cache misses, this means small groups of contiguous edges will share the same ""iPoint"", coloring single edges destroys this. Furthermore coloring either requires edges to be re-sorted by color, or if the edge indices of each color are instead kept in arrays, perfor",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/789#issuecomment-529662724:4462,reduce,reduce,4462,https://su2code.github.io,https://github.com/su2code/SU2/issues/789#issuecomment-529662724,2,['reduce'],['reduce']
Energy Efficiency,"Good idea.. you can easily add the wall distance to the output in LoadLocalData_Flow() in output_structure.cpp. In the images, the half-cylinder (symmetry planes on top and bottom) has a solid zone inside with heat conduction. The interface there is a no-slip wall with the CHT_WALL_INTERFACE type. The downstream surface is also no-slip, but it is a typical ISOTHERMAL wall. Since the CHT_WALL_INTERFACE type was not considered earlier (only the trailing no-slip wall), I think that you will see a reduced wall distance near the cylinder, which will impact the turbulent solution. I expect some differences due to the change.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/605#issuecomment-436307962:499,reduce,reduced,499,https://su2code.github.io,https://github.com/su2code/SU2/pull/605#issuecomment-436307962,1,['reduce'],['reduced']
Energy Efficiency,Good job @EvertBunschoten. If you want we can schedule a call together and plan the development a bit.,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2152#issuecomment-1785154254:46,schedul,schedule,46,https://su2code.github.io,https://github.com/su2code/SU2/pull/2152#issuecomment-1785154254,1,['schedul'],['schedule']
Energy Efficiency,"Good point about making the eigen-functions static. That makes it a lot more accessible in other parts of the code. Will include that in the changes along with the option name changes. . I like the idea about the static allocation, but I foresee a problem that you actually mention. If I convert the variables to be statically defined, I would have to make the eigen-functions accept statically defined arrays. Since most arrays in SU2 are dynamically allocated, this would cause some compatibility issues. . In general, I see the value in making a math library associated with matrix operations. Maybe you could pitch the idea in an issue and get feedback on it?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/570#issuecomment-433963723:452,allocate,allocated,452,https://su2code.github.io,https://github.com/su2code/SU2/pull/570#issuecomment-433963723,2,['allocate'],['allocated']
Energy Efficiency,"Got this question when running a shocktube problem. Used Euler explicit time stepping method and a fixed time step. In addition, I non-dimensionalized the variables. By cheking the solution, the solution is marching by the specified physical time. It is supposed to use the non-dimensional time step, right? If so, then a bug report is submmitted. . if (time_steping) {; # ifdef HAVE_MPI. ```; su2double rbuf_time, sbuf_time;; sbuf_time = Global_Delta_Time;; SU2_MPI::Reduce(&sbuf_time, &rbuf_time, 1, MPI_DOUBLE, MPI_MIN, MASTER_NODE, MPI_COMM_WORLD);; SU2_MPI::Bcast(&rbuf_time, 1, MPI_DOUBLE, MASTER_NODE, MPI_COMM_WORLD);; Global_Delta_Time = rbuf_time;; ```; # endif. ```; for (iPoint = 0; iPoint < nPointDomain; iPoint++){. /*--- Sets the regular CFL equal to the unsteady CFL ---*/; config->SetCFL(iMesh,config->GetUnst_CFL());. /*--- If the unsteady CFL is set to zero, it uses the defined unsteady time step, otherwise; it computes the time step based on the unsteady CFL ---*/; if (config->GetCFL(iMesh) == 0.0){; node[iPoint]->SetDelta_Time(config->GetDelta_UnstTime()); //Here should we use GetDelta_UnstTimeND?; } else {; node[iPoint]->SetDelta_Time(Global_Delta_Time);; }; }; ```. }",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/320:468,Reduce,Reduce,468,https://su2code.github.io,https://github.com/su2code/SU2/issues/320,1,['Reduce'],['Reduce']
Energy Efficiency,Guilty as charged.,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1124#issuecomment-746305289:10,charge,charged,10,https://su2code.github.io,https://github.com/su2code/SU2/pull/1124#issuecomment-746305289,1,['charge'],['charged']
Energy Efficiency,"Guys,. Thanks for your feedback. @pcarruscag, the reason why I made a different enum rather than a boolean USE_SST_SUSTAINING_TERMS is that all different SA versions also have a different enum. So I thought this was more consistent. But if there is a strong preference for an additional boolean, I'm fine with that as well. What we can do is to keep the enum and set the boolean USE_SST_SUSTAINING_TERMS internally and overwrite SST_SUST to SST. @talbring, @jayantmukho, I am in favor of keeping the original version of SST. Although the difference between the models is rather small, basically the addition of one term, the difference in results can be quite significant, especially for relatively low Reynolds numbers and large value of the turbulent intensity. . @economon, you are right that a lot of the checks for SST are actually more general checks for a two equation model. So I think that most, if not all, checks for SST can be replaced be a check for the number of turbulent equations. That is more general as well, in case we want to add additional turbulence models in the future, assuming that an equation is present for the turbulent kinetic energy if the number of turbulence equations is two or bigger.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/765#issuecomment-524053082:1158,energy,energy,1158,https://su2code.github.io,https://github.com/su2code/SU2/pull/765#issuecomment-524053082,2,['energy'],['energy']
Energy Efficiency,Have you tried different gradient methods? Green-Gauss v Weighted Least Squares,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1373#issuecomment-938679304:43,Green,Green-Gauss,43,https://su2code.github.io,https://github.com/su2code/SU2/issues/1373#issuecomment-938679304,1,['Green'],['Green-Gauss']
Energy Efficiency,"Have you tried the Newton-Krylov approach in SU2? Boostconv sounds like Newton-Krylov. Our limitation with NK at the moment is that we don't have a good linear preconditioner to converge the Krylov solver to reasonable tolerances at high CFL (which is required to make this type of approach effective and efficient). In the papers, the types of problems to which they apply these methods are very different from the application you have in mind. There is a lot of work that should be done on the numerical schemes for high-speed (and even low-speed) to understand where the robustness issues originate. If these methods can be used as black boxes, it would be a good idea to implement them via the Python wrapper if possible.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/2022#issuecomment-1533813361:305,efficient,efficient,305,https://su2code.github.io,https://github.com/su2code/SU2/issues/2022#issuecomment-1533813361,1,['efficient'],['efficient']
Energy Efficiency,"Having spent some time on implementation details of linear algebra topics, and a bit of time on small algorithmic improvements to a few numerics classes, I would now like to focus on another performance bottleneck we have. One that always seemed quite daunting to tackle (to me) due to the amount of changes it would require, but recently I had a silly idea to reduce the invasiveness of the ""procedure"". Discontiguous data structures are absolute performance killers for low order FVM.; *(skip this paragraph if this is obvious)*; What data structures? All the small ones the solver needs to ""visit"" to compute residuals.; Why? Mostly because they destroy locality. The useful data stored by consecutive nodes is very far apart. Modern CPU's try to hide the latency of accessing main memory (RAM) by caching frequently used areas of that memory, this effort is very easily undermined by accessing memory at random or predictably but at very large strides.; Let me give you some numbers, for CNSVariable in 2D the average distance between the primitives at consecutive nodes is 200 doubles or 1600 bytes. ""What?! is the compiler dumb?"" No, virtual methods take up quite a bit of space `sizeof(CNSVariable)` is 424 bytes, before it allocates any data.; And that can only get worse as more functionality is added to the code. This is one of those ""well known"" things at least in a qualitative way, but let us try and quantify the cost using an approximation of our typical use case scenario.; *Spoiler alert:* It is up to one order of magnitude, if this does not surprise you feel free to go straight to ""Proposed solution"". We will have a variable class that stores some data with some overhead (the 200 doubles):; ```; class VariableBase; {; protected:; double* primary;; public:; VariableBase(int nVar, int overhead);; virtual ~VariableBase();; inline double* GetPrimary() {return primary;}; inline virtual double* GetSecondary() {return nullptr;}; };. VariableBase::VariableBase(int nVar, int overhe",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/716:361,reduce,reduce,361,https://su2code.github.io,https://github.com/su2code/SU2/issues/716,1,['reduce'],['reduce']
Energy Efficiency,"Hello Pedro, ; thank you for your last comment, I think that some unintended double accounting was happening.; I removed two sections:; - the first with if (rotating_frame) is captured by if (dynamic_grid) in CFVMFLowSolverBase ; - the second if (windgust) should be zero anyway. The results look plausible to me: the green line shows farfield onflow + gust while the violet line shows moving grid + gust. If you zoom in (second plot) you see some small differences, for which I have no explanation so far. . What do you think? ; (Side note: I will be in the Alps for the next few day and be back in office on Thursday. ). ![NACA0009_gust+movinggrid](https://user-images.githubusercontent.com/96138805/227219816-2687753e-eee0-4e97-8853-11314605abc4.png); ![NACA0009_gust+movinggrid_zoom](https://user-images.githubusercontent.com/96138805/227219831-948d4899-3b30-4c3d-bd0d-ed3d3b53fddc.png)",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1954#issuecomment-1481223303:318,green,green,318,https://su2code.github.io,https://github.com/su2code/SU2/pull/1954#issuecomment-1481223303,1,['green'],['green']
Energy Efficiency,"Hello SU2 Community! . I am simulating flow over a 6-blade propeller and modeling 1/6th of the domain with an assumption that it is axisymmetric. I meshed the computational domain generating an unstructured grid using ANSYS Meshing with a targetted y+<1 and simulated the case using a pressure-based (SIMPLE) solver with S-A turbulence model in Fluent. It is a steady-state simulation and used a frozen rotor approach. Fluent converged after the reduction of continuity residuals by four orders of magnitude. For simulating the domain in SU2, I had converted the mesh into CGNS format, simulated with similar settings using SU2's RANS Solver (S-A) with rotating domain and periodic boundary conditions. The simulation converges as the residuals drop by two orders of magnitude and monitors stabilize after 30k iterations. . On checking the contours, the SU2 predicts relatively high y+ values, especially near the junction of propeller blade root and spinner, where the values go up to y+~250, while it is around y+=1-2 in the rest of the domain. Whereas, Fluent predicts the y+<1 throughout for the same mesh. The values of forces and moment are off by two orders, on comparing it with the Fluent and experimental results. But, flow-field and contours of pressure distribution look similar for both SU2 and Fluent. I'm wondering what might have led to the difference in the results. I have refined the mesh, but it only reduces y+ by a small number. I have attached the config file and would like some inputs. Thanks in advance. [Prop_config.txt](https://github.com/su2code/SU2/files/5857368/Prop_config.txt)",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1175:781,monitor,monitors,781,https://su2code.github.io,https://github.com/su2code/SU2/issues/1175,2,"['monitor', 'reduce']","['monitors', 'reduces']"
Energy Efficiency,"Hello Tobi, Charanya, ; I run the simulation with my FSI framework including @economon modifications as suggested by @TobiKattmann. Unfortunately the simulation crashed due to server problems before it was complete but the partial results give us some preliminary information.; ![Comparison](https://user-images.githubusercontent.com/23583209/83328161-42989c00-a281-11ea-8b52-39b1967c1f69.jpg). The figure proposes the same time domain GAF comparison shown in https://github.com/su2code/SU2/issues/828#issuecomment-576826669.; The blue line is the GAF for the bending mode of the ONERA M6 as calculated with the new (at the time) BC. The red line is calculated enforcing the old boundary conditions as suggested by @cvencro and which proved to be a successful approach in retrieving the validated old results. Here in green I add the solution run with Tom's fix of the BC as discussed with Tobi. You can notice how this new version, while featuring a response similar to the reference response, shows a filtering of the higher frequency dynamics. Can't do yet the Fourier transform of the signal to quantitatively asses at which frequency the results start diverging from the reference, so I don't know how much this discrepancy is, in effect, relevant. ; We are talking about really high frequency dynamics which may be due to the numerical scheme. Certainly, it would be interesting to understand the cause of that.; ; Best,; Rocco",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/828#issuecomment-636327003:818,green,green,818,https://su2code.github.io,https://github.com/su2code/SU2/issues/828#issuecomment-636327003,1,['green'],['green']
Energy Efficiency,"Hello everyone,. We are trying to use SU2-pyamg on the server. ; We followed the installation steps on SU2 website and did not face any compilation error. . Steps we followed:; 1. Download the file with git (""Install a custom version of SU2"" section in https://pyamg.saclay.inria.fr/pyamg.html); 2. cd SU2; 3. ./bootstrap; 4. ./configure --prefix=$HOME/SU2 --enable-mpi --with-cc=/opt/intel/compilers_and_libraries_2019.5.281/linux/mpi/intel64/bin/mpicc --with-cxx=/opt/intel/compilers_and_libraries_2019.5.281/linux/mpi/intel64/bin/mpicxx CXXFLAGS=""-O3"" ; 5. make -j 8 ; 6. make install. Then we added the following lines to bashrc file:. export PYTHONPATH=""/usr/lib64/python2.7/site-packages""; export SU2_RUN=""$HOME/su2-installed/bin""; export SU2_HOME=""$HOME/SU2""; export PATH=$PATH:$SU2_RUN; export PYTHONPATH=$PYTHONPATH:$SU2_RUN. We downloaded example file from pyamg website:; https://pyamg.saclay.inria.fr/pyamgexamples.html (Adaptive 3D ONERA M6 wing example). During running, we encountered the following error:. $HOME/su2-installed/bin/mesh_adaptation_amg.py -f adap_ONERAM6.cfg -n 4 > out.txt &; [1] 166739; [user@host pyamg-su-test]$ Traceback (most recent call last):; File ""/home/eduline/su2-installed/bin/mesh_adaptation_amg.py"", line 111, in <module>; main(); File ""/home/eduline/su2-installed/bin/mesh_adaptation_amg.py"", line 72, in main; options.save_all ); File ""/home/eduline/su2-installed/bin/mesh_adaptation_amg.py"", line 101, in mesh_adaptation_amg; SU2.run.amg(config); File ""/home/eduline/su2-installed/bin/SU2/run/amg.py"", line 212, in amg; pyamg.su2_to_libmeshb(config_amg['adap_back'], """", ""amg_back""); **UnboundLocalError: local variable 'pyamg' referenced before assignment**. Python version is 2.7.5 and we installed pyamg by running ""sudo pip install pyamg"". . Any help would be appreciated. Best regards,. Mirac",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/948:933,Adapt,Adaptive,933,https://su2code.github.io,https://github.com/su2code/SU2/issues/948,1,['Adapt'],['Adaptive']
Energy Efficiency,"Hello everyone. I am working with SU2 on the feature_adap branch and have come across an issue during the execution of the mesh adaptation script. After following the standard installation procedure and verifying the installation (the exact same steps that @chesiv presented), I encountered a problem when running the mesh_adaptation_amg.py script. The command used was:. ```; python3 $SU2_RUN/mesh_adaptation_amg.py -f adapt_Mesh.cfg -n 4; ```; The script initiates the mesh adaptation process as expected, with the following output:. ```; SU2-AMG Anisotropic Mesh Adaptation. Mesh adaptation options:; PYADAP_COMPLEXITY : (30000, 60000, 120000); PYADAP_SUBITE : (2, 2, 2); PYADAP_SENSOR : GOAL; PYADAP_HMAX : 500.0; PYADAP_HMIN : 1e-9; PYADAP_HGRAD : 1.8. ./adap exists. Removing old mesh adaptation in 10s.; The ./adap folder was deleted. Generating GMF background surface mesh.; Initial CFD solution is provided.; ```; However, no _adap\ite0_ folder gets created. ; The log.err file in the _adap/ini_ directory provides this traceback:. ```; Traceback (most recent call last):; File "".../mesh_adaptation_amg.py"", line 111, in <module>; ...; RuntimeError: ...; Error in TokenizeString(): two or more options before an ""="" sign in the configuration file.; terminate called after throwing an instance of 'int'; ...; *** Process received signal ***; Signal: Aborted (6); Signal code: (-6); ...; ```. The critical part of this error seems to be the Error in TokenizeString() message, suggesting an issue with parsing the configuration file. This error typically indicates a syntax problem, such as having multiple options on a single line without proper separation by an equal sign (=). However, upon reviewing _adap/ini/config_CFD.cfg_, was unable to find any lines that clearly violated this syntax rule. Could this error be indicative of a more subtle issue within the configuration file, or might it be related to specific aspects of the feature_adap branch? Any insights, suggestions, or guidance ",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/948#issuecomment-1847333809:128,adapt,adaptation,128,https://su2code.github.io,https://github.com/su2code/SU2/issues/948#issuecomment-1847333809,9,"['Adapt', 'adapt']","['Adaptation', 'adaptation']"
Energy Efficiency,"Hello!. I am new to SU2 and I'm having trouble running the incompressible turbulent RANS NACA0012 test case on SU2 in Windows.; I have downloaded the binary excecutables SU2 v7.3.0 and my simulation seems to stop after 250 iterations with the error:. _Error in""bool CFileWriter::OpenMPIFile(std::__cxx11::string)"":; Unable to open file restart_flow.dat_. At first I thought that perhaps my MPI I/O was causing this error to occur, however this error also appears when I run the case in serial.; I have had a look at the SU2 documentation and on this forum and so far I haven't been able to find a similar error happening for anyone else. I am not sure how to go about fixing this issue so any help is appreciated. I have attatched the configuration file and screenshots from Windows Powershell to this post and the mesh I am using is n0012_897-257.su2.; Let me know if I need to clarify any further details. Thank you!. **Desktop (please complete the following information):**; - OS: Windows 10.0.19043; - C++ compiler and version: g++ MinGW-W64 8.1.0; - MPI implementation and version: Microsoft MPI v10.1.2 ; - SU2 Version: v 7.3.0 'Blackbird'; [turb_NACA0012_sa.txt](https://github.com/su2code/SU2/files/8005251/turb_NACA0012_sa.txt); ![SU2_error_1](https://user-images.githubusercontent.com/99037921/152580001-7c7670fd-b5ca-4667-a4f5-16350cb67378.png); ![SU2_error_2](https://user-images.githubusercontent.com/99037921/152580035-fe0d1954-2044-4767-a4f8-47effb1d1082.png); ![SU2_error_3](https://user-images.githubusercontent.com/99037921/152580030-60da648d-4d96-451c-8449-e17b4a04e01d.png); ![SU2_error_4](https://user-images.githubusercontent.com/99037921/152580021-abb070b1-9d94-4649-a265-c9ad35a678d3.png)",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1537:783,Power,Powershell,783,https://su2code.github.io,https://github.com/su2code/SU2/issues/1537,1,['Power'],['Powershell']
Energy Efficiency,"Hello!; Thanks for your help. Writing the line:; OUTPUT_FILES= RESTART_ASCII. enabled the simulation to run past 250 iterations and after 4500 or so iterations, I was able to yield the correct values for Cl and Cd.; However, an issue still persists. The file restart_flow.csv doesn't seem to appear in the directory. I have amended the config file to have the lines:. OUTPUT_WRT_FREQ = 10; OUTPUT_FILES=(RESTART_ASCII). at the very end. However, after 10 iterations, a csv file isn't created.; I am not sure how to go about fixing this issue so any help is appreciated.; I have attatched the amended configuration file and a screenshot from Windows Powershell.; [turb_NACA0012_sa.txt](https://github.com/su2code/SU2/files/8008885/turb_NACA0012_sa.txt). Thank you; ![SU2_](https://user-images.githubusercontent.com/99037921/152658358-bdf3c06c-d3a6-4343-aa14-d5d7c7374cb9.png); !",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1537#issuecomment-1030696289:649,Power,Powershell,649,https://su2code.github.io,https://github.com/su2code/SU2/issues/1537#issuecomment-1030696289,1,['Power'],['Powershell']
Energy Efficiency,"Hello, I'm Minsul. I am struggling to compile SU2-feature_adap branch. My purpose for using the branch is mesh adaptation. But the problem is that whenever I command ./meson.py build,. It shows the error message: meson.build:1:0: ERROR: Value ""c++11"" for combo option is not one of the choices. Possible choices are: ""none"", ""c++98"", ""c++03"", ""gnu++98"", ""gnu++03"". So I tried to edit meson.build file. not c++11 but c++03 or c++98. But I get to know that It is necessary of c++11 to compile SU2_CFD. Is there any one else who can help me solve this problem?. Thank you.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/2033:111,adapt,adaptation,111,https://su2code.github.io,https://github.com/su2code/SU2/issues/2033,1,['adapt'],['adaptation']
Energy Efficiency,"Hello,. I ran an incompressible case with NACA 0012 (AoA=0, TMR case) and I see a similar difference between SA and SST on the grid level 3 (https://turbmodels.larc.nasa.gov/naca0012_grids.html, 257 points on the airfoil surface). I also tried the SST_SUST model and have attached the plots for mid section and wake here (white lines - SA, red - SST, green - SST_SUST). The SUST model gives the same difference at mid chord and LE but not in the wake. The SST_SUST under predicts the drag value though (also I had some convergence issues with SUST).; ![pressure_line_cmp_mid](https://user-images.githubusercontent.com/28007882/66496216-dd5a2580-eaba-11e9-869e-097cce8e52b4.png); ![pressure_line_cmp_wake](https://user-images.githubusercontent.com/28007882/66496217-dd5a2580-eaba-11e9-9c72-1980625dd550.png). @economon , the SetStressTensor routine includes the -2/3 * rho * TKE term, so I suppose the TKE is accounted for in the viscous residual of the mean flow equations. . @emoralest6 if you wanted to check the source code, the mean flow solver is in SU2_CFD/src/solver_direct_mean.cpp and the corresponding numerics in the SU2_CFD/src/numerics_direct_mean.cpp file. Cheers.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/797#issuecomment-540063840:351,green,green,351,https://su2code.github.io,https://github.com/su2code/SU2/issues/797#issuecomment-540063840,1,['green'],['green']
Energy Efficiency,"Hello; I'm so glad to see that the su2 meeting has been so productive!; To address Eran's concern, maybe it would be more reasonable to run v&v on; major releases only, aka 7.0 but not 7.1, and I agree that keeping a record; of the most recent version checked is a good idea-and as necessary minor; releases could be tested, as suggested by individual developers. The regression tests should ensure that the v&v results will be unlikely to; be changed. One thing we can do to reduce that risk further would be to; introduce regression tests that compare solution files rather than the; terminal output alone. I can take a stab at that if there's no other; volunteers- probably only needs to be a couple of critical tests, the file; diff may be slightly more expensive than currently, but given the increase; in test precision and detail I think it would be worth it. H. On Thu, Sep 20, 2018, 1:46 PM erangit <notifications@github.com> wrote:. > Hi All; > I’m a bit worried about the logistics related to checking this v&v data; > base for every new release.; > Unlike the tutorials, these cases, by their nature will be large and will; > require long integrations(the 2D cases might not fall on this category).; > This means also that significant computational resources will be required; > for this evaluation (about twice a year for a growing list of cases). Is it; > practical?; > The only way that I think that it might work is that each contributor will; > be responsible for checking the casesthat he has introduced, before each; > release. Being a voluntary institution, this can not be enforced (and we do; > not want to enforce). How about trying to be less demanding:; > In each validation case there will be a statement about the last version; > that it was checked with and the responsible contributor. Each contributor; > will receive a recommendation to check his cases before a new release, and; > will be able to do that and update the OK label also after the release.; > Less waterpro",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/581#issuecomment-423283690:476,reduce,reduce,476,https://su2code.github.io,https://github.com/su2code/SU2/issues/581#issuecomment-423283690,1,['reduce'],['reduce']
Energy Efficiency,"Here a fluid-only case that somewhat quickly converges. Contains the mesh, 1 cfg for primal and adjoint and a little bash-script where the path to the SU2 binaries has to be adapted to fit your system. The idea was to first run primal and adjoint with vanilla develop and then the same with the new code. I left the log-files of my run in there as well for a quick look . If there is something else I can do let me know. . [new-per-bc-test.tar.gz](https://github.com/su2code/SU2/files/8408958/new-per-bc-test.tar.gz)",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1585#issuecomment-1087404188:174,adapt,adapted,174,https://su2code.github.io,https://github.com/su2code/SU2/pull/1585#issuecomment-1087404188,1,['adapt'],['adapted']
Energy Efficiency,"Hey Akshay,; I found out the other day that this: `unordered_map<pair<int,int>, su2double>` does not work without extra tricks, and the alternative `map<pair<int,int>, su2double>` may not be very efficient, so if you have it out of the config in some matrix format it is probably better.; Cheers,; Pedro",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/877#issuecomment-653157902:196,efficient,efficient,196,https://su2code.github.io,https://github.com/su2code/SU2/pull/877#issuecomment-653157902,1,['efficient'],['efficient']
Energy Efficiency,"Hey Tom,. this was fast ! Thanks for the first step in making the output structure more efficient and flexible. So far it looks good. I'll test it for the adjoint soon. @LaSerpe I think for the beginning these things will be hard-coded. But defining this in the config file is definitely a feature we should discuss.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/328#issuecomment-259400331:88,efficient,efficient,88,https://su2code.github.io,https://github.com/su2code/SU2/pull/328#issuecomment-259400331,1,['efficient'],['efficient']
Energy Efficiency,"Hey everyone! Just posting the results from one of the NASA TMR verification test cases I have been running: [the DSMA661](https://turbmodels.larc.nasa.gov/airfoilwakeverif500c.html). Using Least Squares (LSQ) for the gradient reconstruction does affect the results and can be seen from this force convergence plot. Using the same gradient reconstruction (GG) gives more accurate results. The two SU2 runs were done using identical linear solver parameters. The only difference is that for the GG+LSQ case, I specified : `NUM_METHOD_GRAD_RECON= LEAST_SQUARES` and for the GG case, I had to reduce the max CFL down to ~20 for it to get stable. . ![cfl_adap_force_convergence_dsma661_SA](https://user-images.githubusercontent.com/30271435/68785755-7ec12380-05f3-11ea-89e3-4b93edeb9d64.png). But due to the much lower maximum CFL, the GG run takes 40-50x longer to reach the same level of convergence. I'm not sure what else can be done to make adaptive CFL better for the GG or WLSQ cases.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/790#issuecomment-553494652:590,reduce,reduce,590,https://su2code.github.io,https://github.com/su2code/SU2/pull/790#issuecomment-553494652,2,"['adapt', 'reduce']","['adaptive', 'reduce']"
Energy Efficiency,"Hey everyone, . We (@bmunguia and I) ran the discrete adjoint on the ONERAM6 wing mesh with ~500, 000 elements and noticed the following memory usage:. MG_LEVEL | DIRECT | DISCRETE_ADJOINT; -| ------------ | -------------; 0| 1.3GB | 16GB; 2| 1.5GB | 33GB. Is this increase in memory consumption expected? . I ran the computation on the develop branch. The mesh is in TestCases/cont_adj_rans/oneram6/ . Cheers, ; Jayant",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/594:284,consumption,consumption,284,https://su2code.github.io,https://github.com/su2code/SU2/issues/594,1,['consumption'],['consumption']
Energy Efficiency,"Hey, . As Tom suggested in #997 I reran the pitching NACA64A010 (already shown above by @cvencro) with the branch `fix_gridvel`. Below CM over AOA which includes a version run with Toms fix which recovers the results given by the old Euler Wall (blue and green curve match) :+1: For comparison I also snipped and added the image from above. . Note that the `+Roe ` in the legend of my image refers to `conv_bound_term` which is the convective scheme used on boundaries (I tried other possiblities that's why I added that `+Roe`). In unmodified code that is always Roe (for compressible flow) as it is hardcoded. . ![CM_over_Aoa](https://user-images.githubusercontent.com/31306376/82845493-22658780-9ee5-11ea-9cdc-0ec4eee7a939.png); ![Cvencro_CMoverAOA828](https://user-images.githubusercontent.com/31306376/82845653-a750a100-9ee5-11ea-8a7b-8610748b6a48.png). I am confident that this also recovers the results that @RoccoBombardieri expects from his case. Can you rerun the case maybe with the `fix_gridvel` branch, or just adding the few changed lines in CEulerSolver.cpp? If that solves this issues I would be more than happy to take of that fix getting merged. . I will also rerun my latest test tomorrow.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/828#issuecomment-633731665:255,green,green,255,https://su2code.github.io,https://github.com/su2code/SU2/issues/828#issuecomment-633731665,1,['green'],['green']
Energy Efficiency,"Hey, I’ve been developing the SU2 FWH solver with a couple of folks over the past few years. If you look me up on google scholar you’ll see our related publications. The idea is to merge it in V7 and make it open source soon. I’m on vacation right now. Let’s schedule a call in around two weeks time? (beckett.y.zhou@gmail.com). Best,; Beckett. On 13. Sep 2020, at 07:38, monika1387 <notifications@github.com> wrote:. ﻿. I am working on this FWH analysis for far field spectra on jet noise from LES by SU2 Code with ADER-DG FEM, results are in good agreement.; First, for FWH, I do not see any good implementation example or readme file to go through this analysis implementation, Can someone please share if it exist anywhere? I see branch only Edurado (still does not have any readme and also its in Python). Second SU2 FWH formulation is based on time domain based (by Farasssat), is anytime SU2 team implemented FWH analysis for frequency domain formulation by Lockard as well? I do not see anything in SU2, If it exists again can someone share details about it? I would like to work on this Freq domain based FWH analysis, so help me if SU2 team developed it anytime or in process?. Thank you in advance for help!. —; You are receiving this because you are subscribed to this thread.; Reply to this email directly, view it on GitHub<https://github.com/su2code/SU2/issues/1073>, or unsubscribe<https://github.com/notifications/unsubscribe-auth/ADXOSTYQYI6NDZIYAM3LXYLSFRLENANCNFSM4RKN7PNQ>.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1073#issuecomment-691701721:259,schedul,schedule,259,https://su2code.github.io,https://github.com/su2code/SU2/issues/1073#issuecomment-691701721,1,['schedul'],['schedule']
Energy Efficiency,"Hi @TobiKattmann . Thank you for making lots of suggestions. I'm out of town now, so I'll address those once I get back later this week. > > Yes, it occurs with the case I added. I haven't tested with single core. As far as I see in CPhysicalGeometry::MatchNearField,; > > the code looks for a nearest point to a point on the nearfield boundary. If it exceeds 1e-1 (which is usually the case if you have; > > real scale mesh), it prints this warning. I'm not sure what this is for. I'm ignoring it since I don't see an issue with this distance; > > exceeding 1e-1.; > ; > Concerning this: I understand this nearfield marker as an internal ""boundary"" which does not alter the usual solution process at all. It is just added to compute some interesting quantity one. So the Nearfield marker needs to be in the mesh right, at the end like all other boundary markers? As such it is defined using mesh points and therefore there should be no discrepancies between nearfield marker nodes and mesh nodes? Am i correct with that, if not please enlighten me what is actually happening :). Yes, nearfield marker is just used to extract required physical quantities and should not alter the usual solution process at all. There should be no discrepancies between nearfield marker nodes and mesh nodes. I haven't checked this part of the code for a while but if I remember correctly, the ""Bad match..."" message is shown if there is discrepancy between a nearfield marker node and the nearest mesh node that is NOT on nearfield boundary. > For example Green-Gauss gradients have an exclusion for internal boundaries but not for nearfield ones. @pcarruscag So, I need to make something similar to internal boundaries? The flowfield looked reasonable though except when I use the VENKATAKRISHNAN limiter where the nearfield boundary seemed to act like half permeable wall.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1329#issuecomment-898144522:1539,Green,Green-Gauss,1539,https://su2code.github.io,https://github.com/su2code/SU2/pull/1329#issuecomment-898144522,1,['Green'],['Green-Gauss']
Energy Efficiency,"Hi @TobiKattmann sorry, I must have missed your message somehow! Thanks for the input, maybe when the mesh adaptation strategy has matured a little more (or is better documented), it can be a bit more easily used. This is also in response to @fredericodpc Right now, I don't know if it is a bug or I'm just unsure of how to correctly use it, but I also have not been able to get the mesh to respect the wing surface. I've also not heard from the branch author either, so I don't know if this is being maintained publically anymore. =( It's a shame because it looked really promising for optimising the cost/accuracy of supersonic solutions!. Ideally, I think one should be able to pass in a representation of the actual surface (either through an stl surface or as a very fine mesh), which should be used as a reference surface. As a minimum, we should be able to set a maximum surface mesh turning angle or some other surface-local control.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/948#issuecomment-846386250:107,adapt,adaptation,107,https://su2code.github.io,https://github.com/su2code/SU2/issues/948#issuecomment-846386250,1,['adapt'],['adaptation']
Energy Efficiency,"Hi @WallyMaier and @pcarruscag ,. I would like to do a test merge on my branch(es) before this gets merged. I just briefly scrolled through the PR but would like to take a closer look. (As close as it can get for +10.000, -10.000 but a lot of that is copied from A to B as already mentioned); I will report tomorrow (tuesday) evening. One thing ahead: I noticed there are quite some files under `Files changed` which have `No changes. ` ...it is also not a mode change (i.e. change in executable permission) ... so what does that mean? At least that is what github shows me in the `Files changed` tab ... in the `jump to file or symbol` list I get some +<some green number>, -<some red number>... so maybe it is just github messing up. Ok, two things ahead: @pcarruscag I guess I would have preferred to have your contributions split into a separate PR like #821 from the beginning as probably the reviews of each PR would be a bit easier",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/818#issuecomment-555043402:660,green,green,660,https://su2code.github.io,https://github.com/su2code/SU2/pull/818#issuecomment-555043402,1,['green'],['green']
Energy Efficiency,"Hi @antares190,. Glad to see that things seem to be starting to work for you. We (Brian) are trying to improve this capability in the solver and any experiences / suggestions / help will be welcome. With that said, this seems like an interesting result. Would you mind submitting it (or other pictures that you like better) so the SU2 Foundation can use it to show this capability to others in the future? The link where you can do this is here<http://su2foundation.org/su2-promotional-material/?utm_source=hs_email&utm_medium=email&utm_content=76584389&_hsenc=p2ANqtz-9fEq2awKk2vd155cCcN_N4mWBCZK-rJ-TqNsZhqSJs-VWn-w7q-H6w8sdiA3LyuOTqlK4eqZhFFstKi-LQFyyGqYPdkwYc9JsNdB1yyd7pqMwTFzA&_hsmi=76584389>. Thanks a lot,. Juan. On Apr 29, 2020, at 1:38 PM, antares190 <notifications@github.com<mailto:notifications@github.com>> wrote:. Thanks Brian,; my bad, I misinterpreted the carpets / logs structure. I successfully ran a test of a very simple case. In the results there are some small artifacts, but the shocks are resolution improved consistently after mesh adaption.; Thanks for the support. [Comparison]<https://user-images.githubusercontent.com/41752169/80644172-84a7a580-8a69-11ea-9f16-58e98c808b73.png>; [ComparisonMesh]<https://user-images.githubusercontent.com/41752169/80644174-85403c00-8a69-11ea-819f-2ac00550a089.png>. —; You are receiving this because you are subscribed to this thread.; Reply to this email directly, view it on GitHub<https://github.com/su2code/SU2/issues/948#issuecomment-621450497>, or unsubscribe<https://github.com/notifications/unsubscribe-auth/AA5FFRCGLBHJCB3FS4JSSV3RPCF5RANCNFSM4MQACOXA>.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/948#issuecomment-621483859:1058,adapt,adaption,1058,https://su2code.github.io,https://github.com/su2code/SU2/issues/948#issuecomment-621483859,2,['adapt'],['adaption']
Energy Efficiency,"Hi @chiefenne Thanks for bringing it up. I think it could additionally serve as a _quality measure_ for the solvers. ; (For instance, one concern sometimes was - don't know whether it still is - mass conservation in the incompressible solver. That would also be reflected in an energy balance if there really was a problem, or one could check in a very easy way if all boundaries that act as a heat sink/source do what they should. Altogether, one would have some global numbers to confirm that the result is reliable..); I think @economon could also be interested in such a feature. I'll have to do some maintenance for heat-related stuff soon, especially to push some fixes for instationary computations. I can then at least check how such a feature could be set up.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/800#issuecomment-542657940:278,energy,energy,278,https://su2code.github.io,https://github.com/su2code/SU2/issues/800#issuecomment-542657940,1,['energy'],['energy']
Energy Efficiency,"Hi @clarkpede I still have the same issue after using the advice you suggested above for having binary to NO. Please find attaches files for your review. I am still seeing same error like @alexfangman . Can you please help?; WARNING: Tried to find 14980 cells suitable for adaptation, but only found 0; The following cell types are currently adaptable: ; + triangles; + quadrilaterals; + tetrahedrons; Your grid may have too high a percentage of other types.; Number of elements to adapt: 0; Homothetic grid adaptation",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/606#issuecomment-504564218:273,adapt,adaptation,273,https://su2code.github.io,https://github.com/su2code/SU2/issues/606#issuecomment-504564218,4,['adapt'],"['adapt', 'adaptable', 'adaptation']"
Energy Efficiency,"Hi @economon ,. I would like to take a quick glance on the presented slides in advance. I always find it easier to follow when I already know whats coming my way. I know that slides are often finished the exact second before the presentation but maybe I am lucky. Also considering that it is quite late here in Germany and the concentration level might drop a little, although you scheduled the Conference quite ""Europe-friendly"" :) . Thanks already,; Tobi",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/470#issuecomment-351961812:381,schedul,scheduled,381,https://su2code.github.io,https://github.com/su2code/SU2/issues/470#issuecomment-351961812,1,['schedul'],['scheduled']
Energy Efficiency,Hi @jf-thomas which version of CGNS are you using ? Maybe applying a cgnsupdate on the mesh file prior to running SU2 might help since SU2 rely on recent cgns version to reduce memory footprint.,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1378#issuecomment-1003706110:170,reduce,reduce,170,https://su2code.github.io,https://github.com/su2code/SU2/issues/1378#issuecomment-1003706110,1,['reduce'],['reduce']
Energy Efficiency,"Hi @monika1387. Even if the reading of the CGNS file works with multiple zones, the FEM_LES solver does not support this at the moment. It will require significant changes in the data structures to allow for this, although I am also interested in it. However, this is going to be a long term effort, also because we are currently changing the FEM solver to allow for more efficient vectorization.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/728#issuecomment-711119949:372,efficient,efficient,372,https://su2code.github.io,https://github.com/su2code/SU2/pull/728#issuecomment-711119949,1,['efficient'],['efficient']
Energy Efficiency,"Hi @msahinae00,. The branch [feature_adap_flux](https://github.com/su2code/SU2/tree/feature_adap_flux) has the fixed wall distance computations (the branch itself isn't up to date with v7, but I merged in develop way after the wall distance was fixed). However, RANS adaptation is still under development. While I've gotten decent looking meshes, e.g.:; ![vortex](https://user-images.githubusercontent.com/19416354/73195095-1c4fcd80-40e2-11ea-9590-4fbc4baf279d.png); ![Screen Shot 2019-11-04 at 1 36 27 PM](https://user-images.githubusercontent.com/19416354/73195106-2245ae80-40e2-11ea-8e24-38ec76d4cfb4.png); I still haven't properly verified the code. Cheers,; Brian",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/606#issuecomment-578842312:267,adapt,adaptation,267,https://su2code.github.io,https://github.com/su2code/SU2/issues/606#issuecomment-578842312,1,['adapt'],['adaptation']
Energy Efficiency,"Hi @pcarruscag ; in fact it was the boolean what I originally wanted to have there, so that it could easily be checked whether a node is a surface vertex without having to loop through the markers. Getting the memory savings this way just came naturally, but it's true that it could be done more efficiently. ; As it's not just the fluid tractions the ones involved, but also the surface pressures, I've reused an old CFEABoundVariable class that was there sitting unused (so, 2 for the price of 1!) to store those containers. It should lead to some additional memory savings.; Cheers,; Ruben",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/663#issuecomment-476578546:296,efficient,efficiently,296,https://su2code.github.io,https://github.com/su2code/SU2/pull/663#issuecomment-476578546,1,['efficient'],['efficiently']
Energy Efficiency,"Hi @pcarruscag I think we're at a place in this PR where we can ask for a code review. In particular, I'm wondering if there is a way to reduce the code complexity in the ComputeCollisionDelta() function. Moving this to its own function reduced repeated code (which was called for each GY transport model) but now I've still got some repeated code and cumbersome logic.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1887#issuecomment-1397789630:137,reduce,reduce,137,https://su2code.github.io,https://github.com/su2code/SU2/pull/1887#issuecomment-1397789630,2,['reduce'],"['reduce', 'reduced']"
Energy Efficiency,"Hi @pcarruscag,; thank you very much for the insight and the well thought proposed solution. I wasn't aware that there was such a loss in performance, it seems clear that something needs to be done. The only question I have is regarding the following comment . > There are no free lunches and this performance improvement would come at the cost of losing the ability to have different types of variables in different parts of the domain. I'm using this feature more and more, I was planning to extend it in the structural solver to remove the `if fsi` statements, and I also used it in the rework of the mesh solver, as defining variables at the interface only reduces greatly the memory footprint (sort of like the node-vertex structures in geometry). You mention there are options to keep this versatility, how difficult do you think would be to implement them?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/716#issuecomment-507998889:661,reduce,reduces,661,https://su2code.github.io,https://github.com/su2code/SU2/issues/716#issuecomment-507998889,2,['reduce'],['reduces']
Energy Efficiency,"Hi @pcarruscag,; thanks so much for all your effort in adapting the PR. As usual, great improvements to the feature from your review. Sorry for the radio silence, as I told you I was away due to unforeseen personal circumstances and I'm only back to office today.; Hopefully it's all ready now, I think this feature is ready to go into the next release. If there are no further comments I'll merge it later today.; Best,; Ruben",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/872#issuecomment-591881962:55,adapt,adapting,55,https://su2code.github.io,https://github.com/su2code/SU2/pull/872#issuecomment-591881962,1,['adapt'],['adapting']
Energy Efficiency,"Hi @rois1995 . For now, I'm ignoring all TKE in Total Energy in personal research. I don't remember the details clearly. ; The problem was that the enthalpy added TKE was stored in the primitive variables. ; When I tried to fix it, the problem was when the enthalpy added TKE was stored in the primitive variables. For the Roe scheme in convective flux calculations (not sure about other flux scheme), the Roe speed of sound is calculated using enthalpy. But as I mentioned above, the stored enthalpy is higher than other simulation because of TKE. I thought it make a problem.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1851#issuecomment-2245163889:54,Energy,Energy,54,https://su2code.github.io,https://github.com/su2code/SU2/issues/1851#issuecomment-2245163889,1,['Energy'],['Energy']
Energy Efficiency,"Hi @rsanfer and @TobiKattmann , I agree with the more generalised solution for rigid and deforming meshes too and this is excellent timing of #760 to combine the new approach. ; I have FSI cases I can use, but thought it would be a good stepping stone to use fluid-only case to begin with to avoid the coupling terms for this verification. Using dynamic surface movement definitions for the single-zone pitching airfoil test which has previously been used for rigid motion, the primal solutions and gradients from finite differences for both are very similar as expected. Therefore this should be a good reference to check the discrete adjoints for deforming mesh when the adaptations for grid velocities are made using #760.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/766#issuecomment-524565760:673,adapt,adaptations,673,https://su2code.github.io,https://github.com/su2code/SU2/pull/766#issuecomment-524565760,1,['adapt'],['adaptations']
Energy Efficiency,"Hi @rsanfer,; I was afraid you were going to say that...; On the subject of memory savings, and taking the specific case of CFEAVariable, the class is 304 bytes before it allocates data, once data is allocated for a plain nonlinear 3D problem the effective size is 704 bytes, looking at the constructors, for such a problem we allocate 22 doubles or 176 bytes. So effectively 75% of the memory (equivalent to 66 doubles) is wasted.; It is important to note that this ""efficiency"" figure does not get much better even when this class allocates all it members (for which one needs fsi + adjoint + unsteady). This happens because operator `new []` needs to store the size of the allocation together with the data for when `delete []` is called so you get ""pointer + size + data"" rounded to a multiple of 16B because of the default alignment.; Therefore my opinion is that we can ""over allocate"" and still save memory, unless you need massive amounts of data for the boundary points(?)... But looking at CFEABoundVariable I don't think that is the case.; If we want to be optimum in terms of performance and memory usage, we would need to mimic the CGeometry strategy in CSolver.; If we do not want to mimic that structure we need to either be able to rely on some ordering of the special cases, e.g. boundary variables stored first, so that at runtime:; ```; double* Get(int iNode) {; if (iNode < nBoundary); return &special[iNode];; else; return &normal[iNode-nBoundary];; }; ```; If we cannot rely on some order we would need to tag nodes ""special"" or ""normal"" and then use some form of map for special cases... All this would cost a lot of indirection.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/716#issuecomment-508082019:171,allocate,allocates,171,https://su2code.github.io,https://github.com/su2code/SU2/issues/716#issuecomment-508082019,5,['allocate'],"['allocate', 'allocated', 'allocates']"
Energy Efficiency,"Hi @rsanfer,; Regarding patterns, larger cases are more likely to have the issue than small ones, I did not test boundary conditions.; I have not tested the forward mode because it differentiates linear solvers and in the past I have found that to be very limiting so I'd rather not go there. The most detailed verification we have is that present by @cvencro at scitech (finite differences). @cvencro do you have any before/after cases where this problem showed?; On the recording of variables, I like the FEM_VARIABLES as a convergence monitor. But for larger sets of variables, e.g. grid nodes, topology, a ""post processing"" recording step makes sense, that increase in memory footprint is why I have not created a PR for FSI shape derivatives yet. I talked about this briefly with @oleburghardt during the annual meeting and the new adjoint driver should have hooks for this type of post processing.; Cheers,; Pedro",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/615#issuecomment-455994325:538,monitor,monitor,538,https://su2code.github.io,https://github.com/su2code/SU2/pull/615#issuecomment-455994325,1,['monitor'],['monitor']
Energy Efficiency,"Hi @timjim333, any luck with the surface mesh deterioration issue? ; I've managed to successfully run the Onera M6 case, with a sufficiently refined volume mesh around the shock wave region, however the wing surface mesh does not follow this adaptation. Does anyone by any chance have a working .cfg file for the M6 case? I may be setting something up incorrectly.; Thanks a lot!",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/948#issuecomment-846093123:242,adapt,adaptation,242,https://su2code.github.io,https://github.com/su2code/SU2/issues/948#issuecomment-846093123,1,['adapt'],['adaptation']
Energy Efficiency,"Hi Antonio, thanks for the review! . Precisely, the point of this PR is to ease generalization of multi-zone, multi-instance problems. For this reason, I am currently working on a branch putting together a CMultizoneDriver, which should be generic enough to accommodate problems involving complex multiphysics. The situation is now that there are a lot of hard-coded constraints, in order for specific features to work. FSI is an example itself; it requires a very strict way of setting up the problem. The same happens with other features such as Multizone HB. While this is ok for showcasing the features, I don't think it's a sustainable approach. For example, if we were to do Turbomachinery FSI, with the current structure it wouldn't be feasible. It would require a ""CTurbomachineryFSIDriver"" class, and more hard coded assumptions. My goal is to get rid of these bottlenecks, by leveraging on the class structure of SU2. Of course, this will require work, but I think it will pay off in the long run. This PR is just a starting point: SU2_DEF, SU2_DOT, etc, will need to be updated accordingly in next stages, together with other changes that are also necessary in the optimization framework and the core code to get rid of a lot of hacks here and there. I will reply to your specific questions separately.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/528#issuecomment-392047648:629,sustainab,sustainable,629,https://su2code.github.io,https://github.com/su2code/SU2/pull/528#issuecomment-392047648,1,['sustainab'],['sustainable']
Energy Efficiency,"Hi Arne,; I'm sorry for the complicated meeting schedules.; SetWind_GustField seems to be resetting the grid velocity based on some conditions.; We should split the cleanup of obsolete code into another PR if possible.; I think you can continue on this PR.; The rotating frame term we have assumes 0 translation velocity, we have `w x u` and based on that Ansys presentation it should be `w x (u - u_translation)` if the translation is parallel to the rotation axis there is no issue, if not the steady state assumption is questionable, so it may be fine to use it as-is.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1954#issuecomment-1506329403:48,schedul,schedules,48,https://su2code.github.io,https://github.com/su2code/SU2/pull/1954#issuecomment-1506329403,1,['schedul'],['schedules']
Energy Efficiency,"Hi Beckett,. Thank you for the response! Sure we can connect back after 2 weeks,; probably I will work on it and also update you by that time what I got. I; have gone through research papers relevant to FWH in SU2 that helps but; implementation is still a question and few concerns on formulation. Anyway; we can connect after your vacation. Thank you for the support. On Sun, Sep 13, 2020 at 1:45 PM BeckettZhou <notifications@github.com>; wrote:. > Hey, I’ve been developing the SU2 FWH solver with a couple of folks over; > the past few years. If you look me up on google scholar you’ll see our; > related publications. The idea is to merge it in V7 and make it open source; > soon. I’m on vacation right now. Let’s schedule a call in around two weeks; > time? (beckett.y.zhou@gmail.com); >; > Best,; > Beckett; >; > On 13. Sep 2020, at 07:38, monika1387 <notifications@github.com> wrote:; >; > ﻿; >; > I am working on this FWH analysis for far field spectra on jet noise from; > LES by SU2 Code with ADER-DG FEM, results are in good agreement.; > First, for FWH, I do not see any good implementation example or readme; > file to go through this analysis implementation, Can someone please share; > if it exist anywhere? I see branch only Edurado (still does not have any; > readme and also its in Python); >; > Second SU2 FWH formulation is based on time domain based (by Farasssat),; > is anytime SU2 team implemented FWH analysis for frequency domain; > formulation by Lockard as well? I do not see anything in SU2, If it exists; > again can someone share details about it? I would like to work on this Freq; > domain based FWH analysis, so help me if SU2 team developed it anytime or; > in process?; >; > Thank you in advance for help!; >; > —; > You are receiving this because you are subscribed to this thread.; > Reply to this email directly, view it on GitHub<; > https://github.com/su2code/SU2/issues/1073>, or unsubscribe<; > https://github.com/notifications/unsubscribe-auth/ADXOSTYQYI6N",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1073#issuecomment-691707725:719,schedul,schedule,719,https://su2code.github.io,https://github.com/su2code/SU2/issues/1073#issuecomment-691707725,1,['schedul'],['schedule']
Energy Efficiency,"Hi Brain. One quick question. I have noticed that you have set ADAP_NORM to 1 (Lp=1) in one example for Euler solution. I am using original PYAMG examples and changing "" remesh_options['Lp'] "" does not alter the adapted mesh. The log file always saying LP=2 . Are you using a different PYAMG version? . Thanks",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/606#issuecomment-650061484:212,adapt,adapted,212,https://su2code.github.io,https://github.com/su2code/SU2/issues/606#issuecomment-650061484,1,['adapt'],['adapted']
Energy Efficiency,"Hi Brian, ; I'm sorry for the late reply, I've been using the feature_adap branch in 2D and 3D with success in the last weeks, so thanks for the amazing work. . After your last commit I recompiled everything, moreover now I'm using `$SU2_RUN/SU2_DEF` before running `mesh_adaption_amg`, so to be sure that element orientation is as expected. The tool is working nice, once the smoothing, grad, adaption values are tuned, thank you very much!. After a bit of use may I add pair of feature request, that in my opinion would improve the overall (already remarkable) quality of the `feature_adap` .; **_Feature request:_**; 1. The possibility to have boundary layer elements (QUAD PENTA) with the mesh adaption would be very much appreciated. If not possible, wouldn't it be possible to force a frozen interface between boundary layer elements?; 2. Add a ""region of interest"" where the refinement takes place. Sometimes it is not required to have sharp shocks resolved far away from the body.; 3. Do you plan to merge this feature in the master branch?. **_Bugs (or at least unexpected behavior):_**; 1. When I use the restart option, even if there is a `restart_flow.dat`, in the base folder, apparently the `mesh_adaption_amg` does not create a link into the \adap\ini\ folder, and I've to manually copy it (quite fast), to effectively enable the restart option. **_Clarification_**; 1. `PYADAP_BACK` option is really interesting, but I don't get it completely: shall I mesh the complete flowfield with higher detail (refined mesh), does this option handle only the body surface (or only the volume inside the body of interest, not the flowfield)? Is there any plan to use geometric files such as step or iges, to have the proper curvatures defined?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/948#issuecomment-637328023:394,adapt,adaption,394,https://su2code.github.io,https://github.com/su2code/SU2/issues/948#issuecomment-637328023,2,['adapt'],['adaption']
Energy Efficiency,"Hi Daniel,. You can find the implementation of variable properties with cubic EoS in the master/develop version. If you need to compute the properties with more accurate thermo-physical models, e.g. multi-parameter, there are 2 main ways:. * By using the external library FluidProp (feature_fluidprop_final, yet outdated); * By means of look-up tables (feature_adjoint_lut). We are about to improve the look-up table method and will work on having this feature in the develop soon. Just let me know if you are interested and I will give you more details. Best,. Matteo. ——————————————————; Dr. ir. Matteo Pini, PhD; Assistant Professor; Propulsion & Power<http://www.pp.lr.tudelft.nl/>; Aerospace Engineering Faculty; Delft University of Technology. Kluyverweg 1; 2629 HS Delft; The Netherlands. Phone : +31 15 27 84794; Skype : matteo_pini1. From: banuti <notifications@github.com>; Reply-To: su2code/SU2 <reply@reply.github.com>; Date: Thursday, 24 October 2019 at 22:18; To: su2code/SU2 <SU2@noreply.github.com>; Cc: Subscribed <subscribed@noreply.github.com>; Subject: Re: [su2code/SU2] variable properties (transport and thermodynamic) for compressible flows with any eos (#794). Hi,. is that branch still active? It seems the last commit was more than two years ago. Best,; Daniel. —; You are receiving this because you are subscribed to this thread.; Reply to this email directly, view it on GitHub<https://github.com/su2code/SU2/issues/794?email_source=notifications&email_token=ABTGC2MB627S4SOHCTMGOTTQQH7KFA5CNFSM4I2YNZ6KYY3PNVWWK3TUL52HS4DFVREXG43VMVBW63LNMVXHJKTDN5WW2ZLOORPWSZGOECGJUEI#issuecomment-546085393>, or unsubscribe<https://github.com/notifications/unsubscribe-auth/ABTGC2JPU76ZE3WG5UUKBYDQQH7KFANCNFSM4I2YNZ6A>.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/794#issuecomment-546316470:650,Power,Power,650,https://su2code.github.io,https://github.com/su2code/SU2/issues/794#issuecomment-546316470,1,['Power'],['Power']
Energy Efficiency,"Hi Floris,. the optimizer does not receive any information on the flow itself. The only information it gets are the objective function and the gradient. The optimizer is typically halving the dv_value if there was no sufficient decrease using the current step size for example if the initial scaling of the objective function was too large. So first of all try to reduce that factor (the number in OPT_OBJECTIVE). You probably need a different value for different regimes and Reynolds numbers as the magnitude of the gradient might be also different then. If that does not help then I think that the reason for the behavior you describe is probably the accuracy of the gradient. Can you have a look at the convergence of the adjoint problem in all of the cases ? Otherwise you can also try the discrete adjoint (discrete_adjoint.py or -g DISCRETE_ADJOINT for shape_optimization.py). Best,; Tim",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/409#issuecomment-314993835:364,reduce,reduce,364,https://su2code.github.io,https://github.com/su2code/SU2/issues/409#issuecomment-314993835,1,['reduce'],['reduce']
Energy Efficiency,"Hi Heather,. I have submitted a problem with my SST case causing divergence. Will you have some time to respond to that. I will greatly appreciate. Thanks. Jehan. Sent from Yahoo Mail on Android. From:""Heather Kline"" notifications@github.com; Date:Mon, May 18, 2015 at 3:17 PM; Subject:Re: [SU2] Adaptive CFL condition (apart from currently available fixed/ramp) (#94). This has been implemented. —; Reply to this email directly or view it on GitHub.￼",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/94#issuecomment-103224627:296,Adapt,Adaptive,296,https://su2code.github.io,https://github.com/su2code/SU2/issues/94#issuecomment-103224627,1,['Adapt'],['Adaptive']
Energy Efficiency,"Hi Himakar,. If you are using python, you don't need to manually delete the connectivity table from the ASCII Tecplot as you can use numpy genfromtxt.(https://docs.scipy.org/doc/numpy/reference/generated/numpy.genfromtxt.html). Another option is to use the following restart_flow binary reader/writer that I wrote in Python. # ----------; def read_restart_bin(filename):. 	# Not efficient way; 	infile = open(filename, 'rb'); 	data = infile.read(); 	infile.close(). 	print ""Size of the file: "", len(data). # The first is a magic number that we can use to check for binary files (it is the hex; # representation for ""SU2"").; 	if (struct.unpack('i',data[:4])[0] != 535532):; 		print ""Magic number 535532 not found in the solution file %s"" %filename; 		sys.exit(); 		#try:; 		#	data_file = read_restart_ascii(filename); 		#	return data_file; 		#except:; 			# Exit; 		#	sys.exit(). 	# The second two values are number of variables and number of points (DoFs). ; 	nvar = struct.unpack('i',data[4:8])[0]; 	ndof = struct.unpack('i',data[8:12])[0]. 	# Read the variable names of the file. Note that we are adopting a; # fixed length of 33 for the string length to match with CGNS.; 	variables_names = []; 	for i in range(nvar):; 		aux = (struct.unpack('33s',data[20+(i)*33:20+(i+1)*33])[0]); 		for j in range(len(aux)):; 			if aux[j] == ""\x00"":; 				break; 		variables_names.append(aux[:j]). 	# Read data in one shoot; 	start = 20 + nvar*33; 	end = start+nvar*ndof*8; 	array = np.asfarray(struct.unpack('%dd'%(nvar*ndof),data[start:end])); 	array = array.reshape(ndof,nvar). 	# The last two values are for metadata: one int for ExtIter and 8 su2doubles.; 	# Metadata: 1 int for ExtIter and 8 doubles; 	#ncount = len(data) - nvar*ndof*8 - 4 - 64; 	ExtIter = struct.unpack('i',data[end:end+4])[0]; 	metadata = struct.unpack('8d',data[end+4:end+4+8*8]). 	# Create dictionary; 	data_file = {'names':variables_names,'data':array, 'ExtIter':ExtIter, 'MetaData':metadata}; 	return data_file. def read_restart_ascii(f",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/787#issuecomment-528461173:379,efficient,efficient,379,https://su2code.github.io,https://github.com/su2code/SU2/issues/787#issuecomment-528461173,1,['efficient'],['efficient']
Energy Efficiency,"Hi Jayant,; Your figures for MG 0 are inline with what Tim reports in his 2015 paper (10-12 times increase).; As for improving it, the computation of the various residual contributions already uses pre-accumulation, so the only way I see to make that even more effective is to pre-accumulate the sum of all residuals for each edge (that would probably make the direct solver a bit faster too).; In looking at the code I noticed that some areas of the pre-processing like setting sensors, eigenvalues, etc. do not use pre-accumulation, maybe someone already tried and saw it did not make a difference? Same goes for the MG prolongation, restriction, smoothing routines.; Cheers,; Pedro",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/594#issuecomment-427559374:479,sensor,sensors,479,https://su2code.github.io,https://github.com/su2code/SU2/issues/594#issuecomment-427559374,1,['sensor'],['sensors']
Energy Efficiency,"Hi Josef,; in general, structural problems are quite stiff and it takes quite a lot of effort for the linear solver to find a solution for u. . I have just run this case in my own computer (GNU compilers), I get:; Iter Time(s) Res[Displx] Res[Disply] Res[Displz] CFEM(Total); 0 4.018591 -8.498274 -8.230638 -8.123824 6.4095e+04; so even I see a very small discrepancy. If LINEAR_SOLVER_ERROR is reduced to 1E-10,; Iter Time(s) Res[Displx] Res[Disply] Res[Displz] CFEM(Total); 0 4.223478 -10.390248 -10.043411 -10.058976 6.4095e+04; so it is just a matter of how much are we letting FGMRES converge. In principle I believe that, if the changes are just in the order of 1,6e-13, it should be fine to put up the tolerance a bit just for this particular case. It's not the same for non-linear structural problems (e.g. configBeam_2d.cfg) where the residuals printed by the code have a different meaning. In any case, just to be on the safe side: would you mind to share with me the file restart_beam.dat ? That way I can quantify the actual change in the results. Thanks,. Ruben",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/347#issuecomment-276688029:395,reduce,reduced,395,https://su2code.github.io,https://github.com/su2code/SU2/issues/347#issuecomment-276688029,1,['reduce'],['reduced']
Energy Efficiency,"Hi Pedro,. It is indeed a good idea to keep similar schemes (with minor variations) under one umbrella, especially central scheme as only the dissipation term calculation differs. . - In case of AUSM+-up1/2 and SLAU1/2, each can be reduced by having a separate pressure flux definition. - But if we try to combine AUSM+-up and SLAU, will it be a clear/helpful implementation as mass flux definitions/calculations (which is substantial portion) are different (unlike the central scheme, where only dissipation term varies)?. - Also could you please shed some light on Jacobian part for these schemes (as you mentioned - “...Isolating the computation of mass and pressure fluxes could be an interesting way to compute the Jacobians of these schemes in a hybrid way ...”). Best; Amit",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/691#issuecomment-499205201:232,reduce,reduced,232,https://su2code.github.io,https://github.com/su2code/SU2/pull/691#issuecomment-499205201,2,['reduce'],['reduced']
Energy Efficiency,"Hi Pedro,. Thanks for sharing the nice idea. If it helps in ramping up the CFL than really good.... One query - generally how Jacobian computation by finite difference or AD tend to be in comparison to analytical Jacobians in terms of cost (time). Probably Analytical jacobians are more efficient but they are difficult to compute for a given scheme (is this mostly true?). . Thanks; Amit",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/691#issuecomment-499632402:287,efficient,efficient,287,https://su2code.github.io,https://github.com/su2code/SU2/pull/691#issuecomment-499632402,1,['efficient'],['efficient']
Energy Efficiency,"Hi Pedro,. Thanks for the hint!. If I understood it correctly, it's possible that after the large temporary array for parallel output is freed, some smaller blocks are eventually allocated in that free space, which means a new block of memory needs to be allocated when the large temporary array is created again. And if this keeps happening over a long enough period of time, the memory usage increases?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1261#issuecomment-818827116:179,allocate,allocated,179,https://su2code.github.io,https://github.com/su2code/SU2/issues/1261#issuecomment-818827116,2,['allocate'],['allocated']
Energy Efficiency,"Hi Ruben,. Thank you for your feedback !. It is hard to tell what to do you to avoid conflicts. Anyway, the most significant part of the changes concerns the parent CDriver class, especially the constructor and some new functions that are pieces of code coming from the main function (like Output and Monitor). So if the contributions are focused on one particular driver (single, multi, ...) and if they are more or less compatible with the main ""driver->run"" then ""driver->update"" structure, it should be straightforward to solve the potential confilcts. Best,. David",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/295#issuecomment-237702911:301,Monitor,Monitor,301,https://su2code.github.io,https://github.com/su2code/SU2/pull/295#issuecomment-237702911,1,['Monitor'],['Monitor']
Energy Efficiency,"Hi Tim,. In collaboration with the Energy Centre Netherlands (ECN) we are interested in participating in the development of a pressure-based incompressible solver. The applications we have in mind are all related to wind turbines, for which compressible solvers perform relatively poorly. We realize that OpenFOAM is very much capable of carrying out such simulations, but the motivation for developing this in SU2 is indeed the availability of the (discrete) adjoint. Regards,. Edwin",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/429#issuecomment-326904729:35,Energy,Energy,35,https://su2code.github.io,https://github.com/su2code/SU2/issues/429#issuecomment-326904729,1,['Energy'],['Energy']
Energy Efficiency,"Hi Tom,. Thanks for this great PR. I have two notes:; a) I have one grid (flow around a high lift airfoil) where the periodic boundaries are not placed entirely on fix plane, like y=0.0, but on a very small value and fluctuates around, i.e. y~1.e-5. Now, many bad match points are found in the last commit of this PR. Previously, I was able to run the same mesh in a different commit. Do you change the tolerance of the search algorithm? Or I need to make sure now that all the periodic BC nodes must be placed on a fix plane.; b) I would like to share the results of the Taylor Green Vortex with the community. Indeed, the results are good and they are comparable with the reference DNS solution. ; ![SU2_TGV_DissipationRate](https://user-images.githubusercontent.com/9790985/56451123-05708500-62df-11e9-8601-7a6cdb38123d.png). Thank you one more time. Best,. Eduardo",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/652#issuecomment-485054516:579,Green,Green,579,https://su2code.github.io,https://github.com/su2code/SU2/pull/652#issuecomment-485054516,1,['Green'],['Green']
Energy Efficiency,"Hi Tom,. Thanks for your reaction! The previous simulations were all done by continuous adjoint. ; The current simulation is done according to your settings; scale =1, objective= efficiency, adjoint =discrete.; ![image](https://user-images.githubusercontent.com/21182966/28562447-8f88c6e0-7122-11e7-882d-d861e34fe388.png). In the discrete adjoint the difference in magnitude of the sensitivity is reduced. I will try to run the case for discrete adjoint as well, I will keep you updated.; Thanks for the help!. Kind regards,. Floris van der Schuur",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/409#issuecomment-317667253:397,reduce,reduced,397,https://su2code.github.io,https://github.com/su2code/SU2/issues/409#issuecomment-317667253,1,['reduce'],['reduced']
Energy Efficiency,"Hi Tom,; I did a Boost extract (bcp) which theoretically only includes the required header files. I'll look and see if it can be reduced further.; Scott; On ‎Wednesday‎, ‎August‎ ‎8‎, ‎2018‎ ‎09‎:‎10‎:‎15‎ ‎PM‎ ‎PDT, Thomas D. Economon <notifications@github.com> wrote: ; ; ; @ScottImlay : it is wonderful to have your support from Tecplot, and we really appreciate the contribution for improvements through the open source!. I have a first question... I noticed that there are many new files, especially headers from the Boost library. Is it possible to reduce to a smaller set of files that get included, or are all of those that have been added necessary?. —; You are receiving this because you were mentioned.; Reply to this email directly, view it on GitHub, or mute the thread.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/558#issuecomment-411773932:129,reduce,reduced,129,https://su2code.github.io,https://github.com/su2code/SU2/pull/558#issuecomment-411773932,2,['reduce'],"['reduce', 'reduced']"
Energy Efficiency,"Hi all,. I have implemented the Delayed Detached Eddy Simulation (DDES) in SU2. Also, I added 2 of the newest sub-grid scales (SGS) in order to mitigate the so-called ""grey area"": Vorticity based SGS (Deck et al. 2012) and Shear-layer adapted SGS (Shur et at. 2015). This option is available as ""HYBRID RANS/LES= SA_DDES, SA_ZDES OR SA_EDDES"". In order to lower the dissipation of the Roe scheme in LES areas, 3 different numerical blending are available: FD (Using the DDES' F_dt function), NTS (Travin et al. 2002 numerical blending) and NTS_DUCROS (the NTS + Ducros' Shock Sensor). Option: ""ROE_LOW_DISSIPATION= FD"". Lastly, 3 SA's turbulence model variants were added: Edward and Chandra Modification (SA_E), Mixing layer Compressibility Correction (SA_COMP) and both together (SA_E_COMP). I would like to hear some comments about the implementation. Regards,. Eduardo. Please see the attached pdf showing some detailed implementation and preliminary results.; [Molina_DDESinSU2.pdf](https://github.com/su2code/SU2/files/602029/Molina_DDESinSU2.pdf)",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/333:235,adapt,adapted,235,https://su2code.github.io,https://github.com/su2code/SU2/pull/333,2,"['Sensor', 'adapt']","['Sensor', 'adapted']"
Energy Efficiency,"Hi all,. When I try using the mesh_adaptation.py feature with the SUPERSONIC_SHOCK option on the inviscid wedge tutorial to capture the shock, the mesh is changed incorrectly. The original and ""adapted"" meshes are:; ![adapted_quad_grid](https://user-images.githubusercontent.com/18233420/47829974-e80f2500-dd57-11e8-8318-e84ea38336ad.png); ![original_quad_grid](https://user-images.githubusercontent.com/18233420/47829975-e80f2500-dd57-11e8-941c-d552839b12f1.png). The same random element divisions also occur if I use a mesh composed of triangles:; ![original_triangle_grid](https://user-images.githubusercontent.com/18233420/47829998-01b06c80-dd58-11e8-8553-5de26b8313ca.png); ![adapted_triangle_grid](https://user-images.githubusercontent.com/18233420/47829997-01b06c80-dd58-11e8-9f1a-1f33a820292e.png). I am not sure if this is related, but when I run the KIND_ADAPT= GRAD_FLOW option to adapt based on the density gradient (as opposed to using SUPERSONIC_SHOCK), I receive the following output from SU2 from both cases along with no adaptation (even though the grid is composed of quads or triangles):; --------------------- Start numerical grid adaptation -------------------; WARNING: Tried to find 4455 cells suitable for adaptation, but only found 0; The following cell types are currently adaptable: ; + triangles; + quadrilaterals; + tetrahedrons; Your grid may have too high a percentage of other types.; Number of elements to adapt: 0. I attached the configuration file (just the inviscid tutorial config file with the added mesh adaptation parameters at the bottom) and the mesh used (just the inviscid wedge tutorial mesh). [Config_file_and_mesh.zip](https://github.com/su2code/SU2/files/2537063/Config_file_and_mesh.zip). Thanks for any help,; Alex",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/606:194,adapt,adapted,194,https://su2code.github.io,https://github.com/su2code/SU2/issues/606,8,['adapt'],"['adapt', 'adaptable', 'adaptation', 'adapted']"
Energy Efficiency,"Hi all,. as with the restructuring of the output classes, we should find a common level of abstraction for all the different physical problems we might want to have. Right now there isn't even a unified way of specifying the kind of problem for each zone (what is fluid, what is solid etc) and the kind of coupling. This might also affect the actual implementation/restructuring since we somehow have to decide what driver we have to instantiate and so on. Hopefully we can gather all the people involved to have a discussion on that. Since we have a lot of people working in their branches on multizone problems we should tackle that better sooner than later. As Edwin already suggested, maybe it is a good idea to put some people in charge of organizing some of the bigger structural changes. Furthermore in case some people don't know, we have a slack channel for the dev team. I think that makes it easier to communicate, arrange meetings, discuss problems and ask questions. In case you need an invite, let me know, everybody who wants to contribute is welcome. Thanks for the discussion, I still think that communication is the key of success !. Tim. On Sep 13, 2017 10:30 AM, Edwin van der Weide <notifications@github.com> wrote:. Hi Tom,. Sounds like a plan then to have a look at CIntegration to see what we can do to generalize the time integration. I definitely want to help with this, but I don't think I am the appropriate person to take the lead, because I simply don't have a good overview of all the multi-physics options. Tom, are you willing to take the lead for this?. Furthermore, it is good to have other people involved as well, preferably with detailed knowledge of the different disciplines. Any volunteers?. Thanks,. Edwin. —; You are receiving this because you were mentioned.; Reply to this email directly, view it on GitHub<https://github.com/su2code/SU2/issues/437#issuecomment-329096830>, or mute the thread<https://github.com/notifications/unsubscribe-auth/AEtI5MkXdqhqP",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/437#issuecomment-329146567:735,charge,charge,735,https://su2code.github.io,https://github.com/su2code/SU2/issues/437#issuecomment-329146567,2,['charge'],['charge']
Energy Efficiency,"Hi all,. lately I was fixing restarts. Making sure the adjoint also has a correct primal restart is somewhat annoying due to the way the residuals are printed to screen. I want to change that to look like a normal screen output of all residuals. Here the old variant on top and the new below (field names need to be adapted to usual screen output); ![image](https://user-images.githubusercontent.com/31306376/133253618-e20b6be0-fd29-4c03-96b5-a70f84f06523.png). The code as of today only changes this for single zone and does not use the usual output routines (and is a bit hacky). I want to add multizone and use the output routines instead of this handwritten PrintDirectResidual routine. I'll look into both. Let me know if there are reasons against this or any other comments. ## Related Work; The printing tool box of Tim. ## PR Checklist. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [ ] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1371:316,adapt,adapted,316,https://su2code.github.io,https://github.com/su2code/SU2/pull/1371,1,['adapt'],['adapted']
Energy Efficiency,"Hi all. May I just add to Edwin comment: some of you have seen the tests that I; made with SUmb (structured mesh code) using the adaptive WF: Results using; the JST scheme were definitely off, while upwind +WF converged reasonably; to wall-resolved results. Naturally this conclusion is strongly coupled; with the specific discretization and implementation so it might not apply; to a SU2 implementation. I suggest to keep working on the Carlson; formulation (due to FUN3D-SU2 similarities mentioned above) and hopefully; extend it to adaptive WF as a second step.; I'll be happy to be on board of his effort.; Best regards,; Eran. On Fri, Jun 9, 2017 at 7:49 AM, Edwin van der Weide <; notifications@github.com> wrote:. > Juan, all,; >; > The adaptive wall function formulation as described in the paper of Medic; > et al. has two serious issues. First, the convergence stalls after three; > orders of magnitude or so and second it only works with an upwind; > discretization of the inviscid fluxes. For some reason JST type of schemes; > gave rather poor results. In order to have a reliable implementation, both; > issues need to be addressed. Unfortunately, we never did.; >; > Edwin; >; > —; > You are receiving this because you are subscribed to this thread.; > Reply to this email directly, view it on GitHub; > <https://github.com/su2code/SU2/issues/399#issuecomment-307294686>, or mute; > the thread; > <https://github.com/notifications/unsubscribe-auth/APKNmwNgNVmXDYW_tqtQzvpDvxGe4OeLks5sCM7ugaJpZM4NvG6w>; > .; >",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/399#issuecomment-307303905:129,adapt,adaptive,129,https://su2code.github.io,https://github.com/su2code/SU2/issues/399#issuecomment-307303905,3,['adapt'],['adaptive']
Energy Efficiency,"Hi everyone, . now you can register [here on eventbrite](https://www.eventbrite.com/e/3rd-annual-su2-conference-tickets-375147244507?aff=ebdsoporgprofile) for the virtual participation or the in-Person event in Varenna. Virtual participation will be free of charge (registration required) and all further info on pricing etc. for the in-Person event can be found following the link :)",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1683#issuecomment-1193383462:258,charge,charge,258,https://su2code.github.io,https://github.com/su2code/SU2/issues/1683#issuecomment-1193383462,1,['charge'],['charge']
Energy Efficiency,"Hi everyone,. I recently joined the SU2 community and I was wandering if probe feature (to monitor time-history of unsteady flow at chosen location) is available for the latest release of SU2. There was some discussion in 2017 & 2019 (in the issue #466) about exactly this feature but I couldn't find any updates nor confirmations of this being available. Thanks in advance!",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1797:91,monitor,monitor,91,https://su2code.github.io,https://github.com/su2code/SU2/issues/1797,1,['monitor'],['monitor']
Energy Efficiency,"Hi everyone,; I was tring to use the mesh adaptation feature but the whole procedure is not clear to me.; Following the previous indications I:. 1. downloaded the `feature_adapt branch`. 2. downloaded the Adaptive 2D NACA 0012 example (https://pyamg.saclay.inria.fr/pyamgexamples.html#2dnaca): `adap_NACA0012.cfg`, `mesh_NACA0012_inv.su2`, `NACA0012_ini.dat`. 3. added the following lines to the config:; ```; % Type of sensor used for adaptation; % Options include GOAL (adjoint-based), MACH, PRES; PYADAP_SENSOR= GOAL; % Objective function used for goal-oriented adaptation; OBJECTIVE_FUNCTION= LIFT; % Maximum cell size for adaptation; PYADAP_HMAX= 500.0; % Minimum cell size for adaptation; PYADAP_HMIN= 1e-9; % Gradation factor (typically 1.2-1.8); PYADAP_HGRAD= 1.8; % Norm used for adaptation; % 1.0 or 2.0 recommended for inviscid flows; % 4.0 recommeneded for viscid; ADAP_NORM= 4.0; % Approximate mesh size (NPOI) at each level; PYADAP_COMPLEXITY= (30000, 60000, 120000); % Number of adaptations performed at each level; PYADAP_SUBITE= (3, 3, 3); ```. 4. run the following command: `$ python3 SU2_RUN/mesh_adaptation_amg.py -f adap_ONERAM6.cfg -n 8`. The response I have obtained is the following:; ```; SU2-AMG Anisotropic Mesh Adaptation. Mesh adaptation options:; PYADAP_COMPLEXITY : (30000, 60000, 120000); PYADAP_SUBITE : (2, 2, 2); PYADAP_SENSOR : MACH; PYADAP_HMAX : 500.0; PYADAP_HMIN : 1e-9; PYADAP_HGRAD : 1.8; PYADAP_FLOW_ITER : (2999, 4999, 6999); PYADAP_ADJ_ITER : (2999, 4999, 6999); PYADAP_CFL : (10.0, 15.0, 20.0); PYADAP_RDG : NO. The ./adap folder was deleted. Generating GMF background surface mesh.; ## WARNING: MISSING SU2 MESH FILE KEYWORD: NCORNERS=.; Initial CFD solution is provided.; ```. As expected, a `./ADAP` folder was created, containing these docs: `amg_back_meshb`, `config_CFD.cfd`, `log.err`, `log.out` (sizes 0 byte), `mesh_NACA0012_inv.su2` (link to the mesh), `NACA0012_ini.dat` (link to the file.dat). Did I perform the procedure correctly? Or did I m",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/948#issuecomment-737134105:42,adapt,adaptation,42,https://su2code.github.io,https://github.com/su2code/SU2/issues/948#issuecomment-737134105,17,"['Adapt', 'adapt', 'sensor']","['Adaptive', 'adaptation', 'adaptations', 'sensor']"
Energy Efficiency,"Hi everyone,; I'm really interesting by the adaptitve mesh feature and i am wondering if the branch is still alive or if anyone have done any progress before starting to play with this branch; regards",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/948#issuecomment-1224179553:44,adapt,adaptitve,44,https://su2code.github.io,https://github.com/su2code/SU2/issues/948#issuecomment-1224179553,1,['adapt'],['adaptitve']
Energy Efficiency,"Hi everyone. I have used both the early version of SU2 with pyAMG (python2) and the latest SU2-feature_adap branch with python3. We have even ported its mesh adaptation implementation to the GAMMA mesh format due to geometry topology issues. ; ; However, there are two adapt options in the python implementation (ADAP_BACK, ADAP_SOURCE) and l could not still figure out how to use it because l don't know what kind of data file l should provide. For ADAP_BACK I have tried to use mesh files similar to the original volume mesh file with edges/corners in binary format (meshb) and it generally fails on complex geometries (with no ADAP_BACK option, it works nicely). Therefore, l am not sure whether l am providing the correct data file. This data file has to be only surface file with high order elements or just a volume mesh? . ADAP_SOURCE is completely mistery to me. Not much explanation inside the python code. I should also say that l don't understand the following command either. config_amg['options'] = config_amg['options'] + ' -inv-back'. Can someone please explain these plainly. I have also looked and feature_adapt Test files folder but unfortunately these options are closed and its data files are missing.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/2119:158,adapt,adaptation,158,https://su2code.github.io,https://github.com/su2code/SU2/issues/2119,2,['adapt'],"['adapt', 'adaptation']"
Energy Efficiency,"Hi guys,; this is to merge in the sliding mesh approach as proposed in the PhD thesis; ""Models and simulation of non-ideal fluid flows in unconventional turbomachinery: Toward highly efficient next-generation green power systems"". This request mostly includes additions to the interpolator and to the transfer classes.; The config option string to identify zone interface markers was changed from MARKER_FSI_INTERFACE to MARKER_ZONE_INTERFACE.; When the domain involve more than one interface, boundaries sharing the same interface should be listed as pairs in the config string, the order of the pairs doesn't matter.; Currently the code works in parallel and it is able to treat a random number of fluid zones.; Periodic support is still missing though I am planning to work on it in a future push.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/389:183,efficient,efficient,183,https://su2code.github.io,https://github.com/su2code/SU2/pull/389,3,"['efficient', 'green', 'power']","['efficient', 'green', 'power']"
Energy Efficiency,"Hi guys~ . Here is sharing the status of the LM model. V&V cases: T3A, T3A-, NLF. Flow conditions are the reference from: https://doi.org/10.2514/6.2022-3679. The grids of T3A and NLF cases are provided by [TMW](https://transitionmodeling.larc.nasa.gov/workshop_i/)(Transition Model Workshop). And I made the grid of T3A- myself. To validate the LM model, the simulation results of SU2 are compared with the results of Fluent19.0 with a similar numerical setting. Here is the numerical scheme : . <html xmlns:m=""http://schemas.microsoft.com/office/2004/12/omml""; xmlns=""http://www.w3.org/TR/REC-html40"">. <head>. <meta name=ProgId content=PowerPoint.Slide>; <meta name=Generator content=""Microsoft PowerPoint 15"">. <!--tr; 	{mso-height-source:auto;}; col; 	{mso-width-source:auto;}; td; 	{padding-top:1.0px;; 	padding-right:1.0px;; 	padding-left:1.0px;; 	mso-ignore:padding;; 	color:windowtext;; 	font-size:18.0pt;; 	font-weight:400;; 	font-style:normal;; 	text-decoration:none;; 	font-family:Arial;; 	mso-generic-font-family:auto;; 	mso-font-charset:0;; 	text-align:general;; 	vertical-align:bottom;; 	border:none;; 	mso-background-source:auto;; 	mso-pattern:auto;}; .oa1; 	{border:1.0pt solid black;; 	vertical-align:top;; 	padding-bottom:3.6pt;; 	padding-left:7.2pt;; 	padding-top:3.6pt;; 	padding-right:7.2pt;}; .oa2; 	{border:1.0pt solid black;; 	text-align:center;; 	vertical-align:top;; 	padding-bottom:3.6pt;; 	padding-left:7.2pt;; 	padding-top:3.6pt;; 	padding-right:7.2pt;}; -->. </head>. <body>; <!--StartFragment-->.   | Fluent | SU2; -- | -- | --; Flux | Roe-FDS | L2ROE; Gradient | Least Squares Cell Based | WEIGHTED_LEAST_SQUARES; Spatial Discretization Flow | Third-order MUSCL | MUSCL_FLOW; Spatial Discretization Turbulence | First-order Upwind | MUSCL_NO. <!--EndFragment-->; </body>. </html>; The CFL number is set constant value. Some high-resolution grid-level results are missed because I don't have enough computational resources.; Here is Result. T3A : . ![image](https://use",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1592#issuecomment-1194936824:639,Power,PowerPoint,639,https://su2code.github.io,https://github.com/su2code/SU2/pull/1592#issuecomment-1194936824,2,['Power'],['PowerPoint']
Energy Efficiency,"Hi the same issue is reported here: https://www.cfd-online.com/Forums/su2/240690-stable-solution-version-7-0-0-diverging-7-2-0-a.html; I think it is because of a bug we fixed that could cause the solution in some places to either freeze or be updated very slowly, seeing that the residuals in your 7.0.6 example don't drop, this is likely to be happening.; If you share the mesh you are using I can try suggesting better settings, to get to high CFL number you usually need CFL adaptation.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1519#issuecomment-1019281442:478,adapt,adaptation,478,https://su2code.github.io,https://github.com/su2code/SU2/issues/1519#issuecomment-1019281442,1,['adapt'],['adaptation']
Energy Efficiency,"Hi, . configBeam_3d.cfg is a linear structural case, so the problem does not iterate. It is solved in one-shot by computing the displacement vector u in the linear system Ku = F. For tighter convergence, LINEAR_SOLVER_ITER may be taken up to 1000, which is the maximum number of subspaces accepted by the FGMRES linear solver. Also, LINEAR_SOLVER_ERROR may be reduced.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/347#issuecomment-276651670:360,reduce,reduced,360,https://su2code.github.io,https://github.com/su2code/SU2/issues/347#issuecomment-276651670,1,['reduce'],['reduced']
Energy Efficiency,"Hi, . this PR adds streamwise periodic flow (incl energy eq) for the incompressible solver. For a more detailed information please see the [website additions](https://github.com/su2code/su2code.github.io/pull/53) including a tutorial and theory section. ~half of the lines is .cfg's as those CHT setups require a bit more real estate. So the actual code is not too long. Here a squash merge could be done as it merged develop quite a few times and has a bunch of 'small fix' commits. But to my knowledge that is not really necessary as. I am ready to pass on the red lantern to someone else 🐌 . ## Related Work; This work builds directly on #652 of @economon. ## PR Checklist; - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [x] My contribution is commented and consistent with SU2 style.; - [x] I have added a test case that demonstrates my contribution, if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/773:50,energy,energy,50,https://su2code.github.io,https://github.com/su2code/SU2/pull/773,1,['energy'],['energy']
Energy Efficiency,"Hi, ; I'm worried about discontinuing the legacy build system. While on internet-connected machines the Meson-Ninja build is superior, I still didn't manage to apply it on clusters without such a connection. In my opinion should keep the configure-make-make install approach alive so that installation is possible for everyone, not just very efficient to part of the community ; Best, Eran",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/583#issuecomment-734184730:342,efficient,efficient,342,https://su2code.github.io,https://github.com/su2code/SU2/issues/583#issuecomment-734184730,1,['efficient'],['efficient']
Energy Efficiency,"Hi, @cjz667. When I tried lid driven cavity case with default setting and switching ROE to AUSMPLUSUP, I got the following error - Error in “void CSyssolve::ModGramSchmidt(int.........; SU2 has diverged (It ran for 2 iterations). Reduced the CFL to 0.5 (originally 2.0), it runs fine.; But it is going to take more number of iterations.; This issue was noted earlier as well and reason behind that is inconsistent Jacobian (Roe here) with AUSM family of schemes. This restricts the allowable CFL number to a lower values for these scehemes. For low speed flows u may have to use smaller value of CFL with these two schemes. . Dr. Padro (pcarruscage) has done some work in this direction and implemented hybrid Jacobian for some of these schemes (available in develop branch) , which improves this situation and u can try higher CFL. I have also worked out analytical Jacobian and will be pushing in future release. I hope you can go with reasonable CFL for majority of the other cases, where Mach number is not too small.; I have added one Testcase for high speed flow past blunt body in testcase folder /euler/bluntbody, which uses AUSMPLUSUP. Give a try with other cases, I have tried many in RANS, NS, EULER.; Hope this help. . Regards ; Amit",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/628#issuecomment-522656848:230,Reduce,Reduced,230,https://su2code.github.io,https://github.com/su2code/SU2/pull/628#issuecomment-522656848,1,['Reduce'],['Reduced']
Energy Efficiency,"Hi, I can confirm that the ASCII mesh reader has been improved a lot in version 7.2.1. This reduces the need for CGNS format. Hybrid parallel helps also, thanks for the hints. I did not find a way for the CGNS to work yet.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1378#issuecomment-986854142:92,reduce,reduces,92,https://su2code.github.io,https://github.com/su2code/SU2/issues/1378#issuecomment-986854142,1,['reduce'],['reduces']
Energy Efficiency,"Hi, thank you for the suggestions. I simulated with the suggested settings, and the values of y+ in the spinner-blade junction region have reduced to 140. I am specifically interested in knowing thrust and moment, and those turned out to be similar to the previous runs, which are two orders of magnitude lower than experimental ones. . > You need to look at CFx and CMx from SU2 then. Use WRT_FORCES_BREAKDOWN = YES, I think the breakdown file has dimensional forces, or at least the reference density, velocity, pressure, etc. The force breakdown file generates non-dimensional coefficients using the reference area on the z-plane. If I want to find the dimensional forces in the x-direction (flow direction), should the non-dimensional factor be based on the reference area on the z-plane or the x-plane?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1175#issuecomment-767560906:139,reduce,reduced,139,https://su2code.github.io,https://github.com/su2code/SU2/issues/1175#issuecomment-767560906,1,['reduce'],['reduced']
Energy Efficiency,"Hi,. Possibility to give the Heatflux over a boundary in [W] instead of [W/m^2]. This was already possible in the HeatSolver but now also in Inc and Comp flow solvers.; Prescribing a fixed Watt is especially useful in optimization scenarios with Temperature OF where otherwise the optimizer can exploit that a smaller boundary almost certainly yields smaller Temperatures. The necessary SurfaceAreas are computed and stored in CGeometry instances which is computed once at program start by a call from the Driver. I also added NEMO for this feature. There is currently no Testcase which uses `INTEGRATED_HEATFLUX= YES` so one might want to change that :grimacing: :shushing_face: . For the HeatSolver this was originally introduced at some point by @oleburghardt . ## PR Checklist. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.; - [x] I have added a test case that demonstrates my contribution, if necessary.; - [x] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1530:189,Watt,Watt,189,https://su2code.github.io,https://github.com/su2code/SU2/pull/1530,1,['Watt'],['Watt']
Energy Efficiency,"Hi,. Thank you for your quick answer, It indeed seems that I had some parameters that were passed that did not match su2 version 7.0.3. I am experiencing an issue while running the mesh adaptation process in SU2. The process starts but fails during the mesh generation phase, leading to a FileNotFoundError. I am looking for assistance in resolving this error.; `; SU2-AMG Anisotropic Mesh Adaptation. Mesh adaptation options:; PYADAP_COMPLEXITY : (100, 200, 300); PYADAP_SUBITE : (2, 2, 2); PYADAP_SENSOR : MACH; PYADAP_HMAX : 200; PYADAP_HMIN : 1e-8; PYADAP_HGRAD : 1.3; PYADAP_RESIDUAL_REDUCTION : (3, 3, 3); PYADAP_FLOW_ITER : (500, 500, 500). ./adap exists. Removing old mesh adaptation in 10s.; The ./adap folder was deleted. Generating GMF background surface mesh.; Initial CFD solution is provided. Starting mesh adaptation process. Iteration 0 - Mesh size coefficient 100.0; (1/2) Generating adapted mesh using AMG; AMG done: ; Running CFD; Traceback (most recent call last):; File ""/path/to/SU2/install/bin/mesh_adaptation_amg.py"", line 111, in <module>; main(); File ""/path/to/SU2/install/bin/mesh_adaptation_amg.py"", line 72, in main; options.save_all ); File ""/path/to/SU2/install/bin/mesh_adaptation_amg.py"", line 101, in mesh_adaptation_amg; SU2.run.amg(config); File ""/path/to/SU2/install/bin/SU2/run/amg.py"", line 466, in amg; os.rename(cur_solfil, cur_solfil_ini); FileNotFoundError: [Errno 2] No such file or directory: 'flo.dat' -> 'flo_ini.dat'`. and it0 folder is created, with some log.err and log.out, but they are empty, . I would appreciate any guidance or suggestions on how to resolve this issue. Thank you!",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/948#issuecomment-1855842105:186,adapt,adaptation,186,https://su2code.github.io,https://github.com/su2code/SU2/issues/948#issuecomment-1855842105,11,"['Adapt', 'adapt']","['Adaptation', 'adaptation', 'adapted']"
Energy Efficiency,"Hi,. We have just updated (30min ago) the master branch of the SU2 and TestCases repositories. Could you please try again?. If you are using the develop branch, please remember that you should use the develop branch for the SU2 and TestCases repositories. Otherwise the options don’t match. Pleas let us know if it is working for you now. Best,; Francisco. On Feb 3, 2015, at 12:27 PM, Gil Forsyth notifications@github.com wrote:. > Just compiled today and it seems like the options CFL_ADAPT and CFL_ADAPT_PARAM have been deprecated?; > ; > Running the 2D inviscid cylinder and the euler channel flow example both throw an error; > ; > CFL_ADAPT: invalid option name. Check current SU2 options in config_template.cfg.; > CFL_ADAPT_PARAM: invalid option name. Check current SU2 options in config_template.cfg.; > Commenting these lines out lets the test cases run but I'm not sure what the default behavior is (are these running with adaptive CFL if we don't pass that parameter at all?); > ; > —; > Reply to this email directly or view it on GitHub.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/152#issuecomment-72729435:934,adapt,adaptive,934,https://su2code.github.io,https://github.com/su2code/SU2/issues/152#issuecomment-72729435,1,['adapt'],['adaptive']
Energy Efficiency,"Hi,. first of all thanks for your continuing effort in developing a very powerful CFD software. I noticed a mistake in the implementation of a part of the screen output in ""confing_structure.cpp"" in SU2-7.0.0. In the ""Physical Case Definition"" there are no cases for""Kind_Solver"" as ""INC_EULER"", ""INC_NAVIER_STOKES"" or ""INC_RANS"" and therefore there is no screen output stating which equations are going to be used in the computation. This leaves uncertainty on whether or not the set of equations chosen in the config file is actually implemented. For example in my case I would like to use SA_DDES with INC_RANS but I don't know if this combination is not implemented or just not visible in the screen output due to the mistake I mentioned before (looking at the source code it seems like it is implemented but I may missing something and fixing the screen output would help non expert users). Thanks for your time.; With Best Regards.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/846:73,power,powerful,73,https://su2code.github.io,https://github.com/su2code/SU2/issues/846,1,['power'],['powerful']
Energy Efficiency,"Hi,; I would like to optimize 3D isolated helicopter rotor blade to get optimum twist for uniform blade loading with the available power and overall helicopter weight constraints. the helicopter is 2-bladed, but i will simulate only one with periodic BCs.; Kindly help me how can I do this using SU2 on windows platform?",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/343:131,power,power,131,https://su2code.github.io,https://github.com/su2code/SU2/issues/343,1,['power'],['power']
Energy Efficiency,"Hi; Might be a specific problem: Meson and Ninja work well when your system; is connected to the web network. ; However, importing the software to a disconnected network, that also lacks python3, ; make them unavailable. Would you think that it can be possible to conserve the previously configure procedure as an additional installation script? less efficient but always working...; Trying to use the configure from older versions works, but then Make aborts missing; some modules, like CHeatSolverFVM.cpp. Thanks,; Eran",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/910:351,efficient,efficient,351,https://su2code.github.io,https://github.com/su2code/SU2/issues/910,1,['efficient'],['efficient']
Energy Efficiency,"Hmmm looks like we have an issue with the setup of tutorials.py then, because the merge button should not show up as green with failing regressions.; The code quality tests are not hard requirements but everything else should be.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1295#issuecomment-859559899:117,green,green,117,https://su2code.github.io,https://github.com/su2code/SU2/pull/1295#issuecomment-859559899,1,['green'],['green']
Energy Efficiency,"I am a new developer so I might need some help. I have added some expressions based upon the discussion on cfdonline: http://www.cfd-online.com/Forums/su2/129165-add-source-terms-user-defined-boundary-condition-set-up-transient-simulation.html.; Based upon that discussion, I have allocated the already defined class in definition_structure.cpp:; numerics_container[iMGlevel][FLOW_SOL][SOURCE_FIRST_TERM] = new CSource_JouleHeating(nDim, nVar_Flow, config);. Also, I have referred to the implementation of source term of Wind Gust. To get started, I am trying to implement a Yes/No option to include Joule Heating in the configuration file. I have added the following statements:; config_structure.inl: inline bool CConfig::GetJoule_Heating(void) {return Joule_Heating}; config_structure.hpp: a flag: bool Joule_Heating and bool GetJoule_Heating(void); config_structure.cpp: addBoolOption(""JOULE_HEATING"", Joule_Heating, false). On compiling, I get an error stating that ""JOULE_HEATING"" is an invalid option name. Please let me know where I am going wrong.; Thanks!",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/230#issuecomment-172099950:281,allocate,allocated,281,https://su2code.github.io,https://github.com/su2code/SU2/issues/230#issuecomment-172099950,2,"['Joule', 'allocate']","['Joule', 'allocated']"
Energy Efficiency,I am gonna use my executive power to merge this in. I have to prepare the release.,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/874#issuecomment-592552725:28,power,power,28,https://su2code.github.io,https://github.com/su2code/SU2/pull/874#issuecomment-592552725,1,['power'],['power']
Energy Efficiency,"I am not sure about why periodic boundaries are allowed to deform. It doesn't seem to be a good idea unless there is a way to deform its periodic pair in the same way. As for @auzbaig's question about why SLSQP converges in one step: There is a huge difference in the magnitude of the objective function, O(1) and the gradient O(-11). I am guessing the optimizer doesn't think it can reduce the function value any further since the gradient with respect to the DVs is so small. . To change the relative magnitudes of the objective and gradient, you need to change the DV scaling. This isn't intuitive and is one of the things we are hoping to address in #922 . Check out the `obj_df` function in `SU2_PY/SU2/eval/design.py` (line 386 in the develop branch). There you see how the gradient is scaled: . `grad[k] = grad[k] * sign * scale * global_factor / dv_scl` . Here `scale` is the objective function scaling factor, `global_factor` is what you specify for the `OPT_GRADIENT_FACTOR`, the `dv_scl` is the design variable scaling. . So if you wanted to bring the gradient norm to O(1), you'd have to specify a DV scaling of 1e-11. Usually a gradient norm of O(-6) is what seems to work best with SLSQP.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/976#issuecomment-628724163:384,reduce,reduce,384,https://su2code.github.io,https://github.com/su2code/SU2/issues/976#issuecomment-628724163,2,['reduce'],['reduce']
Energy Efficiency,"I am trying to catch up on the developments in this PR but I've lost the overview. Are there still issues that we need to figure out? It looks like convergence is now recovered and results look OK? ; Regarding the symmetry plane, as @pcarruscag mentioned it is improving the accuracy, but not necessarily the convergence. @pcarruscag and I tried to get it to converge as well as before, but no guarantees. Do you still see issues with the new symmetry plane?; Regarding the peak residual that you observed in a single node in the mesh: This is a common observation when using Green-Gauss, which gives O(1) accuracy in mixed mesh nodes where quadrilateral and triangular meshes meet. There are some methods that try to fix this, although none of them are holy grails and the best methods are the most expensive ones.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2329#issuecomment-2394982976:576,Green,Green-Gauss,576,https://su2code.github.io,https://github.com/su2code/SU2/pull/2329#issuecomment-2394982976,1,['Green'],['Green-Gauss']
Energy Efficiency,"I am trying to include Joule heating as a source term.; Although the source term for Joule heating is defined in numerics_structure.hpp, unlike other source terms (like Wind Gust), it is not allocated in definition_structure.cpp. Also its option is not present in either the config_structure.cpp file or the config_template.cfg file.; Is any modification of code required?. Thanks.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/230:23,Joule,Joule,23,https://su2code.github.io,https://github.com/su2code/SU2/issues/230,3,"['Joule', 'allocate']","['Joule', 'allocated']"
Energy Efficiency,"I am trying to run a big case with approximately 60 million mesh size. I am running it on multiple nodes, each having 8 processors. Problem is that I am able to make use of only 4 cores out of 8 available on each node for this size of problem and rest cores will be idle. ; If I try to run it on more cores, it fails during start and throws a message something like -- error while converting array I4 -I5 for CGNS ..........; But while checking the memory usage during solution time with 4 core per node usage (24 GB memory for each node and around 60 such nodes), it shows only 30-35% memory usage for each node.; May be something need to be improve during start up phase while reading CGNS and converting to SU2 data structure, parmetis phase etc.; This will enable efficient usage of resources for this size problem . For smaller size problems, I am able to use all the cores on each node.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/291:768,efficient,efficient,768,https://su2code.github.io,https://github.com/su2code/SU2/issues/291,1,['efficient'],['efficient']
Energy Efficiency,"I am trying to simulate a 2.5D airfoil set-up (though the example I show has a cylinder currently). I am trying to reduce the cell count by having the inlet and outlet relatively close to the airfoil (3 and 5 chords respectively). To prevent reflections I'm trying the Riemann BC. The rest of the patches of the box are periodic in such a way that the upper and lower, and front and back patches are communicated. I get what seems to be a strange even-odd decoupling at the inlet (see screen grab attached). I thought it would be related to https://github.com/su2code/SU2/issues/1090, but changing the front and back periodics to symmetry does not fix it, so I assume it must be a problem with the Riemann. I attach 2 cfg files (one with a steady state with symmetry planes, used to get the initial solution for the unsteadyc, but it also develops the same instability if I set them periodic ) and the gmsh geo file that generates the mesh. [su2bug.zip](https://github.com/su2code/SU2/files/14342916/su2bug.zip). System info:; - OS: Windows 10, Ubuntu wsl2; - C++ compiler and version: g++ (GCC) 9.4.0; - MPI implementation and version: OpenMPI 4.0.3, but I'm running serial; - SU2 Version: 8.0.0",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/2218:115,reduce,reduce,115,https://su2code.github.io,https://github.com/su2code/SU2/issues/2218,1,['reduce'],['reduce']
Energy Efficiency,"I am wondering what it would take to adapt SU2 to model the flow of (thermally/calorically) non-ideal gases where cp, gamma, etc. vary with the state and for which the relations R = Cp - Cv, H = Cp * T, etc. are not valid. . Do all the computations of flux jacobians etc. formulated in terms of gamma already rely on the ideal gas (or polytropic) assumption? . Is this sort of thing considered unimportant since SU2 is mainly intended for aerodynamics or would it be too demanding for the solver to converge reliably?. To give a ""simple"" example where this would be useful: A converging-diverging nozzle expanding the refrigerant r134a from around 24 bar to 3 bar. Only if gamma is set to the throat value the choked flow rate will be fairly correctly predicted but the outlet temperature will then be very far below the isentropic 1D result with a real EoS. This seems to have consequences not only for the temperature field but also for the performance certainly of more complex devices.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1065:37,adapt,adapt,37,https://su2code.github.io,https://github.com/su2code/SU2/issues/1065,1,['adapt'],['adapt']
Energy Efficiency,"I built it with OpenMPI v2.1.1 in combination with gnu compilers, version 7.0.1, and all debug flags enabled. Apart from a lot of warnings in ParMETIS and CGNS, I also get the following warnings. ../src/geometry_structure.cpp:16468:103: warning: variable ‘SemiSpan’ set but not used [-Wunused-but-set-variable]; su2double Angle, MinAngle, MaxAngle, dAngle, *Area, *MaxThickness, *ToC, *Chord, *LERadius, *Twist, SemiSpan;. ../src/output_structure.cpp:16249:46: warning: variable ‘Energy’ set but not used [-Wunused-but-set-variable]; Velocity[3], Velocity2, MassFlow, Density, Energy, Area, AxiFactor = 1.0, SoundSpeed, Vn, Weight = 1.0;. ../src/output_structure.cpp:16253:13: warning: unused variable ‘Gamma_Minus_One’ [-Wunused-variable]; su2double Gamma_Minus_One = Gamma - 1.0;. ../src/output_structure.cpp:16256:18: warning: unused variable ‘nVar’ [-Wunused-variable]; unsigned short nVar = solver->GetnVar();. However, these are from an earlier merge. I already took care of them in feature_hom, so I suppose it can wait until we merge that branch into develop. So it is good to go as far as I am concerned.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/473#issuecomment-354407661:480,Energy,Energy,480,https://su2code.github.io,https://github.com/su2code/SU2/pull/473#issuecomment-354407661,2,['Energy'],['Energy']
Energy Efficiency,"I can share that version of the code.. but beware, just as Edwin mentions, it is nasty looking and hard to compile (there are intrinsics and all sorts of architecture-specific changes). But, interesting to look at, of course. There you will see that we basically moved up all of the CVariable data (reordered contiguously) and methods to the solver to eliminate the extra layer of indirection, while still keeping access for outside classes, i.e. something like solver[FLOW_SOL]->node[iPoint]->GetPressure() becomes solver[FLOW_SOL]->GetPressure(iPoint). Since you mentioned it, another target is the CNumerics classes. The flexibility is nice, but does it really need an entire set of classes with getters/setters/virtual functions? I think that most of the ComputeResidual() functions could be moved up as methods in the solver classes as well to make more efficient residual kernel loops. In the early days, we thought completely removing CVariable and CNumerics would be very intrusive to change and would hurt flexibility. While the former is still true (although certainly doable), the latter does not seem to me as high of a priority any longer. Over the years, I don't think that folks have really modified the CNumerics classes all that often (once you have implemented the Roe method, it is more or less done). In addition, the CVariable and CNumerics child classes all live almost entirely within their own solvers, so we aren't taking much advantage of code reuse to justify having them as separate classes. For instance, if we just copied the relevant ComputeResidual() routines up into their solvers from numerics, we would have very little code duplication in the end, which is an indicator that we may not really need the extra baggage.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/716#issuecomment-513292350:859,efficient,efficient,859,https://su2code.github.io,https://github.com/su2code/SU2/issues/716#issuecomment-513292350,1,['efficient'],['efficient']
Energy Efficiency,"I could but I do not think updating that branch will fix your problem. We have not found any mesh handling bugs recently.; Creating / modifying meshes manually can get tricky (at least in my experience).; Have you tried simpler problems? Try starting with a problem that is known to work (there is a long issue with success stories, do a search for mesh adaptation here on github). Then build up from it, e.g. take the same problem and use a finer grid, change the physics to what you need, use a grid for your problem (ideally change one thing at a time).; Also keep in mind that if that branch was finished work it would probably have been merged into develop by now...",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1156#issuecomment-757123547:354,adapt,adaptation,354,https://su2code.github.io,https://github.com/su2code/SU2/issues/1156#issuecomment-757123547,2,['adapt'],['adaptation']
Energy Efficiency,"I could not follow the work here; I just watched the conference presentation. As much work has been done, have you considered using an existing linear algebra library such as https://github.com/ginkgo-project/ginkgo?. AFAIK the only thing you need to do is copy the matrix to Gingko format on GPU. Then Gingko will provide an efficient, scalable solver that works not only on NVIDIA but also on AMD and Intel. . GMRES and ILU preconditioners are available there, so it is pretty much ready to go for all problems.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2346#issuecomment-2397599775:326,efficient,efficient,326,https://su2code.github.io,https://github.com/su2code/SU2/pull/2346#issuecomment-2397599775,1,['efficient'],['efficient']
Energy Efficiency,"I do not believe that we should go back to a synchronous communication approach…in my experience asynchronous communication always gives better or equal performance and scalability to a carefully-done synchronous approach. It would be a step back to return to the v6.2 communication schedule. Perhaps the same tests can be repeated on a different machine with a different / better network and see what the outcome is?. Best,. Juan. On Mar 1, 2020, at 4:49 PM, Thomas D. Economon <notifications@github.com<mailto:notifications@github.com>> wrote:. We could play around with the Wait() calls to wait for a specific message instead of the first to arrive, but it would take some effort to go back to the previous behavior, where the comms happened one at a time for each pair of ranks that needed to communicate. In v7, the behavior is that each rank posts all of their receives, then posts all of their sends, before the buffers holding the received data are checked and unloaded (once the communication of that particular message has completed). —; You are receiving this because you commented.; Reply to this email directly, view it on GitHub<https://github.com/su2code/SU2/issues/894?email_source=notifications&email_token=AA5FFRHHV2YZWCMXS624GILRFL7ATA5CNFSM4K56OFUKYY3PNVWWK3TUL52HS4DFVREXG43VMVBW63LNMVXHJKTDN5WW2ZLOORPWSZGOENNR34Y#issuecomment-593174003>, or unsubscribe<https://github.com/notifications/unsubscribe-auth/AA5FFRGLYCGNEQSYRE4ZQRDRFL7ATANCNFSM4K56OFUA>.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/894#issuecomment-593186725:283,schedul,schedule,283,https://su2code.github.io,https://github.com/su2code/SU2/issues/894#issuecomment-593186725,1,['schedul'],['schedule']
Energy Efficiency,"I do not know if it exists already and /or if it is planned at all. In the case it does not exist it would be good to have output information on global energy balances at hand. This specifically applies to CHT multizone computations, but not only. **Describe the solution you'd like**; The energy balance should take care about delta enthalpy between inlet(s) and outlet(s). That can be compared to the heat transferred across the wall(s). So in a steady simulation with one inlet, one outlet and a wall the balance global balance should be zero. When working e.g. on a heat exchanger designs could also be compared with respect to their performance (e.g. NTU numbers or similar). This could be specifically interesting for multizone examples. Further that should work for steady, unsteady, open/closed domains and also consider technical work (as in the case of turbomachinery). ; Essentially it is an output request that should reflect the first law of thermodynamics (including open, transient systems and technical work).; It would help in engineering assessment, convergence control and be a check when new features are implemented. **Example**. Integrated Inlet Power [W] = 3.0050E+05; Integrated Outlet Power [W] = 2.5441E+05; Integrated Wall Heat Loss [W] = 5.4138E+03; Global Energy Balance [W] = 4.0676E+04 (could be internal energy or error); Mean Temperature Based HTC [W/m2K] = 8.5339E+02; Near-Wall Temperature Based HTC [W/m2K] = 7.7598E+02; Number of Transfer Units-NTU [-] = 1.8859E+01; Thermal Residence Time [s] = 8.0691E-03; Thermal Relaxation Time [s] = 4.2786E-04. **and/or**. 	LHS = dQtot + dHtot + Ptot;; 	RHS = dU/dt + dE/dt;; 	err_energy = LHS - RHS;; 	xcol("""", ""dHtot"", ""W"", dHtot);; 	xcol("""", ""dQtot"", ""W"", dQtot);; 	xcol("""", ""dWtot"", ""W"", Ptot);; 	xcol("""", ""LHS"", ""W"", LHS);; 	xcol("""", ""RHS"", ""W"", RHS);; 	xcol("""", ""E-imbalance"", ""W"", err_energy);; 	xcol("""", ""E-imbalance-relative"", ""%"", 100.0 * err_energy / energy_ref);; 	xwrite(""energy_balance.txt"");",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/800:152,energy,energy,152,https://su2code.github.io,https://github.com/su2code/SU2/issues/800,6,"['Energy', 'Power', 'energy']","['Energy', 'Power', 'energy']"
Energy Efficiency,"I don't mind the ""pairs"" by themselves, it fits nicely with how the NdFlattener works, i.e. its efficient to split them and pass them down to lower layers.; The only slight problem is that ""first"" and ""second"" are not a super expressive interface, but I think that is ok for now.; If it ever becomes needed you can create some adapter to convert something with operator (i,j,....) into pairs of pairs behind the scenes, but for the current use that would not be an option anyway.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1286#issuecomment-847329246:96,efficient,efficient,96,https://su2code.github.io,https://github.com/su2code/SU2/pull/1286#issuecomment-847329246,2,"['adapt', 'efficient']","['adapter', 'efficient']"
Energy Efficiency,"I experienced the issue you described and tried different strategies to mitigate it. ; The back mesh was promising, but after setting it up properly (yes, full mesh, only surfaces need to be refined, volume and boundaries may be kept coarse/high growth ratio), it doesn’t help much. I think this behavior is related to the inability of the adaptation to either keep a tbd element size along curvatures / have a max element size on the surface. ; I bet the nodes of the adapted grid are still on the surface but huge elements (indicating no particular gradient there) ultimately deteriorate the surface mesh quality. . As a way around to this I separated into different zones/groups the parts of the surface mesh I wanted to “freeze”, this approach works as the mesh adaptation always respect/keeps the original mesh edge position. The approach above obviously helps mitigating the issue, surface mesh quality is still highest in the initialization mesh. As this method only mitigates the problem, please share your experience! Any other indication/suggestion is very welcome!",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/948#issuecomment-761773094:340,adapt,adaptation,340,https://su2code.github.io,https://github.com/su2code/SU2/issues/948#issuecomment-761773094,3,['adapt'],"['adaptation', 'adapted']"
Energy Efficiency,"I found the solution. It's just a VTU file that was way too huge to open in; the system and crashes every time.; Thank you for the help!. On Mon, Jun 29, 2020 at 1:17 PM Karthik-ksd <notifications@github.com>; wrote:. > You've got two options:; >; > 1. Use the cfg option WRT_BINARY_RESTART= NO to dump the restart; > file(s) in human-readable ASCII.; > 2. Use the cfg option OUTPUT_FORMAT= TECPLOT or OUTPUT_FORMAT=PARAVIEW; > with SU2_SOL to export the solution to an ASCII-formatted tecplot or; > paraview file. If you're not familiar with SU2_SOL, then check out the; > documentation <https://su2code.github.io/docs/Post-processing/>.; >; > You can find those cfg options in config_template.cfg in the root SU2; > source code directory.; >; > In the end, using the tecplot or paraview option may be your best bet.; > Trying to manually parse the text files smells like an XY Problem; > <https://en.wikipedia.org/wiki/XY_problem>. Tecplot and Paraview both; > have scripting capabilities that make post-processing very efficient.; >; > Does that answer your question? Do you have any follow-up concerns?; >; > Hello @clarkpede <https://github.com/clarkpede> can you please tell me; > how to convert the output flile format from vtu to vtk; > I am facing a lots of trouble to open the file in Paraview but the output; > format is coming vtu everytime Can you please explain how to solve this; > problem; > And whenever i tries to change the output format by editting in notepad it; > tells an error that check option in SU2 config_template.cfg; > Please Help; >; > —; > You are receiving this because you were mentioned.; > Reply to this email directly, view it on GitHub; > <https://github.com/su2code/SU2/issues/787#issuecomment-651252372>, or; > unsubscribe; > <https://github.com/notifications/unsubscribe-auth/ALJ3OXHBNWF5UFMV7GZ4WDTRZDEC3ANCNFSM4IT7MM2A>; > .; >. -- ; *Thank you,*. *Monika Chauhan *. *Graduate Research Assistant, Doctoral Program*. *Aerospace and Ocean Engineering Dept, Vir",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/787#issuecomment-651853049:1022,efficient,efficient,1022,https://su2code.github.io,https://github.com/su2code/SU2/issues/787#issuecomment-651853049,1,['efficient'],['efficient']
Energy Efficiency,"I have a few updates. I found out that most of my FGMRES problems in this branch where related to the fact that I was using single precision for the linear system. You can see it in this graphs for the residuals of Rho. ![RMSRho_Mesh_3](https://github.com/user-attachments/assets/185b8195-e415-4dff-9332-cff573c069cc). The first two curves are in mixed-precision and they stop long before reaching the minimum residual required due to divergence of the linear solver. Moreover, it seems that the 2003 model here implemented (which, simply put, considers the full reynolds stress tensor for the computation of the production of k and always considers k in the stress tensor and in the thermodynamic variables) has faster convergence and increases the recirculating zone (maybe due to the reduction of turbulence kinetic energy) which is a feature that has also been seen in [DOI:10.1017/aer.2020.93]. . ![SFC_Mesh_3](https://github.com/user-attachments/assets/81a50021-6b58-4a84-9057-a18b5bab023c). There are some differences between the use of the TMR boundary conditions and the ones used before. The results improve with respect to the develop in the prediction of the SFC distribution, which has results completely off from the V&V page of SU2. ![SFC_Mesh_3_Old](https://github.com/user-attachments/assets/0f4d634b-df31-4f86-a324-d9f67947f1ff). ![RMSRho_Mesh_3_Old](https://github.com/user-attachments/assets/24d5c2f5-93fe-432f-82d9-c050a90f7339). I may keep on checking if the implementation of the v2003 model is correct or not by searching for other test cases (probably coming from DOI:10.1017/aer.2020.93).",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2329#issuecomment-2393433487:819,energy,energy,819,https://su2code.github.io,https://github.com/su2code/SU2/pull/2329#issuecomment-2393433487,2,['energy'],['energy']
Energy Efficiency,"I have added built-in support for 2D rectangular (quad) and 3D box (hexa) meshes, so no mesh file is required. Works in serial and parallel - all partitioning is taken care of for you. For example, if you wanted to run a 65^3 Taylor Green Vortex problem on a triply-periodic box, you could use the following new config options:. ```; MESH_FORMAT= BOX; MESH_BOX_SIZE= 65 65 65; MESH_BOX_LENGTH = 6.283185307179586 6.283185307179586 6.283185307179586; MESH_BOX_OFFSET = 0.0 0.0 0.0; ```. The marker names are ""x_minus"" ""x_plus"" ""y_minus"" ""y_plus"" ""z_minus"" and ""z_plus"" by default.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/728#issuecomment-521559088:233,Green,Green,233,https://su2code.github.io,https://github.com/su2code/SU2/pull/728#issuecomment-521559088,1,['Green'],['Green']
Energy Efficiency,"I have added the new option NUM_METHOD_GRAD_RECON to specify a separate method for computing the reconstruction gradient. If that option is not present, then no additional memory is allocated and no extra gradient computation occurs. I have also put in simple feedback from the linear solver residual and the nonlinear residual to the nonlinear controller. If the linear system converges less than a half an order of magnitude, then the CFL is lowered. A Cauchy-like criteria checks for stall in the nonlinear residuals and drops the CFL to the minimum floor to kick the solver out of a rut. Both of these use factors that are empirical from my tests. Will probably be improved with time and more testing, but they do seem to improve behavior. @koodlyakshay : I had success with the inc. laminar backward facing step after adding extra iterations to the linear solve. For some cases, this is necessary to get a large speedup. I am seeing good speedup for most of the cases within our TestCases repo. If you have some tough cases not covered by the repo, please give those a try.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/790#issuecomment-536145232:182,allocate,allocated,182,https://su2code.github.io,https://github.com/su2code/SU2/pull/790#issuecomment-536145232,2,['allocate'],['allocated']
Energy Efficiency,"I have mainly implemented the Preaccumulation approach for the discrete adjoint solver. This drastically reduces the memory requirements. However, this requires some additional statements in the code itself. A lot of them are in the numerics_direct_mean.cpp and numerics_direct_turbulent.cpp. I hope that they will not create to much confusion. If the code is compiled with double, all of the AD::... statements are simply expanded to nothing. ~~To improve readibilty I used variadic templates to declare inputs/outputs of the preaccumulation sections. Due to this, C++11 support is now also required for the normal version of the code!~~ (Removed variadic templates for now). I will add more information about this technique to the developer wiki soon. Other important thing: I removed ADOLC support for now. I could not guarantee that it is still working.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/220:105,reduce,reduces,105,https://su2code.github.io,https://github.com/su2code/SU2/pull/220,1,['reduce'],['reduces']
Energy Efficiency,"I have run some test to verify that the changes here also work ok for unsteady flows with dual time-stepping (even the CFL adaption seems to work pretty well for pseudo time). I also added some checks to make sure CFL adaption is disabled for TIME_STEPPING mode. @EduardoMolina @clarkpede @cvencro: if you have some time, can you please test this branch out with some of your unsteady cases to verify that everything is ok for you as well? Let me know if you see any issues",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/790#issuecomment-539278925:123,adapt,adaption,123,https://su2code.github.io,https://github.com/su2code/SU2/pull/790#issuecomment-539278925,2,['adapt'],['adaption']
Energy Efficiency,I hope my somewhat chaotic commits did not cause more work for you than they actually contributed. This was my first time using github pull requests and code editing without IDE (usually I use Visual Studio). On the upside I now have everything set up to make possible future constributions a bit more efficient :-); I assume you're merging this PR when everything is ready?,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1548#issuecomment-1050335681:302,efficient,efficient,302,https://su2code.github.io,https://github.com/su2code/SU2/pull/1548#issuecomment-1050335681,1,['efficient'],['efficient']
Energy Efficiency,"I just ran the case and I see this as well, even after complete convergence. You clearly can see this in the energy and pressure (and density) but not in the momentum terms. The temperature field also looks smooth. So may be related to density/pressure.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1373#issuecomment-932510910:109,energy,energy,109,https://su2code.github.io,https://github.com/su2code/SU2/issues/1373#issuecomment-932510910,2,['energy'],['energy']
Energy Efficiency,"I just tested the 3D adaptation on an ONERA M6 and it seems to be working fine for me. <img width=""790"" alt=""Screen Shot 2020-05-06 at 2 05 56 PM"" src=""https://user-images.githubusercontent.com/19416354/81228401-e0f75180-8fa2-11ea-98e2-c0e378566212.png"">. I just updated AMGIO to include surface/volume element orientation checks, not sure if that'll help with your issue. If the updated code doesn't fix things, can you upload your initial mesh, flow restart, and the flo.meshb and flo.solb files from adap/ini?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/948#issuecomment-624894422:21,adapt,adaptation,21,https://su2code.github.io,https://github.com/su2code/SU2/issues/948#issuecomment-624894422,1,['adapt'],['adaptation']
Energy Efficiency,"I made a fully unstructured version of the mesh and it seems I can now pass the `Geometry Preprocessing` stage. I'm now having a different issue that I do not know if it is related. After 250 iterations, the simulation hangs, with the following output in the `/adap/ini/log.out`:. ```; | 249| -7.427827| 0.000000| 0.024016| 0.000401| 8.4160e+09|; | 250| -7.390279| 0.000000| 0.024016| 0.000401| 8.4160e+09|; +-----------------------------------------------------------------------+; | File Writing Summary | Filename |; +-----------------------------------------------------------------------+; |SU2 restart |restart_flow.dat |; |Paraview binary |flow.vtk |; |Paraview binary surface |surface_flow.vtk |; [1609863350.417715] [super:1071838:0] sock.c:344 UCX ERROR recv(fd=50) failed: Bad address; [1609863350.417771] [super:1071838:0] sock.c:344 UCX ERROR recv(fd=25) failed: Connection reset by peer; [1609863350.418024] [super:1071838:0] sock.c:344 UCX ERROR sendv(fd=-1) failed: Bad file descriptor; ```. UPDATE: Bizarrely, if I attempt to run the adaptation script again, it now fails earlier with the same UCX Connection reset error:; ```; ------------------- Geometry Preprocessing ( Zone 0 ) -------------------; Three dimensional problem.; 774736 grid points before partitioning.; 4416440 volume elements before partitioning.; 3 surface markers.; 18040 boundary elements in index 0 (Marker = BODY).; 44930 boundary elements in index 1 (Marker = FARFIELD).; 177930 boundary elements in index 2 (Marker = SYMMETRY).; Executing the partitioning functions.; Building the graph adjacency structure.; [1609864445.066242] [super:1075233:0] sock.c:344 UCX ERROR recv(fd=98) failed: Connection reset by peer; [1609864445.066058] [super:1075147:0] sock.c:344 UCX ERROR recv(fd=54) failed: Connection reset by peer; ```; Is this a bug?. UPDATE: This seems to have gone away pulling a different version OpenMPI and recompiling.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/948#issuecomment-754746706:1051,adapt,adaptation,1051,https://su2code.github.io,https://github.com/su2code/SU2/issues/948#issuecomment-754746706,1,['adapt'],['adaptation']
Energy Efficiency,"I managed to implement the computation of grad(n*U)*n, but at the moment it is located into CTransLMSolver::PreProcessing. It seems to work with a structured mesh on a flat plate. Currently, I am testing with a 2D profile too. However, being into the PreProcessing of the transition solver, the normals are computed at each iteration, thus it is not computationally efficient if non-deforming meshes are used. I am looking into where to put it such that it is computed just if the mesh is updated (and at the first iteration of course). . Plus, I have added a whole lot of variables to the output, but they will be removed in the final version. They are just used as debug.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1901#issuecomment-1443670288:366,efficient,efficient,366,https://su2code.github.io,https://github.com/su2code/SU2/pull/1901#issuecomment-1443670288,1,['efficient'],['efficient']
Energy Efficiency,"I noticed that there is a 'Grid Adaptation Strategy' section in the v7 .cfg files but I'm not entirely sure how to get it working (running a supersonic Euler). I changed `KIND_ADAPT= GRAD_FLOW` and tried running `SU2_CFD` but no mesh adaptation seemed to take place. After digging around the github comments, I tried running `SU2_src/SU2_PY/mesh_adaptation.py` with python but it gave me an error:. ```; ------------------------- Exit Success (SU2_CFD) ------------------------. Traceback (most recent call last):; File ""/home/user/programs/su2/SU2_src/SU2_PY/mesh_adaptation.py"", line 106, in <module>; main(); File ""/home/user/programs/su2/SU2_src/SU2_PY/mesh_adaptation.py"", line 62, in main; options.save_all ); File ""/home/user/programs/su2/SU2_src/SU2_PY/mesh_adaptation.py"", line 93, in mesh_adaptation; SU2.run.MSH(config); File ""/home/user/programs/su2/SU2_src/SU2_PY/SU2/run/interface.py"", line 134, in MSH; run_command( the_Command ); File ""/home/user/programs/su2/SU2_src/SU2_PY/SU2/run/interface.py"", line 292, in run_command; raise exception(message); RuntimeError: Path = /home/user/projects/mesh_adapt_testing/,; Command = /home/user/programs/su2/SU2-7.0.8/bin/SU2_MSH config_MSH.cfg; SU2 process returned error '127'; /bin/sh: /home/user/programs/su2/SU2-7.0.8/bin/SU2_MSH: No such file or directory; ```. And indeed, when I checked the compiled SU2 bin, `SU2_MSH` seemed to be missing. Has this functionality been removed and is that why the python script is not in the compiled SU2 bin?. I found that some people have had success using the `feature_adap` branch instead but that is running on v7.0.3. I also tried compiling this version but there appears to be a `mesh_adaptation.py` and `mesh_adaptation_amg.py`. If one wants to use mesh adaptation, is this the recommended branch?. Wishing all a Merry Christmas, good health and a happy New Year.; Thanks and regards,; Tim. **Desktop (please complete the following information):**; - OS: Linux CentOS 8; - C++ compiler and version",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1143:32,Adapt,Adaptation,32,https://su2code.github.io,https://github.com/su2code/SU2/issues/1143,2,"['Adapt', 'adapt']","['Adaptation', 'adaptation']"
Energy Efficiency,"I propose adding a unit-testing framework and unit-tests to SU2. After chatting with @economon, I've decided to move the discussion here to get additional input. ## What is unit testing?. For those not familiar with unit testing, unit testing allows the testing of small bits of behavior, ideally using isolated bits of code. It is not intended to replace validation testing or formal verification tests. Instead, it serves a unique purpose. Consider the three following use cases:. + You're developing a new feature, and you want to test it to see if it works. You could do a full simulation, but that takes a lot of time and computing power. You want to check if your new behavior behaves as you suspect before you throw a lot of resources at it.; + You submit a PR and discover that one of the regression tests has failed. But...why? You know that something is broken, but its hard to track down what broke. You want more granular test coverage that can demonstrate what broke.; + You are fixing a very small bug. You know that you should prove that your bug fix worked, but it doesn't seem logical to dedicate an entire validation case to one small bug fix. You want to write a small test for a small fix. In all of these cases, unit testing fills a unique role. Unit testing increases time spent in development, but decreases the amount of time spent in bug-fixing and maintaining. For more information, see this [relevant Stack Exchange question.](https://scicomp.stackexchange.com/questions/206/is-it-worthwhile-to-write-unit-tests-for-scientific-research-codes). ## What do I propose?. Our research group at UT Austin has implemented a unit testing framework on our branch, which we're happy with. Some choices were arbitrary, and some choices were made based on our development environment. Those choices may be different for other groups. Here's what we have done:. The unit testing framework is compiled and run using autotools. For more information on autotool's setup, see [their document",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/698:637,power,power,637,https://su2code.github.io,https://github.com/su2code/SU2/issues/698,1,['power'],['power']
Energy Efficiency,"I recently (yesterday) found that that option does not reduce anything at the moment.; I've re-enabled it, the fix will be in one of my ignored PR's.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/918#issuecomment-603938171:55,reduce,reduce,55,https://su2code.github.io,https://github.com/su2code/SU2/issues/918#issuecomment-603938171,1,['reduce'],['reduce']
Energy Efficiency,"I recently downloaded and compiled the feature_adap branch of SU2. . After installing I attempted to run an adaptation case with pyamg. However my code errors out with, . 'File ""C:\bin\SU2\amginria\interface.py"", line 136, in call_pyamg; mesh_new = pyamg.adapt_mesh(mesh, remesh_options); AttributeError: module 'pyamg' has no attribute 'adapt_mesh''. Does the newest version of pyamg no longer have this method? If so, what is the fix?. Thanks; Daniel",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1380:108,adapt,adaptation,108,https://su2code.github.io,https://github.com/su2code/SU2/issues/1380,1,['adapt'],['adaptation']
Energy Efficiency,"I reduced the number of iterations for some of the regression tests. They need ~ 45 min now. This should at least temporarily help. Along with that I found one or two bugs ... Nevertheless, all of this shouldn't affect a lot of people, so I hope we can merge this in asap, to avoid any more travis runs to fail :)",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/480:2,reduce,reduced,2,https://su2code.github.io,https://github.com/su2code/SU2/pull/480,1,['reduce'],['reduced']
Energy Efficiency,"I searched for `TWO3` in the project and this revealed two other locations. I adapted the one in `CSolver.cpp` in commit 64bd077. There is another one in `python_wrapper_structure.cpp`, lines 400-415. There I hesitate a bit because in the `incompressible` case, `div_vel` is manually set to zero. As long as the solver has not converged, this has an effect, right?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1127#issuecomment-743033388:78,adapt,adapted,78,https://su2code.github.io,https://github.com/su2code/SU2/pull/1127#issuecomment-743033388,1,['adapt'],['adapted']
Energy Efficiency,I see. The python wrappers are far more powerful than I thought. But I'm still a bit lost with respect to the API of the driver(s). Where's a good place to start reading into that?,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1553#issuecomment-1058017822:40,power,powerful,40,https://su2code.github.io,https://github.com/su2code/SU2/issues/1553#issuecomment-1058017822,1,['power'],['powerful']
Energy Efficiency,"I think it looks better now by just rearranging things. You could also decide to put Monitor at the start of the while-loop, before calling Run(), and keep the Iter+=1 at the end, but this is just nitpicking. ; I have added an example pywrapper case that shows how to initialize velocity and species for the primitive Venturi case.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1960#issuecomment-1464603883:85,Monitor,Monitor,85,https://su2code.github.io,https://github.com/su2code/SU2/pull/1960#issuecomment-1464603883,1,['Monitor'],['Monitor']
Energy Efficiency,"I think most of the parallel reg tests are actually launched with the parallel_computation.py script, so it should be OK since they are all green. But maybe I have misunderstood your request...",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/344#issuecomment-267086037:140,green,green,140,https://su2code.github.io,https://github.com/su2code/SU2/pull/344#issuecomment-267086037,1,['green'],['green']
Energy Efficiency,"I think we are all in agreement then.. as @pcarruscag points out, we should always keep code duplication in mind and try to abstract when possible. But, let's do it gradually.. sometimes we need to balance this against keeping duplicate code if it helps reduce conflicts and allows for different parts of the code to evolve separately and in parallel by different developers. I think a good first step is what @talbring has in mind for the flow output.. exactly this type of mid-level flow output class will show up there I believe. We can see how well that goes and then port to the solver classes too. Will merge this in today so we can keep moving forward. Thanks all",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/657#issuecomment-472547987:254,reduce,reduce,254,https://su2code.github.io,https://github.com/su2code/SU2/pull/657#issuecomment-472547987,1,['reduce'],['reduce']
Energy Efficiency,I think we can reduce the iterations of some of the test cases. That should already save a lot time ... . I'll create a branch for that which we should merge in asap.,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/424#issuecomment-347515641:15,reduce,reduce,15,https://su2code.github.io,https://github.com/su2code/SU2/pull/424#issuecomment-347515641,1,['reduce'],['reduce']
Energy Efficiency,"I think we lost this functionality around version 7 (at the time I did not know we had it) maybe because it was complicated to guarantee the right file outputs when the simulation is stopped this way, especially for discrete adjoint problems.; The poor mans version of this feature is to increase the file output frequency and kill the execution :shrug: ; Nevertheless, the mechanism to change the number of time iterations at runtime can still be found in `CFluidDriver::Monitor`, which is currently used by turbomachinery problems.; If someone wants to bring the feature back that would be a good place to start, although I think this type of runtime interaction is a bad investment, it would be better to use the python wrapper.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1304#issuecomment-862079938:472,Monitor,Monitor,472,https://su2code.github.io,https://github.com/su2code/SU2/issues/1304#issuecomment-862079938,1,['Monitor'],['Monitor']
Energy Efficiency,I think you are right.; You joined the dev meeting today as we were ending right? Maybe the European summertime misled you.; Can you open a pull request for this? There are other parts of that function that are not very efficient.,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1345#issuecomment-892953950:220,efficient,efficient,220,https://su2code.github.io,https://github.com/su2code/SU2/issues/1345#issuecomment-892953950,1,['efficient'],['efficient']
Energy Efficiency,"I tried using adaptive CFL as you suggested for v7.2.1 with settings below;. CFL_ADAPT_PARAM= ( 0.1, 2.0, 1.0, 1e10, 0.001 ). Even though it doesn't diverge it still needs more iterations to converge compared to v7.0.6 and result is pretty much the same with constant CFL 250. Also, with adaptive CFL residuals are changing but they are oscillating in an interval. . What I don't really understand is why using same settings would yield less accurate results in a newer version. Since these settings are working with v7.0.6 and are very common I don't think I need to alter them for a newer version to give the same results. Here is the code output for v7.2.1 with adaptive cfl enabled. [codeOutput_v721_CFLadapt.txt](https://github.com/su2code/SU2/files/7919208/codeOutput_v721_CFLadapt.txt)",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1519#issuecomment-1019351706:14,adapt,adaptive,14,https://su2code.github.io,https://github.com/su2code/SU2/issues/1519#issuecomment-1019351706,3,['adapt'],['adaptive']
Energy Efficiency,"I want to discuss some important issues I have encountered while running shape optimization. 1. After some design iterations, the **periodic boundaries are not exactly matching**. A bad match is found until after some design the linear solver diverges. Is the shape optimization architecture in SU2 not designed to maintain the periodicity of the boundaries?. 2. If I want to **perturb a single design parameter by a certain amount and deform the mesh**, what is the parameter in the config file that I can change for that?. 3. My optimizations seem to **run independently of what I set as the OBJECTIVE_WEIGHT**. My understanding is that a negative value means minimization of the objective function and vice versa. However, with OBJECTIVE_WEIGHT=-1, the optimization seems to increase my objective function rather than reduce it. In the config_DOT_AD (and other configs), the objective weight was still +1 so I believe it wasn't being parsed correctly. I had to hardcode all instances of OBJECTIVE_WEIGHT in the C++ and python scripts from +1 to -1 to resolve the issue (which it did in the configs), however, the optimization direction is still opposite to what I want. 4. The DV_Value is always 0.001 in the config files. What is this value and is this hardcoded? . 5. In the _of_grad_*_ file the third column is for _""FINDIFF_STEP""_ = DV_Value. Does it mean that the grid deformation wrt to control points is done via finite differences?. **Problem specific details,**. **Case:** Single blade row stator passage with inlet profiles. OBJECTIVE_FUNCTION= PRESSURE_DROP; **OPTIMIZER= BFGS**; output for history_project.dat:; ""PRESSURE_DROP""; 10791.40653; 10943.29967; 10943.29967; 11041.58637; 11041.58637. The PRESSURE_DROP was supposed to be reduced (weight -1) but it's increasing. **With SLSQP I get:**; Sequential Least SQuares Programming (SLSQP) parameters:; Number of design variables: 56 ( 56 ); Objective function scaling factor: [1.0]; Maximum number of iterations: 20; Requested accuracy",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/976:821,reduce,reduce,821,https://su2code.github.io,https://github.com/su2code/SU2/issues/976,1,['reduce'],['reduce']
Energy Efficiency,"I was running some tests using a simple geometry but for the refinement seems to be chewing up the geometry. Has anyone who has worked on 3D geometries experienced this or figured out a way to avoid this?. I was using the following settings:; ```; % ------------- MESH ADAPTATION PARAMETER ------------%; %; % Type of sensor used for adaptation; % Options include GOAL (adjoint-based), MACH, PRES; PYADAP_SENSOR= MACH; % Maximum cell size for adaptation; PYADAP_HMAX= 500.0; % Minimum cell size for adaptation; PYADAP_HMIN= 1e-9; % Gradation factor (typically 1.2-1.8); PYADAP_HGRAD= 1.8; % Norm used for adaptation; % 1.0 or 2.0 recommended for inviscid flows; % 4.0 recommeneded for viscid; ADAP_NORM= 2.0; % Approximate mesh size (NPOI) at each level; PYADAP_COMPLEXITY= (1000000, 1300000, 1500000); % Number of adaptations performed at each level; PYADAP_SUBITE= (2, 2, 2); ```. ![refine](https://user-images.githubusercontent.com/16842258/104834786-0b94fa80-58e5-11eb-9018-687ffc5aaa9d.png). I noticed a few comments up, there is the `PYADAP_BACK` setting, which sounds like it might solve this, but how should one use this? Should the geometry alone be re-meshed to a high resolution and the whole volume exported as a SU2 block? Or should it be just a surface mesh? (It seems that Pointwise is not able to output only the surface mesh in SU2 format.)",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/948#issuecomment-761751741:269,ADAPT,ADAPTATION,269,https://su2code.github.io,https://github.com/su2code/SU2/issues/948#issuecomment-761751741,13,"['ADAPT', 'adapt', 'sensor']","['ADAPTATION', 'adaptation', 'adaptations', 'sensor']"
Energy Efficiency,"I was trying to run a discrete adjoint with the Cauchy Convergence criteria. But it wasn't terminating when it should have. . After doing some digging through the code, I came across a comment in CDiscAdjFluidIteration::Iterate where it says that only residual convergence criterion is possible. . It would be super helpful to add this as a comment in the config_template itself so that people aren't trying to use the Cauchy convergence with the discrete adjoint. But on another note, is there a reason that the Cauchy convergence is not implemented for the Discrete adjoint? The code required for it is present in CIntergration::Convergence_Monitoring, but just the right input (su2double monitor) needs to be set when calling the Convergence_Monitoring function. . I can implement this, but wanted to check to see if there was a reason why Sens_Mach or Sens_AoA weren't already being used as Cauchy criterion. . Cheers ; Jayant",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/627:691,monitor,monitor,691,https://su2code.github.io,https://github.com/su2code/SU2/issues/627,1,['monitor'],['monitor']
Energy Efficiency,I'll adapt one of the existing Testcases to use this feature,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1382#issuecomment-927306822:5,adapt,adapt,5,https://su2code.github.io,https://github.com/su2code/SU2/pull/1382#issuecomment-927306822,1,['adapt'],['adapt']
Energy Efficiency,"I'll take a more in-depth look my cases tomorrow (Saturday) to adapt the regression values, and options if necessary. In some cases I saw a massive improvement in convergence speed so I'll decrease the prescribed iterations to reflect that :+1: I hope it is ok to push to this PR directly (won't be that many lines ;)",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1585#issuecomment-1085574919:63,adapt,adapt,63,https://su2code.github.io,https://github.com/su2code/SU2/pull/1585#issuecomment-1085574919,1,['adapt'],['adapt']
Energy Efficiency,"I'll try to break down each request to make it clearer. Request: Use nomenclature consistent with the C++ interface (point instead of node, etc.); Reason: People who know the C++ interface will know how to use the python wrapper straight away, people who learn how to use the python wrapper will be able to understand the C++ implementation (without needing a translation layer in their mind all the time). Request: Return connectivity/adjacency as local indices instead of global; Reason: This is the natural way of referencing data in an MPI code, local indices correspond directly to data stored in the partition thereby making it more efficient to access (without global-to-local conversions, which are much more expensive than local-to-global). Furthermore, the local ordering strategy improves the efficiency of loops (over edges, neighboring points, etc.). Request: Do not apply unnecessary ""transformations"" to the connectivity/adjacency as part of the API; Reason: Increases the maintenance burden and makes for a less versatile API. By returning the local indices that form a marker or element, it is trivial to retrieve any other data for those indices (the ""transformation""). For example, the solution at those points, the point coordinates, whether the points are halo or domain points, the global indices, etc.; This way, by adding a **single** function to the API e.g. get the global index of a point of element, the functionality of the API grows a lot more because the user can apply the function to **any** connectivity/adjacency function. Request: Do not offer too many overloads of the same function; Reason: Increases the maintenance burden and it's returning the data in structures that are not very efficient, namely vector of vectors. It is much easier to offer domain-wide data access on the python side, as a very small function that can be part of wrapper utilities (i.e. live only in python but not c++). It may even be more efficient since you make a numpy array/matrix in",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1300#issuecomment-1402197827:639,efficient,efficient,639,https://su2code.github.io,https://github.com/su2code/SU2/pull/1300#issuecomment-1402197827,2,['efficient'],['efficient']
Energy Efficiency,"I'm not a user myself, just supporting our engineers. To test Windows, however, you may look into AppVeyor, an automated testing service run on Windows free of charge for open source software.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/332#issuecomment-322434455:160,charge,charge,160,https://su2code.github.io,https://github.com/su2code/SU2/pull/332#issuecomment-322434455,1,['charge'],['charge']
Energy Efficiency,"I'm the one who created that warning message, so I can fill in some details about when and why that error message occurs. For adaptive mesh refinement, SU2 looks at each element and checks how important it would be to divide that element. It then assigns a numeric value (a ""sensor"") to each element representing the relative importance. That sensor is normalized by the max value and is assumed to be positive, so its range should be from 0 to 1. SU2 defines a number of elements that it wants to create (4455 in your case). It then loops through all the elements and looks for elements whose sensors fall above a threshold. That threshold starts at 0.999, close to the max value of 1. If an element has a sensor above that threshold, SU2 marks that cell for division. If it doesn't find enough elements, then it lowers the threshold and continues looking. That process continues all the way down till the threshold hits 0. Sometimes, SU2 can't find enough elements to adapt. The threshold goes all the way to 0, and there's still not enough. Then it prints that warning and continues. That's what you're seeing. The code only mentions triangles, quadrilaterals, and tetrahedrons as a guess to what's wrong. You'll notice it says your grid ""may"" have too high a percentage of other types. If your grid were composed solely of hexahedrons, for example, then it won't find any elements to adapt and print that warning message. There's no check to confirm that this guess is actually correct. In your case, you only have quads and triangles, so the guess is obviously mistaken. As to what is actually going wrong in your case, I would have to dig in a little deeper to find out what's going on. I would guess that your elements aren't being marked as ""divisible,"" but I'm not sure why.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/606#issuecomment-434924444:126,adapt,adaptive,126,https://su2code.github.io,https://github.com/su2code/SU2/issues/606#issuecomment-434924444,7,"['adapt', 'sensor']","['adapt', 'adaptive', 'sensor', 'sensors']"
Energy Efficiency,"I've encountered a bug where SU2 will get stuck in an infinite loop. I've been trying out the grid adaptation code recently. Tets, rectangles, and triangles all worked fine, but hexahedra threw the code into an infinite loop. Basically, the code is missing the proper code for hexahedra in the `CGridAdaptation::SetSensorElem` function. I've attached the [offending lines 3640-3653](https://github.com/su2code/SU2/blob/22fa337afd26a44234344483142deff0f9524ae0/Common/src/grid_adaptation_structure.cpp#L3640) of `Common/src/grid_adaptation_structure.cpp` below:. 	/*--- Selection of the elements to be adapted ---*/; 	threshold = 0.999;; 	nElem_real = 0;; 	while (nElem_real <= max_elem) {; 		for (iElem = 0; iElem < geometry->GetnElem(); iElem ++); 			if ( Sensor[iElem] >= threshold && !geometry->elem[iElem]->GetDivide() ) {; 				if (geometry->elem[iElem]->GetVTK_Type() == TRIANGLE) nElem_real = nElem_real + 3;; 				if (geometry->elem[iElem]->GetVTK_Type() == QUADRILATERAL) nElem_real = nElem_real + 3;; 				if (geometry->elem[iElem]->GetVTK_Type() == TETRAHEDRON) nElem_real = nElem_real + 7;; 				geometry->elem[iElem]->SetDivide(true);; 				if (nElem_real >= max_elem) break;; 			}	; 		threshold = threshold - 0.001;; 	}. As you can see, if all of the elements are hexahedral, the threshold will keep decreasing but `nElem_real` will never increase, and the loop will never end. This is an easy fix, and I've already fixed it on a local branch. But I'm also wondering why grid adaptation doesn't work for hexahedra. It's not just this section of code that doesn't work. There's other sections too. One of the biggest ones is at [lines 2369-2386](https://github.com/su2code/SU2/blob/22fa337afd26a44234344483142deff0f9524ae0/Common/src/grid_adaptation_structure.cpp#L2369) of `Common/src/grid_adaptation_structure.cpp`. In that section, all hexahedra are explicitly _removed_ from the grid adaptivity process. This is rather confusing, because there is a **lot** of code in the CGridAdaptation c",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/487:99,adapt,adaptation,99,https://su2code.github.io,https://github.com/su2code/SU2/issues/487,3,"['Sensor', 'adapt']","['Sensor', 'adaptation', 'adapted']"
Energy Efficiency,"I've messed around with this a bit in some of my other branches. Since I've been using python scripts, I've used the minimum CFL in the volume at the end of the flow solution (obtained from the history file) as the CFL in my adjoint runs. I figured that would be the largest CFL that could be applied everywhere and give a contractive iteration. Doing so significantly reduced the cost of the adjoint (obviously proportional to CFL_Min/CFL_Init). We could probably do even better and output the local CFL in the restart then load that into adjoint runs, maybe with a reduction factor if we want to be conservative.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1036#issuecomment-673044213:369,reduce,reduced,369,https://su2code.github.io,https://github.com/su2code/SU2/pull/1036#issuecomment-673044213,1,['reduce'],['reduced']
Energy Efficiency,"I've noticed while using Valgrind that some of the recent pull requests have introduced a few memory issues. Here's a summary of the changes in this PR: . + Sets default for `ilu_fill_in` to 0 to prevent uninitialized value bugs on destruction of `CSysMatrix`; + Adds deallocation of some turbomachinery variables; + Adds NULL initialization and deallocation of some of the new markers. I also found a memory issue in a weird corner case with `RefOriginMoment_X`, `_Y`, and `_Z`. If the reference origin is defined exactly once, but no surfaces are marked for monitoring, then `RefOriginMoment_X` (and `_Y` and `_Z`) is set as an empty array. I think that's a bug. That bug creates problems in `CConfig::SetOutput`, (line 4284) where SU2 tries to print out the reference origin.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/507:560,monitor,monitoring,560,https://su2code.github.io,https://github.com/su2code/SU2/pull/507,1,['monitor'],['monitoring']
Energy Efficiency,"I've run into some headaches getting the optimization to run efficiently on my end, which is why I ask. Playing with a toy problem, SLSQP actually does a great job on its own (with all tuning parameters set to 1.0) if the following conditions are met:. + The constraints and bounds effectively bound ""reasonable"" solutions, so you don't have to worry about unrealistic deformations.; + The optimization function is (relatively) convex. If those conditions are met, then playing with any of the tuning parameters makes SLSQP converge more slowly, sometimes with 10x the iterations. So its not clear to me when the tuning parameters are necessary, and how those tuning parameters affect the convergence in those cases. I'm not arguing that the tuning parameters aren't necessary, just that their effects aren't clear. And I agree, the proper way to nondimensionalize and regularize these problems is not clear from a brief search of the literature.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/733#issuecomment-616825497:61,efficient,efficiently,61,https://su2code.github.io,https://github.com/su2code/SU2/issues/733#issuecomment-616825497,2,['efficient'],['efficiently']
Energy Efficiency,"If you are planning to touch the heat solver, might I suggest you, @bigfooted, @danielmayer, and me get together like the power rangers and do the scalar solver thing properwise without grafting code from 10 versions ago into develop?. The ideia would be to create a CFVMSolverBase (in the style of the one for flow solvers) to cover:; - Turbulence solvers;; - Heat solver;; - Radiation solver;; - General passive/active scalar solvers;; - Eventual transition solvers;. The starting point would be the current base turbulence solver.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1226#issuecomment-793953677:122,power,power,122,https://su2code.github.io,https://github.com/su2code/SU2/pull/1226#issuecomment-793953677,1,['power'],['power']
Energy Efficiency,"In general, you can wait for Travis to give the green light before merging into develop. This way develop stays working. In addition, when done merging usually I delete the branch to keep things clean.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/185#issuecomment-126116253:48,green,green,48,https://su2code.github.io,https://github.com/su2code/SU2/pull/185#issuecomment-126116253,1,['green'],['green']
Energy Efficiency,In places like `if (tkeNeeded) Energy += GetTke_Inf();` we would instead read tke from the turbulence solver.,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1851#issuecomment-1525852013:31,Energy,Energy,31,https://su2code.github.io,https://github.com/su2code/SU2/issues/1851#issuecomment-1525852013,1,['Energy'],['Energy']
Energy Efficiency,"In the meantime, I did a few additional comparisons. In the following plot, you can see a gust encounter of my 3m wing, in green color farfield onflow + gust and in violet color the same but with moving grid + gust. As we can see, there is a significant difference, which shouldn't be there. What is happening here?? ; My current understanding is that the green curve (farfield onflow + gust) is correct, because it looks similar to other plots I found in literature and from asking my colleagues. I have the feeling that in my implementation, I am violating some physics / broke the numerics which describe the physics, but I have not idea what I'm doing wrong... ![NACA0009_sin+gust+gridmovement2](https://user-images.githubusercontent.com/96138805/224348282-5c52dc12-a09d-4b5b-89fa-62bccf3a1cfb.png)",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1954#issuecomment-1463935023:123,green,green,123,https://su2code.github.io,https://github.com/su2code/SU2/pull/1954#issuecomment-1463935023,2,['green'],['green']
Energy Efficiency,"In version v7.0.5 we made the communications hybrid parallel (to an extent) and reduced the communication overhead noticeably, that is probably as ethernet friendly as the code can reasonably be made.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/894#issuecomment-643831225:80,reduce,reduced,80,https://su2code.github.io,https://github.com/su2code/SU2/issues/894#issuecomment-643831225,1,['reduce'],['reduced']
Energy Efficiency,Infinite Loop When Running Grid Adaptivity on Hexahderons,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/487:32,Adapt,Adaptivity,32,https://su2code.github.io,https://github.com/su2code/SU2/issues/487,1,['Adapt'],['Adaptivity']
Energy Efficiency,"It does not break the multizone adjoint but it does not fix the problem. So now when we register the coordinates we do it index-based because the multizone_problem boolean is set.; What are the implications for when we extract the adjoints? Do we need an index-based GetDerivative?. UPDATE: This solves the segfault issue, but the derivatives are probably wrong.; The residuals for the flow adjoint are not moving, @rsanfer any chance that this due to some output adaptation (I'm guessing not).",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/803#issuecomment-542191835:464,adapt,adaptation,464,https://su2code.github.io,https://github.com/su2code/SU2/pull/803#issuecomment-542191835,1,['adapt'],['adaptation']
Energy Efficiency,"It does output the file, Paraview & Tecplot formats (binary & ASCII) both work. However, I need the raw data as I will be subjecting it to a Machine Learning Algorithm in Python. Manually deleting the lines for cell numbers in Tecplot format is an additional time consuming step, that hinders full automation. Hence a simple file as flow.csv (CSV format) may help me run it more efficiently. 1. Ganti, Himakar & Khare, Prashant. (2018). Spatio-Temporal Prediction of Gaseous and Liquid Spray Fields using Machine Learning. 10.2514/6.2018-4760. . 2. Ganti, Himakar & Kamin, Manu & Khare, Prashant. (2019). Design Space Exploration for Vaporizing Liquid Jet in Air Crossflow using Machine Learning. 10.2514/6.2019-2211.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/787#issuecomment-528453362:379,efficient,efficiently,379,https://su2code.github.io,https://github.com/su2code/SU2/issues/787#issuecomment-528453362,2,['efficient'],['efficiently']
Energy Efficiency,"It looks like pointwise Mesh Link frame have a support for both mesh link and database (CAD) and it includes both edge data and corners (""Edge2"" for edges and begining and end vertices of each edge data set corresponds to corner data.); https://www.pointwise.com/doc/user-manual/file/export/cae/kestrel.html ; https://github.com/pointwise/MeshLink library also provides some info for mesh to CAD projection. . Therefore adap_back mesh file can be prepared in GAMMA mesh file format including corners, edges, triangles, tets and vertices. But l am not sure about the correctness of su2 files created at each refinement level since corner and edge data will be lost when they are written in su2 format. It may be a good idea to use the GAMMA mesh file format for pyamg mesh adaptation levels and use su2 mesh file format only when it is needed for SU2 runs.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/948#issuecomment-1673116005:772,adapt,adaptation,772,https://su2code.github.io,https://github.com/su2code/SU2/issues/948#issuecomment-1673116005,1,['adapt'],['adaptation']
Energy Efficiency,"I’m going to take care of this today, I think…. On Oct 27, 2014, at 9:59 AM, Francisco Palacios notifications@github.com wrote:. > Yep! this is a good idea. ; > ; > > On Oct 27, 2014, at 9:51 AM, Thomas D. Economon notifications@github.com wrote: ; > > ; > > After removing the local surface element area from the calculation, it results in viewing a map of change in the objective (e.g. drag) per 1 square meter w/ a 1 meter deflection at all nodes (for SI units). Makes it easier to see where the geometry is most sensitive. ; > > ; > > — ; > > Reply to this email directly or view it on GitHub https://github.com/su2code/SU2/issues/123. ; > > ; > > —; > > Reply to this email directly or view it on GitHub.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/123#issuecomment-60628204:407,meter,meter,407,https://su2code.github.io,https://github.com/su2code/SU2/issues/123#issuecomment-60628204,2,['meter'],['meter']
Energy Efficiency,"Juan, all,. The adaptive wall function formulation as described in the paper of Medic et al. has two serious issues. First, the convergence stalls after three orders of magnitude or so and second it only works with an upwind discretization of the inviscid fluxes. For some reason JST type of schemes gave rather poor results. In order to have a reliable implementation, both issues need to be addressed. Unfortunately, we never did. Edwin",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/399#issuecomment-307294686:16,adapt,adaptive,16,https://su2code.github.io,https://github.com/su2code/SU2/issues/399#issuecomment-307294686,1,['adapt'],['adaptive']
Energy Efficiency,"Just a comment here, that may or may not help:. The sensor in SU2 is based on an unstructured, 3D generalization of Jameson, Schmidt, and Turkel's original sensor. If _s_ is the sensor and _p_ is the pressure at some cell _i_, then the sensor is calculated as. ![latex_sensor](https://user-images.githubusercontent.com/13340225/134005407-e3cfec18-9bc1-45d6-89e8-7d58d72753dd.png). If you imagine a problem with constant spanwise properties, you can ask the question, will 2D and 3D simulations give the same value for the shock sensor? The answer is no. The numerator of the sensor will not change, since the pressure is constant across the spanwise direction. But the denominator will change. As you add more neighbors, the value of the denominator will increase, the value of the sensor will decrease, and the dissipation will decrease. As @pcarruscag mentioned, the stretching terms also have different values in 2D and 3D problems, so that further muddies the waters.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1280#issuecomment-922902668:52,sensor,sensor,52,https://su2code.github.io,https://github.com/su2code/SU2/issues/1280#issuecomment-922902668,7,['sensor'],['sensor']
Energy Efficiency,"Just an update: There is now WRLES data for the axisymmetric transonic bump case on the NASA Turbulence Modeling Resource. The data includes pressure, turbulent kinetic energy, and density. While the WRLES is not ""ground truth,"" it is a reliable data source for comparison. Sometime over the next few weeks, I'll compare the WRLES data with the SU2 results, including some of the possible changes. This will give us a better idea of how these model changes impact the predictive accuracy.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/797#issuecomment-649816660:169,energy,energy,169,https://su2code.github.io,https://github.com/su2code/SU2/issues/797#issuecomment-649816660,1,['energy'],['energy']
Energy Efficiency,"Just another note, portability is one of the cornerstones of SU2, so please try to work within C++11 boundaries, a lot of C++14 features are syntax sugar on top of C++11 capabilities, you can just adapt the example implementations from the online c++ documentation (no boost :) ).; Also compiler specific flags will be a bit of a deal breaker if they don't have support from the major vendors (gcc, clang, intel, ms).",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1058#issuecomment-669267383:197,adapt,adapt,197,https://su2code.github.io,https://github.com/su2code/SU2/issues/1058#issuecomment-669267383,1,['adapt'],['adapt']
Energy Efficiency,Just compiled today and it seems like the options `CFL_ADAPT` and `CFL_ADAPT_PARAM` have been deprecated? . Running the 2D inviscid cylinder and the euler channel flow example both throw an error. ```; CFL_ADAPT: invalid option name. Check current SU2 options in config_template.cfg.; CFL_ADAPT_PARAM: invalid option name. Check current SU2 options in config_template.cfg.; ```. Commenting these lines out lets the test cases run but I'm not sure what the default behavior is (are these running with adaptive CFL if we don't pass that parameter at all?),MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/152:500,adapt,adaptive,500,https://su2code.github.io,https://github.com/su2code/SU2/issues/152,1,['adapt'],['adaptive']
Energy Efficiency,"Just want to leave some notes here, open to any thoughts or suggestions. I think it's best to have it work something like this for 1st-order dual timestepping:. TIME_STEP=0.5; RESTART_ITER=0; ----------------------------------------------------------------------; Time_Iter Cur_Time; 0 0.0; 1 0.5; 2 1.0; ----------------------------------------------------------------------; Output of restart_flow_00002.dat associated with t=1.0. Then if I want to restart that simulation but with a different timestep, I would have to make sure `START_TIME` represents the time at which the first iteration in the restart is completed to, NOT the time from the previous restart file:. TIME_STEP=0.25; RESTART_ITER=3; START_TIME=1.25; ----------------------------------------------------------------------; Time_Iter Cur_Time; 3 1.25. I think it may make more sense to just call it `RESTART_TIME` so it is consistent with `RESTART_ITER`. However I don't think that this adaptive timestepping functionality / changing of timesteps for unsteady restarts would work for 2nd-order dual timestepping since information on the previous dt is lost. It wouldn't be too challenging to have a check for this in `CDriver::SetUnsteadyTimestep` and also a warning if `START_TIME` is used on an unsteady restart with it, but it may be getting a bit clunky at that point.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2190#issuecomment-1871406591:956,adapt,adaptive,956,https://su2code.github.io,https://github.com/su2code/SU2/pull/2190#issuecomment-1871406591,1,['adapt'],['adaptive']
Energy Efficiency,"Looks good, thanks for looking into this @arubino. . I think that it's fine to start a pull request with this branch if you've made the changes you wanted - it'll fix the regression test for now, and until we find a way to test for similar errors we can try to remember to skim through log files even if there's a friendly green check-mark.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/313#issuecomment-252534574:323,green,green,323,https://su2code.github.io,https://github.com/su2code/SU2/issues/313#issuecomment-252534574,1,['green'],['green']
Energy Efficiency,"Looks like the stator was just the intermittent hybrid AD problem that is being worked on.; As for the nozzle... it did not have an objective function specified, therefore it must have been defaulting to drag, which was zero because MARKER_MONITORING was empty, now you added something to monitor and puff, results changed. So before the case was not testing anything :shrug: you have my blessing to do whatever you want, check if the new adjoints make some sense and update (good samaritan option), or blindly update, or don't modify the case, or delete it, up to you :)",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1698#issuecomment-1177007574:289,monitor,monitor,289,https://su2code.github.io,https://github.com/su2code/SU2/pull/1698#issuecomment-1177007574,1,['monitor'],['monitor']
Energy Efficiency,"Maybe instead of adding a new one, we can modify an existing one to check that feature. Or we add a new one and remove an existing one. We have to somehow reduce the number of tests ...",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/740#issuecomment-515453841:155,reduce,reduce,155,https://su2code.github.io,https://github.com/su2code/SU2/pull/740#issuecomment-515453841,1,['reduce'],['reduce']
Energy Efficiency,Mesh Adaptation and missing SU2_MSH in v7.0.8,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1143:5,Adapt,Adaptation,5,https://su2code.github.io,https://github.com/su2code/SU2/issues/1143,1,['Adapt'],['Adaptation']
Energy Efficiency,"Modified the Tecplot binary output to use the latest TecIO library and to write Tecplot szplt (SZL) files instead of Tecplot plt files. Tecplot szplt files are smaller than plt files and are utilized more efficiently in Tecplot. For large files visualization within Tecplot can be much faster and use far less memory with szplt files. To make this change work correctly, the TecplotBinary DomainMesh and DomainSolution files were modified to write a single mixed-element zone instead of separate zones for each element type. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [x] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/558:205,efficient,efficiently,205,https://su2code.github.io,https://github.com/su2code/SU2/pull/558,1,['efficient'],['efficiently']
Energy Efficiency,Monitoring Pressure values on some specified points,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/466:0,Monitor,Monitoring,0,https://su2code.github.io,https://github.com/su2code/SU2/issues/466,1,['Monitor'],['Monitoring']
Energy Efficiency,"My previous post used a linear solver precision of 1E-6. I ran a couple of test cases at near machine precision (a linear solver tolerance of 1E-14) and higher CFL number (CFL=150), with no CFL adaptation. As suggested, I used ILU+FGMRES. I capped the maximum number of linear solver iterations at 200, and did not raise any errors if the linear solver stopped at 200 iterations with less than 1E-14. The linear solver didn't exceed 200 iterations for the RANS equations, but it did for the Navier-Stokes equations. Once again, there doesn't appear to be a huge difference. For the flat-plate, the results were almost identical:. ![flat_plate_improved](https://user-images.githubusercontent.com/13340225/35233993-595fe2d4-ff65-11e7-9fd6-4b98f30b4d75.png). For the NACA 0012 airfoil, the current `develop` branch of the code outperformed this pull request:. ![naca0012_improved](https://user-images.githubusercontent.com/13340225/35233983-4f79b380-ff65-11e7-81f4-4b65964acecc.png). I believe overall convergence was similar because the Navier-Stokes solver, not the turbulence-solver, is the limiting factor when it comes to precision. The linear solver always converged on a turbulence solution with high precision in under 50 linear solver iterations. Meanwhile, the linear solver sometimes failed to find a Navier-Stokes solution within 1E-14 even after 200 iterations. The only way to make the Navier-Stokes solver converge to 1E-14 was to use small time steps (CFL ~= 1) at difficult points in the overall convergence.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/491#issuecomment-359811658:194,adapt,adaptation,194,https://su2code.github.io,https://github.com/su2code/SU2/pull/491#issuecomment-359811658,1,['adapt'],['adaptation']
Energy Efficiency,"N; ++k); grad(iPoint+k,iVar,iDim) = gradI[iVar][iDim][k];; ...; ```; Similarly when computing the gradient we need to first fetch/transpose it to be able to vectorize subsequent computations; ```c++; FltVec gradI[MAXNVAR][MAXNDIM];. for(size_t iVar=0; iVar<nVar; ++iVar); for(size_t iDim=0; iDim<nDim; ++iDim); for(size_t k=0; k<SIMDLEN; ++k); gradI[iVar][iDim][k] = grad(iPoint+k,iVar,iDim);; ...; ```; Performance wise this is actually better than the SoA version (4% on gradients, 35% on limiters) as it also benefits from better locality, and it is only slightly (3%) worse than zig zag storage, especially when fusing limiters and gradients as the transposition of the gradient into storage is greatly amortised.; Regarding readability, the 3 nested loops can be moved to methods of the container, but we cannot get rid off the local variable (if we want vectorization that is). **We lose the ability to vectorize primitive variable updates efficiently with AoS** but currently that only accounts for 3% of the runtime and it is a memory bound operation therefore it would not gain much from vectorization anyway. On the subject of de-swizzling data remember I said the writes into CSysMatrix would be a bit weird, that is because each Jacobian contribution will be a ""matrix of short arrays"" that needs to be transformed into a short array of matrices, the result of that is code like the above that explicitly manipulates the lanes of our SIMD type, such code can be completely hidden inside CSysMatrix which is good because a 4x4 vectorized transpose and matrix update looks like this; ```c++; // block j, subs from jj and goes to ij; T0 = blk_j[ k ].unpackLo(blk_j[k+1]); T1 = blk_j[ k ].unpackHi(blk_j[k+1]);; T2 = blk_j[k+2].unpackLo(blk_j[k+3]); T3 = blk_j[k+2].unpackHi(blk_j[k+3]);. C0 = T0.widePermuteLo(T2); C1 = T1.widePermuteLo(T3);; C2 = T0.widePermuteHi(T2); C3 = T1.widePermuteHi(T3);. (Array4d(&bjj[0][k])-C0).store(&bjj[0][k]);; (Array4d(&bjj[1][k])-C1).store(&bjj[1][k]);; (Arr",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/789#issuecomment-535977206:15153,efficient,efficiently,15153,https://su2code.github.io,https://github.com/su2code/SU2/issues/789#issuecomment-535977206,2,['efficient'],['efficiently']
Energy Efficiency,Need to figure out how to adapt for noneq flows. I haven't been able to find a separate description of how to solve for boundary conditions for noneq flows with Riemann invariants.,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1882#issuecomment-1378279716:26,adapt,adapt,26,https://su2code.github.io,https://github.com/su2code/SU2/pull/1882#issuecomment-1378279716,1,['adapt'],['adapt']
Energy Efficiency,"Nice progress @pcarruscag!. I like the concept of your SIMD-friendly class that will take care of the data structure under the hood coupled with a standard type of loop statement (w/ +SIMDLEN). This should make it pretty easy for folks to still modify the kernels without having to worry about the data alignment, and they can reuse the same simple 'for' construct repeatedly. . Another reason to have our own lightweight class for this is that you can avoid dependence on OpenMP for SIMD (although that feature looks to have potential and wasn't available until somewhat recently) as well as the intrinsics. In my experience, the latter is especially bad for portability and readability (part of why we left the CaF work in a separate repo). It starts to become so specialized that compiling and modifying become difficult. W.r.t. OpenMP, another roadblock there a few years ago was making sure it is interoperable with CoDi for the adjoint, but I know this has been worked on and may be available by now. Might keep an open mind about point vs. edge. In some places, we may be able to pump up the compute in our loops by fusing kernels, as previously discussed (and I am guessing you are working on this already with gradients/limiters). Could change the final performance numbers significantly. Lastly, I know you are not there yet, but it is worth considering whether you can reuse anything you are developing in the kernels here for the linear solver routines. At some point, you will successfully reduce the cost of the residual kernels (RHS) to the bandwidth limit, and the majority of the iteration cost will be in the linear solver (it is already about 50% of the iteration cost before optimization, if I recall). Before making final decisions on strategy, you should consider if it will help in any of the linear solver routines too.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/789#issuecomment-530440072:1503,reduce,reduce,1503,https://su2code.github.io,https://github.com/su2code/SU2/issues/789#issuecomment-530440072,2,['reduce'],['reduce']
Energy Efficiency,"Nice work, and thanks for sharing, @jayantmukho. I expect you'll add everything to the V&V repo and eventually the V&V tab once we understand what is happening?. The GG results look great, potentially even better than the previous set of results we had for the DSMA case. I am also surprised to see the behavior of the GG+LSQ.. the finest mesh seems to be especially errant. I have been running the NACA 0012 case, and I also see that the results with pure GG or WLSQ are slightly better there, but not this drastic. I think we still need to dial in the LSQ and make sure we do not have any bugs. Although, the flat plate and bump-in-channel cases were run with LSQ and gave very good results. It could be that too much curvature in the grid, especially near walls (which is known to be a potential problem), is causing these issues for the LSQ accuracy, but I'm surprised it would be that significant. Still looking into this... As for adaptive CFL, sometimes I find that just turning it off for some rans cases and using a fixed 250, 500, or 1000 works best. Does that work for you with these cases with GG or WLSQ, @jayantmukho ?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/790#issuecomment-553521522:937,adapt,adaptive,937,https://su2code.github.io,https://github.com/su2code/SU2/pull/790#issuecomment-553521522,1,['adapt'],['adaptive']
Energy Efficiency,"No meson option yet, it is a very small one though, the whole system works by detecting `-fopenmp`.; Your second comment is the main argument against moving the parallel section further up.; Allocation routines have the highest risk of making a mess, but even seemingly innocuous things like the small auxiliary arrays we allocate e.g. in CSolver and then use in derived classes are a problem.; I am almost done making the FEA solver completely hybrid parallel and I had to refactor most uses of those arrays. This is also why I took a more functional approach to the new limiter and gradient routines. The way we use CConfig is also not thread safe, we would need to make all ""SetSomethings"" atomic, which would be monumental.; Initially I would have a few parallel sections (it is not too difficult to then move them up if we think that is the way to go) I want to use the FEA solver to get an idea for the relative performance, after seeing the effect of `OMP_WAIT_POLICY` I am optimistic.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/830#issuecomment-566667503:322,allocate,allocate,322,https://su2code.github.io,https://github.com/su2code/SU2/pull/830#issuecomment-566667503,1,['allocate'],['allocate']
Energy Efficiency,"No, the invalid reads and writes are problematic. There you cross the boundaries of allocated memory and anything can happen.; What version/branch are you using? The line numbers valgrind gives do not correspond to the current develop version.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1156#issuecomment-755368953:84,allocate,allocated,84,https://su2code.github.io,https://github.com/su2code/SU2/issues/1156#issuecomment-755368953,1,['allocate'],['allocated']
Energy Efficiency,"Not sure what you mean. It reduces the objective function. This could be by small values, or by orders of magnitude, if such a reduction is possible.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/984#issuecomment-628759102:27,reduce,reduces,27,https://su2code.github.io,https://github.com/su2code/SU2/issues/984#issuecomment-628759102,1,['reduce'],['reduces']
Energy Efficiency,"Oh interesting, just to be fully complete here's what made me think that:. 1.I have a well-converged steady-state solution and outputted the minimum DT's for each cell when running with a CFL=1.0, no adaptive. I was unable to restart this for an unsteady one with no changes in BCs without using a DT orders-of-magnitude smaller. 2. When I run /Tutorials/compressible_flow/Turbulent_OneraM6 with `MIN_DELTA_TIME` set as a screen output, I get orders-of-magnitude different final timestep when I run with `REF_DIMENSIONALIZATION= DIMENSIONAL` instead of `FREESTREAM_VEL_EQ_ONE`. . 3. When I run `SU2_CFD -d` on the /Tutorials/compressible_flow/Unsteady_NACA0012 example **using `FREESTREAM_VEL_EQ_ONE`** I see the attached image below, which appears to nondimensionalize using length/velocity. ![Unsteady_NACA0012_SU2CFDd](https://github.com/su2code/SU2/assets/116454159/44a5b0c4-2220-4e98-a911-cf0229f0cb21). 4. I also looked briefly at the code it _appeared_ that the calculations were using nondimensional values; here's what I looked at:. Setting of local timestep:; https://github.com/su2code/SU2/blob/b80e4ce0e4fd05afa136af0990a17dd619cdce42/SU2_CFD/include/solvers/CFVMFlowSolverBase.hpp#L506-L522. Calculation of Lambda's:; https://github.com/su2code/SU2/blob/b80e4ce0e4fd05afa136af0990a17dd619cdce42/SU2_CFD/include/solvers/CFVMFlowSolverBase.hpp#L413-L444. GetProjVel:; https://github.com/su2code/SU2/blob/b80e4ce0e4fd05afa136af0990a17dd619cdce42/SU2_CFD/include/variables/CEulerVariable.hpp#L244-L254. Then at this point admittedly I just assumed that the `MatrixType Primitive` of `CEulerVariable` was indeed nondimensional. I am not familiar with where/when data is stored/updated throughout SU2 as nondimensional v dimensional.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2060#issuecomment-1613895947:200,adapt,adaptive,200,https://su2code.github.io,https://github.com/su2code/SU2/pull/2060#issuecomment-1613895947,1,['adapt'],['adaptive']
Energy Efficiency,"Ok, I went back to try varying the `.cfg` settings on the simple v7.0.3 repo `TestCases/euler/naca0012` case and managed to get `mesh_adaptation_amg.py` to run successfully. It seems that one bit of advice [from here](https://www.cfd-online.com/Forums/su2/214613-grid-adaptation-options.html) is no longer true, i.e. one needs to set:; ```; % Write binary restart files (YES, NO); WRT_BINARY_RESTART= YES; %; % Read binary restart files (YES, NO); READ_BINARY_RESTART= YES; ```; in order for the amg mesh adaptation to function. However, for some reason, I can't get it working for my actual mesh of interest. When using the same settings, I get a different ParMETIS error (from the `adap/ini/log.out`):; ```; ------------------- Geometry Preprocessing ( Zone 0 ) -------------------; Three dimensional problem.; 4929018 grid points before partitioning.; 7406196 volume elements before partitioning.; 3 surface markers.; 18040 boundary elements in index 0 (Marker = BODY).; 50968 boundary elements in index 1 (Marker = FARFIELD).; 284054 boundary elements in index 2 (Marker = SYMMETRY).; Executing the partitioning functions.; Building the graph adjacency structure.; [ 1] ***ASSERTION failed on line 207 of file ../externals/parmetis/libparmetis/comm.c:sendind[i] >= firstvtx && sendind[i] < lastvtx; [ 1] 361316 123226 246452; [1609857970.901920] [super:1060888:0] sock.c:344 UCX ERROR recv(fd=62) failed: Connection reset by peer; ```. The only difference that I can think of is that my flow is fully supersonic and my mesh is an unstructured core with a structured collar - might this be causing the issue? Kind regards.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/948#issuecomment-754686447:268,adapt,adaptation-options,268,https://su2code.github.io,https://github.com/su2code/SU2/issues/948#issuecomment-754686447,4,['adapt'],"['adaptation', 'adaptation-options']"
Energy Efficiency,"Ok, I've recompiled using --buildtype=debug and I'm running valgrind now. I'll try and run it at a reduced rank and get back to you. Thanks.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1156#issuecomment-755318540:99,reduce,reduced,99,https://su2code.github.io,https://github.com/su2code/SU2/issues/1156#issuecomment-755318540,1,['reduce'],['reduced']
Energy Efficiency,"Ok, SIMD update, with #753, #959, and #966 we now have a unified storage type for the data we need in CNumerics. This means that we (I) only need to implement ""SIMD accessor methods"" (i.e. that return a SIMD type instead of a su2double) for one class (C2DContainer and co.). I think to do SIMD right we need a new way of going about CNumerics, these are my design requirements for ""CNewNumerics"":; - Thread-safe (consequently const-correct), a single object must be safe to use by multiple threads.; - Minimal indirection, the polymorphic overhead will be reduced to a single call (ComputeResidual), all auxiliary functions (like the ones that live in CNumerics) will be forcefully inlined, no useless copies of data (no more numerics->SetBlaBla).; - Compile time nDim/nVar, which will: a) avoid heap allocations; b) allow effective loop-unrolling (also during the writes to CSysMatrix).; - Allow low-overhead composition, e.g. have one CRoe for Euler and one CRoeVisc for NS to fuse convective and viscous residuals (without copy pasting code).; - A lot more readable, those cryptic V_i[iDim+1] need to go (somehow...). To achieve all this, the ""CNewNumerics"" will work as a template (obvs) decorator/visitor.; A visitor in the sense that the solver calls the numerics and gives it (read-only) access to all its data, the object pulls whatever it needs directly and there is no need for numerics->SetBlaBla.; A template decorator in the sense that the class can be augmented simply by inheriting from another, along the lines of `class CRoeVisc : public CRoe, public CVisc` (to allow fusing residual and Jacobian contributions).; All this needs to be done with templates for the ""minimal indirection"" requirement. Which means for each numerical method we will have 4 explicit template instantiations (Euler2D, Euler3D, (RA)NS2D, (RA)NS3D) but in the end these are still polymorphic objects that will be instantiated by some factory function (i.e. it will look clean, especially because I will not por",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/789#issuecomment-622941617:556,reduce,reduced,556,https://su2code.github.io,https://github.com/su2code/SU2/issues/789#issuecomment-622941617,2,['reduce'],['reduced']
Energy Efficiency,"Ok, the issue is that the inlet values in SST tend to decay very quickly (as you can find in the literature https://turbmodels.larc.nasa.gov/sst.html) so far as I can tell we are adding the right amount of TKE to the flow and turbulence solver inlets.; However, in the turbulence solver this is destroyed immediately (note that destruction is proportional to TKE) and so TKE at the inlet nodes is not TKE_Inf.; Effectively this means we put too much energy into the flow, which is not matched by the turbulence solver due to the immediate decay, and therefore static temperature appears high, and Mach number low.; E.g. we put 10 + 0.1 into the flow solver inlet, and 0.1 into the turbulence solver, but this 0.1 decays to 0.01 right away. Then, when we compute the temperature for this inlet node we have 10 + 0.1 total energy (which does not decay in the flow solver since it does not have destruction terms) from which we subtract the decayed 0.01 from the turbulence solver and end up with 10.09 instead of 10. I tested this by turning on the SST sustaining terms, which prevent decay below freestream values, and I got the right Mach number. So what we could do is use the TKE from the turbulence solver in the flow solver inlets, instead of the freestream TKE which the turbulence solver is not guaranteed to sustain.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1851#issuecomment-1364158508:450,energy,energy,450,https://su2code.github.io,https://github.com/su2code/SU2/issues/1851#issuecomment-1364158508,2,['energy'],['energy']
Energy Efficiency,"Ok. I don't think [these](https://github.com/su2code/SU2/pull/774/commits/e632133eded5edab7ff04f0979334c25c0f44ff8) changes are over-complicated. But I'm fine with changing the index saving procedure everywhere. There'd be just some work to do (we would have to adapt everything for the FEA elasticity solvers and all the variables they need as well)... so it's also a question of time, testing and so on.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/803#issuecomment-542206395:262,adapt,adapt,262,https://su2code.github.io,https://github.com/su2code/SU2/pull/803#issuecomment-542206395,1,['adapt'],['adapt']
Energy Efficiency,"Ok. My advice would be to not use the `SUPERSONIC_SHOCK` option, but other developers may have further recommendations there. It doesn't seem to be set up for general cases. Are you having any further issues with the mesh adaptation? For example, is the `GRAD_FLOW` option working as you expected? Has the issue been resolved?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/606#issuecomment-444955431:222,adapt,adaptation,222,https://su2code.github.io,https://github.com/su2code/SU2/issues/606#issuecomment-444955431,1,['adapt'],['adaptation']
Energy Efficiency,Okay @pcarruscag I believe ; I reverted all the annoying format changes. Can you please review the code when you get the chance?. BTW I am aware about the boilerplate code in `python_wrapper_structure.cpp` and I plan to adapt `CPyWrapperMatrixView`. Would appreciate some feedback anyways,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1750#issuecomment-1779150012:220,adapt,adapt,220,https://su2code.github.io,https://github.com/su2code/SU2/pull/1750#issuecomment-1779150012,2,['adapt'],['adapt']
Energy Efficiency,"Only the testcases `channel_2D`, `channel_3D` fail. Both use sliding mesh interfaces, but there are also other sliding mesh testcases that do not fail. The residuals are still very close and also the flow fields look similar. I thus adapted the stored residuals in 9d8f194. Let me know if you would like to investigate the changed residuals further.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1346#issuecomment-895007670:233,adapt,adapted,233,https://su2code.github.io,https://github.com/su2code/SU2/pull/1346#issuecomment-895007670,1,['adapt'],['adapted']
Energy Efficiency,Option for Joule Heating not in configuration file,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/230:11,Joule,Joule,11,https://su2code.github.io,https://github.com/su2code/SU2/issues/230,1,['Joule'],['Joule']
Energy Efficiency,"Overall some solid looking code @jayantmukho, thanks!; I have a few suggestions:; 1 - Some of the config variables have fairly broad names, ""permute"" for example, I think prefixing them with UQ would more clearly identify what they are meant for.; 2 - There are a lot of dynamic allocations of static size, if the current implementation is compatible with 2 and 3 dimensions I would allocate those variables statically, makes for cleaner and faster code (stack allocations are much faster and subsequent loops would likely be unrolled by the compiler).; 3 - It looks like some of the new methods in CNumerics are for generic ""Eigenvalue-stuff"" for re-usability I suggest moving those methods to a helper class, even if for now that class becomes just a collection of static methods. In the implementation of those methods the dimension of the inputs is being assumed, if you do move them please make them generic.; Cheers,; Pedro",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/570#issuecomment-427468893:383,allocate,allocate,383,https://su2code.github.io,https://github.com/su2code/SU2/pull/570#issuecomment-427468893,2,['allocate'],['allocate']
Energy Efficiency,"Part of the reason I never gave much attention to the current optimization scripts, and instead developed my own, is that I need different settings for primal and adjoint and the optimization scripts cannot handle that. I don't think we should have different config settings for primal and adjoint. I'm certain the adjoint solver considers the convergence criteria, you probably did something wrong in your setup (I'm guessing the fields you are monitoring do not exist for the adjoint, hence it has nothing to use as convergence field) but since you did not attach your config file, all I can tell you is to read the documentation https://su2code.github.io/docs_v7/Solver-Setup/. > ... I am downgrading ... Yes you are. Honestly I envy this kind of pragmatism, it is probably why SU2 has tens or hundreds of ""feature branches"" lagging behind master by several versions. I feel like ranting but I'll be pragmatic for once.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1024#issuecomment-645255976:446,monitor,monitoring,446,https://su2code.github.io,https://github.com/su2code/SU2/issues/1024#issuecomment-645255976,1,['monitor'],['monitoring']
Energy Efficiency,"Pete, Tim,. I have had a long standing interest in getting this working and would be happy to help. The (partial) implementation that is there is already 3-4 years old, so it will have to be updated, but we can discuss some of the details of the implementation and how it can be done both more efficiently and for both compressible formulations and adaptive wall functions. We can start a thread separately (jjalonso@stanford.edu<mailto:jjalonso@stanford.edu>) and perhaps have a telecon to kick things off. My availability for this improves after the next 2 weeks. Best,. Juan. On Jun 7, 2017, at 1:19 PM, Tim Albring <notifications@github.com<mailto:notifications@github.com>> wrote:. Hi Pete,. we appreciate your help on that. I just updated the branch feature_Wall_Functions<https://github.com/su2code/SU2/tree/feature_Wall_Functions> to be up-to-date with develop. The main routines dealing with the wall functions are in solver_direct_mean.cpp<https://github.com/su2code/SU2/blob/feature_Wall_Functions/SU2_CFD/src/solver_direct_mean.cpp#L16612> and solver_direct_turbulent.cpp<https://github.com/su2code/SU2/blob/feature_Wall_Functions/SU2_CFD/src/solver_direct_turbulent.cpp#L2569>. Maybe @economon<https://github.com/economon> can tell you what exactly is missing there. Tim. —; You are receiving this because you are subscribed to this thread.; Reply to this email directly, view it on GitHub<https://github.com/su2code/SU2/issues/399#issuecomment-306912607>, or mute the thread<https://github.com/notifications/unsubscribe-auth/ADpSxOvHCOSUFKDoizjyvrHbgyXgZ-vVks5sBwW8gaJpZM4NvG6w>.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/399#issuecomment-306941656:294,efficient,efficiently,294,https://su2code.github.io,https://github.com/su2code/SU2/issues/399#issuecomment-306941656,2,"['adapt', 'efficient']","['adaptive', 'efficiently']"
Energy Efficiency,"Poiseuille flow, top is corrected, bottom is develop. There is still a small discrepancy in the energy but this might be due to the strong velocity components close to the wall.; ![image](https://github.com/su2code/SU2/assets/7050568/b38e0653-d2e5-454c-9a8b-a8d6fd0390a2)",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2266#issuecomment-2067693182:96,energy,energy,96,https://su2code.github.io,https://github.com/su2code/SU2/pull/2266#issuecomment-2067693182,1,['energy'],['energy']
Energy Efficiency,"Recently pushed to develop branch with this.; Note: there is a LoadRestart method in the CSolver class which might reduce some repeated code, I'm not sure if there was a good reason folks had not used it in the past.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/68#issuecomment-56878160:115,reduce,reduce,115,https://su2code.github.io,https://github.com/su2code/SU2/issues/68#issuecomment-56878160,1,['reduce'],['reduce']
Energy Efficiency,Reduce discrete adjoint memory usage ~25%,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1159:0,Reduce,Reduce,0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1159,1,['Reduce'],['Reduce']
Energy Efficiency,"Reduce flow solver triplication (comp, incomp, nemo)",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1177:0,Reduce,Reduce,0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1177,1,['Reduce'],['Reduce']
Energy Efficiency,Reduce memory footprint FEA problems,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/663:0,Reduce,Reduce,0,https://su2code.github.io,https://github.com/su2code/SU2/pull/663,1,['Reduce'],['Reduce']
Energy Efficiency,Reduce public interface of drivers,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1996:0,Reduce,Reduce,0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1996,1,['Reduce'],['Reduce']
Energy Efficiency,"Regarding ""Fixed Supersonic inlet BC inclusion of TKE,"" does the energy equation include the contribution of turbulent diffusion?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2329#issuecomment-2253325035:65,energy,energy,65,https://su2code.github.io,https://github.com/su2code/SU2/pull/2329#issuecomment-2253325035,1,['energy'],['energy']
Energy Efficiency,"Run SU2_CFD with `WRT_BINARY_RESTART= NO`. That will give you an ASCII `restart_flow.dat`. It will look something like this:; ```; ""PointID""	""x""	""y""	""z""	""Density""	""X-Momentum""	""Y-Momentum""	""Z-Momentum""	""Energy""	""Pressure""	""Temperature""	""C<sub>p</sub>""	""Mach""; 0	6.931794337794450e-01	1.199410270705132e+00	3.552713678800501e-15	9.247274759558524e-01	6.998395924205978e-01	6.744390123118781e-01	2.033333591408758e-01	2.825647424000119e+00	9.170095708259952e-01	9.784295110379145e-01	-1.930126447908861e-01	9.113348070779481e-01	; 1	6.906841300000011e-01	1.196300000000000e+00	0.000000000000000e+00	1.118921803269151e+00	5.021166385546235e-01	7.896289876522433e-01	2.161057381347509e-01	3.352487832836354e+00	1.176133434271568e+00	1.037113520398247e+00	3.252350821002600e-01	7.075425651590469e-01	; 2	6.924294614497271e-01	1.202091611452504e+00	1.468890958566504e-03	9.758692057411605e-01	8.423040306657703e-01	5.135454779704676e-01	2.297213358745695e-01	2.971366201327637e+00	9.782771280113181e-01	9.890989089014984e-01	-7.047753042024051e-02	8.761491078578573e-01	; ```; This answers the original question, ""How do I get SU2 to output raw ASCII data?"". You can also use the python scripting capabilities of Tecplot or Paraview (technically, VTK). You can find documentation for Tecplot's python API [here](https://www.tecplot.com/docs/pytecplot/index.html) and for VTK's python API [here](https://lorensen.github.io/VTKExamples/site/). That will allow you to use the Paraview or Tecplot files directly in python. You would use the paraview or tecplot libraries to load the data into python, then post-process it however you want. There's no need for ""manually deleting the lines for cell numbers.""",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/787#issuecomment-528461710:203,Energy,Energy,203,https://su2code.github.io,https://github.com/su2code/SU2/issues/787#issuecomment-528461710,1,['Energy'],['Energy']
Energy Efficiency,"SU2 is a fantastic library, but the build process is really painful to get static linking within another C++ program. CMake is a standard for building C++ projects and would be extremely helpful. Ideally Python wouldn't be necessary to build SU2 or link it with another project. In our use case we need to link the library so that we can efficiently multithread workflows, keep data in memory, and make analysis as efficient as possible. I realize this is a significant request, but a build process with CMake could be so much simpler and would make your codebase much more accessible to the C++ community. Thanks so much for all your excellent work!",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1711:338,efficient,efficiently,338,https://su2code.github.io,https://github.com/su2code/SU2/issues/1711,2,['efficient'],"['efficient', 'efficiently']"
Energy Efficiency,SU2/TestCases/TestCase.py uses `platform.processor()` which returns `i386` on an Intel Core i7 MacBookPro running mac OS 11.7. This just differentiates between Power PC vs Intel processors and not necessarily between 32-bit and 64-bit architectures. This causes all the tests in the test suite to be skipped even though the machine is 64-bit. . `platform.machine()` returns `x86_64` allowing the tests to run from the TestCase.py script. . Python documentation (3.12.0) also notes that many platforms do not provide the information for `platform.processor()` or simply return the same value as for `platform.machine()`. Suggestion is to replace `platform.processor()` with `platform.machine()`.,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/2159:160,Power,Power,160,https://su2code.github.io,https://github.com/su2code/SU2/issues/2159,1,['Power'],['Power']
Energy Efficiency,"S_ResonatorTip_Wall); %%%%%%%%%%%%%% FFD PARAMETERS %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%; FFD_TOLERANCE = 1E-10; FFD_ITERATIONS = 20; FFD_CONTINUITY=USER_INPUT; % DV_PARAM = ( FFD_BoxTag, i_Ind, j_Ind, k_Ind, x_Disp, y_Disp, z_Disp ); DV_PARAM = \; (BOX, 2, 0, 0, 0.0, 1.0, 0.0); \; (BOX, 3, 0, 0, 0.0, 1.0, 0.0); \; (BOX, 4, 0, 0, 0.0, 1.0, 0.0); \; (BOX, 2, 1, 0, 0.0, 1.0, 0.0); \; (BOX, 3, 1, 0, 0.0, 1.0, 0.0); \; (BOX, 4, 1, 0, 0.0, 1.0, 0.0); % NOTE: left-most 2 points omitted, to make them fixed; % Value of the shape deformation; % first row: lower row y-direction; % second row: upper row y-direction; DV_VALUE= 0.00005, 0.0001, 0.005, \; 0.00005, 0.0001, 0.005; % ------------------------ GRID DEFORMATION PARAMETERS ------------------------%; % Linear solver or smoother for implicit formulations (FGMRES, RESTARTED_FGMRES, BCGSTAB); DEFORM_LINEAR_SOLVER= FGMRES; DEFORM_LINEAR_SOLVER_PREC= ILU; % Number of smoothing iterations for mesh deformation; DEFORM_LINEAR_SOLVER_ITER= 500; % Number of nonlinear deformation iterations (surface deformation increments); DEFORM_NONLINEAR_ITER= 1; % Minimum residual criteria for the linear solver convergence of grid deformation; DEFORM_LINEAR_SOLVER_ERROR= 1E-14; % Print the residuals during mesh deformation to the console (YES, NO); DEFORM_CONSOLE_OUTPUT= YES; % Deformation coefficient (linear elasticity limits from -1.0 to 0.5, a larger; % value is also possible); DEFORM_COEFF = 0.0; % Type of element stiffness imposed for FEA mesh deformation (INVERSE_VOLUME,; % WALL_DISTANCE, CONSTANT_STIFFNESS); DEFORM_STIFFNESS_TYPE= WALL_DISTANCE; % Deform the grid only close to the surface. It is possible to specify how much; % of the volumetric grid is going to be deformed in meters or inches (1E6 by default); DEFORM_LIMIT = 1E6; ```. **Desktop (please complete the following information):**; - OS: SLES15; - C++ compiler and version: intel compiler, 2021.4.0; - MPI implementation and version: intel-mpi 2019; - SU2 Version: current master branch",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1879:4341,meter,meters,4341,https://su2code.github.io,https://github.com/su2code/SU2/issues/1879,1,['meter'],['meters']
Energy Efficiency,"Seems like we lost that function recently, I'll try to fix it and put together a working example, then you can adapt it to your problem.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1079#issuecomment-2143984024:111,adapt,adapt,111,https://su2code.github.io,https://github.com/su2code/SU2/issues/1079#issuecomment-2143984024,1,['adapt'],['adapt']
Energy Efficiency,"So I tested the convergence on a couple of test cases, to see its behavior. I used the following three different preconditioner/linear solver combinations:. + LU SGS with FGMRES; + ILU with FGMRES; + ILU with BCGSTAB. I looked at three different test cases from the repo: the zero-pressure gradient flat-plate turbulent boundary layer, the NACA 0012 airfoil, and the RAE 2822. In each case, I ran without a restart file. For the flat plate and the NACA 0012, I used adaptive CFL and no multigrid. For the RAE 2822, I used constant CFL and multigrid. I looked at both the number of iterations of the linear solver (the inner iterations) and the overall convergence over time (the outer iterations). Here's some sample results and discussion:. For the flat-plate boundary layer, there was no noticeable difference between the develop branch and the fix:; ![flat_plate_ilu](https://user-images.githubusercontent.com/13340225/35281464-92d4da84-0018-11e8-9460-ae4672be6f44.png). For the NACA 0012, the linear solver converged in a similar number of iterations. Its hard to tell which outperformed the other due to different CFL numbers. The residual in turbulent kinetic energy did lag in the middle, but both cases converged in a similar number of outer iterations.; ![naca0012_ilu](https://user-images.githubusercontent.com/13340225/35281471-9aa05a40-0018-11e8-8abe-e31ddd058679.png). For the RAE 2822, the overall convergence was identical (same number of outer iterations). The linear solvers also converged in a similar number of iterations.; ![rae2822_ilu](https://user-images.githubusercontent.com/13340225/35281495-addf0d7c-0018-11e8-96c0-6599e3cfa5e5.png). ### Conclusion; There doesn't seem to be any large difference in the convergence with or without the fix.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/491#issuecomment-358401929:466,adapt,adaptive,466,https://su2code.github.io,https://github.com/su2code/SU2/pull/491#issuecomment-358401929,2,"['adapt', 'energy']","['adaptive', 'energy']"
Energy Efficiency,"So I tried adding the molecular and turbulent diffusion of turbulent kinetic energy in the total energy equation. It did not appear to fix this issue. At this point though, it's unclear exactly what the problem really is. I don't have ""correct"" pressure, turbulent kinetic energy, or total energy fields for the NACA 0012 or RAE 2822 test cases. By ""correct,"" I mean DNS or experimental data. The lack of ""correct"" data makes it hard to tell where the problems may actually be occurring. Is it coming from total energy? Resolved kinetic energy? Turbulent kinetic energy? All we're doing right now is comparing SST to SA, and one code's SST to another code's SST. That makes it hard to figure out what the correct answer really should be. Unless we have a problem that both 1) exhibits this problem, and 2) has high-quality pressure, temperature, total energy, or turbulent kinetic energy fields, then I agree that manufactured solutions is might be the best way to check ""correctness.""",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/797#issuecomment-571730661:77,energy,energy,77,https://su2code.github.io,https://github.com/su2code/SU2/issues/797#issuecomment-571730661,9,['energy'],['energy']
Energy Efficiency,"So just to be clear: In my opinion, after calling SU2Driver.Run() the iteration count should be increased immediately. Now we postpone it in the python scripts, which means we have to add +1 in monitor to get the correct iteration count.; With the current change, Monitor has the correct (imo) behavior.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1960#issuecomment-1464364540:194,monitor,monitor,194,https://su2code.github.io,https://github.com/su2code/SU2/pull/1960#issuecomment-1464364540,3,"['Monitor', 'monitor']","['Monitor', 'monitor']"
Energy Efficiency,"Sorry for the delayed response,. Yes, for some reason I still receive the same results using the SUPERSONIC_SHOCK option. Thank you for the additional resources on mesh adaptation,; Alex",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/606#issuecomment-443926887:169,adapt,adaptation,169,https://su2code.github.io,https://github.com/su2code/SU2/issues/606#issuecomment-443926887,1,['adapt'],['adaptation']
Energy Efficiency,"Sounds good. I was a little concerned about carrying around unnecessary memory during fluid computations, which will be the case for FSI as well as time spectral and some other applications, but you have a good point about avoiding allocation/deallocation overhead, and since you're reducing the number of times the same variables are re-allocated without any deallocation, it'll be a performance improvement relative to the current code either way. Please replace the 'varname.~Classname' calls with 'delete varname', then I think it should be good to go (pending anyone else weighing in on this). [you probably already know this from previous pull requests, but just in case - you don't have to create a new pull request, just commit into your branch and it will update automatically]",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/200#issuecomment-148124339:338,allocate,allocated,338,https://su2code.github.io,https://github.com/su2code/SU2/pull/200#issuecomment-148124339,1,['allocate'],['allocated']
Energy Efficiency,Supersonic Wedge Mesh Adaptation Issue,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/606:22,Adapt,Adaptation,22,https://su2code.github.io,https://github.com/su2code/SU2/issues/606,1,['Adapt'],['Adaptation']
Energy Efficiency,Temporarily reduce regression test runtime,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/480:12,reduce,reduce,12,https://su2code.github.io,https://github.com/su2code/SU2/pull/480,1,['reduce'],['reduce']
Energy Efficiency,Temporarily remove mass diffusion from surface energy balance,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1400:47,energy,energy,47,https://su2code.github.io,https://github.com/su2code/SU2/pull/1400,1,['energy'],['energy']
Energy Efficiency,"Thank you @TobiKattmann for your feedback. The idea behind this new regression test config file is as follows:; We should have a test case that triggers the negative part of the SA model. Depending on the flow conditions, geometry and CFD parameters it might be triggered or not. With the previous config file, it was not. ; I think there is already a regression test in SU2 that triggers the negative SA, the `turb_oneram6_nk`. However, I decided to stick to rae2822 airfoil as it is a simpler (faster) case. In order to force the negative part of the SA for the rae2822 in a reasonable amount of iterations for a regression test, I increased the angle of attack. I have removed the multigrid as it might not be stable, but I have not tested though. Anyway, with the current configuration, e.g., convective scheme, CFL number, etc, the solution is not stable and diverges after some iterations, around 15. In that sense, I reduced the number of iterations from 20 to 10. In my opinion, a diverging regression test is not a problem at all as it might not be used as a tutorial, only to verify the integrity of the commit. ""The solution should always diverge to the same results"". If the regression test should converge, let me know and I will update the config file :)",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1559#issuecomment-1067926363:924,reduce,reduced,924,https://su2code.github.io,https://github.com/su2code/SU2/pull/1559#issuecomment-1067926363,2,['reduce'],['reduced']
Energy Efficiency,"Thank you Pedro for the lightning reply! ; Yes, I see, unfortunately, I can't cross-check the log right now to see whether the ""STRAIGHT EDGE"" string was triggered, but I'll pay attention to that in the future for sure. . Anyway, I wonder whether the axis treatment is looking for a ""numerical 0"", or does perform some sort of filtering or tolerance on the mesh ( in some ways similar to what some CADs do). In my case, the body was in the order of meters, and the domain was in the order of 100 m.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1373#issuecomment-1464373891:449,meter,meters,449,https://su2code.github.io,https://github.com/su2code/SU2/issues/1373#issuecomment-1464373891,1,['meter'],['meters']
Energy Efficiency,"Thank you both.; @oleburghardt this will only stop the calculations for values used for monitoring, e.g. you would need a cauchy criteria on maxHF.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1105#issuecomment-729148658:88,monitor,monitoring,88,https://su2code.github.io,https://github.com/su2code/SU2/pull/1105#issuecomment-729148658,1,['monitor'],['monitoring']
Energy Efficiency,"Thank you for re-testing Jayant.; The idea with the hard-coded ceiling (floor?) on linear solver tolerance was to handle examples where it is set to very low values which would not allow this mechanism to work properly... Hummm but I can see the case for using the linear solver tolerance to achieve a fixed number of iterations, and then using an ""acceptable reduction"" to drive the CFL. Alright good idea I'll make it a fifth, optional CFL-adapt parameter with default 0.001 and still take the max between it and the tolerance. Out of curiosity did you manage to check what kind of tolerance seems ""optimum"" for adapted meshes?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1036#issuecomment-760782020:442,adapt,adapt,442,https://su2code.github.io,https://github.com/su2code/SU2/pull/1036#issuecomment-760782020,2,['adapt'],"['adapt', 'adapted']"
Energy Efficiency,"Thank you for replying while busy preparing the High Lift Prediction Workshop 5. Sorry, I didn't clearly understand. From what I understand, I can suggest another energy equation calculating method instead of the current SU2 method(reading calculated TKE from inlet boundary condition and using it as an energy equation). Is that right? If not, could you please explain in more detail?. > @sun5k maybe you can try implementing the alternative I suggested of obtaining turbulence kinetic energy at inlets from the turbulence solver instead of assuming that the free stream value is imposed exactly? In the SWBLI case the SST-m versions (without divergence terms in the stress tensor) seem to underpredict the separation region https://su2code.github.io/vandv/swbli/",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1851#issuecomment-1525805374:163,energy,energy,163,https://su2code.github.io,https://github.com/su2code/SU2/issues/1851#issuecomment-1525805374,6,['energy'],['energy']
Energy Efficiency,"Thank you for your comment. No need to create dummy points for periodic BC is really an ingenious design and when I run RANS/URANS cases, I get good results. But there are still some problems for me, the first is convergence when I run big 3D cases and the second is the periodic BC cannot cooperate with hybrid RANS/LES method. So I thought a dummy layer is sometimes necessary just as in Blazek's book(Computational Fluid Dynamics: Principles and Applications, Second Edition, Page 293). ; ![book](https://github.com/su2code/SU2/assets/58663453/cd5a29ba-4f75-40a0-8530-edfd1523d9b7). One dummy layer need to communicate solution, gradients or maybe Laplacian, sensors and so on. It's still complex so I choose two dummy layers to only communicate solution. As in the picture, the original use the send-recieve pair1 as periodic BCs and this feature need four pairs with a restriction that the outermost four layers should be structured grids. Three more repeated mesh sections are indeed added but it is acceptable in terms of robustness and reducing data communication.; ![pairs](https://github.com/su2code/SU2/assets/58663453/1d7c5005-b704-40a6-88dd-518e09082eea). The above diagram can be set with the following settings:; MARKER_PERIODIC= ( y0.48, y0.04, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.44, 0.0, y0, y0.44, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.44, 0.0 ); PERIODIC_DUMMY= YES. This functionality also requires a pre-processing program for the grid to add the appropriate boundary conditions to the .su2 file. I am currently doing this using a fortran code and trying to replicate it using python scripts. But the changes to the c++ code section have been verified with various RANS/URANS/DES cases and a result of NACA0012 swept wings is listed below.; ![0012](https://github.com/su2code/SU2/assets/58663453/552782e9-e5c3-4a0f-b809-af7fdc7aecfc)",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2038#issuecomment-1556503119:662,sensor,sensors,662,https://su2code.github.io,https://github.com/su2code/SU2/pull/2038#issuecomment-1556503119,1,['sensor'],['sensors']
Energy Efficiency,"Thank you, Dr. Economon.; When you say ""Time to merge this one"": Is this an action I should take, or; is it accomplished in the SU2 standard schedule ?. With kind regards,. Jairo. On Fri, Feb 1, 2019 at 1:17 AM Thomas D. Economon <notifications@github.com>; wrote:. > Wonderful! Time to merge this one; >; > —; > You are receiving this because you were mentioned.; > Reply to this email directly, view it on GitHub; > <https://github.com/su2code/SU2/pull/600#issuecomment-459600006>, or mute; > the thread; > <https://github.com/notifications/unsubscribe-auth/Ac180h3pv-PS55cNp0vxoX8AA717kJyDks5vI7_OgaJpZM4X34F2>; > .; >",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/600#issuecomment-459704107:141,schedul,schedule,141,https://su2code.github.io,https://github.com/su2code/SU2/pull/600#issuecomment-459704107,1,['schedul'],['schedule']
Energy Efficiency,"Thank you. I see, so you set separate markers, e.g. MARKER_EULER= ( WingTop, WingBottom ), and where the marker boundaries meet, the mesh points on that interface is unchanged; did I understand that correctly? I guess that while this will reduce the artefacts on the LE/TE it still results in a departure from the design shape at the portions away from the boundary edges. As you mentioned before, there might not be a way to solve this without mapping back to an iges or parametric file. I suppose another approach might be to work the other way around? Perhaps one can limit the max allowable adapted size to match the 'worst case' allowable surface mesh? I just realised that may be a contributing factor to why the points jumpy across the fuselage; `PYADAP_HMAX` may be set excessively large. If I set this limit to less than the average surface mesh cell size, will it attempt to refine everything over the limit instantly? Or will it only use the limit for 'new' cells that are generated during adaptation? Thanks for your thoughts.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/948#issuecomment-764836923:239,reduce,reduce,239,https://su2code.github.io,https://github.com/su2code/SU2/issues/948#issuecomment-764836923,3,"['adapt', 'reduce']","['adaptation', 'adapted', 'reduce']"
Energy Efficiency,"Thank you. It does seem to work for the GRAD_FLOW option; however, it still results in the same incorrect results as before for the SUPERSONIC_SHOCK option. Also, when I add ""-c 2"" as a command line argument to mesh_adaptation.py to speed up the process of running multiple adaptation cycles, the simulation will only do a single one then exit.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/606#issuecomment-437553068:274,adapt,adaptation,274,https://su2code.github.io,https://github.com/su2code/SU2/issues/606#issuecomment-437553068,1,['adapt'],['adaptation']
Energy Efficiency,"Thank you.; In the original paper of Menter (Ten Years of Industrial Experience with the SST; Turbulence Model) about the SST2003), it is written that the power of epsilon should be minus 10. I think it is a coincidence.; You are right; changing the production constant limiter may be problematic. It is better to distinguish between these two constants.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2329#issuecomment-2284482267:155,power,power,155,https://su2code.github.io,https://github.com/su2code/SU2/pull/2329#issuecomment-2284482267,1,['power'],['power']
Energy Efficiency,Thanks @ScottImlay. Seems to work now. Just a quick question. You only adapted the volume mesh/solution routines. Is it also possible to use the new format for the surface files (i.e. in the routines SetTecplotBinary_SurfaceMesh/SetTecplotBinary_SurfaceSolution) ?,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/558#issuecomment-425020607:71,adapt,adapted,71,https://su2code.github.io,https://github.com/su2code/SU2/pull/558#issuecomment-425020607,1,['adapt'],['adapted']
Energy Efficiency,"Thanks @TobiKattmann, nice catch! Can you please put a pull request with the required changes? That way I can also do some tests myself and we can move the discussion there. @economon As far as I know, there is no multizone-multiinstance case running as of now. I think @arubino worked on multizone harmonic-balance, but I don't think it has yet been adapted to the new instance index. Am I right?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/568#issuecomment-416935622:351,adapt,adapted,351,https://su2code.github.io,https://github.com/su2code/SU2/issues/568#issuecomment-416935622,1,['adapt'],['adapted']
Energy Efficiency,"Thanks @salvovitale and @talbring. As you know, the main consequence of a better linear solver is that it is possible to increase the CFL number (independently of the spatial discretization). In other words... the benefits are for JST and Roe. By the way, I have found that a fill-in level of 1 is too expensive for 3D problems (great for 2D)... I have reduced the default value from 1 to 0... but feel free to increase the number if you are looking for very large CFL numbers. I think that regression tests are taking too much time and they don't finish on the assigned time... hopefully the change from 1 to 0 fill-in level will resolve the problem, otherwise I'll reduce the time on some of the tests.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/448#issuecomment-334358362:353,reduce,reduced,353,https://su2code.github.io,https://github.com/su2code/SU2/pull/448#issuecomment-334358362,2,['reduce'],"['reduce', 'reduced']"
Energy Efficiency,"Thanks Brian,; my bad, I misinterpreted the carpets / logs structure. I successfully ran a test of a very simple case. In the results there are some small artifacts, but the shocks are resolution improved consistently after mesh adaption.; Thanks for the support. ![Comparison](https://user-images.githubusercontent.com/41752169/80644172-84a7a580-8a69-11ea-9f16-58e98c808b73.png); ![ComparisonMesh](https://user-images.githubusercontent.com/41752169/80644174-85403c00-8a69-11ea-819f-2ac00550a089.png)",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/948#issuecomment-621450497:229,adapt,adaption,229,https://su2code.github.io,https://github.com/su2code/SU2/issues/948#issuecomment-621450497,2,['adapt'],['adaption']
Energy Efficiency,"Thanks Heather,. Could you please take a look at the log_Adjoint.out file generated in the folder DESIGNS/DSN_001/ADJOINT_DRAG/ when you run the single objective-with-multiple-surfaces regression test (in the part whereSU2 specifies the Surface(s) where the force coefficients are evaluated). It seems that the shape optimization python script only copied the first surface to config_CFD.cfg. I found the ""if (n_obj>1):” solution… but, you know better the multi objective implementation. Just let me know if there is another more elegant fix that we can implement. Thanks!; Francisco. > On Mar 25, 2018, at 1:55 PM, Heather Kline <notifications@github.com> wrote:; > ; > @hlkline commented on this pull request.; > ; > In SU2_PY/SU2/eval/design.py <https://github.com/su2code/SU2/pull/519#discussion_r176953697>:; > ; > > @@ -364,7 +364,7 @@ def obj_df(dvs,config,state=None):; > # For multiple objectives are evaluated one-by-one rather than combined; > # MARKER_MONITORING should be updated to only include the marker for i_obj; > # For single objectives, multiple markers can be used ; > - config['MARKER_MONITORING'] = marker_monitored[i_obj]; > + if (n_obj>1): config['MARKER_MONITORING'] = marker_monitored[i_obj]; > I think that the array of monitored markers is extended to accommodate this situation in config.py (~line 514), and there is a single objective-with-multiple-surfaces regression test; do you have a case you can send me where this wasn't working? Or if you see an issue with that test that I previously missed I wouldn't mind looking into it.; > ; > —; > You are receiving this because you authored the thread.; > Reply to this email directly, view it on GitHub <https://github.com/su2code/SU2/pull/519#pullrequestreview-106743204>, or mute the thread <https://github.com/notifications/unsubscribe-auth/AccuRva3VNHDjv7H11VnmorjY5pCNlpkks5tiARDgaJpZM4S4O1W>.; >",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/519#issuecomment-376016690:1249,monitor,monitored,1249,https://su2code.github.io,https://github.com/su2code/SU2/pull/519#issuecomment-376016690,1,['monitor'],['monitored']
Energy Efficiency,"Thanks Max that sounds very promising indeed. To everyone else, a quick update on the issue of performance vs. MKL.; I played a bit with @vdweide 's case and it does not seem trivial to get those 10% of performance back, at least not without a lot of restructuring.; I did however measure the performance of native gemm in Eigen to be ""only"" 2.5 times worse than MKL, after some emails we determined that this was because with the Intel compiler Eigen was not using AVX instructions but with g++ those instructions could be enabled by setting the -march flag appropriately. So far the conclusions are:; - Get 0% to 10% performance loss if you are using MKL (one could always bypass Eigen and call mkl directly).; - Write clean code compatible with AD and that will perform better than most easy implementations.; - Eventually get better performance of the discrete adjoint via the more efficient differentiation of operations with matrix-like objects.; - Have an extra dependency that does not need to be compiled.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/643#issuecomment-463591821:886,efficient,efficient,886,https://su2code.github.io,https://github.com/su2code/SU2/issues/643#issuecomment-463591821,1,['efficient'],['efficient']
Energy Efficiency,"Thanks Tim!; Tom, I have not found any easy (and repeatable) way to reduce the BOOST header files further. Unless it is a major problem, I suggest we go with them as they are.; Thanks!Scott Imlay; On Monday, August 13, 2018, 1:56:19 PM PDT, Tim Albring <notifications@github.com> wrote: ; ; ; Like @economon already said, this is a interesting and useful contribution! Thanks!. I don't know why travis is not reporting. I am gonna look into it tmrw. —; You are receiving this because you were mentioned.; Reply to this email directly, view it on GitHub, or mute the thread.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/558#issuecomment-412665869:68,reduce,reduce,68,https://su2code.github.io,https://github.com/su2code/SU2/pull/558#issuecomment-412665869,1,['reduce'],['reduce']
Energy Efficiency,"Thanks Tom, actually most of the work was already done in September, lately I've been busy with other stuff and that's why it took so long before this pull request. Regarding the upcoming release of the sliding meshes, before the AIAA, we can surely think about including this one too. ; It still has some limitations, for instance it doesn't work with periodic boundaries, though Antonio and I are working on it in separate branches, but I've tested it for a bunch of different flow configurations and it seems to be quite robust.; Basically, after this pull request the code will be able to carry out computations using an arbitrary number of zones, both Euler/RANS, serial/parallel, using the nearest neighbour approach and the one from Rinaldi. By the way, it doesn't really matter to me if this feature is included in the upcoming release or in the one later, I just would like to have this on the develop so that I don't have to merge and fix conflicts any time the branch gets updated.; So some of the modification I made will be stable and I can move to the next step (the adaptive sliding meshes).",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/389#issuecomment-301007972:1081,adapt,adaptive,1081,https://su2code.github.io,https://github.com/su2code/SU2/pull/389#issuecomment-301007972,1,['adapt'],['adaptive']
Energy Efficiency,"Thanks Tom. And, as mentioned before, let’s have a bit of a discussion as to which wall functions formulations would make most sense to implement. I am pretty sure that we can create a generic implementation that can then be used for standard wall functions, but also for adaptive wall functions (see Medic, G., Kalitzin, G., et al., “Adaptive Wall Functions with Applications”, 2006), and even compressible/incompressible formulations. The adaptive wall function trick is quite useful as it makes the wall function implementation more robust to the varying y+ of the first cell of the surface of the geometry and lessens the burden during the grid generation stage. Formulations for S-A and k-w/SST are available. If anyone else is interested in participating, please let us know. Best,. Juan. On Jun 8, 2017, at 5:11 PM, Thomas D. Economon <notifications@github.com<mailto:notifications@github.com>> wrote:. Hi all,. Yes, it would be wonderful to get this feature completed. I had started this a couple of years ago, but never quite got around to finishing (too many fun things to work on!). I was following this paper, which should be a straightforward implementation for us, as FUN3D has a very similar structure:. Jan-Renee Carlson, Veer Vatsa, and Jeffery A. White. ""Node-Centered Wall Function Models for the Unstructured FLow Code Fun3D"", 22nd AIAA Computational Fluid Dynamics Conference, AIAA AVIATION Forum, AIAA 2015-2758, https://doi.org/10.2514/6.2015-2758. The key changes can be found in the following locations:. * CNSSolver::Compute_Wall_Functions_Mean() routine in solver_direct_mean.cpp - computes and stores an updated wall shear stress based on the chosen wall model; * CTurbSASolver::Compute_Wall_Functions() routine in solver_direct_turbulent.cpp - computes the eddy visc/nu tilde needed near the wall based on the model; * CNumerics::GetViscousProjFlux() in numerics_structure.cpp - computes the viscous flux between two nodes and will make an adjustment near the wall when th",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/399#issuecomment-307262047:272,adapt,adaptive,272,https://su2code.github.io,https://github.com/su2code/SU2/issues/399#issuecomment-307262047,3,"['Adapt', 'adapt']","['Adaptive', 'adaptive']"
Energy Efficiency,"Thanks Tom; I agree that we should make things easy to understand. ; My thinking was that most users will want to know what parts of the mesh they are moving, but don't necessarily need to know what's happening underneath - if they specify the entire mesh the code just reverts to the more efficient method. But (from the users perspective) it may be just as easy to have a separate specification for scaling the entire mesh. . In terms of moving it to SU2_MSH; I think it may make sense to include scale/rotate/translate in SU2_MSH, but I think it would be confusing to have two options that do the same thing. I would side with separate option names (this would also eliminate a loop over markers in this pull request). On this topic, I have sometimes found MARKER_DESIGNING and DV_MARKER to be confusing; on their own they sound very similar, in the description MARKER_DESIGNING is where the objective function is evaluated - but in the code, it's not clear what MARKER_DESIGNING does - the surfaces specified by MARKER_MONITORING are what are actually used to evaluate the objective function value. . There may be other similar areas where config file options could be clarified or compressed.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/187#issuecomment-132181536:290,efficient,efficient,290,https://su2code.github.io,https://github.com/su2code/SU2/pull/187#issuecomment-132181536,2,['efficient'],['efficient']
Energy Efficiency,"Thanks a lot for the comments, Heather. As you said, it seems that the deconstructers LinsysSol.~CSysVector() and StiffMatrix.~CSysMatrix() weren't doing their job. I believe that the problem was not only with the two vectors LinsysSol and LinSysRes, which as you say may be constructed using a 'new' statement. In the case of the StiffMatrix, there is a major difference between calling the constructor of CSysMatrix by using 'new', and calling the StiffMatrix.Initialize() method, for what I see in matrix_structure.cpp. Also, StiffMatrix is a sparse matrix (nDim x nPoint) x (nDim x nPoint), which must be allocated correctly using the Initialize method to avoid carrying around lots of zeros. With regards to the other point, I think that it is interesting to use the Initialize features of the CSysVector and CSysMatrix in the constructor of the class, just as it happens in the rest of the solver classes (see for example solver_direct_mean, line 261, where the Jacobian of the problem is initialized using a Jacobian.Initialize() call in the constructor). As far as I see it, the mesh update problem is nothing but a copy of the linear elasticity problem, so maintaining the parallelism with all the other solvers in the code (and, in particular, with the structural solver) may be interesting. . Moreover, by allocating the memory in the constructor using StiffMatrix.Initialize(nPoint, nPointDomain...) we make sure we can use the linear solvers in parallel by building a compliant sparse matrix. And if we allocate the stiffness matrix in the constructor, it makes sense to also do so with the vectors of the problem. Again, this maintains the similarities with the rest of the solvers. Finally, in my particular case I call the SetVolume_Deformation() function at least as many times as I do with the fluid and the structural solver. The mesh deformation is a third field in the problem, and by initializing the structure at the beginning of the simulation we can reuse the same spaces in m",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/200#issuecomment-148017482:609,allocate,allocated,609,https://su2code.github.io,https://github.com/su2code/SU2/pull/200#issuecomment-148017482,1,['allocate'],['allocated']
Energy Efficiency,"Thanks for all of the activity here y'all. I am in favor of us fixing 1 & 2 in @arubino's note above so that we are fixing all of the immediate issues. I am going to start taking a look. In a new PR, we should add some checks to Travis CI that check for the existence of output files or diff output files against versions that we store. We already have a mechanism for doing those diffs, so all we need is someone to lead the charge. Any volunteers to work on that?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/344#issuecomment-267427951:426,charge,charge,426,https://su2code.github.io,https://github.com/su2code/SU2/pull/344#issuecomment-267427951,1,['charge'],['charge']
Energy Efficiency,"Thanks for digging around on this @clarkpede. I don't expect the original author will be able to chime in, but I would say we can investigate the differences w.r.t. how the tke is included. . I have tested removing it from the total energy definition for some low speed cases while I was debugging, and it had almost no impact. As stated above, we know that including in the mean flow stress tensor does noticeably impact the solution. I have not tried including it in the energy equation. I will reopen this issue, and we can continue the discussion here.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/797#issuecomment-548890892:233,energy,energy,233,https://su2code.github.io,https://github.com/su2code/SU2/issues/797#issuecomment-548890892,2,['energy'],['energy']
Energy Efficiency,"Thanks for reporting this, @emoralest6. My first suggestion is that we go through the mean flow solver and double-check our inclusion of the -2/3*rho*k term from the stress tensor (and TKE correction for energy) to make sure we do not have a bug there (see https://turbmodels.larc.nasa.gov/sst.html). This is one of the primary differences between the SA and SST implementations and would affect pressure. Could be a good place to start.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/797#issuecomment-539577259:204,energy,energy,204,https://su2code.github.io,https://github.com/su2code/SU2/issues/797#issuecomment-539577259,1,['energy'],['energy']
Energy Efficiency,Thanks for testing. Both gradient methods use all the neighboring points. Green Gauss has special treatment for boundary surfaces and it must be particularly less accurate than least squares at these points.; With that said the way we handle intersecting boundaries is very important. For this case https://su2code.github.io/vandv/swbli/ I had to add an Euler wall after the inlet to prevent the kind of issues you are seeing.; My concern is that making things locally first order is just masking the problem with numerical dissipation.,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/2285#issuecomment-2127331419:74,Green,Green,74,https://su2code.github.io,https://github.com/su2code/SU2/issues/2285#issuecomment-2127331419,1,['Green'],['Green']
Energy Efficiency,"Thanks for the clarification clarkpede. One of the things I had tried when I first ran into that warning after looking at the code was to create a coarse grid with fewer than 1000 elements (just in case the sensor value was extremely large for a single element for some reason, then it should’ve at least marked that one for adaptation). However, it still output the same results and warning message. I’m not exactly sure how the adaptation index is calculated for the SUPERSONIC_SHOCK or GRAD_FLOW, but is it possible that these values could be negative, causing the sensor value to always be below the threshold value?. I haven’t been able to find any examples using the mesh adaptation, so I may be missing an additional parameter from the configuration file. Thanks for any additional help,; Alex",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/606#issuecomment-435625964:207,sensor,sensor,207,https://su2code.github.io,https://github.com/su2code/SU2/issues/606#issuecomment-435625964,5,"['adapt', 'sensor']","['adaptation', 'sensor']"
Energy Efficiency,"Thanks for the comments, Tom! I understand it's a big change, so I would welcome some more feedback! . I am working in other ways to improve the generalization/sustainability of the code, so any comments would also be considered for that stage :D",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/528#issuecomment-388799884:160,sustainab,sustainability,160,https://su2code.github.io,https://github.com/su2code/SU2/pull/528#issuecomment-388799884,2,['sustainab'],['sustainability']
Energy Efficiency,"Thanks for the explanation @suargi . I would personally advocate for that the testcases should converge to some reasonable solution people might use it as a starting point (copy the cfg and doing mild adaptions) for their own stuff. And the Testcases show off the capabilities to some degree, to do so, convergence is beneficial. But as we have a bunch of working 2D airfoils in regression already I recon that adding a clear explanation and warning to the cfg as suggested by Pedro is fine. Otherwise you might try to bisect the AoA ... maybe there is a value that triggers negative SA and does not diverge :thinking: . Knowingly adding a diverging test without a clear warning is not good imo :)",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1559#issuecomment-1067977083:201,adapt,adaptions,201,https://su2code.github.io,https://github.com/su2code/SU2/pull/1559#issuecomment-1067977083,2,['adapt'],['adaptions']
Energy Efficiency,"Thanks for the feedback @pcarruscag. @jayantmukho and I discussed this when we implemented the objective function. The main motivation was that since our implementation of the separation sensor is computed using the skin friction coefficient, we only defined the variables Buffet_Sensor, Buffet_Metric, etc. for the NSSolver class. Since the NSSolver needs to be able to evaluate all the same objectives as the EulerSolver, but the buffet objective is exclusive to the NSSolver, I copy pasted the function and added the new objective. Let me know if you have any suggestions for a cleaner implementation. We were basically choosing between defining all the Buffet_* variables in EulerSolver which would just add unnecessary variables to the constantly growing list of variables, or copying EvaluateObj_Func to allow for NS-specific objectives.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/614#issuecomment-441300657:187,sensor,sensor,187,https://su2code.github.io,https://github.com/su2code/SU2/pull/614#issuecomment-441300657,2,['sensor'],['sensor']
Energy Efficiency,"Thanks for the hint, just uploaded a screenshot of the mesh adaption!; Now I'm trying to run a simple 3D case, but unfortunately the amg.out fails during the first try (in the adap/ini folder):; ```; ## 16739 TRIANGLE(S) DISCARDED ; fefloa_Python2Mesh : 3d mesh on input ; fefloa_Python2Mesh : msh->NbrVer 14368 ; fefloa_Python2Mesh : msh->NbrTet 58189 ; fefloa_Python2Mesh : leaving with 14368 ver. 16740 tri. 0 edg. ; -- Maximal memory ; Maximum number of Points 53800000 ; Maximun number of Bnd Points 10760000; Maximum number of Triangles 21520000 ; Maximum number of Tetrahedra 295900000 ; Allocated Memory 50.105 Gb ; Physical Memory 62.729 Gb; bounding box x: -100 200 y: -150 150 z: -150 150 ; ## WARNING: REMOVING DUPLICATED FACE 12357 12359 12358 ; ## WARNING: REMOVING DUPLICATED FACE 12357 12359 12358 ; ## WARNING: REMOVING DUPLICATED FACE 12357 12359 12358 ; ## WARNING: REMOVING DUPLICATED FACE 12357 12359 12358 ; ## WARNING: REMOVING DUPLICATED FACE 12357 12359 12358 ; ## WARNING: REMOVING DUPLICATED FACE 12357 12359 12358 ; ## WARNING: REMOVING DUPLICATED FACE 12357 12359 12358 ; ## WARNING: REMOVING DUPLICATED FACE 12357 12359 12358 ; ## WARNING: REMOVING DUPLICATED FACE 12357 12359 12358 ; ## WARNING: REMOVING DUPLICATED FACE 12357 12359 12358 ; ## WARNING: REMOVING DUPLICATED FACE 12357 12359 12358 ; ## WARNING: REMOVING DUPLICATED FACE 12357 12359 12358 ; ## WARNING: REMOVING DUPLICATED FACE 12357 12359 12358 ; ## WARNING: REMOVING DUPLICATED FACE 12357 12359 12358 ; ## WARNING: REMOVING DUPLICATED FACE 12357 12359 12358 ; 14368 Vertex ; 3 Boundary Vertices ; 58189 Tetrahedra ; 1 Triangles ; 0 Edges ; 1 Surface(s) ; % Output subdom.meshb Mesh ndimn=3, mpoin=14368, melem=58189, mface=1; Corners 0 Required 0 ; ## ERROR : TETRAHEDRON 2 BOUNDARY FACE 1 2; 9 IS MISSING ; ## ERROR : TETRAHEDRON 4 BOUNDARY FACE 3 7; 2324 IS MISSING ; ···; ## ERROR: FEFLO.A: 16740 BOUNDARY FACES ARE MISSING ; CHECK YOUR MESH . ## FATAL ERROR: FEFLOA: INITIAL OR CURRENT MESH HAS AN IN",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/948#issuecomment-623572280:60,adapt,adaption,60,https://su2code.github.io,https://github.com/su2code/SU2/issues/948#issuecomment-623572280,3,"['Allocate', 'adapt']","['Allocated', 'adaption']"
Energy Efficiency,"Thanks for the reply, I'll use feature_adap. Also very appreciated the required and optional command list.; As far as the run is concerned, it exits during the first mesh adaption (no error on the console though). The amg.out is quite long and there are a lot of info. Let me briefly summarize the case I'm testing:; - Supersonic inviscid 2D axialsymmetric cylinder.; - mesh adaption Mach based.; - no shape optimization.; - mesh adaption (PYADAP_FLOW_ITER= (2999, 4999, 6999)); - coarse mesh (PYADAP_COMPLEXITY= (20000, 60000, 120000)); - ITER = 10000. I would expect then the solver to start, reach iteration number 2999, adapt the flow mesh, then run until 4999, adapt, 6999 adapt, reach 10000 iterations.; In the :; `adapt/ini/log.out` ; as far as I can tell it reaches 10000 iterations, which is quite unexpected, maybe my problem arise due to mismatching options in the *.cfg file, is there any applicable *.cfg file to start from?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/948#issuecomment-619502763:171,adapt,adaption,171,https://su2code.github.io,https://github.com/su2code/SU2/issues/948#issuecomment-619502763,7,['adapt'],"['adapt', 'adaption']"
Energy Efficiency,"Thanks for your comments! Except for mixing plane and frozen rotor, sliding plane is also pretty common in turbomachinery simulation, it is indeed implemented in some, if not all, in-house codes. ; MRF is quite useful in turbomachinery simulation, expecially when we deal with transient simulation. Actually it is really rare to move the rotor mesh like in reality. One reason is that MRF is more efficient and accurate. Otherwise, you introduce new disturbance into the transient flow field every physical time step, which is not good. Because when you rotate the mesh, the velocity direction of each grid point inherited from last time step is not rotated. To make it more clear, you will have a flow going towards casing instead of parallel to, at the start of next physical time step. So you need more pseudo time steps to get a proper velocity variable. As a result, you get a zig-zag shape in the residual history.; I'm not actually moving the interface. The rotor mesh is not rotated, so as the interface at rotor zone. I'm just virtually rotating the rotor interface to find the new matching points between rotor and stator for each physical time step, so that the variable could be passed across the interface. In other words, only the passing variables are actually rotated. If I understand it correctly, there is no additional moving mesh restriction introduced here.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2173#issuecomment-1953783506:397,efficient,efficient,397,https://su2code.github.io,https://github.com/su2code/SU2/pull/2173#issuecomment-1953783506,2,['efficient'],['efficient']
Energy Efficiency,"Thanks for your comments. For a 27 million case ran on 72 cores, the backup time without modification was 1828 seconds (approx 30 minutes). After this fix, the backup time reduced to 366 seconds (approx 6 minutes). The file size was around 4.3 GB. In my opinion, occasional ""endl"" is not required, since the file is closed after the writes. A file close will any way force all the writes to be flushed. . Please give your thoughts on this.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/281#issuecomment-223494129:172,reduce,reduced,172,https://su2code.github.io,https://github.com/su2code/SU2/pull/281#issuecomment-223494129,1,['reduce'],['reduced']
Energy Efficiency,"Thanks for your feedback! I agree, `OMP_NUM_THREADS` is better than having the number of threads in the constructor. I adapted `disc_adj_flow` and `disc_adj_fea` for MPI and added both to parallel AD and hybrid AD tests.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1966#issuecomment-1472198978:119,adapt,adapted,119,https://su2code.github.io,https://github.com/su2code/SU2/pull/1966#issuecomment-1472198978,2,['adapt'],['adapted']
Energy Efficiency,"Thanks, @clarkpede, for this PR and for the clear explanation of the features proposed. LGTM in terms of implementation and code style. I'll just wait for @EduardoMolina to comment on the contents. I only have a couple of minor questions:. > I moved the calculation of the maximum cell width to the CPhysicalGeometry class. This makes inclusion in the central/upwind blending easier. For DES and DDES, the cell lengthscale is not dependent on the flow. So there's no need to compute it every iteration in the flow solver. I can see this approach reduces the computational cost of computing the MaxLength every time at the cost of having one more double in memory per point. However, would a call to SetMaxLength() be necessary in case of deformable meshes? . Also, from PR #532:; > As for code verification, I would propose using one of the cases examined by Travin, Stretlets, Mockett, or Xiao for comparison. (...) The cases I can see where they explicitly show the results of the blending function are: Circular cylinder at Re = 50,000 (Travin et al. 2002) (...). I guess this is the case for which you are showing the rough tests results in the Code Verification section. I am currently looking into some test cases at similar Re regimes. Are you using the unsteady compressible solver for this verification? I noticed that in Ref.[1] they use artificial compressibility, and I was wondering if we could also use this test case to look into the unsteady, incompressible (preconditioned) version of the solver (PR #514).",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/552#issuecomment-403842613:546,reduce,reduces,546,https://su2code.github.io,https://github.com/su2code/SU2/pull/552#issuecomment-403842613,2,['reduce'],['reduces']
Energy Efficiency,"Thanks, Edwin. I had originally toyed around with this too, but I thought using the system-specific versions would be most portable at first. However, for something this simple, I agree that we should just do it ourselves. I have reused your implementation with some minor modifications. Could you please just confirm that the code posted above is yours, you are ok with me adapting it, and that I can name you as an author at the top of the file (I have added you there)?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/562#issuecomment-414092502:374,adapt,adapting,374,https://su2code.github.io,https://github.com/su2code/SU2/pull/562#issuecomment-414092502,2,['adapt'],['adapting']
Energy Efficiency,"Thanks, that was very helpful. . I have another question related to this., Would you suggest keeping all the control points as design variables or should the number of design variables be very selective to ensure that correct optimization direction is achieved? I have 216 control points on my FFD box, I can reduce them if I put in some extra effort in indexing them. Is it worth it?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/984#issuecomment-628725910:309,reduce,reduce,309,https://su2code.github.io,https://github.com/su2code/SU2/issues/984#issuecomment-628725910,1,['reduce'],['reduce']
Energy Efficiency,"That is what imagine as well, i.e. very anxious waiting, some cpu might see that as a ""power virus"" and eventually slow down.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1241#issuecomment-804783119:87,power,power,87,https://su2code.github.io,https://github.com/su2code/SU2/issues/1241#issuecomment-804783119,1,['power'],['power']
Energy Efficiency,"That's great! At least it gives us some margin to solve this issue. I agree that we should try to reduce the time of the tests. I think that @talbring approach a few months ago of reducing the number of iterations was the correct one; the tests don't need to be physically meaningful, but rather technically representative of the features. The compile time is also something that we should look into - we might need to have a telecom on this.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/524#issuecomment-382299662:98,reduce,reduce,98,https://su2code.github.io,https://github.com/su2code/SU2/issues/524#issuecomment-382299662,1,['reduce'],['reduce']
Energy Efficiency,The COption classes should delete what they allocate,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1579:44,allocate,allocate,44,https://su2code.github.io,https://github.com/su2code/SU2/pull/1579,1,['allocate'],['allocate']
Energy Efficiency,"The added lines are a combination of the explicit Euler in CHeatSolver and the implicit Euler in CScalarSolver. Do you consider this approach to be correct?. For the testcase `SU2/TestCases/rans/naca0012/turb_NACA0012_sst.cfg`, explicit Euler for both flow and turbulence equations and CFL=0.1 converges from the restart solution. Some more details:; - `CHeatSolver` does something with `CVariable::Res_TruncError`, which is related to multigrid. Maybe additional adaptations are necessary here.; - `PrepareExplicitIteration` was copied from `PrepareImplicitIteration`, except for the computation of the matrix of the linear system. We can remove duplicate code here.; - `CompleteImplicitIteration` could be renamed as ""add `LinSysSol` to solution""; .",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1435#issuecomment-966491089:464,adapt,adaptations,464,https://su2code.github.io,https://github.com/su2code/SU2/pull/1435#issuecomment-966491089,1,['adapt'],['adaptations']
Energy Efficiency,"The changes to SU2 are mostly minor. There are some adaptions regarding external functions, due to interface changes from CoDiPack 1 to CoDiPack 2. The `callPrimalFuncWithADType` is necessary for correct output handling. Passing the external function to it is the intended usage, therefore the encapsulation of the respective code block in a lambda expression. `callPrimalFuncWithADType` also takes care of the tape activity, which was previously spelled out in SU2.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1903#issuecomment-1451814899:52,adapt,adaptions,52,https://su2code.github.io,https://github.com/su2code/SU2/pull/1903#issuecomment-1451814899,1,['adapt'],['adaptions']
Energy Efficiency,"The corners warning is fine. I added the ability to specify corner points for sharp features that the user wants to maintain. For example, in an airfoil test case I want to make sure the sharp trailing edge at node 512 is maintained, so I can manually add; ```; NCORNERS= 1; 1 512; ```; to the end of my mesh. It's not necessary, though, and AMG performs ridge detection to identify any features anyway. I assume since it built and (kinda) ran that you managed to fix your python setup through your aliases?. What was the specific error that you got? I probably should have also mentioned that I've changed a lot of options since updating from Vic's old code. Here are the list of required options (values from my test case):; ```; % Type of sensor used for adaptation; % Options include GOAL (adjoint-based), MACH, PRES; PYADAP_SENSOR= GOAL; % Objective function used for goal-oriented adaptation; OBJECTIVE_FUNCTION= LIFT; % Maximum cell size for adaptation; PYADAP_HMAX= 500.0; % Minimum cell size for adaptation; PYADAP_HMIN= 1e-9; % Gradation factor (typically 1.2-1.8); PYADAP_HGRAD= 1.8; % Norm used for adaptation; % 1.0 or 2.0 recommended for inviscid flows; % 4.0 recommeneded for viscid; ADAP_NORM= 4.0; % Approximate mesh size (NPOI) at each level; PYADAP_COMPLEXITY= (30000, 60000, 120000); % Number of adaptations performed at each level; PYADAP_SUBITE= (3, 3, 3); ```; Some optional options:; ```; % Numerical method for Hessian reconstruction in goal-oriented adaptation; % Currently only Green-Gauss; NUM_METHOD_HESS= GREEN_GAUSS; % Value for ITER for the flow solver at each level; PYADAP_FLOW_ITER= (2999, 4999, 6999); % Value for ITER for the adjoint solver at each level; PYADAP_ADJ_ITER= (2999, 4999, 6999); % Value for CFL_NUMBER for the adjoint solver at each level; PYADAP_CFL= (10.0, 15.0, 20.0); % Background mesh containing fine surface representation; % Can be either a .su2 or .meshb (GMF) file; % If not specified, the baseline mesh is used; PYADAP_BACK= rae2822_euler_4",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/948#issuecomment-619412341:742,sensor,sensor,742,https://su2code.github.io,https://github.com/su2code/SU2/issues/948#issuecomment-619412341,4,"['adapt', 'sensor']","['adaptation', 'sensor']"
Energy Efficiency,"The current SU2 implementation checks if the array of variables contains the velocity and gives the index to the gradient calculator. You can give the gradient calculator the starting index and ending index as well.. So suppose you have an array of M variables, you could split it into 2 arrays, each containing a velocity vector, so array [0,..,N] and array [N+1,..,M], and you call greengauss twice.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/2285#issuecomment-2130316902:384,green,greengauss,384,https://su2code.github.io,https://github.com/su2code/SU2/issues/2285#issuecomment-2130316902,1,['green'],['greengauss']
Energy Efficiency,"The equations previously did not match the paper by Travin et al, and; are corrected in this commit. ## Proposed Changes; The hybrid upwind/central blending introduced for DES has the option to use the blending by Travin _et al._ (2002). It's referred to as the ""NTS adaptive"" blending or the ""NTS"" blending for short, and was labeled as a ""low dissipation function"". But the what's implemented in the code doesn't match the paper, and it doesn't even make sense. You can compare the code to the paper by Travin _et al.__ at: https://doi.org/10.1007/0-306-48383-1_16 or the related AIAA presentation at: https://arc.aiaa.org/doi/pdf/10.2514/6.2001-879. There's multiple issues that I believe are present:. + There's an extra square root in the calculation of `Baux`, which leads `Baux` to have units of 1/time. That throws off the nondimensionalization of the blending constant.; + The square root in the calculation of `Lturb` is in the wrong place. Travin only takes the square root of the denominator.; + Travin _et al._ took the variables `Lturb` and `g` and used them to build a new variable, `A`, that was used to set the blending parameter. In the code, `LTurb` is simply multiplied by `Gaux`. This doesn't match the paper, and it's not going to scale correctly either. `Lturb` should have units of length, and multiplying a length by a nondimensional parameter does not give you a nondimensional parameter.; + The variable `Omega` isn't consistent with `StrainMag`. `StrainMag` has a factor of sqrt(2) built in, but `Omega` doesn't. The original paper actually doesn't specify if the factor of sqrt(2) should be included, but the code should at least be consistent.; + The value of the variable `ch3` is 2 in the code, but 0.5 in the paper. I've corrected these mistakes, but I wanted to get feedback on the results. This section of code was not covered by any existing regression tests, and the validation cases in the [SU2-DDES paper](http://dx.doi.org/10.2514/6.2017-4284) don't use the NTS",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/532:267,adapt,adaptive,267,https://su2code.github.io,https://github.com/su2code/SU2/pull/532,1,['adapt'],['adaptive']
Energy Efficiency,"The forces_breakdown file gives you the \*cough\* breakdown per surface, the monitored value is just an indication of convergence.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/788#issuecomment-528745746:77,monitor,monitored,77,https://su2code.github.io,https://github.com/su2code/SU2/issues/788#issuecomment-528745746,1,['monitor'],['monitored']
Energy Efficiency,"The function call with the invalid write seems to be before any of the periodic preprocessing, unless I missed something. Are you using an exchange location/donor nodes similar to what Eduardo talked about in his SU2 conference talk (like using info from the third off-wall node)? If not, ignore the following. I saw a similar issue when I used a similar exchange location implementation for SST wall functions. The problem I saw is that sometimes there's one-way communication between the processor with the exchange location and the processor where the wall function/model is being computed. This doesn't work well with how send-receive boundaries are allocated, because literally everywhere in the code assumes nMarkerSend==nMarkerRecv. . I fixed this on one of my branches for both flow and adjoint, so I can try to port it to develop if you think this might be the issue.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1099#issuecomment-719056946:654,allocate,allocated,654,https://su2code.github.io,https://github.com/su2code/SU2/issues/1099#issuecomment-719056946,1,['allocate'],['allocated']
Energy Efficiency,"The inlet interpolation capability that I introduced #815 is working as expected with one or few cores. For a case that I have, if I go beyond 5 cores (mpirun -n 6) the output Interpolated File has a lesser number of lines printed. There should be 5517 lines but going beyond 5 reduces them to ~3000 lines (Each line representing a node at the inlet). My best guess is that the interpolation is happening correctly but during the cout for the interpolated file, something goes wrong. I tried rank==MASTER_NODE before calling the PrintInletInterpolatedData() but that didn't resolve the issue. Is this only a cout issue? How can this be resolved?. Thanks in advance.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/944:278,reduce,reduces,278,https://su2code.github.io,https://github.com/su2code/SU2/issues/944,1,['reduce'],['reduces']
Energy Efficiency,"The intention was to allow CSysVector to be used like in a local way without mpi, because now it provides nice math syntax, (a+b-2*(c-a)) in an efficient way... But of course hell is full of good intentions and I guess if you have a disjoint domain, for example two things that do not touch, it is possible for that condition to evaluate differently on different ranks.; I'll remove it, thanks for the PI work.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1241#issuecomment-804258186:144,efficient,efficient,144,https://su2code.github.io,https://github.com/su2code/SU2/issues/1241#issuecomment-804258186,1,['efficient'],['efficient']
Energy Efficiency,"The jones_turbocharger_restart case was set to use adaptive CFL coupled with CFL turbulence Reduction thus changes in the results are expected , I ran the case a few thousand steps and the case seems to converge. Therefore I am allowing myself to change test results leaving the configuration setting as is.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2295#issuecomment-2185970973:51,adapt,adaptive,51,https://su2code.github.io,https://github.com/su2code/SU2/pull/2295#issuecomment-2185970973,1,['adapt'],['adaptive']
Energy Efficiency,"The native mesh adaption was deprecated. The amg interface is in development, you can re-open some of the issues where it is mentioned to ask new questions (that way all ""documentation"" stays in one place).",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1143#issuecomment-751685783:16,adapt,adaption,16,https://su2code.github.io,https://github.com/su2code/SU2/issues/1143#issuecomment-751685783,1,['adapt'],['adaption']
Energy Efficiency,"The objective of this pull request is to clarify the name of some parameters. I found that:; 1. LIMITER_COEFF was confusing because: A) it is a parameters linked only to the Venkat's limiter B) Venkat's original and Wang's version use the same parameter but with different value! (0.5 vs. 0.05); 2. I found AD_COEFF_FLOW very confusing too: A) You can think that AD stands for Automatic Differentiation B) AD is too convoluted... it is just JST!; 3. REF_ELEM_LENGTH is mainly linked to Venkat's limiter... and a constant value is recommended (0.1 or 5.0 depending on the units). In the method REF_ELEM_LENGTH is multiplied by LIMITER_COEFF... so why two parameters to define a single constant (EPS)?... too many options for the user... The current config file to define the limiters or the pressure sensor is as follow:. % ----------- SLOPE LIMITER AND DISSIPATION SENSOR DEFINITION -----------------%; %; % Coefficient for the Venkat's limiter (upwind scheme). A larger values decrease; % the extent of limiting, values approaching zero cause; % lower-order approximation to the solution (0.05 by default); VENKAT_LIMITER_COEFF= 0.05; %; % 1st, 2nd and 4th order artificial dissipation coefficients for; % the JST ( 0.15, 0.5, 0.02 by default ); JST_SENSOR_COEFF= ( 0.15, 0.5, 0.02 ); %; % Coefficient for the adjoint sharp edges limiter (3.0 by default).; ADJ_SHARP_LIMITER_COEFF= 3.0; %; % 1st, 2nd, and 4th order artificial dissipation coefficients for; % the adjoint JST method ( 0.15, 0.5, 0.02 by default ); ADJ_JST_SENSOR_COEFF= ( 0.15, 0.5, 0.02 ). This config file is much more clear for people that are not familiar with SU2. Best,; Jonathan",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/451:799,sensor,sensor,799,https://su2code.github.io,https://github.com/su2code/SU2/pull/451,2,"['SENSOR', 'sensor']","['SENSOR', 'sensor']"
Energy Efficiency,"The symmetry implementation uses a numerics class to evaluate fluxes.; For upwind schemes this class is the same as the one used for internal points (but first order).; For central schemes this class is Roe, and so there is a mismatch, which maybe causes these issues.; Have you tried running the 3D slice with periodic conditions rather than symmetry?. IDK why JST was not used for boundaries, I do remember @economon mentioning it had been like that for a very long time.; Using JST for boundaries would require more than just replacing the class, because it requires terms (sensors and laplacians) that are not used by upwind schemes.; Recently there were also talks, between @TobiKattmann and @fmpmorgado of an implementation of symmetry that is independent of numerical schemes (in PR #1168).",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1280#issuecomment-834411909:577,sensor,sensors,577,https://su2code.github.io,https://github.com/su2code/SU2/issues/1280#issuecomment-834411909,1,['sensor'],['sensors']
Energy Efficiency,"The work item from #789 being worked on at the moment is **colour-based parallel residual loops (at this point we have hybrid parallel!).**; As was done for the FEA solver one numerics instance per thread is required since to use these classes one needs to write data onto them. Similarly we need thread-private copies of the small structures we then write to the residual and Jacobian, these are currently allocated by the solver.; Possible solutions:; - Allocate local temporaries in each edge loop;; - The solver allocates an array of these instead of just one for each thread to use;; - The ownership is transferred into the numerics (as currently done by the FEA classes). I am going with the third option, the solver will call `ComputeResidual` as usual but instead of passing in one array and two small matrices, it will get references to the internally (to CNumerics) allocated ones.; **As part of this I will restructure the CNumerics family**, applying the same cleanups that we have been doing for other classes. No significant code changes are planned.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/824#issuecomment-578308297:407,allocate,allocated,407,https://su2code.github.io,https://github.com/su2code/SU2/pull/824#issuecomment-578308297,4,"['Allocate', 'allocate']","['Allocate', 'allocated', 'allocates']"
Energy Efficiency,"The z coordinate is not allocated for 3D, so you are either reading out of bounds or reading the x or y value from somewhere else.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2329#issuecomment-2405810510:24,allocate,allocated,24,https://su2code.github.io,https://github.com/su2code/SU2/pull/2329#issuecomment-2405810510,1,['allocate'],['allocated']
Energy Efficiency,"There are some post-processing steps involved, so I think it would be a good idea for me to include an example. . The features in this PR are one step to a bigger projection-based ROM process. The code for the bigger process is in feature_MOR, and will take some time for me to prepare the code from ""make it work"" to ""actually good code"". . However, this feature-PR can be used by itself by anyone who wants to efficiently compute the POD of SU2 simulation data, and then use the POD for other modeling strategies.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1310#issuecomment-870282236:412,efficient,efficiently,412,https://su2code.github.io,https://github.com/su2code/SU2/pull/1310#issuecomment-870282236,1,['efficient'],['efficiently']
Energy Efficiency,"There are some tricks possible to add the `<<` operator. Not all the code base needs refactoring. We can have both styles for the future as `()` syntax is very powerful thanks to fmtlib. . ```cpp; cout << ""Values at node<< nodeId << "" are "" << val[0] << "" "" << val[1] << "" "" << val[3] << endl;; ```. can be transformed directly to . ```cpp; LOG(""Values at node {} are {}"",nodeId,val);; ```. Equivalently . ```cpp; LOG << fmt::format(""Values at node {} are {}"",nodeId,val); ; ```",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1991#issuecomment-1488340098:160,power,powerful,160,https://su2code.github.io,https://github.com/su2code/SU2/issues/1991#issuecomment-1488340098,1,['power'],['powerful']
Energy Efficiency,"There are two sources for those, `atomicAdd` which is used in dot products with CSysVectors (so it affects the linear solvers). And in the NK solver to compute the norm of the solution.; The other less obvious source is SU2_OMP_CRITICAL, critical sections do not have a guaranteed ordering. We use these to compute the RMS residuals, and those influence the CFL adaptation.; AFAIK the only way around this is to store the result of each thread into a vector visible by all threads, and then have a single thread compute the total.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2329#issuecomment-2340842669:362,adapt,adaptation,362,https://su2code.github.io,https://github.com/su2code/SU2/pull/2329#issuecomment-2340842669,1,['adapt'],['adaptation']
Energy Efficiency,There is no doubt in the fact that we need a better documentation. My idea was to have sections where we at least describe the basic settings (like the one I already started https://su2code.github.io/docs/Solver-Setup/) which are common to all solvers. Furthermore short paragraphs on each individual solver (including a brief theory). . Basic things could include:; - Markers and Boundary Conditions; - Monitoring Coefficients; - Defining the numerical methods. Please lets not start a big discussion on that. Lets rather invest that time in actually doing it.,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/775#issuecomment-540443125:404,Monitor,Monitoring,404,https://su2code.github.io,https://github.com/su2code/SU2/issues/775#issuecomment-540443125,1,['Monitor'],['Monitoring']
Energy Efficiency,"There is one case that has different residuals, the Jones turbocharger case. The other case is a know problem that is fixed in another PR. ; So you should check if this case uses adaptive CFL and CFL_REDUCTION_TURB, because that is when the residuals could be different. Please also check if it still converges, because it looks like it 's not. So maybe it needs another CFL number?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2295#issuecomment-2181198847:179,adapt,adaptive,179,https://su2code.github.io,https://github.com/su2code/SU2/pull/2295#issuecomment-2181198847,1,['adapt'],['adaptive']
Energy Efficiency,"They may be too high. This is certainly the case whether one runs in a dimensional or non-dimensional mode. It may be sufficiently low for one mode but marginally low for the second mode. Therefore, we suggest clipping the solution relative to the TKE and Omega freestream values such that:. TKE_LowerLimit = C_k * TKE_infinity; Omega _LowerLimit = C_w * Omega_infinity. Where C_k and C_w are constants. . The control over these constants is given to the user, However based on our 20 years of experience with the k-w models, Omega will not drop below 1E-3 * Omega_infinity (converged solution). However, in the process of convergence, it may reach lower values. Therefore, a value of . C_w = 1E-6. is reasonable. The solution of TKE is not very sensitive to C_K (assume it is sufficiently low). We recommended:. C_K = 1E-20. setting these as default values. . ## Related Work; Results of the change on convergence of VFE2 test case are presented. Two configurations of CFL adaptation were tested on both the original and modified lower limit code, ; 1. CFL_ADAPT_PARAM= ( 0.99, 1.005, 5.0, 50.0, 0.0001 ) named max CFL 50 ; 2. CFL_ADAPT_PARAM= ( 0.99, 1.05, 5.0, 200.0, 0.0001 ) named max CFL 200. ![rms Rho](https://github.com/su2code/SU2/assets/139676851/6481464c-6da3-4565-8415-d19d9ea211ab). ![rms k](https://github.com/su2code/SU2/assets/139676851/e1582ea2-f77e-4814-9eda-dd41c006aabf). we point out that beyond the change in maximum CFL, also the acceleration rate is changed. . Beyond adding robustness allowing the the use of a CFL of 200 which diverges under the original limit , the modified limit allows for better convergence of the flow and turbulence residuals for CFL of 50. Plots of the Lift and drag Coefficients are added here showing that results are not affected by the new limit, and additionally convergence is slightly quicker for the lift coefficient even with a CFL of 50 . . ![CL](https://github.com/su2code/SU2/assets/139676851/61adc0af-9449-41e8-aac7-e985ca3c9bdb); ![CD]",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2323:1416,adapt,adaptation,1416,https://su2code.github.io,https://github.com/su2code/SU2/pull/2323,1,['adapt'],['adaptation']
Energy Efficiency,"This PR is a major upgrade to the existing density-based incompressible solver (Euler, N-S, and RANS). The solver is now outfitted with a custom preconditioning that can handle a range of incompressible problems, including isothermal, decoupled energy, Boussinesq, and variable density flows (low Mach N-S). The solver uses a conservative formulation and is primitive variable-based. Features:; * Energy equation has been integrated into the incompressible solver. Can be disabled, run in decoupled mode, or coupled for variable density.; * Customized upwind and centered convective schemes in space and time integration schemes that account for preconditioning.; * 2 new fluid models: constant density fluid, incompressible ideal gas (variable density as a function of temperature). Temperature dependent transport coefficients.; * New non-dim. and initialization that mirrors the compressible solver.; * New set of configuration file options specific for incompressible problems (see config_template.cfg).; * Boussinesq approximation for problems with small temperature differences (e.g., natural convection).; * Axisymmetric mode updated, including viscous terms. Some notes:; * Discrete adjoint is available for new solver, but continuous incompressible adjoint has been removed for now. ; * Method of handling non-constant thermal conductivity in transport model (constant Prandtl w/ RANS) could be reused with compressible code.; * Heat flux reference value for non-dim. is missing from compressible code.; * I will do some clean up after this PR to remove some old “incompressible” flags and code that are no longer needed (output and source terms, especially).; * I have many V&V cases for this solver that I will be adding as additional regressions and tutorials.; * Some effort now needed to sync the CHT work. @oleburghardt @talbring , let's chat about this.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/514:245,energy,energy,245,https://su2code.github.io,https://github.com/su2code/SU2/pull/514,2,"['Energy', 'energy']","['Energy', 'energy']"
Energy Efficiency,This branch was green just a couple of day ago https://github.com/su2code/SU2/actions/runs/8264374345,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2158#issuecomment-1999360803:16,green,green,16,https://su2code.github.io,https://github.com/su2code/SU2/pull/2158#issuecomment-1999360803,1,['green'],['green']
Energy Efficiency,This commit fixes an issue causing incorrect reporting of the specified; adaptive CFL behavior. Thanks for your consideration!,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/233:73,adapt,adaptive,73,https://su2code.github.io,https://github.com/su2code/SU2/pull/233,1,['adapt'],['adaptive']
Energy Efficiency,This has been implemented with the new CFL adaptation.,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/92#issuecomment-101393482:43,adapt,adaptation,43,https://su2code.github.io,https://github.com/su2code/SU2/issues/92#issuecomment-101393482,1,['adapt'],['adaptation']
Energy Efficiency,"This has the green light to be merged for me. Taking off the WIP tag. @MicK7 : I have added an error message if a user tries to use a multizone CGNS file for now. It is still possible to run multizone problems by using a separate CGNS single zone file for each zone. Reading multizone CGNS would be a new capability anyway, so I think we should take it out of the critical path and see if we can get it working separately together in the next couple of weeks. That way, we can proceed with merging this and other PRs in the backlog.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/728#issuecomment-526775115:13,green,green,13,https://su2code.github.io,https://github.com/su2code/SU2/pull/728#issuecomment-526775115,1,['green'],['green']
Energy Efficiency,"This implementation allows the definition of cartesian, cylindrical and spherical FFD boxes. The gradient evaluation itself has been also revisited to reduce the required time by skipping the surface deformation process when the variable is has been fixed by the user.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/330:151,reduce,reduce,151,https://su2code.github.io,https://github.com/su2code/SU2/pull/330,1,['reduce'],['reduce']
Energy Efficiency,"This is a relatively small code change, but the change in options will effect the config files for everyone currently using optimization, and for anyone who has an OPT_OBJECTIVE defined in their config file. . The reasoning behind deprecating this option:; -Compressing the OPT_OBJECTIVE and OBJECTIVE_FUNCTION options into a single specification will reduce potential confusion about the behavior of these options. ; -Using the new OBJECTIVE_WEIGHT option to specify not only the scaling but also the sign clarifies the behavior of the optimizer - previously, the sign of the objective function was automatically flipped behind the scenes, now this is controlled by the user.; - This change facilitates planned further modifications to allow multiple objectives. . Please feel free to comment both on the code changes themselves as well as on the new config option format",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/241:352,reduce,reduce,352,https://su2code.github.io,https://github.com/su2code/SU2/pull/241,1,['reduce'],['reduce']
Energy Efficiency,"This is simply the way how the cmd.exe shell works on Windows - file and folder names containing spaces or special characters must be quoted into `""` to be handled correctly.; The title says it all - *to make them [executables] run*. The patch prepends one `""` and appends one `""` to the command name. This could be refactored further to reduce repetition much more by putting the different executable file names into a map and have a single place to combine quote + executable + quote.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/332#issuecomment-321264218:338,reduce,reduce,338,https://su2code.github.io,https://github.com/su2code/SU2/pull/332#issuecomment-321264218,2,['reduce'],['reduce']
Energy Efficiency,This issue has been closed because the CFL adaptation format has changed.,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/8#issuecomment-101391478:43,adapt,adaptation,43,https://su2code.github.io,https://github.com/su2code/SU2/issues/8#issuecomment-101391478,1,['adapt'],['adaptation']
Energy Efficiency,"This may be relevant, and it may not be. Is there a reason that the molecular and turbulent diffusion of turbulent kinetic energy is not included in the total energy terms? I'm talking about terms like:. ![molecular and turbulent diffusion of tke](https://latex.codecogs.com/gif.latex?\left(&space;\mu&space;&plus;&space;\frac{\mu_t}{\sigma_k}\right)\frac{\partial&space;k}{\partial&space;x_j}). This term is listed both in Wilcox's ""Turbulence Modeling for CFD"" book and the [NASA TMR website](https://turbmodels.larc.nasa.gov/implementrans.html). NASA's page basically just copies what Wilcox states, and then says ""This expression in the energy equation is also sometimes neglected."". Rumsey clarified his position in a [2009 report](https://ntrs.nasa.gov/archive/nasa/casi.ntrs.nasa.gov/20090015399.pdf), saying that ""when considering high Mach number compressible boundary layer flows using k-omega models, the conservation of total energy should be configured to include the contribution of the turbulent kinetic energy k... It is sometimes common practice to ignore these effects, which is certainly justified when k is signficantly smaller than the square of the mean velocity."" . But he also states: ""Note that in CFL3D, the turbulence models are decoupled from the mean flow equations, k is *not* included in the definition of the total energy, and the diffusion of k does not appear in the mean flow energy equation for its models tested here."" He also omitted the 2/3 \rho k term in both the production and the turbulent stress tensor, and found that it made little difference even for M=10 wall-bounded flows. SU2's version of SST is in a weird spot right now, where it's using the turbulent kinetic energy in some places but not others. It's using it here:. + Total energy definition; + Production of turbulent kinetic energy; + RANS evolution equations; + Eddy viscosity definition. But not here:. + Molecular and turbulent diffusion of turbulent kinetic energy in the total energy cons",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/797#issuecomment-548886007:123,energy,energy,123,https://su2code.github.io,https://github.com/su2code/SU2/issues/797#issuecomment-548886007,10,['energy'],['energy']
Energy Efficiency,"This one is all set after a little more cleanup. I left some low-level changes to the EoS models for later. @CatarinaGarbacz @MarcoFossati : we can use a simple directory name, as you suggest. Let's just go with fluid/ since we also treat liquids with the incompressible solver. Bonus: adds a rotating frame calculation test and some extra error checks on CFL adapt params that should help avoid unreported problems with old configs.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1010#issuecomment-640170715:360,adapt,adapt,360,https://su2code.github.io,https://github.com/su2code/SU2/pull/1010#issuecomment-640170715,2,['adapt'],['adapt']
Energy Efficiency,"This pull request **introduces 1 alert** when merging 121eb50e411e8c17d5f87be06b2229b1aba50972 into 73538a1d9cf18f0f75a5f36f8f1740fca8d5fc62 - [view on LGTM.com](https://lgtm.com/projects/g/su2code/SU2/rev/pr-b9e82ee867031b54ceb61a9f35f25eedb9881691). **new alerts:**. * 1 for Resource not released in destructor; ---. **Heads-up: LGTM.com's PR analysis will be disabled on the 5th of December**, and LGTM.com will be shut down ⏻ completely on the 16th of December 2022. Please enable GitHub code scanning, which uses the same CodeQL engine :gear: that powers LGTM.com. For more information, please check out [our post on the GitHub blog](https://github.blog/2022-08-15-the-next-step-for-lgtm-com-github-code-scanning/).",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1826#issuecomment-1330538080:553,power,powers,553,https://su2code.github.io,https://github.com/su2code/SU2/pull/1826#issuecomment-1330538080,1,['power'],['powers']
Energy Efficiency,"This pull request **introduces 1 alert** when merging 1a40d51afd58dd01d28189e06c9337010d850af9 into 9f082de9b9090188a820688cd30458da0fce5661 - [view on LGTM.com](https://lgtm.com/projects/g/su2code/SU2/rev/pr-2c1e66c7efa9c1831a08f88abe26c40f24e9a73a). **new alerts:**. * 1 for Resource not released in destructor; ---. **Heads-up: LGTM.com's PR analysis will be disabled on the 5th of December**, and LGTM.com will be shut down ⏻ completely on the 16th of December 2022. Please enable GitHub code scanning, which uses the same CodeQL engine :gear: that powers LGTM.com. For more information, please check out [our post on the GitHub blog](https://github.blog/2022-08-15-the-next-step-for-lgtm-com-github-code-scanning/).",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1757#issuecomment-1325335882:553,power,powers,553,https://su2code.github.io,https://github.com/su2code/SU2/pull/1757#issuecomment-1325335882,1,['power'],['powers']
Energy Efficiency,"This pull request **introduces 1 alert** when merging 344abacdc6fcfa7d59422b8f9259b5fcac90b8fe into 9f082de9b9090188a820688cd30458da0fce5661 - [view on LGTM.com](https://lgtm.com/projects/g/su2code/SU2/rev/pr-6cf2b294fb313fcb164ea78f5eb2e646af617e63). **new alerts:**. * 1 for Resource not released in destructor; ---. **Heads-up: LGTM.com's PR analysis will be disabled on the 5th of December**, and LGTM.com will be shut down ⏻ completely on the 16th of December 2022. Please enable GitHub code scanning, which uses the same CodeQL engine :gear: that powers LGTM.com. For more information, please check out [our post on the GitHub blog](https://github.blog/2022-08-15-the-next-step-for-lgtm-com-github-code-scanning/).",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1826#issuecomment-1324245971:553,power,powers,553,https://su2code.github.io,https://github.com/su2code/SU2/pull/1826#issuecomment-1324245971,1,['power'],['powers']
Energy Efficiency,"This pull request **introduces 1 alert** when merging 60959597c9b9d75f8011d99edffdc408d0ba3209 into 9a4cf77d9700b9d829063a37a1243e2090875d8d - [view on LGTM.com](https://lgtm.com/projects/g/su2code/SU2/rev/pr-7550880d1deca38f4bb990d519bc660f2a6fe3d7). **new alerts:**. * 1 for Resource not released in destructor; ---. **Heads-up: LGTM.com's PR analysis will be disabled on the 5th of December**, and LGTM.com will be shut down ⏻ completely on the 16th of December 2022. Please enable GitHub code scanning, which uses the same CodeQL engine :gear: that powers LGTM.com. For more information, please check out [our post on the GitHub blog](https://github.blog/2022-08-15-the-next-step-for-lgtm-com-github-code-scanning/).",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1826#issuecomment-1336486906:553,power,powers,553,https://su2code.github.io,https://github.com/su2code/SU2/pull/1826#issuecomment-1336486906,1,['power'],['powers']
Energy Efficiency,"This pull request **introduces 1 alert** when merging a5e299d22c7bcc239cffabc7578ba52c2d8292ae into 9f082de9b9090188a820688cd30458da0fce5661 - [view on LGTM.com](https://lgtm.com/projects/g/su2code/SU2/rev/pr-d693ff6efa13c303374af0abf61643a83f9a97e1). **new alerts:**. * 1 for Resource not released in destructor; ---. **Heads-up: LGTM.com's PR analysis will be disabled on the 5th of December**, and LGTM.com will be shut down ⏻ completely on the 16th of December 2022. Please enable GitHub code scanning, which uses the same CodeQL engine :gear: that powers LGTM.com. For more information, please check out [our post on the GitHub blog](https://github.blog/2022-08-15-the-next-step-for-lgtm-com-github-code-scanning/).",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1826#issuecomment-1323974895:553,power,powers,553,https://su2code.github.io,https://github.com/su2code/SU2/pull/1826#issuecomment-1323974895,1,['power'],['powers']
Energy Efficiency,"This pull request **introduces 1 alert** when merging a90a2316914b9035e9955f2749a7d673aa44b2d0 into 9f082de9b9090188a820688cd30458da0fce5661 - [view on LGTM.com](https://lgtm.com/projects/g/su2code/SU2/rev/pr-dacbb9c48d85fcdde321d014742fe164b4395ec1). **new alerts:**. * 1 for Resource not released in destructor; ---. **Heads-up: LGTM.com's PR analysis will be disabled on the 5th of December**, and LGTM.com will be shut down ⏻ completely on the 16th of December 2022. Please enable GitHub code scanning, which uses the same CodeQL engine :gear: that powers LGTM.com. For more information, please check out [our post on the GitHub blog](https://github.blog/2022-08-15-the-next-step-for-lgtm-com-github-code-scanning/).",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1826#issuecomment-1328383726:553,power,powers,553,https://su2code.github.io,https://github.com/su2code/SU2/pull/1826#issuecomment-1328383726,1,['power'],['powers']
Energy Efficiency,"This pull request **introduces 2 alerts** when merging 054a8ff9443814b08fdae1d342537f549b341adf into 9f082de9b9090188a820688cd30458da0fce5661 - [view on LGTM.com](https://lgtm.com/projects/g/su2code/SU2/rev/pr-3f2c21dc8e025cb184f3cbffacd7c381240166c8). **new alerts:**. * 1 for Resource not released in destructor; * 1 for &#39;new\[\]&#39; array freed with &#39;delete&#39;; ---. **Heads-up: LGTM.com's PR analysis will be disabled on the 5th of December**, and LGTM.com will be shut down ⏻ completely on the 16th of December 2022. Please enable GitHub code scanning, which uses the same CodeQL engine :gear: that powers LGTM.com. For more information, please check out [our post on the GitHub blog](https://github.blog/2022-08-15-the-next-step-for-lgtm-com-github-code-scanning/).",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1757#issuecomment-1327391844:615,power,powers,615,https://su2code.github.io,https://github.com/su2code/SU2/pull/1757#issuecomment-1327391844,1,['power'],['powers']
Energy Efficiency,"This pull request **introduces 3 alerts** when merging 112876da64657676a5ed1c2a2f3a60e934f59009 into 7132d99e9e794094b5c2b924605f0b1878ac21e2 - [view on LGTM.com](https://lgtm.com/projects/g/su2code/SU2/rev/pr-2065e18ac397dee2095cde4b9803eb2ac7ed0f24). **new alerts:**. * 3 for Resource not released in destructor; ---. **Heads-up: LGTM.com's PR analysis will be disabled on the 5th of December**, and LGTM.com will be shut down ⏻ completely on the 16th of December 2022. Please enable GitHub code scanning, which uses the same CodeQL engine :gear: that powers LGTM.com. For more information, please check out [our post on the GitHub blog](https://github.blog/2022-08-15-the-next-step-for-lgtm-com-github-code-scanning/).",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1757#issuecomment-1320293517:554,power,powers,554,https://su2code.github.io,https://github.com/su2code/SU2/pull/1757#issuecomment-1320293517,1,['power'],['powers']
Energy Efficiency,"This pull request **introduces 3 alerts** when merging 68d02ae7036ef8fa5d93cfb6a6bc47aa9a280d4d into 9f082de9b9090188a820688cd30458da0fce5661 - [view on LGTM.com](https://lgtm.com/projects/g/su2code/SU2/rev/pr-2b8463d2021093ad8df647efad7bad326bf747c0). **new alerts:**. * 3 for Resource not released in destructor; ---. **Heads-up: LGTM.com's PR analysis will be disabled on the 5th of December**, and LGTM.com will be shut down ⏻ completely on the 16th of December 2022. Please enable GitHub code scanning, which uses the same CodeQL engine :gear: that powers LGTM.com. For more information, please check out [our post on the GitHub blog](https://github.blog/2022-08-15-the-next-step-for-lgtm-com-github-code-scanning/).",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1757#issuecomment-1324980995:554,power,powers,554,https://su2code.github.io,https://github.com/su2code/SU2/pull/1757#issuecomment-1324980995,1,['power'],['powers']
Energy Efficiency,"This pull request **introduces 3 alerts** when merging 76194ecc4154ee6569a3420178c5af801478bfc9 into 9f082de9b9090188a820688cd30458da0fce5661 - [view on LGTM.com](https://lgtm.com/projects/g/su2code/SU2/rev/pr-191cf6312035d882b6401e801a28795ee4fdf29d). **new alerts:**. * 3 for Resource not released in destructor; ---. **Heads-up: LGTM.com's PR analysis will be disabled on the 5th of December**, and LGTM.com will be shut down ⏻ completely on the 16th of December 2022. Please enable GitHub code scanning, which uses the same CodeQL engine :gear: that powers LGTM.com. For more information, please check out [our post on the GitHub blog](https://github.blog/2022-08-15-the-next-step-for-lgtm-com-github-code-scanning/).",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1757#issuecomment-1323956735:554,power,powers,554,https://su2code.github.io,https://github.com/su2code/SU2/pull/1757#issuecomment-1323956735,1,['power'],['powers']
Energy Efficiency,"This pull request **introduces 3 alerts** when merging e8a3a93e987c38e54e98b86c9f35d4830d3c90c9 into 7132d99e9e794094b5c2b924605f0b1878ac21e2 - [view on LGTM.com](https://lgtm.com/projects/g/su2code/SU2/rev/pr-5ddd88c68209cfb42bcdbc0bf86607c797da5b41). **new alerts:**. * 3 for Resource not released in destructor; ---. **Heads-up: LGTM.com's PR analysis will be disabled on the 5th of December**, and LGTM.com will be shut down ⏻ completely on the 16th of December 2022. Please enable GitHub code scanning, which uses the same CodeQL engine :gear: that powers LGTM.com. For more information, please check out [our post on the GitHub blog](https://github.blog/2022-08-15-the-next-step-for-lgtm-com-github-code-scanning/).",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1757#issuecomment-1321937614:554,power,powers,554,https://su2code.github.io,https://github.com/su2code/SU2/pull/1757#issuecomment-1321937614,1,['power'],['powers']
Energy Efficiency,"This pull request **introduces 4 alerts** when merging 0a565343307aa6a5a7f012f2779cf5c02ad4e8b7 into 7132d99e9e794094b5c2b924605f0b1878ac21e2 - [view on LGTM.com](https://lgtm.com/projects/g/su2code/SU2/rev/pr-1bd2fb9a693c7ffb539f7915b7c52929af869e36). **new alerts:**. * 2 for Resource not released in destructor; * 2 for &#39;new&#39; object freed with &#39;delete\[\]&#39;; ---. **Heads-up: LGTM.com's PR analysis will be disabled on the 5th of December**, and LGTM.com will be shut down ⏻ completely on the 16th of December 2022. Please enable GitHub code scanning, which uses the same CodeQL engine :gear: that powers LGTM.com. For more information, please check out [our post on the GitHub blog](https://github.blog/2022-08-15-the-next-step-for-lgtm-com-github-code-scanning/).",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1757#issuecomment-1322389470:616,power,powers,616,https://su2code.github.io,https://github.com/su2code/SU2/pull/1757#issuecomment-1322389470,1,['power'],['powers']
Energy Efficiency,"This pull request contains a bunch of clean up within the parallel mesh readers and partitioning routines. It should reduce memory usage quite a bit during preprocessing, and several important leaks have been fixed.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/263:117,reduce,reduce,117,https://su2code.github.io,https://github.com/su2code/SU2/pull/263,1,['reduce'],['reduce']
Energy Efficiency,"This pull request contains two important things:; 1. Major reductions in memory usage during grid partitioning for parallel calculations (reduced by half in some unofficial tests).; 2. Improvements to how the information needed by ParMETIS for the partitioning is prepared. At a minimum, there is some storage benefit, and in some cases, especially for mixed element meshes, slightly higher quality partitions may be obtained. The second point means that some of the parallel regression tests may break due to changes in the partitions. I have already taken care of most of these, but I'll wait for Travis CI to report any other necessary changes.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/236:138,reduce,reduced,138,https://su2code.github.io,https://github.com/su2code/SU2/pull/236,1,['reduce'],['reduced']
Energy Efficiency,"This pull request enlarges the capability of SU2 to simulate internal flows in turbomachinery. The flow solver is now capable of performing 3D steady multi-zone simulations via a 3D Non-Reflecting Mixing Plane. The implementation is based on the work done by Saxer and Giles (available at https://doi.org/10.2514/3.23618). To adapt the implementation of Saxer and Giles to an unstructured vertex-based solver such as SU2, a new data structure, called **_CTurboVertex_**, was created for the inflow and outflow boundaries. The **_CTurboVertex_** class is a child of the class **_CVertex_**; thus, it maintains all the standard vertex properties. However, more than a standard vertex, the turboVertex posses:. 1. the possibility of accessing the inflow and outflow boundaries on a span-wise manner (to impose different values of the mixing-plane condition along the blade-height) and on a pitch-wise ordered manner (to compute the Spatial Fourier Transformation of the outgoing characteristics at the boundary for the non-reflectivity). 2. embedded information on what kind of turbomachinery architecture is being simulated, so that the values of velocity at the boundaries can be imposed using the correct frame of reference. So in a nutshell the flow solver is now capable of:. - simulating single 2D/3D turbomachinery blades using 1D characteristic-based BC or Non reflecting BC; - simulating multi-stage 2D/3D turbomachinery via a Mixing-Plane interface, including also the mixing of the turbulent quantities; - handling any kind of turbomachinery architecture (AXIAL, CENTRIFUGAL, CENTRIPETAL and mixed such as CENTRIPETAL_AXIAL or AXIAL_CENTRIFUGAL); - selecting 2 different kind of interpolation methods for the mixing-plane interface: LINEAR_INTERPOLATION and NEAREST_NEIGHBOR; - handling an unlimited number of blades/stages —> (zones); - simulating turbomachinery which works on the NICFD regime such as supercritical CO2 compressors or Organic Rankine Cycle turbines.; - printing history_x.da",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/413:326,adapt,adapt,326,https://su2code.github.io,https://github.com/su2code/SU2/pull/413,1,['adapt'],['adapt']
Energy Efficiency,"This pull request extends the fluid interface to viscous and turbulent calculations (SA and SST). * One note:; nVar is still passed in driver_structure.cpp:2509 but is not used. I left it, for the moment, to reduce potential conflicts but it can be removed in a future PR.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/382:208,reduce,reduce,208,https://su2code.github.io,https://github.com/su2code/SU2/pull/382,1,['reduce'],['reduce']
Energy Efficiency,"This pull request features some improvements regarding the FFD. To be more precise:; - It is now possible to allow the FFD control points to move in an arbitrary direction. This is automatically enabled if the direction of movement in the design variable definition is set to (0.0,0.0,0.0). The set_ffd_design_var.py is updated accordingly (you can now specify the direction, default is 0.0). At the moment this is only possible for the discrete adjoint. But it could also be extended to the cont. adjoint.; - Along with this goes a refactoring of SU2_DOT to reduce code copy. Especially for the optimization of turbine blades and everything else that is not an airfoil this might be useful.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/239:559,reduce,reduce,559,https://su2code.github.io,https://github.com/su2code/SU2/pull/239,1,['reduce'],['reduce']
Energy Efficiency,"This pull request introduces new test cases for the Python wrapper. The first set of tests includes:; - Classical CFD test cases: euler naca0012, rans naca0012, unsteady square cylinder, aeroelastic; - A native FSI test case involving the FSIDriver of SU2: wall channel 2D. These tests are launched using the script pyWrap_SU2_CFD.py being the Py wrapped version of the executable SU2_CFD. . The second set of tests includes:; - A new FSI test case involving the coupling between SU2 and an external structural solver (see TestCases/coupled_fsi/2d_aeroelasticity). . The structural solver is the PitchPlungeAirfoilStructuralTester (see SU2_PY/FSI directory). It was directly written in Python and designed only for this particular test where we measure the aeroelastic response of a pitch-plunge NACA 0012 airfoil under the flutter point. The structural solver tester also illustrates the architecture that is expected for the solid side of the coupling (how the solver is driven, how does the communication layer look like). This test is launched using the script fsi_computation.py (**note** : a parallel run requires mpi4py to be installed on the system). . The serial_ and parallel_regression.py files were simply modified in order to add those sets of test cases. The first set uses a direct comparaison based on residuals, lift, drag,... whereas the second set uses a comparaison based on output files coming from the structural solver. In order to build the Py wrapper and run the tests on travis, the preconfigure.py script was adapted so that the option --enable-PY_WRAPPER can be used. Because Swig and mpi4py are required for the build and for the parallel run respectively, they were also introduced in the travis configuration file where mpi4py can be simply installed using the python-pip package.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/298:1536,adapt,adapted,1536,https://su2code.github.io,https://github.com/su2code/SU2/pull/298,1,['adapt'],['adapted']
Energy Efficiency,"This pull request introduces the Python wrapping of the SU2 code. The wrapper is based on the CDriver class meaning that every function in that class can be independently called in Python. To compile it:; The code compiles as usual (serial or parallel) using the configure script. The option --enable-PY_WRAPPER has to be added when the compilation of the wrapper is needed. For this compilation, make sure that SWIG (http://www.swig.org) and Python are installed on the system. The generated python module is named SU2Solver.py and lies in the same installation folder than the other executables (SU2_CFD, ...) (--prefix option). To use it: ; Any Python script should be able to import the module SU2Solver.py. This module is then used to drive the main functions of the SU2 code (code pre-processing, run, monitor, output, dynamic mesh deformation, code post-processing, ...). A particular example is given through the new external coupling capability of SU2 for FSI computations: see new files SU2_PY/fsi_computation.py and SU2_PY/FSI/FSIInterface.py. Current limitations: ; The FSI computation can be launched in parallel, but it is currently assumed that only the fluid part (SU2) is parallelized. Also, only matching meshes at the f/s interface are allowed. 2D is fully operational, 3D is still under testing. Coming soon:; 3D framework, Python wrapper regression test case, new MPI communicators, non-matching meshes capability.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/295:808,monitor,monitor,808,https://su2code.github.io,https://github.com/su2code/SU2/pull/295,1,['monitor'],['monitor']
Energy Efficiency,"This will provide a lot of power and flexibility. For example, if doing local development, only the tests that failed last could be run with `pytest --lf`. To make the tests compatible, they can be wrapped into functions with a `test_` prefix, then called from the command line with, e.g.,. pytest TestCases/serial_regression_AD.py. To select and run only one test:. pytest TestCases/serial_regression_AD.py::test_discadj_multi_py",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/462:27,power,power,27,https://su2code.github.io,https://github.com/su2code/SU2/issues/462,1,['power'],['power']
Energy Efficiency,"Those two cases are not part of the regression suite, and so they were probably not updated as some of the options were renamed.; You can have a look at the other turbomachinery examples (at least two of them are part of the regressions) it should be simple to adapt those options.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1086#issuecomment-706417999:261,adapt,adapt,261,https://su2code.github.io,https://github.com/su2code/SU2/issues/1086#issuecomment-706417999,2,['adapt'],['adapt']
Energy Efficiency,"Tobi,. We have asked all presenters for slides on Sunday. We will link them to the agenda in the SU2 main web pages shortly after we receive them and you should be able to see them on Monday morning (your morning) and have a few hours to review them before the actual meeting starts at 8 am Pacific / 5pm in Germany. Best wishes,. Juan. On Dec 15, 2017, at 1:48 AM, TobiKattmann <notifications@github.com<mailto:notifications@github.com>> wrote:. Hi @economon<https://github.com/economon> ,. I would like to take a quick glance on the presented slides in advance. I always find it easier to follow when I already know whats coming my way. I know that slides are often finished the exact second before the presentation but maybe I am lucky. Also considering that it is quite late here in Germany and the concentration level might drop a little, although you scheduled the Conference quite ""Europe-friendly"" :). Thanks already,; Tobi. —; You are receiving this because you are subscribed to this thread.; Reply to this email directly, view it on GitHub<https://github.com/su2code/SU2/issues/470#issuecomment-351961812>, or mute the thread<https://github.com/notifications/unsubscribe-auth/ADpSxFNRIn3cnh34ZYSaHSuUE72mZK7fks5tAkBngaJpZM4QVjsL>.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/470#issuecomment-352088919:857,schedul,scheduled,857,https://su2code.github.io,https://github.com/su2code/SU2/issues/470#issuecomment-352088919,1,['schedul'],['scheduled']
Energy Efficiency,"Todo list:; - [x] Make sure the code can handle arbitrary many species equtions. Especially the output has to be adapted. Note the MAXNVAR of the ScalarSolver has to adapted to that need as well. Make a suitable Testcase for that.; - [x] Implement weak inlet and outlet BC. The weak approach is used in the turb and mean flow and is most likely conservative opposed to the strong one. Here a simple switch will be put in place to compare both versions.; - [x] Consolidate nVar, nSpecies, ... variable to only use 1 consistently (The choice was `nSpecies` which was already introduced for NEMO and it just makes sense to use the same container); - [x] Make the numerous reviewers happy; - [x] Check inlet profiles for Species solver (have a testcase for that) See #1427 ; - [x] Create Objective functions of Surface avg quantities (Area and Massflow? prob. And a variance-style output to capture mixing); - [x] Avoid redundant operations (pre/post processings) during solver restarts. 156d0c5. What will be done in follow-up PR's:; - Viscous contributions for BC_inlet and outlet which are currently not used (also then for Turb-solver) https://github.com/su2code/SU2/pull/1388#discussion_r752384956; - Axissymmetric source term addtion and testing; - multi-component mixing from #1332 ; - gradient validation between DA and FD",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1388#issuecomment-935901996:113,adapt,adapted,113,https://su2code.github.io,https://github.com/su2code/SU2/pull/1388#issuecomment-935901996,4,['adapt'],['adapted']
Energy Efficiency,"Tom, thank you for improving this one.; This sounds cool, I was really looking for an easy way to customize the output to plot, for instance, the entropy field or the mass flow for turbomachinery applications. ; Is this meant to remain hard-coded or are you planning to introduce new options to specify the output from the config file?. I see reg tests failing due to travis time out (I believe we have 50 minutes for each python script). I also experienced that issue before and I had to turn down a couple of check I wanted to add for sliding meshes. We need to think about reorganising reg test to reduce or shorten them without loosing control on code features.; Otherwise we could consider switching to travis.com but I believe we'll have to pay for that. looks good to me by the way. . Ciao!; Giulio",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/328#issuecomment-259085483:601,reduce,reduce,601,https://su2code.github.io,https://github.com/su2code/SU2/pull/328#issuecomment-259085483,1,['reduce'],['reduce']
Energy Efficiency,"Tom,. The endian test I got from http://cs-fundamentals.com/tech-interview/c/c-program-to-check-little-and-big-endian-architecture.php. The byte swapping function is mine and I am OK with you adapting it.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/562#issuecomment-414104646:192,adapt,adapting,192,https://su2code.github.io,https://github.com/su2code/SU2/pull/562#issuecomment-414104646,1,['adapt'],['adapting']
Energy Efficiency,Turbulent Kinetic Energy(TKE) on energy equation in SST model.,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1851:18,Energy,Energy,18,https://su2code.github.io,https://github.com/su2code/SU2/issues/1851,2,"['Energy', 'energy']","['Energy', 'energy']"
Energy Efficiency,"UCTION', 'ADAP_EXT_ITER', 'ADAP_SOURCE','ADAP_PYTHON']; required_options = ['ADAP_SIZES', 'ADAP_SUBITE', \; 'ADAP_SENSOR', 'MESH_FILENAME', 'RESTART_SOL', 'MESH_OUT_FILENAME']; ; if not all (opt in config for opt in required_options):; err = '\n\n## ERROR : Missing options: \n'; for opt in required_options:; if not opt in config:; err += opt + '\n'; raise RuntimeError , err; ; # Print adap options; sys.stdout.write(su2amg.print_adap_options(config, adap_options)); ; #--- How many iterative loops? Using what prescribed mesh sizes? ; ; mesh_sizes = su2amg.get_mesh_sizes(config); sub_iter = su2amg.get_sub_iterations(config); ; # solver iterations/ residual reduction param for each size level; adap_ext_iter = su2amg.get_ext_iter(config); adap_res = su2amg.get_residual_reduction(config). adap_sensor = config.ADAP_SENSOR; sensor_avail = ['MACH', 'PRES', 'MACH_PRES']; ; if adap_sensor not in sensor_avail:; raise RuntimeError , 'Unknown adaptation sensor (ADAP_SENSOR option)\n'; ; if len(mesh_sizes) != len(sub_iter):; raise RuntimeError , 'Inconsistent number of mesh sizes and sub-iterations'; ; #--- Use the python interface to amg, or the executable?; ; amg_python = su2amg.get_python_amg(config); ; #--- Change current directory; ; warn = False; adap_dir = './ADAP'; cwd = os.getcwd(); ; if os.path.exists(adap_dir):; sys.stdout.write('./ADAP exists. Removing old mesh adaptation in 10s.\n'); sys.stdout.flush(); if warn : time.sleep(10); shutil.rmtree(adap_dir); ; os.makedirs(adap_dir); os.chdir(adap_dir); sys.stdout.write('The %s folder was deleted\n' % adap_dir); ; os.symlink(os.path.join(cwd, config.MESH_FILENAME), config.MESH_FILENAME); os.symlink(os.path.join(cwd, config.SOLUTION_FLOW_FILENAME), config.SOLUTION_FLOW_FILENAME); ; #--- Compute initial solution if needed, else link current files; ; config_cfd = copy.deepcopy(config); for opt in adap_options:; config_cfd.pop(opt, None); config_cfd.LOW_MEMORY_OUTPUT = ""NO""; ; config_cfd.WRT_BINARY_RESTART = ""NO""; #config_cfd.R",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/606#issuecomment-504636643:3796,adapt,adaptation,3796,https://su2code.github.io,https://github.com/su2code/SU2/issues/606#issuecomment-504636643,2,"['adapt', 'sensor']","['adaptation', 'sensor']"
Energy Efficiency,"Unfortunately, this doxygen documentation is quite old (based on version 3.0). In the meantime this Joule heating source implementation was removed.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/230#issuecomment-172230573:100,Joule,Joule,100,https://su2code.github.io,https://github.com/su2code/SU2/issues/230#issuecomment-172230573,1,['Joule'],['Joule']
Energy Efficiency,Update adaptive CFL,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1036:7,adapt,adaptive,7,https://su2code.github.io,https://github.com/su2code/SU2/pull/1036,1,['adapt'],['adaptive']
Energy Efficiency,Update to my comment above ~~But Nemo does not implement its own BC_Sym_Plane and uses the standard FVM implementation~~ ...turns out Nemo uses its own implementation. So Please re-use / adapt the one in CFVMSolver,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1625#issuecomment-1117417733:187,adapt,adapt,187,https://su2code.github.io,https://github.com/su2code/SU2/issues/1625#issuecomment-1117417733,1,['adapt'],['adapt']
Energy Efficiency,"Updated all the regression test values. Ran all of them to convergence and the difference in the integrated quantities (lift, drag, sens_press, entropy generation etc) were < 1%. . While running the regression tests, I saw that some of them weren't up to date with the best practices from the recent PRs. I know they are for Regressions and not necessarily as example configs, but I think it'd be good to have the configs reflect best practices so that people can look to them for reference. . If people are on board with that, I can update some of the rans configs to include things like ILU, adaptive CFL, the new convergence monitoring systems etc. I will make sure that the tests still cover all the relevant config options. I will also make sure that if you were to run the test individually, it would run to convergence.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/905#issuecomment-600991354:594,adapt,adaptive,594,https://su2code.github.io,https://github.com/su2code/SU2/pull/905#issuecomment-600991354,2,"['adapt', 'monitor']","['adaptive', 'monitoring']"
Energy Efficiency,"Using CG did the trick it seems, and the solver now converges < 1e-18. Thanks a lot!. However, one small issue remains: near the tip, the deformation looks quite strange:; ![grafik](https://user-images.githubusercontent.com/42602495/211920358-29e6a9f7-72fc-44d2-84ef-b4e00fcf23bb.png); ![grafik](https://user-images.githubusercontent.com/42602495/211920447-dba88fc8-f9cf-4760-96b3-90d7250b2e0a.png); White box is undeformed FFD-box, translucent green is the deformed one. . BC on the bottom is axis, right and top boundaries are walls. Top and right wall are included in DV_MARKER and DV-direction is (0., 1., 0.). Any idea what could be behind this behaviour?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1879#issuecomment-1379504252:445,green,green,445,https://su2code.github.io,https://github.com/su2code/SU2/issues/1879#issuecomment-1379504252,1,['green'],['green']
Energy Efficiency,"Vajjala,; you may want to try to use the older preconfig/mame/make install procedure.; Just do the preconfig process (with -u parameter) on a machine that is; connected to the internet so codi/medi versions will be updated; Next step: search the preconfig.py file for the codi/medi version (look; for ""sha_version_codi="" and ""sha_version_medi="").; Write down the two strings somewhere.; Then transfer the whole install folder to the disconnected cluster.; Once on the cluster, go to folder external/codi and touch a file by the; name of the string you have written down.; Repeat the same with medi (external/medi).; Now do on the cluster preconfig.py/make/make install (without -u). The; codi/medi versions will match now and the installation should work.; The problem with this procedure is that it is not supported anymore. It; still worked for me a short time ago with the develop branch (but failed on; the master branch). Meson/ninja installation is significantly more; efficient and most of the developers here ain't familiar with life without; an internet connection ... Last warning: the above-listed messages seem to point over a compiler; issue. If indeed this is the case then the bypass that I suggested is; irrelevant. On Tue, Apr 28, 2020 at 7:43 PM SumanVajjala <notifications@github.com>; wrote:. > @economon <https://github.com/economon> I have personally installed SU2; > software (from versions 3 to 6) in our cluster without problems. I think; > the issues could be because of lack of C11 features. I tried to run a; > sample code with aligned_alloc and I had problems with both Intel and GCC; > compilers. I'll test this again. I think I'll have to install gcc myself.; >; > Regards; > Suman; >; > —; > You are receiving this because you are subscribed to this thread.; > Reply to this email directly, view it on GitHub; > <https://github.com/su2code/SU2/issues/955#issuecomment-620724039>, or; > unsubscribe; > <https://github.com/notifications/unsubscribe-auth/ADZI3G66H554WAUPB",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/955#issuecomment-621078198:981,efficient,efficient,981,https://su2code.github.io,https://github.com/su2code/SU2/issues/955#issuecomment-621078198,1,['efficient'],['efficient']
Energy Efficiency,"Valgrind does not detect any leaks.; What is probably happening is heap fragmentation, some large temporary arrays are used during parallel output, they are free'd correctly but the OS is not obligated to re-use that space the next time something is allocated. If you want to experiment with modifying some code (to make those arrays persistent) we can show you what to do.; (developers meetings every Wednesday at 4pm CET https://meet.jit.si/SU2_DevMeeting). Cheers",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1261#issuecomment-818806174:250,allocate,allocated,250,https://su2code.github.io,https://github.com/su2code/SU2/issues/1261#issuecomment-818806174,1,['allocate'],['allocated']
Energy Efficiency,We have moved to an adaptive CFL functionality in the place of our old CFL ramp feature (see the config_template.cfg file for more details on its usage).,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/124#issuecomment-102149500:20,adapt,adaptive,20,https://su2code.github.io,https://github.com/su2code/SU2/issues/124#issuecomment-102149500,1,['adapt'],['adaptive']
Energy Efficiency,"We have used SU2 and SU2-NEMO to predict the heat flux for various shapes in a high-speed flow. Something we have observed is that SU2 requires an extremely small first cell spacing to get an accurate and grid-independent prediction for heat flux. For example, this first cell space is often 1E-9 to 1E-10 m with SU2; whereas with other codes it is a micrometer. The latter is in line with the general rule of thumb of setting the first cell height so that the first cell Reynold's number is between 0.1 and 1.0. Discussing with @jtneedels and @WallyMaier, we think it may have to do with how the temperature gradient is calculated in CNSSolver.cpp:. /*--- Compute the normal gradient in temperature using Twall ---*/. ` su2double dTdn = -(There - Twall)/dist_ij;`. /*--- Apply a weak boundary condition for the energy equation.; Compute the residual due to the prescribed heat flux. ---*/. ` su2double Res_Conv = 0.0;; su2double Res_Visc = thermal_conductivity * dTdn * Area;`. which may result in a first-order approximation for the temperature gradient causing this requirement for an extremely small cell size to recover the true gradient. I would be interested to see if calculating this gradient similar to CFVMFlowSolverBase.ini. For example,; ` for (iDim = 0; iDim < nDim; iDim++) {; Grad_Temp[iDim] = nodes->GetGradient_Primitive(iPoint, prim_idx.Temperature(), iDim);; }`. `su2double dTdn = -GeometryToolbox::DotProduct(nDim, Grad_Temp, UnitNormal);`. I tried checking this but quickly found out, I am not familiar enough with the code structure to implement.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/2347:812,energy,energy,812,https://su2code.github.io,https://github.com/su2code/SU2/issues/2347,1,['energy'],['energy']
Energy Efficiency,"We were discussing the failing discrete adjoint test case in this PR earlier today in the dev call (which seems a little odd). It may be worth disabling the CFL adaption features altogether in Config::SetPostprocesing() when running the discrete adjoint, since it does not make much sense given that we record just a single primal iteration. We should also then check that the CFL number used in that iteration makes sense (initial value vs final value in the primal.. prob makes sense to use initial to be conservative).",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1036#issuecomment-673026393:161,adapt,adaption,161,https://su2code.github.io,https://github.com/su2code/SU2/pull/1036#issuecomment-673026393,1,['adapt'],['adaption']
Energy Efficiency,"We will merge this PR next in order to have enough time for testing and for you to solve conflicts (if you need any help to solve those, please contact me). Even if this PR is merged, please continue to give feedback on the usability. We will still continue to work on that. Refer to the user documentation in order to learn how to adapt your config files. Let me know if you have any questions.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/724#issuecomment-534522241:332,adapt,adapt,332,https://su2code.github.io,https://github.com/su2code/SU2/pull/724#issuecomment-534522241,2,['adapt'],['adapt']
Energy Efficiency,"What I found is that density unrelated values look smooth for example, velocities (I got it Momentum/Density) and total energy (Energy/Density). As I understand, pressure is calculated assuming perfect gas:; ![image](https://user-images.githubusercontent.com/74228020/135700745-843827fc-3b3c-4e4e-8d25-fd501d39f238.png); and temperature is ; ![image](https://user-images.githubusercontent.com/74228020/135700969-8c5b23b2-e6ae-42fc-a45f-949e455e2791.png); Pressure is function of density but temperature is not. I guess that's why temperature looks good. However, I don't know why momentum has no problem.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1373#issuecomment-932666689:120,energy,energy,120,https://su2code.github.io,https://github.com/su2code/SU2/issues/1373#issuecomment-932666689,2,"['Energy', 'energy']","['Energy', 'energy']"
Energy Efficiency,"What about the following?. - Find out the lowest rank that calls the error handler.; - Only this rank writes the error message. The tricky part of course is how to find out this lowest rank. A possible solution would be (although I am open for alternatives here). - The ranks in the error handler send out messages with a very specific tag to all other ranks.; - The ranks in the error handler attempt to receive messages for a certain amount of time or until all messages have been received. Typically MPI_Iprobe would be used for this purpose.; - Keep track of the lowest rank from which an actual message was received. This may not be very efficient, but you don't care here. Furthermore, not all messages will be received if not all ranks call the error handler. Again, you don't care, because the computation is killed afterwards.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/564#issuecomment-415937480:643,efficient,efficient,643,https://su2code.github.io,https://github.com/su2code/SU2/issues/564#issuecomment-415937480,1,['efficient'],['efficient']
Energy Efficiency,"When monitoring the forces on a large number of markers, the output won’t fit in the buffer(s), and this causes memory issues: the code either hangs, has a buffer overflow, or segfaults depending on the compiler, etc. As a temporary fix, the monitoring_coeff[] buffer has been increased, but this should be remedied asap.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/66:5,monitor,monitoring,5,https://su2code.github.io,https://github.com/su2code/SU2/issues/66,1,['monitor'],['monitoring']
Energy Efficiency,"While `SU2_CFD` has been made to use binary restart files by default, the `SU2_MSH` code has not been updated to be compatible with binary restarts. If a grid adaptation strategy requires a solution (as in `GRAD_FLOW`), then `SU2_MSH` tries to read from the restart file. This is handled by `CGridAdaptation::GetFlowSolution`. If you look into the code, you'll notice that it's still set up for ASCII restart files. There's no check for binary restarts, and no ability to load a binary restart. The code tries to read the binary file as an ASCII file without complaint. A brief check on my part confirmed that ASCII restart files work with `SU2_MSH`, but binary restart files do not. This bug results in errors that are not caught by the program, as seen in Issue #606.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/610:159,adapt,adaptation,159,https://su2code.github.io,https://github.com/su2code/SU2/issues/610,1,['adapt'],['adaptation']
Energy Efficiency,"While doing some simulations with the version 6.2.0, I found a strange behaviour on the pressure field.; The test case is a naca0012 at AoA=0°, M=0.7, Re=9e6.; When running with SST turbulence model, the pressure field in the ""boundary layer region"" is not constant. Using SA turbulence model, this behaviour is not shown. It looks like the tubulent kinetic energy field affect the computation of pressure field, leading to a non zero gradient pressure at wall, as shown in the attached figures:. In the figures it can be seen a comparison between the in-house solver of the Italian Aerospace Research Center (CIRA), where SST model is implemented, and SU2 using both available turbulence models, SST and SA. The isolines represent the pressure field and the contour is the TKE field obtained with SU2 with SST. In particular, solid red line is CIRA solver, the solid black line is SU2-SST, and dashed black line is SU2-SA. Near the LE where TKE is 0, the isolines are similar and 0 pressure gradient at the wall is obtained with both turbulence models. When TKE starts to grow, the pressure computed with SU2-SST shows a non constant behaviour and at the wall has non 0 gradient. Furthermore, in the wake region the defect is more evident. Leading edge detail:; ![cp_tke_detail_Le](https://user-images.githubusercontent.com/36844965/66407922-53448b00-e9ee-11e9-877d-88ace3a222fb.png). Detail at 30% of the chord length:; ![cp_tke_detail_1](https://user-images.githubusercontent.com/36844965/66407921-53448b00-e9ee-11e9-8a22-87106066984b.png). Wake region detail:; ![cp_tke_detail_wake](https://user-images.githubusercontent.com/36844965/66407920-53448b00-e9ee-11e9-92ad-b770e0ac5743.png). Has anyone found previously this behaviour? Could it depend on the set up that I have used? . I attach the grid and configurations files.; [grid_and_conf_files.zip](https://github.com/su2code/SU2/files/3703135/grid_and_conf_files.zip). Thanks in advance.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/797:358,energy,energy,358,https://su2code.github.io,https://github.com/su2code/SU2/issues/797,1,['energy'],['energy']
Energy Efficiency,"Would it be possible to add a 3D example of RANS, SST model with wind tunnel (6 walls) and an obstacle to simulate wind flow?. Ultimately I'd like to see how to retrieve resulting pressures on a surface from the model, after providing inlet flow. I've tried adapting Multiphysics FSI 2D model with no luck, too many possible input issues on my end, and the SU2_CFD executable reports no errors when loading config, just finishes with no output or results. Meshes I've tried were generated from GMSH (tets for wind tunnel volume and tri for obstacle as a planar surface). I'm a new user so please excuse my lack of knowledge using SU2. An example would be great help! Thanks!",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/2261:258,adapt,adapting,258,https://su2code.github.io,https://github.com/su2code/SU2/issues/2261,1,['adapt'],['adapting']
Energy Efficiency,"YES! I am excited to try this out. I can probably test it on some of the other TMR cases (airfoils, flatplates). Will post the results when I get those done. . Side note, there was one issue that @bmunguia and I encountered when performing optimizations with adaptive CFL. Say the DIRECT simulation is run with adaptive CFL and is well converged (6 to 8 orders of residual reduction). When the discrete adjoint performs the one direct iteration to store the computational graph, it uses the initial CFL value, not the CFL that the adaptive CFL routine ended at. This results in the residuals being very high for that one iteration, which then affects the convergence of the discrete adjoint. . I will try to run an adjoint on one of these cases as well to see if the problem persists. Perhaps could be overcome with a simple additional field for CFL in the restart meta-data",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/790#issuecomment-531520526:259,adapt,adaptive,259,https://su2code.github.io,https://github.com/su2code/SU2/pull/790#issuecomment-531520526,6,['adapt'],['adaptive']
Energy Efficiency,"Yeah the config is a bit confusing. The initial CFD run (in adap/ini) uses the value specified in ITER (unless RESTART_SOL= YES, then it runs one iteration just to get force coefficients). . After that, it runs a series of adaptations based on the settings in PYADAP_SUBITE, PYADAP_FLOW_ITER, and PYADAP_COMPLEXITY. . 1. AMG interpolates the solution; 2. A simulation is run for PYADAP_FLOW_ITER[0] iterations (2999 in your case); 3. An adaptation is performed with a target size of PYADAP_COMPLEXITY[0] (20000 in your case). This is done PYADAP_SUBITE[0] times. Then it moves on to the next mesh level. I admit that I haven't really debugged the feature-based (e.g. Mach-based) adaptation much. I found a couple bugs in the python scripts and just updated them, so could you pull again and rerun ninja?. The AMG output is pretty long, but since it's developed at Inria, I don't have any control over that. I guess as long as none of the lines are error statements (usually complaining about invalid projections or negative eigenvalues of the metric from my experience) it should be fine. The only actual information I get from amg.log is usually in the last line; ```; NbSensor 30518 msh->npobk 30518 NbrTyp 19 msh->npoin 52477; ```; which just tells you how many points are in the old vs. new mesh, but you could just look at the .su2 files for that. Another important note is that the python version of AMG currently only supports triangle and tetrahedral volume elements.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/948#issuecomment-619584815:223,adapt,adaptations,223,https://su2code.github.io,https://github.com/su2code/SU2/issues/948#issuecomment-619584815,3,['adapt'],"['adaptation', 'adaptations']"
Energy Efficiency,"Yeah... It sounded more like an hardware limitation than a software implementation (mpi) issue. About the hybrid solver, you are running into load balancing issues (there are more threads than work packets, i.e. edge groups) it will be better for larger meshes, and maybe an 8x8 division works better than 4x16.; As you are using JST you can also try running at higher CFL to shift work to the linear solver which has no load balancing issues regardless of the group size parameter (the adaptive CFL mode may be necessary to get through the initial transient). Let us know if the new hardware solves the problem.; I will let you know via this issue when we have a release where the hybrid implementation might scale better on unstructured grids.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/894#issuecomment-593573398:487,adapt,adaptive,487,https://su2code.github.io,https://github.com/su2code/SU2/issues/894#issuecomment-593573398,1,['adapt'],['adaptive']
Energy Efficiency,"Yep! this is a good idea. > On Oct 27, 2014, at 9:51 AM, Thomas D. Economon notifications@github.com wrote:; > ; > After removing the local surface element area from the calculation, it results in viewing a map of change in the objective (e.g. drag) per 1 square meter w/ a 1 meter deflection at all nodes (for SI units). Makes it easier to see where the geometry is most sensitive.; > ; > —; > Reply to this email directly or view it on GitHub https://github.com/su2code/SU2/issues/123.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/123#issuecomment-60627853:263,meter,meter,263,https://su2code.github.io,https://github.com/su2code/SU2/issues/123#issuecomment-60627853,2,['meter'],['meter']
Energy Efficiency,Yes I get that now and I am doing it exactly like that. For this one I thought I leave it. I tried to do a rebase of my develop to remove older commits from this PR but then git was telling me it was not able to include all the following commits including merges etc so I aborted. . From now on for any fix I would branch every time anew from my develop (which is a copy of su2code +this PR). I also do the same for my own development and then merge any fix branches I need into that. If later you don't merge those fixes because that part of the code is revamped anyway I will bin that branch and redo it on top of your new structure as that would probably be better anyway and just in case I ever want to propose those own developments to su2code. I will watch and adapt. Hope that's fine for now but let me me if you want me to redo or rebase anything for this PR,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/927#issuecomment-612613571:767,adapt,adapt,767,https://su2code.github.io,https://github.com/su2code/SU2/pull/927#issuecomment-612613571,1,['adapt'],['adapt']
Energy Efficiency,"Yes, I set separate markers. I don't think that mesh nodes aren't unchanged, but the edge topology is respected. You are right also when you refer to departure from the design shape (mostly driven by excessively big TRIAS on the surface; I suspect all the surface nodes still lay on the original, initialization surface mesh); there is still departure.; I tried to reduce the `PYADAP_HMAX` but as it affects all the mesh (including volume elements), in order to reach the desired refinement on the surface, the number of cells easily explodes. > If I set this limit to less than the average surface mesh cell size, will it attempt to refine everything over the limit instantly? Or will it only use the limit for 'new' cells that are generated during adaptation? Thanks for your thoughts. I believe it will affect all the mesh, but yet again, it may be also influenced by the numbers of `PYADAP_SUBITE` specified in the config file. It would be great to have different parameters for volume mesh dimensions and surface mesh dimensions.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/948#issuecomment-764931621:365,reduce,reduce,365,https://su2code.github.io,https://github.com/su2code/SU2/issues/948#issuecomment-764931621,2,"['adapt', 'reduce']","['adaptation', 'reduce']"
Energy Efficiency,"Yes, the new jacobian implementation is less diffusive. Besides this, the low Mach number correction also results in less diffusive, final, formulation (as Tornber says in his paper). I expect this to result in reduced stability when the flow has very sharp discontinuities, like the contact surface between the recirculation zone and the external flow, since they are better captured.; I have made some modification to my implementation and now it works also for this test case (though CFL has to be lowered from 4.0 to 2.0, as I was expecting, to make it eventually converge).; If this looks good to you, I'll change the CFL number and push it to the repo. Regards,; Giulio",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/232#issuecomment-185308834:211,reduce,reduced,211,https://su2code.github.io,https://github.com/su2code/SU2/pull/232#issuecomment-185308834,1,['reduce'],['reduced']
Energy Efficiency,"You're right about that bug with vel_i_corr. Thanks for finding it, I'll submit a correction. Yes, it's possible to modify the config file so that your implementation works. But is this simply masking the problem of reduced stability? Do you expect the direct formulation to be less stable? And do the benefits of the direct formulation make the loss of stability worthwhile? If so, then I think you should change the config file. I hope this answers your question, I'm not sure if I understood it correctly. Regards,; Daniel",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/232#issuecomment-182655391:216,reduce,reduced,216,https://su2code.github.io,https://github.com/su2code/SU2/pull/232#issuecomment-182655391,2,['reduce'],['reduced']
Energy Efficiency,"You've got two options:. 1. Use the cfg option `WRT_BINARY_RESTART= NO` to dump the restart file(s) in human-readable ASCII.; 2. Use the cfg option `OUTPUT_FORMAT= TECPLOT` or `OUTPUT_FORMAT=PARAVIEW` with SU2_SOL to export the solution to an ASCII-formatted tecplot or paraview file. If you're not familiar with SU2_SOL, then check out [the documentation](https://su2code.github.io/docs/Post-processing/). You can find those cfg options in `config_template.cfg` in the root SU2 source code directory. In the end, using the tecplot or paraview option may be your best bet. Trying to manually parse the text files smells like an [XY Problem](https://en.wikipedia.org/wiki/XY_problem). Tecplot and Paraview both have scripting capabilities that make post-processing very efficient. Does that answer your question? Do you have any follow-up concerns?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/787#issuecomment-528435629:769,efficient,efficient,769,https://su2code.github.io,https://github.com/su2code/SU2/issues/787#issuecomment-528435629,1,['efficient'],['efficient']
Energy Efficiency,"You've got two options:. 1. Use the cfg option `WRT_BINARY_RESTART= NO` to dump the restart file(s) in human-readable ASCII.; 2. Use the cfg option `OUTPUT_FORMAT= TECPLOT` or `OUTPUT_FORMAT=PARAVIEW` with SU2_SOL to export the solution to an ASCII-formatted tecplot or paraview file. If you're not familiar with SU2_SOL, then check out [the documentation](https://su2code.github.io/docs/Post-processing/). You can find those cfg options in `config_template.cfg` in the root SU2 source code directory. In the end, using the tecplot or paraview option may be your best bet. Trying to manually parse the text files smells like an [XY Problem](https://en.wikipedia.org/wiki/XY_problem). Tecplot and Paraview both have scripting capabilities that make post-processing very efficient. Does that answer your question? Do you have any follow-up concerns?. _Originally posted by @clarkpede in https://github.com/su2code/SU2/issues/787#issuecomment-528435629_",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1034:769,efficient,efficient,769,https://su2code.github.io,https://github.com/su2code/SU2/issues/1034,1,['efficient'],['efficient']
Energy Efficiency,[Feature / Option] Vorticity Confinement (VC) technique to reduce numerical diffusion,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1854:59,reduce,reduce,59,https://su2code.github.io,https://github.com/su2code/SU2/pull/1854,1,['reduce'],['reduce']
Energy Efficiency,"[case728.txt](https://github.com/su2code/SU2/files/4793965/case728.txt). I am running a shape optimization of a single blade row stator with an FFD box of degree (5 , 11, 2). The max deformation is of the order 1E-5. The change in mesh visually is very minimal but after SU2 deforms the mesh it generates negative volumes and a negative Jacobian. It is also happening if I use only one DV in the optimization. As a result my DSN_002 DIRECT results are all diverging. In the image, the red box is the deformed box and the green one is the undeformed box. You can also see the blade. The number of nodes are just shy of 1 million in the whole volume mesh. ![untitled](https://user-images.githubusercontent.com/46273732/84716054-2747b500-af40-11ea-9877-3f229a8957ce.png). SU2 mesh stats for DSN001:; Computing mesh quality statistics for the dual control volumes.; +--------------------------------------------------------------+; | Mesh Quality Metric| Minimum| Maximum|; +--------------------------------------------------------------+; | Orthogonality Angle (deg.)| 52.4241| 89.9962|; | CV Face Area Aspect Ratio| 1.02662| 2123.48|; | CV Sub-Volume Ratio| 1.00007| 3.63253|; +--------------------------------------------------------------+. SU2_mesh stats for DSN002:; Computing mesh quality statistics for the dual control volumes.; +--------------------------------------------------------------+; | Mesh Quality Metric| Minimum| Maximum|; +--------------------------------------------------------------+; | Orthogonality Angle (deg.)| -42.6863| 89.9963|; | CV Face Area Aspect Ratio| 1.02903| 31868.8|; | CV Sub-Volume Ratio| 1.00034| 40627.1|; +--------------------------------------------------------------+. From Tecplot I can calculate that the cell volumes and the Jacobian is also negative for DSN002 for some cells. I believe if I reduce my OPT_RELAX_FACTOR I can have deformations of the O(-6) but isn't this already too small. Are there any parameters I can change in the config file to av",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1026:521,green,green,521,https://su2code.github.io,https://github.com/su2code/SU2/issues/1026,1,['green'],['green']
Energy Efficiency,"_j[iVar] = phiMax(jPoint,iVar);; }. const double eps = numeric_limits<double>::epsilon();. // very simple if's are required to get vectorization; // trough vector comparisons and masked blends; #pragma omp simd; for(size_t iVar=0; iVar<nVar; ++iVar); {; if(proj_i[iVar] <= 0.0); {; lim_i[iVar] = phiMin(iPoint,iVar);; proj_i[iVar] = min(proj_i[iVar], -eps);; }. if(proj_j[iVar] <= 0.0); {; lim_j[iVar] = phiMin(jPoint,iVar);; proj_j[iVar] = min(proj_j[iVar], -eps);; }; }. #pragma omp simd; for(size_t iVar=0; iVar<nVar; ++iVar); {; lim_i[iVar] = (lim_i[iVar]-phi(iPoint,iVar))/proj_i[iVar];; limiter(iPoint,iVar) = min(limiter(iPoint,iVar), lim_i[iVar]);. lim_j[iVar] = (lim_j[iVar]-phi(jPoint,iVar))/proj_j[iVar];; limiter(jPoint,iVar) = min(limiter(jPoint,iVar), lim_j[iVar]);; }; }. #pragma omp parallel for schedule(dynamic,TARGET_CHUNK_SIZE); for(size_t iPoint=0; iPoint<nPoint; ++iPoint); {; #pragma omp simd; for(size_t iVar=0; iVar<nVar; ++iVar); {; double lim = limiter(iPoint,iVar);; limiter(iPoint,iVar) = lim*(lim+2)/(lim*lim+lim+2);; }; }; }; ```; Again to keep things short here is the parallel and SIMD point-loop version (like for gradients it is very similar to the scalar and sequential version).; ```C++; void computeLimiters(size_t nPoint,; size_t nVar,; size_t nDim,; const Adjacency<4>& adj,; const Matrix& coords,; const Matrix& phi,; const VectorOfMatrix& grad,; Matrix& limiter); {; const size_t SIMDLEN = 4;; using FltVec = Array<double,SIMDLEN>;. // working variables; FltVec phiMax[MAXNVAR], phiMin[MAXNVAR], prjMax[MAXNVAR], prjMin[MAXNVAR];. const double eps = numeric_limits<double>::epsilon();. #pragma omp parallel for schedule(dynamic,128) private(phiMax,phiMin,prjMax,prjMin); for(size_t iPoint=0; iPoint<nPoint; iPoint+=SIMDLEN); {; for(size_t iVar=0; iVar<nVar; ++iVar); {; phiMin[iVar] = phiMax[iVar] = phi.getVec(iPoint,iVar);; prjMax[iVar] = eps;; prjMin[iVar] = -eps;; }. for(size_t iNeigh=0; iNeigh<adj.nNeighbor(iPoint); ++iNeigh); {; auto jPoint = adj.jPoi",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/789#issuecomment-530593912:7069,schedul,schedule,7069,https://su2code.github.io,https://github.com/su2code/SU2/issues/789#issuecomment-530593912,2,['schedul'],['schedule']
Energy Efficiency,"a for those inserts will be in a slightly weird format, which will make `SparseMatrix::updateBlocks` a bit harder on the eye, more on that later._. ## MUSCL Reconstruction; The MUSCL reconstruction, characteristic of upwind schemes, is the simplest building block to show the (negative) implications of storing the data as structures of arrays (SoA) on the performance of some operations.; Here is the most basic numerics you can think of, reconstruct and average (the dummy matrix loop was to benchmark the writes this is to benchmark the reads); ```c++; void computeResidual(size_t nVar,; size_t nDim,; const vector<size_t>& colorStart,; const vector<size_t>& edgeIdx,; const vector<pair<size_t,size_t> >& connectivity,; const Matrix& coords,; const Matrix& phi,; const VectorOfMatrix& grad,; const Matrix& limiter,; Matrix& residual); {; residual.setZero();. for(size_t color=0; color<colorStart.size()-1; ++color); #pragma omp parallel for schedule(dynamic,CHUNK_SIZE); for(size_t k=colorStart[color]; k<colorStart[color+1]; ++k); {; size_t iEdge = edgeIdx[k];; size_t iPoint = connectivity[iEdge].first;; size_t jPoint = connectivity[iEdge].second;. double d_ij[MAXNDIM];; for(size_t iDim=0; iDim<nDim; ++iDim); d_ij[iDim] = 0.5*(coords(jPoint,iDim)-coords(iPoint,iDim));. for(size_t iVar=0; iVar<nVar; ++iVar); {; double phiL = phi(iPoint,iVar);; double phiR = phi(jPoint,iVar);. for(size_t iDim=0; iDim<nDim; ++iDim); {; phiL += limiter(iPoint,iVar)*grad(iPoint,iVar,iDim)*d_ij[iDim];; phiR -= limiter(jPoint,iVar)*grad(jPoint,iVar,iDim)*d_ij[iDim];; }. double flux = 0.5*(phiL+phiR);. residual(iPoint,iVar) += flux;; residual(jPoint,iVar) -= flux;; }; }; }; ```; after vectorizing this to handle multiple edges simultaneously with the SIMD-friendly type the core of the loop becomes; ```c++; using FltVec = Array<double,SIMDLEN>;; ... FltVec d_ij[MAXNDIM];; for(size_t iDim=0; iDim<nDim; ++iDim); d_ij[iDim] = (coords.getVec(jPoint,iDim)-coords.getVec(iPoint,iDim))*0.5;. for(size_t iVar=0; iV",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/789#issuecomment-535977206:6384,schedul,schedule,6384,https://su2code.github.io,https://github.com/su2code/SU2/issues/789#issuecomment-535977206,2,['schedul'],['schedule']
Energy Efficiency,"aafbbc60 <ompi_mpi_comm_world>); at ../SU2_CFD/src/drivers/../../include/drivers/../../../Common/include/parallelization/mpi_structure.hpp:205; #5 0x00000000004b0ef3 in CSysVector<double>::dot<CSysVector<double> > (; this=0x23a20d0, expr=...); at ../SU2_CFD/src/integration/../../include/integration/../solvers/../../../Common/include/linear_algebra/CSysVector.hpp:317; #6 0x00000000004b0dcf in CSysVector<double>::squaredNorm (this=0x23a20d0); at ../SU2_CFD/src/integration/../../include/integration/../solvers/../../../Common/include/linear_algebra/CSysVector.hpp:331; ---Type <return> to continue, or q <return> to quit---; #7 0x00000000004b0cf0 in CSysVector<double>::norm (this=0x23a20d0); at ../SU2_CFD/src/integration/../../include/integration/../solvers/../../../Common/include/linear_algebra/CSysVector.hpp:337; #8 0x0000000000da260b in CSysSolve<double>::BCGSTAB_LinSolver (; this=0x23a2240, b=..., x=..., mat_vec=..., precond=..., ; tol=1.0000000000000001e-15, m=20, residual=@0x7fffffff8fb8: 0, ; monitoring=false, config=0x209bc10); at ../Common/src/linear_algebra/CSysSolve.cpp:553; #9 0x0000000000da404a in CSysSolve<double>::Solve (this=0x23a2240, ; Jacobian=..., LinSysRes=..., LinSysSol=..., geometry=0x2105400, ; config=0x209bc10) at ../Common/src/linear_algebra/CSysSolve.cpp:883; #10 0x00000000007b69da in CHeatSolver::ImplicitEuler_Iteration (; this=0x23a1de0, geometry=0x2105400, solver_container=0x23a1d70, ; config=0x209bc10) at ../SU2_CFD/src/solvers/CHeatSolver.cpp:1528; #11 0x0000000000b5a666 in CIntegration::Time_Integration (this=0x270d150, ; geometry=0x2105400, solver_container=0x23a1d70, config=0x209bc10, ; iRKStep=0, RunTime_EqSystem=21); at ../SU2_CFD/src/integration/CIntegration.cpp:205; #12 0x00000000004a2973 in CSingleGridIntegration::SingleGrid_Iteration (; this=0x270d150, geometry=0x2005130, solver_container=0x20058c0, ; numerics_container=0x20063b0, config=0x1de0e00, RunTime_EqSystem=21, ; iZone=1, iInst=0); at ../SU2_CFD/src/integration/CSingleGridI",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1241:6078,monitor,monitoring,6078,https://su2code.github.io,https://github.com/su2code/SU2/issues/1241,1,['monitor'],['monitoring']
Energy Efficiency,"ach number flat plate case. The flow condition is below. Temperature (K) | Unit Re (1/m) | Mach | Pressure | Wall Temperature(K); -- | -- | -- | -- | --; 800 | 4.9×10^6 | 6.1 | 12100 | 300. After calculation, I check the flow field, including the boundary. But, the inlet boundary is not the same flow conditions I imposed. ; Here is the comparison of other models using the same flow conditions. . ![image](https://user-images.githubusercontent.com/50565314/208847631-a3ced0ab-7a70-45ee-b67e-41314b2ddfb1.png). ![image](https://user-images.githubusercontent.com/50565314/208847743-6f08eb96-ea5e-4ac5-a50a-0d980f33c547.png). So, I tried to find the cause. . When deriving the RANS equation from the energy equation, the turbulent kinetic energy(TKE) is derived from the kinetic energy of Total Energy(E) as shown below.; ![image](https://user-images.githubusercontent.com/50565314/208849564-da4f1b0a-ff2f-4732-911a-b1ed2a4ca1c8.png). In the boundary condition and initialization part, k is considered depending on whether or not the SST model is used for Total Energy. In CEulerSolver.cpp ; `bool tkeNeeded = (turbulent && config->GetKind_Turb_Model() == TURB_MODEL::SST);`; `if (tkeNeeded) { Energy_FreeStream += Tke_FreeStream; }; config->SetEnergy_FreeStream(Energy_FreeStream);`; `if (tkeNeeded) Energy_FreeStreamND += Tke_FreeStreamND;`. But In the flux calculation part, when calculating the speed of sound(a), using the total enthalpy(H). But, in this part consider only the kinetic energy. . Expressed mathematically ; ![image](https://user-images.githubusercontent.com/50565314/208861650-92b8cad6-5a1f-4742-952b-30d0187ae28b.png). but in the SU2 code using below. ![image](https://user-images.githubusercontent.com/50565314/208861902-ff614d53-d07e-4237-a04d-73a49ad5a55c.png). The speed of sound always has a slightly high value because TKE is not subtracted. See ""roe.cpp"" line 119 ~ 149. ; `RoeSoundSpeed2 = (Gamma-1)*(RoeEnthalpy-0.5*sq_vel);` ; This line might be changed roughly like : ;",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1851:1160,Energy,Energy,1160,https://su2code.github.io,https://github.com/su2code/SU2/issues/1851,1,['Energy'],['Energy']
Energy Efficiency,"amg_python : ; ; #--- Load su2 mesh ; mesh = su2amg.read_mesh(current_mesh, current_solution); ; #--- If not using the amg python interface, convert the mesh and make system call; ; su2amg.write_mesh(""current.meshb"", ""current.solb"", mesh); ; if not os.path.exists(""current.solb""):; raise RuntimeError , ""\n##ERROR : Can't find solution.\n""; if not os.path.exists(""current.meshb""):; raise RuntimeError , ""\n##ERROR : Can't find mesh.\n""; ; #--- Get sensor; ; sensor = su2amg.create_sensor(mesh, adap_sensor); su2amg.write_solution(""current_sensor.solb"", sensor); ; if not os.path.exists(""current_sensor.solb""):; raise RuntimeError , ""\n##ERROR : Can't find adap sensor.\n""; ; #--- Run amg; ; sys.stdout.write(""Running amg. Log : %s\n"" % config_amg['amg_log']); ; if os.path.exists(""current.itp.solb""):; os.remove(""current.itp.solb""); ; try :; su2amg.amg_call(config_amg); except:; raise RuntimeError , ""\n##ERROR : Call to AMG failed.\n""; ; if not os.path.exists(config_amg['mesh_out']):; raise RuntimeError , ""\n##ERROR : Mesh adaptation failed.\n""; ; if not os.path.exists(""current.itp.solb""):; raise RuntimeError , ""\n##ERROR AMG: Solution interpolation failed.\n"" ; ; #--- Convert output from Inria mesh format to su2; # Deal with markers; ; save_markers = mesh['markers']; del mesh; ; # Read Inria mesh; mesh = su2amg.read_mesh(config_amg['mesh_out'], ""current.itp.solb""); mesh['markers'] = save_markers; ; current_mesh = ""ite%d.su2"" % global_iter; current_solution = ""ite%d.dat"" % global_iter ; ; su2amg.write_mesh(current_mesh, current_solution, mesh); ; if not os.path.exists(current_mesh) or not os.path.exists(current_solution) :; raise RuntimeError , ""\n##ERROR : Conversion to SU2 failed.\n"". else : # Use pyAmg interface; ; ; #--- Load su2 mesh ; ; mesh = su2amg.read_mesh(current_mesh, current_solution); ; #--- Create sensor used to drive the adaptation; ; sensor_wrap = su2amg.create_sensor(mesh, adap_sensor); ; mesh['sensor'] = sensor_wrap['solution']; ; sys.stdout.write(' %s Genera",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/606#issuecomment-504636643:9384,adapt,adaptation,9384,https://su2code.github.io,https://github.com/su2code/SU2/issues/606#issuecomment-504636643,1,['adapt'],['adaptation']
Energy Efficiency,"ariable, which means there will be no penalty to scalar code, new overloads for accessor methods will be required to set/get SIMD-arrays of data instead of scalars.; - The geometric properties and graph information associated with CGeometry will require the same contiguous storage treatment received by CVariable.; - Linear algebra, dimension-specific multiplication kernels with manual low level optimisations (unrolling, vectorization through intrinsics, and software prefetching), complex code but encapsulated in a low maintenance area of the code. **General improvements**; - Fusing convective and viscous residual loops, this will NOT be done by super gluing convective and viscous numerics. I do not have a concrete design in mind yet but I hope to be able to do something akin to the *decorator* pattern I mentioned before. I also plan to make the numerics a full-fledged *visitor* to reduce compilation dependencies, currently a change to numerics may affect CVariable CSolver and CNumerics (as mentioned by @clarkpede), CSolver is involved because it is responsible for fetching data, I may move that to CNumerics, which would let them fetch data as needed.; - Lookup accesses to CSysMatrix to avoid linear searches, the small increase in memory usage can be mitigated by sharing these lookup tables/arrays and the sparsity pattern between matrices associated with the same geometry (on the subject of these lookup tables, knowing where the diagonal of a row is should enable more efficient upper/lower multiplications). ## Work items; This is a lot of work and some changes will be significant, I will divide the work in steps, off the top of my head this order seems ok:; - CSysMatrix lookups and any required parallel pragmas put in place.; - Point-loop gradients and limiters, no SIMD (at which point I hope #777 to be finished so the next item does not disrupt it).; - Split CSolvers over multiple files, colour-based parallel residual loops (at this point we have hybrid parallel!).;",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/789#issuecomment-539523312:3270,reduce,reduce,3270,https://su2code.github.io,https://github.com/su2code/SU2/issues/789#issuecomment-539523312,1,['reduce'],['reduce']
Energy Efficiency,"at using GitHub, so I'm sorry for this situation. My remote repository(forked) is not synchronized with v7.40, and I don't know what the problem is. So, I will delete the forked repository and fork it again to PR with the same name and content. Fortunately, the LM model updated to v7.40 obtained the same residuals and results as the previous v7.3.1. ## Current State . Code is well running and, validation is almost done. V&V cases: T3A, T3A-, NLF. Flow conditions are the reference from: https://doi.org/10.2514/6.2022-3679. The grids of T3A and NLF cases are provided by [TMW](https://transitionmodeling.larc.nasa.gov/workshop_i/)(Transition Model Workshop). And I made the grid of T3A- myself. To validate the LM model, the simulation results of SU2 are compared with the results of Fluent19.0 with a similar numerical setting. Here is the numerical scheme : . <html xmlns:m=""http://schemas.microsoft.com/office/2004/12/omml""; xmlns=""http://www.w3.org/TR/REC-html40"">. <head>. <meta name=ProgId content=PowerPoint.Slide>; <meta name=Generator content=""Microsoft PowerPoint 15"">. <!--tr; 	{mso-height-source:auto;}; col; 	{mso-width-source:auto;}; td; 	{padding-top:1.0px;; 	padding-right:1.0px;; 	padding-left:1.0px;; 	mso-ignore:padding;; 	color:windowtext;; 	font-size:18.0pt;; 	font-weight:400;; 	font-style:normal;; 	text-decoration:none;; 	font-family:Arial;; 	mso-generic-font-family:auto;; 	mso-font-charset:0;; 	text-align:general;; 	vertical-align:bottom;; 	border:none;; 	mso-background-source:auto;; 	mso-pattern:auto;}; .oa1; 	{border:1.0pt solid black;; 	vertical-align:top;; 	padding-bottom:3.6pt;; 	padding-left:7.2pt;; 	padding-top:3.6pt;; 	padding-right:7.2pt;}; .oa2; 	{border:1.0pt solid black;; 	text-align:center;; 	vertical-align:top;; 	padding-bottom:3.6pt;; 	padding-left:7.2pt;; 	padding-top:3.6pt;; 	padding-right:7.2pt;}; -->. </head>. <body>; <!--StartFragment-->.   | Fluent | SU2; -- | -- | --; Flux | Roe-FDS | L2ROE; Gradient | Least Squares Cell Based | WEIGHTED",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1751:1293,Power,PowerPoint,1293,https://su2code.github.io,https://github.com/su2code/SU2/pull/1751,1,['Power'],['PowerPoint']
Energy Efficiency,"ations diverged after a while. . I am not sure if I used a correct way for the fixed-Cl computations (no optimization and design needed). I know some reported research did use SU2 for DPW6 cases with fixed-Cls. . Thank you very much!. Wei. **To Reproduce**; *Please provide a config file and mesh for a minimal example that recreates the problem.*. %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%; % %; % SU2 configuration file %; % Case description: CRM model for S&C workshop %; % Author: %; % Institution: %; % Date: %; % File Version 7.1.1 ""Blackbird"" %; % %; %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%. % ------------- DIRECT, ADJOINT, AND LINEARIZED PROBLEM DEFINITION ------------%; %; % Physical governing equations (EULER, NAVIER_STOKES,RANS,; % WAVE_EQUATION, HEAT_EQUATION, FEM_ELASTICITY,; % POISSON_EQUATION) ; SOLVER= RANS; %; % Specify turbulence model (NONE, SA, SA_NEG, SST); KIND_TURB_MODEL= SST; %; % Mathematical problem (DIRECT, CONTINUOUS_ADJOINT, DISCRETE_ADJOINT); MATH_PROBLEM= DIRECT; %; % Restart solution (NO, YES); RESTART_SOL= YES; %; % System of measurements (SI, US); % International system of units (SI): ( meters, kilograms, Kelvins,; % Newtons = kg m/s^2, Pascals = N/m^2, ; % Density = kg/m^3, Speed = m/s,; % Equiv. Area = m^2 ); % United States customary units (US): ( inches, slug, Rankines, lbf = slug ft/s^2, ; % psf = lbf/ft^2, Density = slug/ft^3, ; % Speed = ft/s, Equiv. Area = ft^2 ); SYSTEM_MEASUREMENTS= US. % -------------------- COMPRESSIBLE FREE-STREAM DEFINITION --------------------%; %; % Mach number (non-dimensional, based on the free-stream values); MACH_NUMBER= 0.7; %; % Angle of attack (degrees, only for compressible flows); AOA= 3.6; %; % Side-slip angle (degrees, only for compressible flows); SIDESLIP_ANGLE= 1.0; %; % Free-stream temperature (518.67 R by default); FREESTREAM_TEMPERATURE= 559.67; %; % Reynolds number (non-dimensional, based on the free-stream valu",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1297:1786,meter,meters,1786,https://su2code.github.io,https://github.com/su2code/SU2/issues/1297,1,['meter'],['meters']
Energy Efficiency,"be the bug**. If I set EQUIV_AREA to YES and prepare necessary near-field boundary marker in version 6.2.0, nearfield_flow.dat and Equivalent_Area.dat are output but not in version 7.0.0 anymore. I did some investigation in the code. nearfield_flow.dat and Equivalent_Area.dat seem to be output by the code below in output_structure_legacy.cpp.; `void COutputLegacy::SpecialOutput_SonicBoom`. It is called out in `void COutputLegacy::SetConvHistory_Body` in output_structure_legacy.cpp. It is then called out in the following lines in CDriver.cpp but none of them seems to be for sonicboom case, which I think is the cause for this bug.; `output_legacy->SetConvHistory_Body(&ConvHist_file[iZone][iInst], geometry_container, solver_container,`; `output_legacy->SetConvHistory_Body(&ConvHist_file[iZone][iInst], geometry_container, solver_container,`; `output_legacy->SetConvHistory_Body(NULL, geometry_container, solver_container, config_container,`. In version 6.2.0, `bool CDriver::Monitor(unsigned long ExtIter)` in driver_structure.cpp had `output->SetConvHistory_Body` and I think this was eventually calling out `SpecialOutput_SonicBoom`. I think this function has been accidentally removed by the change below but I'm not sure how to fix it.; https://github.com/su2code/SU2/pull/724 . It would be great if sonicboom case is included in the regression test of test cases. ""biparabolic"" uses this feature but does not seem to be included in the regression test. This test case does not converge at least on my computer though. **To Reproduce**. [v7_sonicboom.zip](https://github.com/su2code/SU2/files/3968025/v7_sonicboom.zip); NACA64206_sonicboom_v6.cfg is a config file for version 6.; NACA64206_sonicboom_v7.cfg is a config file for version 7.; The mesh file is common for both cases. **Desktop (please complete the following information):**; - OS: Linux (Ubuntu 18.04.3 LTS); - C++ compiler and version: g++ 7.4.0; - MPI implementation and version: OpenMPI 2.1.1; - SU2 Version: v6.2.0 and v7",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/841:991,Monitor,Monitor,991,https://su2code.github.io,https://github.com/su2code/SU2/issues/841,1,['Monitor'],['Monitor']
Energy Efficiency,"calZonesDriver) to specify the physics (e.g. which zones are fluids, which are solids) without a bunch of a priori or 'hard coded' assumptions. I intend to develop it further in near future which basically means to incorporate the existing sorts of interfaces (mixing plane, FSI, .. maybe it works out).; 1. A new finite-volume-based heat solver (CHeatSolverFVM). It can be run stand-alone in solids for pure heat conduction or weakly coupled to the incompressible mean flow solver.; 1. A new CTransfer child class (CTransfer_ConjugateHeatVars) to exchange CHT-related interface information. Most of these commits do not touch existing code but just use it. Exceptions are:; 1. Quite a few config options.; 1. A small new data structure in CDriver to store types of interfaces that is used by CMultiPhysicalZonesDriver. Some additions in **Interface_Preprocessing**.; 1. A change of **SetCFL_Number** so that the CFL adaption works for multiple zones. @salvovitale : One of your test cases is a multi-zones one that uses CFL adaption (the Jones one). This commit of course changes the solver behaviour in that case. I saw that you are averaging CFL numbers - maybe these problems are connected? Could you check if the test case is still alright? For now, I had to change the regression test values.; 1. Some more else if(...)-cases in output_structure.cpp... As this is my first pull request, it's very likely that I missed some good-practices. I would like to point out that many of the commits contain _purely copied code_.; There was always some reason when it could not re-use it, but please be a bit indulgent if I missed to reference the credits. I just don't know where to.. if something attracts your attention, I will change it asap :-) Furthermore I should mention that; 1. This branch contains are very **naive couling procedure**. I will add Robin-like BC's and conservative energy correction routines when I feel comfortable about them.; 1. The **discrete adjoint version** of all this wo",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/505:1125,adapt,adaption,1125,https://su2code.github.io,https://github.com/su2code/SU2/pull/505,1,['adapt'],['adaption']
Energy Efficiency,"cally equivalent) introduced to limiters and gradients in #834, yes. > What's the advantage of having one numerics term per thread?. It is a requirement, we need to write data into numerics before using them, multiple threads cannot write to the same location (i.e. the internal structures of CNumerics) therefore one per thread is required. > ...Also, I think I missed the point where the numerics container is extended beyond MAX_TERMS. The allocation of space for one numerics per thread is done above in line 1995 of my 21 Dec 2019 comment: `...MAX_TERMS*omp_get_max_threads()...`.; The instantiation of one numerics per thread is then done by executing the rest of the preprocessing in parallel and instead of using `XYZ_TERM` using `XYZ_TERM+offset` where `offset = thread_id * MAX_TERMS`.; I think someone mentioned this (maybe Tim) that we could revisit the ownership relations of the numerics classes, i.e. allocate them as members of their respective solvers, which if we do, we can think of having a purpose built container that automates the per-thread creation and access. > Why are they redefined each time inside the loop?; > Is this for efficiency reasons?. Referring to variables being declared inside loops. One stylist reason is that declaring everything at the top of a function is the C way of doing things, the C++ people whose books/blogs I've read and talks I've watched, recommend keeping namespaces (the inside of the loop being one) as clean as possible.; The only reason not to do this is if you explicitly want re-use, in the case of trivial types this does not improve efficiency, and in the context of OpenMP code it can create issues. Just like we need one numerics per thread, if we declare variables outside a parallel loop the default OpenMP behaviour is to consider them shared, and concurrent writes to shared locations = gdb and many bad words xD.; **EDIT:** I should mention here that if the parallel region is started before the variable declarations they beco",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/843#issuecomment-577684728:2062,allocate,allocate,2062,https://su2code.github.io,https://github.com/su2code/SU2/pull/843#issuecomment-577684728,2,['allocate'],['allocate']
Energy Efficiency,"ce is **""measure it before changing code""**, I broke that rule because as my first post illustrated non contiguous storage at the scale we had is a real killer. With that out of the way, to some extent at least (the layout may not be optimum still) measuring is essential to decide what to do next. This is the case I am using:; ![case](https://user-images.githubusercontent.com/38071223/63288257-27d9d580-c2b4-11e9-9899-8b44b230b8bb.png); It is a bad wing design (NACA0012) with some sweep and taper and a home-brew mesh whose quality rivals that of the design (it converges and the flow does not separate...).; The mesh is just over 500k vertices (so it ""fits"" comfortably in my pc) the y+ is not great (obvs) but the aspect ratios are 200 and 2000 in the chordwise and spanwise directions respectively, so not exactly linear solver friendly either. Some settings which are kinda optimal:; - Mach 0.6, AoA 2 degrees;; - SST (1st order);; - CFL 20 (higher and residuals would limit-cycle (regardless of linear solver settings); - Roe;; - MUSCL - Green-Gauss and Venkat-Wang;; - FGMRES + LU_SGS to 0.05 residual (about 3 iters on avg.);; - 2 levels of MG (1,1,2 iterations, all zeros for other stuff and 0.7 damping both ways);. The case is light on the linear solver and therefore stands to benefit the most from better data layout. Conversely, applications that can take higher CFL / or use central schemes will not benefit as much. **Running this from scratch to residual of 10^-8 on a couple of Xeon E5-2650v4 (24c total) shows a speedup of 1.4 and just over 10% lower memory usage.**; Those numbers will be better for an equivalent 2D case since the ratio of useful data to pointers and vtables is lower. After a celebratory dance I attempted to profile the code using [Perf](https://en.wikipedia.org/wiki/Perf_(Linux)) which I ""learned how to use"" from [a YouTube video](https://www.youtube.com/watch?v=nXaxk27zwlk&t=2052s).; In a nutshell compile the code as usual but with the `-fno-omit-frame",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/716#issuecomment-522730951:1400,Green,Green-Gauss,1400,https://su2code.github.io,https://github.com/su2code/SU2/issues/716#issuecomment-522730951,1,['Green'],['Green-Gauss']
Energy Efficiency,"ced0ab-7a70-45ee-b67e-41314b2ddfb1.png). ![image](https://user-images.githubusercontent.com/50565314/208847743-6f08eb96-ea5e-4ac5-a50a-0d980f33c547.png). So, I tried to find the cause. . When deriving the RANS equation from the energy equation, the turbulent kinetic energy(TKE) is derived from the kinetic energy of Total Energy(E) as shown below.; ![image](https://user-images.githubusercontent.com/50565314/208849564-da4f1b0a-ff2f-4732-911a-b1ed2a4ca1c8.png). In the boundary condition and initialization part, k is considered depending on whether or not the SST model is used for Total Energy. In CEulerSolver.cpp ; `bool tkeNeeded = (turbulent && config->GetKind_Turb_Model() == TURB_MODEL::SST);`; `if (tkeNeeded) { Energy_FreeStream += Tke_FreeStream; }; config->SetEnergy_FreeStream(Energy_FreeStream);`; `if (tkeNeeded) Energy_FreeStreamND += Tke_FreeStreamND;`. But In the flux calculation part, when calculating the speed of sound(a), using the total enthalpy(H). But, in this part consider only the kinetic energy. . Expressed mathematically ; ![image](https://user-images.githubusercontent.com/50565314/208861650-92b8cad6-5a1f-4742-952b-30d0187ae28b.png). but in the SU2 code using below. ![image](https://user-images.githubusercontent.com/50565314/208861902-ff614d53-d07e-4237-a04d-73a49ad5a55c.png). The speed of sound always has a slightly high value because TKE is not subtracted. See ""roe.cpp"" line 119 ~ 149. ; `RoeSoundSpeed2 = (Gamma-1)*(RoeEnthalpy-0.5*sq_vel);` ; This line might be changed roughly like : ; `RoeSoundSpeed2 = (Gamma-1)*(RoeEnthalpy-0.5*sq_vel-k);` . There seem to be two possible ways to this problem.; 1. Subtract TKE when the speed of sound calculation; 2. Store e(static energy) or k in primitive variables; 3. ; I'm not sure which is clear and easy. **Bug report checklist**; *Please make sure that you have followed the checklist below, many common problems can be solved by:*. - [ ] Consulting the build instructions (https://su2code.github.io/docs_v7/Bu",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1851:1589,energy,energy,1589,https://su2code.github.io,https://github.com/su2code/SU2/issues/1851,1,['energy'],['energy']
Energy Efficiency,"ch request to make it clearer. Request: Use nomenclature consistent with the C++ interface (point instead of node, etc.); Reason: People who know the C++ interface will know how to use the python wrapper straight away, people who learn how to use the python wrapper will be able to understand the C++ implementation (without needing a translation layer in their mind all the time). Request: Return connectivity/adjacency as local indices instead of global; Reason: This is the natural way of referencing data in an MPI code, local indices correspond directly to data stored in the partition thereby making it more efficient to access (without global-to-local conversions, which are much more expensive than local-to-global). Furthermore, the local ordering strategy improves the efficiency of loops (over edges, neighboring points, etc.). Request: Do not apply unnecessary ""transformations"" to the connectivity/adjacency as part of the API; Reason: Increases the maintenance burden and makes for a less versatile API. By returning the local indices that form a marker or element, it is trivial to retrieve any other data for those indices (the ""transformation""). For example, the solution at those points, the point coordinates, whether the points are halo or domain points, the global indices, etc.; This way, by adding a **single** function to the API e.g. get the global index of a point of element, the functionality of the API grows a lot more because the user can apply the function to **any** connectivity/adjacency function. Request: Do not offer too many overloads of the same function; Reason: Increases the maintenance burden and it's returning the data in structures that are not very efficient, namely vector of vectors. It is much easier to offer domain-wide data access on the python side, as a very small function that can be part of wrapper utilities (i.e. live only in python but not c++). It may even be more efficient since you make a numpy array/matrix instead of lists of lists.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1300#issuecomment-1402197827:1722,efficient,efficient,1722,https://su2code.github.io,https://github.com/su2code/SU2/pull/1300#issuecomment-1402197827,4,['efficient'],['efficient']
Energy Efficiency,"circle of radius 1 (adiabatic wall), and a ""boundary-layer-like"" structure around a circle of radius (approximately) 4. Having this ""boundary-layer-like"" structure does not make sense here, but in our project we later want to change the area `1<=radius<=4` to a ""porous material"" zone and this would introduce a boundary layer there. Both the [attached](https://seafile.rlp.net/d/bb0fbb16eb414263b642/) `issue_complicated.zip`, `issue_simplified.zip` contain subdirectories `singlezone`, `multizone`. I observed the problem best for `issue_complicated.zip`. With `issue_simplified.zip` I try to provide a minimal working example, and it reproduces the same convergence/divergence behaviour, but I'm not sure whether it really covers the complete problem. `issue_simplified.zip` has been created as follows:; - In the singlezone setup, the whole mesh has been exported to `singlezone.su2`. The `singlezone.cfg` is `TestCases/rans/naca0012/turb_NACA0012_sst.cfg` with adapted mesh filename, marker names and Reynolds number, and `RESTART_SOL=NO`.; - In the multizone setup, the mesh has been split into two zones. `multizone-0.su2` is the inner ""ring"" of `1 <= radius <= 4` between the circle and the ""boundary-layer-like"" structure. `multizone-1.su2` is the remaining part `4 <= radius`. I created a `multizone.cfg` that refers to `multizone-0.cfg`, `multizone-1.cfg` and joins the zones by a `MARKER_FLUID_INTERFACE`. The two `multizone-i.cfg`s are identical to the `singlezone.cfg` except that the mesh filename and markers we adapted again, and the `ITER=` option was removed. In `issue_complicated.zip`, filenames and cfg files are a bit different but the meshes are the same. Observed and expected behaviour; ===========================; I would expect that the two simulations give similar results. However, the singlezone setup converges while the multizone setup diverges (`SU2 has diverged (NaN detected).` or `SU2 has diverged (Residual > 10^20 detected).`). The same behaviour is observed f",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1414:2152,adapt,adapted,2152,https://su2code.github.io,https://github.com/su2code/SU2/issues/1414,1,['adapt'],['adapted']
Energy Efficiency,"d, enabling the computation of steady solutions of the Navier-Stokes equations in globally unstable configurations. Steady-state is achieved by damping the unstable temporal frequencies with addition of a dissipative relaxation term proportional to the high-frequency content of the velocity fluctuations. [1]. _boostconv_: An iterative algorithm, inspired by Krylov-subspace methods, which is able to compute unstable steady states and/or accelerate the convergence to stable configurations. This algorithm is based on the minimization of the residual norm at each iteration step with a projection basis updated at each iteration rather than at periodic restarts like in the classical GMRES method. The algorithm is able to stabilize any dynamical system without increasing the computational time of the original numerical procedure used to solve the governing equations. _Moreover, it can be easily inserted into a pre-existing relaxation (integration) procedure with a call to a single black-box subroutine_. [2]. **Additional context**; I would be happy to collaborate on implementation of said algorithms in SU2 but I do not have much experience with C++ (I mostly use Fortran) and I am not too familiar with SU2 source code so it would be great to work with someone more experienced in those areas. Figure from [2] outlining performance of SFD and boostconv on a cylinder:; <img width=""882"" alt=""Screenshot 2023-05-02 at 22 23 19"" src=""https://user-images.githubusercontent.com/67333831/235789512-63bc5e29-6d09-478f-a9e5-9931b5673bd0.png"">. **Bibliography**; [1] Åkervik, E., Brandt, L., Henningson, D.S., Hœpffner, J., Marxen, O. and Schlatter, P., 2006. Steady solutions of the Navier-Stokes equations by selective frequency damping. Physics of fluids, 18(6), p.068102.; [2] Citro, V., Luchini, P., Giannetti, F. and Auteri, F., 2017. Efficient stabilization and acceleration of numerical simulation of fluid flows by residual recombination. Journal of Computational Physics, 344, pp.234-246.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/2022:3065,Efficient,Efficient,3065,https://su2code.github.io,https://github.com/su2code/SU2/issues/2022,1,['Efficient'],['Efficient']
Energy Efficiency,"date with develop. Check out [feature_adap](https://github.com/su2code/SU2/tree/feature_adap). It uses goal-oriented (adjoint-based) adaptation instead of feature-based (just based on Mach or pressure) that Vic's fork used. Some things to note:; 1. It's currently only tested on Euler (it uses a Hessian of the Euler fluxes so it might work for NS/RANS, but probably not) (@WallyMaier and I also extended it to TNE2 in [feature_amgtne2](https://github.com/su2code/SU2/tree/feature_amgtne2) but the source terms are giving us trouble on adapted meshes); 2. It requires AD support since it uses the discrete adjoint to weigh the Euler flux Hessians; 3. I did all my testing with the AMG executable since pyAMG doesn't have all the features I currently need, but I just updated the branch to use pyAMG. I just tested the new interface with an airfoil and it seems to be working, but there might still be some bugs. You'll want to run mesh_adaptation_amg.py with the following options:; **ADAP_SIZES:** list of mesh complexities for each adaptive level. This is correlated to mesh size, but picking good values requires some playing around; **ADAP_SUBITE:** number of adaptations performed at each adaptive level. If set to (2,3) for example, it will run 2 adaptive iterations to try to reach ADAP_SIZES[0], and 3 iterations to try to reach ADAP_SIZES[1]; **ADAP_EXT_ITER:** number of iterations used by SU2_CFD and SU2_CFD_AD for each adaptive level; **ADAP_RESIDUAL_REDUCTION:** order of magnitude residual reduction for SU2_CFD and SU2_CFD_AD for each adaptive level; **ADAP_SENSOR:** currently only works for GOAL; **ADAP_HMAX:** maximum cell size (m); **ADAP_HMIN:** minimum cell size (m); **ADAP_HGRAD:** gradation coefficient (>1) used by AMG during mesh smoothing. A larger value corresponds to larger allowed gradient in mesh size. E.g. for the RAE2822 I used:; ADAP_SIZES= (12800, 19200, 25600); ADAP_SUBITE= (2, 2, 2); ADAP_EXT_ITER= (9999, 9999, 9999); ADAP_RESIDUAL_REDUCTION= (6, 6, 6); ADA",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/606#issuecomment-504675574:1169,adapt,adaptive,1169,https://su2code.github.io,https://github.com/su2code/SU2/issues/606#issuecomment-504675574,1,['adapt'],['adaptive']
Energy Efficiency,"dy (which currently directly calls the sym_plane boundary) -> that recovered the results obtained with the 'older' version. The steady state results (onera m6) show that both codes deliver the same results (of course with some minor differences). So far so good. Unsteady cases are a bit trickier: the latest 2D results of @RoccoBombardieri show pretty much no difference including the first timesteps. The onera m6 case in contrast converges to the same (steady-state) results for both code version eventually but their initial transient phase differs quite significantly. . A possible explanation for the different initial transient phase: In both implementations a ""reflected state"" is constructed where the normal component of the velocity is subtracted [once in the older code version & twice in the newer version]. I.e. subtracting the normal component of velocity twice means mirroring the velocity along the symmetry plane. The newer code version is a bit ""stronger"" in enforcing the boundary conditions which could lead to the reduced oscillation in CD and CL. If we agree that both code versions produce physically correct results for steady cases and unsteady cases that were integrated long enough in time to get rid of the influence of the initial condition ... then we are left with this initial transient phase that differs. Of course if there is more evidence that one or the other version produces physically ""better"" results I would love to see that. Until then, both initial oscillations are equally correct/uncorrect in my opinion. [I'll add a few words about the adjoint here later]. [I'll add the idea of an FSI case of @cvencro here later where the initial phase has a major impact]; Consider an FSI computation of an airfoil where the trailing edge can exhibit flutter (periodic up-and-down-movement of the trailing edge) in certain flow regimes. Now if during the initial transient the forces on the airfoil are higher than in the converged state then the fluttering can be e",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/828#issuecomment-563314747:1758,reduce,reduced,1758,https://su2code.github.io,https://github.com/su2code/SU2/issues/828#issuecomment-563314747,2,['reduce'],['reduced']
Energy Efficiency,"e essentially independent of the rest of the code. . Below you find an example output of the current preprocessing:. ```. ---------------------- Space Numerical Integration ----------------------; Jameson-Schmidt-Turkel scheme (2nd order in space) for the flow inviscid terms.; JST viscous coefficients (2nd & 4th): 0.5, 0.02.; The method includes a grid stretching correction (p = 0.3).; Scalar upwind solver for the turbulence model.; First order integration in space.; Average of gradients with correction (viscous flow terms).; Average of gradients with correction (viscous turbulence terms).; Gradient Computation using weighted Least-Squares method. ---------------------- Time Numerical Integration -----------------------; Local time stepping (steady state simulation).; Euler implicit method for the flow equations.; FGMRES is used for solving the linear system.; Using a LU-SGS preconditioning.; Convergence criteria of the linear solver: 1e-06.; Max number of linear iterations: 7.; CFL adaptation. Factor down: 1.5, factor up: 0.5,; lower limit: 0.5, upper limit: 3.5.; Courant-Friedrichs-Lewy number: 1; Euler implicit time integration for the turbulence model. ------------------------- Convergence Criteria --------------------------; Maximum number of iterations: 999999.; Reduce the density residual 6 orders of magnitude.; The minimum bound for the density residual is 10^(-5.9).; Start convergence criteria at iteration 10. -------------------------- Output Information ---------------------------; Writing a solution file every 999999999 iterations.; Writing the convergence history every 1 iterations.; The output file format is Tecplot binary (.plt).; Convergence history file name: history.; Forces breakdown file name: forces_breakdown.dat.; Surface flow coefficients file name: surface_flow.; Flow variables file name: flow.; Restart flow file name: restart_flow.dat. ------------------- Config File Boundary Information --------------------; +--------------------------------",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/633:1623,adapt,adaptation,1623,https://su2code.github.io,https://github.com/su2code/SU2/pull/633,1,['adapt'],['adaptation']
Energy Efficiency,"e fluids, which are solids) without a bunch of a priori or 'hard coded' assumptions. I intend to develop it further in near future which basically means to incorporate the existing sorts of interfaces (mixing plane, FSI, .. maybe it works out).; 1. A new finite-volume-based heat solver (CHeatSolverFVM). It can be run stand-alone in solids for pure heat conduction or weakly coupled to the incompressible mean flow solver.; 1. A new CTransfer child class (CTransfer_ConjugateHeatVars) to exchange CHT-related interface information. Most of these commits do not touch existing code but just use it. Exceptions are:; 1. Quite a few config options.; 1. A small new data structure in CDriver to store types of interfaces that is used by CMultiPhysicalZonesDriver. Some additions in **Interface_Preprocessing**.; 1. A change of **SetCFL_Number** so that the CFL adaption works for multiple zones. @salvovitale : One of your test cases is a multi-zones one that uses CFL adaption (the Jones one). This commit of course changes the solver behaviour in that case. I saw that you are averaging CFL numbers - maybe these problems are connected? Could you check if the test case is still alright? For now, I had to change the regression test values.; 1. Some more else if(...)-cases in output_structure.cpp... As this is my first pull request, it's very likely that I missed some good-practices. I would like to point out that many of the commits contain _purely copied code_.; There was always some reason when it could not re-use it, but please be a bit indulgent if I missed to reference the credits. I just don't know where to.. if something attracts your attention, I will change it asap :-) Furthermore I should mention that; 1. This branch contains are very **naive couling procedure**. I will add Robin-like BC's and conservative energy correction routines when I feel comfortable about them.; 1. The **discrete adjoint version** of all this works fine. I will add it, too, if you like these additions.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/505:1987,energy,energy,1987,https://su2code.github.io,https://github.com/su2code/SU2/pull/505,1,['energy'],['energy']
Energy Efficiency,"e20, grid_movement=0x1de0e40, FFDBox=0x1de0e60, ; val_iZone=1, val_iInst=0); at ../SU2_CFD/src/iteration/CFluidIteration.cpp:302; #15 0x000000000047adec in CMultizoneDriver::Run_GaussSeidel (this=0x2009490); at ../SU2_CFD/src/drivers/CMultizoneDriver.cpp:329; #16 0x000000000047a415 in CMultizoneDriver::StartSolver (this=0x2009490); at ../SU2_CFD/src/drivers/CMultizoneDriver.cpp:193; #17 0x0000000000415413 in main (argc=2, argv=0x7fffffffbb18); at ../SU2_CFD/src/SU2_CFD.cpp:150; ```; </details>; Look at the backtraces if you like. The first is further in the program (compare 1st number 6 and 2nd number number 10).; The first waits at an `Allgather` and the 2nd at an `Allreduce`. . I am somewhat certain that the problem is this code bit which the second (the furhter back) backtrace points to. CSysVector.hpp -> `ScalarType dot` function l. 317; ```c++; /*--- Update shared variable with ""our"" partial sum. ---*/; atomicAdd(sum, dotRes);; SU2_MPI::Barrier(SU2_MPI::GetComm()); //added by tobi; #ifdef HAVE_MPI; /*--- Reduce across all mpi ranks, only master thread communicates.; * The nElm condition is to allow vectors to also be used locally. ---*/; std::cout << ""Rank: "" << SU2_MPI::GetRank() << "", nElm != nElmDomain="" << (nElm != nElmDomain) << std::endl; //added by tobi; if (nElm != nElmDomain) {; SU2_OMP_BARRIER; SU2_OMP_MASTER {; sum = dotRes;; const auto mpi_type = (sizeof(ScalarType) < sizeof(double)) ? MPI_FLOAT : MPI_DOUBLE;; SelectMPIWrapper<ScalarType>::W::Allreduce(&sum, &dotRes, 1, mpi_type, MPI_SUM, SU2_MPI::GetComm());; }; }; #endif; /*--- Make view of result consistent across threads. ---*/; SU2_OMP_BARRIER. return dotRes;; }; ```; The Problem is the `Allreduce` in the `if (nElm != nElmDomain) {` which leads to a freeze if not all ranks get the same result for that boolean.; The eagle eye prob already spotted the cout-Debugging in there. I also added a mpi barrier and the screen output i get is ; ```; ... only nElm != nElmDomain=1 above, which prob belong to",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1241:8721,Reduce,Reduce,8721,https://su2code.github.io,https://github.com/su2code/SU2/issues/1241,1,['Reduce'],['Reduce']
Energy Efficiency,"eature_adapt branch`. 2. downloaded the Adaptive 2D NACA 0012 example (https://pyamg.saclay.inria.fr/pyamgexamples.html#2dnaca): `adap_NACA0012.cfg`, `mesh_NACA0012_inv.su2`, `NACA0012_ini.dat`. 3. added the following lines to the config:; ```; % Type of sensor used for adaptation; % Options include GOAL (adjoint-based), MACH, PRES; PYADAP_SENSOR= GOAL; % Objective function used for goal-oriented adaptation; OBJECTIVE_FUNCTION= LIFT; % Maximum cell size for adaptation; PYADAP_HMAX= 500.0; % Minimum cell size for adaptation; PYADAP_HMIN= 1e-9; % Gradation factor (typically 1.2-1.8); PYADAP_HGRAD= 1.8; % Norm used for adaptation; % 1.0 or 2.0 recommended for inviscid flows; % 4.0 recommeneded for viscid; ADAP_NORM= 4.0; % Approximate mesh size (NPOI) at each level; PYADAP_COMPLEXITY= (30000, 60000, 120000); % Number of adaptations performed at each level; PYADAP_SUBITE= (3, 3, 3); ```. 4. run the following command: `$ python3 SU2_RUN/mesh_adaptation_amg.py -f adap_ONERAM6.cfg -n 8`. The response I have obtained is the following:; ```; SU2-AMG Anisotropic Mesh Adaptation. Mesh adaptation options:; PYADAP_COMPLEXITY : (30000, 60000, 120000); PYADAP_SUBITE : (2, 2, 2); PYADAP_SENSOR : MACH; PYADAP_HMAX : 500.0; PYADAP_HMIN : 1e-9; PYADAP_HGRAD : 1.8; PYADAP_FLOW_ITER : (2999, 4999, 6999); PYADAP_ADJ_ITER : (2999, 4999, 6999); PYADAP_CFL : (10.0, 15.0, 20.0); PYADAP_RDG : NO. The ./adap folder was deleted. Generating GMF background surface mesh.; ## WARNING: MISSING SU2 MESH FILE KEYWORD: NCORNERS=.; Initial CFD solution is provided.; ```. As expected, a `./ADAP` folder was created, containing these docs: `amg_back_meshb`, `config_CFD.cfd`, `log.err`, `log.out` (sizes 0 byte), `mesh_NACA0012_inv.su2` (link to the mesh), `NACA0012_ini.dat` (link to the file.dat). Did I perform the procedure correctly? Or did I miss something?; If it is correct and complete, which file contains the adaptive mesh? How can I use it since there is no new .su2 file? . Thank you for the big help",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/948#issuecomment-737134105:1239,Adapt,Adaptation,1239,https://su2code.github.io,https://github.com/su2code/SU2/issues/948#issuecomment-737134105,5,"['Adapt', 'adapt']","['Adaptation', 'adaptation', 'adaptive']"
Energy Efficiency,"ed for each CV for this process.; - Modified realizability checks to avoid negative density/pressure/temperature at the nodes and also during 2nd-order reconstruction at cell faces.; - CV face states for 2nd-order MUSCL are now optionally reconstructed with a separate gradient method (unweighted least squares recommended), which is very important for robustness. Gradients for viscous terms and sources are still computed via GG or WLS for accuracy reasons.; - SA model was being clipped unnecessarily. This clipping has been removed. Here is my recommendation on how to run all of your 2nd-order cases going forward:. ### Euler / Laminar N-S; Turn off the limiters, unless you truly need them for preserving solution monotonicity (e.g., for shocks/discontinuities). Use ; ```; NUM_METHOD_GRAD_RECON= LEAST_SQUARES; ```; for robustness. Start with a CFL around 10 and converge the implicit system with LINEAR_SOLVER_ITER= 10 for each nonlinear iteration (FGMRES + ILU0 recommended). Activate the CFL adaption with. ```; % Parameters of the adaptive CFL number (factor down, factor up, CFL min value,; % CFL max value ); CFL_ADAPT= YES; CFL_ADAPT_PARAM= ( 0.1, 2.0, 10.0, 1e10); ```. It is important that the linear solve behaves well for each nonlinear iteration, so if this does not converge immediately, adjust the tolerance or number of linear iterations. Roe seems very stable, but some of the other upwind schemes or centered schemes may require improved Jacobian accuracy (to recover fast convergence) with:. ```; USE_ACCURATE_FLUX_JACOBIANS= YES; CENTRAL_JACOBIAN_FIX_FACTOR= 4.0; ```. ### RANS; Due to the segregated approach for the turbulence models, you have to be more conservative with the CFL adaption. All else is the same as above, but I recommend. ```; % Parameters of the adaptive CFL number (factor down, factor up, CFL min value,; % CFL max value ); CFL_ADAPT= YES; CFL_ADAPT_PARAM= ( 0.1, 1.2, 10.0, 1e3); ```. Most inviscid/laminar cases that I have tested so far converge to ",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/790:1929,adapt,adaption,1929,https://su2code.github.io,https://github.com/su2code/SU2/pull/790,1,['adapt'],['adaption']
Energy Efficiency,"ed) adaptation instead of feature-based (just based on Mach or pressure) that Vic's fork used. Some things to note:; 1. It's currently only tested on Euler (it uses a Hessian of the Euler fluxes so it might work for NS/RANS, but probably not) (@WallyMaier and I also extended it to TNE2 in [feature_amgtne2](https://github.com/su2code/SU2/tree/feature_amgtne2) but the source terms are giving us trouble on adapted meshes); 2. It requires AD support since it uses the discrete adjoint to weigh the Euler flux Hessians; 3. I did all my testing with the AMG executable since pyAMG doesn't have all the features I currently need, but I just updated the branch to use pyAMG. I just tested the new interface with an airfoil and it seems to be working, but there might still be some bugs. You'll want to run mesh_adaptation_amg.py with the following options:; **ADAP_SIZES:** list of mesh complexities for each adaptive level. This is correlated to mesh size, but picking good values requires some playing around; **ADAP_SUBITE:** number of adaptations performed at each adaptive level. If set to (2,3) for example, it will run 2 adaptive iterations to try to reach ADAP_SIZES[0], and 3 iterations to try to reach ADAP_SIZES[1]; **ADAP_EXT_ITER:** number of iterations used by SU2_CFD and SU2_CFD_AD for each adaptive level; **ADAP_RESIDUAL_REDUCTION:** order of magnitude residual reduction for SU2_CFD and SU2_CFD_AD for each adaptive level; **ADAP_SENSOR:** currently only works for GOAL; **ADAP_HMAX:** maximum cell size (m); **ADAP_HMIN:** minimum cell size (m); **ADAP_HGRAD:** gradation coefficient (>1) used by AMG during mesh smoothing. A larger value corresponds to larger allowed gradient in mesh size. E.g. for the RAE2822 I used:; ADAP_SIZES= (12800, 19200, 25600); ADAP_SUBITE= (2, 2, 2); ADAP_EXT_ITER= (9999, 9999, 9999); ADAP_RESIDUAL_REDUCTION= (6, 6, 6); ADAP_SENSOR= GOAL; ADAP_HMAX= 10.0; ADAP_HMIN= 1e-8; ADAP_HGRAD= 1.5. ![mesh](https://user-images.githubusercontent.com/19416354/599",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/606#issuecomment-504675574:1299,adapt,adaptations,1299,https://su2code.github.io,https://github.com/su2code/SU2/issues/606#issuecomment-504675574,2,['adapt'],"['adaptations', 'adaptive']"
Energy Efficiency,"ed. ## What is my vision for unit testing in SU2?. I am *not* proposing that we start trying to get 100% code coverage with pre-existing code. That would not provide a good return on investment. Instead, I see people adding unit tests as they write new code and as they find bugs. For each new behavior added to SU2, tests are first added to document the related existing behavior. These tests serve to check that the existing behavior isn't damaged by the new code. Then new tests are added to prove that the new behavior is working correctly. For bug fixes, the process is simpler. A test is added to confirm that something is not behaving as expected. Then the code is fixed to make the test pass. ## What frameworks are available?. For a unit testing framework, here are the most popular options, with the following pros and cons:. #### Roll-your-own. + Requires no external dependencies; + The most flexible option; + Involves the most work to setup; + Will lack some of the more advances features of mature unit-testing frameworks. #### Boost Test. + Can be header only, statically linked, or dynamically linked; + If statically or dynamically linked, then Boost is not very lightweight; + Easy to add if you're already using Boost. #### Google Test. + Most common unit-testing framework; + Can be easily combined with Google's powerful GMock mocking library; + Compiling and linking can be somewhat painful. #### Catch2. + Used by FEniCS; + Makes unit tests easily readable with lots of syntactic sugar.; + Has a very simple syntax; + Is header-only; + ~~Requires C++11 compilation~~ Requires C++11 for full feature set, but offers a C++03 branch; + Not as feature rich as Google Test or Boost Test. ## Questions. + How do developers feel about adding unit tests to SU2?; + If a unit-testing framework were added to SU2, would you actually use it?; + Do developers have a preference (or experience with) any of the unit testing frameworks?; + Should unit tests be expected when submitting PRs?",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/698:4058,power,powerful,4058,https://su2code.github.io,https://github.com/su2code/SU2/issues/698,1,['power'],['powerful']
Energy Efficiency,"enced only once per color (this definition gives you the basis of a greedy algorithm to color edges).; - **Scatter to gather transformations**: Edge quantities (e.g. fluxes) are computed and stored on one pass (i.e. we read from 2 locations and write to 1), on a second pass, over points, we reduce (e.g. sum) the edge quantities for each point, again a gather access pattern. It may also be possible to convert the entire algorithm to a loop over points instead of edges.; - **Atomic operations or locks**: Here when a thread wants to write to a memory location it either needs to do so atomically (this is essentially an operations that always goes through main memory and forces cache coherency) or it needs to acquire a *lock* for the point it is writing to, if it fails to acquire the *lock* (because another thread has it) it needs to wait. None of these is without drawbacks.; - **Coloring** reduces temporal locality, edges are sorted in increasing order of the point indices to reduce cache misses, this means small groups of contiguous edges will share the same ""iPoint"", coloring single edges destroys this. Furthermore coloring either requires edges to be re-sorted by color, or if the edge indices of each color are instead kept in arrays, performance will suffer due to increased indirection which confounds the hardware pre-fetcher.; This can be mitigated to some extent by coloring groups of edges, groups of edges of the same color can be processed simultaneously, but within each group edges need to be processed serially. However grouping will reduce how much parallelism can be exploited within each color.; - **Gather to scatter** will in general use more memory due to the intermediate variables and extra adjacency information needed. If the entire algorithm is transformed performance may suffer as some computations may have to be repeated.; However, some reductions are possible without intermediate variables, for example when assembling the system matrix for implicit sche",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/789#issuecomment-529662724:5069,reduce,reduces,5069,https://su2code.github.io,https://github.com/su2code/SU2/issues/789#issuecomment-529662724,4,['reduce'],"['reduce', 'reduces']"
Energy Efficiency,"entation) using `VISUALIZE_SURFACE_DEF` as a hooked boolean. ; With `VISUALIZE_VOLUME_DEF` one can change which convective scheme is used on the boundary, i.e. what is in the numerics container `CONV_BOUND_TERM`. The Default is `CUpwRoe_Flow` (`ROE`) and I added `CCentJST_Flow_BC` which is the normal `JST` without dissipation. ; The third option `MUSCL_ADJFLOW` has to be left on NO, this is work in progress :) . With the options given above you will use the new Euler wall implementation but using JST without dissipation term as a convective scheme for boundary nodes. This (as I say in point 2. in my above post) basically recovers the old euler wall implementation. . For the OneraM6 case the combination of new Euler + JST_BC recovers the CD & CL results of the old code. Can you also try running `CONV_NUM_METHOD_FLOW= ROE` with the code you labelled as 'SU2 FSI new (new bound condition)' and 'SU2 FSI new (oldbound condition)'. Because by doing so you switch the numerical method in the volume and to the same ROE scheme on the boundary -> just as the current default in the develop. So my current assumption is that it is a matter of convective scheme (on the boundary). ~~I'll try to attach my cases as a zip and two images here.~~; Here the green line represents the current develop if one uses MARKER_EULER or MARKER_SYM. Another info here is: by using the oldEuler wall (i.e. line 1&2) the choice of convective scheme on the boundary is irrelevant for the Euler_wall as the old implementation ""skips"" that step. The red line 4 is the setup I want you to try because this recovers the old results in this case.; ![image](https://user-images.githubusercontent.com/4933860/73058455-fb923880-3e93-11ea-9d49-baf87a4754e6.png); ![image](https://user-images.githubusercontent.com/4933860/73058476-0351dd00-3e94-11ea-8498-37ccfdb033b0.png). Here the testcase folder if someone wants to use the exact setup; [oneram6test.tar.gz](https://github.com/su2code/SU2/files/4107614/oneram6test.tar.gz)",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/828#issuecomment-578048838:1760,green,green,1760,https://su2code.github.io,https://github.com/su2code/SU2/issues/828#issuecomment-578048838,1,['green'],['green']
Energy Efficiency,"ents. Registers are at the very top of the memory hierarchy, for any computation to be performed data needs to be in registers.; An AVX register is 256 bits wide, that means 4 lanes of doubles or 8 of floats, AVX-512 (available in Xeon-Phi and SkylakeX processors) doubles the size. By GPU standards these are rookie numbers. **Why should we care about SIMD?**; Because it is the only way to use the whole silicon, by and large vector instructions have the same latency and throughput of their scalar versions, therefore speedups proportional to the number of SIMD lanes are possible in compute-bound code.; As we saw in #716 there is some of that in the numerics, do not expect 4x speed-ups though, low order unstructured FVM is known to be bandwidth-bound, vectorization helps a bit there too (instructions are also data that needs to travel to the CPU) (maybe for explicit schemes and 8 SIMD lanes, maybe). **Relation with data structures**; There is only one efficient way to move data between memory and registers, via `load` and `store` instructions (they do come in multiple flavors). That is, pointing to a memory location and reading or writing N elements of contiguous data.; It is not the only way, it is also possible to `gather` and `scatter` data. That is populating the register from non-contiguous locations and vice versa. This is about one order of magnitude slower, to the point where if the computations are very simple it may not pay-off to vectorize. **Relation with algorithms**; Some form of `gather` and `scatter` is required in unstructured CFD, which means SIMD has a price of admission. Some thought needs to go into designing algorithms that amortize that cost by maximizing the so called FLOP/Byte ratio, and mask the latency of those operations by being able to start computing as soon as the first element of data is available. **What elements should we try to process simultaneously?**; The choice is between multiple geometric primitives (edges/points) or multiple s",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/789#issuecomment-529662724:1147,efficient,efficient,1147,https://su2code.github.io,https://github.com/su2code/SU2/issues/789#issuecomment-529662724,2,['efficient'],['efficient']
Energy Efficiency,"esh adaptation failed.\n""; ; if not os.path.exists(""current.itp.solb""):; raise RuntimeError , ""\n##ERROR AMG: Solution interpolation failed.\n"" ; ; #--- Convert output from Inria mesh format to su2; # Deal with markers; ; save_markers = mesh['markers']; del mesh; ; # Read Inria mesh; mesh = su2amg.read_mesh(config_amg['mesh_out'], ""current.itp.solb""); mesh['markers'] = save_markers; ; current_mesh = ""ite%d.su2"" % global_iter; current_solution = ""ite%d.dat"" % global_iter ; ; su2amg.write_mesh(current_mesh, current_solution, mesh); ; if not os.path.exists(current_mesh) or not os.path.exists(current_solution) :; raise RuntimeError , ""\n##ERROR : Conversion to SU2 failed.\n"". else : # Use pyAmg interface; ; ; #--- Load su2 mesh ; ; mesh = su2amg.read_mesh(current_mesh, current_solution); ; #--- Create sensor used to drive the adaptation; ; sensor_wrap = su2amg.create_sensor(mesh, adap_sensor); ; mesh['sensor'] = sensor_wrap['solution']; ; sys.stdout.write(' %s Generating adapted mesh using AMG\n' % pad_cpt); ; mesh_new = su2amg.amg_call_python(mesh, config_amg); ; #--- print mesh size; ; sys.stdout.write(' %s AMG done: %s\n' % (pad_nul, su2amg.return_mesh_size(mesh_new))); ; mesh_new['markers'] = mesh['markers']; mesh_new['dimension'] = mesh['dimension']; ; current_mesh = ""ite%d.su2"" % global_iter; current_solution = ""ite%d.dat"" % global_iter; ; su2amg.write_mesh(current_mesh, current_solution, mesh_new); ; #--- Run su2; ; log = 'ite%d.SU2'%global_iter; stdout_hdl = open('%sstdout'%log,'w') # new targets; stderr_hdl = open('%sstderr'%log,'w'); ; success = False; val_out = [False]; ; sys.stdout.write(' %s Running CFD\n' % pad_nul); ; try: # run with redirected outputs; ; sav_stdout, sys.stdout = sys.stdout, stdout_hdl ; sav_stderr, sys.stderr = sys.stderr, stderr_hdl; ; current_solution_ini = ""ite%d_ini.dat"" % global_iter; os.rename(current_solution, current_solution_ini); ; config_cfd.MESH_FILENAME = current_mesh; config_cfd.CONV_FILENAME = ""ite%d_history"" % global_iter",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/606#issuecomment-504636643:10362,adapt,adapted,10362,https://su2code.github.io,https://github.com/su2code/SU2/issues/606#issuecomment-504636643,1,['adapt'],['adapted']
Energy Efficiency,"fic multiplication kernels with manual low level optimisations (unrolling, vectorization through intrinsics, and software prefetching), complex code but encapsulated in a low maintenance area of the code. **General improvements**; - Fusing convective and viscous residual loops, this will NOT be done by super gluing convective and viscous numerics. I do not have a concrete design in mind yet but I hope to be able to do something akin to the *decorator* pattern I mentioned before. I also plan to make the numerics a full-fledged *visitor* to reduce compilation dependencies, currently a change to numerics may affect CVariable CSolver and CNumerics (as mentioned by @clarkpede), CSolver is involved because it is responsible for fetching data, I may move that to CNumerics, which would let them fetch data as needed.; - Lookup accesses to CSysMatrix to avoid linear searches, the small increase in memory usage can be mitigated by sharing these lookup tables/arrays and the sparsity pattern between matrices associated with the same geometry (on the subject of these lookup tables, knowing where the diagonal of a row is should enable more efficient upper/lower multiplications). ## Work items; This is a lot of work and some changes will be significant, I will divide the work in steps, off the top of my head this order seems ok:; - CSysMatrix lookups and any required parallel pragmas put in place.; - Point-loop gradients and limiters, no SIMD (at which point I hope #777 to be finished so the next item does not disrupt it).; - Split CSolvers over multiple files, colour-based parallel residual loops (at this point we have hybrid parallel!).; - Contiguous storage of CGeometry members (to eventually enable vectorization).; - Split CNumerics over files, architecture for fusing convective and viscous loops (the most disruptive change).; - SIMD, of gradients, limiters, and numerics. SIMD in CSysMatrix can be started anywhere after item 1. If you foresee conflicts with your ongoing work let",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/789#issuecomment-539523312:3868,efficient,efficient,3868,https://su2code.github.io,https://github.com/su2code/SU2/issues/789#issuecomment-539523312,1,['efficient'],['efficient']
Energy Efficiency,"fine. I added the ability to specify corner points for sharp features that the user wants to maintain. For example, in an airfoil test case I want to make sure the sharp trailing edge at node 512 is maintained, so I can manually add; ```; NCORNERS= 1; 1 512; ```; to the end of my mesh. It's not necessary, though, and AMG performs ridge detection to identify any features anyway. I assume since it built and (kinda) ran that you managed to fix your python setup through your aliases?. What was the specific error that you got? I probably should have also mentioned that I've changed a lot of options since updating from Vic's old code. Here are the list of required options (values from my test case):; ```; % Type of sensor used for adaptation; % Options include GOAL (adjoint-based), MACH, PRES; PYADAP_SENSOR= GOAL; % Objective function used for goal-oriented adaptation; OBJECTIVE_FUNCTION= LIFT; % Maximum cell size for adaptation; PYADAP_HMAX= 500.0; % Minimum cell size for adaptation; PYADAP_HMIN= 1e-9; % Gradation factor (typically 1.2-1.8); PYADAP_HGRAD= 1.8; % Norm used for adaptation; % 1.0 or 2.0 recommended for inviscid flows; % 4.0 recommeneded for viscid; ADAP_NORM= 4.0; % Approximate mesh size (NPOI) at each level; PYADAP_COMPLEXITY= (30000, 60000, 120000); % Number of adaptations performed at each level; PYADAP_SUBITE= (3, 3, 3); ```; Some optional options:; ```; % Numerical method for Hessian reconstruction in goal-oriented adaptation; % Currently only Green-Gauss; NUM_METHOD_HESS= GREEN_GAUSS; % Value for ITER for the flow solver at each level; PYADAP_FLOW_ITER= (2999, 4999, 6999); % Value for ITER for the adjoint solver at each level; PYADAP_ADJ_ITER= (2999, 4999, 6999); % Value for CFL_NUMBER for the adjoint solver at each level; PYADAP_CFL= (10.0, 15.0, 20.0); % Background mesh containing fine surface representation; % Can be either a .su2 or .meshb (GMF) file; % If not specified, the baseline mesh is used; PYADAP_BACK= rae2822_euler_40960_split.meshb; % In",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/948#issuecomment-619412341:1005,adapt,adaptation,1005,https://su2code.github.io,https://github.com/su2code/SU2/issues/948#issuecomment-619412341,1,['adapt'],['adaptation']
Energy Efficiency,"gh I am not completely sure). Typically we would see the `SU2 has diverged (Residual > 10^20 detected).` error. Differences between multizone/fluid-interface and singlezone/joined-meshes; =========================================================; We came up with the following differences:; - **Flux calculation across the interface**: The flux between neighbor cells `i`, `j`, one of which has `radius<4` and the other one has `radius>4`, is computed differently.; + In singlezone this is just an ordinary flux computation along an edge `i`-`j`, with `CSolver::Upwind_Residual` (, `Viscous_Residual`).; + In multizone this flux between two zones is computed by `CSolver::BC_Fluid_Interface`. When the method is called to compute the contribution of the interface on the residual of contol volume `i`, `this` is the solver object of the zone of control volume `i`, so we can access all variables at `i` (like primitive, turbulent, and their spatial gradients) and give them to the `CNumerics` objects. However we cannot access the variables at `j` directly! Through the ""interface"" mechanism, we get values of the primitive and turbulent variables at `j`, but not their gradients. That's why the `BC_Fluid_Interface` has lines like this:. visc_numerics->SetPrimVarGradient(nodes->GetGradient_Primitive(iPoint),; nodes->GetGradient_Primitive(iPoint));. I tried to fix this by transferring gradient information also, but it did not solve the problem. - **Calculation of spatial gradients**: Both in the Green-Gauß and the Weighted-Least-Squares calculation, in order to compute the gradient of a quantity `x` at a point `i` only the values of `x` at `i`, and neighbors of `i` *in the same zone*, are taken into account. This means that the gradient at points with `radius==4` is based on less information, and hence is more inaccurate, in the multizone setup. - **General structure of the drivers**: Maybe there are relevant differences between `CSinglezoneDriver` and `CMultizoneDriver`, I don't know.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1414:5005,Green,Green-,5005,https://su2code.github.io,https://github.com/su2code/SU2/issues/1414,1,['Green'],['Green-']
Energy Efficiency,"going characteristics at the boundary for the non-reflectivity). 2. embedded information on what kind of turbomachinery architecture is being simulated, so that the values of velocity at the boundaries can be imposed using the correct frame of reference. So in a nutshell the flow solver is now capable of:. - simulating single 2D/3D turbomachinery blades using 1D characteristic-based BC or Non reflecting BC; - simulating multi-stage 2D/3D turbomachinery via a Mixing-Plane interface, including also the mixing of the turbulent quantities; - handling any kind of turbomachinery architecture (AXIAL, CENTRIFUGAL, CENTRIPETAL and mixed such as CENTRIPETAL_AXIAL or AXIAL_CENTRIFUGAL); - selecting 2 different kind of interpolation methods for the mixing-plane interface: LINEAR_INTERPOLATION and NEAREST_NEIGHBOR; - handling an unlimited number of blades/stages —> (zones); - simulating turbomachinery which works on the NICFD regime such as supercritical CO2 compressors or Organic Rankine Cycle turbines.; - printing history_x.dat file for multi-zone convergence monitoring; - printing some post-processing thermodynamic, kinematic and geometric quantities in some files inside a TURBOMACHINERY folder. The limitations of the turbomachinery capabilities are:. - the axis of rotation should be always the Z one; - MGL acceleration technique is not working because of some un-resolved issues with the periodic BC. This pull request introduce also some limited design capability for turbomachinery applications. Using the AD tool, it is now available on the suite also a single zone discrete adjoint to compute the sensitivity for 2D/3D turbomachinery blade with respect to certain performance parameters (ENTROPY_GENERATION, TOTAL_PRESSURE_LOSS, KINETIC_ENERGY_LOSS, ecc.). However, the optimization script only works for 2D blades since the FFD and the mesh deformation routines need still to be adapted to handle 3D blades (especially for problem on the deformation of the hub and shroud surfaces).",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/413:2035,monitor,monitoring,2035,https://su2code.github.io,https://github.com/su2code/SU2/pull/413,2,"['adapt', 'monitor']","['adapted', 'monitoring']"
Energy Efficiency,"gy terms? I'm talking about terms like:. ![molecular and turbulent diffusion of tke](https://latex.codecogs.com/gif.latex?\left(&space;\mu&space;&plus;&space;\frac{\mu_t}{\sigma_k}\right)\frac{\partial&space;k}{\partial&space;x_j}). This term is listed both in Wilcox's ""Turbulence Modeling for CFD"" book and the [NASA TMR website](https://turbmodels.larc.nasa.gov/implementrans.html). NASA's page basically just copies what Wilcox states, and then says ""This expression in the energy equation is also sometimes neglected."". Rumsey clarified his position in a [2009 report](https://ntrs.nasa.gov/archive/nasa/casi.ntrs.nasa.gov/20090015399.pdf), saying that ""when considering high Mach number compressible boundary layer flows using k-omega models, the conservation of total energy should be configured to include the contribution of the turbulent kinetic energy k... It is sometimes common practice to ignore these effects, which is certainly justified when k is signficantly smaller than the square of the mean velocity."" . But he also states: ""Note that in CFL3D, the turbulence models are decoupled from the mean flow equations, k is *not* included in the definition of the total energy, and the diffusion of k does not appear in the mean flow energy equation for its models tested here."" He also omitted the 2/3 \rho k term in both the production and the turbulent stress tensor, and found that it made little difference even for M=10 wall-bounded flows. SU2's version of SST is in a weird spot right now, where it's using the turbulent kinetic energy in some places but not others. It's using it here:. + Total energy definition; + Production of turbulent kinetic energy; + RANS evolution equations; + Eddy viscosity definition. But not here:. + Molecular and turbulent diffusion of turbulent kinetic energy in the total energy conservation equation; + Isotropic part of the turbulent stress tensor. Is there any rationale behind this split, aside from simply stating that ""this seems to work?""",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/797#issuecomment-548886007:1347,energy,energy,1347,https://su2code.github.io,https://github.com/su2code/SU2/issues/797#issuecomment-548886007,14,['energy'],['energy']
Energy Efficiency,"h adds a native CHT functionality to SU2. Main contents are:. 1. A new driver (CMultiPhysicalZonesDriver) to specify the physics (e.g. which zones are fluids, which are solids) without a bunch of a priori or 'hard coded' assumptions. I intend to develop it further in near future which basically means to incorporate the existing sorts of interfaces (mixing plane, FSI, .. maybe it works out).; 1. A new finite-volume-based heat solver (CHeatSolverFVM). It can be run stand-alone in solids for pure heat conduction or weakly coupled to the incompressible mean flow solver.; 1. A new CTransfer child class (CTransfer_ConjugateHeatVars) to exchange CHT-related interface information. Most of these commits do not touch existing code but just use it. Exceptions are:; 1. Quite a few config options.; 1. A small new data structure in CDriver to store types of interfaces that is used by CMultiPhysicalZonesDriver. Some additions in **Interface_Preprocessing**.; 1. A change of **SetCFL_Number** so that the CFL adaption works for multiple zones. @salvovitale : One of your test cases is a multi-zones one that uses CFL adaption (the Jones one). This commit of course changes the solver behaviour in that case. I saw that you are averaging CFL numbers - maybe these problems are connected? Could you check if the test case is still alright? For now, I had to change the regression test values.; 1. Some more else if(...)-cases in output_structure.cpp... As this is my first pull request, it's very likely that I missed some good-practices. I would like to point out that many of the commits contain _purely copied code_.; There was always some reason when it could not re-use it, but please be a bit indulgent if I missed to reference the credits. I just don't know where to.. if something attracts your attention, I will change it asap :-) Furthermore I should mention that; 1. This branch contains are very **naive couling procedure**. I will add Robin-like BC's and conservative energy correction routin",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/505:1017,adapt,adaption,1017,https://su2code.github.io,https://github.com/su2code/SU2/pull/505,1,['adapt'],['adaption']
Energy Efficiency,"he implementation of the symmetry plane is incomplete. We follow here the book of Blazek, _Computational Fluid Dynamics: Principles and Applications_ . According to Blazek, (chapter 8.6) 4 conditions have to be met on a symmetry plane:. 1. No flux across the boundary; 2. $\overline n \cdot \nabla \phi = 0$ (gradient of scalars are zero); 3. $\overline n \cdot \nabla (\overline U \cdot \overline t) = 0$ (gradient of tangential velocity normal to boundary); 4. $\overline t \cdot \nabla (\overline U \cdot \overline n) = 0$ (gradient of normal velocity along the boundary). Points 2-4 all deal with gradients and can be dealt with in the gradient computation, i.e. Green-Gauss or Least Squares. According to Blazek, 2 approaches can be followed. ""One possibility is to construct the missing half of the control volume by mirroring the grid on the boundary. The fluxes and gradients are then evaluated like in the interior using reflected flow variables."" This approach can be implemented in an easy way when computing the Green-Gauss gradients. In SU2, routines are already in place that deal with GG gradients on boundaries. Here, we just have to identify the symmetry planes and mirror the flux through the faces. ; Blazek continues: ""The second methodology computes the fluxes for the halved control volume (but not accross the boundary). The components of **the residual normal to the symmetry plane** are then zeroed out. It is also necessary to correct normal vectors of those faces of the control volume, which touch the boundary. The modification consists of removing all components of the face vector, which are normal to the symmetry plane. The gradients also have to be corrected according to Eq. (8.40) [points 2,3,4 above]"". 1. Modify Green-Gauss and Least-Squares gradient computation for symmetry planes; -> This seems to work fine; 2. Fix normal components of edges connected to symmetry plane; -> This seems to work fine; 3. Fix residual components of velocity on the symmetry plane",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2194:1046,Green,Green-Gauss,1046,https://su2code.github.io,https://github.com/su2code/SU2/pull/2194,1,['Green'],['Green-Gauss']
Energy Efficiency,"he limiters, unless you truly need them for preserving solution monotonicity (e.g., for shocks/discontinuities). Use ; ```; NUM_METHOD_GRAD_RECON= LEAST_SQUARES; ```; for robustness. Start with a CFL around 10 and converge the implicit system with LINEAR_SOLVER_ITER= 10 for each nonlinear iteration (FGMRES + ILU0 recommended). Activate the CFL adaption with. ```; % Parameters of the adaptive CFL number (factor down, factor up, CFL min value,; % CFL max value ); CFL_ADAPT= YES; CFL_ADAPT_PARAM= ( 0.1, 2.0, 10.0, 1e10); ```. It is important that the linear solve behaves well for each nonlinear iteration, so if this does not converge immediately, adjust the tolerance or number of linear iterations. Roe seems very stable, but some of the other upwind schemes or centered schemes may require improved Jacobian accuracy (to recover fast convergence) with:. ```; USE_ACCURATE_FLUX_JACOBIANS= YES; CENTRAL_JACOBIAN_FIX_FACTOR= 4.0; ```. ### RANS; Due to the segregated approach for the turbulence models, you have to be more conservative with the CFL adaption. All else is the same as above, but I recommend. ```; % Parameters of the adaptive CFL number (factor down, factor up, CFL min value,; % CFL max value ); CFL_ADAPT= YES; CFL_ADAPT_PARAM= ( 0.1, 1.2, 10.0, 1e3); ```. Most inviscid/laminar cases that I have tested so far converge to machine precision within a couple of hundred iterations. RANS cases within a few thousand. Ultra fine RANS meshes can still slow things down (MG could help there), but otherwise, speedups of an order of magnitude (or more) are possible for most problems. Experiment yourselves.. sometimes you can get even more performance, sometimes less, case depending. I could use help testing this one with your cases, since I think almost all regression tests will change. As a start, I have run all of the NASA TMR 2D bump-in-channel cases. Everything looks good with that (see figures). I have also checked that the inviscid and laminar MMS give 2nd-order accuracy ",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/790:2636,adapt,adaption,2636,https://su2code.github.io,https://github.com/su2code/SU2/pull/790,1,['adapt'],['adaption']
Energy Efficiency,"he residual of cells i and j, or store the edge fluxes and then, on a second point-loop perform the summation of fluxes for each cell, with the direction being accounted by the same adjacency information used in the point-loop GG gradient computation.; If we consider only the update of residuals the two strategies are fairly equivalent performance wise, the tie breaker is the matrix updates. ## Matrix Updates; By this I mean the `addBlock`, `subBlock` we do (two times each) to update diagonal and off-diagonal blocks for each edge.; Here is a dummy numerics loop that does nothing else but setting blocks in the matrix (with colouring).; ```c++; void testLoop1(const vector<size_t>& colorStart,; const vector<size_t>& edgeIdx,; const vector<pair<size_t,size_t> >& connectivity,; double** blk_i, double** blk_j,; SparseMatrix& matrix); {; matrix.setZero();. for(size_t color=0; color<colorStart.size()-1; ++color); #pragma omp parallel for schedule(dynamic,CHUNK_SIZE); for(size_t k=colorStart[color]; k<colorStart[color+1]; ++k); {; size_t iEdge = edgeIdx[k];; size_t iPoint = connectivity[iEdge].first;; size_t jPoint = connectivity[iEdge].second;. matrix.addBlock(iPoint, iPoint, blk_i);; matrix.addBlock(iPoint, jPoint, blk_j);. matrix.subBlock(jPoint, jPoint, blk_j);; matrix.subBlock(jPoint, iPoint, blk_i);; }; }; ```; This and a few more memory reads is why we can't have nice things, i.e. massive speedups with vectorization. Believe it or not this loop sets ~75% of the maximum speed at which the residual edge loop can run (bandwidth bottleneck).; Don't be sad though, we can make a few things about it better:; - We can store the blocks we insert contiguously so the writes can be vectorized (this would be done using a container so that we still have `(i,j)` access syntax);; - On each insertion we have to first look for the block by traversing the `colInd` (column index) array, we can instead map the diagonal blocks to the corresponding points and the off-diagonal blocks to the e",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/789#issuecomment-535977206:1827,schedul,schedule,1827,https://su2code.github.io,https://github.com/su2code/SU2/issues/789#issuecomment-535977206,2,['schedul'],['schedule']
Energy Efficiency,"here a full ""solver"" status, and uses the FEA Elasticity classes as its basis. The pseudo-linear elastic solver now always refers to the initial, undeformed geometrical discretization, therefore ensuring that the problem remains traceable to the original mesh, and that when volumes are computed to deform the mesh, the initial quality of the elements is observed. . With this framework, the wall distances only need to be computed once for distance-based stiffness, and the stiffness matrix is now symmetric after applying BCs so conjugate gradient can be used to compute the mesh deformation. The adjoint sensitivities can now be propagated down to the surface mesh points without the need to use DOT, although further work is needed to propagate them to the FFD points or other DV of choice. I tried to keep config options simple: the new mesh solver is enabled using; ` DEFORM_MESH = YES `; and the relevant markers which will move and introduce deformations into the domain are set using; `MARKER_DEFORM_MESH= ( wall )`; Hopefully, previous mesh deformation structures can be deprecated and removed soon, but we will need to adapt the rigid/imposed boundary deformation of other kinds of grid movement. I kindly ask for your help in there, as I'm not very familiar with some of the legacy code for this purpose. Additionally, in this PR I have done some refactoring so the AD-based adjoint routines are accessible from the python-wrapped version of the code. The SWIG wrapper now compiles the AD binaries and interfaces directly to sensitivity information, which should make it much easier to integrate SU2 within any python-based optimization framework. . ## Related Work; - Some work will be needed to adapt the new contiguous variable structure by @pcarruscag in #753; - I have added a couple of regression tests, but I will add tutorials once #724 is merged. As of now, a bug reported in #713 prevents me from adding any meaningful tutorial - but that should be fixed in #724 according to @ta",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/760:1273,adapt,adapt,1273,https://su2code.github.io,https://github.com/su2code/SU2/pull/760,1,['adapt'],['adapt']
Energy Efficiency,"here a retroactive application of unit testing may also make sense. I am copying Pat Miller, formerly with DoE, who may have more experience on whether such unit testing approaches were useful/worth the investment in some major codes he worked on. Best,. Juan. On Jun 4, 2019, at 2:14 PM, Clark Pederson <notifications@github.com<mailto:notifications@github.com>> wrote:. I propose adding a unit-testing framework and unit-tests to SU2. After chatting with @economon<https://github.com/economon>, I've decided to move the discussion here to get additional input. What is unit testing?. For those not familiar with unit testing, unit testing allows the testing of small bits of behavior, ideally using isolated bits of code. It is not intended to replace validation testing or formal verification tests. Instead, it serves a unique purpose. Consider the three following use cases:. * You're developing a new feature, and you want to test it to see if it works. You could do a full simulation, but that takes a lot of time and computing power. You want to check if your new behavior behaves as you suspect before you throw a lot of resources at it.; * You submit a PR and discover that one of the regression tests has failed. But...why? You know that something is broken, but its hard to track down what broke. You want more granular test coverage that can demonstrate what broke.; * You are fixing a very small bug. You know that you should prove that your bug fix worked, but it doesn't seem logical to dedicate an entire validation case to one small bug fix. You want to write a small test for a small fix. In all of these cases, unit testing fills a unique role. Unit testing increases time spent in development, but decreases the amount of time spent in bug-fixing and maintaining. For more information, see this relevant Stack Exchange question.<https://scicomp.stackexchange.com/questions/206/is-it-worthwhile-to-write-unit-tests-for-scientific-research-codes>. What do I propose?. My research g",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/698#issuecomment-499250240:1460,power,power,1460,https://su2code.github.io,https://github.com/su2code/SU2/issues/698#issuecomment-499250240,2,['power'],['power']
Energy Efficiency,"iEdge repeated. This concept of padding is important for something else, you may have noticed that the SIMD point-loops I showed make no provisions for values of nPoint that are not multiples of SIMDLEN, that is because the containers already took care of that by rounding up the number of columns, and so that seemingly out-of-bounds access is safe (ain't encapsulation great). Padding also aligns the start of each column, thus it is a generally good thing to have (on large dimensions) whether used or not. Here is a relative performance recap before we talk bout parallelization. | Code | Edge | Edge, SIMD on vars | Point | Point, SIMD on points |; | ---- | ---- | ---- | ---- | ---- |; | **Speed** | 1.0 | 2.2 | 0.83 | 1.35 |. **Parallel execution**. I will start at the end for this, all it takes to parallellize the points loops with OpenMP is to take this:; ```C++; for(size_t iPoint=0; iPoint<nPoint; iPoint+=SIMDLEN); ```; And add some pixie dust; ```C++; #pragma omp parallel for schedule(dynamic,128); for(size_t iPoint=0; iPoint<nPoint; iPoint+=SIMDLEN); ```; This means each thread gets chunks of 128 loop iterations (512 points) to work on, assigned in a dynamic way, the 4 core speedup (still relative to our reference) is **3.8** for the SIMD code and **2.8** for the scalar code. Parallelizing the edge loops is a bit more intricate, as this:; ```C++; for(size_t iEdge=0; iEdge<nEdge; ++iEdge); {; size_t iPoint = connectivity[iEdge].first;; size_t jPoint = connectivity[iEdge].second;; ```; Becomes:; ```C++; for(size_t color=0; color<colorStart.size()-1; ++color); #pragma omp parallel for schedule(dynamic,CHUNK_SIZE); for(size_t k=colorStart[color]; k<colorStart[color+1]; ++k); {; #if SORT_BY_COLOR==1; size_t iEdge = k;; #else; size_t iEdge = edgeIdx[k];; #endif. size_t iPoint = connectivity[iEdge].first;; size_t jPoint = connectivity[iEdge].second;; ```; Apologies for the macro but it is just to illustrate that if we re-sort edge data after coloring the edge index is th",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/789#issuecomment-530328194:12291,schedul,schedule,12291,https://su2code.github.io,https://github.com/su2code/SU2/issues/789#issuecomment-530328194,2,['schedul'],['schedule']
Energy Efficiency,"ialization part, k is considered depending on whether or not the SST model is used for Total Energy. In CEulerSolver.cpp ; `bool tkeNeeded = (turbulent && config->GetKind_Turb_Model() == TURB_MODEL::SST);`; `if (tkeNeeded) { Energy_FreeStream += Tke_FreeStream; }; config->SetEnergy_FreeStream(Energy_FreeStream);`; `if (tkeNeeded) Energy_FreeStreamND += Tke_FreeStreamND;`. But In the flux calculation part, when calculating the speed of sound(a), using the total enthalpy(H). But, in this part consider only the kinetic energy. . Expressed mathematically ; ![image](https://user-images.githubusercontent.com/50565314/208861650-92b8cad6-5a1f-4742-952b-30d0187ae28b.png). but in the SU2 code using below. ![image](https://user-images.githubusercontent.com/50565314/208861902-ff614d53-d07e-4237-a04d-73a49ad5a55c.png). The speed of sound always has a slightly high value because TKE is not subtracted. See ""roe.cpp"" line 119 ~ 149. ; `RoeSoundSpeed2 = (Gamma-1)*(RoeEnthalpy-0.5*sq_vel);` ; This line might be changed roughly like : ; `RoeSoundSpeed2 = (Gamma-1)*(RoeEnthalpy-0.5*sq_vel-k);` . There seem to be two possible ways to this problem.; 1. Subtract TKE when the speed of sound calculation; 2. Store e(static energy) or k in primitive variables; 3. ; I'm not sure which is clear and easy. **Bug report checklist**; *Please make sure that you have followed the checklist below, many common problems can be solved by:*. - [ ] Consulting the build instructions (https://su2code.github.io/docs_v7/Build-SU2-Linux-MacOS/).; - [ ] Looking for similar problems on GitHub or CFD-Online (https://www.cfd-online.com/Forums/su2/).; - [ ] Updating to the newest version of SU2 (either develop, master, or the pre-built executables https://su2code.github.io/download.html). **Desktop (please complete the following information):**; - OS: [e.g., Linux (Redhat 6.6)]; - C++ compiler and version: [e.g., g++ (GCC) 4.8.5]; - MPI implementation and version: [e.g., OpenMPI 3.0.0]; - SU2 Version: [e.g., v7.4.0]",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1851:2284,energy,energy,2284,https://su2code.github.io,https://github.com/su2code/SU2/issues/1851,1,['energy'],['energy']
Energy Efficiency,"il now, the concept “Zones” could refer to either different subdomains in space (interacting with each other over a common interface, e.g. for conjugate heat transfer, turbomachinery or FSI), or to copies (or instances) of the same domain evaluated under different conditions (e.g., for Harmonic Balance there are several time instances). . The previous concepts are now separated, allowing for a consistent definition of zones and instances in the code which can potentially be used simultaneously, and without the loss of any functionality. The proposed scheme is better explained in the attached [diagram](https://github.com/su2code/SU2/files/1955507/zones_vs_instances.pdf). ## Related Work. - Further work will involve improvements in the config definition, to make it more clear for the community of users of SU2 (particularly in cases involving multiple zones/instances). The output will also be reorganized, to be consistent with the abstraction of the rest of the code. - I have adapted the HB problems to the new definition, so @arubino and @sravya91, if you have some time please do double check that this PR looks good to you! Apart from the regression tests, which should be passing, I have also double checked that the file output for these particular problems wasn’t affected by the changes. - Additionally, I have removed some warnings that were in the code from a recent PR. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/528:1381,adapt,adapted,1381,https://su2code.github.io,https://github.com/su2code/SU2/pull/528,1,['adapt'],['adapted']
Energy Efficiency,"imizations seem to **run independently of what I set as the OBJECTIVE_WEIGHT**. My understanding is that a negative value means minimization of the objective function and vice versa. However, with OBJECTIVE_WEIGHT=-1, the optimization seems to increase my objective function rather than reduce it. In the config_DOT_AD (and other configs), the objective weight was still +1 so I believe it wasn't being parsed correctly. I had to hardcode all instances of OBJECTIVE_WEIGHT in the C++ and python scripts from +1 to -1 to resolve the issue (which it did in the configs), however, the optimization direction is still opposite to what I want. 4. The DV_Value is always 0.001 in the config files. What is this value and is this hardcoded? . 5. In the _of_grad_*_ file the third column is for _""FINDIFF_STEP""_ = DV_Value. Does it mean that the grid deformation wrt to control points is done via finite differences?. **Problem specific details,**. **Case:** Single blade row stator passage with inlet profiles. OBJECTIVE_FUNCTION= PRESSURE_DROP; **OPTIMIZER= BFGS**; output for history_project.dat:; ""PRESSURE_DROP""; 10791.40653; 10943.29967; 10943.29967; 11041.58637; 11041.58637. The PRESSURE_DROP was supposed to be reduced (weight -1) but it's increasing. **With SLSQP I get:**; Sequential Least SQuares Programming (SLSQP) parameters:; Number of design variables: 56 ( 56 ); Objective function scaling factor: [1.0]; Maximum number of iterations: 20; Requested accuracy: 1e-20; .....; NIT FC OBJFUN GNORM; 1 1 1.078075E+00 6.354859E-11; Optimization terminated successfully. (Exit mode 0); Current function value: 1.07807522; Iterations: 1; Function evaluations: 1; Gradient evaluations: 1. And no further designs are generated. What makes SLSQP to 'converge'?. **I am using branch** [turbo_output_opt](https://github.com/su2code/SU2/compare/develop...turbo_output_opt) (updated to latest develop). Thanks in advance. Config file: [case728.txt](https://github.com/su2code/SU2/files/4606913/case728.txt)",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/976:1746,reduce,reduced,1746,https://su2code.github.io,https://github.com/su2code/SU2/issues/976,1,['reduce'],['reduced']
Energy Efficiency,"is **no initialization of Omega_Ref in slover_direct_mean.cpp for incompressible flow**. . ``` C++; /*--- Incompressible non dimensionalization ---*/. else {. /*--- Reference length = 1 (by default); Reference density = liquid density or freestream; Reference viscosity = liquid viscosity or freestream; Reference velocity = liquid velocity or freestream; Reference pressure = Reference density * Reference velocity * Reference velocity; Reynolds number based on the liquid or reference viscosity ---*/. Pressure_FreeStream = 0.0; config->SetPressure_FreeStream(Pressure_FreeStream);; Density_FreeStream = config->GetDensity_FreeStream();; ModVel_FreeStream = 0.0;; for (iDim = 0; iDim < nDim; iDim++) ModVel_FreeStream += config->GetVelocity_FreeStream()[iDim]*config->GetVelocity_FreeStream()[iDim];; ModVel_FreeStream = sqrt(ModVel_FreeStream); config->SetModVel_FreeStream(ModVel_FreeStream);. /*--- Additional reference values defined by Pref, Tref, Rho_ref. By definition,; Lref is one because we have converted the grid to meters.---*/. Length_Ref = config->GetLength_Reynolds(); config->SetLength_Ref(Length_Ref);; Density_Ref = Density_FreeStream; config->SetDensity_Ref(Density_Ref);; Velocity_Ref = ModVel_FreeStream; config->SetVelocity_Ref(Velocity_Ref);; Pressure_Ref = Density_Ref*(Velocity_Ref*Velocity_Ref); config->SetPressure_Ref(Pressure_Ref);; ///#NOTE JC; Omega_Ref = Velocity_Ref/Length_Ref; config->SetOmega_Ref(Omega_Ref);; ```. Then I copied the corresponding codes to places for incompressible flow. Run it again, however, terminal prints the right pitching frequency, it still meet errors. The screen outputs are:. ``` shell; ------------------------------ Begin Solver -----------------------------. Updating surface positions.; Storing translating displacement for marker: airfoil.; Translational velocity: (0, 0, 0) m/s.; Deforming the volume grid.; CSysSolve::FGMRES(): system solved by initial guess.; Non-linear iter.: 1/2. Linear iter.: 0. Min. area: 8.10228e-10. E",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/193:4208,meter,meters,4208,https://su2code.github.io,https://github.com/su2code/SU2/issues/193,1,['meter'],['meters']
Energy Efficiency,"it testing may also make sense. I am copying Pat Miller,; > formerly with DoE, who may have more experience on whether such unit; > testing approaches were useful/worth the investment in some major codes he; > worked on.; >; > Best,; >; > Juan; >; >; > On Jun 4, 2019, at 2:14 PM, Clark Pederson <notifications@github.com>; > wrote:; >; > I propose adding a unit-testing framework and unit-tests to SU2. After; > chatting with @economon <https://github.com/economon>, I've decided to; > move the discussion here to get additional input.; > What is unit testing?; >; > For those not familiar with unit testing, unit testing allows the testing; > of small bits of behavior, ideally using isolated bits of code. It is not; > intended to replace validation testing or formal verification tests.; > Instead, it serves a unique purpose. Consider the three following use cases:; >; > - You're developing a new feature, and you want to test it to see if; > it works. You could do a full simulation, but that takes a lot of time and; > computing power. You want to check if your new behavior behaves as you; > suspect before you throw a lot of resources at it.; > - You submit a PR and discover that one of the regression tests has; > failed. But...why? You know that something is broken, but its hard to track; > down what broke. You want more granular test coverage that can demonstrate; > what broke.; > - You are fixing a very small bug. You know that you should prove that; > your bug fix worked, but it doesn't seem logical to dedicate an entire; > validation case to one small bug fix. You want to write a small test for a; > small fix.; >; > In all of these cases, unit testing fills a unique role. Unit testing; > increases time spent in development, but decreases the amount of time spent; > in bug-fixing and maintaining.; >; > For more information, see this relevant Stack Exchange question.; > <https://scicomp.stackexchange.com/questions/206/is-it-worthwhile-to-write-unit-tests-for-scientific-re",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/698#issuecomment-499278427:2487,power,power,2487,https://su2code.github.io,https://github.com/su2code/SU2/issues/698#issuecomment-499278427,2,['power'],['power']
Energy Efficiency,"it uses a Hessian of the Euler fluxes so it might work for NS/RANS, but probably not) (@WallyMaier and I also extended it to TNE2 in [feature_amgtne2](https://github.com/su2code/SU2/tree/feature_amgtne2) but the source terms are giving us trouble on adapted meshes); 2. It requires AD support since it uses the discrete adjoint to weigh the Euler flux Hessians; 3. I did all my testing with the AMG executable since pyAMG doesn't have all the features I currently need, but I just updated the branch to use pyAMG. I just tested the new interface with an airfoil and it seems to be working, but there might still be some bugs. You'll want to run mesh_adaptation_amg.py with the following options:; **ADAP_SIZES:** list of mesh complexities for each adaptive level. This is correlated to mesh size, but picking good values requires some playing around; **ADAP_SUBITE:** number of adaptations performed at each adaptive level. If set to (2,3) for example, it will run 2 adaptive iterations to try to reach ADAP_SIZES[0], and 3 iterations to try to reach ADAP_SIZES[1]; **ADAP_EXT_ITER:** number of iterations used by SU2_CFD and SU2_CFD_AD for each adaptive level; **ADAP_RESIDUAL_REDUCTION:** order of magnitude residual reduction for SU2_CFD and SU2_CFD_AD for each adaptive level; **ADAP_SENSOR:** currently only works for GOAL; **ADAP_HMAX:** maximum cell size (m); **ADAP_HMIN:** minimum cell size (m); **ADAP_HGRAD:** gradation coefficient (>1) used by AMG during mesh smoothing. A larger value corresponds to larger allowed gradient in mesh size. E.g. for the RAE2822 I used:; ADAP_SIZES= (12800, 19200, 25600); ADAP_SUBITE= (2, 2, 2); ADAP_EXT_ITER= (9999, 9999, 9999); ADAP_RESIDUAL_REDUCTION= (6, 6, 6); ADAP_SENSOR= GOAL; ADAP_HMAX= 10.0; ADAP_HMIN= 1e-8; ADAP_HGRAD= 1.5. ![mesh](https://user-images.githubusercontent.com/19416354/59965706-940fa700-94c6-11e9-811c-4379694f0f7b.png); ![sol](https://user-images.githubusercontent.com/19416354/59965707-940fa700-94c6-11e9-9e1a-e0ae6854d412.png)",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/606#issuecomment-504675574:1388,adapt,adaptive,1388,https://su2code.github.io,https://github.com/su2code/SU2/issues/606#issuecomment-504675574,3,['adapt'],['adaptive']
Energy Efficiency,"ithub.com/actions/cache/pull/1123"">actions/cache#1123</a></li>; </ul>; <!-- raw HTML omitted -->; </blockquote>; <p>... (truncated)</p>; </details>; <details>; <summary>Changelog</summary>; <p><em>Sourced from <a href=""https://github.com/actions/cache/blob/main/RELEASES.md"">actions/cache's changelog</a>.</em></p>; <blockquote>; <h1>Releases</h1>; <h3>4.0.1</h3>; <ul>; <li>Updated <code>isGhes</code> check</li>; </ul>; <h3>4.0.0</h3>; <ul>; <li>Updated minimum runner version support from node 12 -&gt; node 20</li>; </ul>; <h3>3.3.3</h3>; <ul>; <li>Updates <code>@​actions/cache</code> to v3.2.3 to fix accidental mutated path arguments to <code>getCacheVersion</code> <a href=""https://redirect.github.com/actions/toolkit/pull/1378"">actions/toolkit#1378</a></li>; <li>Additional audit fixes of npm package(s)</li>; </ul>; <h3>3.3.2</h3>; <ul>; <li>Fixes bug with Azure SDK causing blob downloads to get stuck.</li>; </ul>; <h3>3.3.1</h3>; <ul>; <li>Reduced segment size to 128MB and segment timeout to 10 minutes to fail fast in case the cache download is stuck.</li>; </ul>; <h3>3.3.0</h3>; <ul>; <li>Added option to lookup cache without downloading it.</li>; </ul>; <h3>3.2.6</h3>; <ul>; <li>Fix zstd not being used after zstd version upgrade to 1.5.4 on hosted runners.</li>; </ul>; <h3>3.2.5</h3>; <ul>; <li>Added fix to prevent from setting MYSYS environment variable globally.</li>; </ul>; <h3>3.2.4</h3>; <ul>; <li>Added option to fail job on cache miss.</li>; </ul>; <h3>3.2.3</h3>; <ul>; <li>Support cross os caching on Windows as an opt-in feature.</li>; <li>Fix issue with symlink restoration on Windows for cross-os caches.</li>; </ul>; <h3>3.2.2</h3>; <ul>; <li>Reverted the changes made in 3.2.1 to use gnu tar and zstd by default on windows.</li>; </ul>; <h3>3.2.1</h3>; <!-- raw HTML omitted -->; </blockquote>; <p>... (truncated)</p>; </details>; <details>; <summary>Commits</summary>; <ul>; <li><a href=""https://github.com/actions/cache/commit/ab5e6d0c87105b4c9c2047343972218f562",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2232:6728,Reduce,Reduced,6728,https://su2code.github.io,https://github.com/su2code/SU2/pull/2232,1,['Reduce'],['Reduced']
Energy Efficiency,"ized, now it only evaluates isoparameters for a few nearby candidate donor elements (instead of all possible ones).; - The setup of CMirror was optimized both for memory (by communicating only information as needed) and speed (by reducing algorithmic complexity from quadratic to linearithmic) this item is in #833.; - The setup of CIsoparametric, CNearestNeighbor, and CMirror are now hybrid parallel.; #### Maintenance:; - Restructure (split) and cleanup the files.; - Heavy refactoring of RBF interpolation.; - Heavy refactoring of isoparametric interpolation, the method was incorrect for quadrilaterals (and the code too complex).; - Heavy refactoring of mirror (conservative) interpolation, the algorithm is perhaps more complex but the code is cleaner and 10x faster (this is in #833).; - Medium cleanup of CInterpolator (const correctness, unnecessary mpi ifdefs, etc.).; - Light cleanup of CDriver/CTransfer (deleting copy-pasted code); #### Other enhancements:; - Initialize the linear system solutions in CMeshSolver to speedup 3D FSI simulations, but especially to reduce overhead in FSI discrete adjoint cases.; - Too improve the quality of deformed grids in FSI cases with large ""out-of-plane"" displacements, a thicker layer of stiff cells can be imposed around the deforming boundaries. The thickness of the layer is defined by option `DEFORM_STIFF_LAYER_SIZE = [0]` when `DEFORM_STIFFNESS_TYPE = WALL_DISTANCE`. This allows refined regions around a wing tip to be dragged instead of sheared (which happens with the simple 1/x variation).; #### Other fixes:; - CFEASolver displacement boundary conditions (the weird bug detailed below).; - CFEASolver load integration for FSI simplified to fix mpi-related bug.; - Option CFL_REDUCTION_TURB having no effect.; - Restarts with moving wall cases work by default. I know, there's way too much stuff in this PR, but it was all required to make 3D FSI more reliable, and hey, it works!; ![3D_FSI](https://user-images.githubusercontent.com/380",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/914:1705,reduce,reduce,1705,https://su2code.github.io,https://github.com/su2code/SU2/pull/914,1,['reduce'],['reduce']
Energy Efficiency,"le (and the user will decide which one turn on of off using templet of paraview); > ; > MARKER_MONITORING, MARKER_DESIGNING: The main idea is to be able to compute to different integrals over the surfaces: one for simulation and the other for design. e.g. You maybe want to include all the solid surfaces and fan faces, and charging stations in MARKER_MONITORING to compute (Drag-Thrust) but in MArKER DESIGN you are only interested on the wing surface for design.; > ; > DV_MARKER. This is an unfortunately name. At the very beginning the mesh deformation capability was developed only for shape design (DV = Design Variables). We should generalize the names of the grid deformation parameters without using DV. Thanks!; Francisco. On Aug 18, 2015, at 4:31 AM, Heather Kline notifications@github.com wrote:. > Thanks Tom; > I agree that we should make things easy to understand. ; > My thinking was that most users will want to know what parts of the mesh they are moving, but don't necessarily need to know what's happening underneath - if they specify the entire mesh the code just reverts to the more efficient method. But (from the users perspective) it may be just as easy to have a separate specification for scaling the entire mesh.; > ; > In terms of moving it to SU2_MSH; I think it may make sense to include scale/rotate/translate in SU2_MSH, but I think it would be confusing to have two options that do the same thing. I would side with separate option names (this would also eliminate a loop over markers in this pull request); > ; > On this topic, I have sometimes found MARKER_DESIGNING and DV_MARKER to be confusing; on their own they sound very similar, in the description MARKER_DESIGNING is where the objective function is evaluated - but in the code, it's not clear what MARKER_DESIGNING does - the surfaces specified by MARKER_MONITORING are what are actually used to evaluate the objective function value.; > ; > There may be other similar areas where config file options could ",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/187#issuecomment-133010923:1470,efficient,efficient,1470,https://su2code.github.io,https://github.com/su2code/SU2/pull/187#issuecomment-133010923,2,['efficient'],['efficient']
Energy Efficiency,"lease</p>; <h2>What's new in v2</h2>; <ul>; <li>Added support for multiple paths (<a href=""https://github-redirect.dependabot.com/actions/cache/issues/16"">actions/cache#16</a>), glob patterns, and single file caches (<a href=""https://github-redirect.dependabot.com/actions/cache/issues/33"">actions/cache#33</a>)</li>; <li>Increased performance and improved cache sizes using <code>zstd</code> for compression for Linux and macOS runners (<a href=""https://github-redirect.dependabot.com/actions/cache/issues/184"">actions/cache#184</a>)</li>; <li>Allowed caching for all events with a ref (<a href=""https://github-redirect.dependabot.com/actions/cache/issues/63"">actions/cache#63</a>)</li>; <li>Created the <a href=""https://github.com/actions/toolkit/tree/master/packages/cache""><code>@actions/cache</code></a> npm package to allow other actions to utilize caching (<a href=""https://github-redirect.dependabot.com/actions/cache/issues/55"">actions/cache#55</a>)</li>; <li>Added a best-effort step to delete the archive after extraction to reduces storage space (<a href=""https://github-redirect.dependabot.com/actions/cache/pull/209"">actions/cache#209</a>)</li>; </ul>; <h2>v1.2.0</h2>; <h1>Bug Fixes</h1>; <ul>; <li>Fall back to GNU tar on older versions of Windows that do not have BSD tar installed (<a href=""https://github-redirect.dependabot.com/actions/cache/issues/252"">#252</a>)</li>; <li>Fixed chunk upload retry logic (<a href=""https://github-redirect.dependabot.com/actions/cache/issues/305"">#305</a>)</li>; </ul>; <!-- raw HTML omitted -->; </blockquote>; <p>... (truncated)</p>; </details>; <details>; <summary>Changelog</summary>; <p><em>Sourced from <a href=""https://github.com/actions/cache/blob/main/RELEASES.md"">actions/cache's changelog</a>.</em></p>; <blockquote>; <h1>Releases</h1>; <h3>3.0.0</h3>; <ul>; <li>Updated minimum runner version support from node 12 -&gt; node 16</li>; </ul>; <h3>3.0.1</h3>; <ul>; <li>Added support for caching from GHES 3.5.</li>; <li>Fixed download is",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1755:4032,reduce,reduces,4032,https://su2code.github.io,https://github.com/su2code/SU2/pull/1755,1,['reduce'],['reduces']
Energy Efficiency,location.; - Merge branch 'feature_MarkerMax' into develop; - Time and date in the header.; - Small fix to the latest commit.; - Simplification of entropy correction; - Critical stability improvement.; - Minor release 3.2.7.2; - Fixing issues to run with the latest intel compiler; - Fix for Tecplot binary solutions for unsteady flows. Fixes #150.; - Now SU2 should work with the latest version of the Intel compiler.; - Merge branch 'develop' of https://github.com/su2code/SU2 into develop; - Working on the O3 stuff; - Small change.; - Add another check to improve stability.; - Collection of improvements.; - Updated actuator disk; - Merge branch 'develop' of https://github.com/su2code/SU2 into develop; - Preliminary implementation of the Neg SA; - Minor updates; - Preliminary implementation of the Negative SA; - Bug fixing; - Fixed memory issued for very large meshes with ParMETIS.; - Clear evaluation of Vorticity and StrainMag; - Viscous limiter; - Updated RELAXATION_FACTOR; - RANS MG; - Partial fix to no MPI output; - Updated I/O; - Updated Adapt CFL; - Updated Adaptive CFL number; - Release 3.2.8; - Updated SetCFL_Number; - Small update; - Small change; - Small adjustments; - Minor changes; - Updated release 3.2.8; - MPI disabled by default in build. Added --enable-mpi flag to configure.; - Merged the ParMETIS implementation. Updated the build files.; - bootstrap; - Started parallel CGNS reader.; - Memory fix.; - Minor change; - Merge branch 'develop' of https://github.com/su2code/SU2 into develop; - Updated binaries; - Small change to configure.ac. Bootstrap.; - Small change; - Cleaning the code; - Updated grid deformation subroutine; - Fixing the mesh deformation; - Updated SU2_MSH; - Bug fixing; - Initial implementation of parallel CGNS reader. Works on 1 rank.; - Merged in recent changes to geometry_structure.cpp.; - Periodic BC working in serial; - Update option_structure.hpp; - Merge pull request #154 from su2code/fixCOptionEnumList; - Bug fixing (periodic bc);,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/174#issuecomment-101443812:5553,Adapt,Adapt,5553,https://su2code.github.io,https://github.com/su2code/SU2/pull/174#issuecomment-101443812,2,['Adapt'],"['Adapt', 'Adaptive']"
Energy Efficiency,m. value| Ref. value| Unit|Non-dim. value|; +--------------------------------------------------------------------------+; | Ref. Viscosity| 1.716e-05| 624.034| N.s/m^2| 2.74985e-08|; | Sutherland Temp.| 273.15| 300| K| 0.9105|; | Sutherland Const.| 110.4| 300| K| 0.368|; +--------------------------------------------------------------------------+; | Prandtl (Lam.)| -| -| -| 0.72|; | Prandtl (Turb.)| -| -| -| 0.9|; +--------------------------------------------------------------------------+; | Gas Constant| 287.058| 287.058| N.m/kg.K| 1|; | Spec. Heat Ratio| -| -| -| 1.4|; +--------------------------------------------------------------------------+; -- Free-stream conditions:; +--------------------------------------------------------------------------+; | Name| Dim. value| Ref. value| Unit|Non-dim. value|; +--------------------------------------------------------------------------+; | Static Pressure| 183127| 183127| Pa| 1|; | Density| 2.12649| 2.12649| kg/m^3| 1|; | Temperature| 300| 300| K| 1|; | Total Energy| 216650| 86117.4| m^2/s^2| 2.51575|; | Velocity-X| 51.2923| 293.458| m/s| 0.174786|; | Velocity-Y| 9.04422| 293.458| m/s| 0.0308195|; |Velocity Magnitude| 52.0836| 293.458| m/s| 0.177482|; +--------------------------------------------------------------------------+; | Viscosity| 1.84592e-05| 624.034| N.s/m^2| 2.95804e-08|; | Conductivity| -| 179134| W/m^2.K| -|; | Turb. Kin. Energy| 10.1726| 86117.4| m^2/s^2| 0.000118125|; | Spec. Dissipation| 117188| 293.458| 1/s| 399.335|; +--------------------------------------------------------------------------+; | Mach Number| -| -| -| 0.15|; | Reynolds Number| -| -| -| 6e+06|; +--------------------------------------------------------------------------+. Initialize Jacobian structure (Navier-Stokes). MG level: 0.; Initialize Jacobian structure (SA model).; Initialize Jacobian structure (Navier-Stokes). MG level: 1.; Initialize Jacobian structure (Navier-Stokes). MG level: 2.; Initialize Jacobian structure (Navier-Stokes).,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/591:7840,Energy,Energy,7840,https://su2code.github.io,https://github.com/su2code/SU2/issues/591,1,['Energy'],['Energy']
Energy Efficiency,"metric primitives (edges/points) or multiple solution primitives (variables). The latter sounds like a sensible idea until we get to areas of the code where different primitives require different treatment, that and the fact that the number of variables might not fit evenly in the number of lanes can lead to very tricky and non-generic code. Nevertheless if the same code were to be applied to e.g. 4 solution variables, this strategy would likely perform better as it avoids the pesky gather/scatter operations.; Processing multiple geometric primitives can make full utilization of whatever register size (important on GPU's), the code is just as readable (as I hope to show), but gather/scatter cannot be avoided. ### Intro to SPMD; This one is simpler, in a nutshell multiple threads operate on the sub domain of an MPI rank.; The typical implementation has each thread executing a chunk of an edge or cell loop. **Why should we care about SPMD?**; Reduce the communication overhead resulting from domain decomposition and improve load balancing, important for strong scaling.; Some algorithms are more efficient that way, e.g. the ADT (as mentioned by Edwin), the current MG also seems to work better on fewer partitions, and additive versions of preconditioners like the ILU or LU-SGS lose effectiveness with number of partitions.; Optimum hardware utilization, for routines that are bandwidth-bound it may be beneficial to use all threads available, while for compute-bound or ""algorithm-bound"" ones this may not be the case. **Relation with algorithms**; A typical edge loop reads from 2 locations and writes to 2 locations (gather / scatter access pattern, not to be confused with the instructions) processing multiple edges at the same time can therefore result in race conditions where multiple threads try to update the data of the same point.; There are 3 ways to address this:; - **Coloring**: Edges are colored (grouped) such that edges of the same color have no risk of race conditi",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/789#issuecomment-529662724:3093,Reduce,Reduce,3093,https://su2code.github.io,https://github.com/su2code/SU2/issues/789#issuecomment-529662724,1,['Reduce'],['Reduce']
Energy Efficiency,"modelling of propellers. ## Proposed Changes. The present work is on modifications to the actuator disk model. Variable load actuator disk (VLAD) [Saetta, 2020] uses the given blade loading (which is fixed for the entire duration of the simulation) to impose axial and tangential jumps at the interface. Propeller loading depends on many different parameters and is affected by the surrounding structures and angle of attack (AoA). A method that updates the blade loading at run time is required to take care of the interactions and installation effects. . In the present approach, the Blade Element Method (BEM) is used to calculate the pressure jump and swirl distributions across the propeller disc and is coupled to the SU2 solver. The blade loading and changes to the flow-field are calculated recursively. Propeller geometry details, airfoil characteristics, propeller speed and set blade angle are required as inputs. Using the thrust and power along the blade from BEM, and following the procedure of VLAD, axial and tangential velocities are imposed at the interface. BEM method is verified against the experimental results [Veldhuis, 2005] and found to be performing well. ## Related Work. This work was presented at; SU2 Conference 2022, 5--7 Sept 2022,; Propeller blade load calculation for actuator disk using blade element method.; https://www.youtube.com/watch?v=otM_Lz2MV4U. and published in; International Journal of Aeronautical and Space Sciences; https://doi.org/10.1007/s42405-023-00593-5. The grid file for the test case is in the new branch on the fork at; https://github.com/josy-nal/su2codeTestCases/tree/feature-actuatordisk-bem. This implementation is under active development seeking reviews, instructions and suggestions to meet SU2 code standards. References:. Saetta E, Russo L, Tgnaccini R (2020); Implementation and validation of a new actuator disk model in SU2.; SU2 conference 2020, virtual event. Veldhuis L (2005) Propeller-wing aerodynamic interface,; Ph.D. the",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2142:1023,power,power,1023,https://su2code.github.io,https://github.com/su2code/SU2/pull/2142,1,['power'],['power']
Energy Efficiency,"n""; ; if not os.path.exists(config_amg['mesh_out']):; raise RuntimeError , ""\n##ERROR : Mesh adaptation failed.\n""; ; if not os.path.exists(""current.itp.solb""):; raise RuntimeError , ""\n##ERROR AMG: Solution interpolation failed.\n"" ; ; #--- Convert output from Inria mesh format to su2; # Deal with markers; ; save_markers = mesh['markers']; del mesh; ; # Read Inria mesh; mesh = su2amg.read_mesh(config_amg['mesh_out'], ""current.itp.solb""); mesh['markers'] = save_markers; ; current_mesh = ""ite%d.su2"" % global_iter; current_solution = ""ite%d.dat"" % global_iter ; ; su2amg.write_mesh(current_mesh, current_solution, mesh); ; if not os.path.exists(current_mesh) or not os.path.exists(current_solution) :; raise RuntimeError , ""\n##ERROR : Conversion to SU2 failed.\n"". else : # Use pyAmg interface; ; ; #--- Load su2 mesh ; ; mesh = su2amg.read_mesh(current_mesh, current_solution); ; #--- Create sensor used to drive the adaptation; ; sensor_wrap = su2amg.create_sensor(mesh, adap_sensor); ; mesh['sensor'] = sensor_wrap['solution']; ; sys.stdout.write(' %s Generating adapted mesh using AMG\n' % pad_cpt); ; mesh_new = su2amg.amg_call_python(mesh, config_amg); ; #--- print mesh size; ; sys.stdout.write(' %s AMG done: %s\n' % (pad_nul, su2amg.return_mesh_size(mesh_new))); ; mesh_new['markers'] = mesh['markers']; mesh_new['dimension'] = mesh['dimension']; ; current_mesh = ""ite%d.su2"" % global_iter; current_solution = ""ite%d.dat"" % global_iter; ; su2amg.write_mesh(current_mesh, current_solution, mesh_new); ; #--- Run su2; ; log = 'ite%d.SU2'%global_iter; stdout_hdl = open('%sstdout'%log,'w') # new targets; stderr_hdl = open('%sstderr'%log,'w'); ; success = False; val_out = [False]; ; sys.stdout.write(' %s Running CFD\n' % pad_nul); ; try: # run with redirected outputs; ; sav_stdout, sys.stdout = sys.stdout, stdout_hdl ; sav_stderr, sys.stderr = sys.stderr, stderr_hdl; ; current_solution_ini = ""ite%d_ini.dat"" % global_iter; os.rename(current_solution, current_solution_ini); ; config_c",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/606#issuecomment-504636643:10291,sensor,sensor,10291,https://su2code.github.io,https://github.com/su2code/SU2/issues/606#issuecomment-504636643,1,['sensor'],['sensor']
Energy Efficiency,"nd max neighbors as small local variables instead of large global ones due to the way those values are determined. This is where the memory from the extra adjacency information is recovered. Like @economon said, fusing the gradient kernel with the limiter kernel is trivial with these point loops, and I do not think it affects readability much since one can clearly tell ""what is what"" (I will not put it here but it really is a matter of copy paste), including the boundaries could be a bit more challenging, but I will give performance number nevertheless. **Performance summary**. | Code | Edge | Edge, SIMD on vars | Point | Point, SIMD on points |; | ---- | ---- | ---- | ---- | ---- |; | **Speed 1 core** | 1.0 | 1.75 | 1.25 | 2.0 |; | **Speed 4 cores** | 2.45 | 2.7 | 4.5 | 7.0 |. The basic point version does not lose to edge based because, contrary to gradients, it does not require duplication of computations while benefiting from sequential access to gradients.; Again the point-based implementation does really well in parallel, limiters are more compute intensive and so the scaling is almost perfect.; For reference, limiters are 1.9 times more expensive to compute than gradients with the reference edge version. With point loops, SIMD, and in parallel, gradients and limiters cost the same. If we consider the combined cost of gradients and limiters, and compare the scalar ""edge+edge"" with the SIMD ""point+point"" and ""fused point"" we get:. | G+L Approach | Edge+Edge | Point+Point | Fused Point |; | ---- | ---- | ---- | ---- |; | **Speed 1 core** | 1.0 | 1.75 | 1.85 |; | **Speed 4 cores** | 2.3 | 5.35 | 6.1 |. Fusing point loops only gives a 14% improvement vs separate loops due to the difference in gathered data, only one gather is amortized and the remaining memory accesses are very efficient.; Nevertheless if it can be done nicely while accounting for boundaries (which may have to be handled outside the loop) it could allow some memory savings for the discrete adjoint.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/789#issuecomment-530593912:11465,efficient,efficient,11465,https://su2code.github.io,https://github.com/su2code/SU2/issues/789#issuecomment-530593912,2,['efficient'],['efficient']
Energy Efficiency,"nd of my mesh. It's not necessary, though, and AMG performs ridge detection to identify any features anyway. I assume since it built and (kinda) ran that you managed to fix your python setup through your aliases?. What was the specific error that you got? I probably should have also mentioned that I've changed a lot of options since updating from Vic's old code. Here are the list of required options (values from my test case):; ```; % Type of sensor used for adaptation; % Options include GOAL (adjoint-based), MACH, PRES; PYADAP_SENSOR= GOAL; % Objective function used for goal-oriented adaptation; OBJECTIVE_FUNCTION= LIFT; % Maximum cell size for adaptation; PYADAP_HMAX= 500.0; % Minimum cell size for adaptation; PYADAP_HMIN= 1e-9; % Gradation factor (typically 1.2-1.8); PYADAP_HGRAD= 1.8; % Norm used for adaptation; % 1.0 or 2.0 recommended for inviscid flows; % 4.0 recommeneded for viscid; ADAP_NORM= 4.0; % Approximate mesh size (NPOI) at each level; PYADAP_COMPLEXITY= (30000, 60000, 120000); % Number of adaptations performed at each level; PYADAP_SUBITE= (3, 3, 3); ```; Some optional options:; ```; % Numerical method for Hessian reconstruction in goal-oriented adaptation; % Currently only Green-Gauss; NUM_METHOD_HESS= GREEN_GAUSS; % Value for ITER for the flow solver at each level; PYADAP_FLOW_ITER= (2999, 4999, 6999); % Value for ITER for the adjoint solver at each level; PYADAP_ADJ_ITER= (2999, 4999, 6999); % Value for CFL_NUMBER for the adjoint solver at each level; PYADAP_CFL= (10.0, 15.0, 20.0); % Background mesh containing fine surface representation; % Can be either a .su2 or .meshb (GMF) file; % If not specified, the baseline mesh is used; PYADAP_BACK= rae2822_euler_40960_split.meshb; % Invert the background mesh orientation; % Sometimes required for 3D meshes, since AMG doesn't perform; % a check that the orientation of the background and foreground; % meshes match; PYADAP_INV_BACK= NO; % Don't use ridge detection if corners specified; PYADAP_RDG= NO; ```",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/948#issuecomment-619412341:1316,adapt,adaptations,1316,https://su2code.github.io,https://github.com/su2code/SU2/issues/948#issuecomment-619412341,3,"['Green', 'adapt']","['Green-Gauss', 'adaptation', 'adaptations']"
Energy Efficiency,"new targets; stderr_hdl = open('%sstderr'%log,'w'); ; success = False; val_out = [False]; ; sys.stdout.write(' %s Running CFD\n' % pad_nul); ; try: # run with redirected outputs; ; sav_stdout, sys.stdout = sys.stdout, stdout_hdl ; sav_stderr, sys.stderr = sys.stderr, stderr_hdl; ; current_solution_ini = ""ite%d_ini.dat"" % global_iter; os.rename(current_solution, current_solution_ini); ; config_cfd.MESH_FILENAME = current_mesh; config_cfd.CONV_FILENAME = ""ite%d_history"" % global_iter; config_cfd.SOLUTION_FLOW_FILENAME = current_solution_ini; config_cfd.RESTART_FLOW_FILENAME = current_solution; ; config_cfd.RESIDUAL_REDUCTION = float(adap_res[iSiz]); config_cfd.EXT_ITER = int(adap_ext_iter[iSiz]); ; config_cfd.WRT_BINARY_RESTART = ""NO""; config_cfd.READ_BINARY_RESTART = ""NO""; ; SU2_CFD(config_cfd); ; if not os.path.exists(current_solution) :; raise RuntimeError , ""\n##ERROR : SU2_CFD Failed.\n""; ; ; except:; sys.stdout = sav_stdout; sys.stderr = sav_stderr; raise; ; sys.stdout = sav_stdout; sys.stderr = sav_stderr; ; ; #--- Print convergence history; ; plot_format = config_cfd['OUTPUT_FORMAT']; plot_extension = su2io.get_extension(plot_format); history_filename = config_cfd['CONV_FILENAME'] + plot_extension; ; history = su2io.read_history(history_filename); ; res_flow = history['Res_Flow[0]']; res_cvg = max(res_flow)-min(res_flow); ; del history; ; sys.stdout.write(' %s CFD done. Residual convergence %.2lf orders of magnitude\n' % (pad_nul, res_cvg)); ; ; to_remove = [""current.itp.solb"", config_amg['mesh_in'], config_amg['mesh_out'], config_amg['sol_in'],config_amg['itp_sol_in']]; for fil in to_remove:; if os.path.exists(fil) : os.remove(fil); ; global_iter += 1; ; os.rename(current_solution,os.path.join(cwd,config.RESTART_FLOW_FILENAME)); os.rename(current_mesh,os.path.join(cwd,config.MESH_OUT_FILENAME)); ; sys.stdout.write(""\nMesh adaptation successfully ended. Results files:\n""); sys.stdout.write(""%s\n%s\n\n"" % (config.MESH_OUT_FILENAME,config.RESTART_FLOW_FILENAME))",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/606#issuecomment-504636643:12755,adapt,adaptation,12755,https://su2code.github.io,https://github.com/su2code/SU2/issues/606#issuecomment-504636643,1,['adapt'],['adaptation']
Energy Efficiency,"ns for (D)DES and URANS"" we implemented the windowing regularizers proposed in the work of Krakos et al. ""Sensitivity analysis of limit cycle oscillations"" and adapted it to the AD framework of SU2. ; We call the feature in the following ""windowing"". ; Windowing can be applied if one takes the (windowed) time average of a periodic function, i.e. in the case of an instationary flow field that exhibits periodic behaviour. ; - We changed the functionality of the output-field-prefix TAVG and D_TAVG from a simple time average to a time averaged weighted with a windowing function. For the direct run this is just a post-processing step and changes happen only in signal_processing_toolbox and Coutput. ; - We adapted the seeding for the adjoint run from a the classic time average to a windowed time average. ; - Tests have shown, that higher order windowing regularizers, tend to converge quickly with respect to the averaged time span. We have implemented a ""timeConvergenceMonitor"", that acts similarly to the convergence monitoring of the inner convergence. It applies a cauchy convergence criterion to the chosen windowed time average output coefficients. ; - The cauchy convergence criterion works for direct run, adjoint run and shape optimization scripts; - In case of shape optimization, the script remembers the final time iteration of the direct run. If the final time step is smaller than the ""original"" final time step stated in the configuration file, it adapts the starting time of the adjoint run; and the time to seed the objective function, such that the seeding does not exceed the original time to end the seeding. ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers wil",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/836:1202,monitor,monitoring,1202,https://su2code.github.io,https://github.com/su2code/SU2/pull/836,1,['monitor'],['monitoring']
Energy Efficiency,"ntax);; - On each insertion we have to first look for the block by traversing the `colInd` (column index) array, we can instead map the diagonal blocks to the corresponding points and the off-diagonal blocks to the edge (remember we insert ""by the edge"").; - We can fuse numerics (possibly using the [decorator](https://en.wikipedia.org/wiki/Decorator_pattern) pattern) so that we write to the matrix only once per iteration, which means we only need to clear the diagonal blocks and not the entire matrix because we can **set** the off-diagonals instead of **updating** them. Assuming these modification our dummy loop becomes; ```c++; void testLoop2(const vector<size_t>& colorStart,; const vector<size_t>& edgeIdx,; const vector<pair<size_t,size_t> >& connectivity,; const double* blk_i, const double* blk_j,; SparseMatrix& matrix); {; matrix.setDiagZero();. for(size_t color=0; color<colorStart.size()-1; ++color); #pragma omp parallel for schedule(dynamic,CHUNK_SIZE); for(size_t k=colorStart[color]; k<colorStart[color+1]; ++k); {; size_t iEdge = edgeIdx[k];; size_t iPoint = connectivity[iEdge].first;; size_t jPoint = connectivity[iEdge].second;. matrix.updateBlocks(iEdge, iPoint, jPoint, blk_i, blk_j);; }; }; ```; where; ```c++; STRONGINLINE void SparseMatrix::updateBlocks(size_t edge,; size_t row, size_t col, const double* blk_i, const double* blk_j); {; size_t bii = diagMap[row], bij = edgeMap[edge].first,; bjj = diagMap[col], bji = edgeMap[edge].second;. #pragma omp simd; for(size_t k=0; k<blkSz; ++k); {; coeffs[bii+k] += blk_i[k]; coeffs[bij+k] = +blk_j[k];; coeffs[bji+k] = -blk_i[k]; coeffs[bjj+k] -= blk_j[k];; }; }; ```; This is **47% faster**, which for a memory bound task is massive!; Yes, this does increase the memory footprint a bit (makes CSysMatrix 4% larger for a 3D problem) but I can get that back by sharing sparsity patterns and maps across turbulence and bulk flow (I think @talbring was already working on this in the template linear solver branch he had starte",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/789#issuecomment-535977206:3612,schedul,schedule,3612,https://su2code.github.io,https://github.com/su2code/SU2/issues/789#issuecomment-535977206,2,['schedul'],['schedule']
Energy Efficiency,"nterface and it can create some bugs because one would be able to call methods without knowing what index they are on (it is also not thread safe but that is not a problem now).; So the final piece to recover the interface and shield direct calls to methods without specifying the index is a lightweight wrapper.; ```; class DenseWrapper; {; private:; DenseVariableBase* nodes;; public:; DenseWrapper(int nVar, int nNodes);; ~DenseWrapper();; inline DenseVariableBase* operator[] (int iNode); {; return (*nodes)[iNode];; }; };; ```; With this there is no way of getting to the variables without going through `[]` first.; If we run this code we see that it is only **1.08** and **1.57** times slower for the non-virtual and virtual accessors respectively.; This could be an intermediate solution while the CVariable methods would be migrated to allow passing the index as argument e.g. `field->Get(iNode)` and the code is updated gradually. However, I think the wrapper could provide a way of dealing with the loss of versatility that contiguous storage creates...; There are no free lunches and this performance improvement would come at the cost of losing the ability to have different types of variables in different parts of the domain. I think currently only the elasticity solver uses this to keep ""boundary"" and ""internal"" variables.; If this versatility is really required the wrapper can keep special variables separately, that it would know to be special via a boolean vector and know how to access via a hash table (for example). **Alternatives**; We could make the storage continuous by using a memory pool i.e. allocate outside the class and give the class a pointer to its memory location. This is still not truly contiguous as the pointers the class holds are variables themselves and so they would still be separated (albeit by a smaller huge distance), thus the amount of overhead would still influence performance. Right, that is enough writing... please let me know what you think.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/716:7766,allocate,allocate,7766,https://su2code.github.io,https://github.com/su2code/SU2/issues/716,1,['allocate'],['allocate']
Energy Efficiency,"nts to maintain. For example, in an airfoil test case I want to make sure the sharp trailing edge at node 512 is maintained, so I can manually add; ```; NCORNERS= 1; 1 512; ```; to the end of my mesh. It's not necessary, though, and AMG performs ridge detection to identify any features anyway. I assume since it built and (kinda) ran that you managed to fix your python setup through your aliases?. What was the specific error that you got? I probably should have also mentioned that I've changed a lot of options since updating from Vic's old code. Here are the list of required options (values from my test case):; ```; % Type of sensor used for adaptation; % Options include GOAL (adjoint-based), MACH, PRES; PYADAP_SENSOR= GOAL; % Objective function used for goal-oriented adaptation; OBJECTIVE_FUNCTION= LIFT; % Maximum cell size for adaptation; PYADAP_HMAX= 500.0; % Minimum cell size for adaptation; PYADAP_HMIN= 1e-9; % Gradation factor (typically 1.2-1.8); PYADAP_HGRAD= 1.8; % Norm used for adaptation; % 1.0 or 2.0 recommended for inviscid flows; % 4.0 recommeneded for viscid; ADAP_NORM= 4.0; % Approximate mesh size (NPOI) at each level; PYADAP_COMPLEXITY= (30000, 60000, 120000); % Number of adaptations performed at each level; PYADAP_SUBITE= (3, 3, 3); ```; Some optional options:; ```; % Numerical method for Hessian reconstruction in goal-oriented adaptation; % Currently only Green-Gauss; NUM_METHOD_HESS= GREEN_GAUSS; % Value for ITER for the flow solver at each level; PYADAP_FLOW_ITER= (2999, 4999, 6999); % Value for ITER for the adjoint solver at each level; PYADAP_ADJ_ITER= (2999, 4999, 6999); % Value for CFL_NUMBER for the adjoint solver at each level; PYADAP_CFL= (10.0, 15.0, 20.0); % Background mesh containing fine surface representation; % Can be either a .su2 or .meshb (GMF) file; % If not specified, the baseline mesh is used; PYADAP_BACK= rae2822_euler_40960_split.meshb; % Invert the background mesh orientation; % Sometimes required for 3D meshes, since AMG doe",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/948#issuecomment-619412341:1111,adapt,adaptation,1111,https://su2code.github.io,https://github.com/su2code/SU2/issues/948#issuecomment-619412341,1,['adapt'],['adaptation']
Energy Efficiency,"o identify the symmetry planes and mirror the flux through the faces. ; Blazek continues: ""The second methodology computes the fluxes for the halved control volume (but not accross the boundary). The components of **the residual normal to the symmetry plane** are then zeroed out. It is also necessary to correct normal vectors of those faces of the control volume, which touch the boundary. The modification consists of removing all components of the face vector, which are normal to the symmetry plane. The gradients also have to be corrected according to Eq. (8.40) [points 2,3,4 above]"". 1. Modify Green-Gauss and Least-Squares gradient computation for symmetry planes; -> This seems to work fine; 2. Fix normal components of edges connected to symmetry plane; -> This seems to work fine; 3. Fix residual components of velocity on the symmetry plane; -> This seems to work fine; 4. Multiple symmetry planes, including Euler walls; -> This seems to work fine; 6. multigrid; -> Works fine now that we use the agglomeration as in the paper of Diskin.; 7. grid movement; 8. -> Works fine with the new fix to the residuals (energy update). ## Related Work; #1168 . ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [x] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [x] I used the pre-commit hook to prevent dirty commits and used `pre-commit run --all` to format old commits.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2194:2293,energy,energy,2293,https://su2code.github.io,https://github.com/su2code/SU2/pull/2194,1,['energy'],['energy']
Energy Efficiency,"o so atomically (this is essentially an operations that always goes through main memory and forces cache coherency) or it needs to acquire a *lock* for the point it is writing to, if it fails to acquire the *lock* (because another thread has it) it needs to wait. None of these is without drawbacks.; - **Coloring** reduces temporal locality, edges are sorted in increasing order of the point indices to reduce cache misses, this means small groups of contiguous edges will share the same ""iPoint"", coloring single edges destroys this. Furthermore coloring either requires edges to be re-sorted by color, or if the edge indices of each color are instead kept in arrays, performance will suffer due to increased indirection which confounds the hardware pre-fetcher.; This can be mitigated to some extent by coloring groups of edges, groups of edges of the same color can be processed simultaneously, but within each group edges need to be processed serially. However grouping will reduce how much parallelism can be exploited within each color.; - **Gather to scatter** will in general use more memory due to the intermediate variables and extra adjacency information needed. If the entire algorithm is transformed performance may suffer as some computations may have to be repeated.; However, some reductions are possible without intermediate variables, for example when assembling the system matrix for implicit schemes only the diagonal entries can result in race conditions, now it just so happens that each diagonal entry is equal to the negated corresponding column sum.; - **Atomics** are terrible for the performance of code that writes frequently to memory (i.e. bandwidth-bound code), they do not increase the memory footprint and so make sense for compute-bound code.; Bugs due to a missing atomic can be very hard to debug (but any race condition is). Coloring is what one sees most in the literature, and yet I lean towards gather-to-scatter. Fewer things can go wrong with it as it is ea",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/789#issuecomment-529662724:5733,reduce,reduce,5733,https://su2code.github.io,https://github.com/su2code/SU2/issues/789#issuecomment-529662724,2,['reduce'],['reduce']
Energy Efficiency,"oj_i <= 0.0) {; lim_i = phiMin(iPoint,iVar);; proj_i = min(proj_i, -eps);; }; ```; This is the bit of code that selects the right delta based on the sign of the projection and avoids division by zero, this less readable version does the same with one branch instead of three, simplifying ""if"" statements is essential for vectorization, so to make the comparison fair I used the same strategy in the scalar code. To make this post shorter I will show the SIMD and parallel version of the code right away. Trying to process multiple edges instead of multiple variables has all the problems I mentioned for the gradients, so again we use the trick of templating on the number of variables.; ```C++; template<size_t nVar>; void computeLimiters_impl(size_t nPoint,; size_t nDim,; const vector<size_t>& colorStart,; const vector<size_t>& edgeIdx,; const vector<pair<size_t,size_t> >& connectivity,; const Matrix& coords,; const Matrix& phi,; const VectorOfMatrix& grad,; Matrix& phiMax,; Matrix& phiMin,; Matrix& limiter); {; // initialize; #pragma omp parallel for schedule(dynamic,TARGET_CHUNK_SIZE); for(size_t iPoint=0; iPoint<nPoint; ++iPoint); {; #pragma omp simd; for(size_t iVar=0; iVar<nVar; ++iVar); {; phiMax(iPoint,iVar) = phi(iPoint,iVar);; phiMin(iPoint,iVar) = phi(iPoint,iVar);; limiter(iPoint,iVar) = 2.0;; }; }. // find min and max neighbor; for(size_t color=0; color<colorStart.size()-1; ++color); #pragma omp parallel for schedule(dynamic,CHUNK_SIZE); for(size_t k=colorStart[color]; k<colorStart[color+1]; ++k); {; #if SORT_BY_COLOR==1; size_t iEdge = k;; #else; size_t iEdge = edgeIdx[k];; #endif. size_t iPoint = connectivity[iEdge].first;; size_t jPoint = connectivity[iEdge].second;. // some hand-holding needed for simd min/max with gcc,; // one of the min/max operands needs to be on the stack; // (so the compiler knows the two do not overlap?); double phi_i[nVar], phi_j[nVar];. #pragma omp simd; for(size_t iVar=0; iVar<nVar; ++iVar); {; phi_i[iVar] = phi(iPoint,iVar);; phi_j",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/789#issuecomment-530593912:3892,schedul,schedule,3892,https://su2code.github.io,https://github.com/su2code/SU2/issues/789#issuecomment-530593912,2,['schedul'],['schedule']
Energy Efficiency,"om/vorburger""><code>@​vorburger</code></a> made their first contribution in <a href=""https://redirect.github.com/actions/cache/pull/1132"">actions/cache#1132</a></li>; <li><a href=""https://github.com/jorendorff""><code>@​jorendorff</code></a> made their first contribution in <a href=""https://redirect.github.com/actions/cache/pull/1187"">actions/cache#1187</a></li>; <li><a href=""https://github.com/chkimes""><code>@​chkimes</code></a> made their first contribution in <a href=""https://redirect.github.com/actions/cache/pull/1217"">actions/cache#1217</a></li>; <li><a href=""https://github.com/bethanyj28""><code>@​bethanyj28</code></a> made their first contribution in <a href=""https://redirect.github.com/actions/cache/pull/1236"">actions/cache#1236</a></li>; </ul>; <p><strong>Full Changelog</strong>: <a href=""https://github.com/actions/cache/compare/v3...v3.3.2"">https://github.com/actions/cache/compare/v3...v3.3.2</a></p>; <h2>v3.3.1</h2>; <h2>What's Changed</h2>; <ul>; <li>Reduced download segment size to 128 MB and timeout to 10 minutes by <a href=""https://github.com/kotewar""><code>@​kotewar</code></a> in <a href=""https://redirect.github.com/actions/cache/pull/1129"">actions/cache#1129</a></li>; </ul>; <p><strong>Full Changelog</strong>: <a href=""https://github.com/actions/cache/compare/v3...v3.3.1"">https://github.com/actions/cache/compare/v3...v3.3.1</a></p>; <h2>v3.3.0</h2>; <h2>What's Changed</h2>; <ul>; <li>Bug: Permission is missing in cache delete example by <a href=""https://github.com/kotokaze""><code>@​kotokaze</code></a> in <a href=""https://redirect.github.com/actions/cache/pull/1123"">actions/cache#1123</a></li>; </ul>; <!-- raw HTML omitted -->; </blockquote>; <p>... (truncated)</p>; </details>; <details>; <summary>Changelog</summary>; <p><em>Sourced from <a href=""https://github.com/actions/cache/blob/main/RELEASES.md"">actions/cache's changelog</a>.</em></p>; <blockquote>; <h1>Releases</h1>; <h3>4.0.1</h3>; <ul>; <li>Updated <code>isGhes</code> check</li>; </ul>; <h3>4.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2232:5178,Reduce,Reduced,5178,https://su2code.github.io,https://github.com/su2code/SU2/pull/2232,1,['Reduce'],['Reduced']
Energy Efficiency,"ons-op-text'>. <sup>Originally posted by **ChristianBauerEng** February 8, 2022</sup>; Hi All!. I'm currently running transient, 2D axisymmetric simulations of an oscillating resonator. For now I'm still in the validation and testing phase, but the results look promising!. However, I've noticed that solver performance (as in Time/Iteration) seems to degrade over runtime, so I wanted to measure that by including `WALL_TIME` in screen and history output. I still have trouble understanding the outputs, though. The screen output looks like this:. > +-------------------------------------; > | Time_Iter| Inner_Iter| Time(sec); > +-------------------------------------; > | 45330| 0| 6.3412e+02; > | 45330| 5| 1.0572e+02; > | 45330| 10| 5.7680e+01; > +-------------------------------------; > | Time_Iter| Inner_Iter| Time(sec); > +-------------------------------------; > | 45340| 0| 6.3783e+02; > | 45340| 5| 1.0633e+02; > | 45340| 9| 6.3815e+01. The Time(sec) values of the 0th inner iteration seems to monotonically increase and represent the accumulated wall clock time since simulation start I assume. But what do the `Time(sec)` values for the inner iterations mean?. ~~In the history output, the `Time(sec)` field looks different, as can be seen in the upper part of this figure:~~. In the history file, actually the last Time(sec) value of each time-iteration is printed, which also tends to increase, but not monotonically. Additionally, it seems to get reset to 0 each time output is written:. ![grafik](https://user-images.githubusercontent.com/42602495/153232596-f815ff83-b0e8-49b8-9ee3-2bb1f176e2df.png). ~~What does this value in the history output actually mean? Is it time/iteration? I've noticed a performance degradation over time, but not to this extent (I've monitored the actual runtime only sporadically, though).; If the performance degradation is in fact so severe, what could be the cause?~~. I'd really be happy if one of the veterans could chip in their ideas here!</div>",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1542:3290,monitor,monitored,3290,https://su2code.github.io,https://github.com/su2code/SU2/issues/1542,1,['monitor'],['monitored']
Energy Efficiency,ons.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/io; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/io/data.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/io; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/io/filelock.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/io; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/io/redirect.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/io; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/io/state.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/io; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/io/tools.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/io; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/io/historyMap.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/io; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/io/__init__.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/io; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/mesh/adapt.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/mesh; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/mesh/tools.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/mesh; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/mesh/__init__.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/mesh; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/opt/project.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/opt; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/opt/scipy_tools.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/opt; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/opt/__init__.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/opt; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/run/adaptation.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/run; Installing /home/slimshady/UserPackages/SU2_NEW/,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/991#issuecomment-632032044:5605,adapt,adapt,5605,https://su2code.github.io,https://github.com/su2code/SU2/issues/991#issuecomment-632032044,1,['adapt'],['adapt']
Energy Efficiency,"onstructor of CSysMatrix by using 'new', and calling the StiffMatrix.Initialize() method, for what I see in matrix_structure.cpp. Also, StiffMatrix is a sparse matrix (nDim x nPoint) x (nDim x nPoint), which must be allocated correctly using the Initialize method to avoid carrying around lots of zeros. With regards to the other point, I think that it is interesting to use the Initialize features of the CSysVector and CSysMatrix in the constructor of the class, just as it happens in the rest of the solver classes (see for example solver_direct_mean, line 261, where the Jacobian of the problem is initialized using a Jacobian.Initialize() call in the constructor). As far as I see it, the mesh update problem is nothing but a copy of the linear elasticity problem, so maintaining the parallelism with all the other solvers in the code (and, in particular, with the structural solver) may be interesting. . Moreover, by allocating the memory in the constructor using StiffMatrix.Initialize(nPoint, nPointDomain...) we make sure we can use the linear solvers in parallel by building a compliant sparse matrix. And if we allocate the stiffness matrix in the constructor, it makes sense to also do so with the vectors of the problem. Again, this maintains the similarities with the rest of the solvers. Finally, in my particular case I call the SetVolume_Deformation() function at least as many times as I do with the fluid and the structural solver. The mesh deformation is a third field in the problem, and by initializing the structure at the beginning of the simulation we can reuse the same spaces in memory along the whole of it, given that (at least in unsteady cases) the mesh update routines may be called several times. This way we avoid to be continuously allocating/deallocating memory. Also, this is useful to have a more accurate measure of the amount of memory we will be using along the simulation right at the beginning of the calculation - although peaks of memory are unavoidable.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/200#issuecomment-148017482:1516,allocate,allocate,1516,https://su2code.github.io,https://github.com/su2code/SU2/pull/200#issuecomment-148017482,1,['allocate'],['allocate']
Energy Efficiency,"or]; k<colorStart[color+1]; ++k); {; #if SORT_BY_COLOR==1; size_t iEdge = k;; #else; size_t iEdge = edgeIdx[k];; #endif. size_t iPoint = connectivity[iEdge].first;; size_t jPoint = connectivity[iEdge].second;. // some hand-holding needed for simd min/max with gcc,; // one of the min/max operands needs to be on the stack; // (so the compiler knows the two do not overlap?); double phi_i[nVar], phi_j[nVar];. #pragma omp simd; for(size_t iVar=0; iVar<nVar; ++iVar); {; phi_i[iVar] = phi(iPoint,iVar);; phi_j[iVar] = phi(jPoint,iVar);; }. #pragma omp simd; for(size_t iVar=0; iVar<nVar; ++iVar); {; phiMax(iPoint,iVar) = max(phiMax(iPoint,iVar), phi_j[iVar]);; phiMin(iPoint,iVar) = min(phiMin(iPoint,iVar), phi_j[iVar]);; phiMax(jPoint,iVar) = max(phiMax(jPoint,iVar), phi_i[iVar]);; phiMin(jPoint,iVar) = min(phiMin(jPoint,iVar), phi_i[iVar]);; }; }. for(size_t color=0; color<colorStart.size()-1; ++color); #pragma omp parallel for schedule(dynamic,CHUNK_SIZE); for(size_t k=colorStart[color]; k<colorStart[color+1]; ++k); {; #if SORT_BY_COLOR==1; size_t iEdge = k;; #else; size_t iEdge = edgeIdx[k];; #endif. size_t iPoint = connectivity[iEdge].first;; size_t jPoint = connectivity[iEdge].second;. // i to j vector; double d_ij[3] = {0.0, 0.0, 0.0};. for(size_t iDim=0; iDim<nDim; ++iDim); d_ij[iDim] = 0.5*(coords(jPoint,iDim)-coords(iPoint,iDim));. // projections; double proj_i[nVar], proj_j[nVar];. #pragma omp simd; for(size_t iVar=0; iVar<nVar; ++iVar); proj_i[iVar] = proj_j[iVar] = 0.0;. for(size_t iDim=0; iDim<nDim; ++iDim); {; #pragma omp simd; for(size_t iVar=0; iVar<nVar; ++iVar); {; proj_i[iVar] += d_ij[iDim]*grad(iPoint,iVar,iDim);; proj_j[iVar] -= d_ij[iDim]*grad(jPoint,iVar,iDim);; }; }. // choose the ""right"" delta based on sign of projection; // and avoid division by zero; double lim_i[nVar], lim_j[nVar];. #pragma omp simd; for(size_t iVar=0; iVar<nVar; ++iVar); {; lim_i[iVar] = phiMax(iPoint,iVar);; lim_j[iVar] = phiMax(jPoint,iVar);; }. const double eps = numeric_limit",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/789#issuecomment-530593912:5259,schedul,schedule,5259,https://su2code.github.io,https://github.com/su2code/SU2/issues/789#issuecomment-530593912,2,['schedul'],['schedule']
Energy Efficiency,"orted in increasing order of the point indices to reduce cache misses, this means small groups of contiguous edges will share the same ""iPoint"", coloring single edges destroys this. Furthermore coloring either requires edges to be re-sorted by color, or if the edge indices of each color are instead kept in arrays, performance will suffer due to increased indirection which confounds the hardware pre-fetcher.; This can be mitigated to some extent by coloring groups of edges, groups of edges of the same color can be processed simultaneously, but within each group edges need to be processed serially. However grouping will reduce how much parallelism can be exploited within each color.; - **Gather to scatter** will in general use more memory due to the intermediate variables and extra adjacency information needed. If the entire algorithm is transformed performance may suffer as some computations may have to be repeated.; However, some reductions are possible without intermediate variables, for example when assembling the system matrix for implicit schemes only the diagonal entries can result in race conditions, now it just so happens that each diagonal entry is equal to the negated corresponding column sum.; - **Atomics** are terrible for the performance of code that writes frequently to memory (i.e. bandwidth-bound code), they do not increase the memory footprint and so make sense for compute-bound code.; Bugs due to a missing atomic can be very hard to debug (but any race condition is). Coloring is what one sees most in the literature, and yet I lean towards gather-to-scatter. Fewer things can go wrong with it as it is easy to understand, one gets the maximum amount of parallelism. I will now take two familiar routines, computing gradients (Green-Gauss) and limiters, vectorize / parallelize them in different ways, and measure relative performance to illustrate some of these key points introduced here. There will be C++ snipets and there will be some x86 assembly too :)",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/789#issuecomment-529662724:6875,Green,Green-Gauss,6875,https://su2code.github.io,https://github.com/su2code/SU2/issues/789#issuecomment-529662724,1,['Green'],['Green-Gauss']
Energy Efficiency,"ped. Now, despite some small differences between the old SU2 version and the new with enforced old boundary conditions (that are due, among other things, to small changes in the mesh deformation algorithm that I have noticed) you can notice the big difference in the application of the two boundary conditions. . I also attach a couple zooms of the signal: first at time 0 which gives the GAF for the steady initial simulation and second for the converged values. It can be seen how (even if less important) some discrepancies are found here as well.; ![Time_zoom](https://user-images.githubusercontent.com/23583209/72832115-869ce400-3c84-11ea-93cb-dffeba31878c.jpg); ![Time_zoom2](https://user-images.githubusercontent.com/23583209/72832121-8a306b00-3c84-11ea-8303-b55888b8fb38.jpg). To check which one of the two time evolution is physically representative you can observe the GAF in the frequency domain. The following figure plots module of the Fourier transform of the preceding signals together with the DLM reference as a function of the reduced frequency (proportional to omega/V_inf). ; ![Frequency](https://user-images.githubusercontent.com/23583209/72832220-be0b9080-3c84-11ea-99da-3bfc5d31aa5b.jpg). Old SU2 has been validated vs DLM in another test which I don't show here for sake of brevity and differences with respect to DLM are justified by the thickness of the ONERA M6 and high speed. It can be seen how new SU2 with old boundary conditions gives back an almost identical result to old SU2 (my reference). Anyway for the new boundary conditions values are too distant from the reference.; Little note: the Module of the GAF in frequency domain at K=0 is proportional to the difference of the value of the gaf in time domain between t=0 and t=infinite: namely GAF(t=infinite) - GAG(t=0). The same value sums other coefficients due to the unsteadiness of the signal at K different than 0. We can see how for both the boundary conditions the value approximates the original one (as w",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/828#issuecomment-576826669:2482,reduce,reduced,2482,https://su2code.github.io,https://github.com/su2code/SU2/issues/828#issuecomment-576826669,1,['reduce'],['reduced']
Energy Efficiency,"r with me I am almost done, and I will summarise the results in the form of a proposal (I'll probably put that at the top of the first post). ## ""Real"" numerics; Real in the sense that the flop to byte ratio (amount of computation per amount of data) is comparable to a real numerics scheme, say Roe for example.; The simplest way to do this is to combine the example code for MUSCL reconstruction with the matrix updates code and add something compute heavy between input and output, e.g. a number of matrix-matrix multiplications, here is some pseudo code for what I did:; ```c++; void computeResidual(size_t nVar,; size_t nDim,; const vector<Connectivity<SIMDLEN> >& connectivities,; const Matrix& coords,; const Matrix& phi,; const VectorOfMatrix& grad,; const Matrix& limiter,; RowMajorMatrix& residual,; SparseMatrix& matrix); {; using FltVec = Array<double,SIMDLEN>;. residual.setZero();; matrix.setDiagZero();. size_t color = 0;; for(const auto& connectivity : connectivities); {; #pragma omp parallel for schedule(dynamic,CHUNK_SIZE); for(size_t iEdge=0; iEdge<connectivity.size(); iEdge+=SIMDLEN); {; auto iPoint = connectivity.first_vec(iEdge);; auto jPoint = connectivity.second_vec(iEdge);. FltVec d_ij[MAXNDIM];; for(size_t iDim=0; iDim<nDim; ++iDim); d_ij[iDim] = (coords.getVec(jPoint,iDim)-coords.getVec(iPoint,iDim))*0.5;. FltVec phiL[MAXNVAR], phiR[MAXNVAR], flux[MAXNVAR],; blk_i[MAXNVAR*MAXNVAR],; blk_j[MAXNVAR*MAXNVAR];. for(size_t iVar=0; iVar<nVar; ++iVar); {; // Reconstruction goes here. flux[iVar] = (phiL[iVar]+phiR[iVar])*0.5;; }. // some silly way to make the Jacobians depend on the reconstruction; for(size_t iVar=0; iVar<nVar; ++iVar); for(size_t jVar=0; jVar<nVar; ++jVar); blk_j[iVar*nVar+jVar] = (phiL[iVar]*phiR[jVar]-phiL[jVar]*phiR[iVar])*0.5;. // the matrix-matrix multiplications; for(size_t i=0; i<WORKITERS; ++i) {; // blk_i = blk_j * blk_j; for(size_t k=0; k<nVar*nVar; ++k) blk_j[k] = blk_i[k];; }. // something akin to a dissipation term; for(size_t iVar",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/789#issuecomment-539177957:1070,schedul,schedule,1070,https://su2code.github.io,https://github.com/su2code/SU2/issues/789#issuecomment-539177957,2,['schedul'],['schedule']
Energy Efficiency,"rapper class for Inria's direct sparse solver [PaStiX](http://pastix.gforge.inria.fr/files/README-txt.html).; Why this solver? Because it is open source, has active development in advanced features like GPU support and compression techniques to reduce memory footprint, and from my experience it is really robust. ## Implementation; As this feature benefits mostly the FSI people (@rsanfer, @cvencro, and me) I tried to keep it as standalone as possible.; The core implementation is in separate files and nothing needs to change in CSysMatrix for this to work. ## Usage; Available factorizations:; - LDLT; - LU; - ILU(k). The ILU is different from the one we have in that it is computed for the entire matrix and not just for the local matrices (i.e. it considers halos), it is not very fast though.; The three factorizations can be used as preconditioners via options PASTIX_ILU, PASTIX_LU, and PASTIX_LDLT. And the first two as solvers via options PASTIX_LU and PASTIX_LDLT (in which case you should use a preconditioner type that does not cause CSysMatrix to allocate extra memory (LU_SGS).; The reason LDLT and LU can also be used as preconditioners is that it is possible to set a factorization frequency (via PASTIX_FACTORIZATION_FREQUENCY) so that the factorizations are only computed every N iterations or only on the first call (frequency set to 0), this is very useful for non linear elasticity.; The fill-in for the ILU is set via PASTIX_FILL_LEVEL, I did not reuse the option we have again to keep CSysMatrix from allocating any more than it needs to.; By default the solvers run silently, but more verbosity can be set via PASTIX_VERBOSITY_LEVEL (0 : silent, 1 : only during major operations, 2 : 1 + on every solve). ## Compilation; _TODO_; This needs linking with another library (Scotch) and with BLAS, I will explain this in detail.; Question: For v7 are we moving exclusively to meson?. ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [X] My contribu",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/771:1702,allocate,allocate,1702,https://su2code.github.io,https://github.com/su2code/SU2/pull/771,1,['allocate'],['allocate']
Energy Efficiency,"recently (in develop) scale/rotate/translate were changed to do volume deformations (aka, all at once and not requiring a linear elasticity solve to get the updated volume mesh). This branch includes changes to allow scaling, translating, or rotating only a surface w/in the volume. If all markers are included in the deformation, it returns to the all-at-once volume deformation. . Hypothetically this should allow multi-body movements (as in, rotating a control surface) while maintaining the more efficient volume deformation for operations like scaling the mesh.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/187:500,efficient,efficient,500,https://su2code.github.io,https://github.com/su2code/SU2/pull/187,1,['efficient'],['efficient']
Energy Efficiency,"res method. ---------------------- Time Numerical Integration -----------------------; Local time stepping (steady state simulation).; Euler implicit method for the flow equations.; FGMRES is used for solving the linear system.; Using a LU-SGS preconditioning.; Convergence criteria of the linear solver: 1e-10.; Max number of linear iterations: 5.; V Multigrid Cycle, with 3 multigrid levels.; Damping factor for the residual restriction: 0.75.; Damping factor for the correction prolongation: 0.75.; No CFL adaptation.; +-------------------------------------------+; | MG Level| Presmooth|PostSmooth|CorrectSmo|; +-------------------------------------------+; | 0| 1| 0| 0|; | 1| 1| 0| 0|; | 2| 1| 0| 0|; | 3| 1| 0| 0|; +-------------------------------------------+; Courant-Friedrichs-Lewy number: 10; Euler implicit time integration for the turbulence model. ------------------------- Convergence Criteria --------------------------; Maximum number of iterations: 99999.; Reduce the density residual 10 orders of magnitude.; The minimum bound for the density residual is 10^(-12).; Start convergence criteria at iteration 10. -------------------------- Output Information ---------------------------; Writing a solution file every 10000 iterations.; Writing the convergence history every 1 iterations.; The output file format is Tecplot ASCII (.dat).; Convergence history file name: history.; Forces breakdown file name: forces_breakdown.dat.; Surface flow coefficients file name: surface_flow.; Flow variables file name: flow.; Restart flow file name: restart_flow.dat. ------------------- Config File Boundary Information --------------------; Far-field boundary marker(s): farfield.; Constant heat flux wall boundary marker(s): airfoil. ---------------------- Read Grid File Information -----------------------; Two dimensional problem.; 14576 points.; 2 surface markers.; +------------------------------------+; | Index| Marker| Elements|; +------------------------------------+; | 0| airfoil|",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/591:3829,Reduce,Reduce,3829,https://su2code.github.io,https://github.com/su2code/SU2/issues/591,1,['Reduce'],['Reduce']
Energy Efficiency,"s my issue. . While I can retrieve a correct y+ near the blade, I have trouble to get a y+ lower than 65 near the walls. At y+ = 65, SU2 runs and converges to some results. For y+ < 65, SU2 raises a segmentation fault at this location: ; ![segfault](https://user-images.githubusercontent.com/24920252/140756620-db3ed08f-05cd-4811-b037-642a221ea501.png); Here are the results of the gdb analysis. It seems that the seg faut comes from the Giles BC part of the initialisation of the turbo data containers. Especially those lines (CEulerSolver.cpp line 435-436). `CkInflow[iMarker].resize(nSpanWiseSections,2*geometry->GetnFreqSpanMax(INFLOW)+1) = complex<su2double>(0.0,0.0);`. `CkOutflow1[iMarker].resize(nSpanWiseSections,2*geometry->GetnFreqSpanMax(OUTFLOW)+1) = complex<su2double>(0.0,0.0);`. but I don't understand why. ![issue](https://user-images.githubusercontent.com/24920252/140783485-0d856d2a-7353-468f-aeab-c78b742d8582.png). The first thing I checked was to reduce the number of elements in my domain but the problem remains the same (so no memory issue).; Then I checked if it was not an issue from . - : a too small size of my first element. I scaled my domain by a factor of 1000 and the issue is the same (can't go below y+ = 65);; - : trouble with the expansion ratio of the boundary layer;; - :the number of procs (tried with 2 - 6 -15 and the issue is the same). I don't have idea anymore and that is why I'm coming to you. . *Please provide a config file and mesh for a minimal example that recreates the problem.*. Here is a link to the .geo file (line 28 is to get a y+ of 1. You can uncomment line 29 for y+=65), the .cfg and two .su2 meshes to directly launch the case. . https://mseduculiegebe-my.sharepoint.com/:u:/g/personal/amaury_bilocq_uliege_be/EaUIIj1J_-BBktcLu8F9kosBsRjtOduWrrtENbW_bnx1ow?e=F47adW. Thank you already for your help!. Amaury. **Desktop (please complete the following information):**; - OS: Linux - Ubuntu 21.04; - C++ compiler and version: g++ (GCC) 10.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1429:2039,reduce,reduce,2039,https://su2code.github.io,https://github.com/su2code/SU2/issues/1429,1,['reduce'],['reduce']
Energy Efficiency,"s stress tensor AND from the production term. Currently we do the former (because it was found beneficial here #797) but not the latter, which leaves the implementation in some kind of limbo state. ### Discussed in https://github.com/su2code/SU2/discussions/1483. <div type='discussions-op-text'>. <sup>Originally posted by **sun5k** January 10, 2022</sup>; Question about Menter's SST model on SU2. Hello! This post is my first Q&A for SU2; happy new Year everyone.; I have two questions about the SST model for the SU2. The abbreviation is referred from the [SST Turbulence model of NASA TMR](https://turbmodels.larc.nasa.gov/sst.html), [Compressible RANS of NASA TMR](https://turbmodels.larc.nasa.gov/sst.html) , and [Running cases with CFD of NASA TMR](https://turbmodels.larc.nasa.gov/noteonrunning.html). . Briefly ; 1. In SU2, The production term of the SST model uses incompressible assumptions. Is there some special reason? . 2. Always ignore the turbulence kinetic energy to compute the stress tensor for the momentum and energy equation, is it a bug?. Here is the detail!. 1. . The Boussinesq relation of RANS is . ![image](https://user-images.githubusercontent.com/50565314/148731113-5d141cd0-bea0-4bc4-8f2a-e40932645844.png). Form [Running cases with CFD of NASA TMR](https://turbmodels.larc.nasa.gov/noteonrunning.html): ""In the equation above, the![image](https://user-images.githubusercontent.com/50565314/148731540-ace2cac5-4168-48d8-9125-c053806ba463.png) term is sometimes ignored for non-supersonic speed flows, and the **second term in parentheses is identically zero for incompressible flows**."". The production term of SST model is :. ![image](https://user-images.githubusercontent.com/50565314/148771167-b96d6d8f-b638-4efd-a6a3-6731ddb4f4a0.png). Rewrite the first term of the above equation :. ![image](https://user-images.githubusercontent.com/50565314/148731731-23cdd717-28d1-453c-a867-77c99494f86f.png). ![image](https://user-images.githubusercontent.com/50565314/14877146",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1551:1096,energy,energy,1096,https://su2code.github.io,https://github.com/su2code/SU2/issues/1551,2,['energy'],['energy']
Energy Efficiency,"s[iSiz]); nSub = int(sub_iter[iSiz]); ; sys.stdout.write(""\nIteration %d/%d - Mesh size coefficient %.1lf\n"" % (iSiz+1, len(mesh_sizes), mesh_size)); ; for iSub in range(nSub):; ; config_amg['size'] = mesh_size; config_amg['amg_log'] = 'ite%d.amg.stdout' % (global_iter); ; # Prints; pad_cpt = (""(%d/%d)"" % (iSub+1, nSub)).ljust(9); pad_nul = """".ljust(9); ; if not amg_python : ; ; #--- Load su2 mesh ; mesh = su2amg.read_mesh(current_mesh, current_solution); ; #--- If not using the amg python interface, convert the mesh and make system call; ; su2amg.write_mesh(""current.meshb"", ""current.solb"", mesh); ; if not os.path.exists(""current.solb""):; raise RuntimeError , ""\n##ERROR : Can't find solution.\n""; if not os.path.exists(""current.meshb""):; raise RuntimeError , ""\n##ERROR : Can't find mesh.\n""; ; #--- Get sensor; ; sensor = su2amg.create_sensor(mesh, adap_sensor); su2amg.write_solution(""current_sensor.solb"", sensor); ; if not os.path.exists(""current_sensor.solb""):; raise RuntimeError , ""\n##ERROR : Can't find adap sensor.\n""; ; #--- Run amg; ; sys.stdout.write(""Running amg. Log : %s\n"" % config_amg['amg_log']); ; if os.path.exists(""current.itp.solb""):; os.remove(""current.itp.solb""); ; try :; su2amg.amg_call(config_amg); except:; raise RuntimeError , ""\n##ERROR : Call to AMG failed.\n""; ; if not os.path.exists(config_amg['mesh_out']):; raise RuntimeError , ""\n##ERROR : Mesh adaptation failed.\n""; ; if not os.path.exists(""current.itp.solb""):; raise RuntimeError , ""\n##ERROR AMG: Solution interpolation failed.\n"" ; ; #--- Convert output from Inria mesh format to su2; # Deal with markers; ; save_markers = mesh['markers']; del mesh; ; # Read Inria mesh; mesh = su2amg.read_mesh(config_amg['mesh_out'], ""current.itp.solb""); mesh['markers'] = save_markers; ; current_mesh = ""ite%d.su2"" % global_iter; current_solution = ""ite%d.dat"" % global_iter ; ; su2amg.write_mesh(current_mesh, current_solution, mesh); ; if not os.path.exists(current_mesh) or not os.path.exists(current_solution",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/606#issuecomment-504636643:9018,sensor,sensor,9018,https://su2code.github.io,https://github.com/su2code/SU2/issues/606#issuecomment-504636643,1,['sensor'],['sensor']
Energy Efficiency,"sensor.solb'; config_amg['itp_sol_in'] = 'current.solb'; config_amg['adap_source'] = ''; ; if 'ADAP_BACK' in config:; config_amg['adap_back'] = os.path.join(cwd,config['ADAP_BACK']); #os.symlink(os.path.join(cwd, config.ADAP_BACK), config.ADAP_BACK); else:; config_amg['adap_back'] = config['MESH_FILENAME']; ; print ""config_amg : "" + config_amg['adap_back']; back_name, back_extension = os.path.splitext(config_amg['adap_back']); ; if not os.path.exists(config_amg['adap_back']):; raise RuntimeError , ""\n\n##ERROR : Can't find back mesh: %s.\n\n"" % config_amg['adap_back']; ; if back_extension == "".su2"":; ; #pyamg.su2_to_libmeshb(config_amg['adap_back'], """", ""amg_back""); print ""skipping back mesh ...""; #import _amgio as amgio; #amgio.py_ConvertSU2toInria(config_amg['adap_back'], """", ""amg_back""); #config_amg['adap_back'] = ""amg_back.meshb""; ; if 'ADAP_SOURCE' in config:; config_amg['adap_source'] = os.path.join(cwd,config['ADAP_SOURCE']); ; global_iter = 0; ; sys.stdout.write(""\nStarting mesh adaptation process.\n""); ; for iSiz in range(len(mesh_sizes)):; ; mesh_size = int(mesh_sizes[iSiz]); nSub = int(sub_iter[iSiz]); ; sys.stdout.write(""\nIteration %d/%d - Mesh size coefficient %.1lf\n"" % (iSiz+1, len(mesh_sizes), mesh_size)); ; for iSub in range(nSub):; ; config_amg['size'] = mesh_size; config_amg['amg_log'] = 'ite%d.amg.stdout' % (global_iter); ; # Prints; pad_cpt = (""(%d/%d)"" % (iSub+1, nSub)).ljust(9); pad_nul = """".ljust(9); ; if not amg_python : ; ; #--- Load su2 mesh ; mesh = su2amg.read_mesh(current_mesh, current_solution); ; #--- If not using the amg python interface, convert the mesh and make system call; ; su2amg.write_mesh(""current.meshb"", ""current.solb"", mesh); ; if not os.path.exists(""current.solb""):; raise RuntimeError , ""\n##ERROR : Can't find solution.\n""; if not os.path.exists(""current.meshb""):; raise RuntimeError , ""\n##ERROR : Can't find mesh.\n""; ; #--- Get sensor; ; sensor = su2amg.create_sensor(mesh, adap_sensor); su2amg.write_solution(""current_sen",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/606#issuecomment-504636643:7901,adapt,adaptation,7901,https://su2code.github.io,https://github.com/su2code/SU2/issues/606#issuecomment-504636643,1,['adapt'],['adaptation']
Energy Efficiency,"sible idea until we get to areas of the code where different primitives require different treatment, that and the fact that the number of variables might not fit evenly in the number of lanes can lead to very tricky and non-generic code. Nevertheless if the same code were to be applied to e.g. 4 solution variables, this strategy would likely perform better as it avoids the pesky gather/scatter operations.; Processing multiple geometric primitives can make full utilization of whatever register size (important on GPU's), the code is just as readable (as I hope to show), but gather/scatter cannot be avoided. ### Intro to SPMD; This one is simpler, in a nutshell multiple threads operate on the sub domain of an MPI rank.; The typical implementation has each thread executing a chunk of an edge or cell loop. **Why should we care about SPMD?**; Reduce the communication overhead resulting from domain decomposition and improve load balancing, important for strong scaling.; Some algorithms are more efficient that way, e.g. the ADT (as mentioned by Edwin), the current MG also seems to work better on fewer partitions, and additive versions of preconditioners like the ILU or LU-SGS lose effectiveness with number of partitions.; Optimum hardware utilization, for routines that are bandwidth-bound it may be beneficial to use all threads available, while for compute-bound or ""algorithm-bound"" ones this may not be the case. **Relation with algorithms**; A typical edge loop reads from 2 locations and writes to 2 locations (gather / scatter access pattern, not to be confused with the instructions) processing multiple edges at the same time can therefore result in race conditions where multiple threads try to update the data of the same point.; There are 3 ways to address this:; - **Coloring**: Edges are colored (grouped) such that edges of the same color have no risk of race conditions, i.e. each endpoint is referenced only once per color (this definition gives you the basis of a greedy ",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/789#issuecomment-529662724:3247,efficient,efficient,3247,https://su2code.github.io,https://github.com/su2code/SU2/issues/789#issuecomment-529662724,2,['efficient'],['efficient']
Energy Efficiency,"simulation, it may make a noticeable difference. Q.2). The stress tensor in RANS simulation is following : . ![image](https://user-images.githubusercontent.com/50565314/148759208-effb0643-a903-48d4-9ef2-3b46162ad5f8.png). From [Running cases with CFD of NASA TMR](https://turbmodels.larc.nasa.gov/noteonrunning.html) : ""In the equation above, the![image](https://user-images.githubusercontent.com/50565314/148731540-ace2cac5-4168-48d8-9125-c053806ba463.png) term is **sometimes ignored for non-supersonic speed flows**, and the second term in parentheses is identically zero for incompressible flows."" And, from [SST Turbulence model of NASA TMR](https://turbmodels.larc.nasa.gov/sst.html) : ""**When the ![image](https://user-images.githubusercontent.com/50565314/148762159-e2b08305-e205-4ffd-9ec1-e9de19cda42d.png) term is ignored in ![image](https://user-images.githubusercontent.com/50565314/148762216-7e565ca3-856d-4c18-8e16-c9ad780452b8.png) in the momentum and energy equations** and the production term is approximated by ![image](https://user-images.githubusercontent.com/50565314/148762331-d102ea3b-b5fe-42d3-aa83-ffa0f18e3104.png), a modified naming convention should be employed : **SSTm**"". In the SU2 source code( line 142 in [SU2_CFD/src/numerics/flow/flow_diffusion.cpp](https://github.com/su2code/SU2/blob/master/SU2_CFD/src/numerics/flow/flow_diffusion.cpp)), The turbulence kinetic energy of the stress tensor is always calculated as 0. I don't know who, someone comments as ; ""// TODO why ignore turb_ke?""; This comment existed until SU2 v.7.1.0 to SU2 v.7.2.1(I'm not sure the same about the bellow SU2 v710). I guess the SST model of SU2 is 'SST' not 'SSTm'. Then, it should be used ![image](https://user-images.githubusercontent.com/50565314/148767053-79a012e3-1061-46b9-b432-359b7b04969f.png) in the stress tensor of the momentum and energy equations. The code always ignores the turbulence kinetic energy to compute the stress tensor for the momentum and energy equation.; Is ",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1551:4479,energy,energy,4479,https://su2code.github.io,https://github.com/su2code/SU2/issues/1551,1,['energy'],['energy']
Energy Efficiency,"sity/pressure/temperature at the nodes and also during 2nd-order reconstruction at cell faces.; - CV face states for 2nd-order MUSCL are now optionally reconstructed with a separate gradient method (unweighted least squares recommended), which is very important for robustness. Gradients for viscous terms and sources are still computed via GG or WLS for accuracy reasons.; - SA model was being clipped unnecessarily. This clipping has been removed. Here is my recommendation on how to run all of your 2nd-order cases going forward:. ### Euler / Laminar N-S; Turn off the limiters, unless you truly need them for preserving solution monotonicity (e.g., for shocks/discontinuities). Use ; ```; NUM_METHOD_GRAD_RECON= LEAST_SQUARES; ```; for robustness. Start with a CFL around 10 and converge the implicit system with LINEAR_SOLVER_ITER= 10 for each nonlinear iteration (FGMRES + ILU0 recommended). Activate the CFL adaption with. ```; % Parameters of the adaptive CFL number (factor down, factor up, CFL min value,; % CFL max value ); CFL_ADAPT= YES; CFL_ADAPT_PARAM= ( 0.1, 2.0, 10.0, 1e10); ```. It is important that the linear solve behaves well for each nonlinear iteration, so if this does not converge immediately, adjust the tolerance or number of linear iterations. Roe seems very stable, but some of the other upwind schemes or centered schemes may require improved Jacobian accuracy (to recover fast convergence) with:. ```; USE_ACCURATE_FLUX_JACOBIANS= YES; CENTRAL_JACOBIAN_FIX_FACTOR= 4.0; ```. ### RANS; Due to the segregated approach for the turbulence models, you have to be more conservative with the CFL adaption. All else is the same as above, but I recommend. ```; % Parameters of the adaptive CFL number (factor down, factor up, CFL min value,; % CFL max value ); CFL_ADAPT= YES; CFL_ADAPT_PARAM= ( 0.1, 1.2, 10.0, 1e3); ```. Most inviscid/laminar cases that I have tested so far converge to machine precision within a couple of hundred iterations. RANS cases within a few thousan",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/790:1969,adapt,adaptive,1969,https://su2code.github.io,https://github.com/su2code/SU2/pull/790,1,['adapt'],['adaptive']
Energy Efficiency,"size_t color=0; color<colorStart.size()-1; ++color); #pragma omp parallel for schedule(dynamic,CHUNK_SIZE); for(size_t k=colorStart[color]; k<colorStart[color+1]; ++k); {; #if SORT_BY_COLOR==1; size_t iEdge = k;; #else; size_t iEdge = edgeIdx[k];; #endif. size_t iPoint = connectivity[iEdge].first;; size_t jPoint = connectivity[iEdge].second;; ```; Apologies for the macro but it is just to illustrate that if we re-sort edge data after coloring the edge index is the loop index, otherwise the edge indices for each color need to be stored in a separate array.; Note that for each edge loop we first loop over colors, then over same-color edges, it is this inner loop that can run in parallel in chunk sizes that are multiple of the group size considered during coloring. There is some runtime cost on entry to every #omp parallel section, with coloring we enter one such section once by color. I mentioned in the introduction coloring reduces locality and therefore performance, here is the effect of color group size on the execution time of the scalar code on one thread:; ![image](https://user-images.githubusercontent.com/38071223/64686801-2e0d3d00-d481-11e9-82a0-c56e5554cd83.png); The hassle-free option of not sorting by color ""never"" recovers the performance of the base algorithm, things are even worse for the SIMD version where even at group size of 8192 with re-sorting the slowdown is 14%. Running the edge-loop version on 4 cores (8192 group + sorting) we get speedups (relative to reference) of **1.98** and **2.04** for the scalar and SIMD versions respectively (yes I quadruple checked).; If you are keeping track of the number two things should surprise you, the first is that there is no difference between scalar and SIMD now (the vector instruction are still there though), the second is that 4 cores give only a 2x speedup. The reason for both is: the implementation is very memory-bound, and so throwing more compute at it, either in the form of more cores or more lanes, does",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/789#issuecomment-530328194:13769,reduce,reduces,13769,https://su2code.github.io,https://github.com/su2code/SU2/issues/789#issuecomment-530328194,2,['reduce'],['reduces']
Energy Efficiency,"slower than in direct mode.; To address this issue I want to template the required classes such that we have the option (but not be obligated) to have CSysMatrices of passivedoubles in the discrete adjoint.; Moreover, I want to do some refactoring to make CSysSolve a proper class instead of an aggregate of functions. Currently we instantiate a CSysSolve whenever we need to solve a system, I think it would be beneficial to keep CSysSolve as a member of the classes that use it, so that for example, working memory used by Krylov methods is allocated only once. Note: I am aware that @talbring started some work on this (and more) in the *feature_template_linear_solver* branch, I tried to pick up were Tim left of but it was too much (a lot changes in one year). I really like the refactoring he was doing and will try to bring as much as possible into this, but I need to do it in smaller steps. Now this PR deals with some of the aforementioned refactoring, namely:; - CG, BCGSTAB, and GMRES have their working vectors and matrices as members of CSysSolve and allocate them only on the first call.; - CSysSolve is now a member of CSolver and CVolumetricMovement.; - BCGSTAB uses two fewer vectors than before and the ""p"" and ""v"" vectors are initialized to 0 instead of ""b"" (I think this was a small bug?).; - CSysSolve takes a ""mesh deformation"" flag at construction so that Solve can be called by CSolver and by CElasticityMovement, before the latter decided what Krylov method to call in place, kind of duplicating what is done by Solve. I did not do the same for CVolumetricMovement because there the differentiation is handled differently. This also allowed SetExternalSolve_Mesh to be merged with SetExternalSolve.; - Now when CSysSolve sets the external solve it passes itself (*this*) so that CSysSolve_b re-uses it in the reverse path instead of instantiating a CSysSolve every time.; - Part of CSysSolve_b::Solve_b was moved to CSysSolve::Solve_b to allow CSysSolve_b::Solve_g to be drop",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/650:1626,allocate,allocate,1626,https://su2code.github.io,https://github.com/su2code/SU2/pull/650,1,['allocate'],['allocate']
Energy Efficiency,"ss.\n""); ; for iSiz in range(len(mesh_sizes)):; ; mesh_size = int(mesh_sizes[iSiz]); nSub = int(sub_iter[iSiz]); ; sys.stdout.write(""\nIteration %d/%d - Mesh size coefficient %.1lf\n"" % (iSiz+1, len(mesh_sizes), mesh_size)); ; for iSub in range(nSub):; ; config_amg['size'] = mesh_size; config_amg['amg_log'] = 'ite%d.amg.stdout' % (global_iter); ; # Prints; pad_cpt = (""(%d/%d)"" % (iSub+1, nSub)).ljust(9); pad_nul = """".ljust(9); ; if not amg_python : ; ; #--- Load su2 mesh ; mesh = su2amg.read_mesh(current_mesh, current_solution); ; #--- If not using the amg python interface, convert the mesh and make system call; ; su2amg.write_mesh(""current.meshb"", ""current.solb"", mesh); ; if not os.path.exists(""current.solb""):; raise RuntimeError , ""\n##ERROR : Can't find solution.\n""; if not os.path.exists(""current.meshb""):; raise RuntimeError , ""\n##ERROR : Can't find mesh.\n""; ; #--- Get sensor; ; sensor = su2amg.create_sensor(mesh, adap_sensor); su2amg.write_solution(""current_sensor.solb"", sensor); ; if not os.path.exists(""current_sensor.solb""):; raise RuntimeError , ""\n##ERROR : Can't find adap sensor.\n""; ; #--- Run amg; ; sys.stdout.write(""Running amg. Log : %s\n"" % config_amg['amg_log']); ; if os.path.exists(""current.itp.solb""):; os.remove(""current.itp.solb""); ; try :; su2amg.amg_call(config_amg); except:; raise RuntimeError , ""\n##ERROR : Call to AMG failed.\n""; ; if not os.path.exists(config_amg['mesh_out']):; raise RuntimeError , ""\n##ERROR : Mesh adaptation failed.\n""; ; if not os.path.exists(""current.itp.solb""):; raise RuntimeError , ""\n##ERROR AMG: Solution interpolation failed.\n"" ; ; #--- Convert output from Inria mesh format to su2; # Deal with markers; ; save_markers = mesh['markers']; del mesh; ; # Read Inria mesh; mesh = su2amg.read_mesh(config_amg['mesh_out'], ""current.itp.solb""); mesh['markers'] = save_markers; ; current_mesh = ""ite%d.su2"" % global_iter; current_solution = ""ite%d.dat"" % global_iter ; ; su2amg.write_mesh(current_mesh, current_solution, mesh); ;",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/606#issuecomment-504636643:8910,sensor,sensor,8910,https://su2code.github.io,https://github.com/su2code/SU2/issues/606#issuecomment-504636643,1,['sensor'],['sensor']
Energy Efficiency,"t entirely sure how to get it working (running a supersonic Euler). I changed `KIND_ADAPT= GRAD_FLOW` and tried running `SU2_CFD` but no mesh adaptation seemed to take place. After digging around the github comments, I tried running `SU2_src/SU2_PY/mesh_adaptation.py` with python but it gave me an error:. ```; ------------------------- Exit Success (SU2_CFD) ------------------------. Traceback (most recent call last):; File ""/home/user/programs/su2/SU2_src/SU2_PY/mesh_adaptation.py"", line 106, in <module>; main(); File ""/home/user/programs/su2/SU2_src/SU2_PY/mesh_adaptation.py"", line 62, in main; options.save_all ); File ""/home/user/programs/su2/SU2_src/SU2_PY/mesh_adaptation.py"", line 93, in mesh_adaptation; SU2.run.MSH(config); File ""/home/user/programs/su2/SU2_src/SU2_PY/SU2/run/interface.py"", line 134, in MSH; run_command( the_Command ); File ""/home/user/programs/su2/SU2_src/SU2_PY/SU2/run/interface.py"", line 292, in run_command; raise exception(message); RuntimeError: Path = /home/user/projects/mesh_adapt_testing/,; Command = /home/user/programs/su2/SU2-7.0.8/bin/SU2_MSH config_MSH.cfg; SU2 process returned error '127'; /bin/sh: /home/user/programs/su2/SU2-7.0.8/bin/SU2_MSH: No such file or directory; ```. And indeed, when I checked the compiled SU2 bin, `SU2_MSH` seemed to be missing. Has this functionality been removed and is that why the python script is not in the compiled SU2 bin?. I found that some people have had success using the `feature_adap` branch instead but that is running on v7.0.3. I also tried compiling this version but there appears to be a `mesh_adaptation.py` and `mesh_adaptation_amg.py`. If one wants to use mesh adaptation, is this the recommended branch?. Wishing all a Merry Christmas, good health and a happy New Year.; Thanks and regards,; Tim. **Desktop (please complete the following information):**; - OS: Linux CentOS 8; - C++ compiler and version: GCC 8.22; - MPI implementation and version: Intel (Open MPI) 3.0.0; - SU2 Version: v7.0.8",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1143:1758,adapt,adaptation,1758,https://su2code.github.io,https://github.com/su2code/SU2/issues/1143,1,['adapt'],['adaptation']
Energy Efficiency,"t the initialization routines of CSysMatrix and CSysVector are only called by the master thread.; For the second issue I made the associated classes as const-correct as possible, that should at least make someone think twice before changing a member variable of those classes. The risk is still there for input variables as an algorithm development aspect... For example `MatrixVectorProductTransposed` cannot be made thread-parallel as simply/naively as its normal counterpart. ### Communication Model; The MPI + Threads communication model is very simple, currently only the master thread calls MPI routines (including `Error`), this requires thread barriers before and after the communication to make sure the correct values are passed and _seen_ by all threads.; We can test other alternatives in the future but at the moment this does not seem to be a significant bottleneck.; _Worksharing_ constructs have implicit barriers at completion, for CSysVector routines I used `nowait` modifiers, it is safe to call those routines in sequence since the loop sizes, and static work scheduling specifications are identical.; However, routines that access a CSysVector in a different way, should have an explicit barrier before using the vector (or risk having undefined behaviour). You will see these barriers on entry to matrix-vector product, and every `ComputeXXXPreconditioner` (if you don't, let me know xD). I think those routines are large enough to amortise the cost of this. ### Performance; Disclaimer:; - We are talking about linear solvers only, **you will not see a global improvement yet**.; - The large global improvements from ""hybridization"" will come from the multigrid behaving better on less decomposed domains, and from the ability to independently tune the number of cores used in the linear preconditioners. For now the objective is ""just"" not to loose performance while gaining flexibility.; - The performance of MPI+threads with 1 thread per rank will be worse than just MPI (no",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/830#issuecomment-562646766:2240,schedul,scheduling,2240,https://su2code.github.io,https://github.com/su2code/SU2/pull/830#issuecomment-562646766,2,['schedul'],['scheduling']
Energy Efficiency,"t trickier: the latest 2D results of @RoccoBombardieri show pretty much no difference including the first timesteps. The onera m6 case in contrast converges to the same (steady-state) results for both code version eventually but their initial transient phase differs quite significantly. . A possible explanation for the different initial transient phase: In both implementations a ""reflected state"" is constructed where the normal component of the velocity is subtracted [once in the older code version & twice in the newer version]. I.e. subtracting the normal component of velocity twice means mirroring the velocity along the symmetry plane. The newer code version is a bit ""stronger"" in enforcing the boundary conditions which could lead to the reduced oscillation in CD and CL. If we agree that both code versions produce physically correct results for steady cases and unsteady cases that were integrated long enough in time to get rid of the influence of the initial condition ... then we are left with this initial transient phase that differs. Of course if there is more evidence that one or the other version produces physically ""better"" results I would love to see that. Until then, both initial oscillations are equally correct/uncorrect in my opinion. [I'll add a few words about the adjoint here later]. [I'll add the idea of an FSI case of @cvencro here later where the initial phase has a major impact]; Consider an FSI computation of an airfoil where the trailing edge can exhibit flutter (periodic up-and-down-movement of the trailing edge) in certain flow regimes. Now if during the initial transient the forces on the airfoil are higher than in the converged state then the fluttering can be excited where the initial transient can be seen as an activation energy. If you were to e.g. ramp up flow speed/conditions slowly up to the same magnitude as before one might end up without fluttering. So based on the flow history there might exist multiple ""stable"" states. Cheers, Tobi",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/828#issuecomment-563314747:2786,energy,energy,2786,https://su2code.github.io,https://github.com/su2code/SU2/issues/828#issuecomment-563314747,2,['energy'],['energy']
Energy Efficiency,"te the grid movement during the time domain simulation via the python interface; Involved parameters: ; GRID_MOVEMENT= ROTATING_FRAME; TRANSLATION_RATE= u v w ; ROTATION_RATE= p q r~~; - update the surface mesh deformation during the time domain simulation via the python interface ; Involved parameters: ; DEFORM_MESH= YES; MARKER_DEFORM_MESH= ( list of markers ). Summing up, I will need to combine the grid velocities due to aircraft movement, elasticity and gust. Currently, this is not possible in SU2. ; I split the work into the following steps. Here is what is working / not working:; - [x] gust with 3D meshes --> plausibility check with rectangular, 3 meter wing at 2° + long gust equivalent to 2° = approx doubling of the lift coefficient; - [x] ~~gust + moving grid --> plausibility check by comparison with farfield onflow condition from above~~; - [x] ~~new python interface for grid movement update --> plausibility check with a) sudden jump in heave velocity w, b) sinusoidal velocity w at different frequencies to observe influence of unsteady aerodynamics (phase shift and reduction of resulting lift)~~; - [x] mesh deformation via python interface --> plausibility check with sinusoidal displacement z, scaled and shifted by 90° to correspond to velocity w from above, leads to same results; - [ ] ~~mesh deformation + moving grid --> differences with respect to farfield onflow condition / does NOT lead to same results as above. The grid velocities look right though, both on the temporary screen output and when plotting them by slicing through the volume results, but the amplitude of the lift coefficient is too small. I guess that the velocities are not set properly / mixed up / require a call to some update function or similar. **I'm stuck at this point. Does someone have any idea what I'm doing wrong?? I feel that I am missing an important step here...**~~; - [ ] ~~final test: mesh deformation + moving grid + gust~~; - [x] final test: mesh deformation + gust. Apart fr",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1954:1865,meter,meter,1865,https://su2code.github.io,https://github.com/su2code/SU2/pull/1954,1,['meter'],['meter']
Energy Efficiency,"tests are first added to document the related existing behavior. These tests serve to check that the existing behavior isn't damaged by the new code. Then new tests are added to prove that the new behavior is working correctly. For bug fixes, the process is simpler. A test is added to confirm that something is not behaving as expected. Then the code is fixed to make the test pass. What frameworks are available?. For a unit testing framework, here are the most popular options, with the following pros and cons:. Roll-your-own. * Requires no external dependencies; * The most flexible option; * Involves the most work to setup; * Will lack some of the more advances features of mature unit-testing frameworks. Boost Test. * Can be header only, statically linked, or dynamically linked; * If statically or dynamically linked, then Boost is not very lightweight; * Easy to add if you're already using Boost. Google Test. * Most common unit-testing framework; * Can be easily combined with Google's powerful GMock mocking library; * Compiling and linking can be somewhat painful. Catch2. * Used by FEniCS; * Makes unit tests easily readable with lots of syntactic sugar.; * Has a very simple syntax; * Is header-only; * Requires C++11 compilation; * Not as feature rich as Google Test or Boost Test. Questions. * How do developers feel about adding unit tests to SU2?; * If a unit-testing framework were added to SU2, would you actually use it?; * Do developers have a preference (or experience with) any of the unit testing frameworks?; * Should unit tests be expected when submitting PRs?. —; You are receiving this because you are subscribed to this thread.; Reply to this email directly, view it on GitHub<https://github.com/su2code/SU2/issues/698?email_source=notifications&email_token=AA5FFRG5U3Z55N4W2XWQED3PY3LJ5A5CNFSM4HTDQXQKYY3PNVWWK3TUL52HS4DFUVEXG43VMWVGG33NNVSW45C7NFSM4GXUGGLA>, or mute the thread<https://github.com/notifications/unsubscribe-auth/AA5FFRHOPE2MUJ2Z5RRV4HTPY3LJ5ANCNFSM4",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/698#issuecomment-499250240:4849,power,powerful,4849,https://su2code.github.io,https://github.com/su2code/SU2/issues/698#issuecomment-499250240,2,['power'],['powerful']
Energy Efficiency,"th.join(cwd,config['ADAP_SOURCE']); ; global_iter = 0; ; sys.stdout.write(""\nStarting mesh adaptation process.\n""); ; for iSiz in range(len(mesh_sizes)):; ; mesh_size = int(mesh_sizes[iSiz]); nSub = int(sub_iter[iSiz]); ; sys.stdout.write(""\nIteration %d/%d - Mesh size coefficient %.1lf\n"" % (iSiz+1, len(mesh_sizes), mesh_size)); ; for iSub in range(nSub):; ; config_amg['size'] = mesh_size; config_amg['amg_log'] = 'ite%d.amg.stdout' % (global_iter); ; # Prints; pad_cpt = (""(%d/%d)"" % (iSub+1, nSub)).ljust(9); pad_nul = """".ljust(9); ; if not amg_python : ; ; #--- Load su2 mesh ; mesh = su2amg.read_mesh(current_mesh, current_solution); ; #--- If not using the amg python interface, convert the mesh and make system call; ; su2amg.write_mesh(""current.meshb"", ""current.solb"", mesh); ; if not os.path.exists(""current.solb""):; raise RuntimeError , ""\n##ERROR : Can't find solution.\n""; if not os.path.exists(""current.meshb""):; raise RuntimeError , ""\n##ERROR : Can't find mesh.\n""; ; #--- Get sensor; ; sensor = su2amg.create_sensor(mesh, adap_sensor); su2amg.write_solution(""current_sensor.solb"", sensor); ; if not os.path.exists(""current_sensor.solb""):; raise RuntimeError , ""\n##ERROR : Can't find adap sensor.\n""; ; #--- Run amg; ; sys.stdout.write(""Running amg. Log : %s\n"" % config_amg['amg_log']); ; if os.path.exists(""current.itp.solb""):; os.remove(""current.itp.solb""); ; try :; su2amg.amg_call(config_amg); except:; raise RuntimeError , ""\n##ERROR : Call to AMG failed.\n""; ; if not os.path.exists(config_amg['mesh_out']):; raise RuntimeError , ""\n##ERROR : Mesh adaptation failed.\n""; ; if not os.path.exists(""current.itp.solb""):; raise RuntimeError , ""\n##ERROR AMG: Solution interpolation failed.\n"" ; ; #--- Convert output from Inria mesh format to su2; # Deal with markers; ; save_markers = mesh['markers']; del mesh; ; # Read Inria mesh; mesh = su2amg.read_mesh(config_amg['mesh_out'], ""current.itp.solb""); mesh['markers'] = save_markers; ; current_mesh = ""ite%d.su2"" % global_iter; ",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/606#issuecomment-504636643:8805,sensor,sensor,8805,https://su2code.github.io,https://github.com/su2code/SU2/issues/606#issuecomment-504636643,2,['sensor'],['sensor']
Energy Efficiency,"the desired python version with `CONFIGURE_OPTS=--enable-shared pyenv install <version>`. To recap, a ""workflow for newbies"" which appears to be working for me is. 1. install pyenv either from [source](https://github.com/pyenv/pyenv#installation) or from your distibution repositories, if available. IMPORTANT: make sure the environment variables are correctly set and `pyenv init` is added to your shell, as per the installation instructions.; 2. install the desired python version (for example 3.7.8), enabling shared libraries: ; `CONFIGURE_OPTS=--enable-shared pyenv install 3.7.8`; 3. clone/download the [feature_adap](https://github.com/su2code/SU2/tree/feature_adap) branch of SU2;; 4. in the SU2 folder, configure meson ; `./meson.py build` ; and make sure to update the environment variables in your `.bashrc` as indicated by meson's output.; 5. use ninja to build and install SU2 ; `./ninja -C build install`;; if you run into a permission error, specify an installation directory passing the `--prefix` option to meson, as explained [here](https://www.cfd-online.com/Forums/su2-installation/227676-su-installation-failed-due-insufficient-permissions.html). These passages, at least for me, result in a running SU2 with mesh adaptation, although I have made no tests on running actual simulations. That being said, the involvement of pyenv is due to the fact that the provided python wheel for pyamg is for python 3.7 only. If I understand correctly, the library itself is proprietary, sadly, so I assume @bmunguia has access either to the source files or to someone who can package them. Depending on the actual compatibility of the code, it would be nice if the wheel was updated to the latest python version, or at least the dependency on 3.7.* was removed. . @chesiv you can also try checking the logs in the `log.err` and `log.out` files to see if anything has gone wrong. Keep in mind all SU2 output is redirected to them, so you might not get any useful information on your terminal.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/948#issuecomment-751823130:2156,adapt,adaptation,2156,https://su2code.github.io,https://github.com/su2code/SU2/issues/948#issuecomment-751823130,1,['adapt'],['adaptation']
Energy Efficiency,"the far-field flow. This approach has been already implemented with the `KIND_TURB_MODEL= SST_SUST` option.; ![kk_sst_copr_sust_TKE](https://user-images.githubusercontent.com/72806890/111278024-60c96000-8639-11eb-8b1b-f4e95a3f97ab.png); - *Floor values*, which is equivalent to set the `lowerlimit` to the far-field values in the upstream region of the airfoil.; This PR adds floor values, but in the form of *fixed values*: The turbulence quantities are just set to the far-field values in the upstream region. This has been implemented in analogy to the strong boundary conditions. The correction can be activated like this:. TURB_FIXED_VALUES= YES; TURB_FIXED_VALUES_DOMAIN= -1.0. The second parameter specifies the half-plane on which fixed values are applied. This half-plane consists of those points for which the dot product of their coordinate vector with the normalized far-field velocity vector is less than `TURB_FIXED_VALUES_DOMAIN`. . This is the turbulence kinetic energy with AoA=0° and 10°:; ![kk_sst_copr_floor_TKE](https://user-images.githubusercontent.com/72806890/111278035-63c45080-8639-11eb-8ae9-194a5a1ca5f8.png); ![kk_sst_copr_floor_aoa10_TKE](https://user-images.githubusercontent.com/72806890/111278050-68890480-8639-11eb-9065-adac2e8cba15.png). The SA model does not suffer from a decaying turbulence variable, but the proposed changes are also functional there. [1] Philippe R. Spalart and Christopher L. Rumsey, Effective Inflow Conditions for Turbulence Models in Aerodynamic Calculations, https://arc.aiaa.org/doi/pdf/10.2514/1.29373. ## Related Work; ?. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X ] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unu",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1236:1780,energy,energy,1780,https://su2code.github.io,https://github.com/su2code/SU2/pull/1236,1,['energy'],['energy']
Energy Efficiency,"the pitching motion re-included, and looked at the periodic behaviour. [pitching_NACA64A010.zip](https://github.com/su2code/SU2/files/3963760/pitching_NACA64A010.zip). ![NACA64A010](https://user-images.githubusercontent.com/33747655/70848141-f7223b00-1e64-11ea-876c-0751b187fea4.png). Using the Euler wall boundary condition, the results still match exactly to @economon 's thesis (no real surprise as I suspect the code hasn't changed much for this comparison) and this agrees pretty closely with other inviscid reference results like Jamesons's unsteady flow past airfoils. With the symmetry plane, the results differ from the other inviscid solutions but the agreement to the experiment is better. I couldn't get hold of reference drag or moment results to compare against, therefore the comparison is only against lift. I also tested the pitching NACA 0012 airfoil using Batina's ""Unsteady Euler Airfoil Solutions Using Unstructured Dynamic Meshes"" as reference. In this case with the NACA 0012 airfoil, the reduced frequency (k=0.0814) is lower than the previous case and the amplitude is slightly higher at 2.51deg. . [pitching_NACA0012.zip](https://github.com/su2code/SU2/files/3963762/pitching_NACA0012.zip); ![NACA0012_CL](https://user-images.githubusercontent.com/33747655/70848145-115c1900-1e65-11ea-9f5d-7e73e6ac349e.png). Once again, using reference from computational and experimental results, the lift results are very similar for both boundary conditions. For this case, moment results were also available. . ![NACA0012_CM](https://user-images.githubusercontent.com/33747655/70848146-115c1900-1e65-11ea-9e24-4c55550ee945.png). The sign convention was inverted in the paper and neither BC matched exactly to the reference which had a coarser mesh than the one used here but the Euler wall looks to be in better agreement with the reference and captures the overall shape. I've attached the case files for this as well and it would be interesting to see the results when run with the cha",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/828#issuecomment-565716260:2070,reduce,reduced,2070,https://su2code.github.io,https://github.com/su2code/SU2/issues/828#issuecomment-565716260,1,['reduce'],['reduced']
Energy Efficiency,"thout low-dissipation function.; Second order integration in space, with slope limiter.; Venkatakrishnan slope-limiting method, with constant: 0.03. ; The reference element size is: 1. ; Scalar upwind solver for the turbulence model.; Second order integration in space with slope limiter.; No slope-limiting method. ; Average of gradients with correction (viscous flow terms).; Average of gradients with correction (viscous turbulence terms).; Gradient Computation using weighted Least-Squares method. ---------------------- Time Numerical Integration -----------------------; Local time stepping (steady state simulation).; Euler implicit method for the flow equations.; FGMRES is used for solving the linear system.; Using a LU-SGS preconditioning.; Convergence criteria of the linear solver: 1e-10.; Max number of linear iterations: 5.; V Multigrid Cycle, with 3 multigrid levels.; Damping factor for the residual restriction: 0.75.; Damping factor for the correction prolongation: 0.75.; No CFL adaptation.; +-------------------------------------------+; | MG Level| Presmooth|PostSmooth|CorrectSmo|; +-------------------------------------------+; | 0| 1| 0| 0|; | 1| 1| 0| 0|; | 2| 1| 0| 0|; | 3| 1| 0| 0|; +-------------------------------------------+; Courant-Friedrichs-Lewy number: 10; Euler implicit time integration for the turbulence model. ------------------------- Convergence Criteria --------------------------; Maximum number of iterations: 99999.; Reduce the density residual 10 orders of magnitude.; The minimum bound for the density residual is 10^(-12).; Start convergence criteria at iteration 10. -------------------------- Output Information ---------------------------; Writing a solution file every 10000 iterations.; Writing the convergence history every 1 iterations.; The output file format is Tecplot ASCII (.dat).; Convergence history file name: history.; Forces breakdown file name: forces_breakdown.dat.; Surface flow coefficients file name: surface_flow.; Flow varia",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/591:3362,adapt,adaptation,3362,https://su2code.github.io,https://github.com/su2code/SU2/issues/591,1,['adapt'],['adaptation']
Energy Efficiency,"tion test cases will be uploaded in the following days. . The most important results can be found in the pdf of my presentation at the SU2 Conference 2022. https://polimi365-my.sharepoint.com/:b:/g/personal/10507725_polimi_it/EUswl9Jw0XhIuozrOjXqX6sBdscM30lRZ7mwMZcr5anvyA?e=41db5P. One recent result is the application of the transition model to the Sickle wing test case for -2.67° of the angle of attack. SST+LM2015; ![Results](https://user-images.githubusercontent.com/43813346/195149921-6e85c1c7-2fc8-47e9-b935-246081ea17fd.png). SA+LM2015; ![Results](https://user-images.githubusercontent.com/43813346/195152304-e81c92f3-35da-4c50-9cd8-e5528c644cde.png). The lower surface is represented on the left, whereas the upper surface is on the right. At the moment the wind tunnel walls have not been taken into account. This can explain the spanwise shift of the transition with respect to the experimental results. More results are incoming. . Please, any suggestions on how to clean up the code or on how to make it more efficient are very well accepted. More comments to the code will be added in the following days. Especially to the declaration of some functions. I know that it is not the most good-looking code right now but I preferred uploading it now such that others can use it even if it is not really clean. . ## Related Work; Work is related to the PR #1751. It extends it to SA turbulence model and includes cross-flow effects (LM2015) and turbulence index computations. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [ ] My contribution is commented and consistent with SU2 style (https://su2code.github.io/do",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1788:3306,efficient,efficient,3306,https://su2code.github.io,https://github.com/su2code/SU2/pull/1788,1,['efficient'],['efficient']
Energy Efficiency,"tion[i] = 1.0;; ...; double r = numerics->ComputeResidual(&solution[p0*nVar], &solution[p1*nVar]);; ...; ```; OK, so we run this for 1000000 nodes with 4 variables per node and a overhead (or ""space between variables"") of 200 and we see that CVariable is **8.4** times slower.; But we can actually confuse the CPU further by accessing the variables through the virtual method, i.e.; ```; ...; double r = numerics->ComputeResidual(node[p0]->GetSecondary(), node[p1]->GetSecondary());; ...; ```; and now we measure our loop to be **10** times slower.; If we remove all overhead the loop is only **1.5** and **1.9** times slower respectively, it is really the enormous distance that kills performance. **Proposed solution**; Now, I would like to get better performance, but I do not want to re-write the entire code, and I recognize the usefulness of polymorphism and that encapsulating data keeps the code more manageable and readable.; To that end I propose that CVariable should allocate data for all nodes, so CSolver would have one CVariable and not one per node e.g.; ```; class DenseVariableBase; {; protected:; double* primary;; int n, i;; public:; DenseVariableBase(int nVar, int nNode); {; primary = new double [nVar*nNode];; ...; }; virtual ~DenseVariableBase() {delete [] primary;}; inline DenseVariableBase* operator[] (int iNode); {; i = iNode;; return this;; }; inline double* GetPrimary() {return &primary[i*n];}; inline virtual double* GetSecondary() {return nullptr;}; };; ```; To keep the same semantics of accessing variables `node[iNode]->Get()` (and thus avoid changing the entire code) the class now keeps track of what node we are accessing (member variable `i`) and all its methods have this in consideration see for example `GetPrimary` above.; We tell the class what node we want via `operator []` which returns a pointer to the object itself so we can call other methods on top of `[]`.; This does not exactly recover the same interface and it can create some bugs because on",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/716:5168,allocate,allocate,5168,https://su2code.github.io,https://github.com/su2code/SU2/issues/716,1,['allocate'],['allocate']
Energy Efficiency,"tps://github.com/su2code/SU2/actions/runs/8536216515/job/23386086770?pr=2246#step:7:2062). ```; ==2308==ERROR: AddressSanitizer: heap-buffer-overflow on address 0x60f0008c96a0 at pc 0x558b6435ae51 bp 0x7ffc1cebf680 sp 0x7ffc1cebf670; READ of size 8 at 0x60f0008c96a0 thread T0; #0 0x558b6435ae50 in CInterface::PreprocessAverage(CGeometry*, CGeometry*, CConfig const*, CConfig const*, unsigned short) ../SU2_CFD/src/interfaces/CInterface.cpp:314; #1 0x558b6373d23a in CDriver::PreprocessTurbomachinery(CConfig**, CGeometry****, CSolver*****, CInterface***, bool) ../SU2_CFD/src/drivers/CDriver.cpp:2725; #2 0x558b63770d76 in CDriver::CDriver(char*, unsigned short, int, bool) ../SU2_CFD/src/drivers/CDriver.cpp:250; #3 0x558b637f54c2 in CMultizoneDriver::CMultizoneDriver(char*, unsigned short, int) ../SU2_CFD/src/drivers/CMultizoneDriver.cpp:35; #4 0x558b63615b53 in main ../SU2_CFD/src/SU2_CFD.cpp:135; #5 0x7f0d8c503082 in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x24082); #6 0x558b6367005d in _start (/github/workspace/install/bin/SU2_CFD+0x63405d). 0x60f0008c96a0 is located 0 bytes to the right of 176-byte region [0x60f0008c95f0,0x60f0008c96a0); allocated by thread T0 here:; #0 0x7f0d8ed00787 in operator new[](unsigned long) ../../../../src/libsanitizer/asan/asan_new_delete.cc:107; #1 0x558b656d1590 in CPhysicalGeometry::ComputeNSpan(CConfig*, unsigned short, unsigned short, bool) ../Common/src/geometry/CPhysicalGeometry.cpp:4806; #2 0x558b6373c1df in CDriver::PreprocessTurbomachinery(CConfig**, CGeometry****, CSolver*****, CInterface***, bool) ../SU2_CFD/src/drivers/CDriver.cpp:2649; #3 0x558b63770d76 in CDriver::CDriver(char*, unsigned short, int, bool) ../SU2_CFD/src/drivers/CDriver.cpp:250; #4 0x558b637f54c2 in CMultizoneDriver::CMultizoneDriver(char*, unsigned short, int) ../SU2_CFD/src/drivers/CMultizoneDriver.cpp:35; #5 0x558b63615b53 in main ../SU2_CFD/src/SU2_CFD.cpp:135; #6 0x7f0d8c503082 in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x24082); ```",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2246#issuecomment-2034404720:1874,allocate,allocated,1874,https://su2code.github.io,https://github.com/su2code/SU2/pull/2246#issuecomment-2034404720,1,['allocate'],['allocated']
Energy Efficiency,"tps://github.com/su2code/SU2/files/4793965/case728.txt). I am running a shape optimization of a single blade row stator with an FFD box of degree (5 , 11, 2). The max deformation is of the order 1E-5. The change in mesh visually is very minimal but after SU2 deforms the mesh it generates negative volumes and a negative Jacobian. It is also happening if I use only one DV in the optimization. As a result my DSN_002 DIRECT results are all diverging. In the image, the red box is the deformed box and the green one is the undeformed box. You can also see the blade. The number of nodes are just shy of 1 million in the whole volume mesh. ![untitled](https://user-images.githubusercontent.com/46273732/84716054-2747b500-af40-11ea-9877-3f229a8957ce.png). SU2 mesh stats for DSN001:; Computing mesh quality statistics for the dual control volumes.; +--------------------------------------------------------------+; | Mesh Quality Metric| Minimum| Maximum|; +--------------------------------------------------------------+; | Orthogonality Angle (deg.)| 52.4241| 89.9962|; | CV Face Area Aspect Ratio| 1.02662| 2123.48|; | CV Sub-Volume Ratio| 1.00007| 3.63253|; +--------------------------------------------------------------+. SU2_mesh stats for DSN002:; Computing mesh quality statistics for the dual control volumes.; +--------------------------------------------------------------+; | Mesh Quality Metric| Minimum| Maximum|; +--------------------------------------------------------------+; | Orthogonality Angle (deg.)| -42.6863| 89.9963|; | CV Face Area Aspect Ratio| 1.02903| 31868.8|; | CV Sub-Volume Ratio| 1.00034| 40627.1|; +--------------------------------------------------------------+. From Tecplot I can calculate that the cell volumes and the Jacobian is also negative for DSN002 for some cells. I believe if I reduce my OPT_RELAX_FACTOR I can have deformations of the O(-6) but isn't this already too small. Are there any parameters I can change in the config file to avoid this issue?",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1026:1841,reduce,reduce,1841,https://su2code.github.io,https://github.com/su2code/SU2/issues/1026,1,['reduce'],['reduce']
Energy Efficiency,"ts in config_structure to make doxygen pretty; - Bug fixing; - Merge branch 'develop'; - EA in ft^2; - further update to config; - Merge remote-tracking branch 'upstream/develop' into upstream_dev; - Minor changes; - Updated NF BC; - More adjustments; - Small update; - Final update Nearfield BC; - added massflowrate as option for cauchy criteria, more config file comments; - Merge remote-tracking branch 'upstream/develop' into upstream_dev; - paraview output modified/added back in for current version for SU2_DEF; - Merge branch 'develop' into feature_dualoutput; - Removed deprecated options from quicstart config.; - Working version of the compressible actuator disk; - Updated fixed CL mode.; - Very minor change; - Merge branch 'develop' into feature_dualoutput; - Final push to 3.2.9; - Merge branch 'develop'; - Minor change; - Minor change; - Small change; - Minor change; - Bug fixing: unsigned short val_vertex --> unsigned long val_vertex; - CFL adapt now works for adjoint problems; - Merge branch 'develop' into feature_dualoutput; - Fixing a typo; - Fix in the Euler BC for grid movement cases; - merging and fixing conflicts bwtn feature_dealloc and develop; - dealloc; - Time spectral fix.; - Merging some recent bug fixes from master into the develop branch to keep nsync.; - Merge branch 'feature_gridvel_fix' into develop; - Merge remote-tracking branch 'upstream/develop' into feature_Deallocation; - correcting issues, adding more deallocation; - fixed uninitialized pointers in CConfig; - further deallocation; - some corrections needed to pass reg tests; - fixed some dealloc issues that caused errors in euler adj; - modifications needed to (mostly) pass reg tests; all run w/o segfault. File Changes; - D Articles/AIAA_2013-0287.pdf (0) ; - D Articles/AIAA_2014-0243.pdf (0) ; - M Common/doc/docmain.hpp (46) ; - M Common/include/config_structure.hpp (1038) ; - M Common/include/config_structure.inl (191) ; - M Common/include/dual_grid_structure.hpp (43) ; - M Common/inc",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/174#issuecomment-101443812:9856,adapt,adapt,9856,https://su2code.github.io,https://github.com/su2code/SU2/pull/174#issuecomment-101443812,2,['adapt'],['adapt']
Energy Efficiency,"us on another performance bottleneck we have. One that always seemed quite daunting to tackle (to me) due to the amount of changes it would require, but recently I had a silly idea to reduce the invasiveness of the ""procedure"". Discontiguous data structures are absolute performance killers for low order FVM.; *(skip this paragraph if this is obvious)*; What data structures? All the small ones the solver needs to ""visit"" to compute residuals.; Why? Mostly because they destroy locality. The useful data stored by consecutive nodes is very far apart. Modern CPU's try to hide the latency of accessing main memory (RAM) by caching frequently used areas of that memory, this effort is very easily undermined by accessing memory at random or predictably but at very large strides.; Let me give you some numbers, for CNSVariable in 2D the average distance between the primitives at consecutive nodes is 200 doubles or 1600 bytes. ""What?! is the compiler dumb?"" No, virtual methods take up quite a bit of space `sizeof(CNSVariable)` is 424 bytes, before it allocates any data.; And that can only get worse as more functionality is added to the code. This is one of those ""well known"" things at least in a qualitative way, but let us try and quantify the cost using an approximation of our typical use case scenario.; *Spoiler alert:* It is up to one order of magnitude, if this does not surprise you feel free to go straight to ""Proposed solution"". We will have a variable class that stores some data with some overhead (the 200 doubles):; ```; class VariableBase; {; protected:; double* primary;; public:; VariableBase(int nVar, int overhead);; virtual ~VariableBase();; inline double* GetPrimary() {return primary;}; inline virtual double* GetSecondary() {return nullptr;}; };. VariableBase::VariableBase(int nVar, int overhead); {; primary = new double [nVar+overhead];; for(int i=0; i<nVar; ++i) primary[i] = 1.0;; }; ```; All this does is give access to some primary variables held by the base clas",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/716:1231,allocate,allocates,1231,https://su2code.github.io,https://github.com/su2code/SU2/issues/716,1,['allocate'],['allocates']
Energy Efficiency,"will be useful,; # but WITHOUT ANY WARRANTY; without even the implied warranty of; # MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU; # Lesser General Public License for more details.; #; # You should have received a copy of the GNU Lesser General Public; # License along with SU2. If not, see <http://www.gnu.org/licenses/>. import os, sys, shutil, copy, time; import numpy as np. from .. import io as su2io; from .. import amginria as su2amg; from interface import CFD as SU2_CFD. try :; import pyamg ; except:; sys.stderr.write(""## ERROR : Unable to import pyamg module.\n""); sys.exit(1). def amg ( config , kind='' ):; ; sys.stdout.write(""SU2-AMG Anisotropic Mesh Adaptation\n""); ; #--- TODO: Check pyamg version compatibility; ; #--- Check config options related to mesh adaptation; ; adap_options = ['ADAP_SIZES', 'ADAP_SUBITE', 'ADAP_SENSOR', \; 'ADAP_BACK', 'ADAP_HMAX', 'ADAP_HMIN', 'ADAP_HGRAD', 'ADAP_RESIDUAL_REDUCTION', 'ADAP_EXT_ITER', 'ADAP_SOURCE','ADAP_PYTHON']; required_options = ['ADAP_SIZES', 'ADAP_SUBITE', \; 'ADAP_SENSOR', 'MESH_FILENAME', 'RESTART_SOL', 'MESH_OUT_FILENAME']; ; if not all (opt in config for opt in required_options):; err = '\n\n## ERROR : Missing options: \n'; for opt in required_options:; if not opt in config:; err += opt + '\n'; raise RuntimeError , err; ; # Print adap options; sys.stdout.write(su2amg.print_adap_options(config, adap_options)); ; #--- How many iterative loops? Using what prescribed mesh sizes? ; ; mesh_sizes = su2amg.get_mesh_sizes(config); sub_iter = su2amg.get_sub_iterations(config); ; # solver iterations/ residual reduction param for each size level; adap_ext_iter = su2amg.get_ext_iter(config); adap_res = su2amg.get_residual_reduction(config). adap_sensor = config.ADAP_SENSOR; sensor_avail = ['MACH', 'PRES', 'MACH_PRES']; ; if adap_sensor not in sensor_avail:; raise RuntimeError , 'Unknown adaptation sensor (ADAP_SENSOR option)\n'; ; if len(mesh_sizes) != len(sub_iter):; raise RuntimeError , 'Inconsisten",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/606#issuecomment-504636643:2597,Adapt,Adaptation,2597,https://su2code.github.io,https://github.com/su2code/SU2/issues/606#issuecomment-504636643,2,"['Adapt', 'adapt']","['Adaptation', 'adaptation']"
Energy Efficiency,xcbkptlist (0) ; - I SU2_IDE/Xcode/SU2_CFD.xcodeproj/xcuserdata/fpalacios.xcuserdatad/xcschemes/SU2_CFD.xcscheme (0) ; - I SU2_IDE/Xcode/SU2_DEF.xcodeproj/project.pbxproj (0) ; - I SU2_IDE/Xcode/SU2_DOT.xcodeproj/project.xcworkspace/xcshareddata/SU2_DOT.xccheckout (0) ; - I SU2_IDE/Xcode/SU2_GEO.xcodeproj/project.xcworkspace/xcshareddata/SU2_GEO.xccheckout (0) ; - I SU2_IDE/Xcode/SU2_MSH.xcodeproj/project.pbxproj (0) ; - D SU2_IDE/Xcode/SU2_PRT.xcodeproj/fpalacios.mode1v3 (0) ; - D SU2_IDE/Xcode/SU2_PRT.xcodeproj/fpalacios.pbxuser (0) ; - D SU2_IDE/Xcode/SU2_PRT.xcodeproj/project.pbxproj (0) ; - D SU2_IDE/Xcode/SU2_PRT.xcodeproj/project.xcworkspace/contents.xcworkspacedata (0) ; - D SU2_IDE/Xcode/SU2_PRT.xcodeproj/project.xcworkspace/xcshareddata/SU2_DDC.xccheckout (0) ; - I SU2_IDE/Xcode/SU2_SOL.xcodeproj/project.pbxproj (0) ; - I SU2_IDE/Xcode/SU2_SOL.xcodeproj/xcuserdata/fpalacios.xcuserdatad/xcschemes/SU2_SOL.xcscheme (0) ; - I SU2_MSH/include/SU2_MSH.hpp (0) ; - I SU2_MSH/obj/Makefile.am (0) ; - I SU2_MSH/obj/Makefile.in (0) ; - I SU2_MSH/src/SU2_MSH.cpp (0) ; - D SU2_PRT/bin/.gitignore (0) ; - D SU2_PRT/include/SU2_PRT.hpp (0) ; - D SU2_PRT/obj/Makefile.am (0) ; - I SU2_PRT/obj/Makefile.in (0) ; - D SU2_PRT/src/SU2_PRT.cpp (0) ; - D SU2_PY/2DChannel.py (0) ; - D SU2_PY/3DChannel.py (0) ; - I SU2_PY/Makefile.am (0) ; - I SU2_PY/Makefile.in (0) ; - I SU2_PY/SU2/**init**.py (0) ; - I SU2_PY/SU2/eval/design.py (0) ; - I SU2_PY/SU2/eval/functions.py (0) ; - I SU2_PY/SU2/eval/gradients.py (0) ; - I SU2_PY/SU2/io/config.py (0) ; - I SU2_PY/SU2/io/config_options.py (0) ; - I SU2_PY/SU2/io/data.py (0) ; - I SU2_PY/SU2/io/filelock.py (0) ; - I SU2_PY/SU2/io/redirect.py (0) ; - I SU2_PY/SU2/io/state.py (0) ; - I SU2_PY/SU2/io/tools.py (0) ; - I SU2_PY/SU2/mesh/adapt.py (0) ; - I SU2_PY/SU2/mesh/tools.py (0) . Patch Links:; - https://github.com/su2code/SU2/pull/174.patch; - https://github.com/su2code/SU2/pull/174.diff; —; Reply to this email directly or view it on GitHub.,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/174#issuecomment-101443812:27627,adapt,adapt,27627,https://su2code.github.io,https://github.com/su2code/SU2/pull/174#issuecomment-101443812,2,['adapt'],['adapt']
Energy Efficiency,"y remote repository(forked) is not synchronized with v7.40, and I don't know what the problem is. So, I will delete the forked repository and fork it again to PR with the same name and content. Fortunately, the LM model updated to v7.40 obtained the same residuals and results as the previous v7.3.1. ## Current State . Code is well running and, validation is almost done. V&V cases: T3A, T3A-, NLF. Flow conditions are the reference from: https://doi.org/10.2514/6.2022-3679. The grids of T3A and NLF cases are provided by [TMW](https://transitionmodeling.larc.nasa.gov/workshop_i/)(Transition Model Workshop). And I made the grid of T3A- myself. To validate the LM model, the simulation results of SU2 are compared with the results of Fluent19.0 with a similar numerical setting. Here is the numerical scheme : . <html xmlns:m=""http://schemas.microsoft.com/office/2004/12/omml""; xmlns=""http://www.w3.org/TR/REC-html40"">. <head>. <meta name=ProgId content=PowerPoint.Slide>; <meta name=Generator content=""Microsoft PowerPoint 15"">. <!--tr; 	{mso-height-source:auto;}; col; 	{mso-width-source:auto;}; td; 	{padding-top:1.0px;; 	padding-right:1.0px;; 	padding-left:1.0px;; 	mso-ignore:padding;; 	color:windowtext;; 	font-size:18.0pt;; 	font-weight:400;; 	font-style:normal;; 	text-decoration:none;; 	font-family:Arial;; 	mso-generic-font-family:auto;; 	mso-font-charset:0;; 	text-align:general;; 	vertical-align:bottom;; 	border:none;; 	mso-background-source:auto;; 	mso-pattern:auto;}; .oa1; 	{border:1.0pt solid black;; 	vertical-align:top;; 	padding-bottom:3.6pt;; 	padding-left:7.2pt;; 	padding-top:3.6pt;; 	padding-right:7.2pt;}; .oa2; 	{border:1.0pt solid black;; 	text-align:center;; 	vertical-align:top;; 	padding-bottom:3.6pt;; 	padding-left:7.2pt;; 	padding-top:3.6pt;; 	padding-right:7.2pt;}; -->. </head>. <body>; <!--StartFragment-->.   | Fluent | SU2; -- | -- | --; Flux | Roe-FDS | L2ROE; Gradient | Least Squares Cell Based | WEIGHTED_LEAST_SQUARES; Spatial Discretization Flow | Third",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1751:1352,Power,PowerPoint,1352,https://su2code.github.io,https://github.com/su2code/SU2/pull/1751,1,['Power'],['PowerPoint']
Energy Efficiency,y/UserPackages/SU2_INSTALL_NEW/bin/SU2/io; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/io/__init__.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/io; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/mesh/adapt.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/mesh; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/mesh/tools.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/mesh; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/mesh/__init__.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/mesh; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/opt/project.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/opt; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/opt/scipy_tools.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/opt; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/opt/__init__.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/opt; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/run/adaptation.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/run; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/run/adjoint.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/run; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/run/deform.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/run; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/run/direct.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/run; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/run/interface.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/run; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/run/merge.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/run; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/run/geometry.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/run; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/991#issuecomment-632032044:6422,adapt,adaptation,6422,https://su2code.github.io,https://github.com/su2code/SU2/issues/991#issuecomment-632032044,1,['adapt'],['adaptation']
Energy Efficiency,"~~Convergence history is non deterministic when running the RANS solver with SA model using OMP-only parallelism. When fixing the min RMS residual, the computation stops at a different iteration each time I run the solver.~~. ~~That does not happen with the EULER or NAVIER_STOKES solvers.~~. Convergence history is non deterministic when using the NEWTON_KRYLOV solver using OMP-only parallelism. When fixing the min RMS residual, the computation stops at a different iteration each time I run the solver.; That happens with the EULER or NAVIER_STOKES and RANS solvers. I am using a common setup for each case i.e. ROE+MUSCL convective fluxes, WLSQ for viscous gradients, LSQ for MUSCL gradients. Tried also switching ON and OFF the CFL adaptation and limiters, different linear solvers, and precision (single/double) of the linear solver but that doesn't change the outcome of the test (RANS conv history remains non deterministic while EULER and NS have always the same convergence history). I compiled in release (-O3), with OMP support and exported the mtune/march variables to enable SIMD types. ~~I'll be looking in the SA/Scalar solver for some uninitialized vars. Any other idea?~~. I'll be looking in the CNewtonIntegration files for some uninitialized vars/thread safety issue. Any other idea? . **Bug report checklist**; - [x] Consulting the build instructions (https://su2code.github.io/docs_v7/Build-SU2-Linux-MacOS/).; - [x] Looking for similar problems on GitHub or CFD-Online (https://www.cfd-online.com/Forums/su2/).; - [x] Updating to the newest version of SU2 (either develop, master, or the pre-built executables https://su2code.github.io/download.html). **Desktop (please complete the following information):**; - OS: Linux (Ubuntu 18.4 LTS); - C++ compiler and version: g++ (GCC) 7.5.0; - MPI implementation and version: OpenMPI 2.1.1; - SU2 Version: 8.0.1",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/2259:738,adapt,adaptation,738,https://su2code.github.io,https://github.com/su2code/SU2/issues/2259,1,['adapt'],['adaptation']
Integrability," ""c++ (x86_64-posix-seh-rev0, Built by MinGW-W64 project) 8.1.0""); C++ linker for the host machine: c++ ld.bfd 2.30; Build machine cpu family: x86_64; Build machine cpu: x86_64; Host machine cpu family: x86_64; Host machine cpu: x86_64; Target machine cpu family: x86_64; Target machine cpu: x86_64; Program python3 found: YES (C:\Users\KleineKampfzwergin\AppData\Local\Programs\Python\Python39\python.exe); Pkg-config binary for MachineChoice.HOST is not cached.; None of 'PKG_CONFIG' are defined in the environment, not changing global flags.; Pkg-config binary missing from cross or native file, or env var undefined.; Trying a default Pkg-config fallback at pkg-config; Trying pkg-config binary pkg-config for machine MachineChoice.HOST at ['D:\\Programme\\pkg-config-lite-0.28-1_bin-win32\\pkg-config-lite-0.28-1\\bin\\pkg-config.EXE']; Found pkg-config: D:\Programme\pkg-config-lite-0.28-1_bin-win32\pkg-config-lite-0.28-1\bin\pkg-config.EXE (0.28); Determining dependency 'ompi-c' with pkg-config executable 'D:\\Programme\\pkg-config-lite-0.28-1_bin-win32\\pkg-config-lite-0.28-1\\bin\\pkg-config.EXE'; PKG_CONFIG_PATH: ; Called `D:\Programme\pkg-config-lite-0.28-1_bin-win32\pkg-config-lite-0.28-1\bin\pkg-config.EXE --modversion ompi-c` -> 1; ; mpicc binary missing from cross or native file, or env var undefined.; Trying a default mpicc fallback at mpicc; mpicc found: NO; Run-time dependency MPI for c found: YES; Pkg-config binary for MachineChoice.HOST is cached.; Determining dependency 'ompi-cxx' with pkg-config executable 'D:\\Programme\\pkg-config-lite-0.28-1_bin-win32\\pkg-config-lite-0.28-1\\bin\\pkg-config.EXE'; PKG_CONFIG_PATH: ; Called `D:\Programme\pkg-config-lite-0.28-1_bin-win32\pkg-config-lite-0.28-1\bin\pkg-config.EXE --modversion ompi-cxx` -> 1; ; mpic++ binary missing from cross or native file, or env var undefined.; Trying a default mpic++ fallback at mpic++; Trying a default mpic++ fallback at mpicxx; Trying a default mpic++ fallback at mpiCC; mpic++ found: ",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/888#issuecomment-821840286:5872,depend,dependency,5872,https://su2code.github.io,https://github.com/su2code/SU2/issues/888#issuecomment-821840286,1,['depend'],['dependency']
Integrability," (Marker = farfield).; 3382 boundary elements in index 2 (Marker = inner_nearfield).; 19738 boundary elements in index 3 (Marker = symmetry).; 3382 boundary elements in index 4 (Marker = outer_nearfield).; Calling ParMETIS...; Traceback (most recent call last):; File ""/home/app/SU2/install/bin/parallel_computation.py"", line 110, in <module>; main(); File ""/home/app/SU2/install/bin/parallel_computation.py"", line 61, in main; options.compute ); File ""/home/app/SU2/install/bin/parallel_computation.py"", line 88, in parallel_computation; info = SU2.run.CFD(config) ; RuntimeError:; Command = mpirun -n 12 /home/app/SU2/install/bin/SU2_CFD config_CFD.cfg; SU2 process returned error '15'; [ubuntu:8553] *** An error occurred in MPI_Wait; [ubuntu:8553] *** on communicator MPI COMMUNICATOR 3 DUP FROM 0; [ubuntu:8553] *** MPI_ERR_TRUNCATE: message truncated; [ubuntu:8553] *** MPI_ERRORS_ARE_FATAL: your MPI job will now abort; --------------------------------------------------------------------------; mpirun has exited due to process rank 9 with PID 8554 on; node ubuntu exiting improperly. There are two reasons this could occur:. 1. this process did not call ""init"" before exiting, but others in; the job did. This can cause a job to hang indefinitely while it waits; for all processes to call ""init"". By rule, if one process calls ""init"",; then ALL processes must call ""init"" prior to termination. 2. this process called ""init"", but exited without calling ""finalize"".; By rule, all processes that call ""init"" MUST call ""finalize"" prior to; exiting or it will be considered an ""abnormal termination"". This may have caused other processes in the application to be; terminated by signals sent by mpirun (as reported here).; --------------------------------------------------------------------------; [ubuntu:08544] 1 more process has sent help message help-mpi-errors.txt / mpi_errors_are_fatal; [ubuntu:08544] Set MCA parameter ""orte_base_help_aggregate"" to 0 to see all help / error messages. ```",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/159#issuecomment-75485283:2411,message,message,2411,https://su2code.github.io,https://github.com/su2code/SU2/issues/159#issuecomment-75485283,2,['message'],"['message', 'messages']"
Integrability," (this=0x2381f70, ; geometry=0x21cb340, solver_container=0x23a1c10, config=0x2073590, ; iRKStep=0, RunTime_EqSystem=21); ---Type <return> to continue, or q <return> to quit---; at ../SU2_CFD/src/integration/CIntegration.cpp:205; #8 0x00000000004a2973 in CSingleGridIntegration::SingleGrid_Iteration (; this=0x2381f70, geometry=0x1fdc8b0, solver_container=0x1db9ad0, ; numerics_container=0x1fddb10, config=0x1a6cb50, RunTime_EqSystem=21, ; iZone=1, iInst=0); at ../SU2_CFD/src/integration/CSingleGridIntegration.cpp:73; #9 0x00000000004e33e4 in CHeatIteration::Iterate (this=0x218fdc0, ; output=0x20c8630, integration=0x1a59a90, geometry=0x1fdc8b0, ; solver=0x1db9ad0, numerics=0x1fddb10, config=0x1a6cb50, ; surface_movement=0x1a6cc30, grid_movement=0x1a6cc50, FFDBox=0x1a6cc70, ; val_iZone=1, val_iInst=0) at ../SU2_CFD/src/iteration/CHeatIteration.cpp:40; #10 0x00000000004db2ba in CFluidIteration::Solve (this=0x218fdc0, ; output=0x20c8630, integration=0x1a59a90, geometry=0x1fdc8b0, ; solver=0x1db9ad0, numerics=0x1fddb10, config=0x1a6cb50, ; surface_movement=0x1a6cc30, grid_movement=0x1a6cc50, FFDBox=0x1a6cc70, ; val_iZone=1, val_iInst=0); at ../SU2_CFD/src/iteration/CFluidIteration.cpp:302; #11 0x000000000047adec in CMultizoneDriver::Run_GaussSeidel (this=0x1fe0f80); at ../SU2_CFD/src/drivers/CMultizoneDriver.cpp:329; #12 0x000000000047a415 in CMultizoneDriver::StartSolver (this=0x1fe0f80); at ../SU2_CFD/src/drivers/CMultizoneDriver.cpp:193; #13 0x0000000000415413 in main (argc=2, argv=0x7fffffffbb18); at ../SU2_CFD/src/SU2_CFD.cpp:150; ```; </details>; ... and two other processes waiting at ; <details>; <summary>that place</summary>. ```; #0 0x00002aaac3d45500 in hmca_bcol_basesmuma_reduce_intra_fanin_progress (); from /opt/mellanox/hcoll/lib/hcoll/hmca_bcol_basesmuma.so; #1 0x00002aaabf587798 in _coll_ml_allreduce (); from /opt/mellanox/hcoll/lib/libhcoll.so.1; #2 0x00002aaabf33038d in mca_coll_hcoll_allreduce (); from /share/hpc_apps/openmpi/3.1.6/gnu/5.3.0/lib/openmpi/mca_",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1241:3564,integrat,integration,3564,https://su2code.github.io,https://github.com/su2code/SU2/issues/1241,1,['integrat'],['integration']
Integrability," - Updated GetEngine_Properties; - Fix to the last commit; - Small bug; - Merge branch 'develop' into feature_MPI; - merging; - SU2_SOL and SU2_CFD are working; - Preliminary, but complete, implementation of SU2_DEF; - More updates; - Working version; - Complete implementation (validate); - Working version of SU2_DEF; - Final push before moving to the develop branch; - New MPI (removing SU2_PRT); - Merged in Ben's ParMETIS integration and fixed some conflicts.; - Merge branch 'benkirk-parmetis_integration' into feature_MPI; - ParMETIS geometry routines have been copied over but are not activated yet.; - Small change to ParMETIS include.; - ParMETIS can now be activated for testing (PARMETIS=YES in config).; - Updated MG; - Updated EA subrotuine; - Small fix; - Fixing memory leak; - Fixing memory leaks; - Dev release v.3.2.6; - Increasing MAX_NUMBER_MARKER; - Working version with ParMETIS. Fixed bug in global index. Now clean up and testing...; - Cleaned version of ParMETIS routines with better console output during partitioning.; - Small bug in initial element division.; - Made arrays in ParMETIS call dynamic.; - Fixed compiler warnings and added MPI directives so that the pure serial code works with the ParMETIS routines.; - Bootstrap on zion.; - Added some typecasts. Still tracking down a memory problem...; - Critical bug fix for vtxdist array.; - Partial fix; - More MPI improvements.; - Fixing a bug in SU2_DEF; - Updated BC_ActDisk_Boundary (MPI); - Merge remote-tracking branch 'upstream/develop' into develop; - changing solidboundary setting to be heatflux OR euler etc instead of AND, also working on doxygen documentation; - Dynamic allocation for some marker-related arrays.; - visualize part taken out to match upstream/dev; - Collection of improvements; - Release 3.2.7; - Fixing LOW_MEMORY_OUTPUT; - Updated LOW_MEMORY_OUTPUT option; - Updated configure.ac; - After autoconf; - Updated MPI; - Updated BC_Engine_Exhaust and BC_Engine_Bleed; - Small change; - Fixing",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/174#issuecomment-101443812:2105,rout,routines,2105,https://su2code.github.io,https://github.com/su2code/SU2/pull/174#issuecomment-101443812,2,['rout'],['routines']
Integrability," --with-ecj-jar=/usr/share/java/eclipse-ecj.jar --disable-libjava-multilib --with-ppl --with-cloog --with-tune=generic --with-arch_32=i686 --build=x86_64-redhat-linux; Thread model: posix; gcc version 4.4.6 20120305 (Red Hat 4.4.6-4) (GCC) ; configure:3999: $? = 0; configure:3988: gcc -V >&5; gcc: '-V' option must have argument; configure:3999: $? = 1; configure:3988: gcc -qversion >&5; gcc: unrecognized option '-qversion'; gcc: no input files; configure:3999: $? = 1; configure:4003: checking whether we are using the GNU C compiler; configure:4022: gcc -c conftest.c >&5; configure:4022: $? = 0; configure:4031: result: yes; configure:4040: checking whether gcc accepts -g; configure:4060: gcc -c -g conftest.c >&5; configure:4060: $? = 0; configure:4101: result: yes; configure:4118: checking for gcc option to accept ISO C89; configure:4181: gcc -c -g -O2 conftest.c >&5; configure:4181: $? = 0; configure:4194: result: none needed; configure:4216: checking dependency style of gcc; configure:4327: result: gcc3; configure:4345: checking whether gcc and cc understand -c and -o together; configure:4376: gcc -c conftest.c -o conftest2.o >&5; configure:4380: $? = 0; configure:4386: gcc -c conftest.c -o conftest2.o >&5; configure:4390: $? = 0; configure:4401: cc -c conftest.c >&5; configure:4405: $? = 0; configure:4413: cc -c conftest.c -o conftest2.o >&5; configure:4417: $? = 0; configure:4423: cc -c conftest.c -o conftest2.o >&5; configure:4427: $? = 0; configure:4445: result: yes; configure:4513: checking for ranlib; configure:4529: found /usr/bin/ranlib; configure:4540: result: ranlib; configure:4574: checking how to run the C preprocessor; configure:4605: gcc -E conftest.c; configure:4605: $? = 0; configure:4619: gcc -E conftest.c; conftest.c:11:28: error: ac_nonexistent.h: No such file or directory; configure:4619: $? = 1; configure: failed program was:; | /* confdefs.h */; | #define PACKAGE_NAME ""SU2""; | #define PACKAGE_TARNAME ""SU2""; | #define PACKAGE_VERSION ""4.1.0""; | ",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/250#issuecomment-205167006:7293,depend,dependency,7293,https://su2code.github.io,https://github.com/su2code/SU2/issues/250#issuecomment-205167006,2,['depend'],['dependency']
Integrability," /opt/mellanox/hcoll/lib/hcoll/hmca_bcol_basesmuma.so; #1 0x00002aaabf587798 in _coll_ml_allreduce (); from /opt/mellanox/hcoll/lib/libhcoll.so.1; #2 0x00002aaabf33038d in mca_coll_hcoll_allreduce (); from /share/hpc_apps/openmpi/3.1.6/gnu/5.3.0/lib/openmpi/mca_coll_hcoll.so; #3 0x00002aaaaad2c20f in PMPI_Allreduce (); from /share/hpc_apps/openmpi/3.1.6/gnu/5.3.0/lib/libmpi.so.40; #4 0x000000000048a83f in CBaseMPIWrapper::Allreduce (sendbuf=0x7fffffff8a20, ; recvbuf=0x1646158 <double CSysVector<double>::dot<CSysVector<double> >(VecExpr::CVecExpr<CSysVector<double>, double> const&) const::dotRes>, count=1, ; datatype=0x2aaaaafb4de0 <ompi_mpi_double>, ; op=0x2aaaaafc9920 <ompi_mpi_op_sum>, ; comm=0x2aaaaafbbc60 <ompi_mpi_comm_world>); at ../SU2_CFD/src/drivers/../../include/drivers/../../../Common/include/parallelization/mpi_structure.hpp:205; #5 0x00000000004b0ef3 in CSysVector<double>::dot<CSysVector<double> > (; this=0x23a20d0, expr=...); at ../SU2_CFD/src/integration/../../include/integration/../solvers/../../../Common/include/linear_algebra/CSysVector.hpp:317; #6 0x00000000004b0dcf in CSysVector<double>::squaredNorm (this=0x23a20d0); at ../SU2_CFD/src/integration/../../include/integration/../solvers/../../../Common/include/linear_algebra/CSysVector.hpp:331; ---Type <return> to continue, or q <return> to quit---; #7 0x00000000004b0cf0 in CSysVector<double>::norm (this=0x23a20d0); at ../SU2_CFD/src/integration/../../include/integration/../solvers/../../../Common/include/linear_algebra/CSysVector.hpp:337; #8 0x0000000000da260b in CSysSolve<double>::BCGSTAB_LinSolver (; this=0x23a2240, b=..., x=..., mat_vec=..., precond=..., ; tol=1.0000000000000001e-15, m=20, residual=@0x7fffffff8fb8: 0, ; monitoring=false, config=0x209bc10); at ../Common/src/linear_algebra/CSysSolve.cpp:553; #9 0x0000000000da404a in CSysSolve<double>::Solve (this=0x23a2240, ; Jacobian=..., LinSysRes=..., LinSysSol=..., geometry=0x2105400, ; config=0x209bc10) at ../Common/src/linear_algebra/CSysSolv",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1241:5357,integrat,integration,5357,https://su2code.github.io,https://github.com/su2code/SU2/issues/1241,1,['integrat'],['integration']
Integrability," 0.15.; Angle of attack (AoA): 10 deg, and angle of sideslip (AoS): 0 deg.; Reynolds number: 6e+06. Reference length 1.; No restart solution, use the values at infinity (freestream).; Non-Dimensional simulation (P=1.0, Rho=1.0, T=1.0 at the farfield).; The reference area is 1 m^2.; The semi-span will be computed using the max y(3D) value.; The reference length is 1 m.; Reference origin for moment evaluation is (0.25, 0, 0).; Surface(s) where the force coefficients are evaluated: airfoil. Surface(s) plotted in the output file: airfoil.; Input mesh file name: n0012_225-65.su2. ---------------------- Space Numerical Integration ----------------------; Roe (with entropy fix = 0.001) solver for the flow inviscid terms.; Standard Roe without low-dissipation function.; Second order integration in space, with slope limiter.; Venkatakrishnan slope-limiting method, with constant: 0.03. ; The reference element size is: 1. ; Scalar upwind solver for the turbulence model.; Second order integration in space with slope limiter.; No slope-limiting method. ; Average of gradients with correction (viscous flow terms).; Average of gradients with correction (viscous turbulence terms).; Gradient Computation using weighted Least-Squares method. ---------------------- Time Numerical Integration -----------------------; Local time stepping (steady state simulation).; Euler implicit method for the flow equations.; FGMRES is used for solving the linear system.; Using a LU-SGS preconditioning.; Convergence criteria of the linear solver: 1e-10.; Max number of linear iterations: 5.; V Multigrid Cycle, with 3 multigrid levels.; Damping factor for the residual restriction: 0.75.; Damping factor for the correction prolongation: 0.75.; No CFL adaptation.; +-------------------------------------------+; | MG Level| Presmooth|PostSmooth|CorrectSmo|; +-------------------------------------------+; | 0| 1| 0| 0|; | 1| 1| 0| 0|; | 2| 1| 0| 0|; | 3| 1| 0| 0|; +-------------------------------------------+; Co",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/591:2611,integrat,integration,2611,https://su2code.github.io,https://github.com/su2code/SU2/issues/591,1,['integrat'],['integration']
Integrability," 1. ; Scalar upwind solver for the turbulence model.; Second order integration in space with slope limiter.; No slope-limiting method. ; Average of gradients with correction (viscous flow terms).; Average of gradients with correction (viscous turbulence terms).; Gradient Computation using weighted Least-Squares method. ---------------------- Time Numerical Integration -----------------------; Local time stepping (steady state simulation).; Euler implicit method for the flow equations.; FGMRES is used for solving the linear system.; Using a LU-SGS preconditioning.; Convergence criteria of the linear solver: 1e-10.; Max number of linear iterations: 5.; V Multigrid Cycle, with 3 multigrid levels.; Damping factor for the residual restriction: 0.75.; Damping factor for the correction prolongation: 0.75.; No CFL adaptation.; +-------------------------------------------+; | MG Level| Presmooth|PostSmooth|CorrectSmo|; +-------------------------------------------+; | 0| 1| 0| 0|; | 1| 1| 0| 0|; | 2| 1| 0| 0|; | 3| 1| 0| 0|; +-------------------------------------------+; Courant-Friedrichs-Lewy number: 10; Euler implicit time integration for the turbulence model. ------------------------- Convergence Criteria --------------------------; Maximum number of iterations: 99999.; Reduce the density residual 10 orders of magnitude.; The minimum bound for the density residual is 10^(-12).; Start convergence criteria at iteration 10. -------------------------- Output Information ---------------------------; Writing a solution file every 10000 iterations.; Writing the convergence history every 1 iterations.; The output file format is Tecplot ASCII (.dat).; Convergence history file name: history.; Forces breakdown file name: forces_breakdown.dat.; Surface flow coefficients file name: surface_flow.; Flow variables file name: flow.; Restart flow file name: restart_flow.dat. ------------------- Config File Boundary Information --------------------; Far-field boundary marker(s): farfield.; ",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/591:3678,integrat,integration,3678,https://su2code.github.io,https://github.com/su2code/SU2/issues/591,1,['integrat'],['integration']
Integrability," </ul>; </details>; <br />. [![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=mheap/github-action-required-labels&package-manager=github_actions&previous-version=3&new-version=5)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores). Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`. [//]: # (dependabot-automerge-start); [//]: # (dependabot-automerge-end). ---. <details>; <summary>Dependabot commands and options</summary>; <br />. You can trigger Dependabot actions by commenting on this PR:; - `@dependabot rebase` will rebase this PR; - `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it; - `@dependabot merge` will merge this PR after your CI passes on it; - `@dependabot squash and merge` will squash and merge this PR after your CI passes on it; - `@dependabot cancel merge` will cancel a previously requested merge and block automerging; - `@dependabot reopen` will reopen this PR if it is closed; - `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually; - `@dependabot show <dependency name> ignore conditions` will show all of the ignore conditions of the specified dependency; - `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself); - `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself); - `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself). </details>",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2125:6879,depend,dependabot,6879,https://su2code.github.io,https://github.com/su2code/SU2/pull/2125,22,"['Depend', 'depend']","['Dependabot', 'dependabot', 'dependency']"
Integrability," </ul>; <h3>3.0.1</h3>; <ul>; <li>Added support for caching from GHES 3.5.</li>; <li>Fixed download issue for files &gt; 2GB during restore.</li>; </ul>; <h3>3.0.2</h3>; <ul>; <li>Added support for dynamic cache size cap on GHES.</li>; </ul>; <h3>3.0.3</h3>; <ul>; <li>Fixed avoiding empty cache save when no files are available for caching. (<a href=""https://github-redirect.dependabot.com/actions/cache/issues/624"">issue</a>)</li>; </ul>; <h3>3.0.4</h3>; <ul>; <li>Fixed tar creation error while trying to create tar with path as <code>~/</code> home folder on <code>ubuntu-latest</code>. (<a href=""https://github-redirect.dependabot.com/actions/cache/issues/689"">issue</a>)</li>; </ul>; <h3>3.0.5</h3>; <ul>; <li>Removed error handling by consuming actions/cache 3.0 toolkit, Now cache server error handling will be done by toolkit. (<a href=""https://github-redirect.dependabot.com/actions/cache/pull/834"">PR</a>)</li>; </ul>; <h3>3.0.6</h3>; <ul>; <li>Fixed <a href=""https://github-redirect.dependabot.com/actions/cache/issues/809"">#809</a> - zstd -d: no such file or directory error</li>; <li>Fixed <a href=""https://github-redirect.dependabot.com/actions/cache/issues/833"">#833</a> - cache doesn't work with github workspace directory</li>; </ul>; <h3>3.0.7</h3>; <ul>; <li>Fixed <a href=""https://github-redirect.dependabot.com/actions/cache/issues/810"">#810</a> - download stuck issue. A new timeout is introduced in the download process to abort the download if it gets stuck and doesn't finish within an hour.</li>; </ul>; <h3>3.0.8</h3>; <ul>; <li>Fix zstd not working for windows on gnu tar in issues <a href=""https://github-redirect.dependabot.com/actions/cache/issues/888"">#888</a> and <a href=""https://github-redirect.dependabot.com/actions/cache/issues/891"">#891</a>.</li>; <li>Allowing users to provide a custom timeout as input for aborting download of a cache segment using an environment variable <code>SEGMENT_DOWNLOAD_TIMEOUT_MIN</code>. Default is 60 minutes.</li>; </ul>; </block",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1755:5889,depend,dependabot,5889,https://su2code.github.io,https://github.com/su2code/SU2/pull/1755,1,['depend'],['dependabot']
Integrability," <h2>v2.2.0</h2>; <ul>; <li>Support for artifact retention</li>; </ul>; <h2>v2.1.4</h2>; <ul>; <li>Add Third Party License Information</li>; </ul>; <h2>v2.1.3</h2>; <ul>; <li>Use updated version of the <code>@action/artifact</code> NPM package</li>; </ul>; <h2>v2.1.2</h2>; <ul>; <li>Increase upload chunk size from 4MB to 8MB</li>; <li>Detect case insensitive file uploads</li>; </ul>; <h2>v2.1.1</h2>; <ul>; <li>Fix for certain symlinks not correctly being identified as directories before starting uploads</li>; </ul>; <h2>v2.1.0</h2>; <ul>; <li>Support for uploading artifacts with multiple paths</li>; <li>Support for using exclude paths</li>; <li>Updates to dependencies</li>; </ul>; <!-- raw HTML omitted -->; </blockquote>; <p>... (truncated)</p>; </details>; <details>; <summary>Commits</summary>; <ul>; <li><a href=""https://github.com/actions/upload-artifact/commit/3cea5372237819ed00197afe530f5a7ea3e805c8""><code>3cea537</code></a> Merge pull request <a href=""https://github-redirect.dependabot.com/actions/upload-artifact/issues/327"">#327</a> from actions/robherley/artifact-1.1.0</li>; <li><a href=""https://github.com/actions/upload-artifact/commit/849aa7758a428ee22be38de371b49c8bd57c4b9d""><code>849aa77</code></a> nvm use 12 &amp; npm run release</li>; <li><a href=""https://github.com/actions/upload-artifact/commit/4d3986961d0423ba9a593efb490a2960eb65f43b""><code>4d39869</code></a> recompile with correct ncc version</li>; <li><a href=""https://github.com/actions/upload-artifact/commit/2e0d362ec5cf81e334dda822c49c96dcd4b7df2c""><code>2e0d362</code></a> bump <code>@​actions/artifact</code> to 1.1.0</li>; <li><a href=""https://github.com/actions/upload-artifact/commit/09a5d6a283da3e7c9f3253a5d4cdab2347712a66""><code>09a5d6a</code></a> Merge pull request <a href=""https://github-redirect.dependabot.com/actions/upload-artifact/issues/320"">#320</a> from actions/dependabot/npm_and_yarn/ansi-regex-4.1.1</li>; <li><a href=""https://github.com/actions/upload-artifact/commit/189315d9106f43a",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1756:2649,depend,dependabot,2649,https://su2code.github.io,https://github.com/su2code/SU2/pull/1756,1,['depend'],['dependabot']
Integrability," <ul>; <li><a href=""https://github.com/actions/checkout/commit/3df4ab11eba7bda6032a0b82a6bb43b11571feac""><code>3df4ab1</code></a> Release 4.0.0 (<a href=""https://redirect.github.com/actions/checkout/issues/1447"">#1447</a>)</li>; <li><a href=""https://github.com/actions/checkout/commit/8b5e8b768746b50394015010d25e690bfab9dfbc""><code>8b5e8b7</code></a> Support fetching without the --progress option (<a href=""https://redirect.github.com/actions/checkout/issues/1067"">#1067</a>)</li>; <li><a href=""https://github.com/actions/checkout/commit/97a652b80035363df47baee5031ec8670b8878ac""><code>97a652b</code></a> Update default runtime to node20 (<a href=""https://redirect.github.com/actions/checkout/issues/1436"">#1436</a>)</li>; <li>See full diff in <a href=""https://github.com/actions/checkout/compare/v3...v4"">compare view</a></li>; </ul>; </details>; <br />. [![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=actions/checkout&package-manager=github_actions&previous-version=3&new-version=4)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores). Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`. [//]: # (dependabot-automerge-start); [//]: # (dependabot-automerge-end). ---. <details>; <summary>Dependabot commands and options</summary>; <br />. You can trigger Dependabot actions by commenting on this PR:; - `@dependabot rebase` will rebase this PR; - `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it; - `@dependabot merge` will merge this PR after your CI passes on it; - `@dependabot squash and merge` will squash and merge this PR after your CI passes on it; - `@dependabot cancel merge` will cancel a previously requested merge and block automerging; - `@dependabot reopen` will reopen this",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2126:10672,depend,dependency-name,10672,https://su2code.github.io,https://github.com/su2code/SU2/pull/2126,2,['depend'],['dependency-name']
Integrability," Architecture : x86_64; URL : https://www.openblas.net/; Licenses : BSD; Groups : None; Provides : blas=3.8.0; Depends On : gcc-libs; Optional Deps : None; Required By : lapack; Optional For : None; Conflicts With : blas; Replaces : None; Installed Size : 17.73 MiB; Packager : Felix Yan <felixonmars@archlinux.org>; Build Date : Wed 12 Feb 2020 01:42:30 PM IST; Install Date : Mon 18 May 2020 06:28:46 PM IST; Install Reason : Explicitly installed; Install Script : No; Validated By : Signature. Name : lapack; Version : 3.9.0-2; Description : Linear Algebra PACKage; Architecture : x86_64; URL : https://www.netlib.org/lapack; Licenses : custom; Groups : None; Provides : None; Depends On : blas; Optional Deps : None; Required By : arpack qrupdate suitesparse; Optional For : None; Conflicts With : None; Replaces : None; Installed Size : 7.03 MiB; Packager : Antonio Rojas <arojas@archlinux.org>; Build Date : Sun 24 Nov 2019 04:13:58 PM IST; Install Date : Sat 22 Feb 2020 01:05:19 PM IST; Install Reason : Installed as a dependency for another package; Install Script : No; Validated By : Signature. Name : openblas; Version : 0.3.8-1; Description : An optimized BLAS library based on GotoBLAS2 1.13 BSD; Architecture : x86_64; URL : https://www.openblas.net/; Licenses : BSD; Groups : None; Provides : blas=3.8.0; Depends On : gcc-libs; Optional Deps : None; Required By : lapack; Optional For : None; Conflicts With : blas; Replaces : None; Installed Size : 17.73 MiB; Packager : Felix Yan <felixonmars@archlinux.org>; Build Date : Wed 12 Feb 2020 01:42:30 PM IST; Install Date : Mon 18 May 2020 06:28:46 PM IST; Install Reason : Explicitly installed; Install Script : No; Validated By : Signature. ```. I tried it without enabling openblas, it did move forward but broke further later in the build with a ridiculously long error message. For the sake of readability I am attaching a [logfile](https://github.com/su2code/SU2/files/4652822/su2_build_NoOpenBlas.log) here. For obvious reasons I",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/991#issuecomment-631053271:1504,depend,dependency,1504,https://su2code.github.io,https://github.com/su2code/SU2/issues/991#issuecomment-631053271,1,['depend'],['dependency']
Integrability," Note: if you make any changes to this PR yourself, they will take precedence over the rebase. ---. [//]: # (dependabot-end). Bumps [actions/upload-release-asset](https://github.com/actions/upload-release-asset) from 1.0.1 to 1.0.2.; <details>; <summary>Release notes</summary>; <p><em>Sourced from <a href=""https://github.com/actions/upload-release-asset/releases"">actions/upload-release-asset's releases</a>.</em></p>; <blockquote>; <h2>Automate sliding major version number</h2>; <p>This is a minor update to make the current release have the latest code from master, and additionally allows for a new automation workflow to execute to automate the sliding of the major (v1, v2, v3, etc) version numbers for ease of referencing</p>; </blockquote>; </details>; <details>; <summary>Commits</summary>; <ul>; <li><a href=""https://github.com/actions/upload-release-asset/commit/e8f9f06c4b078e705bd2ea027f0926603fc9b4d5""><code>e8f9f06</code></a> Merge pull request <a href=""https://github-redirect.dependabot.com/actions/upload-release-asset/issues/27"">#27</a> from actions/IAmHughes/add-automated-versioning</li>; <li><a href=""https://github.com/actions/upload-release-asset/commit/14187540b829095dbe6f33eb1b166503318e9ceb""><code>1418754</code></a> Add versioning action to automatically slide major versions with releases</li>; <li><a href=""https://github.com/actions/upload-release-asset/commit/7d8fb6c931cb341bda0f898a0d2191cf54abc69a""><code>7d8fb6c</code></a> Merge pull request <a href=""https://github-redirect.dependabot.com/actions/upload-release-asset/issues/6"">#6</a> from actions/IAmHughes/fix-link-to-license</li>; <li><a href=""https://github.com/actions/upload-release-asset/commit/c53f077c5d8c19236718abc4697a59634ef534cf""><code>c53f077</code></a> Fix link to LICENSE</li>; <li><a href=""https://github.com/actions/upload-release-asset/commit/72e8a5ef036620fb7afff8bbb8f9e78910c7ccbc""><code>72e8a5e</code></a> Merge pull request <a href=""https://github-redirect.dependabot.com/actions/upload",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1754:1144,depend,dependabot,1144,https://su2code.github.io,https://github.com/su2code/SU2/pull/1754,1,['depend'],['dependabot']
Integrability," PR:. 1. Refactor SU2_GEO such that all its functionality can be performed in python (in progress); 2. Add a generalized thickness constraint (in progress); 3. Be able to do multiple types of geometry evaluation (for example wing+fuselage); 4. Expose some of the mesh deformation functions to python to allow for robust design variable definition; 5. Perform all of the shape optimization using the in-memory python scripts; 6. Intelligent handling of solution divergences that doesn't break the optimization; 7. Better way to define multipoint optimizations; 8. Better multi-objective optimization definition (#913 might be helpful in this); 9. Simplify the multitude of shape optimization options (#733). As you can probably tell, a lot of my examples and motivations revolve around aerospace applications. So while I try and make a general framework that is robust, I might not be thinking in a broad enough fashion. I would love to get input from the community for any functionality that they might want to see in this framework. The more robust this is, the more widely useful it will be. I am also a newbie to the python wrapper world of SU2. If there are any glaring road blocks or things that have been tried before but failed, please let me know. ; ; ## Related Work; #733 . ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [ ] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [ ] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/922:3446,wrap,wrapper,3446,https://su2code.github.io,https://github.com/su2code/SU2/pull/922,2,['wrap'],['wrapper']
Integrability," Storing a mapping from global to local point index. ------------------------- Solution Postprocessing -----------------------. Error in ""void CBaselineSolver::SetOutputVariables(CGeometry*, CConfig*)"": ; -------------------------------------------------------------------------; Unable to open SU2 restart file solution_flow.dat; ------------------------------ Error Exit -------------------------------. --------------------------------------------------------------------------; MPI_ABORT was invoked on rank 17 in communicator MPI_COMM_WORLD; with errorcode 1. NOTE: invoking MPI_ABORT causes Open MPI to kill all MPI processes.; You may or may not see output from other processes, depending on; exactly when Open MPI kills them.; --------------------------------------------------------------------------; [hongwei-Workstation:07803] PMIX ERROR: UNREACHABLE in file server/pmix_server.c at line 2079; [hongwei-Workstation:07803] PMIX ERROR: UNREACHABLE in file server/pmix_server.c at line 2079; [hongwei-Workstation:07803] PMIX ERROR: UNREACHABLE in file server/pmix_server.c at line 2079; [hongwei-Workstation:07803] PMIX ERROR: UNREACHABLE in file server/pmix_server.c at line 2079; [hongwei-Workstation:07803] PMIX ERROR: UNREACHABLE in file server/pmix_server.c at line 2079; [hongwei-Workstation:07803] PMIX ERROR: UNREACHABLE in file server/pmix_server.c at line 2079; [hongwei-Workstation:07803] 23 more processes have sent help message help-mpi-api.txt / mpi-abort; [hongwei-Workstation:07803] Set MCA parameter ""orte_base_help_aggregate"" to 0 to see all help / error messages; ```; ```; hongwei@hongwei-Workstation:~/SU2_RUN/QuickStart$ singularity exec su2.sif SU2_SOL inv_NACA0012.cfg ; /.singularity.d/actions/exec: 9: exec: SU2_SOL: not found; ```; ```; hongwei@hongwei-Workstation:~/SU2_RUN/QuickStart$ singularity shell su2.sif ; Singularity su2.sif:~/SU2_RUN/QuickStart> SU2_SOL inv_NACA0012.cfg ; bash: SU2_SOL: command not found; Singularity su2.sif:~/SU2_RUN/QuickStart>; ```",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/739#issuecomment-514630913:5451,message,message,5451,https://su2code.github.io,https://github.com/su2code/SU2/issues/739#issuecomment-514630913,2,['message'],"['message', 'messages']"
Integrability," a table can be helpful for readability, but we can make these changes as we go. Note: the convergence output is not affected yet!. The class is added in a folder called ""Common/toolboxes"". My intention is that in the future we will add there more small helper tools/classes, which are essentially independent of the rest of the code. . Below you find an example output of the current preprocessing:. ```. ---------------------- Space Numerical Integration ----------------------; Jameson-Schmidt-Turkel scheme (2nd order in space) for the flow inviscid terms.; JST viscous coefficients (2nd & 4th): 0.5, 0.02.; The method includes a grid stretching correction (p = 0.3).; Scalar upwind solver for the turbulence model.; First order integration in space.; Average of gradients with correction (viscous flow terms).; Average of gradients with correction (viscous turbulence terms).; Gradient Computation using weighted Least-Squares method. ---------------------- Time Numerical Integration -----------------------; Local time stepping (steady state simulation).; Euler implicit method for the flow equations.; FGMRES is used for solving the linear system.; Using a LU-SGS preconditioning.; Convergence criteria of the linear solver: 1e-06.; Max number of linear iterations: 7.; CFL adaptation. Factor down: 1.5, factor up: 0.5,; lower limit: 0.5, upper limit: 3.5.; Courant-Friedrichs-Lewy number: 1; Euler implicit time integration for the turbulence model. ------------------------- Convergence Criteria --------------------------; Maximum number of iterations: 999999.; Reduce the density residual 6 orders of magnitude.; The minimum bound for the density residual is 10^(-5.9).; Start convergence criteria at iteration 10. -------------------------- Output Information ---------------------------; Writing a solution file every 999999999 iterations.; Writing the convergence history every 1 iterations.; The output file format is Tecplot binary (.plt).; Convergence history file name: history.; F",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/633:1319,Integrat,Integration,1319,https://su2code.github.io,https://github.com/su2code/SU2/pull/633,1,['Integrat'],['Integration']
Integrability," added. I haven't tested with single core. As far as I see in CPhysicalGeometry::MatchNearField,; > > > the code looks for a nearest point to a point on the nearfield boundary. If it exceeds 1e-1 (which is usually the case if you have; > > > real scale mesh), it prints this warning. I'm not sure what this is for. I'm ignoring it since I don't see an issue with this distance; > > > exceeding 1e-1.; > > ; > > ; > > Concerning this: I understand this nearfield marker as an internal ""boundary"" which does not alter the usual solution process at all. It is just added to compute some interesting quantity one. So the Nearfield marker needs to be in the mesh right, at the end like all other boundary markers? As such it is defined using mesh points and therefore there should be no discrepancies between nearfield marker nodes and mesh nodes? Am i correct with that, if not please enlighten me what is actually happening :); > ; > Yes, nearfield marker is just used to extract required physical quantities and should not alter the usual solution process at all. There should be no discrepancies between nearfield marker nodes and mesh nodes. I haven't checked this part of the code for a while but if I remember correctly, the ""Bad match..."" message is shown if there is discrepancy between a nearfield marker node and the nearest mesh node that is NOT on nearfield boundary. I did more investigations. This ""Bad match..."" message is output in `CPhysicalGeometry::MatchNearField` and this function has `SetDonorPoint`. However, currently there is no `GetDonorPoint` except for periodic boundary condition. I don't believe this is used any more. I went back in history and found out that `GetDonorPoint` exists in `CGridAdaptation::SetHomothetic_Adaptation2D` in ver.6.2.0. I suspect this is for grid adaptation to make mesh finer to capture shock waves. In ver.7, grid adaptation related parameters in configuration template file are not used, so it appears that grid adaptation function is dead now.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1329#issuecomment-898991111:1427,message,message,1427,https://su2code.github.io,https://github.com/su2code/SU2/pull/1329#issuecomment-898991111,2,['message'],['message']
Integrability," and boostconv algorithm as proposed by [2]. _SFD_: A method, enabling the computation of steady solutions of the Navier-Stokes equations in globally unstable configurations. Steady-state is achieved by damping the unstable temporal frequencies with addition of a dissipative relaxation term proportional to the high-frequency content of the velocity fluctuations. [1]. _boostconv_: An iterative algorithm, inspired by Krylov-subspace methods, which is able to compute unstable steady states and/or accelerate the convergence to stable configurations. This algorithm is based on the minimization of the residual norm at each iteration step with a projection basis updated at each iteration rather than at periodic restarts like in the classical GMRES method. The algorithm is able to stabilize any dynamical system without increasing the computational time of the original numerical procedure used to solve the governing equations. _Moreover, it can be easily inserted into a pre-existing relaxation (integration) procedure with a call to a single black-box subroutine_. [2]. **Additional context**; I would be happy to collaborate on implementation of said algorithms in SU2 but I do not have much experience with C++ (I mostly use Fortran) and I am not too familiar with SU2 source code so it would be great to work with someone more experienced in those areas. Figure from [2] outlining performance of SFD and boostconv on a cylinder:; <img width=""882"" alt=""Screenshot 2023-05-02 at 22 23 19"" src=""https://user-images.githubusercontent.com/67333831/235789512-63bc5e29-6d09-478f-a9e5-9931b5673bd0.png"">. **Bibliography**; [1] Åkervik, E., Brandt, L., Henningson, D.S., Hœpffner, J., Marxen, O. and Schlatter, P., 2006. Steady solutions of the Navier-Stokes equations by selective frequency damping. Physics of fluids, 18(6), p.068102.; [2] Citro, V., Luchini, P., Giannetti, F. and Auteri, F., 2017. Efficient stabilization and acceleration of numerical simulation of fluid flows by residual recombi",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/2022:2164,integrat,integration,2164,https://su2code.github.io,https://github.com/su2code/SU2/issues/2022,1,['integrat'],['integration']
Integrability," and that other proposals are put forward so the discussion can be finalized at the developer’s meeting. Best,. Juan. On Sep 10, 2017, at 1:09 PM, Edwin van der Weide <notifications@github.com<mailto:notifications@github.com>> wrote:. Dear @rsanfer<https://github.com/rsanfer>,. I agree with you that the outer loop should be the loop over the number of physical disciplines involved in the problem and not the zones. Whether the individual disciplines contain one or multiple zones is irrelevant at this level, in my opinion. The loop over the multiple zones of a single discipline should take place at a much lower level, namely where the spatial residual is computed. At least, this should be the case for the fluid dynamics part. I don't know whether this is also the case for other disciplines, like structures. What about the following high level structure?. * Loop over the number of iterations, or time steps for unsteady problems.; * Loop over the number of pseudo-time steps for implicit time integration schemes; (DT_STEPPING_1ST and DT_STEPPING_2ND). For other cases this loop is 1.; * Loop over the number of disciplines involved; Call iterate for each of the disciplines.; In iterate:; * Loop over the (Runge-Kutta) stages; * Loop over the zones of a single discipline; Compute spatial residual.; Update the state vector.; * End loop over the zones of a single discipline.; Exchange halo data. This includes the halo data between zones of a single discipline.; * End loop over the (Runge-Kutta) stages; * End loop over the disciplines; * End loop over the pseudo time steps.; * End loop over the number of iterations, or time steps for unsteady problems. The weakness of this approach is that it still does not work when one would like to employ multi-stage time integration schemes for an unsteady, multi-disciplinary problem (does not work for the current implementation either), but maybe this is something we simply have to accept. The alternative is that all the details of the diff",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/437#issuecomment-328403160:2251,integrat,integration,2251,https://su2code.github.io,https://github.com/su2code/SU2/issues/437#issuecomment-328403160,2,['integrat'],['integration']
Integrability," commit (use ""git add"" and/or ""git commit -a""). Jairos-Mac-mini:SU2 jaspe$ git commit -am ""This is an update of .travis.yml; for feature_force_read_target_on_AD."". [feature_force_read_target_on_AD 3f2115373] This is an update of; .travis.yml for feature_force_read_target_on_AD. 1 file changed, 2 insertions(+), 2 deletions(-); After that, I issued git push origin feature_force_read_target_on_AD, and; got the error message:. To https://github.com/su2code/SU2.git. ! [rejected] feature_force_read_target_on_AD ->; feature_force_read_target_on_AD (fetch first). error: failed to push some refs to 'https://github.com/su2code/SU2.git'. hint: Updates were rejected because the remote contains work that you do. hint: not have locally. This is usually caused by another repository pushing. hint: to the same ref. You may want to first integrate the remote changes. hint: (e.g., 'git pull ...') before pushing again. hint: See the 'Note about fast-forwards' in 'git push --help' for details.; I issued then git pull origin develop, to merge changes in remote to my; local branch, successfully , but a new git push origin; feature_force_read_target_on_AD, produced the same error message.; Would be the first commit command enough?. With kind regards,. Jairo. On Tue, Oct 30, 2018 at 7:25 PM Thomas D. Economon <notifications@github.com>; wrote:. > Hi @jaspe55 <https://github.com/jaspe55> - thanks for the first; > contribution!; >; > Can you please switch the email and branch name in .travis.yml back to; > su2code-dev@lists.stanford.edu and develop, respectively? That should get; > the tests running so we can give this a proper review (should be quick; > given the small change).; >; > —; > You are receiving this because you were mentioned.; > Reply to this email directly, view it on GitHub; > <https://github.com/su2code/SU2/pull/600#issuecomment-434492415>, or mute; > the thread; > <https://github.com/notifications/unsubscribe-auth/Ac180sVTNXVIdfr1Oo3wVM2qGfepSGfIks5uqNHngaJpZM4X34F2>; > .; >",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/600#issuecomment-434929137:1572,message,message,1572,https://su2code.github.io,https://github.com/su2code/SU2/pull/600#issuecomment-434929137,1,['message'],['message']
Integrability," commits or submit a pull request, the unit tests are run and checked. What is my vision for unit testing in SU2?. I am not proposing that we start trying to get 100% code coverage with pre-existing code. That would not provide a good return on investment. Instead, I see people adding unit tests as they write new code and as they find bugs. For each new behavior added to SU2, tests are first added to document the related existing behavior. These tests serve to check that the existing behavior isn't damaged by the new code. Then new tests are added to prove that the new behavior is working correctly. For bug fixes, the process is simpler. A test is added to confirm that something is not behaving as expected. Then the code is fixed to make the test pass. What frameworks are available?. For a unit testing framework, here are the most popular options, with the following pros and cons:. Roll-your-own. * Requires no external dependencies; * The most flexible option; * Involves the most work to setup; * Will lack some of the more advances features of mature unit-testing frameworks. Boost Test. * Can be header only, statically linked, or dynamically linked; * If statically or dynamically linked, then Boost is not very lightweight; * Easy to add if you're already using Boost. Google Test. * Most common unit-testing framework; * Can be easily combined with Google's powerful GMock mocking library; * Compiling and linking can be somewhat painful. Catch2. * Used by FEniCS; * Makes unit tests easily readable with lots of syntactic sugar.; * Has a very simple syntax; * Is header-only; * Requires C++11 compilation; * Not as feature rich as Google Test or Boost Test. Questions. * How do developers feel about adding unit tests to SU2?; * If a unit-testing framework were added to SU2, would you actually use it?; * Do developers have a preference (or experience with) any of the unit testing frameworks?; * Should unit tests be expected when submitting PRs?. —; You are receiving this bec",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/698#issuecomment-499250240:4404,depend,dependencies,4404,https://su2code.github.io,https://github.com/su2code/SU2/issues/698#issuecomment-499250240,2,['depend'],['dependencies']
Integrability," coupled via the python interface, while SU2 shall provide the aerodynamic side, as a higher fidelity alternative to panel methods such as VLM & DLM. . Update, 13.04.2023: The combination of grid velocities from the moving + deforming grid turned out to be more complicated as expected (at least for me) and the moving grid is not fully implemented for unsteady simulations (according to Pedro, some source terms are missing). The new approach uses a farfield onflow condition at alpha=0.0 and translates and rotates the whole aircraft in the elastic mesh for the rigid body + structural dynamic reaction. This is more laborious on my side (transformation of the surface, the deformation vector and the forces about the Euler angles) but simplifies the work on the SU2 side:. - extend the gust to 3D meshes (current implementation only for 2D meshes); - ~~update the grid movement during the time domain simulation via the python interface; Involved parameters: ; GRID_MOVEMENT= ROTATING_FRAME; TRANSLATION_RATE= u v w ; ROTATION_RATE= p q r~~; - update the surface mesh deformation during the time domain simulation via the python interface ; Involved parameters: ; DEFORM_MESH= YES; MARKER_DEFORM_MESH= ( list of markers ). Summing up, I will need to combine the grid velocities due to aircraft movement, elasticity and gust. Currently, this is not possible in SU2. ; I split the work into the following steps. Here is what is working / not working:; - [x] gust with 3D meshes --> plausibility check with rectangular, 3 meter wing at 2° + long gust equivalent to 2° = approx doubling of the lift coefficient; - [x] ~~gust + moving grid --> plausibility check by comparison with farfield onflow condition from above~~; - [x] ~~new python interface for grid movement update --> plausibility check with a) sudden jump in heave velocity w, b) sinusoidal velocity w at different frequencies to observe influence of unsteady aerodynamics (phase shift and reduction of resulting lift)~~; - [x] mesh deform",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1954:1273,interface,interface,1273,https://su2code.github.io,https://github.com/su2code/SU2/pull/1954,2,['interface'],['interface']
Integrability," feature of a future release is going in the direction of what you need. Compiled libraries would be easy to handle via pkg config. . Ah, I did not understand that this is something you were already working on and were asking me to test, I thought you were suggesting to use develop to install the software on our production cluster. I should not have assumed that, it's just something that is unfortunately quite frequent in the field of scientific software (just use the head of the git repo). I did not have any clone of the repo, so did not see that script (only the one in `legacy`) initially. . ```; $ ./preconfigure.py --help; usage: preconfigure.py [-h] [--with-own-meson] [--no-codi] [--no-medi]; [--no-opdi] [--no-mpp] [--no-coolprop] [--no-mel]; [--no-mlpcpp]. optional arguments:; -h, --help show this help message and exit; --with-own-meson download own copies of Meson and Ninja; --no-codi do not download own copy of CoDiPack; --no-medi do not download own copy of MeDiPack; --no-opdi do not download own copy of OpDiLib; --no-mpp do not download own copy of Mutationpp; --no-coolprop do not download own copy of CoolProp; --no-mel do not download own copy of MEL; --no-mlpcpp do not download copy of MLpCpp; ``` . It seems like to go in the right direction. Is there a plan to provide options to specify how to find installed copies of those ? Something like `--medi=/path/to/installed/medi` and such ? pkgconfig or other auto-detection mechanisms usually work, but sometimes it doesn't, and explicit workarounds sometimes help. . I also don't see other packages that end up in externals, such as `metis`, `parmetis`, `autotools`, `catch2`. I am not sure how those are used (or if they are used), but I noticed folders for them in the `externals` folder. Is there a plan to allow using external versions of those ?. > But your choices of words sound a bit unfriendly so I honestly don't care, we can also close the issue until the next release. My apologies, I misunderstood your requ",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/2086#issuecomment-1645726352:866,message,message,866,https://su2code.github.io,https://github.com/su2code/SU2/issues/2086#issuecomment-1645726352,1,['message'],['message']
Integrability," feature.; - I imagine in some other places of the code similar routines were needed, for example small matrix inversion when computing gradients by weighted least squares (indeed what I need now is a QR decomposition). And, as an added bonus, I think some other areas of the code could be simplified / optimized by adopting a dense matrix format, for example:; - This snipped from the viscous numerics refactoring`for (iDim = 0; iDim < nDim; iDim++) {; TauElem[iDim] = 0.0;; for (jDim = 0; jDim < nDim; jDim++); TauElem[iDim] += tau[iDim][jDim]*UnitNormal[jDim];; }` would simply become `TauElem=tau*UnitNormal`; - Cumbersome allocations like `tau_jacobian_i = new su2double* [nDim];; for (iDim = 0; iDim < nDim; iDim++) {; tau_jacobian_i[iDim] = new su2double [nVar];; }` become `Matrix tau_jacobian_i(nDim,nVar);` and the cleanup is dealt with by the destructor of the object automatically. Now to answer some questions.; @juanjosealonso @erangit LAPACK and BLAS are indeed the standard, so much so that most (all?) newer libraries will call their routines behind the scenes.; However they considerably simplify the user interface by encapsulating the aforementioned construction/destruction and by exposing natural ways of manipulating the matrices, e.g. access entire rows, columns, blocks, etc.; Another issue with using BLAS routines is that we then need to provide a portable version that can be differentiated with CoDi or to implement the exact differentiation (similar to what is done in the ""solve_b"" routines). @vdweide that is not an issue with Eigen because everything is templated and therefore compatible with any type or class that overloads the appropriate arithmetic operators.; I have used it for over 2 years and I can attest to its compatibility with AD tools (I've tried 3), and speed when linked with a BLAS library, their native implementations are also very good, peeking inside their code... you can tell they know what they are doing. P.S. I feel this post needs a disclai",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/643#issuecomment-459653772:1905,rout,routines,1905,https://su2code.github.io,https://github.com/su2code/SU2/issues/643#issuecomment-459653772,2,['rout'],['routines']
Integrability," for numerics->SetBlaBla.; A template decorator in the sense that the class can be augmented simply by inheriting from another, along the lines of `class CRoeVisc : public CRoe, public CVisc` (to allow fusing residual and Jacobian contributions).; All this needs to be done with templates for the ""minimal indirection"" requirement. Which means for each numerical method we will have 4 explicit template instantiations (Euler2D, Euler3D, (RA)NS2D, (RA)NS3D) but in the end these are still polymorphic objects that will be instantiated by some factory function (i.e. it will look clean, especially because I will not port all methods in one go xD). The template machinery to support this is actually not too crazy:; ```c++; #include <array>; #include <cmath>. // An example type to use instead of the container that stores solution data for all vertices.; struct SolutionContainer; {; std::array<double,3> velocity;; std::array<double,3> areaVector;; };. using ResultType = double;. // We want classes with this interface.; class VirtualInterface; {; public:; virtual ResultType Compute(const SolutionContainer&) const = 0;; };. // The Compute method is to be composed via an inheritance chain, to do this; // we allow each building block to inherit from any class. These classes should; // be function objects that have no member variables, all data used in the; // resulting Compute method will be on the stack.; template<typename Base>; class ComputeArea : Base; {; protected:; // Different template instantiations will be made for; // 2D/3D to allow perfect loop unrolling.; enum : int {nDim = Base::nDim};. // To share variables between building blocks we will pass; // down a struct which is also composed by inheritance; struct WorkVarsType : Base::WorkVarsType; {; double area; // add ""area"" to the variables of Base; };; ; // The final implementation of Compute will be a call down the chain.; // The final constructed WorkVarsType is not known at this stage,; // hence we also template the me",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/789#issuecomment-622941617:2393,interface,interface,2393,https://su2code.github.io,https://github.com/su2code/SU2/issues/789#issuecomment-622941617,2,['interface'],['interface']
Integrability," in the very same history as the non-inlet version. I see a difference in Residuals which is sometimes not consistent (I had cases where I cycled through 3 different outcomes for the inlet version in a random order...wtf). It has nothing to do with the wrong values being read in and made available to the Solver, they are perfect. I now did 2 full-time days of debugging and I a don't get it. I have traced the problem down quite a bit and know which code lines I have to comment to make the problem go away ... but it doesnt make sense: I am not allowed (I can, but then I have non-equal diffs) to write anything (but zero!) in certain blocks of the local variable `profileData` in `CMarkerProfileReader`. That is only the case for more than 1 species equation! I also overwrote the `Inlet_Species_Var` using the `SetUnformInlet` which just takes the cfg-Marker values. . It seems to be some memory-problem and valgrind trys to speak to me but can only point me to the constructor of the Avg_GradSpecies for the volume in CDriver and tells me about a `Conditional jump or move depends on uninitialised value(s)` in `CSysSolve.cpp:131`; ```c++; if ((nrm <= 0.0) || (nrm != nrm)) {; ```; and is supposed to originate from `CDriver.cpp:1366` via a `Uninitialised value was created by a heap allocation`; ```c++; numerics[iMGlevel][SPECIES_SOL][visc_term] = new CAvgGrad_Species<Indices>(nDim, nVar_Species, true, config);; ```; ```c++; 338 --139924-- REDIR: 0x53dc330 (libstdc++.so.6:operator new[](unsigned long)) redirected to 0x4c2a801 (operator new[](unsigned long)); 339 --139924-- REDIR: 0x53da3e0 (libstdc++.so.6:operator delete[](void*)) redirected to 0x4c2b596 (operator delete[](void*)); 340 --139924-- REDIR: 0x53dc2e0 (libstdc++.so.6:operator new(unsigned long, std::nothrow_t const&)) redirected to 0x4c2a3af (operator new(unsigned long, std::nothrow_t const&)); 341 --139924-- REDIR: 0x53da3d0 (libstdc++.so.6:operator delete(void*, std::nothrow_t const&)) redirected to 0x4c2b2a8 (operat",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1388#issuecomment-968058603:1580,depend,depends,1580,https://su2code.github.io,https://github.com/su2code/SU2/pull/1388#issuecomment-968058603,1,['depend'],['depends']
Integrability," is much better to maintain. Furthermore it has a great documentation. Finally, meson has no dependencies apart from python and we can easily ship it (as a submodule) since it needs no installation/compilation. . ### What is ninja ?; ninja is a replacement for make and is used to execute the compiler and to resolve dependencies. Meson uses ninja as the default backend. So instead of using configure + make, we use meson + ninja. As with meson, we can ship it as a submodule. It needs a compilation, but again it has no dependencies apart from python. ### How to use ?; The correct meson and ninja versions are added as git submodules. So in case you don't have meson and ninja installed (there should be packages available for all major distros), compile ninja using:. ```; cd externals/ninja; ./configure.py --bootstrap; cd ..; export PATH=$PWD/externals/ninja:$PWD/externals/meson:$PATH; ```; and run meson using; ```; meson.py build --prefix=$PWD -Denable-pywrapper=true -Denable-autodiff=true; ```; to ocnfigure SU2 with the python wrapper and AD support enabled. MPI support will be enabled by default if a proper mpi installation can be found. ; Finally compile the code with; ```; ninja -C build; ```. - ""build"" in the commands above is a folder where the configuration will be stored. You can configure multiple directories with different configurations (like for a debug build etc); - ninja uses all available cores in your system by default. Still you can set the number of jobs using `-j N`. ### Additional notes; - Meson requires python 3, so implicitly we get this requirement now. But I think it is less of a problem than some of you probably might think. A lot of problems we have come from the fact the we support python 2 and python 3. As I was setting up travis (getting there in a moment) I noticed that is easily possible to compile the code with python 3 (for the python wrapper) and run the python scripts with python 2 and vice versa, which eventually leads to errors and cr",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/745:1730,wrap,wrapper,1730,https://su2code.github.io,https://github.com/su2code/SU2/pull/745,1,['wrap'],['wrapper']
Integrability," it makes the wall function implementation more robust to the varying y+ of the first cell of the surface of the geometry and lessens the burden during the grid generation stage. Formulations for S-A and k-w/SST are available. If anyone else is interested in participating, please let us know. Best,. Juan. On Jun 8, 2017, at 5:11 PM, Thomas D. Economon <notifications@github.com<mailto:notifications@github.com>> wrote:. Hi all,. Yes, it would be wonderful to get this feature completed. I had started this a couple of years ago, but never quite got around to finishing (too many fun things to work on!). I was following this paper, which should be a straightforward implementation for us, as FUN3D has a very similar structure:. Jan-Renee Carlson, Veer Vatsa, and Jeffery A. White. ""Node-Centered Wall Function Models for the Unstructured FLow Code Fun3D"", 22nd AIAA Computational Fluid Dynamics Conference, AIAA AVIATION Forum, AIAA 2015-2758, https://doi.org/10.2514/6.2015-2758. The key changes can be found in the following locations:. * CNSSolver::Compute_Wall_Functions_Mean() routine in solver_direct_mean.cpp - computes and stores an updated wall shear stress based on the chosen wall model; * CTurbSASolver::Compute_Wall_Functions() routine in solver_direct_turbulent.cpp - computes the eddy visc/nu tilde needed near the wall based on the model; * CNumerics::GetViscousProjFlux() in numerics_structure.cpp - computes the viscous flux between two nodes and will make an adjustment near the wall when the model is active; * CNumerics::GetViscousProjJacs() in numerics_structure.cpp - this part isn’t quite finished yet (something similar to the previous bullet). Let's keep the discussion going,; Tom. —; You are receiving this because you commented.; Reply to this email directly, view it on GitHub<https://github.com/su2code/SU2/issues/399#issuecomment-307260814>, or mute the thread<https://github.com/notifications/unsubscribe-auth/ADpSxEMtW6EqpjBFJOTo8mRqxMFvvf4uks5sCI2zgaJpZM4NvG6w>.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/399#issuecomment-307262047:1573,rout,routine,1573,https://su2code.github.io,https://github.com/su2code/SU2/issues/399#issuecomment-307262047,2,['rout'],['routine']
Integrability," know it is a tedious task with having to make alterations in various parts of the code.; >; > But all of these design variables can be represented by aggregations of FFD point movements. The span of the wing can be controlled by constraining the movement of FFD points in the y-direction to be proportional to their y coordinate. The current twist variable does a similar aggregation, at each twist location it rotates the corresponding 4 FFD points by the given angle. ; >; >These design variables could be represented by simple python functions that take in a set of FFD points and aggregate their movement in the desired way. All this can be done without any incision into the C++ code, given a python interface that can provide the C++ code the final FFD point locations and letting it do the deformation. . Moving functionality to python could also remove the need for some of the other SU2 modules that haven't been updated for a while. For example, SU2_GEO is a bloated wrapper c++ script that calls a couple of CGeometry/CSurfaceMovement functions. The calling of these functions could be easily ported to python and increase the functionality of the Python Wrapper interface. . Some of the specific things I want to do in this PR:. 1. Refactor SU2_GEO such that all its functionality can be performed in python (in progress); 2. Add a generalized thickness constraint (in progress); 3. Be able to do multiple types of geometry evaluation (for example wing+fuselage); 4. Expose some of the mesh deformation functions to python to allow for robust design variable definition; 5. Perform all of the shape optimization using the in-memory python scripts; 6. Intelligent handling of solution divergences that doesn't break the optimization; 7. Better way to define multipoint optimizations; 8. Better multi-objective optimization definition (#913 might be helpful in this); 9. Simplify the multitude of shape optimization options (#733). As you can probably tell, a lot of my examples and motiva",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/922:2061,wrap,wrapper,2061,https://su2code.github.io,https://github.com/su2code/SU2/pull/922,2,['wrap'],['wrapper']
Integrability," machine cluster (16 cores each) to run CFD problems on. The cluster is connected together with 1G ethernet. On SU2 v6.2 and earlier, when I ran a problem on multiple machines the time per iteration would improve up until i hit a limit where presumably network overhead exceeded the benefit of adding another machine (The limit for my set up was something like 0.5 s/iteration. . I just tried SU2 v7 on this same cluster and consistently the time per iteration gets worse when I add a second machine and double the process count. I've tried this on smaller problems (~1Mill cells) but I've also tried it on larger ones (~27Million cells). On the larger problem, one machine with 16 processes ran at 34s/iteration and 2 machines with 32 processes also ran at 34s/iteration. For that problem size, I would expect a near 2x improvement in iteration time when doubling processes. Other than this, the apples to apples comparison between SU2 v6 and v7 is otherwise very impressive where iteration times have come down even for higher CFL's. I did compile SU2 from source. I tried to compile it the same way for both v6.2 and v7 though with the different build system its a little bit harder to be certain that its all exactly the same. Given that v7 performs fine going up to 16 processes on one machine, I don't think that its a compilation issue, but admittedly I don't know all the intricacies of mpi. . Since its just multi machine that's an issue, I wonder if there's something about v7 that make it more bandwidth/latency dependent that would go away with a faster network. Or is this just a regression do to (compiler version, mpi version, a network misconfiguration...)?. Anyway I know this a bit rambling, but any help would be appreciated. I'm happy to test anything on my setup this if anyone has any ideas. **Desktop (please complete the following information):**; - OS: Ubuntu 18.04; - C++ compiler and version: g++ 7.4.0; - MPI implementation and version: OpenMPI 2.1.1; - SU2 Version: 7.0.1",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/894:1778,depend,dependent,1778,https://su2code.github.io,https://github.com/su2code/SU2/issues/894,1,['depend'],['dependent']
Integrability," make someone think twice before changing a member variable of those classes. The risk is still there for input variables as an algorithm development aspect... For example `MatrixVectorProductTransposed` cannot be made thread-parallel as simply/naively as its normal counterpart. ### Communication Model; The MPI + Threads communication model is very simple, currently only the master thread calls MPI routines (including `Error`), this requires thread barriers before and after the communication to make sure the correct values are passed and _seen_ by all threads.; We can test other alternatives in the future but at the moment this does not seem to be a significant bottleneck.; _Worksharing_ constructs have implicit barriers at completion, for CSysVector routines I used `nowait` modifiers, it is safe to call those routines in sequence since the loop sizes, and static work scheduling specifications are identical.; However, routines that access a CSysVector in a different way, should have an explicit barrier before using the vector (or risk having undefined behaviour). You will see these barriers on entry to matrix-vector product, and every `ComputeXXXPreconditioner` (if you don't, let me know xD). I think those routines are large enough to amortise the cost of this. ### Performance; Disclaimer:; - We are talking about linear solvers only, **you will not see a global improvement yet**.; - The large global improvements from ""hybridization"" will come from the multigrid behaving better on less decomposed domains, and from the ability to independently tune the number of cores used in the linear preconditioners. For now the objective is ""just"" not to loose performance while gaining flexibility.; - The performance of MPI+threads with 1 thread per rank will be worse than just MPI (no free lunches). With this [small case](https://github.com/su2code/SU2/files/3933059/small_case.zip) using 8 cores off a machine with two 2650v4 CPU, Intel MPI 2018 + GCC 8.2, the hybrid (2 ranks of 4",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/830#issuecomment-562646766:2291,rout,routines,2291,https://su2code.github.io,https://github.com/su2code/SU2/pull/830#issuecomment-562646766,2,['rout'],['routines']
Integrability, mapped to object at address 0x30); #==== backtrace (tid: 232297) ====; 0 0x0000000000012dc0 .annobin_sigaction.c() sigaction.c:0; 1 0x00000000000458b1 opal_obj_run_destructors() /opt/hpcx/sources/openmpi-4.0.2/ompi/../opal/class/opal_object.h:460; 2 0x00000000000458b1 ompi_file_close() /opt/hpcx/sources/openmpi-4.0.2/ompi/file/file.c:153; 3 0x0000000000069056 PMPI_File_close() /opt/hpcx/sources/openmpi-4.0.2/ompi/mpi/c/profile/pfile_close.c:60; 4 0x00000000005af5f8 CFileWriter::OpenMPIFile() ???:0; 5 0x00000000005c38d3 CSU2BinaryFileWriter::Write_Data() ???:0; 6 0x0000000000523dd7 COutput::WriteToFile() ???:0; 7 0x0000000000525173 COutput::SetResult_Files() ???:0; 8 0x00000000004bf924 CFluidIteration::Solve() ???:0; 9 0x00000000004a64c2 CSinglezoneDriver::StartSolver() ???:0; 10 0x0000000000451b2a main() ???:0; 11 0x0000000000023873 __libc_start_main() ???:0; 12 0x000000000046852e _start() ???:0; #=================================; [gen2node1:232297] *** Process received signal ***; [gen2node1:232297] Signal: Segmentation fault (11); [gen2node1:232297] Signal code: (-6); [gen2node1:232297] Failing at address: 0x3e900038b69; [gen2node1:232297] [ 0] /lib64/libpthread.so.0(+0x12dc0)[0x7f5a45076dc0]; [gen2node1:232297] [ 1] /opt/hpcx/ompi/lib/libmpi.so.40(ompi_file_close+0x11)[0x7f5a46fcb8b1]; [gen2node1:232297] [ 2] /opt/hpcx/ompi/lib/libmpi.so.40(PMPI_File_close+0x16)[0x7f5a46fef056]; [gen2node1:232297] [ 3] /usr/local/bin/SU2_CFD[0x5af5f8]; [gen2node1:232297] [ 4] /usr/local/bin/SU2_CFD[0x5c38d3]; [gen2node1:232297] [ 5] /usr/local/bin/SU2_CFD[0x523dd7]; [gen2node1:232297] [ 6] /usr/local/bin/SU2_CFD[0x525173]; [gen2node1:232297] [ 7] /usr/local/bin/SU2_CFD[0x4bf924]; [gen2node1:232297] [ 8] /usr/local/bin/SU2_CFD[0x4a64c2]; [gen2node1:232297] [ 9] /usr/local/bin/SU2_CFD[0x451b2a]; [gen2node1:232297] [10] /lib64/libc.so.6(__libc_start_main+0xf3)[0x7f5a462b7873]; [gen2node1:232297] [11] /usr/local/bin/SU2_CFD[0x46852e]; [gen2node1:232297] *** End of error message ***,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/971:4099,message,message,4099,https://su2code.github.io,https://github.com/su2code/SU2/issues/971,1,['message'],['message']
Integrability," newline after the match token in error comments (<a href=""https://redirect.github.com/mheap/github-action-required-labels/issues/55"">#55</a>)</li>; <li><a href=""https://github.com/mheap/github-action-required-labels/commit/e33092117bdd8c435e9b654d53726c6936f19518""><code>e330921</code></a> Only use a single comment when the action fails (<a href=""https://redirect.github.com/mheap/github-action-required-labels/issues/53"">#53</a>)</li>; <li>Additional commits viewable in <a href=""https://github.com/mheap/github-action-required-labels/compare/v3...v5"">compare view</a></li>; </ul>; </details>; <br />. [![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=mheap/github-action-required-labels&package-manager=github_actions&previous-version=3&new-version=5)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores). Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`. [//]: # (dependabot-automerge-start); [//]: # (dependabot-automerge-end). ---. <details>; <summary>Dependabot commands and options</summary>; <br />. You can trigger Dependabot actions by commenting on this PR:; - `@dependabot rebase` will rebase this PR; - `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it; - `@dependabot merge` will merge this PR after your CI passes on it; - `@dependabot squash and merge` will squash and merge this PR after your CI passes on it; - `@dependabot cancel merge` will cancel a previously requested merge and block automerging; - `@dependabot reopen` will reopen this PR if it is closed; - `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually; - `@dependabot show <dependency name> ignore conditions` will show all of the ign",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2125:5911,Depend,Dependabot,5911,https://su2code.github.io,https://github.com/su2code/SU2/pull/2125,2,['Depend'],['Dependabot']
Integrability," not entirely sure how to get it working (running a supersonic Euler). I changed `KIND_ADAPT= GRAD_FLOW` and tried running `SU2_CFD` but no mesh adaptation seemed to take place. After digging around the github comments, I tried running `SU2_src/SU2_PY/mesh_adaptation.py` with python but it gave me an error:. ```; ------------------------- Exit Success (SU2_CFD) ------------------------. Traceback (most recent call last):; File ""/home/user/programs/su2/SU2_src/SU2_PY/mesh_adaptation.py"", line 106, in <module>; main(); File ""/home/user/programs/su2/SU2_src/SU2_PY/mesh_adaptation.py"", line 62, in main; options.save_all ); File ""/home/user/programs/su2/SU2_src/SU2_PY/mesh_adaptation.py"", line 93, in mesh_adaptation; SU2.run.MSH(config); File ""/home/user/programs/su2/SU2_src/SU2_PY/SU2/run/interface.py"", line 134, in MSH; run_command( the_Command ); File ""/home/user/programs/su2/SU2_src/SU2_PY/SU2/run/interface.py"", line 292, in run_command; raise exception(message); RuntimeError: Path = /home/user/projects/mesh_adapt_testing/,; Command = /home/user/programs/su2/SU2-7.0.8/bin/SU2_MSH config_MSH.cfg; SU2 process returned error '127'; /bin/sh: /home/user/programs/su2/SU2-7.0.8/bin/SU2_MSH: No such file or directory; ```. And indeed, when I checked the compiled SU2 bin, `SU2_MSH` seemed to be missing. Has this functionality been removed and is that why the python script is not in the compiled SU2 bin?. I found that some people have had success using the `feature_adap` branch instead but that is running on v7.0.3. I also tried compiling this version but there appears to be a `mesh_adaptation.py` and `mesh_adaptation_amg.py`. If one wants to use mesh adaptation, is this the recommended branch?. Wishing all a Merry Christmas, good health and a happy New Year.; Thanks and regards,; Tim. **Desktop (please complete the following information):**; - OS: Linux CentOS 8; - C++ compiler and version: GCC 8.22; - MPI implementation and version: Intel (Open MPI) 3.0.0; - SU2 Version: v7.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1143:1056,message,message,1056,https://su2code.github.io,https://github.com/su2code/SU2/issues/1143,1,['message'],['message']
Integrability," prefer to use either (a) an open source library that is actively maintained, or (b) our own tree-based search. I do think that this is important for the various reasons that have been outlined/discussed already. The method Harichand describes is pretty much what we did in the ASC program. Edwin can provide more details (and we had an AIAA paper around 2005 on this topic). My suggestion: if Edwin has a tree search in C++ already and someone is willing to spend the time to integrated it, that would be the best option. We get the performance that is needed with a lightweight tree search, without external dependencies (to libraries that may provide a lot of other functionality we do not need), and we can expand to parallel trees as needed. If there is no code already available, then PCL seems like a good alternative (since it seems one can compile only portions of the library). Any takers?. Cheers,. Juan. On Jun 8, 2016, at 4:35 AM, Harichand M V <notifications@github.com<mailto:notifications@github.com>> wrote:. All,. Thanks for your comments. I think ANNlibrary is no longer maintained. It would be better if we can use a well maintained library in-order to prevent issues in future. Additionally ANNlibrary does not support distributed trees. As far as I know, pointcloud library also does not support distributed trees. I guess we will have to write a wrapper routine using MPI. This will create a local tree for its own portion of the surface mesh. Now distance computation can be done by querying all the trees and using the minimum. One catch here is that we will have to compute distance queries in a group in order to prevent the communication latency eating up the advantage. Waiting for comments. —; You are receiving this because you commented.; Reply to this email directly, view it on GitHubhttps://github.com/su2code/SU2/issues/282#issuecomment-224563432, or mute the threadhttps://github.com/notifications/unsubscribe/ADpSxBy8kuwFTxIZIeCNXcpo7NhErZYeks5qJqjqgaJpZM4ItVbi.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/282#issuecomment-224806527:1423,wrap,wrapper,1423,https://su2code.github.io,https://github.com/su2code/SU2/issues/282#issuecomment-224806527,2,"['rout', 'wrap']","['routine', 'wrapper']"
Integrability," raw HTML omitted -->; </blockquote>; <p>... (truncated)</p>; </details>; <details>; <summary>Commits</summary>; <ul>; <li><a href=""https://github.com/actions/checkout/commit/3df4ab11eba7bda6032a0b82a6bb43b11571feac""><code>3df4ab1</code></a> Release 4.0.0 (<a href=""https://redirect.github.com/actions/checkout/issues/1447"">#1447</a>)</li>; <li><a href=""https://github.com/actions/checkout/commit/8b5e8b768746b50394015010d25e690bfab9dfbc""><code>8b5e8b7</code></a> Support fetching without the --progress option (<a href=""https://redirect.github.com/actions/checkout/issues/1067"">#1067</a>)</li>; <li><a href=""https://github.com/actions/checkout/commit/97a652b80035363df47baee5031ec8670b8878ac""><code>97a652b</code></a> Update default runtime to node20 (<a href=""https://redirect.github.com/actions/checkout/issues/1436"">#1436</a>)</li>; <li>See full diff in <a href=""https://github.com/actions/checkout/compare/v3...v4"">compare view</a></li>; </ul>; </details>; <br />. [![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=actions/checkout&package-manager=github_actions&previous-version=3&new-version=4)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores). Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`. [//]: # (dependabot-automerge-start); [//]: # (dependabot-automerge-end). ---. <details>; <summary>Dependabot commands and options</summary>; <br />. You can trigger Dependabot actions by commenting on this PR:; - `@dependabot rebase` will rebase this PR; - `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it; - `@dependabot merge` will merge this PR after your CI passes on it; - `@dependabot squash and merge` will squash and merge this PR after your CI passes on it; - `@dependabot canc",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2126:10573,Depend,Dependabot,10573,https://su2code.github.io,https://github.com/su2code/SU2/pull/2126,4,"['Depend', 'depend']","['Dependabot', 'dependabot-badges']"
Integrability," regards,. Jairo (jaspe55); .........................................................................................................................................................; Jairos-Mac-mini:SU2 jaspe$ pwd; /Users/jaspe/Desktop/SU2BRANCH/SU2; Jairos-Mac-mini:SU2 jaspe$ git branch; * feature_force_read_target_on_AD; master; Jairos-Mac-mini:SU2 jaspe$ git status; On branch feature_force_read_target_on_AD; nothing to commit, working tree clean; Jairos-Mac-mini:SU2 jaspe$ ; Jairos-Mac-mini:SU2 jaspe$ ; Jairos-Mac-mini:SU2 jaspe$ git push origin feature_force_read_target_on_AD; To https://github.com/su2code/SU2.git; ! [rejected] feature_force_read_target_on_AD -> feature_force_read_target_on_AD (fetch first); error: failed to push some refs to 'https://github.com/su2code/SU2.git'; hint: Updates were rejected because the remote contains work that you do; hint: not have locally. This is usually caused by another repository pushing; hint: to the same ref. You may want to first integrate the remote changes; hint: (e.g., 'git pull ...') before pushing again.; hint: See the 'Note about fast-forwards' in 'git push --help' for details.; Jairos-Mac-mini:SU2 jaspe$ git pull origin develop; remote: Enumerating objects: 50, done.; remote: Counting objects: 100% (50/50), done.; remote: Compressing objects: 100% (6/6), done.; remote: Total 81 (delta 45), reused 46 (delta 44), pack-reused 31; Unpacking objects: 100% (81/81), done.; From https://github.com/su2code/SU2; * branch develop -> FETCH_HEAD; 0811066f4..cf91b7cf4 develop -> origin/develop; Merge made by the 'recursive' strategy.; Common/include/blas_structure.hpp | 2 +-; Common/include/matrix_structure.hpp | 2 +-; Common/src/adt_structure.cpp | 11 +-; Common/src/blas_structure.cpp | 27 ++--; Common/src/fem_geometry_structure.cpp | 2 +-; Common/src/geometry_structure.cpp | 131 ++++++++++++++-----; Common/src/matrix_structure.cpp | 14 +-; Common/src/wall_model.cpp | 4 +-; SU2_CFD/src/output_structure.cpp | 2 +-; SU2_IDE/Xc",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/600#issuecomment-438029731:1303,integrat,integrate,1303,https://su2code.github.io,https://github.com/su2code/SU2/pull/600#issuecomment-438029731,1,['integrat'],['integrate']
Integrability," rms[Rho]| rms[nu]| CL| CD|; +----------------------------------------------------------------+; | 0| -5.507608| -6.134199| 0.484414| 0.030848|; | 1| -4.574136| -6.098123| 0.484453| 0.030598|; [...]; | 10| -5.466734| -4.908028| 0.484509| 0.029445|; +-----------------------------------------------------------------------+; | File Writing Summary | Filename |; +-----------------------------------------------------------------------+; |SU2 restart |restart_flow.dat |; Traceback (most recent call last):; File ""/usr/local/bin/parallel_computation.py"", line 110, in <module>; main(); File ""/usr/local/bin/parallel_computation.py"", line 57, in main; options.compute ); File ""/usr/local/bin/parallel_computation.py"", line 88, in parallel_computation; info = SU2.run.CFD(config); File ""/usr/local/bin/SU2/run/interface.py"", line 112, in CFD; run_command( the_Command ); File ""/usr/local/bin/SU2/run/interface.py"", line 292, in run_command; raise exception(message); RuntimeError: Path = /mnt/cfddata/WLiao/CRJ700_su2/CRJ700_inch_roe_TEST/,; Command = mpirun -np 2 /usr/local/bin/SU2_CFD config_CFD.cfg; SU2 process returned error '139'; [gen2node1:232298:0:232298] Caught signal 11 (Segmentation fault: address not mapped to object at address 0x30); [gen2node1:232297:0:232297] Caught signal 11 (Segmentation fault: address not mapped to object at address 0x30); #==== backtrace (tid: 232297) ====; 0 0x0000000000012dc0 .annobin_sigaction.c() sigaction.c:0; 1 0x00000000000458b1 opal_obj_run_destructors() /opt/hpcx/sources/openmpi-4.0.2/ompi/../opal/class/opal_object.h:460; 2 0x00000000000458b1 ompi_file_close() /opt/hpcx/sources/openmpi-4.0.2/ompi/file/file.c:153; 3 0x0000000000069056 PMPI_File_close() /opt/hpcx/sources/openmpi-4.0.2/ompi/mpi/c/profile/pfile_close.c:60; 4 0x00000000005af5f8 CFileWriter::OpenMPIFile() ???:0; 5 0x00000000005c38d3 CSU2BinaryFileWriter::Write_Data() ???:0; 6 0x0000000000523dd7 COutput::WriteToFile() ???:0; 7 0x0000000000525173 COutput::SetResult_Files() ???:0; 8 0",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/971:1739,message,message,1739,https://su2code.github.io,https://github.com/su2code/SU2/issues/971,1,['message'],['message']
Integrability," scheme for a multi-physics problem. To obtain the design accuracy in time, this implies that the loop over the number of time stages is outside the loop over the number of physical disciplines. Hence at a very high level in the hierarchy, the details of the time integration should then be known. The situation becomes even more complicated when one would like to employ time integration schemes that allow for time accurate local time stepping, e.g. the ones we are currently working on for the DG solver. I won't bore you with all the details here, but those schemes basically require the loop over the multiple disciplines to be between the predictor and corrector step, while both these steps consist of multiple stages. Although it is probably possible to come up with a data structure that supports all this, the question is whether this is desirable. Apart from the fact that it would require a major overhaul in the high level design of SU2, the implementation will be less readable, especially for people that will be starting with the code. Also the parallelization may become significantly more complicated. The alternative is that for unsteady multi-physics problems, we put the restriction that only single stage time integration schemes can be used, e.g. DT_STEPPING_1ST and DT_STEPPING_2ND. In that case, the details of the time integration scheme can be hidden at the driver level, where we then simply have a loop over the number of physical disciplines. The consequence of course is that more advanced time integration schemes will not be available for multi-physics problems. In the above I just tried to picture what, in my opinion, the consequences are for either option. I don't have a preference for one of them. The only thing I wanted to make clear is that it is not possible to hide all the details of the time integration scheme at the driver level, while also having support for all possible time integration schemes for an unsteady multi-physics problem. Regards,. Edwin",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/437#issuecomment-328441926:1599,integrat,integration,1599,https://su2code.github.io,https://github.com/su2code/SU2/issues/437#issuecomment-328441926,10,['integrat'],['integration']
Integrability," that the Prism and Pyramid shape elements used for mesh deformation had some issues, namely:; - The Prism (6 nodes) element had incorrect integration points, and perhaps due to some inconsistency between the ordering of the nodes and the shape function it had ""negative"" stiffness (deform opposite to force). The latter issue was remedied by using negative weights... I tried permuting the integration points but that did not help.; - The Pyramid (5 nodes) had inconsistent integration points and shape functions, it was using pyramid points but degenerate hex functions, this made the element some 20 times more flexible than it should be, pyramid shape functions are used now. My main reason to look into this was to support all element types in the structural solver both for linear and nonlinear analysis, in principle that should be working now, but I still have tests to run. I took the opportunity to refactor the CElement family of classes, now the derived classes only deal with the shape specifics:; - Integration/extrapolation points, shape function and derivatives, are computed and stored at construction.; - Area/Volume computation in undeformed (reference) or deformed (current) coordinates. Generic actions like allocating data and computing gradients are done by the base class. For the latter I included one method for 2D and another for 3D, they only differ in the inversion of the Jacobian but being specialized nDim can be ""hardcoded"" which should allow for more compile time optimization. I expect some regressions to fail, and I will still run more tests to verify the revised elements. I will post those results and add a regression. ## PR Checklist. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test case that demonstrates my c",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/681:1086,Integrat,Integration,1086,https://su2code.github.io,https://github.com/su2code/SU2/pull/681,1,['Integrat'],['Integration']
Integrability," threads arrive to that routine. This also makes the routines safe to call in serial.; The only ""dangerous"" things to do in parallel are to: manage memory for a shared object (multiple threads call `new` but there is only one shared pointer on which to call `delete`); writing to the same memory locations concurrently.; I tried to make the first issue debugable by asserting that the initialization routines of CSysMatrix and CSysVector are only called by the master thread.; For the second issue I made the associated classes as const-correct as possible, that should at least make someone think twice before changing a member variable of those classes. The risk is still there for input variables as an algorithm development aspect... For example `MatrixVectorProductTransposed` cannot be made thread-parallel as simply/naively as its normal counterpart. ### Communication Model; The MPI + Threads communication model is very simple, currently only the master thread calls MPI routines (including `Error`), this requires thread barriers before and after the communication to make sure the correct values are passed and _seen_ by all threads.; We can test other alternatives in the future but at the moment this does not seem to be a significant bottleneck.; _Worksharing_ constructs have implicit barriers at completion, for CSysVector routines I used `nowait` modifiers, it is safe to call those routines in sequence since the loop sizes, and static work scheduling specifications are identical.; However, routines that access a CSysVector in a different way, should have an explicit barrier before using the vector (or risk having undefined behaviour). You will see these barriers on entry to matrix-vector product, and every `ComputeXXXPreconditioner` (if you don't, let me know xD). I think those routines are large enough to amortise the cost of this. ### Performance; Disclaimer:; - We are talking about linear solvers only, **you will not see a global improvement yet**.; - The large global ",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/830#issuecomment-562646766:1761,rout,routines,1761,https://su2code.github.io,https://github.com/su2code/SU2/pull/830#issuecomment-562646766,2,['rout'],['routines']
Integrability," to compute the mesh deformation. The adjoint sensitivities can now be propagated down to the surface mesh points without the need to use DOT, although further work is needed to propagate them to the FFD points or other DV of choice. I tried to keep config options simple: the new mesh solver is enabled using; ` DEFORM_MESH = YES `; and the relevant markers which will move and introduce deformations into the domain are set using; `MARKER_DEFORM_MESH= ( wall )`; Hopefully, previous mesh deformation structures can be deprecated and removed soon, but we will need to adapt the rigid/imposed boundary deformation of other kinds of grid movement. I kindly ask for your help in there, as I'm not very familiar with some of the legacy code for this purpose. Additionally, in this PR I have done some refactoring so the AD-based adjoint routines are accessible from the python-wrapped version of the code. The SWIG wrapper now compiles the AD binaries and interfaces directly to sensitivity information, which should make it much easier to integrate SU2 within any python-based optimization framework. . ## Related Work; - Some work will be needed to adapt the new contiguous variable structure by @pcarruscag in #753; - I have added a couple of regression tests, but I will add tutorials once #724 is merged. As of now, a bug reported in #713 prevents me from adding any meaningful tutorial - but that should be fixed in #724 according to @talbring ; - I already started adding the mesh solver, numerics and transfer functions in separate files as discussed in #583 and already started in #725. For clarity and ease of merging, only new classes are split so far, but I will probably start splitting other structures soon in PRs to come. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I ",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/760:1616,wrap,wrapper,1616,https://su2code.github.io,https://github.com/su2code/SU2/pull/760,3,"['integrat', 'interface', 'wrap']","['integrate', 'interfaces', 'wrapper']"
Integrability," update_grad; self.g = grad_wrapped(self.x); File ""/home/xxx/.local/lib/python3.8/site-packages/scipy/optimize/_differentiable_functions.py"", line 164, in grad_wrapped; return np.atleast_1d(grad(np.copy(x), *args)); File ""/usr/local/bin/SU2/opt/scipy_tools.py"", line 400, in obj_df; dobj_list = project.obj_df(x); File ""/usr/local/bin/SU2/opt/project.py"", line 238, in obj_df; return self._eval(konfig, func,dvs); File ""/usr/local/bin/SU2/opt/project.py"", line 202, in _eval; vals = design._eval(func,*args); File ""/usr/local/bin/SU2/eval/design.py"", line 147, in _eval; vals = eval_func(*inputs); File ""/usr/local/bin/SU2/eval/design.py"", line 380, in obj_df; grad = su2grad(this_obj,grad_method,config,state); File ""/usr/local/bin/SU2/eval/gradients.py"", line 96, in gradient; grads = adjoint( func_name, config, state ); File ""/usr/local/bin/SU2/eval/gradients.py"", line 294, in adjoint; info = su2run.adjoint(konfig); File ""/usr/local/bin/SU2/run/adjoint.py"", line 79, in adjoint; SU2_CFD(konfig); File ""/usr/local/bin/SU2/run/interface.py"", line 112, in CFD; run_command( the_Command ); File ""/usr/local/bin/SU2/run/interface.py"", line 292, in run_command; raise exception(message); RuntimeError: Path = /home/xxx/SU2/SU2-7.0.4/test1/DESIGNS/DSN_001/ADJOINT_DRAG/,; Command = /home/xxx/SU2/SU2-7.0.4/SU2_CFD/bin/SU2_CFD_AD config_CFD_AD.cfg; SU2 process returned error '127'; /bin/sh: 1: /home/xxx/SU2/SU2-7.0.4/SU2_CFD/bin/SU2_CFD_AD: not found; ```; So I tried to build AD under the instruction. I copied the exact same thing and pasted to the command. The error is:. ```; Checking the status of submodules; =====================================================================; Found an old or unspecified version of CoDiPack in externals/codi.; Use -u to reset module.; ```; However, when I try to update/reinstall the codi, I failed in the extraction process. The error is:; ```; Checking the status of submodules; =====================================================================. git ",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1602:2559,interface,interface,2559,https://su2code.github.io,https://github.com/su2code/SU2/issues/1602,1,['interface'],['interface']
Integrability," view</a></li>; </ul>; </details>; <br />. [![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=actions/setup-python&package-manager=github_actions&previous-version=4&new-version=5)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores). Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`. [//]: # (dependabot-automerge-start); [//]: # (dependabot-automerge-end). ---. <details>; <summary>Dependabot commands and options</summary>; <br />. You can trigger Dependabot actions by commenting on this PR:; - `@dependabot rebase` will rebase this PR; - `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it; - `@dependabot merge` will merge this PR after your CI passes on it; - `@dependabot squash and merge` will squash and merge this PR after your CI passes on it; - `@dependabot cancel merge` will cancel a previously requested merge and block automerging; - `@dependabot reopen` will reopen this PR if it is closed; - `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually; - `@dependabot show <dependency name> ignore conditions` will show all of the ignore conditions of the specified dependency; - `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself); - `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself); - `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself). </details>",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2233:8703,depend,dependabot,8703,https://su2code.github.io,https://github.com/su2code/SU2/pull/2233,11,"['Depend', 'depend']","['Dependabot', 'dependabot', 'dependency']"
Integrability," view</a></li>; </ul>; </details>; <br />. [![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=github/codeql-action&package-manager=github_actions&previous-version=2&new-version=3)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores). Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`. [//]: # (dependabot-automerge-start); [//]: # (dependabot-automerge-end). ---. <details>; <summary>Dependabot commands and options</summary>; <br />. You can trigger Dependabot actions by commenting on this PR:; - `@dependabot rebase` will rebase this PR; - `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it; - `@dependabot merge` will merge this PR after your CI passes on it; - `@dependabot squash and merge` will squash and merge this PR after your CI passes on it; - `@dependabot cancel merge` will cancel a previously requested merge and block automerging; - `@dependabot reopen` will reopen this PR if it is closed; - `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually; - `@dependabot show <dependency name> ignore conditions` will show all of the ignore conditions of the specified dependency; - `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself); - `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself); - `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself). </details>",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2229:16586,depend,dependabot,16586,https://su2code.github.io,https://github.com/su2code/SU2/pull/2229,11,"['Depend', 'depend']","['Dependabot', 'dependabot', 'dependency']"
Integrability," would likely perform better as it avoids the pesky gather/scatter operations.; Processing multiple geometric primitives can make full utilization of whatever register size (important on GPU's), the code is just as readable (as I hope to show), but gather/scatter cannot be avoided. ### Intro to SPMD; This one is simpler, in a nutshell multiple threads operate on the sub domain of an MPI rank.; The typical implementation has each thread executing a chunk of an edge or cell loop. **Why should we care about SPMD?**; Reduce the communication overhead resulting from domain decomposition and improve load balancing, important for strong scaling.; Some algorithms are more efficient that way, e.g. the ADT (as mentioned by Edwin), the current MG also seems to work better on fewer partitions, and additive versions of preconditioners like the ILU or LU-SGS lose effectiveness with number of partitions.; Optimum hardware utilization, for routines that are bandwidth-bound it may be beneficial to use all threads available, while for compute-bound or ""algorithm-bound"" ones this may not be the case. **Relation with algorithms**; A typical edge loop reads from 2 locations and writes to 2 locations (gather / scatter access pattern, not to be confused with the instructions) processing multiple edges at the same time can therefore result in race conditions where multiple threads try to update the data of the same point.; There are 3 ways to address this:; - **Coloring**: Edges are colored (grouped) such that edges of the same color have no risk of race conditions, i.e. each endpoint is referenced only once per color (this definition gives you the basis of a greedy algorithm to color edges).; - **Scatter to gather transformations**: Edge quantities (e.g. fluxes) are computed and stored on one pass (i.e. we read from 2 locations and write to 1), on a second pass, over points, we reduce (e.g. sum) the edge quantities for each point, again a gather access pattern. It may also be possible to ",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/789#issuecomment-529662724:3512,rout,routines,3512,https://su2code.github.io,https://github.com/su2code/SU2/issues/789#issuecomment-529662724,2,['rout'],['routines']
Integrability," | You should have received a copy of the GNU Lesser General Public |; | License along with SU2. If not, see <http://www.gnu.org/licenses/>. |; -------------------------------------------------------------------------. ------------------------ Physical Case Definition -----------------------; Input mesh file name: mesh_NACA0012_inv.su2. -------------------------- Output Information ---------------------------; The output file format is Tecplot ASCII (.dat).; Flow variables file name: flow. ------------------- Config File Boundary Information --------------------; +-----------------------------------------+; | Marker Type| Marker Name|; +-----------------------------------------+; | Euler wall| airfoil|; +-----------------------------------------+; | Far-field| farfield|; +-----------------------------------------+. ---------------------- Read Grid File Information -----------------------; Two dimensional problem.; 5233 points.; 2 surface markers.; +------------------------------------+; | Index| Marker| Elements|; +------------------------------------+; | 0| airfoil| 200|; | 1| farfield| 50|; +------------------------------------+; 10216 triangles.; Identify vertices.; Storing a mapping from global to local point index. ------------------------- Solution Postprocessing -----------------------. Error in ""void CBaselineSolver::SetOutputVariables(CGeometry*, CConfig*)"": ; -------------------------------------------------------------------------; Unable to open SU2 restart file solution_flow.dat; ------------------------------ Error Exit -------------------------------. --------------------------------------------------------------------------; MPI_ABORT was invoked on rank 0 in communicator MPI_COMM_WORLD; with errorcode 1. NOTE: invoking MPI_ABORT causes Open MPI to kill all MPI processes.; You may or may not see output from other processes, depending on; exactly when Open MPI kills them.; --------------------------------------------------------------------------; ```",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/739#issuecomment-514653545:4097,depend,depending,4097,https://su2code.github.io,https://github.com/su2code/SU2/issues/739#issuecomment-514653545,1,['depend'],['depending']
Integrability,"![CHT_Fluid_Solid](https://github.com/su2code/SU2/assets/38651601/5c025e63-bc14-4148-9625-67d77c6990c7). Was able to run a case with fluid and two solids with contact resistance between the solid domains. By setting a non-zero contact resistance between the solid domains there appears a temperature discontinuity between the solids, but by setting the contact resistance value to zero on the fluid-to-solid interfaces, the temperature trends are continuous. ; Further testing still required on more complicated cases, but the core functionality seems to work so far.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2152#issuecomment-1816057953:408,interface,interfaces,408,https://su2code.github.io,https://github.com/su2code/SU2/pull/2152#issuecomment-1816057953,1,['interface'],['interfaces']
Integrability,![Mesh](https://user-images.githubusercontent.com/60317454/74029438-c0c4f000-49bd-11ea-8f83-4a823c7c69d7.jpg); ![Mach](https://user-images.githubusercontent.com/60317454/74029449-c7536780-49bd-11ea-92e6-49c9812e670f.jpg). I have moved PYAMG interface to SU2-6.2.0 and made some changes to Mach sensor on the solid wall.,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/606#issuecomment-583368735:241,interface,interface,241,https://su2code.github.io,https://github.com/su2code/SU2/issues/606#issuecomment-583368735,1,['interface'],['interface']
Integrability,""">#2163</a> from github/mergeback/v3.24.5-to-main-47b3d888</li>; <li><a href=""https://github.com/github/codeql-action/commit/6dab9f2356bef6518153087116230299a4ee6712""><code>6dab9f2</code></a> Update checked-in dependencies</li>; <li><a href=""https://github.com/github/codeql-action/commit/4d6d2bfeaa911ec12eaaa346f581bb7ab1dc238d""><code>4d6d2bf</code></a> Merge remote-tracking branch 'origin/releases/v3' into mergeback/v3.24.5-to-m...</li>; <li><a href=""https://github.com/github/codeql-action/commit/633baf86c326c07635ec576d7f97ae3f76871e4c""><code>633baf8</code></a> Merge pull request <a href=""https://redirect.github.com/github/codeql-action/issues/2165"">#2165</a> from github/nickfyson/fix-3.24.5-changelog</li>; <li>See full diff in <a href=""https://github.com/github/codeql-action/compare/v2...v3"">compare view</a></li>; </ul>; </details>; <br />. [![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=github/codeql-action&package-manager=github_actions&previous-version=2&new-version=3)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores). Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`. [//]: # (dependabot-automerge-start); [//]: # (dependabot-automerge-end). ---. <details>; <summary>Dependabot commands and options</summary>; <br />. You can trigger Dependabot actions by commenting on this PR:; - `@dependabot rebase` will rebase this PR; - `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it; - `@dependabot merge` will merge this PR after your CI passes on it; - `@dependabot squash and merge` will squash and merge this PR after your CI passes on it; - `@dependabot cancel merge` will cancel a previously requested merge and block automerging; - `@dependabot reopen` will reopen th",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2229:15384,depend,dependency-name,15384,https://su2code.github.io,https://github.com/su2code/SU2/pull/2229,1,['depend'],['dependency-name']
Integrability,"""[WIP] Develop for Langtry and Menter transition model. #1592"" was merged while trying to update my remote repository to v7.40. I'm not good at using GitHub, so I'm sorry for this situation. . My remote repository(forked) is not synchronized with v7.40, and I don't know what the problem is. So, I will delete the forked repository and fork it again to PR with the same name and content. Fortunately, the LM model updated to v7.40 obtained the same residuals and results as the previous v7.3.1.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1592#issuecomment-1236684338:229,synchroniz,synchronized,229,https://su2code.github.io,https://github.com/su2code/SU2/pull/1592#issuecomment-1236684338,1,['synchroniz'],['synchronized']
Integrability,"# Describe the bug. **Issue**; The memory usage of SU2_CFD continuously grows over time and is most noticeable when writing out files at high frequency. This caught my attention when cluster jobs with higher output frequency were consistently exceeding memory limits after a certain amount of time, leading to the job being killed. The same configuration with a lower output frequency can run significantly more iterations without exceeding limits. I may be missing something, but it seems like there is a potential memory leak dependent on the output frequency, which I've documented in this report. **Expected**; Memory usage remains steady over time and does not significantly change with output frequency. **Local tests**; I was able to reproduce the issue locally on a workstation using the [Unsteady NACA0012 Tutorial case](https://github.com/su2code/Tutorials/tree/master/compressible_flow/Unsteady_NACA0012), whereby all 2200 time iterations are performed by setting `WINDOW_CAUCHY_CRIT = NO`. As you can see in the plot below, the memory usage increases over time and is more pronounced with a lower `OUTPUT_WRT_FREQ`:. ![unsteady_naca0012_mem_usage_by_freq_20210413](https://user-images.githubusercontent.com/82448366/114564646-c9275380-9c70-11eb-8352-c5f1e4492c35.png). Further editing the config file to run as a steady state simulation with `INNER_ITER= 20000` iterations produces similar results:. ![steady_naca0012_memory_usage_by_output_freq_v711_20210413](https://user-images.githubusercontent.com/82448366/114564622-c4fb3600-9c70-11eb-873d-f9e0696c6484.png). **Serial case**; This issue was not reproducible in serial and exhibits expected behavior:. ![serial_steady_state_naca0012_memory_usage_20210413](https://user-images.githubusercontent.com/82448366/114564602-bf9deb80-9c70-11eb-89dd-88d1e240ce79.png). # To Reproduce. Using [Unsteady NACA0012 Tutorial case](https://github.com/su2code/Tutorials/tree/master/compressible_flow/Unsteady_NACA0012) mesh, config, and restart files.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1261:528,depend,dependent,528,https://su2code.github.io,https://github.com/su2code/SU2/issues/1261,1,['depend'],['dependent']
Integrability,"## Motivation; Fundamental bottlenecks exist for industrial adoption of high-fidelity physics codes with fully coupled discrete adjoint sensitivity analysis. These bottlenecks include a lack of flexibility, modularity, and robustness of the computational tools, as well as the potential startup development costs needed to implement and verify the MDAO features. The purpose of this work is to facilitate the coupling of SU2 with external structural codes (e.g. NASTRAN, TACS, Airbus structural suite Lagrange) for gradient-based aerodynamic shape and structural sizing optimization using dedicated frameworks (e.g. OpenMDAO). . Startup development costs include the creation of modular tools that are _designed to be driven_ by another framework like OpenMDAO, rather than _to drive execution_ themselves. However, leveraging those MDAO frameworks assumes that software codes and modules to be coupled exist, have appropriate data structures, execution and query APIs, and are wrapped in Python for flexibility and ease of use. The proposed changes were motivated with the goal of making SU2 more modular and flexible, particularly to facilitate its integration into large-scale MDAO frameworks. For more details on the motivation, methodology, and verification & validation results, please refer to our [paper from AIAA Aviation 2022](https://doi.org/10.2514/6.2022-3358). . ## Proposed Changes; @aa-g and I propose the following code updates:. 1. Implementation of residual-based discrete adjoint solver as `CDiscAdjResidualSolver`; a. New config option: `KIND_DISC_ADJ` . 2. Enhancements and standardization of SU2 Python API; a. Add pysu2/pysu2ad methods; b. Standardize Python API and function names ; c. Overloaded getter/setter methods to make data handling more flexible. ## Related Work; These efforts are related to Issue #1262, Pull Request #1300, and Discussion [#1325](https://github.com/su2code/SU2/discussions/1325). . ## PR Checklist; - [X] I am submitting my contribution to the deve",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1750:978,wrap,wrapped,978,https://su2code.github.io,https://github.com/su2code/SU2/pull/1750,1,['wrap'],['wrapped']
Integrability,"## Proposed Changes. - Added non-polytropic Peng-Robinson (NPPR_GAS) equation of state (CP temperature dependant model): the specific heat ratio is not constant but a polynomial model (CP = n0 + n1T + n2T^2 +n3T^3 + n4T^4) can be specified for the specific heat via the input file option (CP_POLYCOEFFS). - The NPPR fluid model uses the polytropic Peng-Robinson fluid model as a base class. Therefore, the polytropic Peng-Robinson class now allows for inheritance. - New test case (TestCases/nicfd/edge_NPPR) to compare the results of the NPPR with a constant CP model (CP = n0) and the polytropic Peng-Robinson models. The results of both simulations for this test case are equivalent. ## Related Work. - The polytropic Peng-Robinson remains functionally unchanged. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1717:103,depend,dependant,103,https://su2code.github.io,https://github.com/su2code/SU2/pull/1717,1,['depend'],['dependant']
Integrability,"## Proposed Changes. . ## Related Work. related to Tutorial for composition-dependent model #113 . ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [X] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1886:76,depend,dependent,76,https://su2code.github.io,https://github.com/su2code/SU2/pull/1886,1,['depend'],['dependent']
Integrability,"## Proposed Changes. . 1. fixed factor of 100 in the transition turbulence models; 2. changed initialization of inlet profile from 0.0 to values taken from config file. I guess this was done to make this routine more general (for other boundaries) in the future. However, I think generating a default file that works out of the box is better.; 3. added a descriptive comment line to the inlet profile file (one for each marker) with the names of the columns. This line is intended to make editing easier for the user. This comment line is not mandatory and is ignored by the profile reader.; 4. do not write residuals of temperature to output file when energy equation is off. ## Related Work; Related to #1263 and #1265 . ## PR Checklist. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1268:204,rout,routine,204,https://su2code.github.io,https://github.com/su2code/SU2/pull/1268,1,['rout'],['routine']
Integrability,"## Proposed Changes. 1. fixed factor of 100 in the transition turbulence models; 2. changed initialization of inlet profile from 0.0 to values taken from config file. I guess this was done to make this routine more general (for other boundaries) in the future. However, I think generating a default file that works out of the box is better. ; 3. added a descriptive comment line to the inlet profile file (one for each marker) with the names of the columns. This line is intended to make editing easier for the user. This comment line is not mandatory and is ignored by the profile reader. ; 3. do not write residuals of temperature to output file when energy equation is off. ## Related Work; Related to issue #1265 and #1263. ## PR Checklist. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.; - [x] I have added a test case that demonstrates my contribution, if necessary.; - [x] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1267:202,rout,routine,202,https://su2code.github.io,https://github.com/su2code/SU2/pull/1267,1,['rout'],['routine']
Integrability,"## Proposed Changes. Current situation: The translation velocities and rotation rates of a moving frame (activated with GRID_MOVEMENT= ROTATING_FRAME) can only be set in the config file using parameters TRANSLATION_RATE and ROTATION_RATE. During a trim analysis of a free-flying aircraft, these parameters are modified until an equilibrium is achieved. Problem: A change of these parameters requires a new initialization of the solver, which can be time-consuming depending on the mesh size. Proposed solution: A python interface is implemented that allows to change the parameters on-the-fly. The grid velocities are updated before a new iteration. . ## Related Work; This is an extension to pull request #1621. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [ ] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [x] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2024:464,depend,depending,464,https://su2code.github.io,https://github.com/su2code/SU2/pull/2024,2,"['depend', 'interface']","['depending', 'interface']"
Integrability,"## Proposed Changes. SU2 writes an inlet profile for you when none is present and `SPECIFIED_INLET_PROFILE= YES` . When there are multiple inlets, and when using mpi, the routine fails because the total number of inlet profiles `maxProfiles` was not the total number of inlet profiles but only the maximum number of inlet profiles encountered in a rank. Some other info was also not communicated like column names and column values. This fixes the issue. . ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. Reported here:; https://www.cfd-online.com/Forums/su2/248779-inlet-profile-su2-fluid-mixture.html; And connected to PR #1786 . ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [x] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1999:171,rout,routine,171,https://su2code.github.io,https://github.com/su2code/SU2/pull/1999,1,['rout'],['routine']
Integrability,"## Proposed Changes. SU2 writes an inlet profile for you when none is present and `SPECIFIED_INLET_PROFILE= YES` . When there are multiple inlets, and when using mpi, the routine fails because the total number of inlet profiles `maxProfiles` was not the total number of inlet profiles but only the maximum number of inlet profiles encountered in a rank. This fixes the issue. . [At the moment the code does not crash anymore but still only one profile is being written]. ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. Reported here:; https://www.cfd-online.com/Forums/su2/248779-inlet-profile-su2-fluid-mixture.html; And connected to PR #1786 . ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [x] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1997:171,rout,routine,171,https://su2code.github.io,https://github.com/su2code/SU2/pull/1997,1,['rout'],['routine']
Integrability,"## Proposed Changes. Some method names make no sense like `GetNodeDomain` the user/coder has to look explanation and it is also not clear `Get the halo flag of a mesh node.` give no information and also provides no information, whether true indicates halo node or domain node. Python wrapper functions are almost complete in the camel case just a few of them in the snake case. Now all of them are in camel case, consistently. Similarly in the codebase, even inside same class some functions are the snake and others are in the camel case. In terms of the SU2 style guide, it is okay but pretty annoying for a developer. I am changing method names to at least provide some consistency inside the classes. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [ ] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [ ] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1981:284,wrap,wrapper,284,https://su2code.github.io,https://github.com/su2code/SU2/pull/1981,1,['wrap'],['wrapper']
Integrability,"## Proposed Changes. The python wrapper instantiates drivers directly. To ensure that SU2 is initialized properly, also if used from python, some initialization code is already placed in the driver constructor. This PR moves additional initialization code to the driver constructor. ## Related Work; This came up during #1903. ## PR Checklist. - [X] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [x] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [x] I have added a test case that demonstrates my contribution, if necessary.; - [x] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1966:32,wrap,wrapper,32,https://su2code.github.io,https://github.com/su2code/SU2/pull/1966,1,['wrap'],['wrapper']
Integrability,"## Proposed Changes. This PR enforces the continuity of velocity explicitly at the fluid structure interface for each time step. The velocity was previously recalculated for the fluid nodes based on displacement history of the nodes. This is still needed for fluid only problems with deforming meshes. However, for FSI problems, the velocity at the interface can be transferred from the structural solution and propagated to the fluid nodes similarly to the displacement which ensures exact agreement at the interface at each time-step. This change has been validated using a typical FSI benchmark of square cylinder with a flexible cantilever beam, which gives good agreement in peak tip displacement and Strouhal number.; . ## Related Work. ## PR Checklist. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1174:99,interface,interface,99,https://su2code.github.io,https://github.com/su2code/SU2/pull/1174,3,['interface'],['interface']
Integrability,"## Proposed Changes. This PR is intended to put some functionality back that was involuntarily removed in #724. . Test cases for discrete adjoint FSI are now re-enabled with split files. They [correctly pass](https://travis-ci.org/su2code/SU2/builds/597983817) the travis tests [when the branch is based in feature_input_output](https://github.com/su2code/SU2/compare/feature_input_output...654ba3dfc207e25c31da9c09860224ad4044a610), which was the original branch merged in #724. . Unfortunately, given that during this time both #753 and #774 were merged, the tests are failing now. Particularly, the disc_adj_fsi case runs into a segfault in `CDiscAdjSolver::ExtractAdjoint_CrossTerm_Geometry`, when trying to execute ; `geometry->node[iPoint]->GetAdjointCoord(Solution_Geometry);`. . I believe this is related to the changes to the index based recording introduced in #774, as the code was running before into the same problem in `CDiscAdjSolver::ExtractAdjoint_CrossTerm`, and now goes beyond this point having changed the Get routine into `direct_solver->GetNodes()->GetAdjointSolution_intIndexBased(iPoint,Solution);`. Currently, there is no `GetAdjointCoord_intIndexBased` or similar available, and its implementation requires some constructs for the indices. Therefore, I would like to ask for support from @oleburghardt and @pcarruscag to make this work with their changes. ## Related Work; #724 involuntarily removed the discrete adjoint FSI cases from the regression tests.; Branch [fix_discadjfsi](https://github.com/su2code/SU2/tree/fix_discadjfsi) successfully recovers the functionality removed.; #774 introduced relevant changes to the adjoint solver that are making.; #753 was merged and, although I tried to adapt to it, I can't guarantee it's working correctly. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/803:1031,rout,routine,1031,https://su2code.github.io,https://github.com/su2code/SU2/pull/803,1,['rout'],['routine']
Integrability,"## Proposed Changes. This PR, created together with @TobiKattmann , makes the necessary changes to obtain time-accurate discrete adjoint gradients for unsteady problems with grid movement. Main changes are for the handling of grid velocities of previous time steps. Regression test case to follow. ## Related Work; depends on #767 unsteady incompressible + ALE. Then a tested discrete adjoint for unsteady incompressible flow can be merged with this. ; Edit @TobiKattmann: PR767 is merged so I remove the dependent label. ## PR Checklist. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [x] My contribution is commented and consistent with SU2 style.; - [x] I have added a test case that demonstrates my contribution, if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/766:315,depend,depends,315,https://su2code.github.io,https://github.com/su2code/SU2/pull/766,2,['depend'],"['dependent', 'depends']"
Integrability,"## Proposed Changes. This is a draft PR to discuss and document a much needed overhaul of the shape optimization features in SU2. There have been significant improvements to the main code base (for example, python wrapper integration, the new output structure, new mesh solver etc.) which haven't been leveraged by the shape optimization structure of SU2. . The main idea behind this overhaul is to move as much of the functionality of the current shape optimization framework to python. This creates a more user-friendly and robust interface for defining design variables and constraints. Its easy to make that claim, but let me elucidate it with an example:. > Suppose I am trying to optimize a wing for a given flight condition but I want more design freedom than altering the airfoil shapes along the wing using FFDs. I want to be able to control wing span, taper ratio, dihedral angle, twist, and any number of other geometrical representations of the wing. Currently, I would have to create a new Design Variable (DV) for most of those variables. If anyone has tried this, they know it is a tedious task with having to make alterations in various parts of the code.; >; > But all of these design variables can be represented by aggregations of FFD point movements. The span of the wing can be controlled by constraining the movement of FFD points in the y-direction to be proportional to their y coordinate. The current twist variable does a similar aggregation, at each twist location it rotates the corresponding 4 FFD points by the given angle. ; >; >These design variables could be represented by simple python functions that take in a set of FFD points and aggregate their movement in the desired way. All this can be done without any incision into the C++ code, given a python interface that can provide the C++ code the final FFD point locations and letting it do the deformation. . Moving functionality to python could also remove the need for some of the other SU2 modules that haven't ",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/922:214,wrap,wrapper,214,https://su2code.github.io,https://github.com/su2code/SU2/pull/922,6,"['integrat', 'interface', 'wrap']","['integration', 'interface', 'wrapper']"
Integrability,"## Proposed Changes. This is a further effort in automating as much as we can in our development process. It enables the release drafter action (https://github.com/toolmantim/release-drafter) which will automatically keep an release draft with a changelog up to date as soon as there is a push to develop. . The change log entries are categorized depending on the labels `feature`, `fix`, `chore` for new features, bug fixes and maintenance. If you don't want your PR listed, add the label `no_changelog`.; So remember to always add a label to your PR (maybe we will automate that soon)!. Here is the most current draft (https://github.com/su2code/SU2/releases). ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [x] My contribution is commented and consistent with SU2 style.; - [x] I have added a test case that demonstrates my contribution, if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/813:347,depend,depending,347,https://su2code.github.io,https://github.com/su2code/SU2/pull/813,1,['depend'],['depending']
Integrability,"## Proposed Changes. This is a quick draft for a module framework. Note that this is a draft and this is just to get some ideas and comments whether something like that would be useful. ### Motivation. Right now we have a lot of routines scattered throughout the code that essentially functionally belong together as they perform the same overall task. This leads to a lot of if-conditions and special cases we have to consider and its hard to actually see what their overall task actually is. One example that I also used to demonstrate a possible solution is the Fixed CL computation. We have routines in CIteration and in CEulerSolver and they modify certain behavior of the baseline code. But its complicated to figure out which routines actually belong together, what they do and when they are called. ### Possible solution. To solve that problem I propose a modular structure that puts all routines that are responsible for a certain functional task together in the same class. At certain predefined places in the code they can modify things by overloading certain functions. These functions are called *Hooks*. What arguments these hooks provide can be different depending on where they are called. As an example I did a quick implementation of such a framework and defined a Fixed CL module. . Right now, I defined a global list of modules (with only one module currently). We can also define modules lists per class, e.g. for CDriver, CIteration, CSolver. But that would mean that we have to provide potentially more than one class per module, which kind of defeats the purpose again. I will add some further comments below. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [ ] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler ",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/982:229,rout,routines,229,https://su2code.github.io,https://github.com/su2code/SU2/pull/982,4,['rout'],['routines']
Integrability,"## Proposed Changes. This is a very small fix for periodic boundary conditions. In the MatchPeriodic routine, there is a check to make sure we never map to the same point when finding periodic pairs. However, if a node lies on the axis of rotation it has to map on to itself. The checks in the MatchPeriodic routine does not allow for this possibility and this node would end up getting mapped to the nearest neighbor which will lead to wrong results. . This PR introduces a small modification to the MatchPeriodic routine that will allow nodes on the axis to map onto themselves. . ## Related Work. As a test, consider the dummy geometry below. The domain is periodic about the Z-axis. I added a wall BC in the middle of the domain and the flow is supposed to separate at that point. This case is not very realistic but the main idea was to have periodic boundaries with points on the axis of rotation. The domain and the boundary conditions are similar to what we typically have when solving turbine blades. I wasn't sure if I can share the geometry, so I made this dummy test case. This case diverges with the develop branch. The image is from an intermediate result using the fix.; ![sample_test_case_fix](https://user-images.githubusercontent.com/28007882/70721921-b4425500-1cf6-11ea-829c-7d91ca8bb1ef.jpeg). A quick way to verify if the nodes are matched properly is to check the velocity on the nodes that lie on the axis of rotation. Due to the periodicity constraint, the velocities must be aligned with the axis (here the Z-axis) which can be seen here as well. ![vel](https://user-images.githubusercontent.com/28007882/70722647-eef8bd00-1cf7-11ea-9b25-971f9718e151.jpeg). ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [ X] I am submitting my contribution to the develop branch.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/840:101,rout,routine,101,https://su2code.github.io,https://github.com/su2code/SU2/pull/840,3,['rout'],['routine']
Integrability,"## Proposed Changes. This is an attempt to add some unit testing for the geometry structure that checks all routines necessary to construct it. I know that I stretch the term ""unit test"" a little bit here, but because of the structure of the code, its not possible to implement small, independent tests ... but this is the closest we can get to a real unit testing framework I think. With this approach it is not possible to run tests in a random order for example, but at least the order in one translation unit is fixed by default anyway.; ; I added a basic, reusable setup which is based on the box mesh reader that can be included in other tests. . ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [x] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1012:108,rout,routines,108,https://su2code.github.io,https://github.com/su2code/SU2/pull/1012,1,['rout'],['routines']
Integrability,"## Proposed Changes. This is, for now, a brief note on @joshkellyjak 's and my WIP on a discrete adjoint functionality for multizone (multi-stage, multi-row) turbomachinery cases. We intend to realize everything through the native multizone discrete adjoint solver, though some turbo-specific problems need to be resolved. This will, probably, involve further additions/corrections/cleanups around the mixing plane interface so that it is recorded properly. The current recording seems to still be not fully correct. ## Related Work. None, so far.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2317:415,interface,interface,415,https://su2code.github.io,https://github.com/su2code/SU2/pull/2317,1,['interface'],['interface']
Integrability,"## Proposed Changes. This pull request is two related changes:. 1. While ""fixing"" the NTS central/upwind blending function in PR #532, I accidentally introduced a bug. Some steps in the calculation were repeated twice. The main purpose of this pull request is to remedy the bug.; 2. I moved the calculation of the maximum cell width to the `CPhysicalGeometry` class. This makes inclusion in the central/upwind blending easier. For DES and DDES, the cell lengthscale is not dependent on the flow. So there's no need to compute it every iteration in the flow solver.; . ## Related Work. This is a subset of the changes originally proposed in PR #552. The discussion and validation there still apply here. This pull request is not a new set of changes, but rather a smaller portion of PR #552. ## PR Checklist. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [x] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/577:473,depend,dependent,473,https://su2code.github.io,https://github.com/su2code/SU2/pull/577,1,['depend'],['dependent']
Integrability,"## Proposed Changes. To satisfy the code standard in SU2. Refactorization of method names in Output family class methods to CamelCase. . Will follow up with other class families. Depends on #1985, can be merged after. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [ ] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [ ] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1987:179,Depend,Depends,179,https://su2code.github.io,https://github.com/su2code/SU2/pull/1987,1,['Depend'],['Depends']
Integrability,"## Proposed Changes. While ""fixing"" the NTS central/upwind blending function in PR #532, I accidentally introduced a bug. The main purpose of this pull request is to remedy the bug. There's also three other related efforts:. 1. I moved the calculation of the maximum cell width to the `CPhysicalGeometry` class. This makes inclusion in the central/upwind blending easier. For DES and DDES, the cell lengthscale is not dependent on the flow. So there's no need to compute it every iteration in the flow solver.; 2. I also changed the FD blending function to be consistent with both published literature and the NTS blending. Before, `Roe_Dissipation = 0` meant an upwind scheme for the FD blending function but a central scheme for the NTS blending function, and vice versa for `Roe_Dissipation = 1`. By switching the FD blending function, the code is more consistent and cleaner.; 3. I proceeded with a basic verification of the implementation. I'll follow up later with another comment listing the verification details. ## Related Work. Previous PR: #532 . ## PR Checklist. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [x] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/552:418,depend,dependent,418,https://su2code.github.io,https://github.com/su2code/SU2/pull/552,1,['depend'],['dependent']
Integrability,"## Proposed Changes. build-su2-cross should extend from build-su2 Docker image to use the same GCC version. . Failed build: https://github.com/su2code/SU2/runs/7125551739?check_suite_focus=true. The PR is draft because it depends on the build of https://github.com/su2code/Docker-Builds/pull/7. ## Related Work. https://github.com/su2code/SU2/pull/1619 - Updates Ubuntu to 20.04 and GCC from 7.x to 9.x. . ## PR Checklist. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [X] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1693:222,depend,depends,222,https://su2code.github.io,https://github.com/su2code/SU2/pull/1693,1,['depend'],['depends']
Integrability,"## Proposed Changes; * Fix `mpi4py` include directories when it is installed in python user directory.; * Fix `mkl` dependency when it is installed outside a master directory such as when installing from Ubuntu PPA.; . ## Related Work; Fixes #823. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [x] My contribution is commented and consistent with SU2 style.; - [x] I have added a test case that demonstrates my contribution, if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/826:116,depend,dependency,116,https://su2code.github.io,https://github.com/su2code/SU2/pull/826,2,['depend'],['dependency']
Integrability,"## Proposed Changes; *Give a brief overview of your contribution here in a few sentences.*. - add frequency for each filename in OUTPUT_FILES: ; ` OUTPUT_WRT_FREQ= 10, 100, 50`. - for dual timestepping, write only the restart files twice (for timestep n and n-1) and not the visualisation files.; - history output accepts fields; - marker_inlet does not need normalized vectors (removed the error message). ```diff; - DONE; The suggestion was to just extend the OUTPUT_WRT_FREQ instead of introducing a new keyword VOLUME_OUTPUT_FREQUENCIES. . ```. ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*; #1495 ; #1539 ; #1493 . ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1552:397,message,message,397,https://su2code.github.io,https://github.com/su2code/SU2/pull/1552,1,['message'],['message']
Integrability,"## Proposed Changes; *Give a brief overview of your contribution here in a few sentences.*. Using the python interface to modify the config file, it may happen that the temporary config file is accessed at once by multiple SU2 runs, leading to io conflicts. Thus, the name of the temporary file should not be hard-coded. This bugfix simply adds a '_tmp' to the original config file name. ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [ ] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1576:109,interface,interface,109,https://su2code.github.io,https://github.com/su2code/SU2/pull/1576,1,['interface'],['interface']
Integrability,"## Proposed Changes; *Give a brief overview of your contribution here in a few sentences.*; 1. arrays in gettriangle need to be size 2 instead of 3; 2. error message that checks species clipping only checks if the keyword is present, not if clipping is on; 3. added setblock_zero ""per-species"" to CSysVector (added here to reduce the mega-PR for the flamelet model); 4. fix speling eror. ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [X] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1761:158,message,message,158,https://su2code.github.io,https://github.com/su2code/SU2/pull/1761,1,['message'],['message']
Integrability,"## Proposed Changes; *Give a brief overview of your contribution here in a few sentences.*; ; Adapting and fixing mixing density model when species transport equations are being solved.; The species dependent properties will be added in 3 PRs:; 1/3 : mixture density model (this PR); 2/3 : mixture viscosity + heat capacity; 3/3 : mixture mass diffusivity + thermal conductivity. ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*; Mark Heimgartner implemented the MIXTURE_FLUID model during his master thesis at Bosch. In this pull request, we aim to adapt his implementation to the latest version of develop branch, fixing some implementations that we think were causing numerical issues in his original implementation. EDIT: Here, the mixture density will be implemented, based on the ideal gas law (computing mixture molecular weights). ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X ] I am submitting my contribution to the develop branch.; - [ X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [ X] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1620:199,depend,dependent,199,https://su2code.github.io,https://github.com/su2code/SU2/pull/1620,1,['depend'],['dependent']
Integrability,"## Proposed Changes; *Give a brief overview of your contribution here in a few sentences.*; ; Adds ParaView binary output (legacy format) in both serial and parallel with MPI IO. Activate by setting OUTPUT_FORMAT= PARAVIEW_BINARY. Binary VTK files are now written when running SU2_CFD in parallel, so SU2_SOL is not required to get these files. ~~ParaView binary requires writing data in big endian. A header from the public domain that helps with the portability of endian conversion routines has been added and documented in externals/endian/.~~. ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. N/A. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [x] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/562:485,rout,routines,485,https://su2code.github.io,https://github.com/su2code/SU2/pull/562,1,['rout'],['routines']
Integrability,"## Proposed Changes; *Give a brief overview of your contribution here in a few sentences.*; ; Adds an interface to SU2_DOT_AD for volume -> surface sensitivity projection. New option to write out sensitivities at each surface vertex to a generic ASCII file for use with an external parameterization. Includes some minor code clean up and fixes some compiler warnings. ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. N/A. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [x] My contribution is commented and consistent with SU2 style.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/625:102,interface,interface,102,https://su2code.github.io,https://github.com/su2code/SU2/pull/625,1,['interface'],['interface']
Integrability,"## Proposed Changes; *Give a brief overview of your contribution here in a few sentences.*; ; Separates all classes related to the fluid properties and moves them to a new folder. Also cleans up and refactors some of the classes. For example, the viscosity and conductivity classes are now pure abstract classes (interfaces). I have moved them to a folder named thermophysical/, which makes sense given the current contents (equations of state and transport properties), but once we add chemistry and more advanced models, I am not sure this will make sense. @CatarinaGarbacz, since you are going to be working this area, is there a name you would prefer?. p.s. in a future pass, there is room for improvement in the current CFluidModel class. I think it is best practice not to use the type of implementation inheritance found there. Instead, the EoS classes could be given a dedicated interface class and moved inside the CFluidModel class (just like the viscosity and conductivity classes). Then, the CFluidModel class can simply be a composition of those classes (with no data members) and serve back their data to the client. ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. #583 . ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [x] My contribution is commented and consistent with SU2 style.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1010:313,interface,interfaces,313,https://su2code.github.io,https://github.com/su2code/SU2/pull/1010,2,['interface'],"['interface', 'interfaces']"
Integrability,"## Proposed Changes; *Give a brief overview of your contribution here in a few sentences.*; ; This PR changes the convergence criteria for mesh deformation with SU2_DEF. The existing tolerance is related to the smallest cell in the grid, but this results in a criteria that depends on the grid scale and can be hard to tune. Instead, we switch to a standard relative residual reduction criteria for the linear solver during deformation, which brings it in line with other solvers. The change will break existing config files with 'DEFORM_TOL_FACTOR', so a clear error message has been added informing users of the change. Changes to the su2code.github.io repo for the tutorial configs need to be merged simultaneously. ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. N/A. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [x] My contribution is commented and consistent with SU2 style.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/623:274,depend,depends,274,https://su2code.github.io,https://github.com/su2code/SU2/pull/623,2,"['depend', 'message']","['depends', 'message']"
Integrability,"## Proposed Changes; *Give a brief overview of your contribution here in a few sentences.*; ; This PR contains a new routine to compute 3 mesh quality metrics (similar to what you may find in commercial codes): orthogonality angle, cell aspect ratio, and cell volume ratio. It replaces an old routine that was not being used. Note that this is for the **dual control volumes of the finite volume solver** (not the primal elements), so the values are vertex-based. The min & max of the 3 metrics are reported to the console during preprocessing, and if you would like the fields to be written to the viz. files, you can use . ```; WRT_MESH_QUALITY= YES; ```. For now, it is just for sanity checks. In the future, we can use this as an optimization objective/constraint, for automatically improving grids (r-adaptation), or as part of advanced limiters/numerical methods. ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [x] My contribution is commented and consistent with SU2 style.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/778:117,rout,routine,117,https://su2code.github.io,https://github.com/su2code/SU2/pull/778,2,['rout'],['routine']
Integrability,"## Proposed Changes; *Give a brief overview of your contribution here in a few sentences.*; ; This PR contains the following:; - A new fluid model for incompressible ideal gas with variable Cp via polynomial fit as Cp(T) : b0 + b1.T + b2.T^2 + b3.T^3 + b4.T^4 where the user specifies b coefficients.; - Polynomial viscosity model (incompressible only) with Mu(T) : b0 + b1.T + b2.T^2 + b3.T^3 + b4.T^4 (user specifies b's).; - Polynomial laminar thermal conductivity model (incompressible only) with Kt(T) : b0 + b1.T + b2.T^2 + b3.T^3 + b4.T^4 (user specifies b's).; - New option for TURBULENT_CONDUCTIVITY_MODEL, which is CONSTANT_PRANDTL_TURB by default, but gives flexibility for more options in the future. This was not exposed before, which can be dangerous, depending on the choice of laminar conductivity model. Now, any of the laminar models can still include the effect of turbulence on heat transfer with a constant turbulent Prandtl number, or it can be deactivated.; - A few fixes for FFD parameterization, including ParaView output and handling of symmetry planes. The polynomial models have only been added to the incompressible solver to start. However, one could activate them in the compressible solver(s) too, since they are in the shared fluid/transport model classes. A cylinder test case has been added for the polynomial fluid models. ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. N/A. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [x] My contribution is co",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/624:766,depend,depending,766,https://su2code.github.io,https://github.com/su2code/SU2/pull/624,1,['depend'],['depending']
Integrability,"## Proposed Changes; *Give a brief overview of your contribution here in a few sentences.*; ; This PR integrates the DG-FEM solver in the develop branch. Although still under development this solver is now in a state where other people can start to contribute, if desired. Furthermore, additional functionalities in terms of searching and interpolating are present in the DG solver that can also be used for the FV solver. Especially a true wall distance search instead of a point search to the nearest node on the wall would be possible. ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. N/A. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [ X] I am submitting my contribution to the develop branch.; - [ X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [ X] My contribution is commented and consistent with SU2 style.; - [ X] I have added a test case that demonstrates my contribution, if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/565:102,integrat,integrates,102,https://su2code.github.io,https://github.com/su2code/SU2/pull/565,1,['integrat'],['integrates']
Integrability,"## Proposed Changes; *Give a brief overview of your contribution here in a few sentences.*; ; This is one for v7 and needs some testing. This PR contains a complete refactoring of the point-to-point MPI infrastructure and an entirely new implementation of the periodic BC for the FV solvers. For the MPI refactoring:; - All calls are abstracted to parent classes (geometry, solver, matrix), meaning we will remove all Set_MPI_* routines.; - Point-to-point comms are all non-blocking calls that have been separated into InitiateComms() & CompleteComms(), so that, in theory, they can be overlapped with computation where possible. It would also be possible now to group the comms into larger messages easily. These optimizations are a next step (not for this PR).; - Persistent communication schedules and memory are used throughout the calculation.; - Results are the same, this is just a refactoring to improve performance, scalability, etc. while making the code much simpler and separating the periodic part. For the periodic BC:; - No longer need a preprocessing with SU2_MSH - use the original grid and just call SU2_CFD.; - Adjacent periodic faces are now possible, e.g., triply-periodic cube.; - Concept is now based on completing the residuals from partial control volumes on either side of a periodic face instead of creating extra halo cells.; - All periodic comms have been separated from the MPI point-to-point comms and are performed first for consistency. In a follow-up PR, I will remove many lines of code that are no longer needed (all Set_MPI_* routines, many outdated geometry routines, etc.). ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. ~~I could use some help with testing this one, in particular the rotational periodicity, which might still need some changes. Unfortunately, I do not have the original meshes for the periodic cases in the repo that are failing (other than P",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/652:428,rout,routines,428,https://su2code.github.io,https://github.com/su2code/SU2/pull/652,2,"['message', 'rout']","['messages', 'routines']"
Integrability,"## Proposed Changes; *Give a brief overview of your contribution here in a few sentences.*; This PR introduces a tabulated chemistry approach. The focus for this PR is on laminar and premixed flames in the incompressible framework, but it is generalizable to non-premixed and partially premixed flames, turbulent flames and compressible flames. ; In this approach, 2 transport equations are solved for progress variable and total enthalpy. The lookup table retrieves quantities (temperature, density, viscosity, diffusivity, source terms, etc) as a function of these independent control variables. 2 additional independent transport equations are solved for the species NO and CO. ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. ## Nijso Checklist; - [ ] Replace bloated initialization (burnt and unburnt region) with python wrapper; - [ ] Check Conjugate Heat Transfer; - [ ] Check adjoint optimization workflow; - [x] Check axisymmetric setup; - [x] Check diffusivity; - [x] Check primal restart; - [x] Check adjoint restart; - [x] Adjoint comparison with FD. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [ ] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1826:925,wrap,wrapper,925,https://su2code.github.io,https://github.com/su2code/SU2/pull/1826,1,['wrap'],['wrapper']
Integrability,"## Proposed Changes; *Give a brief overview of your contribution here in a few sentences.*; This is a small update of the lookup table routines to prepare for the implementation of the flamelet model. A bug was fixed and the header file definition changed (keywords in sentences are capitalized). Some small textual changes were made. ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*; related to the upcoming PR for feature_new_flamelet. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [x] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1792:135,rout,routines,135,https://su2code.github.io,https://github.com/su2code/SU2/pull/1792,1,['rout'],['routines']
Integrability,"## Proposed Changes; *Give a brief overview of your contribution here in a few sentences.*; when using an inlet profile, and the inlet profile does not exist, SU2 will write a profile for you. When you do this when using mpi, this sometimes fails, depending on the number of ranks. This PR fixes the issue. ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*; #1767 . ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [x] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1786:248,depend,depending,248,https://su2code.github.io,https://github.com/su2code/SU2/pull/1786,1,['depend'],['depending']
Integrability,"## Proposed Changes; - Added non-polytropic Peng-Robinson (NPPR_GAS) equation of state (CP temperature dependant model): the specific heat ratio is not constant but a polynomial model (CP = n0 + n1T + n2T^2 +n3T^3 + n4T^4) can be specified for the specific heat via the input file option (CP_POLYCOEFFS). - The NPPR fluid model uses the polytropic Peng-Robinson fluid model as a base class. Therefore, the polytropic Peng-Robinson class now allows for inheritance. - New test case (TestCases/nicfd/edge_NPPR) to compare the results of the NPPR with a constant CP model (CP = n0) and the polytropic Peng-Robinson models. The results of both simulations for this test case are equivalent. ## Related Work; - The polytropic Peng-Robinson remains functionally unchanged. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1718:103,depend,dependant,103,https://su2code.github.io,https://github.com/su2code/SU2/pull/1718,1,['depend'],['dependant']
Integrability,"## Proposed Changes; - Fixes the adjoint residual computation for multizone cases (which was wrong on first inner iterations due to cross term extraction).; - Fixes (hopefully for good) discadj FEA solutions when INCREMENTAL_LOAD=YES (left over from #933); - Add relaxation to CDiscAdjSolver via option RELAXATION_FACTOR_ADJOINT, that replaces the old RELAXATION_FACTOR_ADJFLOW . I found this to be necessary for adjoint FSI problems, the adjoint of the interpolation matrix (and therefore the cross terms) are not smooth which makes convergence more difficult. In version 6 this was achievable via the old options RELAXATION_FACTOR_FLOW/TURB.; - Adds OpenMP directives to the CFL adaptation routine (a ""todo"" from #861), restricts the Min/Max/Avg CFL calculation to the fine grid (which will change the output but not the solution). ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/950:692,rout,routine,692,https://su2code.github.io,https://github.com/su2code/SU2/pull/950,1,['rout'],['routine']
Integrability,"## Proposed Changes; 1 - Generalize the conservative interpolation approach for the following interpolation schemes:; NEAREST_NEIGHBOR, ISOPARAMETRIC, and RADIAL_BASIS_FUNCTION; The therefore redundant CONSISTCONSERVE option can be recovered with:; KIND_INTERPOLATION= ISOPARAMETRIC; CONSERVATIVE_INTERPOLATION= YES; If you guys think the conservative option also makes sense for the WEIGHTED_AVERAGE (sliding mesh) scheme I will put that in too (I am not familiar so left it alone). 2 - In CTransfer_FlowTraction, if not matching mesh and not conservative interpolation:; Compute the donor variables as stresses instead of forces;; Integrate the target variables on the structural side before transferring them. 3 - Removed a bit of code duplication in transfer_physics.cpp while I was there. I have yet to test this for the FSI adjoint but for the direct problem it looks ok. ## Related Work; #596 . ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is commented and consistent with SU2 style.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/597:633,Integrat,Integrate,633,https://su2code.github.io,https://github.com/su2code/SU2/pull/597,1,['Integrat'],['Integrate']
Integrability,"## Proposed Changes; ; The visc_numerics' coordinates were often set to the coordinates; of the boundary vertex and its closest normal neighbour. Setting; them to the boundary vertex and the reflection of the closest; normal neighbour at the vertex is more systematic however.; Normally this should not change much, because the boundary numerics; do not apply gradient correction, so they only depend on the; distance between Coord_i, Coord_j. ## Related Work; #1185 . ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X ] I am submitting my contribution to the develop branch.; - [X ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [X ] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1189:394,depend,depend,394,https://su2code.github.io,https://github.com/su2code/SU2/pull/1189,1,['depend'],['depend']
Integrability,"## Proposed Changes; @patelha57 @aa-g @Nicola-Fonzi @bigfooted ; I'm proposing this as the way to interact with volume fields via the python wrapper.; We create a matrix view (does not copy data) into the coordinates, solution, primitives, etc. which then allows point-wise or row-wise access to the data (read or write). We can extend it to also expose derivative information.; For example:; ```python; coords = driver.Coordinates(); print(coords(iPoint, 1)) # read a value; coords.Set(iPoint, (x, y, z)) # write a row; coords.Set(iPoint, 0, coords.Get(iPoint, 0)) # set a value and different way of reading a value. solversIndices = driver.GetSolverIndices() # maps solver names to our solver integers, similar to what we do with markers; solution = driver.Solution(solverIndices[""C.FLOW""]) # same object type as coords. primitiveIndices = driver.GetPrimitiveIndices() # maps primitive names to their indices.; temperatureIndex = primitiveIndices[""TEMPERATURE""]; primitives = driver.Primitives(); print(primitives(iPoint, temperatureIndex)); ```. ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [X] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1938:141,wrap,wrapper,141,https://su2code.github.io,https://github.com/su2code/SU2/pull/1938,1,['wrap'],['wrapper']
Integrability,"## Proposed Changes; A draft PR for creating self-registering classes with a factory.; The class (CEulerSolver implemented) that wants to register to a factory (CSolverFactory implemented) should:; - Inherit from DBMember template class (new, only handles automatic-registration).; - Provide a ""GetName()"" member method which returns the registered name as a string.; - Provide a ""CreateMethod()"" member with specific signature. This function should handle the full-creation of the object (For CEulerSolver, it makes a pointer and runs Preprocessing on it). The factory class must provide a Register() method that accepts the to-be registered class's name and a pointer to its creation method with the specific signature mentioned above. These design constraints are all enforced in DBMember but no checks where made for now. Instead of meddling with member functions of CSolverFactory, I chose to create the test solver (EULER) directly in CDriver. ### Results so far; 1. Solver gets instantiated successfully, the solver preprocessing phase passes with no problems; 2. When the program gets to integration preprocessing, it fails with out_of_range exception. But that's to be expected as no solver metadata is tracked for the newly created solver yet :). Again, testing on the ""Inviscid bump in a channel"" case. ## Related Work; This PR extends the work on #1058 . ## PR Checklist. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [ ] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1062:1096,integrat,integration,1096,https://su2code.github.io,https://github.com/su2code/SU2/pull/1062,1,['integrat'],['integration']
Integrability,"## Proposed Changes; Add the Kenway-Martins separation sensor for buffet-onset detection (see [doi.org/10.2514/1.J055172](https://doi.org/10.2514/1.J055172) for details). Config options include:. 1. BUFFET_MONITORING= YES will compute; a. The sensor value (between 0 and 1) on NS marker vertices, stored in CNSSolver as Buffet_Sensor; b. The integral of the sensor values normalized by reference area (percent of reference area over which separation occurs), stored in CNSSolver as Buffet_Metric (per-surface) and Total_Buffet_Metric; 2. BUFFET_K and BUFFET_LAMBDA specify the sharpness and offset of the Heaviside function used to compute the nodal sensor value; 3. Objective function option BUFFET, which uses the integrated metric as a cost function; . ## Related Work; N/A. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/614:716,integrat,integrated,716,https://su2code.github.io,https://github.com/su2code/SU2/pull/614,1,['integrat'],['integrated']
Integrability,"## Proposed Changes; Add the `Wtime` function to the MPI wrapper (to avoid `#ifdefs`). ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/943:57,wrap,wrapper,57,https://su2code.github.io,https://github.com/su2code/SU2/pull/943,1,['wrap'],['wrapper']
Integrability,"## Proposed Changes; Added CMake build support for SU2. With this, many popular IDEs will be able to use SU2 as a project with minimal setup. CMake also enables to add dependencies more easily since most libraries have CMake support. `vcpkg` is great for the libraries available there. SU2 CMake has the same build options as autotools but uses CMake to find system libraries and compilers (MKL, Mutationpp, MPI and Python currently). No longer need to specify paths to compilers/libraries if they are in standard locations. In addition, compile flags can be modified from CMake. There is no need to use `preconfigure.py` anymore since downloading/unpacking is handled by CMake and is system-agnostic. At the moment, all library targets are static but that could be easily changed to be configurable from CMake. The installation directory is `${CMAKE_PREFIX_PATH}/bin`. Similarly to autotools, some build options are disabled if built with Codi forward/reverse datatypes or without MPI. Note that SWIG fails to compile `pySU2ad` with `Nothing known about namespace 'medi'` in `Common/include/mpi_structure.hpp:57` without `-includeall` SWIG option but then it takes forever to generate the wrapper (more than 15 minutes on my machine, stopped early). I suggest removing `using namespace` declarations and either importing used symbols explicitly with `using` or prepending namespace name, `clang-tidy` warns against them and it makes the code clearer. SU2 CMake options are:; * Build modules:; * `SU2_BUILD_CFD`: `ON|OFF`; * `SU2_BUILD_DEF`: `ON|OFF`, disabled when building with Codi; * `SU2_BUILD_DOT`: `ON|OFF`, disabled when building with Codi forward; * `SU2_BUILD_GEO`: `ON|OFF`, disabled when building with Codi; * `SU2_BUILD_MSH`: `ON|OFF`, disabled when building with Codi; * `SU2_BUILD_PY_WRAPPER`: `ON|OFF`, disabled when building with Codi forward; * `SU2_BUILD_SOL`: `ON|OFF`, disabled when building with Codi; * Enable modules:; * `SU2_ENABLE_CGNS`: ; * `SU2_CGNS_CPPFLAGS`: flags to pas",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/814:168,depend,dependencies,168,https://su2code.github.io,https://github.com/su2code/SU2/pull/814,1,['depend'],['dependencies']
Integrability,"## Proposed Changes; Added a dry run mode (can be enabled by adding -d as flag to the SU2_CFD binary). If this mode is enabled, all of the expensive geometrical preprocessing steps are skipped and no solver is started, but all other steps during the driver construction are executed. This is great to check whether the setup is sane and the physical settings are correct without having to wait until the mesh is read and the partitioning is done. For the implementation I created a dummy geometry class with zero elements and points and a dummy driver which does essentially nothing. Initially I thought it would be more work, but apparently it almost worked out of the box. I also added a table output during the solver preprocessing for the DG solver. Furthermore I moved parts of the Input_Preprocessing() routine dealing with the geometry to the Geometrical_Preprocessing() routine where it should belong. The changes in SU2_CFD.cpp look more complicated then they are. Just hide white space changes. ## Related Work. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [x] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/734:809,rout,routine,809,https://su2code.github.io,https://github.com/su2code/SU2/pull/734,2,['rout'],['routine']
Integrability,"## Proposed Changes; Added files; - README which explains the files and why they are there; - cfg files which contain notes how to be changed for primal/findiff and serious adjoint run; - findiff.py FADO script for finite differences; - postprocess.py to compare the gradients of DA and FD (only screen output); - gmsh .geo file with which the mesh was created. parallel_reg_AD will fail until the [Testcases PR 63](https://github.com/su2code/TestCases/pull/63) is merged. ## Related Work; Depends on #1260 and contains all of those changes (i.e. best reviewed after that is merged .. or just look at the last commit :) ). Meant to be merged shortly after but before #1284 to have an additional safeguarded case. . ## PR Checklist. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.; - [x] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1288:490,Depend,Depends,490,https://su2code.github.io,https://github.com/su2code/SU2/pull/1288,1,['Depend'],['Depends']
Integrability,"## Proposed Changes; Adding the new solver NEMO to the develop branch. The NEMO solver concerns the simulation of hypersonic flows, accounting for thermal nonequilibrium and finite-rate chemistry, following Park's 2Temperature model. The system of equations to solve is the conservation of each chemical species mass, momentum, total energy and vibrational energy. Both inviscid and viscous simulations are available, respectively, solver NEMO_EULER and NEMO_NAVIER_STOKES. Most of the changes consisted in the addition of new files (listed below), and all the necessary changes in the high-level classes (drivers, integration, config).; ; new files concerning this solver:; output/CNEMOCompOutput.cpp; variables/CNEMOEulerVariable.cpp; variables/CNEMONSVariable.cpp; solvers/CNEMOEulerSolver.cpp; solvers/CNEMONSSolver.cpp; numerics/NEMO/convection/lax.cpp; numerics/NEMO/convection/roe.cpp; numerics/NEMO/convection/ausm.cpp; numerics/NEMO/convection/ausmplusup2.cpp; numerics/NEMO/convection/ausmpwplus.cpp; numerics/NEMO/convection/msw.cpp; numerics/NEMO/NEMO_diffusion.cpp; numerics/NEMO/NEMO_sources.cpp. Future/ongoing work is looking into making use of the CFluidModel class , introducing a new child class CNEMOGas to handle all mixture/thermodynamics/transport/chemistry related computations - follwing the generic SU2 structure. ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [x] My contribution is commented and consistent w",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1014:615,integrat,integration,615,https://su2code.github.io,https://github.com/su2code/SU2/pull/1014,1,['integrat'],['integration']
Integrability,"## Proposed Changes; Addition and cleanup of isothermal catalytic wall boundary, integration with rest of code. Code optimization of catalytic wall routines, removal of array allocations. Submitting this draft PR primarily to get comments on approach, style, not looking to PR into develop quite yet. ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1417:81,integrat,integration,81,https://su2code.github.io,https://github.com/su2code/SU2/pull/1417,2,"['integrat', 'rout']","['integration', 'routines']"
Integrability,"## Proposed Changes; Allow for conjugate heat transfer between solid domains and the modeling of contact resistance. . ## Related Work. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] Configuration option for contact resistance at interfaces.; - [x] Communicate contact resistance values between config and CInterface.; - [x] Test grid independence of contact resistance model.; - [x] Test case with both solid-solid and solid-fluid.; - [x] Add test case to regression tests.; - [x] Update documentation.; - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [X] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [X] I used the pre-commit hook to prevent dirty commits and used `pre-commit run --all` to format old commits.; - [x] I have added a test case that demonstrates my contribution, if necessary.; - [x] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2152:446,interface,interfaces,446,https://su2code.github.io,https://github.com/su2code/SU2/pull/2152,1,['interface'],['interfaces']
Integrability,"## Proposed Changes; Another snapshot from #824.; All major routines of CFEASolver (and by association CMeshSolver) now use OpenMP directives.; Parallelization is at the level of each individual routine, i.e. threads are ""started"" locally.; This required avoiding the use of small auxiliary array member variables, as that is not thread safe (multiple threads cannot write to the same location) In doing that I ended up doing some cleanup and so I thought it would be better to move the files, strip spaces, etc., it should make the review easier actually.; I will document to the major changes below. ## Related Work; #824 #789 ; Depends on #834 and #830. ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/843:60,rout,routines,60,https://su2code.github.io,https://github.com/su2code/SU2/pull/843,3,"['Depend', 'rout']","['Depends', 'routine', 'routines']"
Integrability,"## Proposed Changes; As proposed in #685, this introduces the [meson](https://mesonbuild.com/index.html) and ninja build system to eventually replace autotools and make. A [lot of bigger projects](https://mesonbuild.com/Users.html) already use that system (e.g. GNOME, systemd ...) or are transitioning. Compared to autotools and make, building the code should be faster, especially if you build with more cores, as all objects files are build truly in parallel (with make only objects of the same target are build in parallel). Another advantage is that meson has multiplatform support for linux, mac and windows. . ### Why not cmake ?; Meson files are much easier to read and in general it is much better to maintain. Furthermore it has a great documentation. Finally, meson has no dependencies apart from python and we can easily ship it (as a submodule) since it needs no installation/compilation. . ### What is ninja ?; ninja is a replacement for make and is used to execute the compiler and to resolve dependencies. Meson uses ninja as the default backend. So instead of using configure + make, we use meson + ninja. As with meson, we can ship it as a submodule. It needs a compilation, but again it has no dependencies apart from python. ### How to use ?; The correct meson and ninja versions are added as git submodules. So in case you don't have meson and ninja installed (there should be packages available for all major distros), compile ninja using:. ```; cd externals/ninja; ./configure.py --bootstrap; cd ..; export PATH=$PWD/externals/ninja:$PWD/externals/meson:$PATH; ```; and run meson using; ```; meson.py build --prefix=$PWD -Denable-pywrapper=true -Denable-autodiff=true; ```; to ocnfigure SU2 with the python wrapper and AD support enabled. MPI support will be enabled by default if a proper mpi installation can be found. ; Finally compile the code with; ```; ninja -C build; ```. - ""build"" in the commands above is a folder where the configuration will be stored. You can config",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/745:784,depend,dependencies,784,https://su2code.github.io,https://github.com/su2code/SU2/pull/745,2,['depend'],['dependencies']
Integrability,"## Proposed Changes; Collection of improvements to fix SU2 bugs:; - Inconsistency between NO_DEFORMATION (index 24) and NONE (index = 0). I have updated and sorted the numbering of the design variables and set NO_DEFORMATION to index 0 (for consistency with the rest of the code).; - SU2_GEO was not working properly for 2D cases and the wing slicing routine was extremely expensive for the AD.; - VISUALIZE_DEFORMATION was very expensive and not useful, I have divided VISUALIZE_DEFORMATION between surface VISUALIZE_SURFACE_DEF and volume VISUALIZE_VOLUME_DEF.; - The actuator disk was not working properly when a pressure ratio (total pressures) was prescribed (the restart was not working either).; - The FFD twist design variable was not working properly. ## Related Work; This commit resolves the issues (bugs) described above without adding any extra capabilities to the software. It should be approved as soon as possible because some of the changes directly impact most of the the user's community. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test case that demonstrates my contribution, if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/563:351,rout,routine,351,https://su2code.github.io,https://github.com/su2code/SU2/pull/563,1,['rout'],['routine']
Integrability,"## Proposed Changes; Compute Green-Gauss gradients and limiters via a point-loop (like we do for Least Squares), in the limit this allows one thread per point of parallelization. Parallel regions are started inside the functions and again only the master thread calls MPI routines. Move these routines out of CSolver and make them general to reduce code duplication (compressible/incompressible, solution/primitives), and to improve test-ability (if key areas of the code depend less on large objects we can more easily treat them as units). Introduce a way to create different limiters by defining small details like the limiter function (and its associated constants), or any geometry-based modification. I don't seem to have ""hard"" failures in the regressions but I need to run tests, especially for periodic cases as I had to change the ""communication model"" for the min / max computed for limiters.; I will start documenting anyway. ## Related Work; #789 #824 ; Depends on #830. ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/834:272,rout,routines,272,https://su2code.github.io,https://github.com/su2code/SU2/pull/834,4,"['Depend', 'depend', 'rout']","['Depends', 'depend', 'routines']"
Integrability,"## Proposed Changes; Dear all, in this PR there are few modification related to the new fsi interface in python, namely:; * A different treatment for imposed motions. This is actually a first step towards an automatic identification of the aerodynamic transfer functions for state-space models.; * Some changes in the outputs; * The introduction of a test case for this feature. Regarding the last point, I am having issues trying to understand how to appropriately set up the regression. In particular, the fsi interface needs two additional packages to run (libspatialindex and petsc) with their counterparts in python (rtree and petsc4py). @pcarruscag suggested me to add the apt-get lines in the regression.yml file, but I am really not sure where to place them and I do not want to mess it up. ; Further, the files in the tutorial folder cannot be used for this scope. Indeed, in the tutorial, there are the cfg files that can be used to reproduce the same behaviour predicted by the theory of Theodorsen. However, in order to do so, some iterations of fluid only simulation must be performed before the coupling. This takes time so I prepared a test case where the two solvers (fluid and structure) are coupled from the beginning. Unfortunately, the mesh is ignored by git in the TestCase folder, so I am not sure how to make it run. I would really appreciate if you could help me with this last point.; ; ## Related Work; #1124 . ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [X] My contribution is commented and consistent with SU2 s",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1148:92,interface,interface,92,https://su2code.github.io,https://github.com/su2code/SU2/pull/1148,2,['interface'],['interface']
Integrability,"## Proposed Changes; Dear all,. Here are some updates for the python fsi interface. Namely:. - Better use of mpi4py, using always numpy array (more computationally efficient); - Fix of the restarted coupled simulation; - Automatic use of default values, in case of wrong inputs; - Introduction of a sort of dry run, which actually prints out the mapped modes and the normals of the aerodynamic surface mesh. This is yet another step towards the automatic creation of ROM from aerodynamic response; - Fix of small bugs. ## PR Checklist. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [X] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1357:73,interface,interface,73,https://su2code.github.io,https://github.com/su2code/SU2/pull/1357,1,['interface'],['interface']
Integrability,"## Proposed Changes; Enable time integration by the explicit Euler scheme for e.g. turbulence solvers, by implementing ``CScalarSolver<>::ExplicitEuler_Iteration``. ## Related Work; This fixes #1432 with respect to explicit Euler. I need the feature for further investigation of #1414. ``CScalarSolver`` was introduced in #1330. . ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.; - [x] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1435:33,integrat,integration,33,https://su2code.github.io,https://github.com/su2code/SU2/pull/1435,1,['integrat'],['integration']
Integrability,"## Proposed Changes; Extend the MPI+Threads framework to CEulerSolver, CNSSolver and the CTurb***Solver(s).; I can finally start showing what this effort is about in pictures, this is how the relatively small benchmark case from #716 scales on Imperial's cluster:; ![image](https://user-images.githubusercontent.com/38071223/73931463-410d2780-48d0-11ea-855e-8dc87be153f1.png); **C** is for cores, **R** for MPI ranks, and **T** for OpenMP threads per rank. It may not look like much close to the ideal scaling but on 192 cores there are only 2.7k cells per core, and at different level of ""hybridisation"" this is what you get:; ![image](https://user-images.githubusercontent.com/38071223/73931985-3bfca800-48d1-11ea-8676-acef927a1ab5.png). As mentioned in #789 this behaviour is due to the worse quality / quantity of coarse grids that can be generated as the domain is decomposed further and further. **EDIT**; This is **finished for now**, apart from the odd routine that I will document below (and all the boundary conditions) every method called in `SingleGrid_Iteration` and `MultiGrid_Iteration` (including prolongations, smoothings and whatnot) is hybrid parallel.; Threads are started in those functions which means that for a RANS case we enter parallel regions only twice per iteration, this should give minimal overhead, I will update the scalability results once they converge (statistically :) ). I will document the changes by ""themes"" below. ## Related Work; Another snapshot of #824. ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/861:961,rout,routine,961,https://su2code.github.io,https://github.com/su2code/SU2/pull/861,1,['rout'],['routine']
Integrability,"## Proposed Changes; Following up on #583 this is a restructuring of the fiels related to the driver. In addition I rearranged preprocessing routines in the driver constructor. I added arguments to the calls to make it more clear what the dependencies are and what is allocated. Furthermore I merged all loops over zones and instances into a single loop. This should make it much more readable. . ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [x] I am submitting my contribution to the develop branch.; - [x] My contribution is commented and consistent with SU2 style.; - [x] I have added a test case that demonstrates my contribution, if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/736:141,rout,routines,141,https://su2code.github.io,https://github.com/su2code/SU2/pull/736,2,"['depend', 'rout']","['dependencies', 'routines']"
Integrability,"## Proposed Changes; Hello to everyone,; I would like to propose a slight change in the Actuator Disk with Variable Load function. The change consists in re-writing the computation of the axial, radial and tangential force coefficients by developing the advance ratio term. In this way it is possible to eliminate the explicit dependence with the free-stream velocity.; Thanks to this change, it is possible to simulate the hover condition (free-stream velocity equal to zero) since we eliminated the free-stream velocity from the denominator.; ; In addition, we do not need the input of the advance ratio J, but the RPM of the propeller. This is a draft PR since a validation is needed and will be provided soon. Regards,; Ettore.; TAARG, University of Naples Federico II. ## Related Work; #1027 . ## PR Checklist. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.; - [x] I have added a test case that demonstrates my contribution, if necessary.; - [x] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1648:327,depend,dependence,327,https://su2code.github.io,https://github.com/su2code/SU2/pull/1648,1,['depend'],['dependence']
Integrability,"## Proposed Changes; Hi all, . This draft PR contains all work on composition dependent fluid properties for multicomponent flow. . What I did so far: . •	Implemented new CFluidScalar class (which inherits from CFluidModel) and can be accessed via a new fluid model: MIXTURE_FLUID_MODEL. ; •	Verified the current implementation by comparing with Fluent. ; •	Added regression test case for two component incomp_rans flow with variable fluid properties. . Future work:. •	Fix variable specific heat capacity and convergence issues in case of axisymmetric flow. ; •	Add possibility to have more than a single transported scalar (i.e. mixture containing more than two components). ; •	Remove flamelet implementation from feature_multicomp in order to have this work self-contained. **Note:** Currently this is a PR into feature_flamelet to make the diff easier. In case there are comments, ideas, foreseeable stepping stones from experience please let me know. . ## Related Work; #1223 by @danielmayer @bigfooted which feature_multicomp currently branches from. ; #1330 by @TobiKattmann which cuts the scalar transport necessary for this work out to merge it separately into develop. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [ ] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [ ] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1332:78,depend,dependent,78,https://su2code.github.io,https://github.com/su2code/SU2/pull/1332,1,['depend'],['dependent']
Integrability,"## Proposed Changes; Hi all,; ; a wrong index (iZone vs iInst) caused the SU2_SOL module to segfault if nZone > nInst. The geometry container is called with the wrong index in the `CBaseLineSolver::LoadRestart` routine. In SU2_SOL.cpp `&geometry_container[iZone][INST_0]` to `geometry_container[iZone]` are interchangeable, I just thought the 2nd formulation is used more often throughout the code. I cannot guarante though that it now runs for multiple instances, but as far as I know there is no such testcase. Testcase: The PR does not come with a Testcase which would catch the error in the future. In testcases started with parallel_computation.py the SU2_SOL module is called and fails for multizone cases (e.g. Jones_rst.cfg which I tested on) but if the residuals fit the case passes. That circumstance is not tackled in this PR but I heard that this is a know issue. I briefly chatted with @rsanfer about that and I offer my help if this is approached. . Additionally I fixed an error message to contain the correct config-option and added a --disable-tecio option to the preconfigure.py script as it is convenient for me as I build on compute nodes which cannot access the necessary X11 libraries and I couldn't get it to work with tecio enabled :( . If there are comments or requests for changing s.th. let me know. . Best Regards, Tobi. ## Related Work; Please see issue https://github.com/su2code/SU2/issues/568 for more information. There the error is described more detailed there. ## PR Checklist. - [ X ] I am submitting my contribution to the develop branch.; - [ X ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [ X ] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/572:211,rout,routine,211,https://su2code.github.io,https://github.com/su2code/SU2/pull/572,2,"['message', 'rout']","['message', 'routine']"
Integrability,"## Proposed Changes; Hi, I noticed that the mesh quality metrics are not available in the current output structure, so here they are. ; I removed WRT_MESH_QUALITY and just check&set in the configs postprocessing routine.; Compressible, Incompressible, Heat and Mesh Output are added here as the FEM solvers dont have the dual grid as stated in the original PR. . **Bonus issue:** I noticed that Coordinates are not written in the Volume Output for the cases I tested (also the Quickstart) but haven't really figured out why yet. Doesn't matter whether VOLUME_OUTPUT is set with COORDINATES or not at all. I will look into this again but if you have a hint that would be appreciated💐 **Edit:** of course they are written implicitly otherwise on couldn't open a visu file but what do we have the volume output field COORDINATES for then? Maybe I am just blind, but this is not really part of this PR anyway. Cheers, Tobi. ## Related Work; Initial implementation #778 . ## PR Checklist. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1104:212,rout,routine,212,https://su2code.github.io,https://github.com/su2code/SU2/pull/1104,1,['rout'],['routine']
Integrability,"## Proposed Changes; I changed the wall distance computation so that it correctly incorporates also viscous walls in other zones. I am not 100% happy where it is implemented, but I have not found a better place for this computation. Furthermore this splits the nice indepedent preprocessing routines in the driver constructor. Nevertheless, I think it should be fine. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [x] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/924:291,rout,routines,291,https://su2code.github.io,https://github.com/su2code/SU2/pull/924,1,['rout'],['routines']
Integrability,"## Proposed Changes; I have found it useful to be able to adaptively change deltaT using the Python wrapper -- this PR implements that functionality. Instead of `CDriver::GetUnsteadyTimeStep` returning `CConfig::GetTime_Step`, it was updated to return the actual dimensional timestep used in iterations. A new `CDriver::SetUnsteadyTimeStep` function was implemented that updates both `Delta_UnstTimeND` and `Delta_UnstTime` in `CConfig`. A new setter function for `Delta_UnstTime` had to be implemented to do this as well. A quick grep showed me that the only usage of `CConfig::GetTime_Step` appears to be in SU2_SOL, initialization, and outputting in the NonDimTable. However, I did see one usage of it here, which appears to be called every iteration:. https://github.com/su2code/SU2/blob/2c9fbb6cfc0f9dfbb4a1f6afb9cf5004c33b1c25/SU2_CFD/src/integration/CFEM_DG_Integration.cpp#L75. I can update that line if necessary to instead call `CConfig::GetDelta_UnstTime`. I don't _believe_ that there are any additional issues that may be arisen beyond this. ## Related Work; N/A. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [X] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [ ] I used the pre-commit hook to prevent dirty commits and used `pre-commit run --all` to format old commits.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2190:100,wrap,wrapper,100,https://su2code.github.io,https://github.com/su2code/SU2/pull/2190,2,"['integrat', 'wrap']","['integration', 'wrapper']"
Integrability,"## Proposed Changes; I made this in micro steps and the commit messages are fairly detailed, so here I will give only the highlights. Every change is mathematically equivalent.; I claim performance improvements based on the type of cases I run (steady RANS implicit, elasticity), results may vary, so please give this a try. **Cleanup**; - Iterative smoothers (Jacobi, ILU, etc.) are now implemented in CSysSolve as one generic method with the same interface as the Krylov solvers.; - Dead code was removed from CSysMatrix (as requested in #653).; - Duplicated code, mostly dealing with block-block/vector multiplication, was merged.; - Row/column elimination tasks implemented in CSysMatrix (as requested in #658).; - Linelet uses fewer working variables.; - Make a lot of methods private (the diff of matrix_structure.hpp is not going to be pretty...). **Performance**; - Inlined small methods.; - No calls to ""Get/SetBlock"" when the block location is already known (helps ILU and LU_SGS).; - Block inversion done in one go instead of multiple Gaussian eliminations (which used to require repeated upper matrix transformations) (helps Jacobi, Linelet, and ILU).; - Inverted ILU diagonal blocks are stored during ""build"" for use in ""compute"". **Bugs**; - Linelet preconditioner was not working for multiple wall markers. **ToDo**; - I will try to make the MKL optimizations work for the discrete adjoint (I say try because it may require too much creativity with the templates...).; - Get some benchmarks (I don't want you to just take my word for it). ## Related Work; #650, #653, #658. ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test case that demonstrates my contribution, if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/700:63,message,messages,63,https://su2code.github.io,https://github.com/su2code/SU2/pull/700,2,"['interface', 'message']","['interface', 'messages']"
Integrability,"## Proposed Changes; I overlooked something in #951, in that PR I made possible defining many-to-many multi-physics interfaces, i.e. one marker can receive some variables from zone A (e.g. temperature) and others from zone B (e.g. displacements). The problem is that unless the case is very very trivial, this does not work because currently the target geometry can only store donor information (interpolation coefficients and donor point indices) for one donor.; So many-to-many only works if everything matches, interpolation method, point indices, etc. The proposed solution is to move the donor information out of CVertex and into the CInterpolator object, which has a one-to-one relation with the interfaces, hopefully this will make the interfaces generic enough. ## Related Work; #951 . ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is commented and consistent with SU2 style.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1061:116,interface,interfaces,116,https://su2code.github.io,https://github.com/su2code/SU2/pull/1061,3,['interface'],['interfaces']
Integrability,## Proposed Changes; I started having some issues with the meshes written by SU2_DEF over night (due to some change in the cluster file system) so I cleaned up a couple of the file writers to hopefully make them more robust.; I think what we were doing (all ranks opening the file at the same time and flushing it after each write) was a bit iffy because of implementation dependent buffering aspects. ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is commented and consistent with SU2 style.,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1071:373,depend,dependent,373,https://su2code.github.io,https://github.com/su2code/SU2/pull/1071,1,['depend'],['dependent']
Integrability,"## Proposed Changes; I would like to be able to calculate a gust encounter of a free-flying, elastic aircraft. The rigid body reaction (in terms of velocities u, v, w and rotation rates p, q, r) as well as the elastic structural dynamic reaction (displacement of all surface nodes of the CFD mesh) are calculated by our own aeroelastic solver, coupled via the python interface, while SU2 shall provide the aerodynamic side, as a higher fidelity alternative to panel methods such as VLM & DLM. . Update, 13.04.2023: The combination of grid velocities from the moving + deforming grid turned out to be more complicated as expected (at least for me) and the moving grid is not fully implemented for unsteady simulations (according to Pedro, some source terms are missing). The new approach uses a farfield onflow condition at alpha=0.0 and translates and rotates the whole aircraft in the elastic mesh for the rigid body + structural dynamic reaction. This is more laborious on my side (transformation of the surface, the deformation vector and the forces about the Euler angles) but simplifies the work on the SU2 side:. - extend the gust to 3D meshes (current implementation only for 2D meshes); - ~~update the grid movement during the time domain simulation via the python interface; Involved parameters: ; GRID_MOVEMENT= ROTATING_FRAME; TRANSLATION_RATE= u v w ; ROTATION_RATE= p q r~~; - update the surface mesh deformation during the time domain simulation via the python interface ; Involved parameters: ; DEFORM_MESH= YES; MARKER_DEFORM_MESH= ( list of markers ). Summing up, I will need to combine the grid velocities due to aircraft movement, elasticity and gust. Currently, this is not possible in SU2. ; I split the work into the following steps. Here is what is working / not working:; - [x] gust with 3D meshes --> plausibility check with rectangular, 3 meter wing at 2° + long gust equivalent to 2° = approx doubling of the lift coefficient; - [x] ~~gust + moving grid --> plausibility che",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1954:367,interface,interface,367,https://su2code.github.io,https://github.com/su2code/SU2/pull/1954,1,['interface'],['interface']
Integrability,"## Proposed Changes; Implements some features that will be necessary to eventually replace the elasticity-based mesh deformation. Namely symmetry boundary condition and the use of the DEFORM_LIMIT option to limit how much of the domain is deformed. Reduces the discrete adjoint memory usage by disabling the recording of routines that are not relevant or differentiable. Cleans up some redundant MPI comms in CFEASolver and moves all of them to the methods of that solver (i.e. no more explicit MPI comms in structural integration / iteration). Makes the structural objective functions available as screen/history output under the name COMBO. Improves/fixes the incremental load approach when used for multizone problems. ## Related Work; #919 #594. ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/933:321,rout,routines,321,https://su2code.github.io,https://github.com/su2code/SU2/pull/933,2,"['integrat', 'rout']","['integration', 'routines']"
Integrability,"## Proposed Changes; Improvements and general cleanup / restructuring of CInterpolator and co. consisting of:; #### New features:; - Control of the RBF interpolation matrix sparsity via option `RADIAL_BASIS_FUNCTION_PRUNE_TOLERANCE` to drop relatively small coefficients.; - Generalize nearest neighbor interpolation to KNN + inverse distance weighting, ""k"" determined by option `NUM_NEAREST_NEIGHBORS` (because ""why not"").; #### Enhancements:; - The setup of CRadialBasisFunction was optimized (more use of BLAS) and it is now parallel (MPI and threads) over multiple interface patches.; - The setup of CIsoparametric was optimized, now it only evaluates isoparameters for a few nearby candidate donor elements (instead of all possible ones).; - The setup of CMirror was optimized both for memory (by communicating only information as needed) and speed (by reducing algorithmic complexity from quadratic to linearithmic) this item is in #833.; - The setup of CIsoparametric, CNearestNeighbor, and CMirror are now hybrid parallel.; #### Maintenance:; - Restructure (split) and cleanup the files.; - Heavy refactoring of RBF interpolation.; - Heavy refactoring of isoparametric interpolation, the method was incorrect for quadrilaterals (and the code too complex).; - Heavy refactoring of mirror (conservative) interpolation, the algorithm is perhaps more complex but the code is cleaner and 10x faster (this is in #833).; - Medium cleanup of CInterpolator (const correctness, unnecessary mpi ifdefs, etc.).; - Light cleanup of CDriver/CTransfer (deleting copy-pasted code); #### Other enhancements:; - Initialize the linear system solutions in CMeshSolver to speedup 3D FSI simulations, but especially to reduce overhead in FSI discrete adjoint cases.; - Too improve the quality of deformed grids in FSI cases with large ""out-of-plane"" displacements, a thicker layer of stiff cells can be imposed around the deforming boundaries. The thickness of the layer is defined by option `DEFORM_STIFF_LAYER_SIZ",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/914:569,interface,interface,569,https://su2code.github.io,https://github.com/su2code/SU2/pull/914,1,['interface'],['interface']
Integrability,"## Proposed Changes; In a joint collaboration with @rsanfer we discovered that the Prism and Pyramid shape elements used for mesh deformation had some issues, namely:; - The Prism (6 nodes) element had incorrect integration points, and perhaps due to some inconsistency between the ordering of the nodes and the shape function it had ""negative"" stiffness (deform opposite to force). The latter issue was remedied by using negative weights... I tried permuting the integration points but that did not help.; - The Pyramid (5 nodes) had inconsistent integration points and shape functions, it was using pyramid points but degenerate hex functions, this made the element some 20 times more flexible than it should be, pyramid shape functions are used now. My main reason to look into this was to support all element types in the structural solver both for linear and nonlinear analysis, in principle that should be working now, but I still have tests to run. I took the opportunity to refactor the CElement family of classes, now the derived classes only deal with the shape specifics:; - Integration/extrapolation points, shape function and derivatives, are computed and stored at construction.; - Area/Volume computation in undeformed (reference) or deformed (current) coordinates. Generic actions like allocating data and computing gradients are done by the base class. For the latter I included one method for 2D and another for 3D, they only differ in the inversion of the Jacobian but being specialized nDim can be ""hardcoded"" which should allow for more compile time optimization. I expect some regressions to fail, and I will still run more tests to verify the revised elements. I will post those results and add a regression. ## PR Checklist. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is commented and consiste",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/681:212,integrat,integration,212,https://su2code.github.io,https://github.com/su2code/SU2/pull/681,3,['integrat'],['integration']
Integrability,"## Proposed Changes; In order to structure the construction of the solvers a little bit and to remove the dependency of the driver on the solver, I created a static solver factory class. There are routines to create individual instances as well as the whole container. It should be much easier now to see what position in the containers are actually allocated for the different solvers. The `createSolver` routine is a generic one that simply calls `new`. The others have some additional checks or calls for the construction. The idea here was to remove any `if` statements in the `createSolverContainer` routine to ease readability. . If everybody agrees, we could use a similar structure for other classes as well. Let me know what you think. Note from TobiKattmann: This PR depends on #861 . ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [ ] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [ ] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/881:106,depend,dependency,106,https://su2code.github.io,https://github.com/su2code/SU2/pull/881,5,"['depend', 'rout']","['dependency', 'depends', 'routine', 'routines']"
Integrability,"## Proposed Changes; In some cases we use relative frame for rotor zone to perform URANS, e.g., in aeroelasticity analysis, we want the grid movement comes only from blade deformation. The problem is that the sliding plane in SU2 works only for absolute frame. In relative frame, the grid is not rotating, so the interpolation at sliding interface is not changed as time step is marching. The proposed changes rotate the sliding interface in accordance with physical time steps to perform interpolation. This function is activated only for relative frame. The grid itself is not rotating.; Currently, this is only implemented in CNearestneighbor class, other interpolation method should be changed as well in the near future. ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [x] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [x] I used the pre-commit hook to prevent dirty commits and used `pre-commit run --all` to format old commits.; - [x] I have added a test case that demonstrates my contribution, if necessary.; - [x] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2311:338,interface,interface,338,https://su2code.github.io,https://github.com/su2code/SU2/pull/2311,2,['interface'],['interface']
Integrability,"## Proposed Changes; Initialize the omp_partitions vector with the number of points, skip the for loop if the last partition has been calculated. A light-weight checker is added also to verify the partition vector, promote a warning or error message if necessary.; . ## Related Work; Fix #1667 Potential crash for the OpenMP multi-thread running. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1678:242,message,message,242,https://su2code.github.io,https://github.com/su2code/SU2/pull/1678,1,['message'],['message']
Integrability,"## Proposed Changes; JST with scalar dissipation over predicts drag in friction-dominated problems, the version with matrix dissipation is better. ## Related Work; Depends on #1022. ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1056:164,Depend,Depends,164,https://su2code.github.io,https://github.com/su2code/SU2/pull/1056,1,['Depend'],['Depends']
Integrability,"## Proposed Changes; Let NdFlattener use a wrapped [MPI_Allgatherv](https://www.mpich.org/static/docs/v3.2/www3/MPI_Allgatherv.html) function which checks the number of participating MPI ranks. If there is only one, perform a simple copy operation instead. I hope that this fixes #1893, which I believe to be the result of a bug in MPICH. In my Ubuntu MPICH container, the `[NdFlattener]` test succeeds with these changes. . ## Related Work; #1893 . ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [ ] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1897:43,wrap,wrapped,43,https://su2code.github.io,https://github.com/su2code/SU2/pull/1897,1,['wrap'],['wrapped']
Integrability,"## Proposed Changes; Make CEdge a class of arrays, instead of using it as an array of classes.; Ended up having to add some const-correctness to CNumerics too.; Forgot to turn off ""auto blank space stripping"" so a few files will show more changes than this actually introduces. ## Related Work; Needed for #789 (to eventually support the SIMD part).; Similar changes to #753.; Fixes a bug in the SST fluid-fluid interface. ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/959:412,interface,interface,412,https://su2code.github.io,https://github.com/su2code/SU2/pull/959,1,['interface'],['interface']
Integrability,"## Proposed Changes; Move more routines to the FVM flow solver base class.; At the risk of sounding like a broken record, one function means:; One test, one optimization, one debug, one fix.; Implementing new features by copy-paste-modify is like eating your legs to get to the end of a marathon, it ain't gonna work in the long run xD; Cut, Paste, Abstract, Survive. ## Related Work; #1044. ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1177:31,rout,routines,31,https://su2code.github.io,https://github.com/su2code/SU2/pull/1177,1,['rout'],['routines']
Integrability,"## Proposed Changes; On a user-specified upstream half-plane, fix the values of turbulence quantities to their far-field values, instead of integrating the turbulence model equations. In the far-field flow, the production terms of SST for K and omega are zero, while destruction still takes place. Thus the turbulence quantities typically decay on their way from the far-field boundary to the airfoil, until they reach the `lowerlimit`. See for instance this turbulence kinetic energy plot on the NACA0012 mesh:; ![kk_sst_copr_TKE](https://user-images.githubusercontent.com/72806890/111277953-4f805380-8639-11eb-8d34-466e612aac4e.png). This has been presented in [1] together with two solution approaches:; - *Sustaining terms*, which are additional source terms compensating the destruction terms in the far-field flow. This approach has been already implemented with the `KIND_TURB_MODEL= SST_SUST` option.; ![kk_sst_copr_sust_TKE](https://user-images.githubusercontent.com/72806890/111278024-60c96000-8639-11eb-8b1b-f4e95a3f97ab.png); - *Floor values*, which is equivalent to set the `lowerlimit` to the far-field values in the upstream region of the airfoil.; This PR adds floor values, but in the form of *fixed values*: The turbulence quantities are just set to the far-field values in the upstream region. This has been implemented in analogy to the strong boundary conditions. The correction can be activated like this:. TURB_FIXED_VALUES= YES; TURB_FIXED_VALUES_DOMAIN= -1.0. The second parameter specifies the half-plane on which fixed values are applied. This half-plane consists of those points for which the dot product of their coordinate vector with the normalized far-field velocity vector is less than `TURB_FIXED_VALUES_DOMAIN`. . This is the turbulence kinetic energy with AoA=0° and 10°:; ![kk_sst_copr_floor_TKE](https://user-images.githubusercontent.com/72806890/111278035-63c45080-8639-11eb-8ae9-194a5a1ca5f8.png); ![kk_sst_copr_floor_aoa10_TKE](https://user-images.githubuserco",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1236:140,integrat,integrating,140,https://su2code.github.io,https://github.com/su2code/SU2/pull/1236,1,['integrat'],['integrating']
Integrability,"## Proposed Changes; Radial Basis Function interpolation for zone to zone transfer without matching meshes.; Main purpose is to use it with the FSI solvers, direct and adjoint. . ## Related Work; Also:; Adds under-relaxation to the adjoint FSI solver to facilitate convergence of strongly coupled problems.; Fixes missing turbulence solver dependencies.; Adds fluid node sensitivities to the output (before they were not set). ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is commented and consistent with SU2 style.; - [x] I have added a test case that demonstrates my contribution, if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/555:340,depend,dependencies,340,https://su2code.github.io,https://github.com/su2code/SU2/pull/555,1,['depend'],['dependencies']
Integrability,"## Proposed Changes; Remove `CSolver::Convective_Residual`, as it does nothing and no derived class overrides it. There is one call in `CIntegration.cpp`, which I would like to replace by an error message. . Note that in the present version, usage of `numerics[CONV_TERM]` would not be thread-safe, it should be `numerics[CONV_TERM + omp_get_thread_num()*MAX_TERMS]` (see also #1214). ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [ ] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1222:197,message,message,197,https://su2code.github.io,https://github.com/su2code/SU2/pull/1222,1,['message'],['message']
Integrability,"## Proposed Changes; Replace references to the global MPI communicator `MPI_COMM_WORLD` with `SU2_MPI::GetComm()` where appropriate. This prevents deadlocking in cases where SU2 is given an MPI communicator other than `MPI_COMM_WORLD`, for example when creating an instance of `CDriver` through the Python interface. ## Related Work; Issue #1179 . ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [X] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1180:306,interface,interface,306,https://su2code.github.io,https://github.com/su2code/SU2/pull/1180,1,['interface'],['interface']
Integrability,"## Proposed Changes; Sorry for the separate PR... we are working to include more solid solvers that can be used with the interface. This PR introduces few modifications that are required to include other solvers. ## PR Checklist. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [X] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1363:121,interface,interface,121,https://su2code.github.io,https://github.com/su2code/SU2/pull/1363,1,['interface'],['interface']
Integrability,"## Proposed Changes; Split `geometry_structure.cpp/hpp` in one file per class, strip spaces, replace tabs, move inlines to .hpp, etc. This depends on #790, the only open PR affected by this is #773, @TobiKattmann I think it should be an easy merge since you only added new code. ## Related Work; #583. ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test case that demonstrates my contribution, if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/825:139,depend,depends,139,https://su2code.github.io,https://github.com/su2code/SU2/pull/825,1,['depend'],['depends']
Integrability,"## Proposed Changes; The PR changes the current limiter routine with the NEMO solver from a conservative variable limiter scheme to limiting on the basis of the primitive variables. This also updates some routines within SU2-NEMO to look/behave/take advantage of the standard SU2 implementations. I also tried tried to remove any other compiler errors. ## Related Work; This was first done with the AUSM scheme by @fmpmorgado. ; This is working towards functional implicit and dual-time capabilities in SU2-NEMO. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.; - [x] I have added a test case that demonstrates my contribution, if necessary.; - [x] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1139:56,rout,routine,56,https://su2code.github.io,https://github.com/su2code/SU2/pull/1139,2,['rout'],"['routine', 'routines']"
Integrability,"## Proposed Changes; The ```CLookUpTable``` class allows for the fast interpolation of unstructured 2D data. It was found that the query time of this class scaled significantly with the number of output variables, indicating inefficiencies in the query process.; ; These inefficiencies came from string comparison routines in the ```GetIndexOfVar``` function of the ```CLookUpTable``` class. By implementing overloaded instances of the look-up functions which retrieve data from data indices directly, the query time efficiency scaling was significantly improved. . Also reduced duplicate code within the ```CLookUpTable``` class. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [x] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [x] I used the pre-commit hook to prevent dirty commits and used `pre-commit run --all` to format old commits.; - [x] I have added a test case that demonstrates my contribution, if necessary.; - [x] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2214:314,rout,routines,314,https://su2code.github.io,https://github.com/su2code/SU2/pull/2214,1,['rout'],['routines']
Integrability,"## Proposed Changes; The conjugate heat variables were not communicated properly between the flow and flamelet solver, resulting in the interface temperature between the fluid and solid to be always maintained at 300 kelvin for flamelet simulations. The changes mainly regard the recognition of the inclusion of energy for flamelet problems for the CHT methods, while in the flamelet solver, the conjugate variables are obtained from the flow solver instead of the flamelet solver itself. ; . ## Related Work; Related work includes the pull requests regarding the flamelet solver, as well as the related regression tests. The latter were obtained with this bug included, so the solution files have to be updated and the residual values in the regression tests have to be updated. . ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [x] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [x] I have added a test case that demonstrates my contribution, if necessary.; - [x] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2067:136,interface,interface,136,https://su2code.github.io,https://github.com/su2code/SU2/pull/2067,1,['interface'],['interface']
Integrability,"## Proposed Changes; The current PR serves two purposes. First, it extends the sliding interface capabilities for multi-zone fluid-fluid interfaces to incompressible flows. Until now, these features were only available for compressible flows. For example, take the following case of a viscous flow enclosed by diathermal walls and discretized using two different zones with a permeable, non-matching interface:. ![testcase](https://user-images.githubusercontent.com/8706821/51894668-b6cee100-23a8-11e9-8ee8-4b3d846417b2.png); ![discretization](https://user-images.githubusercontent.com/8706821/51894939-5e4c1380-23a9-11e9-8acb-8ac04d555e2b.png). With the current SU2 implementation, the solution diverges due to the lack of interface boundary conditions. After only 10 iterations, the contours of velocity are:. ![former](https://user-images.githubusercontent.com/8706821/51894620-99017c00-23a8-11e9-938a-d8b0e38fa141.png). With this PR, the problem can be successfully solved with a multizone solution process. The contours of velocity and temperature are now:. ![velocity](https://user-images.githubusercontent.com/8706821/51894679-bdf5ef00-23a8-11e9-9466-d360fdc42733.png); ![temperature](https://user-images.githubusercontent.com/8706821/51894683-bfbfb280-23a8-11e9-8ffe-1901b33677bf.png). and also for unsteady problems. ![unsteady](https://user-images.githubusercontent.com/8706821/51894695-c4846680-23a8-11e9-87f5-35041d71fee4.gif). For the latter case I haven’t yet rotated the inner circle, because there are some missing features for dynamic meshes in the incompressible solver. The previous test case for steady-state flows has been added. One for unsteady flows will be enabled once the new output is in place, as the current output structure makes the regression scripts fail. The previous, however, opened a can of worms, as there were some physics based calls in the parent transfer structure (e.g. `GetnSlidingStates()`, `SetSlidingState()` and `SetnSlidingStates()`) that made the inc",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/638:87,interface,interface,87,https://su2code.github.io,https://github.com/su2code/SU2/pull/638,4,['interface'],"['interface', 'interfaces']"
Integrability,"## Proposed Changes; The hybrid parallel implementation uses grid coloring (edge and element) to avoid race conditions when building the residual vector and Jacobian matrix.; Depending on grid size, type, and ordering, it may be difficult to find a good coloring, i.e. providing locality and enough parallelism (all threads getting almost the same number of work chunks to work on per color). This PR extends the use of the ""reducer strategy"" to fine grids (introduced and described in #861 for coarse grids, which before #894 I thought would be the only problematic scenarios) as a fallback strategy that is automatically selected when the coloring efficiency (highlighted below) drops below a threshold value. The reducer strategy can be forced by setting EDGE_COLORING_GROUP_SIZE to 0 (for some cases it seems to give better performance, contrary to the initial assessment from #789).; For element loops (CFEASolver and CMeshSolver, modified in #843) an automatic fallback was also introduced, but using ""locks"" (explained below) as a ""reducer strategy"" would use too much memory, and element loops are more compute intensive (and therefore less affected by the overhead of using these locks). ## Related Work; Part of #789, namely:; Improves scaling of the work from #861 #843 (should help with #894); Fixes a bug from #830. ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/908:175,Depend,Depending,175,https://su2code.github.io,https://github.com/su2code/SU2/pull/908,1,['Depend'],['Depending']
Integrability,"## Proposed Changes; There were some merge issues in the previous pull request that were causing lots of issues in #2209. Hopefully this is resolved here. . Update to the interface initialisation to enable both mixing plane and sliding interfaces within the same turbomachinery simulation. Addition of mass flow outlet to Giles BC. ## Related Work. This issue solves a problem reported by a number of users, when simulating radial turbomachinery cases a second-order accurate solution cannot be achieved in some cases when using mixing plane interfaces. This is due to circumfrential averaging in regions where the flow exhibits large circumfrential nonuniformity and/or interspace gaps between adjacent blade-rows/zones small. This issue has been reported by @LorenzoFabris, in a presentation at the SU2 Conference 2022 ""Performance Analysis and Shape Optimization of a Radial Compressor with the Open-Source Software SU2"" and by myself. Mass flow outlet included in the PR as requested by users. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [X] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [X] I used the pre-commit hook to prevent dirty commits and used `pre-commit run --all` to format old commits.; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2349:171,interface,interface,171,https://su2code.github.io,https://github.com/su2code/SU2/pull/2349,3,['interface'],"['interface', 'interfaces']"
Integrability,"## Proposed Changes; These changes integrate MKL into SU2 linear algebra operations. The changes are guarded by a HAVE_MKL preprocessor flag, and require MKL 2019 Beta or newer, as they use the most recent features designed to optimize small matrix operations. Observe 18% performance improvement on Broadwell systems and 24% performance improvement on Skylake systems. Additionally, change adds call to memcpy in Gauss Elimination since overlapping source/dest would break functionality at a higher level, and memcpy improves performance. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary. -- Not necessary, existing tests cover functionality when HAVE_MKL flag is in place.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/542:35,integrat,integrate,35,https://su2code.github.io,https://github.com/su2code/SU2/pull/542,1,['integrat'],['integrate']
Integrability,"## Proposed Changes; This PR breaks up the following files:; 1. grid_movement_structure; 2. adt_structure. It also gets rid of grid_adaptation_structure and the entire SU2_MSH module. These files have not be updated in a long time are are deprecated. None of the new work in mesh adaptation by @bmunguia uses any of these routines. . ## Related Work; #583 . ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1035:322,rout,routines,322,https://su2code.github.io,https://github.com/su2code/SU2/pull/1035,1,['rout'],['routines']
Integrability,"## Proposed Changes; This PR cleans up some functions in NEMO. removing some unused code, adding comments, etc.; I plan to do some more cleanup for the PR, but this should impact the functioning of the code at all. Future work will:; 1.) Update boundary conditions to a working state (Supersonic Inlet, inlet, etc.); 2.) Make use of CharacPrimVar() for further code integration; 3.) Remove dependency of conserved variables in numerical schemes",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1488:366,integrat,integration,366,https://su2code.github.io,https://github.com/su2code/SU2/pull/1488,2,"['depend', 'integrat']","['dependency', 'integration']"
Integrability,"## Proposed Changes; This PR goes in line with the driver reorganisation started in #585. At this time, it is the single-zone adjoint driver that is introduced, which inherits from the primal single-zone driver class. Problem properties are set at time of driver instantiation, and routines are mostly opaque to the physics (not yet completely as some further work is required in input/output). The functions are exposed to python so in a later PR the adjoint can also be used with the AD mode enabled. Some old driver classes are already removed. ## Related Work; - Further work by @oleburghardt to follow on the multizone adjoint driver.; - Some features awaiting the input/output restructuring PR by @talbring. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/671:282,rout,routines,282,https://su2code.github.io,https://github.com/su2code/SU2/pull/671,1,['rout'],['routines']
Integrability,"## Proposed Changes; This PR implements a combustion model for laminar premixed flames in low Mach number flows. The implementation is based on a flamelet progress variable approach - i.e., the combustion chemistry is parameterized with scalar quantities for which scalar transport equations are solved. The scalars are then used to look up scalar source terms, transport -, and thermodynamic quantities from a lookup table. The lookup table is compiled from one-dimensional flame simulations using more expensive chemistry models - typically finite rate mechanisms. In this implementation we introduce 2 additional transported scalars: the progress variable **c** and the total enthalpy **h**. All fluid properties like density, viscosity, temperature, diffusivity, reaction source terms, etc. are obtained from a lookup table that is made by the user with external 1D detailed chemistry codes like Cantera. Since temperature is now a dependent variable, we do not need to solve the regular temperature equation. However, We keep the SU2 temperature field and simply write our lookup temperature T(c,h) into this field. . As a 'limiting case', a nonreacting passive scalar transport equation has also been implemented. All fluid properties for this passive scalar are constant, but this passive scalar can be easily extended to model nonreacting mixing flows of two fluids with different properties. This model has also been verified to work together with turbulence, although no turbulence chemistry interaction has been implemented for this WIP. . ## Related Work; This PR implements a generic scalar transport framework which can be aligned with other physics models that make use of transported scalars, e.g. turbulence models. It furthermore implements a generic lookup table framework that can be used as a basis for lookup table based physics models, such as real gas models. ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1223:936,depend,dependent,936,https://su2code.github.io,https://github.com/su2code/SU2/pull/1223,1,['depend'],['dependent']
Integrability,"## Proposed Changes; This PR integrates pyBeam, a non-linear open source beam solver, into the SU2 infrastructure as a subproject, and adds support for coupled FSI simulations using SU2's flow solver and pyBeam's structural solver. Tutorials on how to use the implementation will come soon. At this point, only minor changes to the compilation and the python scripts are required. The impact to the core of the code is minor. I will be away for a few days, but please go ahead and have a look/comment/find room for improvement in the meantime :) I will reply to your comments as soon as I'm back to office. I also added a couple of test cases, but I haven't yet found the best way to hook them to our regression test system. I'll definitely look into it before the PR is merged, but due to personal time constraints, it'd be great if this could be integrated for 7.0.3. ## Related Work; This work is the result of a collaboration with @RoccoBombardieri and @crauno from the University Carlos III Madrid. . Please refer to a recent [paper at EUROGEN 2019](https://www.researchgate.net/publication/335972259_Towards_an_open-source_framework_for_aero-structural_design_and_optimization_within_the_SU2_suite) with regards to this work. Full reference will be provided here upon publication in an Springer ECCOMAS book series. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [x] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page,",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/902:29,integrat,integrates,29,https://su2code.github.io,https://github.com/su2code/SU2/pull/902,2,['integrat'],"['integrated', 'integrates']"
Integrability,"## Proposed Changes; This PR introduces surface deformation routines in CMeshSolver and enables discrete adjoint calculations for deforming mesh problems. Gradient verification for a pitching airfoil using a deforming mesh is good compared against rigid motion for the same pitching airfoil:. ![image](https://user-images.githubusercontent.com/33747655/70388845-407b1200-19af-11ea-9bf0-e016547197b5.png). ## Related Work; Contains PR #919 which cleaned up legacy FSI and deformation methods ; Builds on work previously discussed in PR #766 ; Includes fix for issue #860 . ## PR Checklist. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [x] My contribution is commented and consistent with SU2 style.; - [x] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/833:60,rout,routines,60,https://su2code.github.io,https://github.com/su2code/SU2/pull/833,1,['rout'],['routines']
Integrability,"## Proposed Changes; This PR introduces the discrete adjoint counterpart for the multizone driver. It also comes with some heat solver-related additions for the new input/output structure as CHT (conjugate heat transfer) cases are the primary application so far. The new driver adapts many of the well-known routines for registering variables, recording, initializing and extracting adjoints. The main difference is the handling of multiple zones. . The adjoint (fixed point-) iteration approach in `CDiscAdjMultizoneDriver` is to initialize them per-zone in an outer loop and to extract adjoints with respect to _dependent variables from all zones_, thereby inherently capturing the cross dependencies.; Multiple successive evaluations of adjoints with respect to the same zone (equivalent to inner iterations in the multizone driver) are possible.; ; In order not to have to re-record a tape in the (outer) zone-loop as it can be quite costly, this branch includes some new functionalities in the underlying AD-structure which make it possible to record a ""full"" tape that holds all derivative information and that can be accessed flexibly for different input and output variables across zones.; This also overcomes the restriction that adjoints have to be evaluated in the same order as their variables had been registered.; ; This is the first version of the driver and my intention is to continue contributing to it in terms of both performance and coverage of different kinds of physical couplings in SU2. ## PR Checklist; A regression test for a heated cylinder array with conjugate heat transfer is added to `TestCases/coupled_cht/disc_adj_incomp_2d`. The very same case is used in a tutorial showcasing the new driver and CHT sensitivity analysis, see [Heated cylinders test case](https://github.com/su2code/su2code.github.io/pull/14). I'll check carefully for compiler warnings during test phase. - [x] I am submitting my contribution to the develop branch.; - [ ] My contribution generates ",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/774:308,rout,routines,308,https://su2code.github.io,https://github.com/su2code/SU2/pull/774,2,"['depend', 'rout']","['dependencies', 'routines']"
Integrability,"## Proposed Changes; This PR restructures the CTransfer parent and child classes following discussions in #583 and #725. Given that I already started it in #760, I just went ahead and moved all the remaining classes. It should be compared to `feature_elastic_mesh_solver`. ## Related Work; Depends on #760 and should be merged afterwards. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/769:290,Depend,Depends,290,https://su2code.github.io,https://github.com/su2code/SU2/pull/769,1,['Depend'],['Depends']
Integrability,"## Proposed Changes; This PR updates codi and medi to the newest version. For externally differentiated functions and preaccumulation it now uses the interfaces provided by codi. . ## Related Work; This fixes #659. . PRs #650 and #653 should be merged in before (I will deal with this next week). ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [x] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/660:150,interface,interfaces,150,https://su2code.github.io,https://github.com/su2code/SU2/pull/660,1,['interface'],['interfaces']
Integrability,"## Proposed Changes; This PR updates some of the NEMO viscous routines to be more inline with the overall SU2 structure. Hopefully paving the way for an easier merge with turbulence solvers in the future. ## Related Work; This is coming with an effort to update and optimize NEMO, like in #1343. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.; - [x] I have added a test case that demonstrates my contribution, if necessary.; - [x] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1347:62,rout,routines,62,https://su2code.github.io,https://github.com/su2code/SU2/pull/1347,1,['rout'],['routines']
Integrability,"## Proposed Changes; This PR will help address issues seen in SU2 when symmetry planes are applied. These include pressure oscillations at sym plane & solid wall interfaces (i.e. blunt bodies). It will also change the implementation of the sym plane in SU2-NEMO to that used by the rest of the code, the template function in CFVMFlowSolverBase.inl.; . ## Related Work; This PR will largely utilize the work done in #1168 by Fabio Morgado. It is in addition to #657. It will address several open issues #1625 and #1125. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.; - [x] I have added a test case that demonstrates my contribution, if necessary.; - [x] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1635:162,interface,interfaces,162,https://su2code.github.io,https://github.com/su2code/SU2/pull/1635,1,['interface'],['interfaces']
Integrability,"## Proposed Changes; This a initial merge to begin incorporating some modification to the sliding mesh interface which we are planning to improve in the next future. ## Related Work; Mostly performance improvements in the creation of the super mesh for the Weighted Average sliding mesh approach.; ADT is now used to initialize the supermesh construction. Some portions of the code were re-implemented using a smarter algorithm which reduces the code length. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [ x] I am submitting my contribution to the develop branch.; - [ x] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [ x] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [x ] I used the pre-commit hook to prevent dirty commits and used `pre-commit run --all` to format old commits.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2334:103,interface,interface,103,https://su2code.github.io,https://github.com/su2code/SU2/pull/2334,1,['interface'],['interface']
Integrability,"## Proposed Changes; This a initial merge to begin incorporating some modification to the sliding mesh interface which we are planning to improve in the next future. . ## Related Work; Mostly performance improvements in the creation of the super mesh for the Weighted Average sliding mesh approach.; ADT is now used to initialize the supermesh construction. Some portions of the code were re-implemented using a smarter algorithm which reduces the code length. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X ] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [X] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [X] I used the pre-commit hook to prevent dirty commits and used `pre-commit run --all` to format old commits.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2332:103,interface,interface,103,https://su2code.github.io,https://github.com/su2code/SU2/pull/2332,1,['interface'],['interface']
Integrability,"## Proposed Changes; This feature allows for computationally efficient through-flow computations for turbomachinery applications in the form of body-force modeling. The body-force model (BFM) generates density, momentum and energy source terms which turn the flow according to the local flow conditions and blade geometry. The blade geometry is defined through the camberline and blade thickness parameters, which are interpolated onto the mesh nodes prior to the solution process. ; Two BFM formulations are currently implemented: Hall (2015) and Thollet (2017). The code is up-to-date with ""develop"", version 7.1.1. ; Upcoming milestones will be MPI integration and coupling with adjoint. The latter will allow for computationally efficient design workflows of turbomachinery components. This will be especially useful for distortion-tolerant machines, as the design variable count and computational requirements are significantly higher than for machines experiencing uniform inflow. ; . ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1348:652,integrat,integration,652,https://su2code.github.io,https://github.com/su2code/SU2/pull/1348,1,['integrat'],['integration']
Integrability,"## Proposed Changes; This implemented the proposed preprocessing output already detailed in #591. I added a table output class for structuring screen output. As a first step I used it for the preprocessing output, but it will eventually be also used in the new output structure that follows soon. I am pretty sure there are more places where a table can be helpful for readability, but we can make these changes as we go. Note: the convergence output is not affected yet!. The class is added in a folder called ""Common/toolboxes"". My intention is that in the future we will add there more small helper tools/classes, which are essentially independent of the rest of the code. . Below you find an example output of the current preprocessing:. ```. ---------------------- Space Numerical Integration ----------------------; Jameson-Schmidt-Turkel scheme (2nd order in space) for the flow inviscid terms.; JST viscous coefficients (2nd & 4th): 0.5, 0.02.; The method includes a grid stretching correction (p = 0.3).; Scalar upwind solver for the turbulence model.; First order integration in space.; Average of gradients with correction (viscous flow terms).; Average of gradients with correction (viscous turbulence terms).; Gradient Computation using weighted Least-Squares method. ---------------------- Time Numerical Integration -----------------------; Local time stepping (steady state simulation).; Euler implicit method for the flow equations.; FGMRES is used for solving the linear system.; Using a LU-SGS preconditioning.; Convergence criteria of the linear solver: 1e-06.; Max number of linear iterations: 7.; CFL adaptation. Factor down: 1.5, factor up: 0.5,; lower limit: 0.5, upper limit: 3.5.; Courant-Friedrichs-Lewy number: 1; Euler implicit time integration for the turbulence model. ------------------------- Convergence Criteria --------------------------; Maximum number of iterations: 999999.; Reduce the density residual 6 orders of magnitude.; The minimum bound for the density r",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/633:786,Integrat,Integration,786,https://su2code.github.io,https://github.com/su2code/SU2/pull/633,1,['Integrat'],['Integration']
Integrability,"## Proposed Changes; This is a ""don't pay for what you don't use"" optimization.; I've disabled implicit time integration during the computation of the MG forcing term. I've also refactored CMultiGridQueue, it had a bad scaling problem because to remove a point from the queue we were doing a linear search followed by vector::erase, both being O(N) operations.; I've put together a queue-type class that allows fast (amortized O(1)) ""seek-and-destroy"" of arbitrary items. ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/963:109,integrat,integration,109,https://su2code.github.io,https://github.com/su2code/SU2/pull/963,1,['integrat'],['integration']
Integrability,"## Proposed Changes; This is a slight modification to the computation of face normals. Previously, the inputs to SetCoord_CG were swapped depending on whether iPoint < jPoint, but this can result in an inconsistent direction for the normals of each sub-face associated with edge i/j (i.e. for each element connected to edge i/j). This logic is replaced by dotting the sub-face normals with the edge vector from i to j (or j to i if iPoint > jPoint), and flipping the normal if the product is negative. This fix might be needed for the surface elements too, but I was less sure of what's going on in SetBoundControlVolume(). ## PR Checklist. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1054:138,depend,depending,138,https://su2code.github.io,https://github.com/su2code/SU2/pull/1054,1,['depend'],['depending']
Integrability,"## Proposed Changes; This is a solver I have been working on for some time.; The proposed solver is a treatment of the discrete adjoint sensitivities based on the idea of Sobolev gradient smoothing. This is done by solving an elliptic PDE with the sensitivities, i.e., ( e1 Id - e2 Laplace) delta_x = - dF / dx, with different weights e1, e2.; Such treatment can help prevent noise in the derivative computation and leads to smoother design updates. Especially, when working in a One Shot optimization context.; The new solver constructs the necessary operator and solves it using the finite elements features in SU2. It also includes the possibility to take the mesh parameterization into account and smooth the sensitivities w.r.t. the design parameters. I will update this draft and the comments, but I wanted to share this first version. I would be happy if anyone wants to comment on it. The draft needs some steps to be done, including:; - clean up the comments and make them consistent with SU2 style; - remove the dependency on Eigen. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [ ] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1439:1022,depend,dependency,1022,https://su2code.github.io,https://github.com/su2code/SU2/pull/1439,1,['depend'],['dependency']
Integrability,"## Proposed Changes; This is a tiny PR to add a conditional operator in CFlowOutput.cpp to avoid calling to GetNodes() function if the solver is a FEM/DG solver. In one of the early commits (34b0464e898dd167d8a865f47aa630019a5978ac), a call to GetNodes() was added in `CFlowOutput::SetAnalyzeSurface` which calls the function `GetNodes()`. ```const auto flow_nodes = solver[FLOW_SOL]->GetNodes();```. There is an assertion in `GetNodes()` that further mandates the `CVariable` `base_nodes` to be set properly. However, in the FEM/DG solver, the `base_nodes` is defaulted to `nullptr` and we have workarounds in the FEM/DG sovler that does not require a call to `GetNodes()` in other parts of the code (we use elements instead of nodes, so the concept of nodes is not really well-defined in the FEM/DG solver). . At the moment, the develop branch will fail at this line if anyone attempts to use the FEM/DG solver. . E.g., Taking the `hom_euler/NACA0012_5thOrder` test case in the repo gives the following error message:; ```SU2_CFD: ../SU2_CFD/src/output/../../include/solvers/CSolver.hpp:230: const CVariable* CSolver::GetNodes() const: Assertion `base_nodes!=nullptr && ""CSolver::base_nodes was not set properly, see brief for CSolver::SetBaseClassPointerToNodes()""' failed.``` at the pre-processing stage before any computation is done. Hence, a conditional operator is added to avoid this call for DG solvers. ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*; @vdweide and I are working on a new version of the DG solver that needs this workaround anyway. This is just added for now in case anyone else wants to work on the current version of DG solver available. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1772:1011,message,message,1011,https://su2code.github.io,https://github.com/su2code/SU2/pull/1772,1,['message'],['message']
Integrability,"## Proposed Changes; This is an update of the feature_Wall_Functions. In fact, it is only a minor contribution to the original implementation by @economon based on the article ""Wall Function Boundary Conditions Including Heat Transfer and Compressibility""; ; ## Related Work; The original implementation was 99% done but, it was not working because of ; - two typos on the original article (eq. 11 and eq. 16). ; - not accounting for a negative nu_tilde (very small value... but, negative). ; - not setting tau_wall to -1 on all the BC but non-slip ones. Apart from those changes, a Newton method has been introduced to compute nu_tilde (it would be important to do the same with the tau_wall computation... it will be done -time depending-), some minor renaming of the functions has been introduced as well as the use of MARKER_WALL_FUNCTIONS (implemented after the original implementation). ## PR Checklist. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/530:730,depend,depending,730,https://su2code.github.io,https://github.com/su2code/SU2/pull/530,1,['depend'],['depending']
Integrability,"## Proposed Changes; This is one I have been trying to solve for a while and now found a solution that is not a hack.; Under some circumstances that I do not understand (very case dependent) one of the cross terms (structure w.r.t. fluid) creates spurious values, e.g.:; ![image](https://user-images.githubusercontent.com/38071223/48981547-af503a80-f0ce-11e8-9875-1b9a2d5fd50d.png); The fix I found is to change the recording strategy, instead of making 3 recordings of the structural iteration (one for each set of input variables) this is merged into a single recording.; So from this:; ![image](https://user-images.githubusercontent.com/38071223/48981607-aad85180-f0cf-11e8-9740-dd6f51f249c3.png); To this:; ![image](https://user-images.githubusercontent.com/38071223/48981615-bc215e00-f0cf-11e8-8dd1-c2ae00b3a973.png); So far this has fixed the issue for a range of cases, large to small.; [Here](https://github.com/su2code/SU2/files/2613239/spurious_values.zip) you can see the difference between running the case in the example picture with and without the fix.; . ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test case that demonstrates my contribution, if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/615:180,depend,dependent,180,https://su2code.github.io,https://github.com/su2code/SU2/pull/615,1,['depend'],['dependent']
Integrability,"## Proposed Changes; This is the first part of a series of PRs which completely refactor the output (and parts of the input). In this one I introduce the sub-config file feature for multizone/multiphysics problems. More information on how it works can be found here:. https://su2code.github.io/docs/Multizone. Note that the automatic deduction of the correct interface type is *not* working at the moment. So the `MARKER_FLUID_INTERFACE` or `MARKER_CHT_INTERFACE` still has to be there at the moment ... Furthermore this changes the way grid movement is specified in the config files. Examples can be found also using the link above or by simply looking at the `sliding_interface` test cases. . ## Related Work. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [x] My contribution is commented and consistent with SU2 style.; - [x] I have added a test case that demonstrates my contribution, if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/715:359,interface,interface,359,https://su2code.github.io,https://github.com/su2code/SU2/pull/715,1,['interface'],['interface']
Integrability,"## Proposed Changes; This is the initial PR for a long overdue refactorization of the mesh deformation routines. The mesh deformation acquires here a full ""solver"" status, and uses the FEA Elasticity classes as its basis. The pseudo-linear elastic solver now always refers to the initial, undeformed geometrical discretization, therefore ensuring that the problem remains traceable to the original mesh, and that when volumes are computed to deform the mesh, the initial quality of the elements is observed. . With this framework, the wall distances only need to be computed once for distance-based stiffness, and the stiffness matrix is now symmetric after applying BCs so conjugate gradient can be used to compute the mesh deformation. The adjoint sensitivities can now be propagated down to the surface mesh points without the need to use DOT, although further work is needed to propagate them to the FFD points or other DV of choice. I tried to keep config options simple: the new mesh solver is enabled using; ` DEFORM_MESH = YES `; and the relevant markers which will move and introduce deformations into the domain are set using; `MARKER_DEFORM_MESH= ( wall )`; Hopefully, previous mesh deformation structures can be deprecated and removed soon, but we will need to adapt the rigid/imposed boundary deformation of other kinds of grid movement. I kindly ask for your help in there, as I'm not very familiar with some of the legacy code for this purpose. Additionally, in this PR I have done some refactoring so the AD-based adjoint routines are accessible from the python-wrapped version of the code. The SWIG wrapper now compiles the AD binaries and interfaces directly to sensitivity information, which should make it much easier to integrate SU2 within any python-based optimization framework. . ## Related Work; - Some work will be needed to adapt the new contiguous variable structure by @pcarruscag in #753; - I have added a couple of regression tests, but I will add tutorials once #724 i",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/760:103,rout,routines,103,https://su2code.github.io,https://github.com/su2code/SU2/pull/760,1,['rout'],['routines']
Integrability,"## Proposed Changes; This makes the routines InitiateComms and CompleteComms (and periodic counterparts) safe to call in parallel, until now they had to be guarded inside SU2_OMP_MASTER sections.; The calls to MPI are still only made by the master thread (funneled communication) but the buffers are packed and unpacked by all threads.; I also made a slight change which seems to make communications more efficient, we were always communicating the entire buffer, which is sized for the maximum number of variables per point, because the data was packed like this:; `o o o o _ _ _ _ o o o o _ ...` (count = 4, maxCount = 8);; I changed it to:; `o o o o o o o o ... _ _ _ _ ...`; Which allows only part of the buffer to be communicated.; (The maximum size `nPrimVarGrad*nDim*2` is actually quite large compared to the median `nVar`). In the process I also had to make a few more CGeometry routines thread safe. ## Related Work; #789; Resolves #1011. ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is commented and consistent with SU2 style.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1009:36,rout,routines,36,https://su2code.github.io,https://github.com/su2code/SU2/pull/1009,2,['rout'],['routines']
Integrability,"## Proposed Changes; This pull request is the first of a series of improvements I plan to do in the code, which aim to improve the code readibility and remove some bottlenecks in terms of abstraction, particularly regarding the input/output. At this time, I have removed some inconsistencies in the definition of the Zone structure, by incorporating the concept of “Instances” to the code. Until now, the concept “Zones” could refer to either different subdomains in space (interacting with each other over a common interface, e.g. for conjugate heat transfer, turbomachinery or FSI), or to copies (or instances) of the same domain evaluated under different conditions (e.g., for Harmonic Balance there are several time instances). . The previous concepts are now separated, allowing for a consistent definition of zones and instances in the code which can potentially be used simultaneously, and without the loss of any functionality. The proposed scheme is better explained in the attached [diagram](https://github.com/su2code/SU2/files/1955507/zones_vs_instances.pdf). ## Related Work. - Further work will involve improvements in the config definition, to make it more clear for the community of users of SU2 (particularly in cases involving multiple zones/instances). The output will also be reorganized, to be consistent with the abstraction of the rest of the code. - I have adapted the HB problems to the new definition, so @arubino and @sravya91, if you have some time please do double check that this PR looks good to you! Apart from the regression tests, which should be passing, I have also double checked that the file output for these particular problems wasn’t affected by the changes. - Additionally, I have removed some warnings that were in the code from a recent PR. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers wil",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/528:516,interface,interface,516,https://su2code.github.io,https://github.com/su2code/SU2/pull/528,1,['interface'],['interface']
Integrability,"## Proposed Changes; This pull request represents progress towards exposing the mesh deformation routines and their adjoint counterparts to Python through pysu2 and pysu2ad, respectively. This refactorization introduced:. 1. `CDriverBase`; a. Parent class for `CDriver`, `CDeformationDriver`, `CDiscAdjDeformationDriver`; b. Common methods regarding geometry, markers, MPI, etc. 2. `CDeformationDriver` and `CDiscAdjDeformationDriver`. In addition, the `CDeformationDriver` was modified to use the new mesh deformation solver `CMeshSolver`. The integration of `CMeshSolver` required introducing the `numerics_container` and `solver_container`, as well as minor changes to `CMeshSolver` (e.g., `DeformMesh` and `SetMesh_Stiffness`). Both the legacy mesh deformation solver `SU2_DEF` and the newer `CMeshSolver` can be used with these new drivers, depending on how the `DEFORM_MESH` option is set in the SU2 config file. . ## Related Work; These efforts are related to Issue #1262. The purpose of this work is to enable the coupling of SU2 with external solvers like Nastran, particularly for aerostructural MDAO. The goal is to apply this for coupled discrete adjoint sensitivities. . In the future, these driver classes will be extended to include more methods accessible via Python (i.e., for setting or extracting variables, config parameters, etc.). Currently `CDiscAdjDeformationDriver` is not integrated with `CMeshSolver`, but this will be addressed in the future. . ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [X] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1300:97,rout,routines,97,https://su2code.github.io,https://github.com/su2code/SU2/pull/1300,4,"['depend', 'integrat', 'rout']","['depending', 'integrated', 'integration', 'routines']"
Integrability,"## Proposed Changes; This removes some leftovers from when we deprecated the mesh adaptation.; I had a look at the ""adap"" branches and it seems that the new interface has completely new scripts and these are not needed, @bmunguia correct me if I am wrong. ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1153:157,interface,interface,157,https://su2code.github.io,https://github.com/su2code/SU2/pull/1153,1,['interface'],['interface']
Integrability,"## Proposed Changes; This small PR modifies the error handling, such that the error message is also written when the call to the error handler is not collective. The function CBaseMPIWrapper::Error is not so small anymore, so it may be an idea to move it to the .cpp file instead of inlining it.; ; ## Related Work; N/A. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [ X] I am submitting my contribution to the develop branch.; - [ X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [ X] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/574:84,message,message,84,https://su2code.github.io,https://github.com/su2code/SU2/pull/574,1,['message'],['message']
Integrability,"## Proposed Changes; Throw error for LM, print message that BC is the 2020 version. ## Related Work; #1132; #1130. ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1157:47,message,message,47,https://su2code.github.io,https://github.com/su2code/SU2/pull/1157,1,['message'],['message']
Integrability,"## Proposed Changes; Trying to make the python vertex tractions and vertex traction adjoints independent of a specific marker to allow #1174 to go forward without side effects on how FSI is done via the python wrapper at the moment. ## Related Work; #1174 . ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1197:210,wrap,wrapper,210,https://su2code.github.io,https://github.com/su2code/SU2/pull/1197,1,['wrap'],['wrapper']
Integrability,"## Proposed Changes; Update to the interface initialisation to enable both mixing plane and sliding interfaces within the same turbomachinery simulation. Addition of mass flow outlet to Giles BC. ## Related Work; This issue solves a problem reported by a number of users, when simulating radial turbomachinery cases a second-order accurate solution cannot be achieved in some cases when using mixing plane interfaces. This is due to circumfrential averaging in regions where the flow exhibits large circumfrential nonuniformity and/or interspace gaps between adjacent blade-rows/zones small. This issue has been reported by @LorenzoFabris, in a presentation at the SU2 Conference 2022 ""Performance Analysis and Shape Optimization of a Radial Compressor with the Open-Source Software SU2"" and by myself. Mass flow outlet included in the PR as requested by users. TBC:; -Update APU Turbocharger test case and regression test to include this feature, add diffuser and converge 2nd order. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [X] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [X] I used the pre-commit hook to prevent dirty commits and used `pre-commit run --all` to format old commits.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2209:35,interface,interface,35,https://su2code.github.io,https://github.com/su2code/SU2/pull/2209,3,['interface'],"['interface', 'interfaces']"
Integrability,"## Proposed Changes; Use of pre-accumulation in the structural solver numerics to provide order of magnitude reduction in the adjoint structural solver memory footprint. Using the fact that only the RHS of linear systems is differentiated, we can use pre-accumulation on the nodal stress residual computed in CFEAElasticity::Compute_Tangent_Matrix and CFEAElasticity::Compute_NodalStress_Term.; The implementation accounts for material properties and nodal coordinates, the latter are not strictly required at the moment but this future proofs the implementation for structural shape derivatives. . The above routines where chosen because ""everything"" happens inside them: computation of element gradients, constitutive terms, stress tensors, etc. So it is where the technique would be most effective. ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is commented and consistent with SU2 style.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/592:609,rout,routines,609,https://su2code.github.io,https://github.com/su2code/SU2/pull/592,1,['rout'],['routines']
Integrability,"## Proposed Changes; We need to do something about these 20k lines of legacy.; ATM it is a little hard to see what might need to be ported so I'm trying to remove unused chunks to hopefully make the task easier.; @vdweide it looks like all the legacy output FEM routines are not needed, it that right?. ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1115:262,rout,routines,262,https://su2code.github.io,https://github.com/su2code/SU2/pull/1115,1,['rout'],['routines']
Integrability,"## Proposed Changes; We propose to integrate the latest functionalities of the DG solver into the develop branch. The most important one is the parallel binary output functionality for paraview and tecplot, which is needed for the branch feature_input_output. ## Related Work; This PR is needed to complete the overhaul in the output classes (work of @talbring and @rsanfer) in the feature_input_output branch. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X ] I am submitting my contribution to the develop branch.; - [ X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [ X] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/676:35,integrat,integrate,35,https://su2code.github.io,https://github.com/su2code/SU2/pull/676,1,['integrat'],['integrate']
Integrability,"## Proposed Changes; With steady computations, the pywrapper call to `SU2Driver.Run()` will run it for the number of iterations in the config file. The first change this PR makes is that a call to `SU2Driver.Preprocess(nIter)` will overwrite the number of inner iterations when the case is not time dependent. We can now do `SU2Driver.Run()` for a single iteration by setting `SU2Driver.Preprocess(1)`. A call to `SU2Driver.Monitor(Iter)` will check the stopping criteria, including the maximum number of iterations. When you have set this to 1 using `SU2Driver.Preprocess(1)`, a call to `SU2Driver.Monitor(0)` will still stop the calculations because we are checking if (iter+1)>=nIter. The second change is that we now check if (iter >= nIter). I also change this behavior for time dependent problems to make this behavior consistent. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [x] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1960:299,depend,dependent,299,https://su2code.github.io,https://github.com/su2code/SU2/pull/1960,2,['depend'],['dependent']
Integrability,"## Proposed Changes; change limiter to enum class. . Note: For some reason this fixes a problem for the species transport, where the discrete adjoint solver would stop in computelimiters.hpp with the message ""unknown limiter type"". This only happens when a computation is run over more than one node (more than one core is OK though). This is because in CSolver::SetSolution_Limiter, GetKind_SlopeLimit() does not return a valid value for an existing slope limiter. Kind_SlopeLimit is set in CConfig::SetKind_ConvNumScheme, called in CConfig::SetGlobalParam, but this looks OK to me. . I did just notice that in CConfig:: line 3454 we check for MUSCL_Flow, MUSCL_Turb and MUSCL_AdjFlow and MUSCL_AdjTurb, but not for MUSCL_Species or MUSCL_Adj_Species(does not even exist). It looks like there is still something missing here. I do not know why the error ""unknown limiter type"" occured and why it is now fixed by only changing to enum class. ## Related Work; continuing effort to change all enums to enum class. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1550:200,message,message,200,https://su2code.github.io,https://github.com/su2code/SU2/pull/1550,1,['message'],['message']
Integrability,"## Proposed changes. Dear all,. I am very new to collaboration on a open source project, but I have been working on an update for the FSI computation in python that I think may be useful also for other researcher. Would you mind giving me a feedback about the modifications?. In few words, I have updated the python interface for fluid structure interaction to the new version of SU2, including the new driver, the new mesh deformation methods and few other modifications in the python scripts. It works with python3. As far as the C++ code is concerned, I only added the possibility to separate the symmetry boundary conditions for the fluid solver from the ones of the mesh solver. There is an explanation of this modification in the ReadMe file in SU2_PY/FSI_tools, together with an example of application. . The interface is still general and new structural solvers can be coupled by adding it to the fsi_computation.py file. With the present pull request I only include one structural solver, which provides a coupling with the commercial code Nastran. I added ReadMe files to explain in detail all the modifications and also the keywords to be used in the config files. Finally, there is also a complete test case where the flutter of a flat plate is studied. I am looking forward for your comments. Nicola. ## PR checklist. - [X] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1124:316,interface,interface,316,https://su2code.github.io,https://github.com/su2code/SU2/pull/1124,2,['interface'],['interface']
Integrability,"## Pull request description; The idea of this pull request is to provide a new code structure to implement the turbulence models in SU2. In the new approach, ""all"" variations/correction from a turbulence model should be compatible with each other and the user can use them simultaneously. Most of these variations/corrections only affect to the source terms, thus it forms the main contribution to this pull request. ## Short history summary; Originally the idea behind such an approach is given by @clarkpede in [here](https://github.com/su2code/SU2/issues/992#issuecomment-652446915).; The code implementation was suggested by @pcarruscag in [here](https://github.com/su2code/SU2/pull/1066#discussion_r470975915).; For the user interface, this is being or was discussed in [here](https://github.com/su2code/SU2/issues/1364#issue-981474153). Some time ago, I made a PR #1066 to correct the SA model in SU2. Further I had the intention to implement the above presented approach to the SA for that pull request. However since the the presented approach can also be applied to the [SST](https://github.com/su2code/SU2/discussions/1403#discussion-3625259) or any turbulence model, I decided to create a new pull request. _Please note that this is a very draft pull request, it is not meant to work at all._. ## Documentation; Down below I will explain the ""theory"" behind it as well as the code structure that I will try to follow, just in case someone wants to replicate it for the SST. Regarding the user interface, I did not work on that yet. I will address it at the end. ### Theory; The Spalart-Allamaras correction/variation models to be implemented in SU2 are listed below. One can find a detailed description for example in [NASA TMR website](https://turbmodels.larc.nasa.gov/spalart.html).; - Spalart-Allmaras standard; - Spalart-Allmaras negative; - Spalart-Allmaras **yes** ft2 term; - Spalart-Allmaras mixing layer compressibility correction; - Spalart-Allmaras Edwards modification; - Spalar",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1411:730,interface,interface,730,https://su2code.github.io,https://github.com/su2code/SU2/pull/1411,2,['interface'],['interface']
Integrability,"## Scope; Elasticity problems can be quite demanding linear solver wise as your typical case will have very few Dirichlet boundaries.; Common iterative methods can only go so far, and pseudo time strategies to improve conditioning do not work as well as for fluid problems due to the elliptic nature of the equations.; Scalability is also an issue since most preconditioners get weaker as the problem gets partitioned.; Direct sparse solvers handle these problems just fine, so life is good again, until you run out of RAM that is (which only ever happens in 3D). Time complexity is about O(N^2) and storage O(N^1.5). ## Proposed Changes; Wrapper class for Inria's direct sparse solver [PaStiX](http://pastix.gforge.inria.fr/files/README-txt.html).; Why this solver? Because it is open source, has active development in advanced features like GPU support and compression techniques to reduce memory footprint, and from my experience it is really robust. ## Implementation; As this feature benefits mostly the FSI people (@rsanfer, @cvencro, and me) I tried to keep it as standalone as possible.; The core implementation is in separate files and nothing needs to change in CSysMatrix for this to work. ## Usage; Available factorizations:; - LDLT; - LU; - ILU(k). The ILU is different from the one we have in that it is computed for the entire matrix and not just for the local matrices (i.e. it considers halos), it is not very fast though.; The three factorizations can be used as preconditioners via options PASTIX_ILU, PASTIX_LU, and PASTIX_LDLT. And the first two as solvers via options PASTIX_LU and PASTIX_LDLT (in which case you should use a preconditioner type that does not cause CSysMatrix to allocate extra memory (LU_SGS).; The reason LDLT and LU can also be used as preconditioners is that it is possible to set a factorization frequency (via PASTIX_FACTORIZATION_FREQUENCY) so that the factorizations are only computed every N iterations or only on the first call (frequency set to 0), th",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/771:639,Wrap,Wrapper,639,https://su2code.github.io,https://github.com/su2code/SU2/pull/771,1,['Wrap'],['Wrapper']
Integrability,"## Steps to reproduce the underlying issue. Compile SU2 with Clang and `-fsanitize=address` (and possibly `-fno-omit-frame-pointer`), and run the testcases as usual. AddressSanitizer warnings appear in the output (if any). So far, only the tests in serial_regression.py have been analyzed. ## Proposed Changes. Depending on the context of the memory leak, ; - add `delete` / `delete[]` statement; - turn `new`-allocated arrays into `std::vector`s, or; - for one bug caused by a `delete` to a base class pointer, make its destructor `virtual`. . ## Related Work. #2211 and #2213 have been detected in the same way, but I'm not sure how to properly fix them. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [ ] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [x] I used the pre-commit hook to prevent dirty commits and used `pre-commit run --all` to format old commits.; - [not necessary] I have added a test case that demonstrates my contribution, if necessary.; - [not necessary] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2212:311,Depend,Depending,311,https://su2code.github.io,https://github.com/su2code/SU2/pull/2212,1,['Depend'],['Depending']
Integrability,"## Summary; The fluid should freely pass a fluid interface between RANS zones. However, in some unsteady 2D simulations, I encountered the interface generating unexpected flow solutions which is observed through the increased eddy viscosity and unphysical velocity as the inner zone rotates with respect to the stationary outer zone. I have tried using; - a finer mesh with more cells on the zone interface,; - the incompressible and compressible RANS solvers, ; - smaller time steps and more pseudo-time iterations,; - different interface interpolation methods (NEAREST_NEIGHBOR and WEIGHTED_AVERAGE),; - different convective numerical methods (upwind/central and with and without MUSCL_FLOW). however the problem persisted. ## Setup. ### Mesh; <img width=""600"" alt=""Screenshot 2024-03-30 at 10 28 21"" src=""https://github.com/su2code/SU2/assets/81166192/6e5a8fcf-fd72-41ed-a5cf-b2a477a55b0a"">. _File_: ; [vawt_ami.su2](https://github.com/su2code/SU2/files/14811551/vawt_ami.txt). ### Configuration files; _su2Config.cfg_:; ```; SOLVER= INC_RANS; KIND_TURB_MODEL= SST; MATH_PROBLEM= DIRECT; CONFIG_LIST= (zone_sta.cfg, zone_rot.cfg). INNER_ITER= 1; OUTER_ITER= 20; TIME_ITER= 3160. TIME_DOMAIN= YES; TIME_MARCHING= DUAL_TIME_STEPPING-2ND_ORDER; TIME_STEP = 0.000593412; MAX_TIME= 50.0. INC_DENSITY_INIT= 1.225; INC_VELOCITY_INIT= ( 10.0, 0.0, 0.0 ); INC_TEMPERATURE_INIT= 288.15; INC_INLET_TYPE= VELOCITY_INLET; INC_OUTLET_TYPE= PRESSURE_OUTLET. REF_ORIGIN_MOMENT_X = 0.00; REF_ORIGIN_MOMENT_Y = 0.00; REF_ORIGIN_MOMENT_Z = 0.00; REF_LENGTH= 0.85; REF_AREA= 1.7. VISCOSITY_MODEL= CONSTANT_VISCOSITY; MU_CONSTANT= 1.8375E-5. MARKER_ZONE_INTERFACE= ( AMI1, AMI2 ); MARKER_FLUID_INTERFACE= ( AMI1, AMI2 ); KIND_INTERPOLATION= NEAREST_NEIGHBOR. NUM_METHOD_GRAD= WEIGHTED_LEAST_SQUARES; CFL_NUMBER= 20.0; MAX_DELTA_TIME= 1E6. SLOPE_LIMITER_FLOW= VENKATAKRISHNAN; MUSCL_TURB= NO; SLOPE_LIMITER_TURB= VENKATAKRISHNAN; VENKAT_LIMITER_COEFF= 0.05; REF_SHARP_EDGES = 3.0; SENS_REMOVE_SHARP = NO; LIMITER_ITER= 9",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/2255:49,interface,interface,49,https://su2code.github.io,https://github.com/su2code/SU2/issues/2255,4,['interface'],['interface']
Integrability,"### Discussed in https://github.com/su2code/SU2/discussions/1456. <div type='discussions-op-text'>. <sup>Originally posted by **CipollinoDuck** November 30, 2021</sup>; Hello everyone,. I ask here because I cannot find any solution elsewhere. I am attempting an **Adjoint Optimization problem** with viscous solver (**RANS/NAVIER_STOKES**) using the **shape_optimization.py** script but I can't complete it because I receive the following message:. `Error in ""void CSolver::Read_SU2_Restart_Binary(CGeometry*, const CConfig*, std::__cxx11::string)"":`; `-------------------------------------------------------------------------`; `Unable to open SU2 restart file solution_adj_cd.dat`. With EULER solver it works fine, it creates the **solution_adj_*.dat** files everytime it runs the ADJOINT problem so, at the beginning, the process does not require any further file besides the .su2 and the .cfg ones. Even the _Constrained shape design of a transonic turbulent airfoil tutorial_ does not work. The required files (_initial solution files for the solver and adjoint solution_flow.dat, solution_adj_cd.dat, and solution_adj_cmz.dat_) are given from the beginning and if they are not added to the path in which the tutorial will be run, it cannot be completed. I also tried the **turb_ONERAM6 Test case** and personal files as well. Furthermore, I tried to cheat (?) creating a solution_adj_cd.dat and solution_adj_cmz.dat files from the EULER ADJOINT problem because it was the only way I had to obtain that file: the RANS ADJOINT problem performed better than expected reaching a feasible geometry which is not the one obtained in the tutorial. I do not get why I have this problem, if it is correct or not. Has anyone experienced this before?. Actually, I think I will run this kind of problem with the cheating (?) procedure described before because I need to go ahead with the work and it seems to work relatively fine. In conclusion, the **ADJOINT** problem with **RANS/NAVIER_STOKES** solver doe",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1458:439,message,message,439,https://su2code.github.io,https://github.com/su2code/SU2/issues/1458,2,['message'],['message']
Integrability,"(GCC) 4.8.5 20150623 (Red Hat 4.8.5-28)""); C linker for the host machine: cc ld.bfd 2.27-27; C++ compiler for the host machine: c++ (gcc 4.8.5 ""c++ (GCC) 4.8.5 20150623 (Red Hat 4.8.5-28)""); C++ linker for the host machine: c++ ld.bfd 2.27-27; Host machine cpu family: x86_64; Host machine cpu: x86_64; Program python3 found: YES (/home/FDa/FDa045/anaconda3/bin/python3); Found pkg-config: /usr/bin/pkg-config (0.27.1); mpicc found: YES (/work/A/openmpi/3.0.0_intel2018u2/bin/mpicc) 3.0.0; Run-time dependency MPI for c found: YES 3.0.0; mpic++ found: YES (/work/A/openmpi/3.0.0_intel2018u2/bin/mpic++) 3.0.0; Run-time dependency MPI for cpp found: YES 3.0.0; Message: Boost sources found.; Found CMake: /home/FDa/FDa045/programs/cmake/cmake-3.17.3/bin/cmake (3.17.3); Run-time dependency mkl-static-lp64-seq found: NO (tried pkgconfig and cmake); Program swig found: YES (/usr/bin/swig); Message: Using mpi4py from /home/FDa/FDa045/anaconda3/lib/python3.7/site-packages/mpi4py/include; Dependency python found: YES (pkgconfig); Program install.sh found: YES (/bin/sh /home/FDa/FDa045/programs/SU2/SU2_PY/pySU2/install.sh). **Next, I copied the 4-line output needed for .bashrc, and run ninja.**; `./ninja -j36 -C build install`. **Then, I got the following errors:**. > ninja: Entering directory `build'; [691/994] Compiling C++ object SU2_CFD/src/libSU2core_AD.a.p/solvers_CTurbSolver.cpp.o; FAILED: SU2_CFD/src/libSU2core_AD.a.p/solvers_CTurbSolver.cpp.o; c++ -ISU2_CFD/src/libSU2core_AD.a.p -ISU2_CFD/src -I../SU2_CFD/src -I../externals/CLI11 -I../externals/cgns/adf -Iexternals/cgns -I../externals/cgns -I../externals/metis/include -I../externals/metis/GKlib -I../externals/metis/libmetis -I../externals/parmetis/include -I../externals/parmetis/libparmetis -Iexternals/tecio -I../externals/tecio -Iexternals/tecio/teciompisrc -I../externals/tecio/teciompisrc -I/home/FDa/FDa045/programs/intel/2020_update4/mkl/include -I../externals/codi/include -I../externals/medi/include -I../externals/medi/s",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1420:1600,Depend,Dependency,1600,https://su2code.github.io,https://github.com/su2code/SU2/issues/1420,1,['Depend'],['Dependency']
Integrability,"(I don't usually build the python wrapper locally); On Ubuntu 18 (GCC 7.5) I can confirm the same problem linking the python wrapper library with default meson options.; However, passing -fPIC in CXXFLAGS and LDFLAGS solves the issue, clang-10 does not have this fPIC problem, and looking around I found other reports of this issue being particular to GCC (https://github.com/xoreaxeaxeax/rosenbridge/issues/1). Maybe in your case the environment variables are not making it to the compiler wrapper? (it looks like you are using a cluster and they can be funny...) Try giving a wrong value to CXXFLAGS (e.g. fPIK), meson should fail when it tests the compiler. So in summary I don't think we should change the defaults of the build system, but I'll ask other devs if they've had the same problem.; I'll change the tittle to make it easier for folks with the same issue to find this.; Please do let us know what solution you find, we may at least add a warning to ours doc.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1568#issuecomment-1076433714:34,wrap,wrapper,34,https://su2code.github.io,https://github.com/su2code/SU2/issues/1568#issuecomment-1076433714,3,['wrap'],['wrapper']
Integrability,"(I seem to have a knack to find cans of worms).; What I did in a55ca26 is not accurate, the integral of the fluid stress needs to be done in current coordinates and the normal available trough CVertex is in reference (undeformed) coordinates. I've implemented this in the structural solver as a preprocessing step. For each surface element of all FSI markers an average stress is computed based on its nodal values, it is then integrated in current (deformed) coordinates. A second pass over the elements scatters the force on the element to the nodes, this is to account for nodes that participate in multiple markers.; The mechanism by which the structural solver takes the flow tractions and updates the Residual vector was not changed, so this changes are fairly local.; The only downside I see is that knowledge of whether the interpolation is consistent or conservative is now required in two locations... Verification of the FSI adjoint is still ongoing.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/597#issuecomment-429427811:427,integrat,integrated,427,https://su2code.github.io,https://github.com/su2code/SU2/pull/597#issuecomment-429427811,1,['integrat'],['integrated']
Integrability,"(I was not expecting this many comments so quickly, thanks guys!). First let me clarify the intent.; I do not propose replacing the routines that deal with CSysMatrix, or change its format, all that (Krylov solvers, sparse approximate factorizations, etc.) is relatively independent from what I have in mind.; Nevertheless being able to use PETSc or HYPRE would be interesting as it would give us access to AMG, and @talbring 's branch feature_template_linear_solver would make such an integration compatible with AD.; What I would like is to have a ""CMatrixDense"" class, to give concrete examples:; - For RBF interpolation the guy who worked on it before me implemented his own Cholesky and LU factorizations, matrix-matrix, matrix-vector routines, etc.; - @jayantmukho recently needed some eigenvector decomposition's for the uncertainty quantification feature.; - I imagine in some other places of the code similar routines were needed, for example small matrix inversion when computing gradients by weighted least squares (indeed what I need now is a QR decomposition). And, as an added bonus, I think some other areas of the code could be simplified / optimized by adopting a dense matrix format, for example:; - This snipped from the viscous numerics refactoring`for (iDim = 0; iDim < nDim; iDim++) {; TauElem[iDim] = 0.0;; for (jDim = 0; jDim < nDim; jDim++); TauElem[iDim] += tau[iDim][jDim]*UnitNormal[jDim];; }` would simply become `TauElem=tau*UnitNormal`; - Cumbersome allocations like `tau_jacobian_i = new su2double* [nDim];; for (iDim = 0; iDim < nDim; iDim++) {; tau_jacobian_i[iDim] = new su2double [nVar];; }` become `Matrix tau_jacobian_i(nDim,nVar);` and the cleanup is dealt with by the destructor of the object automatically. Now to answer some questions.; @juanjosealonso @erangit LAPACK and BLAS are indeed the standard, so much so that most (all?) newer libraries will call their routines behind the scenes.; However they considerably simplify the user interface by encapsulat",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/643#issuecomment-459653772:132,rout,routines,132,https://su2code.github.io,https://github.com/su2code/SU2/issues/643#issuecomment-459653772,8,"['integrat', 'rout']","['integration', 'routines']"
Integrability,") then a good approach is to ; 1. make your `enum` of choice an `enum class` and remove the associated numbers. ; 2. Rename here if reasonable, i,.e. `ENUM_INLET_TYPE` can be just `INLET_TYPE`. Also the option names to not be redundant so e.g. `INLET_TYPE::PRESSURE_INLET_TYPE` could become `INLET_TYPE::PRESSURE`; 3. Add a `NONE` or `NO_THING` option if needed. Often the global `NONE` option is and that made a lot of people very angry and has been widely regarded as a bad move 🧙 ; 2. then you go to `CConfig.c/hpp` and change the option type and everything there (because in the `CConfig` class the variable is usually defined). Find the `GetKind_yourOption` and search the code base for that `Get` function.; 3. Once all search results and the following function bodies are changed just compile and fix until the code builds; 4. Special care for switch statements: If not all options are present make a `default; break;` line -> otherwise the automated builds will fail on a warning (clang is used, I found gcc does only complain with an additional flag); 4. commit at best just 1 commit with a clear message and push. That makes reverting easier if it fails and introduced some non-obvious error; ; Have fun :). ## Related Work; #1242. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [ ] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1258:1515,message,message,1515,https://su2code.github.io,https://github.com/su2code/SU2/pull/1258,1,['message'],['message']
Integrability,"**Describe the bug**. I have suceeded build SU2 when `-Denable-pywrapper=false`. Then, I want to install SU2 by python wrapper build. But the bug is reported:. ```; FAILED: SU2_PY/pySU2/_pysu2.dll.p/pySU2.cxx; ""D:\Program Files\swigwin-4.0.2\swig.EXE"" ""-DHAVE_CGNS"" ""-DNDEBUG"" ""-DHAVE_MPI"" ""-DHAVE_METIS"" ""-DHAVE_PARMETIS"" ""-DHAVE_TECIO"" ""-DTECIOMPI"" ""-c++"" ""-python"" ""-I"" ""-outdir"" ""C:/Users/ZHQ/Desktop/SU2/build/SU2_PY/pySU2"" ""-o"" ""./SU2_PY/pySU2/_pysu2.dll.p/pySU2.cxx"" ""../SU2_PY/pySU2/pySU2.i""; ..\SU2_PY\pySU2\pySU2.i(58) : Error: Unable to find 'mpi4py\mpi4py.i'; [2/10] Linking static target externals/cgns/hdf5/libsu2hdf5.a; ninja: build stopped: subcommand failed.; ```. **To Reproduce**; Firstly, I install the `mpi4py` in a conda environment. And I am sure I have install `mpi4py`:. ```; (SU2) C:\Users\ZHQ>python; Python 3.7.11 (default, Jul 27 2021, 09:42:29) [MSC v.1916 64 bit (AMD64)] :: Anaconda, Inc. on win32; Type ""help"", ""copyright"", ""credits"" or ""license"" for more information.; >>> from mpi4py import MPI; >>> MPI; <module 'mpi4py.MPI' from 'D:\\Anaconda\\envs\\SU2\\lib\\site-packages\\mpi4py\\MPI.cp37-win_amd64.pyd'>; >>>; ```; But the `python ./meson.py build` find another python environment:; ```; Program python3 found: YES (C:\Users\ZHQ\AppData\Local\Microsoft\WindowsApps\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\python.exe); ```; I have find a similar issure (https://github.com/su2code/SU2/issues/722). This issue suggestion that we need to modify the `Makefile`. However, since I build SU2 in Win10, I have no `Makefile`. Then, I find the `build/build.ninja` specified the location of `python.exe`. So I modify the `python.exe` location in `build.ninja` by:; 1. modify all `C:\Users\ZHQ\AppData\Local\Microsoft\WindowsApps\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\python.exe` to `D:\Anaconda\envs\SU2\python.exe`. ; 2. modify all `C$:/Users/ZHQ/AppData/Local/Microsoft/WindowsApps/PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0/python.exe` to ",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1575:119,wrap,wrapper,119,https://su2code.github.io,https://github.com/su2code/SU2/issues/1575,1,['wrap'],['wrapper']
Integrability,"**Describe the bug**. When compiling SU2 7.1.1 Blackbird from the Develop Branch with Pastix support, the build fails at Common/src/libSU2CommonAD.a.p/wall_model.cpp.o with a c++ error saying unrecognized command-line-option '-fexceptions;-pthread'. Here is a snip from the error message: ; ![image](https://user-images.githubusercontent.com/24353606/128623331-461f0ded-4b4d-4ece-83e8-b2eb40e9129d.png). **To Reproduce**; Basically I download the develop branch from SU2 7.1.1,; extract it and configure using:; ![image](https://user-images.githubusercontent.com/24353606/128623382-55f4bc2e-e971-4b1d-81bf-626fc9ae484d.png). **Desktop (please complete the following information):**; - OS: Fedora 34; - C++ compiler and version: g++ (GCC) 11.2.1; - MPI implementation and version: OpenMPI-4.1.1; - SU2 Version: 7.1.1-Develop",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1349:280,message,message,280,https://su2code.github.io,https://github.com/su2code/SU2/issues/1349,1,['message'],['message']
Integrability,"**Describe the bug**; *A clear and concise description of what the bug is and what you expect the behavior to be instead. If applicable, add screenshots to help explain your problem.*. I am running a WMLES channel flow test case with grid size 102 x 31 x 52 = 164424 nodes. When running the problem on a large number of cores, e.g. 128 cores, SU2 fails during the preprocessing step. Running valgrind gives the error; ![image](https://user-images.githubusercontent.com/41386609/97629439-580a2180-19eb-11eb-9e9f-023fc96c05aa.png); which for my version corresponds to this line; ![image](https://user-images.githubusercontent.com/41386609/97629473-66f0d400-19eb-11eb-89c8-9b677c720240.png); It seems that theres a mismatch on the receiver end. The problem disappears if I use smaller number of cores, e.g. 64, and everything will look normal (solution converges and SU2 exit normally). The actual number of MPI cores that triggers the bug seems to be problem dependent. I also ran a couple of finer grids but started to see the bug with 64 cores. For these finer mesh, reducing to a smaller number like 48 cores makes the problem disappear again. Similar problem has been observed by @clarkpede and mentioned in pecos-hybrid/su2#53 but he was using an older version of SU2 (v6.2.0). I should mention another common thing is that we are both using periodic boundary conditions. **To Reproduce**; *Please provide a config file and mesh for a minimal example that recreates the problem.*; [wmles_chan_re5200.zip](https://github.com/su2code/SU2/files/5461150/wmles_chan_re5200.zip); (Reminder: This has to be ran with very large number of cores though. I see the problem with 128 cores). **Desktop (please complete the following information):**; - OS: CentOS Linux release 7.6.1810; - C++ compiler and version: gcc/6.3.0 ; - MPI implementation and version: openmpi/3.1.2; - SU2 Version: v7.0.3",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1099:957,depend,dependent,957,https://su2code.github.io,https://github.com/su2code/SU2/issues/1099,1,['depend'],['dependent']
Integrability,"**Describe the bug**; *A clear and concise description of what the bug is and what you expect the behavior to be instead. If applicable, add screenshots to help explain your problem.*. Python wrapper hangs on Set_MPI_ActDisk in CEulerSolver.cpp line 1091 ""SU2_MPI::Barrier(MPI_COMM_WORLD);""; If the SU2_CFD is called without python wrapper, it runs ok. **To Reproduce**; *Please provide a config file and mesh for a minimal example that recreates the problem.*. Go to the test case solver, choose the propeller one and run the following script. mpirun -np 2 python launch_su2.py --parallel -f propeller.cfg; [launch_su2.py.txt](https://github.com/su2code/SU2/files/5762218/launch_su2.py.txt). There is no issue when SU2_CFD is called directly:; mpirun -np 2 SU2_CFD propeller.cfg. **Desktop (please complete the following information):**; - OS: [Ubuntu 16.04.6 LTS]; - C++ compiler and version: [g++ (GCC) 9.3.0]; - MPI implementation and version: [OpenMPI 4.0.5]; - SU2 Version: [develop]; - Python Version: 3.6.12; - MPI4Py Version: 3.0.3. In order to fully reproduce the error one can try running the following commands under Anaconda Python Manager, although the same error appears using the default ubuntu python3 and openmpi compilers :; ->conda create -n su2code python=3.6; ->conda activate su2code; ->conda install -c conda-forge c-compiler compilers cxx-compiler openmpi swig mpi4py numpy scipy. Install SU2 with the following script:. #!/bin/bash; export CC=/path/anaconda3/envs/su2code/bin/mpicc; export CXX=/path/anaconda3/envs/su2code/bin/mpicxx; export CXXFLAGS=${CXXFLAGS}:""-lmpi""; rm -rf SU2/build; rm -rf SU2_exec_dev/bin; cd SU2; ./meson.py build -Denable-pywrapper=true -Dcustom-mpi=true --prefix=/path/SU2_exec_dev; ./ninja -C build install",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1150:192,wrap,wrapper,192,https://su2code.github.io,https://github.com/su2code/SU2/issues/1150,2,['wrap'],['wrapper']
Integrability,"**Describe the bug**; *A clear and concise description of what the bug is and what you expect the behavior to be instead. If applicable, add screenshots to help explain your problem.*; For axisymmetric flows where the outflow is aligned with the symmetry axis (horizontal axisymmetry, vertical outlet), the computed outlet area of the circular outlet can be off by 10%.; This is due (I think) to the fact that the node normals are used for the computation of the edge size and integrated area and mass flux. This computation is performed e.g. in CIncEulerSolver::GetOutlet_Properties. An approach where the marker edges are used instead to compute the edge sizes leads to the correct area and mass flux computations. **To Reproduce**; *Please provide a config file and mesh for a minimal example that recreates the problem.*. **Desktop (please complete the following information):**; - SU2 Version: current develop",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1710:477,integrat,integrated,477,https://su2code.github.io,https://github.com/su2code/SU2/issues/1710,1,['integrat'],['integrated']
Integrability,"**Describe the bug**; A compiler warning brought me to this routine.; The logic to check for convexity of 3D elements seems flawed, I left two comments in the code in #1167 (it will be in develop soon enough) of what seems odd about it.; I think this routine was introduced in #1076, and it seems the intention is to check the volume of the tet associated with each corner of an element, a similar method is used in CPhysicalGeometry::Check_IntElem_Orientation. I am not planning to fix this myself :)",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1171:60,rout,routine,60,https://su2code.github.io,https://github.com/su2code/SU2/issues/1171,2,['rout'],['routine']
Integrability,"**Describe the bug**; Building SU2 with building options -Denable-pywrapper and -Dwith-mpi, The meson error occured.; Please let me know if anyone knows what to do. The part of meson-log.txt is below:. > Message: Boost sources found.; Program swig found: YES (/usr/bin/swig); Running command: /---/---/---/work/SU2/venv/bin/python3 -c import mpi4py; print(mpi4py.get_include()); --- stdout ---; /---/---/---/work/SU2/venv/lib/python3.7/site-packages/mpi4py/include. > --- stderr ---. > Message: Using mpi4py from /---/---/---/work/SU2/venv/lib/python3.7/site-packages/mpi4py/include; Pkg-config binary for 1 is cached.; Determining dependency 'python-3.7m' with pkg-config executable '/usr/bin/pkg-config'; env[PKG_CONFIG_LIBDIR]: /---/---/---/soft/Python-3.7.9/build/lib/pkgconfig; env[PKG_CONFIG_PATH]: /opt/intel/compilers_and_libraries_2019.1.144/linux/mkl/bin/pkgconfig; Called `/usr/bin/pkg-config --modversion python-3.7m` -> 0; 3.7; env[PKG_CONFIG_LIBDIR]: /---/---/---/soft/Python-3.7.9/build/lib/pkgconfig; env[PKG_CONFIG_PATH]: /opt/intel/compilers_and_libraries_2019.1.144/linux/mkl/bin/pkgconfig; Called `/usr/bin/pkg-config --cflags python-3.7m` -> 0; -I/data/home/yamazaki/soft/Python-3.7.9/build/include/python3.7m; env[PKG_CONFIG_LIBDIR]: /---/---/---/soft/Python-3.7.9/build/lib/pkgconfig; env[PKG_CONFIG_ALLOW_SYSTEM_LIBS]: 1; env[PKG_CONFIG_PATH]: /opt/intel/compilers_and_libraries_2019.1.144/linux/mkl/bin/pkgconfig; Called `/usr/bin/pkg-config --libs python-3.7m` -> 0; -L/---/---/---/soft/Python-3.7.9/build/lib -lpython3.7m; env[PKG_CONFIG_LIBDIR]: /---/---/---/soft/Python-3.7.9/build/lib/pkgconfig; env[PKG_CONFIG_PATH]: /opt/intel/compilers_and_libraries_2019.1.144/linux/mkl/bin/pkgconfig; Called `/usr/bin/pkg-config --libs python-3.7m` -> 0; -L/---/---/---/soft/Python-3.7.9/build/lib -lpython3.7m; WARNING: extract_all_objects called without setting recursive; keyword argument. Meson currently defaults to; non-recursive to maintain backward compatibility but; the def",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1672:204,Message,Message,204,https://su2code.github.io,https://github.com/su2code/SU2/issues/1672,3,"['Message', 'depend']","['Message', 'dependency']"
Integrability,"**Describe the bug**; Compile MPI Version error on Windows. I can build successfully by run ` py .\meson.py build` ant `ninja.exe build install` , but it can't compile with ` py .\meson.py build -Dwith-mpi=enabled`. the error message :; ```; Version: 0.61.1; Source dir: F:\suflow\code\Su-FVMu-Solver; Build dir: F:\suflow\code\Su-FVMu-Solver\build; Build type: native build; Project name: SU2; Project version: 7.5.1 ""Blackbird""; C compiler for the host machine: gcc (gcc 8.1.0 ""gcc.exe (x86_64-posix-seh-rev0, Built by MinGW-W64 project) 8.1.0""); C linker for the host machine: gcc ld.bfd 2.30; C++ compiler for the host machine: c++ (gcc 8.1.0 ""c++.exe (x86_64-posix-seh-rev0, Built by MinGW-W64 project) 8.1.0""); C++ linker for the host machine: c++ ld.bfd 2.30; Host machine cpu family: x86_64; Host machine cpu: x86_64; Program python3 found: YES (C:\Users\zeng\AppData\Local\Programs\Python\Python37\python.exe); WARNING: Python files installed by Meson might not be found by python interpreter.; This warning can be avoided by setting ""python.platlibdir"" option.; WARNING: Python files installed by Meson might not be found by python interpreter.; This warning can be avoided by setting ""python.purelibdir"" option.; Found pkg-config: C:\Program Files\mingw-w64\bin\pkg-config.EXE (0.26); mpicc found: NO; Run-time dependency MPI for c found: YES; mpic++ found: NO; Run-time dependency MPI for cpp found: NO (tried pkgconfig, config-tool and system). meson.build:61:2: ERROR: Dependency ""mpi"" not found, tried pkgconfig, config-tool and system. A full log can be found at F:\suflow\code\Su-FVMu-Solver\build\meson-logs\meson-log.txt; ```. meson-log.txt: ; [meson-log.txt](https://github.com/su2code/SU2/files/12427739/meson-log.txt). **Bug report checklist**. - [x] Consulting the build instructions (https://su2code.github.io/docs_v7/Build-SU2-Windows/).; - [x] Looking for similar problems on GitHub or CFD-Online (https://www.cfd-online.com/Forums/su2/).; - [x] Updating to the newest versio",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/2114:226,message,message,226,https://su2code.github.io,https://github.com/su2code/SU2/issues/2114,1,['message'],['message']
Integrability,**Describe the bug**; During the build of the latest develop version I get the following warning message; SHA-1 tag stored in index does not match SHA tag stored in this script. **To Reproduce**; Just run the meson script. **Desktop (please complete the following information):**; - OS: Ubuntu 18.04; - C++ compiler and version: GCC 8.4.0; - MPI implementation and version: OpenMPI 2.1.1; - SU2 Version: 7.0.7,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1100:97,message,message,97,https://su2code.github.io,https://github.com/su2code/SU2/issues/1100,1,['message'],['message']
Integrability,"**Describe the bug**; Error at link time when compiling SU2 without mpi (""-Dwith-mpi=disabled"") with debug flags (""--buildtype=debug""). This problem does not seem to occur when compiling with release (""--buildtype=release""). Error message:; ```; /usr/bin/ld: Common/src/libSU2Common.a(interface_interpolation_CMirror.cpp.o): in function `CMirror::SetTransferCoeff(CConfig const* const*)':; /local/SU2/build/../Common/src/interface_interpolation/CMirror.cpp:173: undefined reference to `MPI_STATUS_IGNORE'; /usr/bin/ld: /local/SU2/build/../Common/src/interface_interpolation/CMirror.cpp:174: undefined reference to `MPI_STATUS_IGNORE'; /usr/bin/ld: /local/SU2/build/../Common/src/interface_interpolation/CMirror.cpp:175: undefined reference to `MPI_STATUS_IGNORE'; ```; I noticed that this method does not use any MPI preprocessor flags (i.e. this function does not make use of #ifdef HAVE_MPI); however, it's not obvious to me why switching the build type to release would solve the problem. . **To Reproduce**; Configure with meson:; ""./meson.py build --reconfigure --buildtype=debug -Dwith-mpi=disabled""; Build with ninja:; ./ninja -C build install. **Desktop (please complete the following information):**; - OS: Arch Linux 5.6.3-arch1-1; - C++ compiler and version: gcc (Arch Linux 9.3.0-1) 9.3.0; - MPI implementation and version: Open MPI 4.0.3; - SU2 Version: SU2 v. 7.0.3, branch: develop, commit: c093a62a2b",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/956:231,message,message,231,https://su2code.github.io,https://github.com/su2code/SU2/issues/956,1,['message'],['message']
Integrability,"**Describe the bug**; Hi,all.; I encountered a failure when I was running a unit test. **To Reproduce**; Here are my reproduction steps; ```; mkdir build && cd build; meson ../ -Denable-tests=true; ninja -j16 -v; ninja test ; ```; This is the error message of the self-test use case.; ```; [0/1] Running all tests.; 1/1 Catch2 test driver FAIL 0.07s exit status 1; >>> MALLOC_PERTURB_=195 /home/spack-stage/root/spack-stage-su2-7.1.1-bqiorkxs5upvexredf2f5ips46h2nruy/spack-src/spack-build/UnitTests/test_driver; ――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――― ✀ ――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――. ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~; test_driver is a Catch v2.11.1 host application.; Run with -? for options. -------------------------------------------------------------------------------; SIMD DOUBLE; -------------------------------------------------------------------------------; ../UnitTests/Common/vectorization.cpp:71; ............................................................................... ../UnitTests/Common/vectorization.cpp:82: FAILED:; CHECK( t[1] == 7 ); with expansion:; 0.0 == 7. ===============================================================================; test cases: 19 | 18 passed | 1 failed; assertions: 75 | 74 passed | 1 failed. ―――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――. Summary of Failures:. 1/1 Catch2 test driver FAIL 0.07s exit status 1. Ok: 0; Expected Fail: 0; Fail: 1; Unexpected Pass: 0; Skipped: 0; Timeout: 0. Full log written to /home/spack-stage/root/spack-stage-su2-7.1.1-bqiorkxs5upvexredf2f5ips46h2nruy/spack-src/spack-build/meson-logs/testlog.txt. ```. **Desktop (please complete the following information):**; - OS: linux-centos8-aarch64; -",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1331:249,message,message,249,https://su2code.github.io,https://github.com/su2code/SU2/issues/1331,1,['message'],['message']
Integrability,"**Describe the bug**; I noticed I was converging to quite different solutions when MUSCL is on v. off for a much larger case I am doing using SU2 with SST-2003m, so I created a smaller 2D case to test out why this may be occurring. Below is a screenshot of one of the meshes, where the pinkish line indicates a value for an interface that I plot heat fluxes from. I have generated several meshes with increasing level of refinement from A to D. ![image](https://github.com/su2code/SU2/assets/116454159/4d04287e-b111-45b5-96dd-6b9cc5f18217). It appears that there may be either a misunderstanding on my part with the implementation of SST-V2003m w/ MUSCL, or that a bug exists in SU2 for it. I got very unusual and different results when using MUSCL vs. not. To further look into this, I also completed additional simulations using `KIND_TURB_MODEL=SA`, which got me much more reasonable-looking results. Please see the plots below:. ![image](https://github.com/su2code/SU2/assets/116454159/e5d80bbd-9bc2-4f3c-a6e2-bb5dfc43336b); ![image](https://github.com/su2code/SU2/assets/116454159/3804bdf1-7f99-4584-9683-cfbfd7dfa916). Lastly, here is the config file:; [config.txt](https://github.com/su2code/SU2/files/12155765/M6_LowRe.txt). Note that the ""MUSCL=ON"" in the plots indicate the solution for both `MUSCL_FLOW=YES` and `MUSCL_TURB=YES`. That is the only difference between config files. Also, I tried using `MARKER_RIEMANN`, `MARKER_OUTLET`, and `MARKER_SUPERSONIC_OUTLET` on the outlets with no success on fixing this discrepancy, so I believe it is not related to the boundary conditions. **Bug report checklist**; *Please make sure that you have followed the checklist below, many common problems can be solved by:*. - [X] Consulting the build instructions (https://su2code.github.io/docs_v7/Build-SU2-Linux-MacOS/).; - [x] Looking for similar problems on GitHub or CFD-Online (https://www.cfd-online.com/Forums/su2/).; - [X] Updating to the newest version of SU2 (either develop, master, or th",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/2088:324,interface,interface,324,https://su2code.github.io,https://github.com/su2code/SU2/issues/2088,1,['interface'],['interface']
Integrability,"**Describe the bug**; If you follow the Quickstart tutorial, you get one warning (""The adjoint solver should use a non-dimensional flow solution"") and this error when running the CONTINUOUS_ADJOINT pass:. ```; SU2_CFD inv_NACA0012.cfg; WARNING: The adjoint solver should use a non-dimensional flow solution. Error in ""void CConfig::SetPostprocessing(unsigned short, unsigned short, unsigned short)"": ; -------------------------------------------------------------------------; CFL adaption only available for finite-volume fluid solvers.; Please select CFL_ADAPT = NO.; ------------------------------ Error Exit -------------------------------. --------------------------------------------------------------------------; MPI_ABORT was invoked on rank 0 in communicator MPI_COMM_WORLD; with errorcode 1. NOTE: invoking MPI_ABORT causes Open MPI to kill all MPI processes.; You may or may not see output from other processes, depending on; exactly when Open MPI kills them.; --------------------------------------------------------------------------; ```. **To Reproduce**; *Just follow the steps in the tutorial, one by one, and when you get to step 3 in the CONTINUOUS_ADJOINT run, you get the error.*. **Desktop (please complete the following information):**; - SU2 Version: [e.g., v7.0.1]",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/887:924,depend,depending,924,https://su2code.github.io,https://github.com/su2code/SU2/issues/887,1,['depend'],['depending']
Integrability,"**Describe the bug**; In a RANS computation of a 2.5D section of a wing, the periodic plane exhibits oscillations of pressure in the boundary layer. The issue is only present on the periodic face, not in the volume. Using a CFL of 1 helps but the instability does not disappear. A CFL of 10 leads to a crash of the computation with multiple spots like on the screenshot. Would it be linked to issue #1090 ?. ![pres_per_face](https://user-images.githubusercontent.com/91184648/145236024-fc713cbd-66d8-40b3-9036-7c1925f10229.png); ![pres_cut](https://user-images.githubusercontent.com/91184648/145236048-a91ca27a-c1c9-4d6c-9639-8b34ea5de307.png). Here is the config file:; [hl_3d_landing.txt](https://github.com/su2code/SU2/files/7677092/hl_3d_landing.txt). **Hardware and software:**; - OS: Linux Red Hat ELS 6.5; - Nodes: Intel Xeon Ivy bridge; - C++ compiler and version: intel/2018.0.1; - MPI implementation and version: intelmpi/2018.0.1; - SU2 Version: v7.2.1. Thank you for looking at this issue and for any help.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1467:837,bridg,bridge,837,https://su2code.github.io,https://github.com/su2code/SU2/issues/1467,1,['bridg'],['bridge']
Integrability,"**Describe the bug**; In my transient, compressible simulation the achievable residuals strongly depend on the type of boundary condition that is specified for a wall:. MARKER_ISOTHERMAL / MARKER_HEATFLUX (h=0):; rms_density < 1e-8; rms_energy < 1e-3. MARKER_HEATTRANSFER; rms_density > 1e-5; rms_energy > 1e-1. Here the development of the overall residuals can be seen. (other residuals look similar).; ![grafik](https://user-images.githubusercontent.com/42602495/210543380-b231a0a1-6ccf-49cd-94aa-b84ffa901815.png). The temperature development along one of the walls can be seen here and is what I'd expect.; ![grafik](https://user-images.githubusercontent.com/42602495/210544363-b4302822-91fe-411a-958c-e603fddec227.png). A more detailed analysis of local residuals shows, that the energy residuals are the largest directly at the convective wall:; ![grafik](https://user-images.githubusercontent.com/42602495/210545535-70fca515-c2e0-45ed-bed8-1fd54dab0a11.png). I've tried various numerical schemes, limiters, linear solvers and gradient reconstruction methods, but none of these settings seem to improve convergence with convective BCs. I am not sure if this is an actual bug or simply a limitation due to the way the convective BC is implemented. So far the solution looks realistic, but since my case is very sensitive to cumulative heat losses this may possibly have an influence on the final outcome. **Case summary**. - Solver: RANS, transient; - Domain: 2D Axisymmetric; - Convection: SLAU2, NTS_DUCROS; - Gradients: GREEN_GAUSS; - Turbulence: SST V2003m, Sustaining; - Slope Limiter: Venkat_Wang; - Time: 2nd Order. Full setup, mesh and outputs can be found [here](https://tumde-my.sharepoint.com/:u:/g/personal/bauer_christian_tum_de/EVbBCu8i8b9FuXNl4QyC0icB3mnnd2Ac3dRFAlRI-HrVSg?e=7nA0Vt). **Desktop (please complete the following information):**; - OS: SLES 15.1; - C++ compiler and version: Intel 2021.4; - MPI implementation and version: intelMPI 2019; - SU2 Version: current master ",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1872:97,depend,depend,97,https://su2code.github.io,https://github.com/su2code/SU2/issues/1872,1,['depend'],['depend']
Integrability,"**Describe the bug**; It looks like compilation depends on being able to reach the coolprop library, even when it is not used:; https://www.cfd-online.com/Forums/su2-installation/246859-coolprop-link-7-5-0-doesnt-work.html. I already noticed when compiling (in linux, not windows as the cfd-online post) that I always see some coolprop message. I guess some coolprop actions need to be inside some 'if coolprop' condition, depending on the presence of the coolprop compiler option (-Denable-coolprop). Besides that, it looks like the auto-fetch of coolprop in windows does not work, at least for the cfd-online user.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1868:48,depend,depends,48,https://su2code.github.io,https://github.com/su2code/SU2/issues/1868,3,"['depend', 'message']","['depending', 'depends', 'message']"
Integrability,"**Describe the bug**; It looks like we do not actually need to prescribe unit normal vectors for MARKER_INLET, because it is normalized in the code, e.g. in BC_Inlet. When a 2D inlet is at a 45 degree angle, the normal vector of the inlet can be given as [1.0, 1.0] in the config file. However, when you want to generate and use an inlet profile for this, you will get an error message . ```; ERROR: Found these values in columns 4 - 5; [1.000000e+00, 1.000000e+00]; These values should be components of a unit vector for direction,; but their magnitude is: 1.414214e+00; ```; I suggest to accept non-normalized vectors as input. This simply means that we remove this check for inlet profiles and update the description for the inlet boundary condition: **accepts surface normal vector** instead of **accepts surface unit normal vector**",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1495:378,message,message,378,https://su2code.github.io,https://github.com/su2code/SU2/issues/1495,1,['message'],['message']
Integrability,"**Describe the bug**; Python cannot import pysu2 module with error message: . ```; import pysu2; Traceback (most recent call last):; File ""<stdin>"", line 1, in <module>; File ""/Users/.../feature_pysu2_fsi_adjoint/SU2_PY/pySU2/pysu2.py"", line 17, in <module>; import _pysu2; ModuleNotFoundError: No module named '_pysu2'; ```. This issue seems to be persistent for different OSX machines under standard build when enabling python wrapper. Tried to build wrapper through swig manually and yet this problem persists. . **Desktop (please complete the following information):**; - OS: Mac OSX 12.3; - C++ compiler and version: apple clang 13.1.6; - MPI implementation and version: mpich 4.0.1; - SU2 Version: 7.3; - Python Version: 3.9.7; - SWIG Version: 4.0.2",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1606:67,message,message,67,https://su2code.github.io,https://github.com/su2code/SU2/issues/1606,3,"['message', 'wrap']","['message', 'wrapper']"
Integrability,"**Describe the bug**; SWIG fails with; ```Nothing known about namespace 'medi'``` from; https://github.com/su2code/SU2/blob/9446c8bc207574bde8fe0bfac285070d467bab4f/Common/include/mpi_structure.hpp#L57; See https://github.com/swig/swig/issues/1068. Using `-includeall` is not an option since the wrapper takes far too long to generate, I cancelled it after waiting for 15 minutes. **To Reproduce**; Build SU2 with python wrapper, MPI and autodiff. **Desktop (please complete the following information):**; - OS: any; - C++ compiler and version: any; - MPI implementation and version: any; - SU2 Version: any with python AD wrapper enabled",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/819:296,wrap,wrapper,296,https://su2code.github.io,https://github.com/su2code/SU2/issues/819,3,['wrap'],['wrapper']
Integrability,"**Describe the bug**; The rotating frame grid velocities are not set properly if used in 2-D. This is due to the error in SetRotationalVelocity routine in CGeomtery class (Cgeometry.cpp line 3881). The loop counter to find the Omega only goes upto nDim and in 2-D any rotation about the Z-axis is not considered. . **To Reproduce**; https://github.com/su2code/SU2/tree/master/TestCases/turbomachinery/centrifugal_blade is an example of a test case using rotating frame simulations in 2-D. Some of the turbomachinery options did not work for me, so I changed the turbomachinery markers to simple inlet and outlet just to get something running in this [config file.](https://github.com/su2code/SU2/files/4158761/centrifugal_blade.txt). The fix is fairly straightforward to change the loop counter to 3 in line 3891, but I wasn't sure if it is appropriate to make a PR for just this. Is it possible to add it into one of the existing ones?. Regards,; Akshay",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/860:144,rout,routine,144,https://su2code.github.io,https://github.com/su2code/SU2/issues/860,1,['rout'],['routine']
Integrability,"**Describe the bug**; There is a build error on 'develop' with the the Python wrapper enabled from recent code changes. The error points back to [line 3925 in CGeometry.cpp ](https://github.com/su2code/SU2/blob/develop/Common/src/geometry/CGeometry.cpp#L3925). ```; [1087/1090] Linking target SU2_DOT/src/SU2_DOT_AD; FAILED: SU2_DOT/src/SU2_DOT_AD ; c++ -o SU2_DOT/src/SU2_DOT_AD SU2_DOT/src/SU2_DOT_AD.p/SU2_DOT.cpp.o -Wl,--as-needed -Wl,--no-undefined -Wl,-rpath,/usr/lib/openmpi/lib -Wl,-rpath-link,/usr/lib/openmpi/lib -Wl,--start-group externals/cgns/libcgns.a externals/cgns/hdf5/libsu2hdf5.a externals/metis/libmetis.a externals/parmetis/libparmetis.a externals/tecio/teciompisrc/libteciompi.a Common/src/libSU2CommonAD.a SU2_CFD/src/libSU2core_AD.a /usr/lib/x86_64-linux-gnu/libz.so -lm -ldl -Wl,-rpath -Wl,/usr/lib/openmpi/lib -Wl,--enable-new-dtags /usr/lib/openmpi/lib/libmpi.so -Wl,-rpath -Wl,/usr/lib/openmpi/lib -Wl,--enable-new-dtags /usr/lib/openmpi/lib/libmpi_cxx.so -Wl,--end-group -Wl,-rpath -Wl,/usr/lib/openmpi/lib -Wl,--enable-new-dtags -Wl,-rpath -Wl,/usr/lib/openmpi/lib -Wl,--enable-new-dtags -Wl,-rpath -Wl,/usr/lib/openmpi/lib -Wl,--enable-new-dtags -Wl,-rpath -Wl,/usr/lib/openmpi/lib -Wl,--enable-new-dtags -Wl,-rpath -Wl,/usr/lib/openmpi/lib -Wl,--enable-new-dtags -Wl,-rpath -Wl,/usr/lib/openmpi/lib -Wl,--enable-new-dtags -Wl,-rpath -Wl,/usr/lib/openmpi/lib -Wl,--enable-new-dtags -Wl,-rpath -Wl,/usr/lib/openmpi/lib -Wl,--enable-new-dtags -Wl,-rpath -Wl,/usr/lib/openmpi/lib -Wl,--enable-new-dtags -Wl,-rpath -Wl,/usr/lib/openmpi/lib -Wl,--enable-new-dtags -Wl,-rpath -Wl,/usr/lib/openmpi/lib -Wl,--enable-new-dtags -Wl,-rpath -Wl,/usr/lib/openmpi/lib -Wl,--enable-new-dtags; Common/src/libSU2CommonAD.a.p/geometry_CGeometry.cpp.o: In function `CGeometry::GetLineletInfo(CConfig const*) const':; /home/patelh/Packages/develop/build/../Common/src/geometry/CGeometry.cpp:3925: undefined reference to `CGeometry::CLineletInfo::ALPHA_ISOTROPIC'; collect2: error: ld return",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1873:78,wrap,wrapper,78,https://su2code.github.io,https://github.com/su2code/SU2/issues/1873,1,['wrap'],['wrapper']
Integrability,"**Describe the bug**; There is a possible bug in the GetP_Matrix routines in the CNumerics class.; After looking into the computations, I think it only gets called in the AUSM schemes for approximate Jacobians, it seems some terms different then the P matrix computation in Roe solver/generalized routine. . When doing invP*P, has a large off-diagonal terms. Im making a note of it here, but will work on verifying/and fixing",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1276:65,rout,routines,65,https://su2code.github.io,https://github.com/su2code/SU2/issues/1276,2,['rout'],"['routine', 'routines']"
Integrability,"**Describe the bug**; When compiling the master branch or v7.1.1 of SU2, as described in the [Quick compilation guide](https://su2code.github.io/docs_v7/Build-SU2-Linux-MacOS/#quick-compilation-guide) with gcc version 11.1.0, the ninja command fails, saying that `'numeric_limits' is not a member of 'std'`. **Likely reason**; There were [header dependency changes in GCC 11](https://www.gnu.org/software/gcc/gcc-11/porting_to.html#header-dep-changes). Probably because of this, the header `<limits>` is not (recursively) `#include`d from the file. Common/include/geometry/primal_grid/CPrimalGrid.hpp. any more. Thus `std::numeric_limits` has not been declared when it is used in line 243. **Solution**; `#include <limits>` in `CPrimalGrid.hpp`",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1293:346,depend,dependency,346,https://su2code.github.io,https://github.com/su2code/SU2/issues/1293,1,['depend'],['dependency']
Integrability,"**Describe the bug**; When creating a CDriver instance, for example through the Python wrapper, with an MPI communicator which is defined only on a subset of the processes on which the MPI library was initialised, SU2 will deadlock. This seems to be because most of the MPI communication and synchronisation operations in SU2 explicitly refer to the global `MPI_COMM_WORLD`. The issue arose when attempting to control several Euler/RANS SU2 `CSinglezoneDriver` and `CDiscAdjSinglezoneDriver` instances in parallel (i.e. simultaneously) within a larger optimisation code, which provides each analysis with a subset of the ranks in its own MPI communicator. Naively replacing _all_ references to `MPI_COMM_WORLD` with `SU2_MPI::GetComm()` throughout the code (except where it is defined, and where it is used to initialise the MPI wrapper in the SU2_XXX.cpp files) prevents the deadlock and results in the desired behaviour. However, I imagine that this ""fix"" may well cause all sorts of issues outside of my own, limited use case. **To Reproduce**; The issue can be reproduced with any SU2_CFD configuration file and mesh, run in parallel using the Python wrapper as follows: ; ```; from mpi4py import MPI; import pysu2 # or pysu2ad. filename = 'example.cfg'; zones = 1. rank = MPI.COMM_WORLD.Get_rank(); size = MPI.COMM_WORLD.Get_size(). group = MPI.COMM_WORLD.group.Excl([0]) # exclude the first rank; comm = MPI.COMM_WORLD.Create_group(group). if comm: # is False only on the excluded rank; print(""Running SU2 on global rank {} of {} ... "".format(rank, size)). # create SU2 instance -- will hang during Geometry preprocessing; instance = pysu2.CSinglezoneDriver(filename, zones, comm). else:; print(""Doing nothing on global rank {} of {} ... "".format(rank, size)). ```. **Desktop (please complete the following information):**; - OS: Redhat 7.7; - C++ compiler and version: g++ (GCC) 4.8.5; - MPI implementation and version: MPICH 3.2.1; - SU2 Version: 7.0.2 ""Blackbird"" (looks to be reproducible on",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1179:87,wrap,wrapper,87,https://su2code.github.io,https://github.com/su2code/SU2/issues/1179,2,['wrap'],['wrapper']
Integrability,"**Describe the bug**; When running any dry run in the form; `SU2_CFD -d <configname>.cfg`; an integer divide by zero (`Floating point exception: integer divide by zero`) happens. A backtrace pointed me towards `roundUpDiv (numerator=0, denominator=0)` in `omp_structure.hpp` +104 and further up `computeStaticChunkSize (totalWork=0, numThreads=1, maxChunkSize=4096)`. I guess one might check somewhere along the line whether there is even work to do, i.e. wrap the `*.Initialize(nPoint,...)` in `C<Inc>EulerSolver` etc in `if (nPoint != 0)` conditionals (that got the Quickstart working again for me). But maybe there is a better more elegant solution without too much overhead. I would like @pcarruscag to take a look as the omp stuff is involved :). **To Reproduce**; Every dryrun I tried, using Quickstart should be enough to understand the problem. **Desktop (please complete the following information):**; - OS: Red Hat Enterprise Linux 7.6; - C++ compiler and version: GCC 4.8.5; - MPI implementation and version: openMPI 3.1.2; - SU2 Version: latest develop, but this probably affects 7.0.1 as well, i.e. hotfix time 🕙",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/857:456,wrap,wrap,456,https://su2code.github.io,https://github.com/su2code/SU2/issues/857,1,['wrap'],['wrap']
Integrability,"**Describe the bug**; When running under valgrind I get the following error message from valgrind for the develop version. ==46590== Invalid read of size 1; ==46590== at 0x8C9CA5: CConfig::SetConfig_Parsing(std::istream&) (CConfig.cpp:2836); ==46590== by 0x8C9A6E: CConfig::SetConfig_Parsing(char*) (CConfig.cpp:2797); ==46590== by 0x8A98F1: CConfig::CConfig(char*, unsigned short) (CConfig.cpp:205); ==46590== by 0x1BD2FA: main (SU2_CFD.cpp:99); ==46590== Address 0x5eae8ef is 1 bytes before a block of size 161 alloc'd. **To Reproduce**; Take e.g. the config file of rae2822 rans test case and run under valgrind. To avoid a lot of MPI warnings, create the sequential executable. **Desktop (please complete the following information):**; - Operating system: Ubuntu 18.04; - C++ compiler and version: g++ (GCC) 8.4.0; - MPI implementation and version: sequential; - SU2 Version: 7.0.5",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1040:76,message,message,76,https://su2code.github.io,https://github.com/su2code/SU2/issues/1040,1,['message'],['message']
Integrability,"**Describe the bug**; When using species transport in a problem using the fluid-fluid interface there is no information on species being transmitted across the interface. In addition if you use the MARKER_ANALYZE in the cfg file the code bombs on startup as follows:. Error in ""virtual void CMultizoneOutput::SetMultizoneHistoryOutputFields( const COutput* const*, const CConfig* const*)"":; -------------------------------------------------------------------------; Per Surface output group unknown: SPECIES_COEFF_SURF; ------------------------------ Error Exit ------------------------------. **Desktop (please complete the following information):**; - Ubuntu 18.04.5 on WSLV2 on Windows 10; -gcc version 7.5.0; - Openmpi 2.1.1; - SU2 Version: 7.4.0. [MZ.zip](https://github.com/su2code/SU2/files/9993823/MZ.zip)",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1818:86,interface,interface,86,https://su2code.github.io,https://github.com/su2code/SU2/issues/1818,2,['interface'],['interface']
Integrability,"**Describe the bug**; While doing shape optimization for drag minimization with the Euler solver, I received a negative drag for the optimized geometry. This seemed strange to me, so I investigated it and realized, that the CD in SU2 seems to be computed incorrectly in some cases. . During the investigation, I computed the drag force in Paraview based on the SU2 flow result and compared it to the drag force computed by SU2 both for the initial and the final optimization geometry. The results did not match, which is not what I would have expected. . In SU2, I compute the drag force by multiplying CD with the non-dimensional factor written to the forces_breakdown file. For Paraview, I wrote a script which does the following to compute the drag force:; - Load surface flow solution for the wing surface; - Compute surface normals; - Compute Drag = -Pressure*(Normals_X * cos(AoA/180 * 3.1415) + Normals_Z * sin(AoA/180 * 3.1415)); - Integrate this over the whole wing surface to get the total drag force. You can also find this Paraview script attached.; I validated the Paraview script for multiple simple testcases, for which SU2 and Paraview gave me exactly the same drag force. When I applied it to the initial optimization geometry, I however realized, that SU2 computes a drag force of 60.95 N while Paraview gets 143.6 N. Furthermore, for the final optimization geometry, Paraview computes 53.3 N while SU2 gets a drag force of -55.95 N. . To my understanding, the drag computed from pressure integration over the surface should be independent of the solver, the flow conditions and (ideally) even the programme. Furthermore, the Paraview result seems more trustworthy than the SU2 result as SU2 calculates a negative drag, which should physically not be possible, not even with the Euler equations. This leads me to the conclusion that there might be something wrong with the drag computation in SU2 for some geometries. Has anybody encountered a similar issue? Or are there specific cr",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1716:940,Integrat,Integrate,940,https://su2code.github.io,https://github.com/su2code/SU2/issues/1716,1,['Integrat'],['Integrate']
Integrability,"**Description**. The Coupled RHT-CFD Adjoint test in the serial_regression_AD.py is designed to compare the calculated gradient file with a reference.; Yet the routine run_filediff() is never called for this test, only the routine run_test(). I tried to modify the reference file 'of_grad_cd.csv.ref' and checked it on my local machine. The output still shows that the test has passed, even though the calculated gradient file and the reference file are different. **To Reproduce**; Change the reference values in the file 'of_grad_cd.csv.ref' and run serial_regression.py. This might be a bug in this test. Can you check if the test fails in the automated tests if a wrong reference gradient file is used?. **Desktop (please complete the following information):**. OS: Linux - Fedora; C++ compiler and version: g++ (GCC) 11.2.1; MPI implementation and version: Open MPI; SU2 Version: 7.2.1. Thanks and Best Regards,; Thomas",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1431:160,rout,routine,160,https://su2code.github.io,https://github.com/su2code/SU2/issues/1431,2,['rout'],['routine']
Integrability,"**Is your feature request related to a problem? Please describe.**. I've noticed, that the flow solutions of SU2 have changed shortly before launch of version 7.0.0. In detail, I've computed an unsteady flow field around an airfoil with high angle of attack and its design sensitivities. Whereas the sensitivities computed with the old version exhibited periodic behaviour, the sensitivities computed with the new version explode and show somehow chaotic behaviour. ; Above sensitivities where computed using the `direct_differentiation.py` script. ; Naturally an adjoint sensitivity computation with the newer version fails to converge. In the older version, adjoint and direct sensitivities match. . By older version, I mean before commit https://github.com/su2code/SU2/commit/56ee75 ,; and by newer version, I mean after commit https://github.com/su2code/SU2/commit/714d7e9 . Somewhere between these two commits, the unit tests for (unsteady) flows have been adjusted, so I think this is where the change happened. . **Describe the solution you'd like**. Is it possible to provide an option to switch to the old behavior of SU2 in the sense of this flow computation?; What was the reason for this change, so to say?. I think @BeckettZhou and @talbring might be interested in this. . ** Files to reproduce the issue**. I've attached two .zip files. One contains the an example of the older code and one contains the example of the newer code. You can see that both .cfg files are identical. To emphasize the issue, compare the time dependent DRAG and D_DRAG of both history.csv files, that are provided. [01_older.zip](https://github.com/su2code/SU2/files/4493235/01_older.zip); [02_newer.zip](https://github.com/su2code/SU2/files/4493236/02_newer.zip). Kind regards,; Steffen",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/940:1534,depend,dependent,1534,https://su2code.github.io,https://github.com/su2code/SU2/issues/940,1,['depend'],['dependent']
Integrability,"**Is your feature request related to a problem? Please describe.**; When building the AD version of SU2 with the Intel compiler a lot of warnings are given. Most of these warnings are of the type. warning #2196: routine is both ""inline"" and ""noinline"". The files where the warnings come from are; externals/codi/include/codi/tapes/modules/tapeBaseModule.hpp; externals/codi/include/codi/tapes/chunkVector.hpp; externals/codi/include/codi/tools/data/jacobian.hpp. The total number of warnings is roughly 3000, so any other information is very difficult to pick up. **Describe the solution you'd like**; Remove either the inline or noline, if possible. **Describe alternatives you've considered**; We can ignore the warning, if you think it is not a relevant one. However, I cannot judge that. **Additional context**; I can provide more information, e.g. the entire log file of the build process.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1087:212,rout,routine,212,https://su2code.github.io,https://github.com/su2code/SU2/issues/1087,1,['rout'],['routine']
Integrability,"**Is your feature request related to a problem? Please describe.**; When installing software on a high performance computing cluster, we typically want to reuse existing dependencies. SU2 seems to download a *lot* of things which we already have: autotools, catch2, cgns, metis, ninja, parmetis, ... . It will very likely *not* compile those correctly for our system. . **Describe the solution you'd like**; Give a flag to disable all download and fail when dependencies are not found. Give corresponding flags to point to the dependencies' folders, and use those. . **Describe alternatives you've considered**; Reverse engineering SU2's meson/ninja build to patch it to use existing dependencies.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/2086:170,depend,dependencies,170,https://su2code.github.io,https://github.com/su2code/SU2/issues/2086,4,['depend'],['dependencies']
Integrability,"**Issue description**. Hi all, I am trying to run a rather large mesh computation with SU2. The mesh counts 170M cells. I managed to run it with the native SU2 mesh format with 480 cores but the preprocessing step took 90 minutes with a huge load on the file system impacting all the other users of the cluster. To reduce the load, I was thinking about using the CGNS mesh file format. However the preprocessing step fills all the RAM memory available and the job fails. All the setup being identical. . By reducing the number of cells, I am able to run with the CGNS file format. Is it a common behavior with the CGNS file format?. **Hardware and software :**; - OS: Linux Red Hat ELS 6.5; - Nodes: Intel Xeon Ivy bridge; - C++ compiler and version: intel/2018.0.1; - MPI implementation and version: intelmpi/2018.0.1; - SU2 Version: v7.2",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1378:715,bridg,bridge,715,https://su2code.github.io,https://github.com/su2code/SU2/issues/1378,1,['bridg'],['bridge']
Integrability,"*; `./meson.py build -Denable-autodiff=true -Denable-directdiff=true -Denable-pywrapper=true --prefix=/home/FDa/FDa045/programs/SU2/SU2-7.2.1 -Dwith-mpi=enabled -Denable-mkl=true -Dmkl_root=/home/FDa/FDa045/programs/intel/2020_update4/mkl`. **meson results:**. > Project name: SU2; Project version: 7.2.1 ""Blackbird""; C compiler for the host machine: cc (gcc 4.8.5 ""cc (GCC) 4.8.5 20150623 (Red Hat 4.8.5-28)""); C linker for the host machine: cc ld.bfd 2.27-27; C++ compiler for the host machine: c++ (gcc 4.8.5 ""c++ (GCC) 4.8.5 20150623 (Red Hat 4.8.5-28)""); C++ linker for the host machine: c++ ld.bfd 2.27-27; Host machine cpu family: x86_64; Host machine cpu: x86_64; Program python3 found: YES (/home/FDa/FDa045/anaconda3/bin/python3); Found pkg-config: /usr/bin/pkg-config (0.27.1); mpicc found: YES (/work/A/openmpi/3.0.0_intel2018u2/bin/mpicc) 3.0.0; Run-time dependency MPI for c found: YES 3.0.0; mpic++ found: YES (/work/A/openmpi/3.0.0_intel2018u2/bin/mpic++) 3.0.0; Run-time dependency MPI for cpp found: YES 3.0.0; Message: Boost sources found.; Found CMake: /home/FDa/FDa045/programs/cmake/cmake-3.17.3/bin/cmake (3.17.3); Run-time dependency mkl-static-lp64-seq found: NO (tried pkgconfig and cmake); Program swig found: YES (/usr/bin/swig); Message: Using mpi4py from /home/FDa/FDa045/anaconda3/lib/python3.7/site-packages/mpi4py/include; Dependency python found: YES (pkgconfig); Program install.sh found: YES (/bin/sh /home/FDa/FDa045/programs/SU2/SU2_PY/pySU2/install.sh). **Next, I copied the 4-line output needed for .bashrc, and run ninja.**; `./ninja -j36 -C build install`. **Then, I got the following errors:**. > ninja: Entering directory `build'; [691/994] Compiling C++ object SU2_CFD/src/libSU2core_AD.a.p/solvers_CTurbSolver.cpp.o; FAILED: SU2_CFD/src/libSU2core_AD.a.p/solvers_CTurbSolver.cpp.o; c++ -ISU2_CFD/src/libSU2core_AD.a.p -ISU2_CFD/src -I../SU2_CFD/src -I../externals/CLI11 -I../externals/cgns/adf -Iexternals/cgns -I../externals/cgns -I../externals/metis/in",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1420:1232,depend,dependency,1232,https://su2code.github.io,https://github.com/su2code/SU2/issues/1420,1,['depend'],['dependency']
Integrability,*Update: the conflicts were due to mutually editing methods for the discrete adjoint; I had added some objectives prior to the recent discrete adjoint pull request. ; @talbring if you have a minute to take a look at how I've handled these objectives in iteration_structure.cpp that would be much appreciated.; I think I have resolved the conflicts; the source of most of the problems was with registering outflow-based objective functions which depend on values that were only calculated at an output step. This meant adding an if statement to calculate these values at the most recent point where the output container was available.,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/204#issuecomment-151660107:445,depend,depend,445,https://su2code.github.io,https://github.com/su2code/SU2/pull/204#issuecomment-151660107,1,['depend'],['depend']
Integrability,"++ linker for the host machine: c++ ld.bfd 2.34; Host machine cpu family: x86_64; Host machine cpu: x86_64; Program python3 found: YES (/usr/bin/python); Found pkg-config: /usr/bin/pkg-config (1.6.3); Dependency python found: YES (pkgconfig); Run-time dependency MPI for c found: YES 4.0.2; Run-time dependency MPI for cpp found: YES 4.0.2; Message: Boost sources found.; Run-time dependency openblas found: YES 0.3.8; Program swig found: YES (/usr/bin/swig); Message: Using mpi4py from /home/slimshady/.local/lib/python3.8/site-packages/mpi4py/include; Run-time dependency python3 found: YES 3.8; Program install.sh found: YES (/bin/sh /home/slimshady/UserPackages/SU2_NEW/SU2_PY/pySU2/install.sh); Message: -------------------------------------------------------------------------; | ___ _ _ ___ |; | / __| | | |_ ) Release 7.0.4 ""Blackbird"" |; | \__ \ |_| |/ / |; | |___/\___//___| Meson Configuration Summary |; | |; -------------------------------------------------------------------------; ; Option Value; ---------------------; TecIO: true; CGNS: true; AD (reverse): true; AD (forward): true; Python Wrapper: true; Intel-MKL: false; OpenBlas: true; PaStiX: false. Please be sure to add the $SU2_HOME and $SU2_RUN environment variables,; and update your $PATH (and $PYTHONPATH if applicable) with $SU2_RUN. Based on the input to this configuration, add these lines to your .bashrc file:. export SU2_RUN=/home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; export SU2_HOME=/home/slimshady/UserPackages/SU2_NEW; export PATH=$PATH:$SU2_RUN; export PYTHONPATH=$PYTHONPATH:$SU2_RUN. Use './ninja -C build install' to compile and install SU2. Build targets in project: 21. Found ninja-1.10.0 at /usr/bin/ninja; ```. ```; slimshady@arch-linux-hp-probook-g3-450: SU2_NEW$ ninja -j4 -C build install; ninja: Entering directory `build'; [569/870] Linking target SU2_CFD/src/SU2_CFD.; FAILED: SU2_CFD/src/SU2_CFD ; c++ -o SU2_CFD/src/SU2_CFD 'SU2_CFD/src/37e1b17@@SU2_CFD@exe/SU2_CFD.cpp.o' -Wl,--as-needed -",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/991#issuecomment-631986633:2288,Wrap,Wrapper,2288,https://su2code.github.io,https://github.com/su2code/SU2/issues/991#issuecomment-631986633,1,['Wrap'],['Wrapper']
Integrability,", ; geometry=0x21cb340, config=0x2073590); at ../SU2_CFD/src/solvers/CSolver.cpp:2183; #6 0x00000000007b6af8 in CHeatSolver::ImplicitEuler_Iteration (; this=0x21381c0, geometry=0x21cb340, solver_container=0x23a1c10, ; config=0x2073590) at ../SU2_CFD/src/solvers/CHeatSolver.cpp:1549; #7 0x0000000000b5a666 in CIntegration::Time_Integration (this=0x2381f70, ; geometry=0x21cb340, solver_container=0x23a1c10, config=0x2073590, ; iRKStep=0, RunTime_EqSystem=21); ---Type <return> to continue, or q <return> to quit---; at ../SU2_CFD/src/integration/CIntegration.cpp:205; #8 0x00000000004a2973 in CSingleGridIntegration::SingleGrid_Iteration (; this=0x2381f70, geometry=0x1fdc8b0, solver_container=0x1db9ad0, ; numerics_container=0x1fddb10, config=0x1a6cb50, RunTime_EqSystem=21, ; iZone=1, iInst=0); at ../SU2_CFD/src/integration/CSingleGridIntegration.cpp:73; #9 0x00000000004e33e4 in CHeatIteration::Iterate (this=0x218fdc0, ; output=0x20c8630, integration=0x1a59a90, geometry=0x1fdc8b0, ; solver=0x1db9ad0, numerics=0x1fddb10, config=0x1a6cb50, ; surface_movement=0x1a6cc30, grid_movement=0x1a6cc50, FFDBox=0x1a6cc70, ; val_iZone=1, val_iInst=0) at ../SU2_CFD/src/iteration/CHeatIteration.cpp:40; #10 0x00000000004db2ba in CFluidIteration::Solve (this=0x218fdc0, ; output=0x20c8630, integration=0x1a59a90, geometry=0x1fdc8b0, ; solver=0x1db9ad0, numerics=0x1fddb10, config=0x1a6cb50, ; surface_movement=0x1a6cc30, grid_movement=0x1a6cc50, FFDBox=0x1a6cc70, ; val_iZone=1, val_iInst=0); at ../SU2_CFD/src/iteration/CFluidIteration.cpp:302; #11 0x000000000047adec in CMultizoneDriver::Run_GaussSeidel (this=0x1fe0f80); at ../SU2_CFD/src/drivers/CMultizoneDriver.cpp:329; #12 0x000000000047a415 in CMultizoneDriver::StartSolver (this=0x1fe0f80); at ../SU2_CFD/src/drivers/CMultizoneDriver.cpp:193; #13 0x0000000000415413 in main (argc=2, argv=0x7fffffffbb18); at ../SU2_CFD/src/SU2_CFD.cpp:150; ```; </details>; ... and two other processes waiting at ; <details>; <summary>that place</summary>. ```; #0 ",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1241:3225,integrat,integration,3225,https://su2code.github.io,https://github.com/su2code/SU2/issues/1241,1,['integrat'],['integration']
Integrability,", filenames and cfg files are a bit different but the meshes are the same. Observed and expected behaviour; ===========================; I would expect that the two simulations give similar results. However, the singlezone setup converges while the multizone setup diverges (`SU2 has diverged (NaN detected).` or `SU2 has diverged (Residual > 10^20 detected).`). The same behaviour is observed for CFL=10 instead of 1000, and also for SA with CFL=10. I ran v7.2.0 (commit 3ec1c680) in serial (without MPI). I reported a similar problem some time ago in the developer meeting, with a ""chopped NACA 0012 airfoil"" testcase. For this issue we created this more basic example which seems to reproduce the error (although I am not completely sure). Typically we would see the `SU2 has diverged (Residual > 10^20 detected).` error. Differences between multizone/fluid-interface and singlezone/joined-meshes; =========================================================; We came up with the following differences:; - **Flux calculation across the interface**: The flux between neighbor cells `i`, `j`, one of which has `radius<4` and the other one has `radius>4`, is computed differently.; + In singlezone this is just an ordinary flux computation along an edge `i`-`j`, with `CSolver::Upwind_Residual` (, `Viscous_Residual`).; + In multizone this flux between two zones is computed by `CSolver::BC_Fluid_Interface`. When the method is called to compute the contribution of the interface on the residual of contol volume `i`, `this` is the solver object of the zone of control volume `i`, so we can access all variables at `i` (like primitive, turbulent, and their spatial gradients) and give them to the `CNumerics` objects. However we cannot access the variables at `j` directly! Through the ""interface"" mechanism, we get values of the primitive and turbulent variables at `j`, but not their gradients. That's why the `BC_Fluid_Interface` has lines like this:. visc_numerics->SetPrimVarGradient(nodes->GetGradi",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1414:3652,interface,interface,3652,https://su2code.github.io,https://github.com/su2code/SU2/issues/1414,2,['interface'],['interface']
Integrability,"- Adding multipoint design capability based on the Stability Functions python script example. I can add an example in test cases (if you are interested).; - Adding some consistency in CL, CD, CSF vs. Clift, CDrag, CSidyForce in the python scripts.; - Detecting a bug in fluid interface and updating custom obj. function capability",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/406:276,interface,interface,276,https://su2code.github.io,https://github.com/su2code/SU2/pull/406,1,['interface'],['interface']
Integrability,"----------------- Space Numerical Integration ----------------------; Jameson-Schmidt-Turkel scheme (2nd order in space) for the flow inviscid terms.; JST viscous coefficients (2nd & 4th): 0.5, 0.02.; The method includes a grid stretching correction (p = 0.3).; Scalar upwind solver for the turbulence model.; First order integration in space.; Average of gradients with correction (viscous flow terms).; Average of gradients with correction (viscous turbulence terms).; Gradient Computation using weighted Least-Squares method. ---------------------- Time Numerical Integration -----------------------; Local time stepping (steady state simulation).; Euler implicit method for the flow equations.; FGMRES is used for solving the linear system.; Using a LU-SGS preconditioning.; Convergence criteria of the linear solver: 1e-06.; Max number of linear iterations: 7.; CFL adaptation. Factor down: 1.5, factor up: 0.5,; lower limit: 0.5, upper limit: 3.5.; Courant-Friedrichs-Lewy number: 1; Euler implicit time integration for the turbulence model. ------------------------- Convergence Criteria --------------------------; Maximum number of iterations: 999999.; Reduce the density residual 6 orders of magnitude.; The minimum bound for the density residual is 10^(-5.9).; Start convergence criteria at iteration 10. -------------------------- Output Information ---------------------------; Writing a solution file every 999999999 iterations.; Writing the convergence history every 1 iterations.; The output file format is Tecplot binary (.plt).; Convergence history file name: history.; Forces breakdown file name: forces_breakdown.dat.; Surface flow coefficients file name: surface_flow.; Flow variables file name: flow.; Restart flow file name: restart_flow.dat. ------------------- Config File Boundary Information --------------------; +-----------------------------------------+; | Marker Type| Marker Name|; +-----------------------------------------+; | Far-field| Tria-2-Bndry|; | | Tria-4-B",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/633:1762,integrat,integration,1762,https://su2code.github.io,https://github.com/su2code/SU2/pull/633,1,['integrat'],['integration']
Integrability,"---------------------------------------------------------+. The density plot is; - different from the original `issue_simplified` singlezone solution with implicit Euler and CFL=1000. ; - similar to the `issue_simplified` multizone solution with implicit Euler and CFL=0.1. . Similarly, the TKE plots:; - `issue_simplified` singlezone implicit Euler CFL=1000; ![tke-simplified-singlezone-impliciteuler](https://user-images.githubusercontent.com/72806890/140887227-fc2ed584-53cf-413d-b5ad-18d1a12f5e4a.png); - `issue_simplified` singlezone explicit Euler CFL=0.1; ![tke-simplified-singlezone-expliciteuler](https://user-images.githubusercontent.com/72806890/140887289-0d8725a2-e51b-4704-bdae-a51b492949bf.png); (it is ""red"" throughout the domain, except for the wall marker); - `issue_simplified` multizone explicit Euler CFL=0.1: (similar image, ""red"" everywhere except wall). **Thus, the difference in solutions observed above is due to the choice of implicit vs. explicit Euler and CFL, and not due to problems regarding the interface.**. Am I doing something wrong in the explicit Euler [cfg file](https://seafile.rlp.net/d/bb0fbb16eb414263b642/files/?p=%2Fsinglezone-simplfied-expliciteuler-cfl01.cfg&dl=1), whose diff to the [SU2/TestCases/rans/naca0012/turb_NACA0012_sst.cfg](https://github.com/su2code/SU2/blob/v7.2.0/TestCases/rans/naca0012/turb_NACA0012_sst.cfg) is as follows?. 27c27; < RESTART_SOL= NO; ---; > RESTART_SOL= YES; 45c45; < REYNOLDS_NUMBER= 1.0E6; ---; > REYNOLDS_NUMBER= 6.0E6; 70c70; < MARKER_HEATFLUX= ( circle, 0.0 ); ---; > MARKER_HEATFLUX= ( airfoil, 0.0 ); 76c76; < MARKER_PLOTTING= ( circle ); ---; > MARKER_PLOTTING= ( airfoil ); 79c79; < MARKER_MONITORING= ( circle ); ---; > MARKER_MONITORING= ( airfoil ); 88c88; < CFL_NUMBER= 0.1; ---; > CFL_NUMBER= 1000.0; 101c101; < ITER= 9999900; ---; > ITER= 99999; 162c162; < TIME_DISCRE_FLOW= EULER_EXPLICIT; ---; > TIME_DISCRE_FLOW= EULER_IMPLICIT; 177c177; < TIME_DISCRE_TURB= EULER_EXPLICIT; ---; > TIME_DISCRE_TURB= EULE",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1414#issuecomment-963921195:2499,interface,interface,2499,https://su2code.github.io,https://github.com/su2code/SU2/issues/1414#issuecomment-963921195,2,['interface'],['interface']
Integrability,"-----------. Simulation Run using the Single-zone Driver; +----------------------------------------------------------------+; | Inner_Iter| rms[Rho]| rms[nu]| CL| CD|; +----------------------------------------------------------------+; | 0| -5.507608| -6.134199| 0.484414| 0.030848|; | 1| -4.574136| -6.098123| 0.484453| 0.030598|; [...]; | 10| -5.466734| -4.908028| 0.484509| 0.029445|; +-----------------------------------------------------------------------+; | File Writing Summary | Filename |; +-----------------------------------------------------------------------+; |SU2 restart |restart_flow.dat |; Traceback (most recent call last):; File ""/usr/local/bin/parallel_computation.py"", line 110, in <module>; main(); File ""/usr/local/bin/parallel_computation.py"", line 57, in main; options.compute ); File ""/usr/local/bin/parallel_computation.py"", line 88, in parallel_computation; info = SU2.run.CFD(config); File ""/usr/local/bin/SU2/run/interface.py"", line 112, in CFD; run_command( the_Command ); File ""/usr/local/bin/SU2/run/interface.py"", line 292, in run_command; raise exception(message); RuntimeError: Path = /mnt/cfddata/WLiao/CRJ700_su2/CRJ700_inch_roe_TEST/,; Command = mpirun -np 2 /usr/local/bin/SU2_CFD config_CFD.cfg; SU2 process returned error '139'; [gen2node1:232298:0:232298] Caught signal 11 (Segmentation fault: address not mapped to object at address 0x30); [gen2node1:232297:0:232297] Caught signal 11 (Segmentation fault: address not mapped to object at address 0x30); #==== backtrace (tid: 232297) ====; 0 0x0000000000012dc0 .annobin_sigaction.c() sigaction.c:0; 1 0x00000000000458b1 opal_obj_run_destructors() /opt/hpcx/sources/openmpi-4.0.2/ompi/../opal/class/opal_object.h:460; 2 0x00000000000458b1 ompi_file_close() /opt/hpcx/sources/openmpi-4.0.2/ompi/file/file.c:153; 3 0x0000000000069056 PMPI_File_close() /opt/hpcx/sources/openmpi-4.0.2/ompi/mpi/c/profile/pfile_close.c:60; 4 0x00000000005af5f8 CFileWriter::OpenMPIFile() ???:0; 5 0x00000000005c38d3 CSU2BinaryF",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/971:1682,interface,interface,1682,https://su2code.github.io,https://github.com/su2code/SU2/issues/971,1,['interface'],['interface']
Integrability,"-Denable-openblas=true -Dwith-mpi=enabled -Denable-autodiff=true -Denable-directdiff=true -Denable-pywrapper=true --prefix=/home/slimshady/UserPackages/SU2_INSTALL_NEW; The Meson build system; Version: 0.53.2; Source dir: /home/slimshady/UserPackages/SU2_NEW; Build dir: /home/slimshady/UserPackages/SU2_NEW/build; Build type: native build; Project name: SU2; Project version: 7.0.4 ""Blackbird""; C compiler for the host machine: cc (gcc 9.2.1 ""cc (Arch Linux 9.2.1+20200130-2) 9.2.1 20200130""); C linker for the host machine: cc ld.bfd 2.34; C++ compiler for the host machine: c++ (gcc 9.2.1 ""c++ (Arch Linux 9.2.1+20200130-2) 9.2.1 20200130""); C++ linker for the host machine: c++ ld.bfd 2.34; Host machine cpu family: x86_64; Host machine cpu: x86_64; Program python3 found: YES (/usr/bin/python); Found pkg-config: /usr/bin/pkg-config (1.6.3); Dependency python found: YES (pkgconfig); Run-time dependency MPI for c found: YES 4.0.2; Run-time dependency MPI for cpp found: YES 4.0.2; Message: Boost sources found.; Run-time dependency openblas found: YES 0.3.8; Program swig found: YES (/usr/bin/swig); Message: Using mpi4py from /home/slimshady/.local/lib/python3.8/site-packages/mpi4py/include; Run-time dependency python3 found: YES 3.8; Program install.sh found: YES (/bin/sh /home/slimshady/UserPackages/SU2_NEW/SU2_PY/pySU2/install.sh); Message: -------------------------------------------------------------------------; | ___ _ _ ___ |; | / __| | | |_ ) Release 7.0.4 ""Blackbird"" |; | \__ \ |_| |/ / |; | |___/\___//___| Meson Configuration Summary |; | |; -------------------------------------------------------------------------; ; Option Value; ---------------------; TecIO: true; CGNS: true; AD (reverse): true; AD (forward): true; Python Wrapper: true; Intel-MKL: false; OpenBlas: true; PaStiX: false. Please be sure to add the $SU2_HOME and $SU2_RUN environment variables,; and update your $PATH (and $PYTHONPATH if applicable) with $SU2_RUN. Based on the input to this configuration,",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/991#issuecomment-631986633:1522,Message,Message,1522,https://su2code.github.io,https://github.com/su2code/SU2/issues/991#issuecomment-631986633,1,['Message'],['Message']
Integrability,"-Wl,-O2 -Wl,--sort-common -Wl,--as-needed -Wl,-z,relro -Wl,-z,now -Wl,--disable-new-dtags -Wl,--gc-sections -Wl,-rpath,/home/user/anaconda3/lib -Wl,-rpath-link,/home/user/anaconda3/lib -L/home/user/anaconda3/lib'; Using 'CPPFLAGS' from environment with value: '-DNDEBUG -D_FORTIFY_SOURCE=2 -O2 -isystem /home/user/anaconda3/include'; C++ compiler for the host machine: c++ (gcc 4.8.5 ""c++ (GCC) 4.8.5 20150623 (Red Hat 4.8.5-28)""); C++ linker for the host machine: c++ ld.bfd 2.27-27; Host machine cpu family: x86_64; Host machine cpu: x86_64; Program python3 found: YES (/home/user/anaconda3/bin/python3); Found pkg-config: /home/user/anaconda3/bin/pkg-config (0.29.2); /work/A/openmpi/3.0.0_intel2018u2/bin/mpicc found: YES (/work/A/openmpi/3.0.0_intel2018u2/bin/mpicc) 3.0.0; Run-time dependency MPI for c found: YES 3.0.0; /work/A/openmpi/3.0.0_intel2018u2/bin/mpicxx found: YES (/work/A/openmpi/3.0.0_intel2018u2/bin/mpicxx) 3.0.0; Run-time dependency MPI for cpp found: YES 3.0.0; Message: Boost sources found.; Program swig found: YES (/home/user/anaconda3/bin/swig); Message: Using mpi4py from /home/user/anaconda3/lib/python3.7/site-packages/mpi4py/include; Dependency python found: YES (pkgconfig); Program install.sh found: YES (/bin/sh /home/user/programs/su2/SU2_src/SU2_PY/pySU2/install.sh); Message: -------------------------------------------------------------------------; | ___ _ _ ___ |; | / __| | | |_ ) Release 7.0.8 ""Blackbird"" |; | \__ \ |_| |/ / |; | |___/\___//___| Meson Configuration Summary |; | |; -------------------------------------------------------------------------; ; Option Value; ---------------------; TecIO: true; CGNS: true; AD (reverse): false; AD (forward): false; Python Wrapper: true; Intel-MKL: false; OpenBlas: false; PaStiX: false; Mixed Float: false; ; Please be sure to add the $SU2_HOME and $SU2_RUN environment variables,; and update your $PATH (and $PYTHONPATH if applicable) with $SU2_RUN; ; Based on the input to this configuration, add these li",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1134#issuecomment-744491311:4279,Message,Message,4279,https://su2code.github.io,https://github.com/su2code/SU2/issues/1134#issuecomment-744491311,1,['Message'],['Message']
Integrability,"-packages/scipy/optimize/_differentiable_functions.py"", line 164, in grad_wrapped; return np.atleast_1d(grad(np.copy(x), *args)); File ""/usr/local/bin/SU2/opt/scipy_tools.py"", line 400, in obj_df; dobj_list = project.obj_df(x); File ""/usr/local/bin/SU2/opt/project.py"", line 238, in obj_df; return self._eval(konfig, func,dvs); File ""/usr/local/bin/SU2/opt/project.py"", line 202, in _eval; vals = design._eval(func,*args); File ""/usr/local/bin/SU2/eval/design.py"", line 147, in _eval; vals = eval_func(*inputs); File ""/usr/local/bin/SU2/eval/design.py"", line 380, in obj_df; grad = su2grad(this_obj,grad_method,config,state); File ""/usr/local/bin/SU2/eval/gradients.py"", line 96, in gradient; grads = adjoint( func_name, config, state ); File ""/usr/local/bin/SU2/eval/gradients.py"", line 294, in adjoint; info = su2run.adjoint(konfig); File ""/usr/local/bin/SU2/run/adjoint.py"", line 79, in adjoint; SU2_CFD(konfig); File ""/usr/local/bin/SU2/run/interface.py"", line 112, in CFD; run_command( the_Command ); File ""/usr/local/bin/SU2/run/interface.py"", line 292, in run_command; raise exception(message); RuntimeError: Path = /home/xxx/SU2/SU2-7.0.4/test1/DESIGNS/DSN_001/ADJOINT_DRAG/,; Command = /home/xxx/SU2/SU2-7.0.4/SU2_CFD/bin/SU2_CFD_AD config_CFD_AD.cfg; SU2 process returned error '127'; /bin/sh: 1: /home/xxx/SU2/SU2-7.0.4/SU2_CFD/bin/SU2_CFD_AD: not found; ```; So I tried to build AD under the instruction. I copied the exact same thing and pasted to the command. The error is:. ```; Checking the status of submodules; =====================================================================; Found an old or unspecified version of CoDiPack in externals/codi.; Use -u to reset module.; ```; However, when I try to update/reinstall the codi, I failed in the extraction process. The error is:; ```; Checking the status of submodules; =====================================================================. git command failed (either git is not installed or this is not a git repository). Using fa",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1602:2649,interface,interface,2649,https://su2code.github.io,https://github.com/su2code/SU2/issues/1602,1,['interface'],['interface']
Integrability,"-patch</li>; <li><a href=""https://github.com/actions/cache/commit/9916fe1701f098b95a05e7c2bacee7c5a022c553""><code>9916fe1</code></a> Update cache version in licences</li>; <li><a href=""https://github.com/actions/cache/commit/318935ef66557a1906560e4e7d0069344a4b31bf""><code>318935e</code></a> Update README and RELEASES</li>; <li>Additional commits viewable in <a href=""https://github.com/actions/cache/compare/v1...v3"">compare view</a></li>; </ul>; </details>; <br />. [![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=actions/cache&package-manager=github_actions&previous-version=1&new-version=3)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores). Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`. [//]: # (dependabot-automerge-start); [//]: # (dependabot-automerge-end). ---. <details>; <summary>Dependabot commands and options</summary>; <br />. You can trigger Dependabot actions by commenting on this PR:; - `@dependabot rebase` will rebase this PR; - `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it; - `@dependabot merge` will merge this PR after your CI passes on it; - `@dependabot squash and merge` will squash and merge this PR after your CI passes on it; - `@dependabot cancel merge` will cancel a previously requested merge and block automerging; - `@dependabot reopen` will reopen this PR if it is closed; - `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually; - `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself); - `@dependabot ignore this minor version` will close this PR a",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1755:9547,depend,dependabot-automerge-start,9547,https://su2code.github.io,https://github.com/su2code/SU2/pull/1755,2,['depend'],"['dependabot-automerge-end', 'dependabot-automerge-start']"
Integrability,"-release-asset/issues/6"">#6</a> from actions/IAmHughes/fix-link-to-license</li>; <li><a href=""https://github.com/actions/upload-release-asset/commit/c53f077c5d8c19236718abc4697a59634ef534cf""><code>c53f077</code></a> Fix link to LICENSE</li>; <li><a href=""https://github.com/actions/upload-release-asset/commit/72e8a5ef036620fb7afff8bbb8f9e78910c7ccbc""><code>72e8a5e</code></a> Merge pull request <a href=""https://github-redirect.dependabot.com/actions/upload-release-asset/issues/5"">#5</a> from cesperanc/documentation-update</li>; <li><a href=""https://github.com/actions/upload-release-asset/commit/bf2a7fbecfaaaa29f7819c650ad302e52f68238e""><code>bf2a7fb</code></a> Update example to use the fixed version</li>; <li>See full diff in <a href=""https://github.com/actions/upload-release-asset/compare/v1.0.1...v1.0.2"">compare view</a></li>; </ul>; </details>; <br />. [![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=actions/upload-release-asset&package-manager=github_actions&previous-version=1.0.1&new-version=1.0.2)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores). Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`. [//]: # (dependabot-automerge-start); [//]: # (dependabot-automerge-end). ---. <details>; <summary>Dependabot commands and options</summary>; <br />. You can trigger Dependabot actions by commenting on this PR:; - `@dependabot rebase` will rebase this PR; - `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it; - `@dependabot merge` will merge this PR after your CI passes on it; - `@dependabot squash and merge` will squash and merge this PR after your CI passes on it; - `@dependabot cancel merge` will cancel a previously requested merge and block automerging; - `@depend",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1737:2385,depend,dependency-name,2385,https://su2code.github.io,https://github.com/su2code/SU2/pull/1737,3,['depend'],['dependency-name']
Integrability,"...v4"">compare view</a></li>; </ul>; </details>; <br />. [![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=actions/checkout&package-manager=github_actions&previous-version=3&new-version=4)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores). Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`. [//]: # (dependabot-automerge-start); [//]: # (dependabot-automerge-end). ---. <details>; <summary>Dependabot commands and options</summary>; <br />. You can trigger Dependabot actions by commenting on this PR:; - `@dependabot rebase` will rebase this PR; - `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it; - `@dependabot merge` will merge this PR after your CI passes on it; - `@dependabot squash and merge` will squash and merge this PR after your CI passes on it; - `@dependabot cancel merge` will cancel a previously requested merge and block automerging; - `@dependabot reopen` will reopen this PR if it is closed; - `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually; - `@dependabot show <dependency name> ignore conditions` will show all of the ignore conditions of the specified dependency; - `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself); - `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself); - `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself). ",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2126:11234,Depend,Dependabot,11234,https://su2code.github.io,https://github.com/su2code/SU2/pull/2126,18,"['Depend', 'depend']","['Dependabot', 'dependabot']"
Integrability,".1.2</li>; <li>Additional commits viewable in <a href=""https://github.com/actions/upload-artifact/compare/v1...v3"">compare view</a></li>; </ul>; </details>; <br />. [![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=actions/upload-artifact&package-manager=github_actions&previous-version=1&new-version=3)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores). Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`. [//]: # (dependabot-automerge-start); [//]: # (dependabot-automerge-end). ---. <details>; <summary>Dependabot commands and options</summary>; <br />. You can trigger Dependabot actions by commenting on this PR:; - `@dependabot rebase` will rebase this PR; - `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it; - `@dependabot merge` will merge this PR after your CI passes on it; - `@dependabot squash and merge` will squash and merge this PR after your CI passes on it; - `@dependabot cancel merge` will cancel a previously requested merge and block automerging; - `@dependabot reopen` will reopen this PR if it is closed; - `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually; - `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself); - `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself); - `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself). </details>",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1756:5518,Depend,Dependabot,5518,https://su2code.github.io,https://github.com/su2code/SU2/pull/1756,17,"['Depend', 'depend']","['Dependabot', 'dependabot', 'dependency']"
Integrability,".24.3 - 15 Feb 2024</h2>; <ul>; <li>Fix an issue where the CodeQL Action would fail to load a configuration specified by the <code>config</code> input to the <code>init</code> Action. <a href=""https://redirect.github.com/github/codeql-action/pull/2147"">#2147</a></li>; </ul>; <h2>3.24.2 - 15 Feb 2024</h2>; <ul>; <li>Enable improved multi-threaded performance on larger runners for GitHub Enterprise Server users. This feature is already available to GitHub.com users. <a href=""https://redirect.github.com/github/codeql-action/pull/2141"">#2141</a></li>; </ul>; <h2>3.24.1 - 13 Feb 2024</h2>; <ul>; <li>Update default CodeQL bundle version to 2.16.2. <a href=""https://redirect.github.com/github/codeql-action/pull/2124"">#2124</a></li>; <li>The CodeQL action no longer fails if it can't write to the telemetry api endpoint. <a href=""https://redirect.github.com/github/codeql-action/pull/2121"">#2121</a></li>; </ul>; <h2>3.24.0 - 02 Feb 2024</h2>; <ul>; <li>CodeQL Python analysis will no longer install dependencies on GitHub Enterprise Server, as is already the case for GitHub.com. See <a href=""https://github.com/github/codeql-action/blob/main/#3230---08-jan-2024"">release notes for 3.23.0</a> for more details. <a href=""https://redirect.github.com/github/codeql-action/pull/2106"">#2106</a></li>; </ul>; <h2>3.23.2 - 26 Jan 2024</h2>; <ul>; <li>On Linux, the maximum possible value for the <code>--threads</code> option now respects the CPU count as specified in <code>cgroup</code> files to more accurately reflect the number of available cores when running in containers. <a href=""https://redirect.github.com/github/codeql-action/pull/2083"">#2083</a></li>; <li>Update default CodeQL bundle version to 2.16.1. <a href=""https://redirect.github.com/github/codeql-action/pull/2096"">#2096</a></li>; </ul>; <h2>3.23.1 - 17 Jan 2024</h2>; <ul>; <li>Update default CodeQL bundle version to 2.16.0. <a href=""https://redirect.github.com/github/codeql-action/pull/2073"">#2073</a></li>; <li>Change the retenti",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2229:11463,depend,dependencies,11463,https://su2code.github.io,https://github.com/su2code/SU2/pull/2229,1,['depend'],['dependencies']
Integrability,".dependabot.com/actions/upload-artifact/issues/320"">#320</a> from actions/dependabot/npm_and_yarn/ansi-regex-4.1.1</li>; <li><a href=""https://github.com/actions/upload-artifact/commit/189315d9106f43a2a8eb60836608bb96b1f69d77""><code>189315d</code></a> Bump ansi-regex from 4.1.0 to 4.1.1</li>; <li><a href=""https://github.com/actions/upload-artifact/commit/d159c2d80bf32e77611286e4d71bfe6d15208d88""><code>d159c2d</code></a> Merge pull request <a href=""https://github-redirect.dependabot.com/actions/upload-artifact/issues/297"">#297</a> from actions/dependabot/npm_and_yarn/ajv-6.12.6</li>; <li><a href=""https://github.com/actions/upload-artifact/commit/c26a7ba4b5dbaecea906fec3b7d2c0c86f1ccaba""><code>c26a7ba</code></a> Bump ajv from 6.11.0 to 6.12.6</li>; <li><a href=""https://github.com/actions/upload-artifact/commit/6ed6c729229a623bcb1fdd75903dc6e436b3d0a7""><code>6ed6c72</code></a> Merge pull request <a href=""https://github-redirect.dependabot.com/actions/upload-artifact/issues/303"">#303</a> from actions/dependabot/npm_and_yarn/yargs-parser-13.1.2</li>; <li><a href=""https://github.com/actions/upload-artifact/commit/2aeee267b2cb1f938c861a763b9770ee6e921dc3""><code>2aeee26</code></a> Bump yargs-parser from 13.1.1 to 13.1.2</li>; <li>Additional commits viewable in <a href=""https://github.com/actions/upload-artifact/compare/v1...v3"">compare view</a></li>; </ul>; </details>; <br />. [![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=actions/upload-artifact&package-manager=github_actions&previous-version=1&new-version=3)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores). Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`. [//]: # (dependabot-automerge-start); [//]: # (dependabot-automerge-end). ---. <details>; <summary>Depen",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1756:4467,depend,dependabot,4467,https://su2code.github.io,https://github.com/su2code/SU2/pull/1756,1,['depend'],['dependabot']
Integrability,".py script. The command used was:. ```; python3 $SU2_RUN/mesh_adaptation_amg.py -f adapt_Mesh.cfg -n 4; ```; The script initiates the mesh adaptation process as expected, with the following output:. ```; SU2-AMG Anisotropic Mesh Adaptation. Mesh adaptation options:; PYADAP_COMPLEXITY : (30000, 60000, 120000); PYADAP_SUBITE : (2, 2, 2); PYADAP_SENSOR : GOAL; PYADAP_HMAX : 500.0; PYADAP_HMIN : 1e-9; PYADAP_HGRAD : 1.8. ./adap exists. Removing old mesh adaptation in 10s.; The ./adap folder was deleted. Generating GMF background surface mesh.; Initial CFD solution is provided.; ```; However, no _adap\ite0_ folder gets created. ; The log.err file in the _adap/ini_ directory provides this traceback:. ```; Traceback (most recent call last):; File "".../mesh_adaptation_amg.py"", line 111, in <module>; ...; RuntimeError: ...; Error in TokenizeString(): two or more options before an ""="" sign in the configuration file.; terminate called after throwing an instance of 'int'; ...; *** Process received signal ***; Signal: Aborted (6); Signal code: (-6); ...; ```. The critical part of this error seems to be the Error in TokenizeString() message, suggesting an issue with parsing the configuration file. This error typically indicates a syntax problem, such as having multiple options on a single line without proper separation by an equal sign (=). However, upon reviewing _adap/ini/config_CFD.cfg_, was unable to find any lines that clearly violated this syntax rule. Could this error be indicative of a more subtle issue within the configuration file, or might it be related to specific aspects of the feature_adap branch? Any insights, suggestions, or guidance on how to troubleshoot this error would be greatly appreciated. If anyone has a working adapt_mesh.cfg file for a similar setup or for the feature_adap branch, I would be very interested in seeing it. Understanding the configuration details of a working example could be highly beneficial in resolving my issue. Thank you for your help!",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/948#issuecomment-1847333809:1474,message,message,1474,https://su2code.github.io,https://github.com/su2code/SU2/issues/948#issuecomment-1847333809,2,['message'],['message']
Integrability,"//github-redirect.dependabot.com/actions/cache/issues/16"">actions/cache#16</a>), glob patterns, and single file caches (<a href=""https://github-redirect.dependabot.com/actions/cache/issues/33"">actions/cache#33</a>)</li>; <li>Increased performance and improved cache sizes using <code>zstd</code> for compression for Linux and macOS runners (<a href=""https://github-redirect.dependabot.com/actions/cache/issues/184"">actions/cache#184</a>)</li>; <li>Allowed caching for all events with a ref (<a href=""https://github-redirect.dependabot.com/actions/cache/issues/63"">actions/cache#63</a>)</li>; <li>Created the <a href=""https://github.com/actions/toolkit/tree/master/packages/cache""><code>@actions/cache</code></a> npm package to allow other actions to utilize caching (<a href=""https://github-redirect.dependabot.com/actions/cache/issues/55"">actions/cache#55</a>)</li>; <li>Added a best-effort step to delete the archive after extraction to reduces storage space (<a href=""https://github-redirect.dependabot.com/actions/cache/pull/209"">actions/cache#209</a>)</li>; </ul>; <h2>v1.2.0</h2>; <h1>Bug Fixes</h1>; <ul>; <li>Fall back to GNU tar on older versions of Windows that do not have BSD tar installed (<a href=""https://github-redirect.dependabot.com/actions/cache/issues/252"">#252</a>)</li>; <li>Fixed chunk upload retry logic (<a href=""https://github-redirect.dependabot.com/actions/cache/issues/305"">#305</a>)</li>; </ul>; <!-- raw HTML omitted -->; </blockquote>; <p>... (truncated)</p>; </details>; <details>; <summary>Changelog</summary>; <p><em>Sourced from <a href=""https://github.com/actions/cache/blob/main/RELEASES.md"">actions/cache's changelog</a>.</em></p>; <blockquote>; <h1>Releases</h1>; <h3>3.0.0</h3>; <ul>; <li>Updated minimum runner version support from node 12 -&gt; node 16</li>; </ul>; <h3>3.0.1</h3>; <ul>; <li>Added support for caching from GHES 3.5.</li>; <li>Fixed download issue for files &gt; 2GB during restore.</li>; </ul>; <h3>3.0.2</h3>; <ul>; <li>Added support for dy",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1755:4088,depend,dependabot,4088,https://su2code.github.io,https://github.com/su2code/SU2/pull/1755,1,['depend'],['dependabot']
Integrability,"//github-redirect.dependabot.com/actions/upload-release-asset/issues/27"">#27</a> from actions/IAmHughes/add-automated-versioning</li>; <li><a href=""https://github.com/actions/upload-release-asset/commit/14187540b829095dbe6f33eb1b166503318e9ceb""><code>1418754</code></a> Add versioning action to automatically slide major versions with releases</li>; <li><a href=""https://github.com/actions/upload-release-asset/commit/7d8fb6c931cb341bda0f898a0d2191cf54abc69a""><code>7d8fb6c</code></a> Merge pull request <a href=""https://github-redirect.dependabot.com/actions/upload-release-asset/issues/6"">#6</a> from actions/IAmHughes/fix-link-to-license</li>; <li><a href=""https://github.com/actions/upload-release-asset/commit/c53f077c5d8c19236718abc4697a59634ef534cf""><code>c53f077</code></a> Fix link to LICENSE</li>; <li><a href=""https://github.com/actions/upload-release-asset/commit/72e8a5ef036620fb7afff8bbb8f9e78910c7ccbc""><code>72e8a5e</code></a> Merge pull request <a href=""https://github-redirect.dependabot.com/actions/upload-release-asset/issues/5"">#5</a> from cesperanc/documentation-update</li>; <li><a href=""https://github.com/actions/upload-release-asset/commit/bf2a7fbecfaaaa29f7819c650ad302e52f68238e""><code>bf2a7fb</code></a> Update example to use the fixed version</li>; <li>See full diff in <a href=""https://github.com/actions/upload-release-asset/compare/v1.0.1...v1.0.2"">compare view</a></li>; </ul>; </details>; <br />. [![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=actions/upload-release-asset&package-manager=github_actions&previous-version=1.0.1&new-version=1.0.2)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores). Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`. [//]: # (dependabot-automerge-start); [//]: # (depe",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1737:1846,depend,dependabot,1846,https://su2code.github.io,https://github.com/su2code/SU2/pull/1737,3,['depend'],['dependabot']
Integrability,"//github.com/actions/setup-python/commit/f6cc428f535856f9c23558d01765a42a4d6cf758""><code>f6cc428</code></a> Use non-deprecated versions in examples (<a href=""https://redirect.github.com/actions/setup-python/issues/724"">#724</a>)</li>; <li><a href=""https://github.com/actions/setup-python/commit/5f2af211d616f86005883b44826180b21abb4060""><code>5f2af21</code></a> Add GraalPy support (<a href=""https://redirect.github.com/actions/setup-python/issues/694"">#694</a>)</li>; <li>Additional commits viewable in <a href=""https://github.com/actions/setup-python/compare/v4...v5"">compare view</a></li>; </ul>; </details>; <br />. [![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=actions/setup-python&package-manager=github_actions&previous-version=4&new-version=5)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores). Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`. [//]: # (dependabot-automerge-start); [//]: # (dependabot-automerge-end). ---. <details>; <summary>Dependabot commands and options</summary>; <br />. You can trigger Dependabot actions by commenting on this PR:; - `@dependabot rebase` will rebase this PR; - `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it; - `@dependabot merge` will merge this PR after your CI passes on it; - `@dependabot squash and merge` will squash and merge this PR after your CI passes on it; - `@dependabot cancel merge` will cancel a previously requested merge and block automerging; - `@dependabot reopen` will reopen this PR if it is closed; - `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually; - `@dependabot show <dependency name> ignore conditions` will show all of the ign",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2233:7735,Depend,Dependabot,7735,https://su2code.github.io,https://github.com/su2code/SU2/pull/2233,1,['Depend'],['Dependabot']
Integrability,"/SU2_CFD/src/integration/../../include/integration/../solvers/../../../Common/include/linear_algebra/CSysVector.hpp:337; #8 0x0000000000da260b in CSysSolve<double>::BCGSTAB_LinSolver (; this=0x23a2240, b=..., x=..., mat_vec=..., precond=..., ; tol=1.0000000000000001e-15, m=20, residual=@0x7fffffff8fb8: 0, ; monitoring=false, config=0x209bc10); at ../Common/src/linear_algebra/CSysSolve.cpp:553; #9 0x0000000000da404a in CSysSolve<double>::Solve (this=0x23a2240, ; Jacobian=..., LinSysRes=..., LinSysSol=..., geometry=0x2105400, ; config=0x209bc10) at ../Common/src/linear_algebra/CSysSolve.cpp:883; #10 0x00000000007b69da in CHeatSolver::ImplicitEuler_Iteration (; this=0x23a1de0, geometry=0x2105400, solver_container=0x23a1d70, ; config=0x209bc10) at ../SU2_CFD/src/solvers/CHeatSolver.cpp:1528; #11 0x0000000000b5a666 in CIntegration::Time_Integration (this=0x270d150, ; geometry=0x2105400, solver_container=0x23a1d70, config=0x209bc10, ; iRKStep=0, RunTime_EqSystem=21); at ../SU2_CFD/src/integration/CIntegration.cpp:205; #12 0x00000000004a2973 in CSingleGridIntegration::SingleGrid_Iteration (; this=0x270d150, geometry=0x2005130, solver_container=0x20058c0, ; numerics_container=0x20063b0, config=0x1de0e00, RunTime_EqSystem=21, ; iZone=1, iInst=0); at ../SU2_CFD/src/integration/CSingleGridIntegration.cpp:73; ---Type <return> to continue, or q <return> to quit---; #13 0x00000000004e33e4 in CHeatIteration::Iterate (this=0x270d170, ; output=0x20f0cc0, integration=0x1e3efe0, geometry=0x2005130, ; solver=0x20058c0, numerics=0x20063b0, config=0x1de0e00, ; surface_movement=0x1de0e20, grid_movement=0x1de0e40, FFDBox=0x1de0e60, ; val_iZone=1, val_iInst=0) at ../SU2_CFD/src/iteration/CHeatIteration.cpp:40; #14 0x00000000004db2ba in CFluidIteration::Solve (this=0x270d170, ; output=0x20f0cc0, integration=0x1e3efe0, geometry=0x2005130, ; solver=0x20058c0, numerics=0x20063b0, config=0x1de0e00, ; surface_movement=0x1de0e20, grid_movement=0x1de0e40, FFDBox=0x1de0e60, ; val_iZone=1, val_iInst=",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1241:6763,integrat,integration,6763,https://su2code.github.io,https://github.com/su2code/SU2/issues/1241,1,['integrat'],['integration']
Integrability,"/actions/download-artifact/commit/f71c0e3da3bb6b4fcc53196b9ac75ee981db5bc6""><code>f71c0e3</code></a> Revert &quot;licensed&quot;</li>; <li><a href=""https://github.com/actions/download-artifact/commit/7c63dfde29f42bb9cb0f61b67e54c91106a6586e""><code>7c63dfd</code></a> licensed</li>; <li><a href=""https://github.com/actions/download-artifact/commit/67d37cd34678091933f0a88cd1bb026171ea20d2""><code>67d37cd</code></a> Update toolkit</li>; <li><a href=""https://github.com/actions/download-artifact/commit/348754975ef0295bfa2c111cba996120cfdf8a5d""><code>3487549</code></a> Update release-new-action-version.yml (<a href=""https://redirect.github.com/actions/download-artifact/issues/292"">#292</a>)</li>; <li>Additional commits viewable in <a href=""https://github.com/actions/download-artifact/compare/v3...v4"">compare view</a></li>; </ul>; </details>; <br />. [![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=actions/download-artifact&package-manager=github_actions&previous-version=3&new-version=4)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores). Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`. [//]: # (dependabot-automerge-start); [//]: # (dependabot-automerge-end). ---. <details>; <summary>Dependabot commands and options</summary>; <br />. You can trigger Dependabot actions by commenting on this PR:; - `@dependabot rebase` will rebase this PR; - `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it; - `@dependabot merge` will merge this PR after your CI passes on it; - `@dependabot squash and merge` will squash and merge this PR after your CI passes on it; - `@dependabot cancel merge` will cancel a previously requested merge and block automerging; - `@dependabot reopen` will reopen",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2230:4857,depend,dependency-name,4857,https://su2code.github.io,https://github.com/su2code/SU2/pull/2230,1,['depend'],['dependency-name']
Integrability,"/bin/g++'; C++ compiler for the host machine: /usr/bin/g++ (gcc 10.2.0 ""g++ (GCC) 10.2.0""); C++ linker for the host machine: /usr/bin/g++ ld.bfd 2.35.1; Host machine cpu family: x86_64; Host machine cpu: x86_64; Program python3 found: YES (/usr/bin/python3); Found pkg-config: /usr/bin/pkg-config (1.7.3); Using 'PKG_CONFIG_PATH' from environment with value: '/usr/local/mpich-3.3.2/lib/pkgconfig'; Run-time dependency mpich found: YES 3.3.2; Dependency mpich found: YES 3.3.2 (cached); Message: Extracting boost ...; Using 'PKG_CONFIG_PATH' from environment with value: '/usr/local/mpich-3.3.2/lib/pkgconfig'; Run-time dependency openblas found: YES 0.3.10; Program swig found: YES (/usr/bin/swig); Message: Using mpi4py from /home/slimshady/.local/lib/python3.8/site-packages/mpi4py/include; Dependency python found: YES (pkgconfig); Program install.sh found: YES (/bin/sh /home/slimshady/UserPackages/SU2_HOME/SU2_PY/pySU2/install.sh); Message: -------------------------------------------------------------------------; | ___ _ _ ___ |; | / __| | | |_ ) Release 7.0.6 ""Blackbird"" |; | \__ \ |_| |/ / |; | |___/\___//___| Meson Configuration Summary |; | |; -------------------------------------------------------------------------; ; Option Value; ---------------------; TecIO: true; CGNS: true; AD (reverse): true; AD (forward): true; Python Wrapper: true; Intel-MKL: false; OpenBlas: true; PaStiX: false; Mixed Float: false. Please be sure to add the $SU2_HOME and $SU2_RUN environment variables,; and update your $PATH (and $PYTHONPATH if applicable) with $SU2_RUN. Based on the input to this configuration, add these lines to your .bashrc file:. export SU2_RUN=/home/slimshady/UserPackages/SU2_INSTALL/bin; export SU2_HOME=/home/slimshady/UserPackages/SU2_HOME; export PATH=$PATH:$SU2_RUN; export PYTHONPATH=$PYTHONPATH:$SU2_RUN. Use './ninja -C build install' to compile and install SU2. Build targets in project: 21. Found ninja-1.10.0.git at /home/slimshady/UserPackages/SU2_HOME/ninja; ```;",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1000#issuecomment-721366137:2765,Message,Message,2765,https://su2code.github.io,https://github.com/su2code/SU2/issues/1000#issuecomment-721366137,1,['Message'],['Message']
Integrability,"/c36458f13bdfaeff50a47b181b7368ae66b21f28""><code>c36458f</code></a> Update README.md</li>; <li><a href=""https://github.com/actions/cache/commit/13aacd865c20de90d75de3b17ebe84f7a17d57d2""><code>13aacd8</code></a> Merge pull request <a href=""https://redirect.github.com/actions/cache/issues/1242"">#1242</a> from to-s/main</li>; <li>Additional commits viewable in <a href=""https://github.com/actions/cache/compare/v3...v4"">compare view</a></li>; </ul>; </details>; <br />. [![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=actions/cache&package-manager=github_actions&previous-version=3&new-version=4)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores). Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`. [//]: # (dependabot-automerge-start); [//]: # (dependabot-automerge-end). ---. <details>; <summary>Dependabot commands and options</summary>; <br />. You can trigger Dependabot actions by commenting on this PR:; - `@dependabot rebase` will rebase this PR; - `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it; - `@dependabot merge` will merge this PR after your CI passes on it; - `@dependabot squash and merge` will squash and merge this PR after your CI passes on it; - `@dependabot cancel merge` will cancel a previously requested merge and block automerging; - `@dependabot reopen` will reopen this PR if it is closed; - `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually; - `@dependabot show <dependency name> ignore conditions` will show all of the ignore conditions of the specified dependency; - `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2232:10320,depend,dependabot-automerge-start,10320,https://su2code.github.io,https://github.com/su2code/SU2/pull/2232,2,['depend'],"['dependabot-automerge-end', 'dependabot-automerge-start']"
Integrability,"/download-artifact/commit/67d37cd34678091933f0a88cd1bb026171ea20d2""><code>67d37cd</code></a> Update toolkit</li>; <li><a href=""https://github.com/actions/download-artifact/commit/348754975ef0295bfa2c111cba996120cfdf8a5d""><code>3487549</code></a> Update release-new-action-version.yml (<a href=""https://redirect.github.com/actions/download-artifact/issues/292"">#292</a>)</li>; <li>Additional commits viewable in <a href=""https://github.com/actions/download-artifact/compare/v3...v4"">compare view</a></li>; </ul>; </details>; <br />. [![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=actions/download-artifact&package-manager=github_actions&previous-version=3&new-version=4)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores). Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`. [//]: # (dependabot-automerge-start); [//]: # (dependabot-automerge-end). ---. <details>; <summary>Dependabot commands and options</summary>; <br />. You can trigger Dependabot actions by commenting on this PR:; - `@dependabot rebase` will rebase this PR; - `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it; - `@dependabot merge` will merge this PR after your CI passes on it; - `@dependabot squash and merge` will squash and merge this PR after your CI passes on it; - `@dependabot cancel merge` will cancel a previously requested merge and block automerging; - `@dependabot reopen` will reopen this PR if it is closed; - `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually; - `@dependabot show <dependency name> ignore conditions` will show all of the ignore conditions of the specified dependency; - `@dependabot ignore this major versio",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2230:5242,depend,dependabot,5242,https://su2code.github.io,https://github.com/su2code/SU2/pull/2230,1,['depend'],['dependabot']
Integrability,"/github.com/actions/upload-release-asset/commit/72e8a5ef036620fb7afff8bbb8f9e78910c7ccbc""><code>72e8a5e</code></a> Merge pull request <a href=""https://github-redirect.dependabot.com/actions/upload-release-asset/issues/5"">#5</a> from cesperanc/documentation-update</li>; <li><a href=""https://github.com/actions/upload-release-asset/commit/bf2a7fbecfaaaa29f7819c650ad302e52f68238e""><code>bf2a7fb</code></a> Update example to use the fixed version</li>; <li>See full diff in <a href=""https://github.com/actions/upload-release-asset/compare/v1.0.1...v1.0.2"">compare view</a></li>; </ul>; </details>; <br />. [![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=actions/upload-release-asset&package-manager=github_actions&previous-version=1.0.1&new-version=1.0.2)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores). Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`. [//]: # (dependabot-automerge-start); [//]: # (dependabot-automerge-end). ---. <details>; <summary>Dependabot commands and options</summary>; <br />. You can trigger Dependabot actions by commenting on this PR:; - `@dependabot rebase` will rebase this PR; - `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it; - `@dependabot merge` will merge this PR after your CI passes on it; - `@dependabot squash and merge` will squash and merge this PR after your CI passes on it; - `@dependabot cancel merge` will cancel a previously requested merge and block automerging; - `@dependabot reopen` will reopen this PR if it is closed; - `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually; - `@dependabot ignore this major version` will close this PR and stop Dependabot ",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1737:2635,Depend,Dependabot,2635,https://su2code.github.io,https://github.com/su2code/SU2/pull/1737,3,['Depend'],['Dependabot']
Integrability,"/github.com/mheap/github-action-required-labels/commit/65d195bf4a9b738e8f2a9c540d0cc182bb80df72""><code>65d195b</code></a> Add <code>labels</code> output which will contain all the matching/intersecting labels i...</li>; <li><a href=""https://github.com/mheap/github-action-required-labels/commit/5384b5bb3bf2c6b1c100a2a5821e1ddac8c38cae""><code>5384b5b</code></a> Add newline after the match token in error comments (<a href=""https://redirect.github.com/mheap/github-action-required-labels/issues/55"">#55</a>)</li>; <li><a href=""https://github.com/mheap/github-action-required-labels/commit/e33092117bdd8c435e9b654d53726c6936f19518""><code>e330921</code></a> Only use a single comment when the action fails (<a href=""https://redirect.github.com/mheap/github-action-required-labels/issues/53"">#53</a>)</li>; <li>Additional commits viewable in <a href=""https://github.com/mheap/github-action-required-labels/compare/v3...v5"">compare view</a></li>; </ul>; </details>; <br />. [![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=mheap/github-action-required-labels&package-manager=github_actions&previous-version=3&new-version=5)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores). Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`. [//]: # (dependabot-automerge-start); [//]: # (dependabot-automerge-end). ---. <details>; <summary>Dependabot commands and options</summary>; <br />. You can trigger Dependabot actions by commenting on this PR:; - `@dependabot rebase` will rebase this PR; - `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it; - `@dependabot merge` will merge this PR after your CI passes on it; - `@dependabot squash and merge` will squash and merge this PR after your CI passes on it; ",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2125:5563,Depend,Dependabot,5563,https://su2code.github.io,https://github.com/su2code/SU2/pull/2125,4,"['Depend', 'depend']","['Dependabot', 'dependabot-badges']"
Integrability,"/lib -L/home/user/anaconda3/lib'; Using 'CPPFLAGS' from environment with value: '-DNDEBUG -D_FORTIFY_SOURCE=2 -O2 -isystem /home/user/anaconda3/include'; C++ compiler for the host machine: c++ (gcc 4.8.5 ""c++ (GCC) 4.8.5 20150623 (Red Hat 4.8.5-28)""); C++ linker for the host machine: c++ ld.bfd 2.27-27; Host machine cpu family: x86_64; Host machine cpu: x86_64; Program python3 found: YES (/home/user/anaconda3/bin/python3); Found pkg-config: /home/user/anaconda3/bin/pkg-config (0.29.2); /work/A/openmpi/3.0.0_intel2018u2/bin/mpicc found: YES (/work/A/openmpi/3.0.0_intel2018u2/bin/mpicc) 3.0.0; Run-time dependency MPI for c found: YES 3.0.0; /work/A/openmpi/3.0.0_intel2018u2/bin/mpicxx found: YES (/work/A/openmpi/3.0.0_intel2018u2/bin/mpicxx) 3.0.0; Run-time dependency MPI for cpp found: YES 3.0.0; Message: Boost sources found.; Program swig found: YES (/home/user/anaconda3/bin/swig); Message: Using mpi4py from /home/user/anaconda3/lib/python3.7/site-packages/mpi4py/include; Dependency python found: YES (pkgconfig); Program install.sh found: YES (/bin/sh /home/user/programs/su2/SU2_src/SU2_PY/pySU2/install.sh); Message: -------------------------------------------------------------------------; | ___ _ _ ___ |; | / __| | | |_ ) Release 7.0.8 ""Blackbird"" |; | \__ \ |_| |/ / |; | |___/\___//___| Meson Configuration Summary |; | |; -------------------------------------------------------------------------; ; Option Value; ---------------------; TecIO: true; CGNS: true; AD (reverse): false; AD (forward): false; Python Wrapper: true; Intel-MKL: false; OpenBlas: false; PaStiX: false; Mixed Float: false; ; Please be sure to add the $SU2_HOME and $SU2_RUN environment variables,; and update your $PATH (and $PYTHONPATH if applicable) with $SU2_RUN; ; Based on the input to this configuration, add these lines to your .bashrc file:; ; export SU2_RUN=/home/user/programs/su2/SU2-7.0.8/bin; export SU2_HOME=/home/user/programs/su2/SU2_src; export PATH=$PATH:$SU2_RUN; export PYTHONPATH=$P",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1134#issuecomment-744491311:4459,Depend,Dependency,4459,https://su2code.github.io,https://github.com/su2code/SU2/issues/1134#issuecomment-744491311,1,['Depend'],['Dependency']
Integrability,"/v3...v4"">compare view</a></li>; </ul>; </details>; <br />. [![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=actions/cache&package-manager=github_actions&previous-version=3&new-version=4)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores). Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`. [//]: # (dependabot-automerge-start); [//]: # (dependabot-automerge-end). ---. <details>; <summary>Dependabot commands and options</summary>; <br />. You can trigger Dependabot actions by commenting on this PR:; - `@dependabot rebase` will rebase this PR; - `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it; - `@dependabot merge` will merge this PR after your CI passes on it; - `@dependabot squash and merge` will squash and merge this PR after your CI passes on it; - `@dependabot cancel merge` will cancel a previously requested merge and block automerging; - `@dependabot reopen` will reopen this PR if it is closed; - `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually; - `@dependabot show <dependency name> ignore conditions` will show all of the ignore conditions of the specified dependency; - `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself); - `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself); - `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself). ",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2232:10477,Depend,Dependabot,10477,https://su2code.github.io,https://github.com/su2code/SU2/pull/2232,9,"['Depend', 'depend']","['Dependabot', 'dependabot']"
Integrability,"0.2</li>; <li><a href=""https://github.com/actions/cache/commit/f4278025ab0f432ce369118909e46deec636f50c""><code>f427802</code></a> Merge pull request <a href=""https://github-redirect.dependabot.com/actions/cache/issues/887"">#887</a> from actions/pdotl-version-patch</li>; <li><a href=""https://github.com/actions/cache/commit/9916fe1701f098b95a05e7c2bacee7c5a022c553""><code>9916fe1</code></a> Update cache version in licences</li>; <li><a href=""https://github.com/actions/cache/commit/318935ef66557a1906560e4e7d0069344a4b31bf""><code>318935e</code></a> Update README and RELEASES</li>; <li>Additional commits viewable in <a href=""https://github.com/actions/cache/compare/v1...v3"">compare view</a></li>; </ul>; </details>; <br />. [![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=actions/cache&package-manager=github_actions&previous-version=1&new-version=3)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores). Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`. [//]: # (dependabot-automerge-start); [//]: # (dependabot-automerge-end). ---. <details>; <summary>Dependabot commands and options</summary>; <br />. You can trigger Dependabot actions by commenting on this PR:; - `@dependabot rebase` will rebase this PR; - `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it; - `@dependabot merge` will merge this PR after your CI passes on it; - `@dependabot squash and merge` will squash and merge this PR after your CI passes on it; - `@dependabot cancel merge` will cancel a previously requested merge and block automerging; - `@dependabot reopen` will reopen this PR if it is closed; - `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by c",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1755:9315,depend,dependabot-security-updates,9315,https://su2code.github.io,https://github.com/su2code/SU2/pull/1755,1,['depend'],['dependabot-security-updates']
Integrability,"04. ## Validation and Verification; - V&V of features that lack coverage (i.e. a particular fluid model, design variable, etc.), followed by regression test and ideally tutorial #581; - Put the V&V cases under regression to ensure they are up to date (similar to what is done with tutorials). ## Testing and test cases; - More unit tests #698; - Cleanup of TestCases to make them ""Minimum working examples"" (no redundant options, no duplication of descriptions from the config template, etc.).; - ""Obscure"" features (""things that SU2 does"" to some extent but are: incomplete, not validated / regression-tested, not documented) cleanup obsolete examples in TestCases, and identify features lacking test coverage, decide what to do with those features. ## Code maintenance; - Better support / documentation for building SU2 directly on Windows. #1468; - Replacing the legacy output #1316; - General C++ cleanup #1218; - Deprecate legacy build system. ## Robust convergence; - Multigrid issues on unstructured grids and less robust with MPI in general e.g. #1362 #1549; - Reduced stability of fluid-fluid interfaces #1414; - Reduced stability of periodic boundary conditions #1467; - Convergence in poor quality meshes, or anisotropically adapted. ## Customization; - More flexible outputs (user-defined #1478, consistent SCREEN and HISTORY #1493, file output frequency #1539); - Python wrapper: expose more inputs to allow e.g. time-dependent boundary conditions; tutorials. ## Optimization; - Add SU2_DOT to python wrapper, refactor to use CMeshSolver #1300; - Allowing more inputs as design variables.; - Overhaul the entire optimization framework #733; - Try to use FADO in more cases to assess the impact of removing the existing shape_optimization.py; - Improve mesh deformation method (maintain quality, prevent intersections, etc.). ## Completely new development areas; - Overset meshes.; - GPU.; - Polygonal meshes.; - Adaptive mesh refinement (some external possibilities possible, e.g. #948).",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1487:2844,interface,interfaces,2844,https://su2code.github.io,https://github.com/su2code/SU2/issues/1487,4,"['depend', 'interface', 'wrap']","['dependent', 'interfaces', 'wrapper']"
Integrability,"067</a>)</li>; <li><a href=""https://github.com/actions/checkout/commit/97a652b80035363df47baee5031ec8670b8878ac""><code>97a652b</code></a> Update default runtime to node20 (<a href=""https://redirect.github.com/actions/checkout/issues/1436"">#1436</a>)</li>; <li>See full diff in <a href=""https://github.com/actions/checkout/compare/v3...v4"">compare view</a></li>; </ul>; </details>; <br />. [![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=actions/checkout&package-manager=github_actions&previous-version=3&new-version=4)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores). Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`. [//]: # (dependabot-automerge-start); [//]: # (dependabot-automerge-end). ---. <details>; <summary>Dependabot commands and options</summary>; <br />. You can trigger Dependabot actions by commenting on this PR:; - `@dependabot rebase` will rebase this PR; - `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it; - `@dependabot merge` will merge this PR after your CI passes on it; - `@dependabot squash and merge` will squash and merge this PR after your CI passes on it; - `@dependabot cancel merge` will cancel a previously requested merge and block automerging; - `@dependabot reopen` will reopen this PR if it is closed; - `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually; - `@dependabot show <dependency name> ignore conditions` will show all of the ignore conditions of the specified dependency; - `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself); - `@dependabot ",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2126:11167,Depend,Dependabot,11167,https://su2code.github.io,https://github.com/su2code/SU2/pull/2126,2,['Depend'],['Dependabot']
Integrability,"06821/51894695-c4846680-23a8-11e9-87f5-35041d71fee4.gif). For the latter case I haven’t yet rotated the inner circle, because there are some missing features for dynamic meshes in the incompressible solver. The previous test case for steady-state flows has been added. One for unsteady flows will be enabled once the new output is in place, as the current output structure makes the regression scripts fail. The previous, however, opened a can of worms, as there were some physics based calls in the parent transfer structure (e.g. `GetnSlidingStates()`, `SetSlidingState()` and `SetnSlidingStates()`) that made the incompressible CHT cases run into problems. . So I’ve also taken the chance to move some initialization and some calls to the specific physics-based transfer structures, making use of the polymorphism of the transfer code. This way the parent class remains opaque to the physics. At the same time, I cleaned up some long-time unused routines, made the Broadcast_Data the default for zone interfaces, and removed the MATCHING_MESH option as it is just a particular case of Nearest Neighbour. ## Related Work. - Complements the sliding interface feature by @LaSerpe in #389 by adding the corresponding functions to the incompressible flow solver. - Removes MATCHING_MESH option as discussed with @pcarruscag in #597. - Removes some compilation warnings due to unused variables. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test case that demonstrates my contribution, if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/638:2331,rout,routines,2331,https://su2code.github.io,https://github.com/su2code/SU2/pull/638,3,"['interface', 'rout']","['interface', 'interfaces', 'routines']"
Integrability,"098b95a05e7c2bacee7c5a022c553""><code>9916fe1</code></a> Update cache version in licences</li>; <li><a href=""https://github.com/actions/cache/commit/318935ef66557a1906560e4e7d0069344a4b31bf""><code>318935e</code></a> Update README and RELEASES</li>; <li>Additional commits viewable in <a href=""https://github.com/actions/cache/compare/v1...v3"">compare view</a></li>; </ul>; </details>; <br />. [![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=actions/cache&package-manager=github_actions&previous-version=1&new-version=3)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores). Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`. [//]: # (dependabot-automerge-start); [//]: # (dependabot-automerge-end). ---. <details>; <summary>Dependabot commands and options</summary>; <br />. You can trigger Dependabot actions by commenting on this PR:; - `@dependabot rebase` will rebase this PR; - `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it; - `@dependabot merge` will merge this PR after your CI passes on it; - `@dependabot squash and merge` will squash and merge this PR after your CI passes on it; - `@dependabot cancel merge` will cancel a previously requested merge and block automerging; - `@dependabot reopen` will reopen this PR if it is closed; - `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually; - `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself); - `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1755:9637,Depend,Dependabot,9637,https://su2code.github.io,https://github.com/su2code/SU2/pull/1755,1,['Depend'],['Dependabot']
Integrability,"1.	While running in parallel a Fluid Structure Interaction case in SU2 for square cylinder with beam using the following command: **/usr/local/bin/parallel_computation.py -f config.cfg -n 12**; I am getting the following error: ; //; ('Unexpected error: ', <type 'exceptions.KeyError'>); Traceback (most recent call last):; File ""/usr/local/bin/parallel_computation.py"", line 110, in <module>; main(); File ""/usr/local/bin/parallel_computation.py"", line 57, in main; options.compute ); File ""/usr/local/bin/parallel_computation.py"", line 71, in parallel_computation; config = SU2.io.Config(filename); File ""/usr/local/bin/SU2/io/config.py"", line 93, in __init__; self.read(filename); File ""/usr/local/bin/SU2/io/config.py"", line 142, in read; konfig = read_config(filename); File ""/usr/local/bin/SU2/io/config.py"", line 784, in read_config; Mesh_Filename = data_dict['MESH_FILENAME']; KeyError: 'MESH_FILENAME'; //. 2.	It is running fine in serial using the command : *SU2_CFD config.cfg** . I have also tried with mpirun. ; 3.	Execution command: **mpirun -n 12 /usr/local/bin/SU2_CFD config.cfg** . the simulation is running but I guess parallel execution is not done properly because it is showing the following error: . [DESKTOP-8N08ELC:00100] 11 more processes have sent help message help-btl-vader.txt / cma-permission-denied; [DESKTOP-8N08ELC:00100] Set MCA parameter ""orte_base_help_aggregate"" to 0 to see all help / error messages. Kindly let me know how to resolve the issue. . OS : ubuntu 18.04 ; C++ version : GCC 7.3.0; MPI implementation and version : mpirun (Open MPI) 2.1.1; SU2 version: 7.6.0",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1094:1280,message,message,1280,https://su2code.github.io,https://github.com/su2code/SU2/issues/1094,2,['message'],"['message', 'messages']"
Integrability,"106</a></li>; </ul>; <h2>3.23.2 - 26 Jan 2024</h2>; <ul>; <li>On Linux, the maximum possible value for the <code>--threads</code> option now respects the CPU count as specified in <code>cgroup</code> files to more accurately reflect the number of available cores when running in containers. <a href=""https://redirect.github.com/github/codeql-action/pull/2083"">#2083</a></li>; <li>Update default CodeQL bundle version to 2.16.1. <a href=""https://redirect.github.com/github/codeql-action/pull/2096"">#2096</a></li>; </ul>; <h2>3.23.1 - 17 Jan 2024</h2>; <ul>; <li>Update default CodeQL bundle version to 2.16.0. <a href=""https://redirect.github.com/github/codeql-action/pull/2073"">#2073</a></li>; <li>Change the retention period for uploaded debug artifacts to 7 days. Previously, this was whatever the repository default was. <a href=""https://redirect.github.com/github/codeql-action/pull/2079"">#2079</a></li>; </ul>; <h2>3.23.0 - 08 Jan 2024</h2>; <ul>; <li>We are rolling out a feature in January 2024 that will disable Python dependency installation by default for all users. This improves the speed of analysis while having only a very minor impact on results. You can override this behavior by setting <code>CODEQL_ACTION_DISABLE_PYTHON_DEPENDENCY_INSTALLATION=false</code> in your workflow, however we plan to remove this ability in future versions of the CodeQL Action. <a href=""https://redirect.github.com/github/codeql-action/pull/2031"">#2031</a></li>; <li>The CodeQL Action now requires CodeQL version 2.11.6 or later. For more information, see <a href=""https://github.com/github/codeql-action/blob/main/#2227---16-nov-2023"">the corresponding changelog entry for CodeQL Action version 2.22.7</a>. <a href=""https://redirect.github.com/github/codeql-action/pull/2009"">#2009</a></li>; </ul>; <h2>3.22.12 - 22 Dec 2023</h2>; <ul>; <li>Update default CodeQL bundle version to 2.15.5. <a href=""https://redirect.github.com/github/codeql-action/pull/2047"">#2047</a></li>; </ul>; <h2>3.22.11 - 13 Dec 2",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2229:12773,depend,dependency,12773,https://su2code.github.io,https://github.com/su2code/SU2/pull/2229,1,['depend'],['dependency']
Integrability,"131`; ```c++; if ((nrm <= 0.0) || (nrm != nrm)) {; ```; and is supposed to originate from `CDriver.cpp:1366` via a `Uninitialised value was created by a heap allocation`; ```c++; numerics[iMGlevel][SPECIES_SOL][visc_term] = new CAvgGrad_Species<Indices>(nDim, nVar_Species, true, config);; ```; ```c++; 338 --139924-- REDIR: 0x53dc330 (libstdc++.so.6:operator new[](unsigned long)) redirected to 0x4c2a801 (operator new[](unsigned long)); 339 --139924-- REDIR: 0x53da3e0 (libstdc++.so.6:operator delete[](void*)) redirected to 0x4c2b596 (operator delete[](void*)); 340 --139924-- REDIR: 0x53dc2e0 (libstdc++.so.6:operator new(unsigned long, std::nothrow_t const&)) redirected to 0x4c2a3af (operator new(unsigned long, std::nothrow_t const&)); 341 --139924-- REDIR: 0x53da3d0 (libstdc++.so.6:operator delete(void*, std::nothrow_t const&)) redirected to 0x4c2b2a8 (operator delete(void*, std::nothrow_t const&)); 342 ==139924== Conditional jump or move depends on uninitialised value(s); 343 ==139924== at 0xE2D19C: CSysSolve<double>::ModGramSchmidt(int, C2DContainer<unsigned long, double, (StorageType)0, 64ul, 0ul, 0ul>&, std::vector<CSysVector<double>, std::allocator<CSysVector<double> > >&) const (CSysSolve.cpp:131); 344 ==139924== by 0xE2F292: CSysSolve<double>::FGMRES_LinSolver(CSysVector<double> const&, CSysVector<double>&, CMatrixVectorProduct<double> const&, CPreconditioner<double> const&, double, unsigned long, double&, bool, CConfig const*) const (CSysSolve.cpp:456); 345 ==139924== by 0xE3187E: CSysSolve<double>::Solve(CSysMatrix<double>&, CSysVector<double> const&, CSysVector<double>&, CGeometry*, CConfig const*) (CSysSolve.cpp:899); 346 ==139924== by 0x88070D: CScalarSolver<CSpeciesVariable>::ImplicitEuler_Iteration(CGeometry*, CSolver**, CConfig*) (CScalarSolver.inl:395); 347 ==139924== by 0xB8D475: CIntegration::Time_Integration(CGeometry*, CSolver**, CConfig*, unsigned short, unsigned short) (CIntegration.cpp:208); 348 ==139924== by 0x4AD428: CSingleGridIntegration::Sin",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1388#issuecomment-968058603:2584,depend,depends,2584,https://su2code.github.io,https://github.com/su2code/SU2/pull/1388#issuecomment-968058603,1,['depend'],['depends']
Integrability,"2' --with-bugurl=https://bugs.archlinux.org/ --enable-languages=c,c++,ada,fortran,go,lto,objc,obj-c++,d --enable-shared --enable-threads=posix --with-system-zlib --with-isl --enable-__cxa_atexit --disable-libunwind-exceptions --enable-clocale=gnu --disable-libstdcxx-pch --disable-libssp --enable-gnu-unique-object --enable-linker-build-id --enable-lto --enable-plugin --enable-install-libiberty --with-linker-hash-style=gnu --enable-gnu-indirect-function --enable-multilib --disable-werror --enable-checking=release --enable-default-pie --enable-default-ssp --enable-cet=auto gdc_include_dir=/usr/include/dlang/gdc; Thread model: posix; gcc version 9.2.1 20200130 (Arch Linux 9.2.1+20200130-2) ; ```; I did what you suggested and here is how my meson.build file looks.; ```; # If custom mpi mode is enabled, include and library pathes for MPI have to be set manually to env variables; if get_option('custom-mpi'); mpi_dep = []; mpi = true; # Otherwise they are automatically determined; else; mpi_dep = [dependency('mpich', required : get_option('with-mpi'))]; # mpi_dep = [dependency('mpi', language:'c', required : get_option('with-mpi')),; # dependency('mpi', language:'cpp', required : get_option('with-mpi'))]; #if mpi_dep[0].found() or mpi_dep[1].found(); # mpi = true; #endif; endif; ```; My SU2 build was successful but there were a couple of warnings.; Also, instead of 870 there were only 772 files in total. Is that okay?; ```; slimshady@arch-linux-hp-probook-g3-450: SU2HOME$ ./ninja -C build install; ninja: Entering directory `build'; [756/772] Generating 'SU2_PY/pySU2/_pysu2.so.p/pySU2.cxx'.; ../SU2_PY/pySU2/../../Common/include/mpi_structure.hpp:348: Warning 325: Nested struct not currently supported (Status ignored); [760/772] Generating 'SU2_PY/pySU2/_pysu2ad.so.p/pySU2ad.cxx'.; ../SU2_PY/pySU2/../../Common/include/mpi_structure.hpp:348: Warning 325: Nested struct not currently supported (Status ignored); [771/772] Installing files.; .; .; ```; Here is the [entire output fo",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1000#issuecomment-633139474:1556,depend,dependency,1556,https://su2code.github.io,https://github.com/su2code/SU2/issues/1000#issuecomment-633139474,6,['depend'],['dependency']
Integrability,"20200130-2) 9.2.1 20200130""); C linker for the host machine: cc ld.bfd 2.34; C++ compiler for the host machine: c++ (gcc 9.2.1 ""c++ (Arch Linux 9.2.1+20200130-2) 9.2.1 20200130""); C++ linker for the host machine: c++ ld.bfd 2.34; Host machine cpu family: x86_64; Host machine cpu: x86_64; Program python3 found: YES (/usr/bin/python3); Message: Boost sources found.; Found pkg-config: /usr/bin/pkg-config (1.6.3); Run-time dependency openblas found: YES 0.3.8; Program swig found: YES (/usr/bin/swig); Message: Using mpi4py from /home/slimshady/.local/lib/python3.8/site-packages/mpi4py/include; Dependency python found: YES (pkgconfig); Program install.sh found: YES (/bin/sh /home/slimshady/UserPackages/SU2_HOME/SU2_PY/pySU2/install.sh); Message: -------------------------------------------------------------------------; | ___ _ _ ___ |; | / __| | | |_ ) Release 7.0.4 ""Blackbird"" |; | \__ \ |_| |/ / |; | |___/\___//___| Meson Configuration Summary |; | |; -------------------------------------------------------------------------; ; Option Value; ---------------------; TecIO: true; CGNS: true; AD (reverse): true; AD (forward): true; Python Wrapper: true; Intel-MKL: false; OpenBlas: true; PaStiX: false. Please be sure to add the $SU2_HOME and $SU2_RUN environment variables,; and update your $PATH (and $PYTHONPATH if applicable) with $SU2_RUN. Based on the input to this configuration, add these lines to your .bashrc file:. export SU2_RUN=/home/slimshady/UserPackages/SU2_INSTALL/bin; export SU2_HOME=/home/slimshady/UserPackages/SU2_HOME; export PATH=$PATH:$SU2_RUN; export PYTHONPATH=$PYTHONPATH:$SU2_RUN. Use './ninja -C build install' to compile and install SU2. Build targets in project: 21. Found ninja-1.10.0.git at /home/slimshady/UserPackages/SU2_HOME/ninja; ```; I think I should mention, I cloned the `develop` branch and used [this commit](https://github.com/su2code/SU2/commit/ad6311322b9952f92584d3e141237e7156cdc07c):; `git checkout ad6311322b9952f92584d3e141237e7156cdc07c`",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1000#issuecomment-634298776:2204,Wrap,Wrapper,2204,https://su2code.github.io,https://github.com/su2code/SU2/issues/1000#issuecomment-634298776,1,['Wrap'],['Wrapper']
Integrability,2649| 2.12649| kg/m^3| 1|; | Temperature| 300| 300| K| 1|; | Total Energy| 216650| 86117.4| m^2/s^2| 2.51575|; | Velocity-X| 51.2923| 293.458| m/s| 0.174786|; | Velocity-Y| 9.04422| 293.458| m/s| 0.0308195|; |Velocity Magnitude| 52.0836| 293.458| m/s| 0.177482|; +--------------------------------------------------------------------------+; | Viscosity| 1.84592e-05| 624.034| N.s/m^2| 2.95804e-08|; | Conductivity| -| 179134| W/m^2.K| -|; | Turb. Kin. Energy| 10.1726| 86117.4| m^2/s^2| 0.000118125|; | Spec. Dissipation| 117188| 293.458| 1/s| 399.335|; +--------------------------------------------------------------------------+; | Mach Number| -| -| -| 0.15|; | Reynolds Number| -| -| -| 6e+06|; +--------------------------------------------------------------------------+. Initialize Jacobian structure (Navier-Stokes). MG level: 0.; Initialize Jacobian structure (SA model).; Initialize Jacobian structure (Navier-Stokes). MG level: 1.; Initialize Jacobian structure (Navier-Stokes). MG level: 2.; Initialize Jacobian structure (Navier-Stokes). MG level: 3. ----------------- Integration and Numerics Preprocessing ----------------; Integration Preprocessing.; Numerics Preprocessing. ---------------------- Python Interface Preprocessing ---------------------; Setting customized boundary conditions for zone 0. -------------------------- Output Preprocessing ---------------------------; Zone 1: Euler/Navier-Stokes/RANS output structure.; History filename: history.dat. ------------------------------ Begin Solver -----------------------------; +----------------------------------------------------------------+; | Ext_Iter| Res[Rho]| Res[RhoU]| Res[RhoV]| Res[RhoE]|; +----------------------------------------------------------------+; | 0| -4.165003| -14.735159| -14.709795| -3.618985|; | 1| -4.436685| -4.791378| -4.176224| -3.887401|; | 2| -4.772585| -5.044913| -4.741431| -4.226021|; | 3| -4.865861| -4.936267| -4.736063| -4.319940|; | 4| -4.908893| -4.837536| -4.707111| -4.363705|. ```,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/591:8854,Integrat,Integration,8854,https://su2code.github.io,https://github.com/su2code/SU2/issues/591,3,"['Integrat', 'Interface']","['Integration', 'Interface']"
Integrability,"2d723eb4cc3a0af43f6bee825c4742280""><code>dc88ab5</code></a> Update examples</li>; <li><a href=""https://github.com/actions/cache/commit/1d78355196cc3f88914ca91332c58d431a78513d""><code>1d78355</code></a> Merge pull request <a href=""https://redirect.github.com/actions/cache/issues/1304"">#1304</a> from actions/yacaovsnc/update_readme</li>; <li><a href=""https://github.com/actions/cache/commit/c36458f13bdfaeff50a47b181b7368ae66b21f28""><code>c36458f</code></a> Update README.md</li>; <li><a href=""https://github.com/actions/cache/commit/13aacd865c20de90d75de3b17ebe84f7a17d57d2""><code>13aacd8</code></a> Merge pull request <a href=""https://redirect.github.com/actions/cache/issues/1242"">#1242</a> from to-s/main</li>; <li>Additional commits viewable in <a href=""https://github.com/actions/cache/compare/v3...v4"">compare view</a></li>; </ul>; </details>; <br />. [![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=actions/cache&package-manager=github_actions&previous-version=3&new-version=4)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores). Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`. [//]: # (dependabot-automerge-start); [//]: # (dependabot-automerge-end). ---. <details>; <summary>Dependabot commands and options</summary>; <br />. You can trigger Dependabot actions by commenting on this PR:; - `@dependabot rebase` will rebase this PR; - `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it; - `@dependabot merge` will merge this PR after your CI passes on it; - `@dependabot squash and merge` will squash and merge this PR after your CI passes on it; - `@dependabot cancel merge` will cancel a previously requested merge and block automerging; - `@dependabot reopen` will reopen this ",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2232:9918,depend,dependency-name,9918,https://su2code.github.io,https://github.com/su2code/SU2/pull/2232,1,['depend'],['dependency-name']
Integrability,2nd try at fixing hdf5 + python wrapper problems,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1634:32,wrap,wrapper,32,https://su2code.github.io,https://github.com/su2code/SU2/pull/1634,1,['wrap'],['wrapper']
Integrability,"3 found: YES (/home/tjim/anaconda3/envs/sound/bin/python); Run-time dependency MPI for c found: YES 4.0.3; Run-time dependency MPI for cpp found: YES 4.0.3; WARNING: Use the 'pic' kwarg instead of passing '-fpic' manually to 'meshb7'; Message: Boost sources found.; Run-time dependency mkl-static-lp64-seq found: YES 2020 Update 4; Program swig found: YES (/home/tjim/anaconda3/envs/sound/bin/swig); Message: Using mpi4py from /home/tjim/anaconda3/envs/sound/lib/python3.7/site-packages/mpi4py/include; Run-time dependency python3 found: YES 3.6; Program install.sh found: YES (/bin/sh /opt/su2/SU2_src/SU2_PY/pySU2/install.sh); Message: -------------------------------------------------------------------------; | ___ _ _ ___ |; | / __| | | |_ ) Release 7.0.3 ""Blackbird"" |; | \__ \ |_| |/ / |; | |___/\___//___| Meson Configuration Summary |; | |; -------------------------------------------------------------------------; ; Option Value; ---------------------; TecIO: true; CGNS: true; AD (reverse): true; AD (forward): true; Python Wrapper: true; Intel-MKL: true; OpenBlas: false; PaStiX: false. Please be sure to add the $SU2_HOME and $SU2_RUN environment variables,; and update your $PATH (and $PYTHONPATH if applicable) with $SU2_RUN. Based on the input to this configuration, add these lines to your .bashrc file:. export SU2_RUN=/opt/su2/SU2v7_adap/bin; export SU2_HOME=/opt/su2/SU2_src; export PATH=$PATH:$SU2_RUN; export PYTHONPATH=$PYTHONPATH:$SU2_RUN. Use './ninja -C build install' to compile and install SU2. Build targets in project: 19; Found ninja-1.10.0.git at /opt/su2/SU2_src/ninja; ```; Where the `Run-time dependency python3` is reported as the system v3.6 whereas I'm running 3.7.8. Could it be that amg was installed into the system python? But before running meson, I had activated my python conda environment and mpi4py seems to be picked up from the right one. I'm just not sure why it also finds 3.6. Can you give me some tips for troubleshooting this?; Thanks very much!",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/948#issuecomment-751431778:3242,depend,dependency,3242,https://su2code.github.io,https://github.com/su2code/SU2/issues/948#issuecomment-751431778,1,['depend'],['dependency']
Integrability,"3"">compare view</a></li>; </ul>; </details>; <br />. [![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=github/codeql-action&package-manager=github_actions&previous-version=2&new-version=3)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores). Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`. [//]: # (dependabot-automerge-start); [//]: # (dependabot-automerge-end). ---. <details>; <summary>Dependabot commands and options</summary>; <br />. You can trigger Dependabot actions by commenting on this PR:; - `@dependabot rebase` will rebase this PR; - `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it; - `@dependabot merge` will merge this PR after your CI passes on it; - `@dependabot squash and merge` will squash and merge this PR after your CI passes on it; - `@dependabot cancel merge` will cancel a previously requested merge and block automerging; - `@dependabot reopen` will reopen this PR if it is closed; - `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually; - `@dependabot show <dependency name> ignore conditions` will show all of the ignore conditions of the specified dependency; - `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself); - `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself); - `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself). ",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2229:15950,Depend,Dependabot,15950,https://su2code.github.io,https://github.com/su2code/SU2/pull/2229,9,"['Depend', 'depend']","['Dependabot', 'dependabot']"
Integrability,"3.1-5)""); C linker for the host machine: GNU ld.bfd 2.30-79; C++ compiler for the host machine: /usr/lib64/openmpi/bin/mpicxx (gcc 8.3.1 ""g++ (GCC) 8.3.1 20191121 (Red Hat 8.3.1-5)""); C++ linker for the host machine: GNU ld.bfd 2.30-79; Host machine cpu family: x86_64; Host machine cpu: x86_64; Program python3 found: YES (/home/tjim/anaconda3/envs/sound/bin/python); Run-time dependency MPI for c found: YES 4.0.3; Run-time dependency MPI for cpp found: YES 4.0.3; WARNING: Use the 'pic' kwarg instead of passing '-fpic' manually to 'meshb7'; Message: Boost sources found.; Run-time dependency mkl-static-lp64-seq found: YES 2020 Update 4; Program swig found: YES (/home/tjim/anaconda3/envs/sound/bin/swig); Message: Using mpi4py from /home/tjim/anaconda3/envs/sound/lib/python3.7/site-packages/mpi4py/include; Run-time dependency python3 found: YES 3.6; Program install.sh found: YES (/bin/sh /opt/su2/SU2_src/SU2_PY/pySU2/install.sh); Message: -------------------------------------------------------------------------; | ___ _ _ ___ |; | / __| | | |_ ) Release 7.0.3 ""Blackbird"" |; | \__ \ |_| |/ / |; | |___/\___//___| Meson Configuration Summary |; | |; -------------------------------------------------------------------------; ; Option Value; ---------------------; TecIO: true; CGNS: true; AD (reverse): true; AD (forward): true; Python Wrapper: true; Intel-MKL: true; OpenBlas: false; PaStiX: false. Please be sure to add the $SU2_HOME and $SU2_RUN environment variables,; and update your $PATH (and $PYTHONPATH if applicable) with $SU2_RUN. Based on the input to this configuration, add these lines to your .bashrc file:. export SU2_RUN=/opt/su2/SU2v7_adap/bin; export SU2_HOME=/opt/su2/SU2_src; export PATH=$PATH:$SU2_RUN; export PYTHONPATH=$PYTHONPATH:$SU2_RUN. Use './ninja -C build install' to compile and install SU2. Build targets in project: 19; Found ninja-1.10.0.git at /opt/su2/SU2_src/ninja; ```; Where the `Run-time dependency python3` is reported as the system v3.6 whereas I'm",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/948#issuecomment-751431778:2242,Message,Message,2242,https://su2code.github.io,https://github.com/su2code/SU2/issues/948#issuecomment-751431778,1,['Message'],['Message']
Integrability,33425]; [ system:14031] [ 2] /lib/x86_64-linux-gnu/libc.so.6(abort+0x17b) [0x7fa4e9b36b8b]; [ system:14031] [ 3] /usr/lib/x86_64-linux-gnu/libstdc++.so.6(_ZN9__gnu_cxx27__verbose_terminate_handlerEv+0x11d) [0x7fa4ea6a369d]; [ system:14031] [ 4] /usr/lib/x86_64-linux-gnu/libstdc++.so.6(+0xb5846) [0x7fa4ea6a1846]; [ system:14031] [ 5] /usr/lib/x86_64-linux-gnu/libstdc++.so.6(+0xb5873) [0x7fa4ea6a1873]; [ system:14031] [ 6] /usr/lib/x86_64-linux-gnu/libstdc++.so.6(+0xb596e) [0x7fa4ea6a196e]; [ system:14031] [ 7] /usr/local/bin/SU2_CFD() [0x848d97]; [ system:14031] [ 8] /usr/local/bin/SU2_CFD(_ZN12CEulerSolverC1EP9CGeometryP7CConfigt+0x895) [0x64d055]; [ system:14031] [ 9] /usr/local/bin/SU2_CFD(_Z20Solver_PreprocessingPPP7CSolverPP9CGeometryP7CConfigt+0x1e9) [0x45a299]; [ system:14031] [10] /usr/local/bin/SU2_CFD(main+0x638) [0x6d7db8]; [ system:14031] [11] /lib/x86_64-linux-gnu/libc.so.6(__libc_start_main+0xed) [0x7fa4e9b1e76d]; [ system:14031] [12] /usr/local/bin/SU2_CFD() [0x459049]; [ system:14031] **\* End of error message ***; [ system:14029] [ 3] /usr/lib/x86_64-linux-gnu/libstdc++.so.6(_ZN9__gnu_cxx27__verbose_terminate_handlerEv+0x11d) [0x7f749670169d]; [ system:14029] [ 4] /usr/lib/x86_64-linux-gnu/libstdc++.so.6(+0xb5846) [0x7f74966ff846]; [ system:14029] [ 5] /usr/lib/x86_64-linux-gnu/libstdc++.so.6(+0xb5873) [0x7f74966ff873]; [ system:14029] [ 6] /usr/lib/x86_64-linux-gnu/libstdc++.so.6(+0xb596e) [0x7f74966ff96e]; [ system:14029] [ 7] /usr/local/bin/SU2_CFD() [0x848d97]; [ system:14029] [ 8] /usr/local/bin/SU2_CFD(_ZN12CEulerSolverC1EP9CGeometryP7CConfigt+0x895) [0x64d055]; [ system:14029] [ 9] /usr/local/bin/SU2_CFD(_Z20Solver_PreprocessingPPP7CSolverPP9CGeometryP7CConfigt+0x1e9) [0x45a299]; [ system:14029] [10] /usr/local/bin/SU2_CFD(main+0x638) [0x6d7db8]; [ system:14029] [11] /lib/x86_64-linux-gnu/libc.so.6(__libc_start_main+0xed) [0x7f7495b7c76d]; [ system:14029] [12] /usr/local/bin/SU2_CFD() [0x459049]; ## [ system:14029] **\* End of error message **,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/23:5627,message,message,5627,https://su2code.github.io,https://github.com/su2code/SU2/issues/23,1,['message'],['message']
Integrability,3rd try at fixing hdf5 + python wrapper problems,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1636:32,wrap,wrapper,32,https://su2code.github.io,https://github.com/su2code/SU2/pull/1636,1,['wrap'],['wrapper']
Integrability,"4494](url):. > The _amgio extension should be built by default. I haven't had any issues on any of the machines I've built on, so I appreciate the feedback.; > ; > Just curious, are you running with python >=3.7? The shebang in all the SU2 python scripts; > ; > ```; > #!/usr/bin/env python; > ```; > ; > uses whatever python is set to in your environment variables, but pyamg/_amgio will only build/run with python >=3.7. Could you also check if the _amgio extension was installed in your site-packages (probably located in ~/.local/lib/python3.x/site-packages)?; > ; > If it didn't build/install, you could go into extensions/AMGIO/su2io and run; > ; > ```; > python3 setup.py build_ext && python3 setup.py install; > ```; > ; > If it did build/install, try the command; > ; > ```; > python3 $SU2_RUN/mesh_adaptation_amg.py -f invCyl.cfg -n 6; > ```. After doing `python3 setup.py build_ext && python3 setup.py install`, I encountered the following error:. > ```; > (temp_su5) takashi279@turing1:/dfs/user/takashi279/plasma/design/multiscale_adap3/SU2/externals/AMGIO/su2io$ python3 setup.py build_ext && python3 setup.py install; > running build_ext; > running install; > /dfs/user/takashi279/miniconda3/envs/temp_su5/lib/python3.7/site-packages/setuptools/command/install.py:37: SetuptoolsDeprecationWarning: setup.py install is deprecated. Use build and pip and other standards-based tools.; > setuptools.SetuptoolsDeprecationWarning,; > /dfs/user/takashi279/miniconda3/envs/temp_su5/lib/python3.7/site-packages/setuptools/command/easy_install.py:147: EasyInstallDeprecationWarning: easy_install command is deprecated. Use build and pip and other standards-based tools.; > EasyInstallDeprecationWarning,; > running bdist_egg; > error: Invalid distribution name or version syntax: -amgio-2.1.1; > ```. Am I missing any dependencies? I previously compiled SU2 feature_adap branch without issues, and have already installed pyAMG. My python version is 3.7.12.; Any help would be really appreciated.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1699:2805,depend,dependencies,2805,https://su2code.github.io,https://github.com/su2code/SU2/issues/1699,1,['depend'],['dependencies']
Integrability,"457, in con_cieq; cons = project.con_cieq(x); File ""/usr/local/bin/SU2/opt/project.py"", line 257, in con_cieq; return self._eval(konfig, func,dvs); File ""/usr/local/bin/SU2/opt/project.py"", line 206, in _eval; vals = design._eval(func,*args); File ""/usr/local/bin/SU2/eval/design.py"", line 147, in _eval; vals = eval_func(*inputs); File ""/usr/local/bin/SU2/eval/design.py"", line 520, in con_cieq; func = su2func(this_con,config,state); File ""/usr/local/bin/SU2/eval/functions.py"", line 92, in function; aerodynamics( config, state ); File ""/usr/local/bin/SU2/eval/functions.py"", line 274, in aerodynamics; info = su2run.direct(config); File ""/usr/local/bin/SU2/run/direct.py"", line 139, in direct; su2merge(konfig); File ""/usr/local/bin/SU2/run/merge.py"", line 81, in merge; merge_solution(konfig); File ""/usr/local/bin/SU2/run/merge.py"", line 107, in merge_solution; SU2_SOL( config ); File ""/usr/local/bin/SU2/run/interface.py"", line 207, in SOL; run_command( the_Command ); File ""/usr/local/bin/SU2/run/interface.py"", line 270, in run_command; raise exception(message); RuntimeError: Path = /home/xxx/SU2-7.3.0/xxxx/DESIGNS/DSN_001/DIRECT/,; Command = mpirun -n 4 /home/xxx/SU2-7.3.0/SU2/bin/SU2_SOL config_SOL.cfg; SU2 process returned error '139'; --------------------------------------------------------------------------; Primary job terminated normally, but 1 process returned; a non-zero exit code. Per user-direction, the job has been aborted.; --------------------------------------------------------------------------; --------------------------------------------------------------------------; mpirun noticed that process rank 1 with PID 0 on node LAPTOP-DDQOFLU8 exited on signal 11 (Segmentation fault).; --------------------------------------------------------------------------; ```. The parallel computing for the case of SU2_CFD only can work well.; but I cannot find what the error '139' refers to. I will be very appreciated if I could get some feedback on this issue. Thank you!",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1666:4962,message,message,4962,https://su2code.github.io,https://github.com/su2code/SU2/issues/1666,1,['message'],['message']
Integrability,"5"">compare view</a></li>; </ul>; </details>; <br />. [![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=actions/setup-python&package-manager=github_actions&previous-version=4&new-version=5)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores). Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`. [//]: # (dependabot-automerge-start); [//]: # (dependabot-automerge-end). ---. <details>; <summary>Dependabot commands and options</summary>; <br />. You can trigger Dependabot actions by commenting on this PR:; - `@dependabot rebase` will rebase this PR; - `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it; - `@dependabot merge` will merge this PR after your CI passes on it; - `@dependabot squash and merge` will squash and merge this PR after your CI passes on it; - `@dependabot cancel merge` will cancel a previously requested merge and block automerging; - `@dependabot reopen` will reopen this PR if it is closed; - `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually; - `@dependabot show <dependency name> ignore conditions` will show all of the ignore conditions of the specified dependency; - `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself); - `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself); - `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself). ",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2233:8067,Depend,Dependabot,8067,https://su2code.github.io,https://github.com/su2code/SU2/pull/2233,9,"['Depend', 'depend']","['Dependabot', 'dependabot']"
Integrability,"50c""><code>f427802</code></a> Merge pull request <a href=""https://github-redirect.dependabot.com/actions/cache/issues/887"">#887</a> from actions/pdotl-version-patch</li>; <li><a href=""https://github.com/actions/cache/commit/9916fe1701f098b95a05e7c2bacee7c5a022c553""><code>9916fe1</code></a> Update cache version in licences</li>; <li><a href=""https://github.com/actions/cache/commit/318935ef66557a1906560e4e7d0069344a4b31bf""><code>318935e</code></a> Update README and RELEASES</li>; <li>Additional commits viewable in <a href=""https://github.com/actions/cache/compare/v1...v3"">compare view</a></li>; </ul>; </details>; <br />. [![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=actions/cache&package-manager=github_actions&previous-version=1&new-version=3)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores). Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`. [//]: # (dependabot-automerge-start); [//]: # (dependabot-automerge-end). ---. <details>; <summary>Dependabot commands and options</summary>; <br />. You can trigger Dependabot actions by commenting on this PR:; - `@dependabot rebase` will rebase this PR; - `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it; - `@dependabot merge` will merge this PR after your CI passes on it; - `@dependabot squash and merge` will squash and merge this PR after your CI passes on it; - `@dependabot cancel merge` will cancel a previously requested merge and block automerging; - `@dependabot reopen` will reopen this PR if it is closed; - `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually; - `@dependabot ignore this major version` will close this PR and stop Dependabot ",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1755:9372,Depend,Dependabot,9372,https://su2code.github.io,https://github.com/su2code/SU2/pull/1755,1,['Depend'],['Dependabot']
Integrability,"53.2; Source dir: /home/slimshady/UserPackages/SU2_NEW; Build dir: /home/slimshady/UserPackages/SU2_NEW/build; Build type: native build; Project name: SU2; Project version: 7.0.4 ""Blackbird""; C compiler for the host machine: cc (gcc 9.2.1 ""cc (Arch Linux 9.2.1+20200130-2) 9.2.1 20200130""); C linker for the host machine: cc ld.bfd 2.34; C++ compiler for the host machine: c++ (gcc 9.2.1 ""c++ (Arch Linux 9.2.1+20200130-2) 9.2.1 20200130""); C++ linker for the host machine: c++ ld.bfd 2.34; Host machine cpu family: x86_64; Host machine cpu: x86_64; Program python3 found: YES (/usr/bin/python); Found pkg-config: /usr/bin/pkg-config (1.6.3); Dependency python found: YES (pkgconfig); Run-time dependency MPI for c found: YES 4.0.2; Run-time dependency MPI for cpp found: YES 4.0.2; Message: Boost sources found.; Run-time dependency openblas found: YES 0.3.8; Program swig found: YES (/usr/bin/swig); Message: Using mpi4py from /home/slimshady/.local/lib/python3.8/site-packages/mpi4py/include; Run-time dependency python3 found: YES 3.8; Program install.sh found: YES (/bin/sh /home/slimshady/UserPackages/SU2_NEW/SU2_PY/pySU2/install.sh); Message: -------------------------------------------------------------------------; | ___ _ _ ___ |; | / __| | | |_ ) Release 7.0.4 ""Blackbird"" |; | \__ \ |_| |/ / |; | |___/\___//___| Meson Configuration Summary |; | |; -------------------------------------------------------------------------; ; Option Value; ---------------------; TecIO: true; CGNS: true; AD (reverse): true; AD (forward): true; Python Wrapper: true; Intel-MKL: false; OpenBlas: true; PaStiX: false. Please be sure to add the $SU2_HOME and $SU2_RUN environment variables,; and update your $PATH (and $PYTHONPATH if applicable) with $SU2_RUN. Based on the input to this configuration, add these lines to your .bashrc file:. export SU2_RUN=/home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; export SU2_HOME=/home/slimshady/UserPackages/SU2_NEW; export PATH=$PATH:$SU2_RUN; export PYTHONPATH=",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/991#issuecomment-631986633:1744,depend,dependency,1744,https://su2code.github.io,https://github.com/su2code/SU2/issues/991#issuecomment-631986633,1,['depend'],['dependency']
Integrability,"5</a> from actions/yacaovsnc/update_examples</li>; <li><a href=""https://github.com/actions/cache/commit/dc88ab52d723eb4cc3a0af43f6bee825c4742280""><code>dc88ab5</code></a> Update examples</li>; <li><a href=""https://github.com/actions/cache/commit/1d78355196cc3f88914ca91332c58d431a78513d""><code>1d78355</code></a> Merge pull request <a href=""https://redirect.github.com/actions/cache/issues/1304"">#1304</a> from actions/yacaovsnc/update_readme</li>; <li><a href=""https://github.com/actions/cache/commit/c36458f13bdfaeff50a47b181b7368ae66b21f28""><code>c36458f</code></a> Update README.md</li>; <li><a href=""https://github.com/actions/cache/commit/13aacd865c20de90d75de3b17ebe84f7a17d57d2""><code>13aacd8</code></a> Merge pull request <a href=""https://redirect.github.com/actions/cache/issues/1242"">#1242</a> from to-s/main</li>; <li>Additional commits viewable in <a href=""https://github.com/actions/cache/compare/v3...v4"">compare view</a></li>; </ul>; </details>; <br />. [![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=actions/cache&package-manager=github_actions&previous-version=3&new-version=4)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores). Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`. [//]: # (dependabot-automerge-start); [//]: # (dependabot-automerge-end). ---. <details>; <summary>Dependabot commands and options</summary>; <br />. You can trigger Dependabot actions by commenting on this PR:; - `@dependabot rebase` will rebase this PR; - `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it; - `@dependabot merge` will merge this PR after your CI passes on it; - `@dependabot squash and merge` will squash and merge this PR after your CI passes on it; - `@dependabot cancel ",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2232:9819,Depend,Dependabot,9819,https://su2code.github.io,https://github.com/su2code/SU2/pull/2232,2,"['Depend', 'depend']","['Dependabot', 'dependabot-badges']"
Integrability,"6(gsignal+0x10f)[0x7fb93c1507ff]; [super:1134138] [ 2] /lib64/libc.so.6(abort+0x127)[0x7fb93c13ac35]; [super:1134138] [ 3] /lib64/libc.so.6(+0x21b09)[0x7fb93c13ab09]; [super:1134138] [ 4] /lib64/libc.so.6(+0x2fde6)[0x7fb93c148de6]; [super:1134138] [ 5] /opt/su2/SU2v7_adap/bin/SU2_CFD[0x1a9be03]; [super:1134138] [ 6] /opt/su2/SU2v7_adap/bin/SU2_CFD[0x1a94e76]; [super:1134138] [ 7] /opt/su2/SU2v7_adap/bin/SU2_CFD[0x1a9590d]; [super:1134138] [ 8] /opt/su2/SU2v7_adap/bin/SU2_CFD[0xabb1bb]; [super:1134138] [ 9] /opt/su2/SU2v7_adap/bin/SU2_CFD[0x7ddf6b]; [super:1134138] [10] /opt/su2/SU2v7_adap/bin/SU2_CFD[0x7ded07]; [super:1134138] [11] /opt/su2/SU2v7_adap/bin/SU2_CFD[0x7df356]; [super:1134138] [12] /opt/su2/SU2v7_adap/bin/SU2_CFD[0x7e445f]; [super:1134138] [13] /opt/su2/SU2v7_adap/bin/SU2_CFD[0x45ba61]; [super:1134138] [14] /lib64/libc.so.6(__libc_start_main+0xf3)[0x7fb93c13c7b3]; [super:1134138] [15] /opt/su2/SU2v7_adap/bin/SU2_CFD[0x47216e]; [super:1134138] *** End of error message ***; --------------------------------------------------------------------------; Primary job terminated normally, but 1 process returned; a non-zero exit code. Per user-direction, the job has been aborted.; --------------------------------------------------------------------------; --------------------------------------------------------------------------; mpirun noticed that process rank 38 with PID 0 on node super exited on signal 6 (Aborted).; --------------------------------------------------------------------------; ```. Sometimes it hangs to the `UCX ERROR` lines straight after `Building the graph adjacency structure.` in Geometry Preprocessing and other times, it seems to run fine for the first batch of iterations until it hits the first solution file writing iteration (as set by `OUTPUT_WRT_FREQ`) show in the above output snip. Do you have any hints on how to debug this or what might be causing this? Thanks. **To Reproduce**; I've attached the mesh and config file in [this link](http",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1156:2675,message,message,2675,https://su2code.github.io,https://github.com/su2code/SU2/issues/1156,1,['message'],['message']
Integrability,"6150b47d41011c034b762053acaf6f""><code>6dd49bf</code></a> licensed only artifact</li>; <li><a href=""https://github.com/actions/download-artifact/commit/f71c0e3da3bb6b4fcc53196b9ac75ee981db5bc6""><code>f71c0e3</code></a> Revert &quot;licensed&quot;</li>; <li><a href=""https://github.com/actions/download-artifact/commit/7c63dfde29f42bb9cb0f61b67e54c91106a6586e""><code>7c63dfd</code></a> licensed</li>; <li><a href=""https://github.com/actions/download-artifact/commit/67d37cd34678091933f0a88cd1bb026171ea20d2""><code>67d37cd</code></a> Update toolkit</li>; <li><a href=""https://github.com/actions/download-artifact/commit/348754975ef0295bfa2c111cba996120cfdf8a5d""><code>3487549</code></a> Update release-new-action-version.yml (<a href=""https://redirect.github.com/actions/download-artifact/issues/292"">#292</a>)</li>; <li>Additional commits viewable in <a href=""https://github.com/actions/download-artifact/compare/v3...v4"">compare view</a></li>; </ul>; </details>; <br />. [![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=actions/download-artifact&package-manager=github_actions&previous-version=3&new-version=4)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores). Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`. [//]: # (dependabot-automerge-start); [//]: # (dependabot-automerge-end). ---. <details>; <summary>Dependabot commands and options</summary>; <br />. You can trigger Dependabot actions by commenting on this PR:; - `@dependabot rebase` will rebase this PR; - `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it; - `@dependabot merge` will merge this PR after your CI passes on it; - `@dependabot squash and merge` will squash and merge this PR after your CI passes on it; - `@depend",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2230:4758,Depend,Dependabot,4758,https://su2code.github.io,https://github.com/su2code/SU2/pull/2230,2,"['Depend', 'depend']","['Dependabot', 'dependabot-badges']"
Integrability,"6e""><code>7c63dfd</code></a> licensed</li>; <li><a href=""https://github.com/actions/download-artifact/commit/67d37cd34678091933f0a88cd1bb026171ea20d2""><code>67d37cd</code></a> Update toolkit</li>; <li><a href=""https://github.com/actions/download-artifact/commit/348754975ef0295bfa2c111cba996120cfdf8a5d""><code>3487549</code></a> Update release-new-action-version.yml (<a href=""https://redirect.github.com/actions/download-artifact/issues/292"">#292</a>)</li>; <li>Additional commits viewable in <a href=""https://github.com/actions/download-artifact/compare/v3...v4"">compare view</a></li>; </ul>; </details>; <br />. [![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=actions/download-artifact&package-manager=github_actions&previous-version=3&new-version=4)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores). Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`. [//]: # (dependabot-automerge-start); [//]: # (dependabot-automerge-end). ---. <details>; <summary>Dependabot commands and options</summary>; <br />. You can trigger Dependabot actions by commenting on this PR:; - `@dependabot rebase` will rebase this PR; - `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it; - `@dependabot merge` will merge this PR after your CI passes on it; - `@dependabot squash and merge` will squash and merge this PR after your CI passes on it; - `@dependabot cancel merge` will cancel a previously requested merge and block automerging; - `@dependabot reopen` will reopen this PR if it is closed; - `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually; - `@dependabot show <dependency name> ignore conditions` will show all of the ign",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2230:5096,Depend,Dependabot,5096,https://su2code.github.io,https://github.com/su2code/SU2/pull/2230,1,['Depend'],['Dependabot']
Integrability,"7); Listing './FSI/io'...; Compiling './FSI/io/FSI_config.py'...; *** Sorry: TabError: inconsistent use of tabs and spaces in indentation (FSI_config.py, line 61); Listing './FSI/util'...; Listing './SU2'...; Listing './SU2/eval'...; Listing './SU2/io'...; Listing './SU2/mesh'...; Listing './SU2/opt'...; Listing './SU2/run'...; Listing './SU2/util'...; Compiling './SU2/util/filter_adjoint.py'...; *** File ""./SU2/util/filter_adjoint.py"", line 182; raise Exception, 'unknown filter type'; ^; SyntaxError: invalid syntax. Compiling './compute_uncertainty.py'...; *** File ""./compute_uncertainty.py"", line 69; print ""\n\n =================== Performing "" + str(comp) + "" Component Perturbation =================== \n\n""; ^; SyntaxError: invalid syntax. Compiling './fsi_computation.py'...; *** Sorry: TabError: inconsistent use of tabs and spaces in indentation (fsi_computation.py, line 77); Listing './pySU2'...; ```; After fixing them and running `python -m compileall .` again the next set of similar error messages appears. This patch fix such `TabError`, `SyntaxError` (for `raise` and `print` functions), replace some indent tabs with spaces (generally with 8 spaces) before comments, remove trailing spaces where needed. Please fix this small issue as resulting patch to fix it for distributive build script is rather huge (~ 100 Kb). Many changes are in `SU2_PY/FSI/FSIInterface.py` and the `Split` mode of github change preview is more suitable to compare and to recheck the correctness of new indentation (or via Meld application). ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [ ] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/983:2026,message,messages,2026,https://su2code.github.io,https://github.com/su2code/SU2/pull/983,1,['message'],['messages']
Integrability,"7ab1dc238d""><code>4d6d2bf</code></a> Merge remote-tracking branch 'origin/releases/v3' into mergeback/v3.24.5-to-m...</li>; <li><a href=""https://github.com/github/codeql-action/commit/633baf86c326c07635ec576d7f97ae3f76871e4c""><code>633baf8</code></a> Merge pull request <a href=""https://redirect.github.com/github/codeql-action/issues/2165"">#2165</a> from github/nickfyson/fix-3.24.5-changelog</li>; <li>See full diff in <a href=""https://github.com/github/codeql-action/compare/v2...v3"">compare view</a></li>; </ul>; </details>; <br />. [![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=github/codeql-action&package-manager=github_actions&previous-version=2&new-version=3)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores). Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`. [//]: # (dependabot-automerge-start); [//]: # (dependabot-automerge-end). ---. <details>; <summary>Dependabot commands and options</summary>; <br />. You can trigger Dependabot actions by commenting on this PR:; - `@dependabot rebase` will rebase this PR; - `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it; - `@dependabot merge` will merge this PR after your CI passes on it; - `@dependabot squash and merge` will squash and merge this PR after your CI passes on it; - `@dependabot cancel merge` will cancel a previously requested merge and block automerging; - `@dependabot reopen` will reopen this PR if it is closed; - `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually; - `@dependabot show <dependency name> ignore conditions` will show all of the ignore conditions of the specified dependency; - `@dependabot ignore this major versio",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2229:15764,depend,dependabot,15764,https://su2code.github.io,https://github.com/su2code/SU2/pull/2229,1,['depend'],['dependabot']
Integrability,"7ccbc""><code>72e8a5e</code></a> Merge pull request <a href=""https://github-redirect.dependabot.com/actions/upload-release-asset/issues/5"">#5</a> from cesperanc/documentation-update</li>; <li><a href=""https://github.com/actions/upload-release-asset/commit/bf2a7fbecfaaaa29f7819c650ad302e52f68238e""><code>bf2a7fb</code></a> Update example to use the fixed version</li>; <li>See full diff in <a href=""https://github.com/actions/upload-release-asset/compare/v1.0.1...v1.0.2"">compare view</a></li>; </ul>; </details>; <br />. [![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=actions/upload-release-asset&package-manager=github_actions&previous-version=1.0.1&new-version=1.0.2)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores). Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`. [//]: # (dependabot-automerge-start); [//]: # (dependabot-automerge-end). ---. <details>; <summary>Dependabot commands and options</summary>; <br />. You can trigger Dependabot actions by commenting on this PR:; - `@dependabot rebase` will rebase this PR; - `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it; - `@dependabot merge` will merge this PR after your CI passes on it; - `@dependabot squash and merge` will squash and merge this PR after your CI passes on it; - `@dependabot cancel merge` will cancel a previously requested merge and block automerging; - `@dependabot reopen` will reopen this PR if it is closed; - `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually; - `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1737:2781,depend,dependabot,2781,https://su2code.github.io,https://github.com/su2code/SU2/pull/1737,3,['depend'],['dependabot']
Integrability,7d15425]; [ system:14030] [ 2] /lib/x86_64-linux-gnu/libc.so.6(abort+0x17b) [0x7f13a7d18b8b]; [ system:14030] [ 3] /usr/lib/x86_64-linux-gnu/libstdc++.so.6(_ZN9__gnu_cxx27__verbose_terminate_handlerEv+0x11d) [0x7f13a888569d]; [ system:14030] [ 4] /usr/lib/x86_64-linux-gnu/libstdc++.so.6(+0xb5846) [0x7f13a8883846]; [ system:14030] [ 5] /usr/lib/x86_64-linux-gnu/libstdc++.so.6(+0xb5873) [0x7f13a8883873]; [ system:14030] [ 6] /usr/lib/x86_64-linux-gnu/libstdc++.so.6(+0xb596e) [0x7f13a888396e]; [ system:14030] [ 7] /usr/local/bin/SU2_CFD() [0x848d97]; [ system:14030] [ 8] /usr/local/bin/SU2_CFD(_ZN12CEulerSolverC1EP9CGeometryP7CConfigt+0x895) [0x64d055]; [ system:14030] [ 9] /usr/local/bin/SU2_CFD(_Z20Solver_PreprocessingPPP7CSolverPP9CGeometryP7CConfigt+0x1e9) [0x45a299]; [ system:14030] [10] /usr/local/bin/SU2_CFD(main+0x638) [0x6d7db8]; [ system:14030] [11] /lib/x86_64-linux-gnu/libc.so.6(__libc_start_main+0xed) [0x7f13a7d0076d]; [ system:14030] [12] /usr/local/bin/SU2_CFD() [0x459049]; [ system:14030] **\* End of error message ***; [ system:14031] [ 0] /lib/x86_64-linux-gnu/libpthread.so.0(+0xfcb0) [0x7fa4e9ecccb0]; [ system:14031] [ 1] /lib/x86_64-linux-gnu/libc.so.6(gsignal+0x35) [0x7fa4e9b33425]; [ system:14031] [ 2] /lib/x86_64-linux-gnu/libc.so.6(abort+0x17b) [0x7fa4e9b36b8b]; [ system:14031] [ 3] /usr/lib/x86_64-linux-gnu/libstdc++.so.6(_ZN9__gnu_cxx27__verbose_terminate_handlerEv+0x11d) [0x7fa4ea6a369d]; [ system:14031] [ 4] /usr/lib/x86_64-linux-gnu/libstdc++.so.6(+0xb5846) [0x7fa4ea6a1846]; [ system:14031] [ 5] /usr/lib/x86_64-linux-gnu/libstdc++.so.6(+0xb5873) [0x7fa4ea6a1873]; [ system:14031] [ 6] /usr/lib/x86_64-linux-gnu/libstdc++.so.6(+0xb596e) [0x7fa4ea6a196e]; [ system:14031] [ 7] /usr/local/bin/SU2_CFD() [0x848d97]; [ system:14031] [ 8] /usr/local/bin/SU2_CFD(_ZN12CEulerSolverC1EP9CGeometryP7CConfigt+0x895) [0x64d055]; [ system:14031] [ 9] /usr/local/bin/SU2_CFD(_Z20Solver_PreprocessingPPP7CSolverPP9CGeometryP7CConfigt+0x1e9) [0x45a299]; [ system:140,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/23:4418,message,message,4418,https://su2code.github.io,https://github.com/su2code/SU2/issues/23,1,['message'],['message']
Integrability,"7d37cd</code></a> Update toolkit</li>; <li><a href=""https://github.com/actions/download-artifact/commit/348754975ef0295bfa2c111cba996120cfdf8a5d""><code>3487549</code></a> Update release-new-action-version.yml (<a href=""https://redirect.github.com/actions/download-artifact/issues/292"">#292</a>)</li>; <li>Additional commits viewable in <a href=""https://github.com/actions/download-artifact/compare/v3...v4"">compare view</a></li>; </ul>; </details>; <br />. [![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=actions/download-artifact&package-manager=github_actions&previous-version=3&new-version=4)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores). Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`. [//]: # (dependabot-automerge-start); [//]: # (dependabot-automerge-end). ---. <details>; <summary>Dependabot commands and options</summary>; <br />. You can trigger Dependabot actions by commenting on this PR:; - `@dependabot rebase` will rebase this PR; - `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it; - `@dependabot merge` will merge this PR after your CI passes on it; - `@dependabot squash and merge` will squash and merge this PR after your CI passes on it; - `@dependabot cancel merge` will cancel a previously requested merge and block automerging; - `@dependabot reopen` will reopen this PR if it is closed; - `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually; - `@dependabot show <dependency name> ignore conditions` will show all of the ignore conditions of the specified dependency; - `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2230:5271,depend,dependabot-automerge-start,5271,https://su2code.github.io,https://github.com/su2code/SU2/pull/2230,2,['depend'],"['dependabot-automerge-end', 'dependabot-automerge-start']"
Integrability,"88a68affcd47de6bd6744193223a6""><code>33a923d</code></a> Added release information</li>; <li><a href=""https://github.com/actions/cache/commit/a404368986bb049d406166fc20afc01d032ad8a2""><code>a404368</code></a> Updated actions/cache version to 3.0.2</li>; <li><a href=""https://github.com/actions/cache/commit/f4278025ab0f432ce369118909e46deec636f50c""><code>f427802</code></a> Merge pull request <a href=""https://github-redirect.dependabot.com/actions/cache/issues/887"">#887</a> from actions/pdotl-version-patch</li>; <li><a href=""https://github.com/actions/cache/commit/9916fe1701f098b95a05e7c2bacee7c5a022c553""><code>9916fe1</code></a> Update cache version in licences</li>; <li><a href=""https://github.com/actions/cache/commit/318935ef66557a1906560e4e7d0069344a4b31bf""><code>318935e</code></a> Update README and RELEASES</li>; <li>Additional commits viewable in <a href=""https://github.com/actions/cache/compare/v1...v3"">compare view</a></li>; </ul>; </details>; <br />. [![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=actions/cache&package-manager=github_actions&previous-version=1&new-version=3)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores). Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`. [//]: # (dependabot-automerge-start); [//]: # (dependabot-automerge-end). ---. <details>; <summary>Dependabot commands and options</summary>; <br />. You can trigger Dependabot actions by commenting on this PR:; - `@dependabot rebase` will rebase this PR; - `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it; - `@dependabot merge` will merge this PR after your CI passes on it; - `@dependabot squash and merge` will squash and merge this PR after your CI passes on it; - `@dependabot cancel ",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1755:9046,Depend,Dependabot,9046,https://su2code.github.io,https://github.com/su2code/SU2/pull/1755,2,"['Depend', 'depend']","['Dependabot', 'dependabot-badges']"
Integrability,"9236718abc4697a59634ef534cf""><code>c53f077</code></a> Fix link to LICENSE</li>; <li><a href=""https://github.com/actions/upload-release-asset/commit/72e8a5ef036620fb7afff8bbb8f9e78910c7ccbc""><code>72e8a5e</code></a> Merge pull request <a href=""https://github-redirect.dependabot.com/actions/upload-release-asset/issues/5"">#5</a> from cesperanc/documentation-update</li>; <li><a href=""https://github.com/actions/upload-release-asset/commit/bf2a7fbecfaaaa29f7819c650ad302e52f68238e""><code>bf2a7fb</code></a> Update example to use the fixed version</li>; <li>See full diff in <a href=""https://github.com/actions/upload-release-asset/compare/v1.0.1...v1.0.2"">compare view</a></li>; </ul>; </details>; <br />. [![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=actions/upload-release-asset&package-manager=github_actions&previous-version=1.0.1&new-version=1.0.2)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores). Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`. [//]: # (dependabot-automerge-start); [//]: # (dependabot-automerge-end). ---. <details>; <summary>Dependabot commands and options</summary>; <br />. You can trigger Dependabot actions by commenting on this PR:; - `@dependabot rebase` will rebase this PR; - `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it; - `@dependabot merge` will merge this PR after your CI passes on it; - `@dependabot squash and merge` will squash and merge this PR after your CI passes on it; - `@dependabot cancel merge` will cancel a previously requested merge and block automerging; - `@dependabot reopen` will reopen this PR if it is closed; - `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by c",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1737:2578,depend,dependabot-security-updates,2578,https://su2code.github.io,https://github.com/su2code/SU2/pull/1737,3,['depend'],['dependabot-security-updates']
Integrability,"986961d0423ba9a593efb490a2960eb65f43b""><code>4d39869</code></a> recompile with correct ncc version</li>; <li><a href=""https://github.com/actions/upload-artifact/commit/2e0d362ec5cf81e334dda822c49c96dcd4b7df2c""><code>2e0d362</code></a> bump <code>@​actions/artifact</code> to 1.1.0</li>; <li><a href=""https://github.com/actions/upload-artifact/commit/09a5d6a283da3e7c9f3253a5d4cdab2347712a66""><code>09a5d6a</code></a> Merge pull request <a href=""https://github-redirect.dependabot.com/actions/upload-artifact/issues/320"">#320</a> from actions/dependabot/npm_and_yarn/ansi-regex-4.1.1</li>; <li><a href=""https://github.com/actions/upload-artifact/commit/189315d9106f43a2a8eb60836608bb96b1f69d77""><code>189315d</code></a> Bump ansi-regex from 4.1.0 to 4.1.1</li>; <li><a href=""https://github.com/actions/upload-artifact/commit/d159c2d80bf32e77611286e4d71bfe6d15208d88""><code>d159c2d</code></a> Merge pull request <a href=""https://github-redirect.dependabot.com/actions/upload-artifact/issues/297"">#297</a> from actions/dependabot/npm_and_yarn/ajv-6.12.6</li>; <li><a href=""https://github.com/actions/upload-artifact/commit/c26a7ba4b5dbaecea906fec3b7d2c0c86f1ccaba""><code>c26a7ba</code></a> Bump ajv from 6.11.0 to 6.12.6</li>; <li><a href=""https://github.com/actions/upload-artifact/commit/6ed6c729229a623bcb1fdd75903dc6e436b3d0a7""><code>6ed6c72</code></a> Merge pull request <a href=""https://github-redirect.dependabot.com/actions/upload-artifact/issues/303"">#303</a> from actions/dependabot/npm_and_yarn/yargs-parser-13.1.2</li>; <li><a href=""https://github.com/actions/upload-artifact/commit/2aeee267b2cb1f938c861a763b9770ee6e921dc3""><code>2aeee26</code></a> Bump yargs-parser from 13.1.1 to 13.1.2</li>; <li>Additional commits viewable in <a href=""https://github.com/actions/upload-artifact/compare/v1...v3"">compare view</a></li>; </ul>; </details>; <br />. [![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=actions/upload-artifact",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1756:4004,depend,dependabot,4004,https://su2code.github.io,https://github.com/su2code/SU2/pull/1756,1,['depend'],['dependabot']
Integrability,"9\python.exe); Pkg-config binary for MachineChoice.HOST is not cached.; None of 'PKG_CONFIG' are defined in the environment, not changing global flags.; Pkg-config binary missing from cross or native file, or env var undefined.; Trying a default Pkg-config fallback at pkg-config; Trying pkg-config binary pkg-config for machine MachineChoice.HOST at ['D:\\Programme\\pkg-config-lite-0.28-1_bin-win32\\pkg-config-lite-0.28-1\\bin\\pkg-config.EXE']; Found pkg-config: D:\Programme\pkg-config-lite-0.28-1_bin-win32\pkg-config-lite-0.28-1\bin\pkg-config.EXE (0.28); Determining dependency 'ompi-c' with pkg-config executable 'D:\\Programme\\pkg-config-lite-0.28-1_bin-win32\\pkg-config-lite-0.28-1\\bin\\pkg-config.EXE'; PKG_CONFIG_PATH: ; Called `D:\Programme\pkg-config-lite-0.28-1_bin-win32\pkg-config-lite-0.28-1\bin\pkg-config.EXE --modversion ompi-c` -> 1; ; mpicc binary missing from cross or native file, or env var undefined.; Trying a default mpicc fallback at mpicc; mpicc found: NO; Run-time dependency MPI for c found: YES; Pkg-config binary for MachineChoice.HOST is cached.; Determining dependency 'ompi-cxx' with pkg-config executable 'D:\\Programme\\pkg-config-lite-0.28-1_bin-win32\\pkg-config-lite-0.28-1\\bin\\pkg-config.EXE'; PKG_CONFIG_PATH: ; Called `D:\Programme\pkg-config-lite-0.28-1_bin-win32\pkg-config-lite-0.28-1\bin\pkg-config.EXE --modversion ompi-cxx` -> 1; ; mpic++ binary missing from cross or native file, or env var undefined.; Trying a default mpic++ fallback at mpic++; Trying a default mpic++ fallback at mpicxx; Trying a default mpic++ fallback at mpiCC; mpic++ found: NO; Run-time dependency MPI for cpp found: NO (tried pkgconfig and config-tool); Running command: C:\Users\KleineKampfzwergin\AppData\Local\Programs\Python\Python39\python.exe D:/Programme/SU2-7.1.1/meson_scripts/check_dir.py boost; --- stdout ---; ; --- stderr ---; ; ; Message: Boost sources found.; Program swig found: YES (D:\Programme\swigwin-4.0.2\swig.EXE); Running command: C:\Users\Kle",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/888#issuecomment-821840286:6298,depend,dependency,6298,https://su2code.github.io,https://github.com/su2code/SU2/issues/888#issuecomment-821840286,1,['depend'],['dependency']
Integrability,"9b1ca249b3f/SU2_CFD/src/interfaces/CInterface.cpp#L314) piece of code. I presume the issue is the access `SpanValuesDonor[kSpan + 1]` in the case that `kSpan == nSpanDonor - 1` so that `kSpan` references the last array entry already. Below is a stripped-down version of the corresponding code.; ```; ...; for (jSpan = 0; jSpan < nSpanDonor; jSpan++) {; ...; if (...); kSpan = jSpan;; ...; }; ... SpanValuesDonor[kSpan + 1] ...; ```. Is someone familiar with the `CInterface` code and could make recommendations for a fix?. Below is the address sanitizer report, see also [here](https://github.com/su2code/SU2/actions/runs/8536216515/job/23386086770?pr=2246#step:7:2062). ```; ==2308==ERROR: AddressSanitizer: heap-buffer-overflow on address 0x60f0008c96a0 at pc 0x558b6435ae51 bp 0x7ffc1cebf680 sp 0x7ffc1cebf670; READ of size 8 at 0x60f0008c96a0 thread T0; #0 0x558b6435ae50 in CInterface::PreprocessAverage(CGeometry*, CGeometry*, CConfig const*, CConfig const*, unsigned short) ../SU2_CFD/src/interfaces/CInterface.cpp:314; #1 0x558b6373d23a in CDriver::PreprocessTurbomachinery(CConfig**, CGeometry****, CSolver*****, CInterface***, bool) ../SU2_CFD/src/drivers/CDriver.cpp:2725; #2 0x558b63770d76 in CDriver::CDriver(char*, unsigned short, int, bool) ../SU2_CFD/src/drivers/CDriver.cpp:250; #3 0x558b637f54c2 in CMultizoneDriver::CMultizoneDriver(char*, unsigned short, int) ../SU2_CFD/src/drivers/CMultizoneDriver.cpp:35; #4 0x558b63615b53 in main ../SU2_CFD/src/SU2_CFD.cpp:135; #5 0x7f0d8c503082 in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x24082); #6 0x558b6367005d in _start (/github/workspace/install/bin/SU2_CFD+0x63405d). 0x60f0008c96a0 is located 0 bytes to the right of 176-byte region [0x60f0008c95f0,0x60f0008c96a0); allocated by thread T0 here:; #0 0x7f0d8ed00787 in operator new[](unsigned long) ../../../../src/libsanitizer/asan/asan_new_delete.cc:107; #1 0x558b656d1590 in CPhysicalGeometry::ComputeNSpan(CConfig*, unsigned short, unsigned short, bool) ../Common/src/ge",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2246#issuecomment-2034404720:1125,interface,interfaces,1125,https://su2code.github.io,https://github.com/su2code/SU2/pull/2246#issuecomment-2034404720,1,['interface'],['interfaces']
Integrability,": 100% (6/6), done.; remote: Total 81 (delta 45), reused 46 (delta 44), pack-reused 31; Unpacking objects: 100% (81/81), done.; From https://github.com/su2code/SU2; * branch develop -> FETCH_HEAD; 0811066f4..cf91b7cf4 develop -> origin/develop; Merge made by the 'recursive' strategy.; Common/include/blas_structure.hpp | 2 +-; Common/include/matrix_structure.hpp | 2 +-; Common/src/adt_structure.cpp | 11 +-; Common/src/blas_structure.cpp | 27 ++--; Common/src/fem_geometry_structure.cpp | 2 +-; Common/src/geometry_structure.cpp | 131 ++++++++++++++-----; Common/src/matrix_structure.cpp | 14 +-; Common/src/wall_model.cpp | 4 +-; SU2_CFD/src/output_structure.cpp | 2 +-; SU2_IDE/Xcode/SU2_CFD.xcodeproj/project.pbxproj | 166 ++++++++++++------------; SU2_IDE/Xcode/SU2_DEF.xcodeproj/project.pbxproj | 144 ++++++++++++++++----; SU2_IDE/Xcode/SU2_DOT.xcodeproj/project.pbxproj | 130 +++++++++++--------; SU2_IDE/Xcode/SU2_GEO.xcodeproj/project.pbxproj | 74 ++++++++++-; SU2_IDE/Xcode/SU2_MSH.xcodeproj/project.pbxproj | 124 ++++++++++++++++--; SU2_IDE/Xcode/SU2_SOL.xcodeproj/project.pbxproj | 62 +++++----; TestCases/parallel_regression.py | 26 ++--; TestCases/parallel_regression_AD.py | 4 +-; TestCases/serial_regression.py | 24 ++--; TestCases/serial_regression_AD.py | 2 +-; 19 files changed, 659 insertions(+), 292 deletions(-); Jairos-Mac-mini:SU2 jaspe$ git push origin feature_force_read_target_on_AD; To https://github.com/su2code/SU2.git; ! [rejected] feature_force_read_target_on_AD -> feature_force_read_target_on_AD (fetch first); error: failed to push some refs to 'https://github.com/su2code/SU2.git'; hint: Updates were rejected because the remote contains work that you do; hint: not have locally. This is usually caused by another repository pushing; hint: to the same ref. You may want to first integrate the remote changes; hint: (e.g., 'git pull ...') before pushing again.; hint: See the 'Note about fast-forwards' in 'git push --help' for details.; Jairos-Mac-mini:SU2 jaspe$",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/600#issuecomment-438029731:3443,integrat,integrate,3443,https://su2code.github.io,https://github.com/su2code/SU2/pull/600#issuecomment-438029731,1,['integrat'],['integrate']
Integrability,": actions/checkout@v4; - uses: actions/setup-python@v4 ; with:; python-version: 'graalpy-22.3' ; - run: python my_script.py; </code></pre>; <p>Besides, the release contains such changes as:</p>; <ul>; <li>Trim python version when reading from file by <a href=""https://github.com/FerranPares""><code>@​FerranPares</code></a> in <a href=""https://redirect.github.com/actions/setup-python/pull/628"">actions/setup-python#628</a></li>; <li>Use non-deprecated versions in examples by <a href=""https://github.com/jeffwidman""><code>@​jeffwidman</code></a> in <a href=""https://redirect.github.com/actions/setup-python/pull/724"">actions/setup-python#724</a></li>; <li>Change deprecation comment to past tense by <a href=""https://github.com/jeffwidman""><code>@​jeffwidman</code></a> in <a href=""https://redirect.github.com/actions/setup-python/pull/723"">actions/setup-python#723</a></li>; <li>Bump <code>@​babel/traverse</code> from 7.9.0 to 7.23.2 by <a href=""https://github.com/dependabot""><code>@​dependabot</code></a> in <a href=""https://redirect.github.com/actions/setup-python/pull/743"">actions/setup-python#743</a></li>; <li>advanced-usage.md: Encourage the use actions/checkout@v4 by <a href=""https://github.com/cclauss""><code>@​cclauss</code></a> in <a href=""https://redirect.github.com/actions/setup-python/pull/729"">actions/setup-python#729</a></li>; <li>Examples now use checkout@v4 by <a href=""https://github.com/simonw""><code>@​simonw</code></a> in <a href=""https://redirect.github.com/actions/setup-python/pull/738"">actions/setup-python#738</a></li>; <li>Update actions/checkout to v4 by <a href=""https://github.com/dmitry-shibanov""><code>@​dmitry-shibanov</code></a> in <a href=""https://redirect.github.com/actions/setup-python/pull/761"">actions/setup-python#761</a></li>; </ul>; <h2>New Contributors</h2>; <ul>; <li><a href=""https://github.com/FerranPares""><code>@​FerranPares</code></a> made their first contribution in <a href=""https://redirect.github.com/actions/setup-python/pull/628"">actions/",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2233:1989,depend,dependabot,1989,https://su2code.github.io,https://github.com/su2code/SU2/pull/2233,2,['depend'],['dependabot']
Integrability,": c++ (gcc 4.8.5 ""c++ (GCC) 4.8.5 20150623 (Red Hat 4.8.5-28)""); C++ linker for the host machine: c++ ld.bfd 2.27-27; Host machine cpu family: x86_64; Host machine cpu: x86_64; Program python3 found: YES (/home/user/anaconda3/bin/python3); Found pkg-config: /home/user/anaconda3/bin/pkg-config (0.29.2); /work/A/openmpi/3.0.0_intel2018u2/bin/mpicc found: YES (/work/A/openmpi/3.0.0_intel2018u2/bin/mpicc) 3.0.0; Run-time dependency MPI for c found: YES 3.0.0; /work/A/openmpi/3.0.0_intel2018u2/bin/mpicxx found: YES (/work/A/openmpi/3.0.0_intel2018u2/bin/mpicxx) 3.0.0; Run-time dependency MPI for cpp found: YES 3.0.0; Message: Boost sources found.; Program swig found: YES (/home/user/anaconda3/bin/swig); Message: Using mpi4py from /home/user/anaconda3/lib/python3.7/site-packages/mpi4py/include; Dependency python found: YES (pkgconfig); Program install.sh found: YES (/bin/sh /home/user/programs/su2/SU2_src/SU2_PY/pySU2/install.sh); Message: -------------------------------------------------------------------------; | ___ _ _ ___ |; | / __| | | |_ ) Release 7.0.8 ""Blackbird"" |; | \__ \ |_| |/ / |; | |___/\___//___| Meson Configuration Summary |; | |; -------------------------------------------------------------------------; ; Option Value; ---------------------; TecIO: true; CGNS: true; AD (reverse): false; AD (forward): false; Python Wrapper: true; Intel-MKL: false; OpenBlas: false; PaStiX: false; Mixed Float: false; ; Please be sure to add the $SU2_HOME and $SU2_RUN environment variables,; and update your $PATH (and $PYTHONPATH if applicable) with $SU2_RUN; ; Based on the input to this configuration, add these lines to your .bashrc file:; ; export SU2_RUN=/home/user/programs/su2/SU2-7.0.8/bin; export SU2_HOME=/home/user/programs/su2/SU2_src; export PATH=$PATH:$SU2_RUN; export PYTHONPATH=$PYTHONPATH:$SU2_RUN; ; Use './ninja -C build install' to compile and install SU2; ; Build targets in project: 12; ; Found ninja-1.10.0.git at /home/user/programs/su2/SU2_src/ninja; Using 'S",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1134#issuecomment-744491311:4598,Message,Message,4598,https://su2code.github.io,https://github.com/su2code/SU2/issues/1134#issuecomment-744491311,1,['Message'],['Message']
Integrability,:+1: Ok @MicK7 PR already open.; Different cross compile issue now https://github.com/su2code/SU2/runs/4900536101?check_suite_focus=true; ```; ERROR: ; Cannot use target H5detect as a generator because it is built for the; host machine and no exe wrapper is defined or needs_exe_wrapper is; true. You might want to set `native: true` instead to build it for; the build machine.; ```,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1508#issuecomment-1018777822:247,wrap,wrapper,247,https://su2code.github.io,https://github.com/su2code/SU2/pull/1508#issuecomment-1018777822,1,['wrap'],['wrapper']
Integrability,"://github.com/actions/upload-artifact/commit/6ed6c729229a623bcb1fdd75903dc6e436b3d0a7""><code>6ed6c72</code></a> Merge pull request <a href=""https://github-redirect.dependabot.com/actions/upload-artifact/issues/303"">#303</a> from actions/dependabot/npm_and_yarn/yargs-parser-13.1.2</li>; <li><a href=""https://github.com/actions/upload-artifact/commit/2aeee267b2cb1f938c861a763b9770ee6e921dc3""><code>2aeee26</code></a> Bump yargs-parser from 13.1.1 to 13.1.2</li>; <li>Additional commits viewable in <a href=""https://github.com/actions/upload-artifact/compare/v1...v3"">compare view</a></li>; </ul>; </details>; <br />. [![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=actions/upload-artifact&package-manager=github_actions&previous-version=1&new-version=3)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores). Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`. [//]: # (dependabot-automerge-start); [//]: # (dependabot-automerge-end). ---. <details>; <summary>Dependabot commands and options</summary>; <br />. You can trigger Dependabot actions by commenting on this PR:; - `@dependabot rebase` will rebase this PR; - `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it; - `@dependabot merge` will merge this PR after your CI passes on it; - `@dependabot squash and merge` will squash and merge this PR after your CI passes on it; - `@dependabot cancel merge` will cancel a previously requested merge and block automerging; - `@dependabot reopen` will reopen this PR if it is closed; - `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually; - `@dependabot ignore this major version` will close this PR and stop Dependabot ",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1756:5186,Depend,Dependabot,5186,https://su2code.github.io,https://github.com/su2code/SU2/pull/1756,1,['Depend'],['Dependabot']
Integrability,:14031] [ 3] /usr/lib/x86_64-linux-gnu/libstdc++.so.6(_ZN9__gnu_cxx27__verbose_terminate_handlerEv+0x11d) [0x7fa4ea6a369d]; [ system:14031] [ 4] /usr/lib/x86_64-linux-gnu/libstdc++.so.6(+0xb5846) [0x7fa4ea6a1846]; [ system:14031] [ 5] /usr/lib/x86_64-linux-gnu/libstdc++.so.6(+0xb5873) [0x7fa4ea6a1873]; [ system:14031] [ 6] /usr/lib/x86_64-linux-gnu/libstdc++.so.6(+0xb596e) [0x7fa4ea6a196e]; [ system:14031] [ 7] /usr/local/bin/SU2_CFD() [0x848d97]; [ system:14031] [ 8] /usr/local/bin/SU2_CFD(_ZN12CEulerSolverC1EP9CGeometryP7CConfigt+0x895) [0x64d055]; [ system:14031] [ 9] /usr/local/bin/SU2_CFD(_Z20Solver_PreprocessingPPP7CSolverPP9CGeometryP7CConfigt+0x1e9) [0x45a299]; [ system:14031] [10] /usr/local/bin/SU2_CFD(main+0x638) [0x6d7db8]; [ system:14031] [11] /lib/x86_64-linux-gnu/libc.so.6(__libc_start_main+0xed) [0x7fa4e9b1e76d]; [ system:14031] [12] /usr/local/bin/SU2_CFD() [0x459049]; [ system:14031] **\* End of error message ***; [ system:14029] [ 3] /usr/lib/x86_64-linux-gnu/libstdc++.so.6(_ZN9__gnu_cxx27__verbose_terminate_handlerEv+0x11d) [0x7f749670169d]; [ system:14029] [ 4] /usr/lib/x86_64-linux-gnu/libstdc++.so.6(+0xb5846) [0x7f74966ff846]; [ system:14029] [ 5] /usr/lib/x86_64-linux-gnu/libstdc++.so.6(+0xb5873) [0x7f74966ff873]; [ system:14029] [ 6] /usr/lib/x86_64-linux-gnu/libstdc++.so.6(+0xb596e) [0x7f74966ff96e]; [ system:14029] [ 7] /usr/local/bin/SU2_CFD() [0x848d97]; [ system:14029] [ 8] /usr/local/bin/SU2_CFD(_ZN12CEulerSolverC1EP9CGeometryP7CConfigt+0x895) [0x64d055]; [ system:14029] [ 9] /usr/local/bin/SU2_CFD(_Z20Solver_PreprocessingPPP7CSolverPP9CGeometryP7CConfigt+0x1e9) [0x45a299]; [ system:14029] [10] /usr/local/bin/SU2_CFD(main+0x638) [0x6d7db8]; [ system:14029] [11] /lib/x86_64-linux-gnu/libc.so.6(__libc_start_main+0xed) [0x7f7495b7c76d]; [ system:14029] [12] /usr/local/bin/SU2_CFD() [0x459049]; ## [ system:14029] **\* End of error message ***; ## mpirun noticed that process rank 2 with PID 14030 on node system exited on signal 6 (Aborted).,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/23:6584,message,message,6584,https://su2code.github.io,https://github.com/su2code/SU2/issues/23,1,['message'],['message']
Integrability,"; (test_env) tim@super:/work/projects/mesh_adapt_testing/A000i_adap/2_cfd$ LD_LIBRARY_PATH=$CONDA_PREFIX/lib:$LD_LIBRARY_PATH SU2_MPI_COMMAND=""mpirun --use-hwthread-cpus -n %i %s"" python /opt/su2/SU2v7_adap/bin/mesh_adaptation_amg.py -f inv_test.cfg -n 40 > mesh_adapt.out; ## WARNING: MISSING SU2 MESH FILE KEYWORD: NCORNERS=.; Traceback (most recent call last):; File ""/opt/su2/SU2v7_adap/bin/mesh_adaptation_amg.py"", line 112, in <module>; main(); File ""/opt/su2/SU2v7_adap/bin/mesh_adaptation_amg.py"", line 73, in main; options.save_all ); File ""/opt/su2/SU2v7_adap/bin/mesh_adaptation_amg.py"", line 102, in mesh_adaptation_amg; SU2.run.amg(config); File ""/opt/su2/SU2v7_adap/bin/SU2/run/amg.py"", line 220, in amg; SU2_CFD(config_cfd); File ""/opt/su2/SU2v7_adap/bin/SU2/run/interface.py"", line 112, in CFD; run_command( the_Command ); File ""/opt/su2/SU2v7_adap/bin/SU2/run/interface.py"", line 292, in run_command; raise exception(message); RuntimeError: Path = /work/projects/mesh_adapt_testing/A000i_adap/2_cfd/adap/ini/,; Command = mpirun --use-hwthread-cpus -n 40 /opt/su2/SU2v7_adap/bin/SU2_CFD config_CFD.cfg; SU2 process returned error '254'; cmap[28922] == -1; cmap[28853] == -1; cmap[28858] == -1; cmap[28966] == -1; cmap[28989] == -1; cmap[28943] == -1; cmap[28915] == -1; cmap[28950] == -1; cmap[28923] == -1; cmap[28871] == -1; cmap[28941] == -1; cmap[28887] == -1; cmap[28889] == -1; cmap[37] == -1; cmap[32342] == -1; cmap[24652] == -1; cmap[50507] == -1; cmap[51850] == -1; --------------------------------------------------------------------------; Primary job terminated normally, but 1 process returned; a non-zero exit code. Per user-direction, the job has been aborted.; --------------------------------------------------------------------------; --------------------------------------------------------------------------; mpirun detected that one or more processes exited with non-zero status, thus causing; the job to be terminated. The first process to do so was:. Process na",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/948#issuecomment-754504570:1428,message,message,1428,https://su2code.github.io,https://github.com/su2code/SU2/issues/948#issuecomment-754504570,1,['message'],['message']
Integrability,"; <li>Fix error handling in <code>uploadChunk</code> where 400-level errors were not being detected and handled correctly</li>; </ul>; <h2>v2.1.2</h2>; <ul>; <li>Adds input to limit the chunk upload size, useful for self-hosted runners with slower upload speeds</li>; <li>No-op when executing on GHES</li>; </ul>; <h2>v2.1.1</h2>; <ul>; <li>Update <code>@actions/cache</code> package to <code>v1.0.2</code> which allows cache action to use posix format when taring files.</li>; </ul>; <h2>v2.1.0</h2>; <ul>; <li>Replaces the <code>http-client</code> with the Azure Storage SDK for NodeJS when downloading cache content from Azure. This should help improve download performance and reliability as the SDK downloads files in 4 MB chunks, which can be parallelized and retried independently</li>; <li>Display download progress and speed</li>; </ul>; <h2>v2.0.0</h2>; <p>Initial v2 release</p>; <h2>What's new in v2</h2>; <ul>; <li>Added support for multiple paths (<a href=""https://github-redirect.dependabot.com/actions/cache/issues/16"">actions/cache#16</a>), glob patterns, and single file caches (<a href=""https://github-redirect.dependabot.com/actions/cache/issues/33"">actions/cache#33</a>)</li>; <li>Increased performance and improved cache sizes using <code>zstd</code> for compression for Linux and macOS runners (<a href=""https://github-redirect.dependabot.com/actions/cache/issues/184"">actions/cache#184</a>)</li>; <li>Allowed caching for all events with a ref (<a href=""https://github-redirect.dependabot.com/actions/cache/issues/63"">actions/cache#63</a>)</li>; <li>Created the <a href=""https://github.com/actions/toolkit/tree/master/packages/cache""><code>@actions/cache</code></a> npm package to allow other actions to utilize caching (<a href=""https://github-redirect.dependabot.com/actions/cache/issues/55"">actions/cache#55</a>)</li>; <li>Added a best-effort step to delete the archive after extraction to reduces storage space (<a href=""https://github-redirect.dependabot.com/actions/cache/",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1755:3111,depend,dependabot,3111,https://su2code.github.io,https://github.com/su2code/SU2/pull/1755,1,['depend'],['dependabot']
Integrability,"; <li>Replaces the <code>http-client</code> with the Azure Storage SDK for NodeJS when downloading cache content from Azure. This should help improve download performance and reliability as the SDK downloads files in 4 MB chunks, which can be parallelized and retried independently</li>; <li>Display download progress and speed</li>; </ul>; <h2>v2.0.0</h2>; <p>Initial v2 release</p>; <h2>What's new in v2</h2>; <ul>; <li>Added support for multiple paths (<a href=""https://github-redirect.dependabot.com/actions/cache/issues/16"">actions/cache#16</a>), glob patterns, and single file caches (<a href=""https://github-redirect.dependabot.com/actions/cache/issues/33"">actions/cache#33</a>)</li>; <li>Increased performance and improved cache sizes using <code>zstd</code> for compression for Linux and macOS runners (<a href=""https://github-redirect.dependabot.com/actions/cache/issues/184"">actions/cache#184</a>)</li>; <li>Allowed caching for all events with a ref (<a href=""https://github-redirect.dependabot.com/actions/cache/issues/63"">actions/cache#63</a>)</li>; <li>Created the <a href=""https://github.com/actions/toolkit/tree/master/packages/cache""><code>@actions/cache</code></a> npm package to allow other actions to utilize caching (<a href=""https://github-redirect.dependabot.com/actions/cache/issues/55"">actions/cache#55</a>)</li>; <li>Added a best-effort step to delete the archive after extraction to reduces storage space (<a href=""https://github-redirect.dependabot.com/actions/cache/pull/209"">actions/cache#209</a>)</li>; </ul>; <h2>v1.2.0</h2>; <h1>Bug Fixes</h1>; <ul>; <li>Fall back to GNU tar on older versions of Windows that do not have BSD tar installed (<a href=""https://github-redirect.dependabot.com/actions/cache/issues/252"">#252</a>)</li>; <li>Fixed chunk upload retry logic (<a href=""https://github-redirect.dependabot.com/actions/cache/issues/305"">#305</a>)</li>; </ul>; <!-- raw HTML omitted -->; </blockquote>; <p>... (truncated)</p>; </details>; <details>; <summary>Change",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1755:3617,depend,dependabot,3617,https://su2code.github.io,https://github.com/su2code/SU2/pull/1755,1,['depend'],['dependabot']
Integrability,"; Jehan; From: Heather Kline notifications@github.com; To: su2code/SU2 SU2@noreply.github.com ; Sent: Tuesday, May 12, 2015 11:43 AM; Subject: [SU2] Feature deallocation (#174). Bringing this branch up to date with current develop branch. ; Various deallocation changes; Some regression tests fail but all run. (previously was not the case); You can view, comment on, or merge this pull request online at:;   https://github.com/su2code/SU2/pull/174; Commit Summary; - Updated GetEngine_Properties; - Fix to the last commit; - Small bug; - Merge branch 'develop' into feature_MPI; - merging; - SU2_SOL and SU2_CFD are working; - Preliminary, but complete, implementation of SU2_DEF; - More updates; - Working version; - Complete implementation (validate); - Working version of SU2_DEF; - Final push before moving to the develop branch; - New MPI (removing SU2_PRT); - Merged in Ben's ParMETIS integration and fixed some conflicts.; - Merge branch 'benkirk-parmetis_integration' into feature_MPI; - ParMETIS geometry routines have been copied over but are not activated yet.; - Small change to ParMETIS include.; - ParMETIS can now be activated for testing (PARMETIS=YES in config).; - Updated MG; - Updated EA subrotuine; - Small fix; - Fixing memory leak; - Fixing memory leaks; - Dev release v.3.2.6; - Increasing MAX_NUMBER_MARKER; - Working version with ParMETIS. Fixed bug in global index. Now clean up and testing...; - Cleaned version of ParMETIS routines with better console output during partitioning.; - Small bug in initial element division.; - Made arrays in ParMETIS call dynamic.; - Fixed compiler warnings and added MPI directives so that the pure serial code works with the ParMETIS routines.; - Bootstrap on zion.; - Added some typecasts. Still tracking down a memory problem...; - Critical bug fix for vtxdist array.; - Partial fix; - More MPI improvements.; - Fixing a bug in SU2_DEF; - Updated BC_ActDisk_Boundary (MPI); - Merge remote-tracking branch 'upstream/develop' into develo",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/174#issuecomment-101443812:1667,rout,routines,1667,https://su2code.github.io,https://github.com/su2code/SU2/pull/174#issuecomment-101443812,2,['rout'],['routines']
Integrability,"; Points/core: 10428.1 | Ghost points/core: 2045.25 ; Wall-clock time (hrs): 0.153299 | Core-hrs: 1.22639 . Preprocessing phase:; Preproc. Time (s): 2.69291 | Preproc. Time (%): 0.487956 . Compute phase:; Compute Time (s): 385.71 | Compute Time (%): 69.8909 ; Iteration count: 560 | Avg. s/iter: 0.688769 ; Core-s/iter/Mpoints: 55.2191 | Mpoints/s: 0.144877 . Output phase:; Output Time (s): 163.472 | Output Time (%): 29.6211 ; Output count: 112 | Avg. s/output: 1.45957 ; -------------------------------------------------------------------------; ```; Note that the iteration count is the total number of all inner iterations. 30% of the time is spend in the output routine. That may sound like a lot, but lets take a look at the second case, where I still call the output routines, but disabled the writing of any files. ```; -------------------------- Performance Summary --------------------------; Simulation totals:; Cores: 8 | DOFs/point: 6; Points/core: 10428.1 | Ghost points/core: 2045.25; Wall-clock time (hrs): 0.112822 | Core-hrs: 0.902578. Preprocessing phase:; Preproc. Time (s): 3.84826 | Preproc. Time (%): 0.947474. Compute phase:; Compute Time (s): 399.446 | Compute Time (%): 98.347; Iteration count: 560 | Avg. s/iter: 0.713297; Core-s/iter/Mpoints: 57.1855 | Mpoints/s: 0.139896. Output phase:; Output Time (s): 2.86557 | Output Time (%): 0.705527; Output count: 112 | Avg. s/output: 0.0255854; Restart Aggr. BW (MB/s): 0 | MB/s/core: 0; -------------------------------------------------------------------------; ``` ; You can see that now the time spend in the output routines (including gathering all data, partitioning and sorting) just takes 0.7% of the overall time. Its not nothing, but roughly one order of magnitude smaller than one iteration of the solver. . I also compared it to the current develop using callgrind on a similar case and for both versions the number of instructions in the output routines is roughly the same (~1.5% of the total number instructions).",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/724#issuecomment-535018704:1982,rout,routines,1982,https://su2code.github.io,https://github.com/su2code/SU2/pull/724#issuecomment-535018704,2,['rout'],['routines']
Integrability,"; [DN0a22c803:22646] Signal code: (0); [DN0a22c803:22646] Failing at address: 0x0; [DN0a22c803:22646] *** End of error message ***; Segmentation fault: 11; ```; The exact crash location is: ; ```; Exception Type: EXC_BAD_ACCESS (SIGSEGV); Exception Codes: KERN_INVALID_ADDRESS at 0x0000737e9bdce5a2; Exception Codes: 0x0000000000000001, 0x0000737e9bdce5a2; Exception Note: EXC_CORPSE_NOTIFY. VM Region Info: 0x737e9bdce5a2 is not in any region. Bytes after previous region: 3842065106339 Bytes before following region: 13412496251486; REGION TYPE START - END [ VSIZE] PRT/MAX SHRMOD REGION DETAIL; Stack 70000ee7c000-70000eefe000 [ 520K] rw-/rwx SM=PRV thread 2; ---> GAP OF 0xfb164002000 BYTES; MALLOC_TINY 7fb172f00000-7fb173000000 [ 1024K] rw-/rwx SM=PRV . 0 _pysu2.so 	 0x116e2dfd0 CConfig::GetDiscrete_Adjoint() const + 12 (CConfig.hpp:8596); 1 _pysu2.so 	 0x1173844ca CDriver::Postprocessing() + 8600 (CDriver.cpp:558); 2 _pysu2.so 	 0x116bcaf0c _wrap_CDriver_Postprocessing + 199 (pySU2.cxx:10061); 0 libsystem_kernel.dylib 	 0x7ff801374d5a __select + 10; 1 libopen-pal.40.dylib 	 0x10a42def6 select_dispatch + 182 (select.c:161); 2 libopen-pal.40.dylib 	 0x10a425719 opal_libevent2022_event_base_loop + 585 (event.c:1630). ```; Another observation is that when I was using mpi4py 3.0.3 and openmpi 4.1.3, I was able to rename _pysu2.dylib to _pysu2.so and import pysu2 module into python 3.9.1. However, when I use mpi4py 3.1.3, I wasn't able to import the renamed _pysu2.so into python3, the error message is very similar to the one reported with segmentation fault 11. At this point, I think the potential approach is to enable python3 to import *.dylib module extension, since it seems that some *.dylib mpi shared library is also related to this. I tried to link .so extension for libopen-pal.40.dylib but that does not solve the issue. Any suggestion on this? Thank you!. My environment is :; GNU -11.2.0_3; Python 3.9.1; Openmpi 4.1.3; SU2 7.3.0 feature_pysu2_fsi_adjoint ; mpi4py 3.0.3",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1606#issuecomment-1106125840:2967,message,message,2967,https://su2code.github.io,https://github.com/su2code/SU2/issues/1606#issuecomment-1106125840,1,['message'],['message']
Integrability,"</a></li>; </ul>; </details>; <br />. [![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=actions/download-artifact&package-manager=github_actions&previous-version=3&new-version=4)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores). Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`. [//]: # (dependabot-automerge-start); [//]: # (dependabot-automerge-end). ---. <details>; <summary>Dependabot commands and options</summary>; <br />. You can trigger Dependabot actions by commenting on this PR:; - `@dependabot rebase` will rebase this PR; - `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it; - `@dependabot merge` will merge this PR after your CI passes on it; - `@dependabot squash and merge` will squash and merge this PR after your CI passes on it; - `@dependabot cancel merge` will cancel a previously requested merge and block automerging; - `@dependabot reopen` will reopen this PR if it is closed; - `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually; - `@dependabot show <dependency name> ignore conditions` will show all of the ignore conditions of the specified dependency; - `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself); - `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself); - `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself). </details>",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2230:6064,depend,dependabot,6064,https://su2code.github.io,https://github.com/su2code/SU2/pull/2230,11,"['Depend', 'depend']","['Dependabot', 'dependabot', 'dependency']"
Integrability,"</a></li>; </ul>; </details>; <br />. [![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=mheap/github-action-required-labels&package-manager=github_actions&previous-version=3&new-version=5)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores). Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`. [//]: # (dependabot-automerge-start); [//]: # (dependabot-automerge-end). ---. <details>; <summary>Dependabot commands and options</summary>; <br />. You can trigger Dependabot actions by commenting on this PR:; - `@dependabot rebase` will rebase this PR; - `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it; - `@dependabot merge` will merge this PR after your CI passes on it; - `@dependabot squash and merge` will squash and merge this PR after your CI passes on it; - `@dependabot cancel merge` will cancel a previously requested merge and block automerging; - `@dependabot reopen` will reopen this PR if it is closed; - `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually; - `@dependabot show <dependency name> ignore conditions` will show all of the ignore conditions of the specified dependency; - `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself); - `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself); - `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself). ",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2125:6243,Depend,Dependabot,6243,https://su2code.github.io,https://github.com/su2code/SU2/pull/2125,18,"['Depend', 'depend']","['Dependabot', 'dependabot']"
Integrability,"<a href=""https://docs.github.com/en/enterprise-server@3.0/admin/github-actions/managing-access-to-actions-from-githubcom/enabling-automatic-access-to-githubcom-actions-using-github-connect"">github connect</a> or manually copying the repo to their GHES instance.</p>; </li>; <li>; <p>Few dependencies and cache action usage examples have also been updated.</p>; </li>; </ul>; <h2>v2.1.7</h2>; <p>Support 10GB cache upload using the latest version <code>1.0.8</code> of <a href=""https://www.npmjs.com/package/@actions/cache""><code>@actions/cache</code> </a></p>; <h2>v2.1.6</h2>; <ul>; <li>Catch unhandled &quot;bad file descriptor&quot; errors that sometimes occurs when the cache server returns non-successful response (<a href=""https://github-redirect.dependabot.com/actions/cache/pull/596"">actions/cache#596</a>)</li>; </ul>; <h2>v2.1.5</h2>; <ul>; <li>Fix permissions error seen when extracting caches with GNU tar that were previously created using BSD tar (<a href=""https://github-redirect.dependabot.com/actions/cache/issues/527"">actions/cache#527</a>)</li>; </ul>; <h2>v2.1.4</h2>; <ul>; <li>Make caching more verbose <a href=""https://github-redirect.dependabot.com/actions/toolkit/pull/650"">#650</a></li>; <li>Use GNU tar on macOS if available <a href=""https://github-redirect.dependabot.com/actions/toolkit/pull/701"">#701</a></li>; </ul>; <h2>v2.1.3</h2>; <ul>; <li>Upgrades <code>@actions/core</code> to v1.2.6 for <a href=""https://github.com/advisories/GHSA-mfwh-5m23-j46w"">CVE-2020-15228</a>. This action was not using the affected methods.</li>; <li>Fix error handling in <code>uploadChunk</code> where 400-level errors were not being detected and handled correctly</li>; </ul>; <h2>v2.1.2</h2>; <ul>; <li>Adds input to limit the chunk upload size, useful for self-hosted runners with slower upload speeds</li>; <li>No-op when executing on GHES</li>; </ul>; <h2>v2.1.1</h2>; <ul>; <li>Update <code>@actions/cache</code> package to <code>v1.0.2</code> which allows cache action to use posi",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1755:1554,depend,dependabot,1554,https://su2code.github.io,https://github.com/su2code/SU2/pull/1755,1,['depend'],['dependabot']
Integrability,"<code>a7c34ad</code></a> Merge pull request <a href=""https://github-redirect.dependabot.com/actions/cache/issues/894"">#894</a> from actions/kotewar/update-toolkit-version</li>; <li><a href=""https://github.com/actions/cache/commit/83394c99b7089b29ee6c302fad5e940df48c472a""><code>83394c9</code></a> Updated cache version in license file</li>; <li><a href=""https://github.com/actions/cache/commit/e839c25979e6ffdd90792d34de69d6a87d3016f6""><code>e839c25</code></a> Updated actions/cache version to 3.0.3</li>; <li><a href=""https://github.com/actions/cache/commit/33a923d660988a68affcd47de6bd6744193223a6""><code>33a923d</code></a> Added release information</li>; <li><a href=""https://github.com/actions/cache/commit/a404368986bb049d406166fc20afc01d032ad8a2""><code>a404368</code></a> Updated actions/cache version to 3.0.2</li>; <li><a href=""https://github.com/actions/cache/commit/f4278025ab0f432ce369118909e46deec636f50c""><code>f427802</code></a> Merge pull request <a href=""https://github-redirect.dependabot.com/actions/cache/issues/887"">#887</a> from actions/pdotl-version-patch</li>; <li><a href=""https://github.com/actions/cache/commit/9916fe1701f098b95a05e7c2bacee7c5a022c553""><code>9916fe1</code></a> Update cache version in licences</li>; <li><a href=""https://github.com/actions/cache/commit/318935ef66557a1906560e4e7d0069344a4b31bf""><code>318935e</code></a> Update README and RELEASES</li>; <li>Additional commits viewable in <a href=""https://github.com/actions/cache/compare/v1...v3"">compare view</a></li>; </ul>; </details>; <br />. [![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=actions/cache&package-manager=github_actions&previous-version=1&new-version=3)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores). Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1755:8498,depend,dependabot,8498,https://su2code.github.io,https://github.com/su2code/SU2/pull/1755,1,['depend'],['dependabot']
Integrability,"<code>f6cc428</code></a> Use non-deprecated versions in examples (<a href=""https://redirect.github.com/actions/setup-python/issues/724"">#724</a>)</li>; <li><a href=""https://github.com/actions/setup-python/commit/5f2af211d616f86005883b44826180b21abb4060""><code>5f2af21</code></a> Add GraalPy support (<a href=""https://redirect.github.com/actions/setup-python/issues/694"">#694</a>)</li>; <li>Additional commits viewable in <a href=""https://github.com/actions/setup-python/compare/v4...v5"">compare view</a></li>; </ul>; </details>; <br />. [![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=actions/setup-python&package-manager=github_actions&previous-version=4&new-version=5)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores). Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`. [//]: # (dependabot-automerge-start); [//]: # (dependabot-automerge-end). ---. <details>; <summary>Dependabot commands and options</summary>; <br />. You can trigger Dependabot actions by commenting on this PR:; - `@dependabot rebase` will rebase this PR; - `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it; - `@dependabot merge` will merge this PR after your CI passes on it; - `@dependabot squash and merge` will squash and merge this PR after your CI passes on it; - `@dependabot cancel merge` will cancel a previously requested merge and block automerging; - `@dependabot reopen` will reopen this PR if it is closed; - `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually; - `@dependabot show <dependency name> ignore conditions` will show all of the ignore conditions of the specified dependency; - `@dependabot ignore this major versio",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2233:7881,depend,dependabot,7881,https://su2code.github.io,https://github.com/su2code/SU2/pull/2233,1,['depend'],['dependabot']
Integrability,"<h2>v2.1.2</h2>; <ul>; <li>Adds input to limit the chunk upload size, useful for self-hosted runners with slower upload speeds</li>; <li>No-op when executing on GHES</li>; </ul>; <h2>v2.1.1</h2>; <ul>; <li>Update <code>@actions/cache</code> package to <code>v1.0.2</code> which allows cache action to use posix format when taring files.</li>; </ul>; <h2>v2.1.0</h2>; <ul>; <li>Replaces the <code>http-client</code> with the Azure Storage SDK for NodeJS when downloading cache content from Azure. This should help improve download performance and reliability as the SDK downloads files in 4 MB chunks, which can be parallelized and retried independently</li>; <li>Display download progress and speed</li>; </ul>; <h2>v2.0.0</h2>; <p>Initial v2 release</p>; <h2>What's new in v2</h2>; <ul>; <li>Added support for multiple paths (<a href=""https://github-redirect.dependabot.com/actions/cache/issues/16"">actions/cache#16</a>), glob patterns, and single file caches (<a href=""https://github-redirect.dependabot.com/actions/cache/issues/33"">actions/cache#33</a>)</li>; <li>Increased performance and improved cache sizes using <code>zstd</code> for compression for Linux and macOS runners (<a href=""https://github-redirect.dependabot.com/actions/cache/issues/184"">actions/cache#184</a>)</li>; <li>Allowed caching for all events with a ref (<a href=""https://github-redirect.dependabot.com/actions/cache/issues/63"">actions/cache#63</a>)</li>; <li>Created the <a href=""https://github.com/actions/toolkit/tree/master/packages/cache""><code>@actions/cache</code></a> npm package to allow other actions to utilize caching (<a href=""https://github-redirect.dependabot.com/actions/cache/issues/55"">actions/cache#55</a>)</li>; <li>Added a best-effort step to delete the archive after extraction to reduces storage space (<a href=""https://github-redirect.dependabot.com/actions/cache/pull/209"">actions/cache#209</a>)</li>; </ul>; <h2>v1.2.0</h2>; <h1>Bug Fixes</h1>; <ul>; <li>Fall back to GNU tar on older versions of ",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1755:3246,depend,dependabot,3246,https://su2code.github.io,https://github.com/su2code/SU2/pull/1755,1,['depend'],['dependabot']
Integrability,"<img width=""431"" alt=""Screenshot 2021-02-15 165247"" src=""https://user-images.githubusercontent.com/60700515/107968189-553d3780-6fae-11eb-88a1-e3fee844f05b.png"">. The error was spotted while updating the old python routines to the new drivers/mesh solver. In particular, the test case in py_wrapper folder, related to a flat plate plunging up and down, showed a different coefficient of lift as computed using the old and new mesh solver. I attach here the comparison of the coefficient of lift history for three cases:. * The legacy mesh solver, after the modification in this PR; * The new mesh solver; * The legacy mesh solver, before the modification. The first two are completely coincident",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1199#issuecomment-779313505:214,rout,routines,214,https://su2code.github.io,https://github.com/su2code/SU2/pull/1199#issuecomment-779313505,1,['rout'],['routines']
Integrability,"<li><a href=""https://github.com/actions/setup-python/commit/5f2af211d616f86005883b44826180b21abb4060""><code>5f2af21</code></a> Add GraalPy support (<a href=""https://redirect.github.com/actions/setup-python/issues/694"">#694</a>)</li>; <li>Additional commits viewable in <a href=""https://github.com/actions/setup-python/compare/v4...v5"">compare view</a></li>; </ul>; </details>; <br />. [![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=actions/setup-python&package-manager=github_actions&previous-version=4&new-version=5)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores). Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`. [//]: # (dependabot-automerge-start); [//]: # (dependabot-automerge-end). ---. <details>; <summary>Dependabot commands and options</summary>; <br />. You can trigger Dependabot actions by commenting on this PR:; - `@dependabot rebase` will rebase this PR; - `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it; - `@dependabot merge` will merge this PR after your CI passes on it; - `@dependabot squash and merge` will squash and merge this PR after your CI passes on it; - `@dependabot cancel merge` will cancel a previously requested merge and block automerging; - `@dependabot reopen` will reopen this PR if it is closed; - `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually; - `@dependabot show <dependency name> ignore conditions` will show all of the ignore conditions of the specified dependency; - `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself); - `@dependabot ",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2233:8000,Depend,Dependabot,8000,https://su2code.github.io,https://github.com/su2code/SU2/pull/2233,1,['Depend'],['Dependabot']
Integrability,"=""${PKG_CONFIG_PATH}"":/usr/lib/pkgconfig; ```. ```; slimshady@arch-linux-hp-probook-g3-450: SU2_NEW$ meson build -Denable-openblas=true -Dwith-mpi=enabled -Denable-autodiff=true -Denable-directdiff=true -Denable-pywrapper=true --prefix=/home/slimshady/UserPackages/SU2_INSTALL_NEW; The Meson build system; Version: 0.53.2; Source dir: /home/slimshady/UserPackages/SU2_NEW; Build dir: /home/slimshady/UserPackages/SU2_NEW/build; Build type: native build; Project name: SU2; Project version: 7.0.4 ""Blackbird""; C compiler for the host machine: cc (gcc 9.2.1 ""cc (Arch Linux 9.2.1+20200130-2) 9.2.1 20200130""); C linker for the host machine: cc ld.bfd 2.34; C++ compiler for the host machine: c++ (gcc 9.2.1 ""c++ (Arch Linux 9.2.1+20200130-2) 9.2.1 20200130""); C++ linker for the host machine: c++ ld.bfd 2.34; Host machine cpu family: x86_64; Host machine cpu: x86_64; Program python3 found: YES (/usr/bin/python); Found pkg-config: /usr/bin/pkg-config (1.6.3); Dependency python found: YES (pkgconfig); Run-time dependency MPI for c found: YES 4.0.2; Run-time dependency MPI for cpp found: YES 4.0.2; Message: Boost sources found.; Run-time dependency openblas found: YES 0.3.8; Program swig found: YES (/usr/bin/swig); Message: Using mpi4py from /home/slimshady/.local/lib/python3.8/site-packages/mpi4py/include; Run-time dependency python3 found: YES 3.8; Program install.sh found: YES (/bin/sh /home/slimshady/UserPackages/SU2_NEW/SU2_PY/pySU2/install.sh); Message: -------------------------------------------------------------------------; | ___ _ _ ___ |; | / __| | | |_ ) Release 7.0.4 ""Blackbird"" |; | \__ \ |_| |/ / |; | |___/\___//___| Meson Configuration Summary |; | |; -------------------------------------------------------------------------; ; Option Value; ---------------------; TecIO: true; CGNS: true; AD (reverse): true; AD (forward): true; Python Wrapper: true; Intel-MKL: false; OpenBlas: true; PaStiX: false. Please be sure to add the $SU2_HOME and $SU2_RUN environment variables,",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/991#issuecomment-631986633:1382,Depend,Dependency,1382,https://su2code.github.io,https://github.com/su2code/SU2/issues/991#issuecomment-631986633,2,"['Depend', 'depend']","['Dependency', 'dependency']"
Integrability,"=..., LinSysSol=..., geometry=0x2105400, ; config=0x209bc10) at ../Common/src/linear_algebra/CSysSolve.cpp:883; #10 0x00000000007b69da in CHeatSolver::ImplicitEuler_Iteration (; this=0x23a1de0, geometry=0x2105400, solver_container=0x23a1d70, ; config=0x209bc10) at ../SU2_CFD/src/solvers/CHeatSolver.cpp:1528; #11 0x0000000000b5a666 in CIntegration::Time_Integration (this=0x270d150, ; geometry=0x2105400, solver_container=0x23a1d70, config=0x209bc10, ; iRKStep=0, RunTime_EqSystem=21); at ../SU2_CFD/src/integration/CIntegration.cpp:205; #12 0x00000000004a2973 in CSingleGridIntegration::SingleGrid_Iteration (; this=0x270d150, geometry=0x2005130, solver_container=0x20058c0, ; numerics_container=0x20063b0, config=0x1de0e00, RunTime_EqSystem=21, ; iZone=1, iInst=0); at ../SU2_CFD/src/integration/CSingleGridIntegration.cpp:73; ---Type <return> to continue, or q <return> to quit---; #13 0x00000000004e33e4 in CHeatIteration::Iterate (this=0x270d170, ; output=0x20f0cc0, integration=0x1e3efe0, geometry=0x2005130, ; solver=0x20058c0, numerics=0x20063b0, config=0x1de0e00, ; surface_movement=0x1de0e20, grid_movement=0x1de0e40, FFDBox=0x1de0e60, ; val_iZone=1, val_iInst=0) at ../SU2_CFD/src/iteration/CHeatIteration.cpp:40; #14 0x00000000004db2ba in CFluidIteration::Solve (this=0x270d170, ; output=0x20f0cc0, integration=0x1e3efe0, geometry=0x2005130, ; solver=0x20058c0, numerics=0x20063b0, config=0x1de0e00, ; surface_movement=0x1de0e20, grid_movement=0x1de0e40, FFDBox=0x1de0e60, ; val_iZone=1, val_iInst=0); at ../SU2_CFD/src/iteration/CFluidIteration.cpp:302; #15 0x000000000047adec in CMultizoneDriver::Run_GaussSeidel (this=0x2009490); at ../SU2_CFD/src/drivers/CMultizoneDriver.cpp:329; #16 0x000000000047a415 in CMultizoneDriver::StartSolver (this=0x2009490); at ../SU2_CFD/src/drivers/CMultizoneDriver.cpp:193; #17 0x0000000000415413 in main (argc=2, argv=0x7fffffffbb18); at ../SU2_CFD/src/SU2_CFD.cpp:150; ```; </details>; Look at the backtraces if you like. The first is further in the",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1241:7231,integrat,integration,7231,https://su2code.github.io,https://github.com/su2code/SU2/issues/1241,1,['integrat'],['integration']
Integrability,"> > > If you are planning to touch the heat solver, might I suggest you, @bigfooted, @danielmayer, and me get together like the power rangers and do the scalar solver thing properwise without grafting code from 10 versions ago into develop?; > > > The ideia would be to create a CFVMSolverBase (in the style of the one for flow solvers) to cover:; > > > ```; > > > * Turbulence solvers;; > > > ; > > > * Heat solver;; > > > ; > > > * Radiation solver;; > > > ; > > > * General passive/active scalar solvers;; > > > ; > > > * Eventual transition solvers;; > > > ```; > > > ; > > > ; > > > The starting point would be the current base turbulence solver.; > > ; > > ; > > I'm in. The heat solver should be easy to integrate into a generic framework if the framework provides a Laplacian/diffusion coefficient (which will then turn into thermal diffusivity). Apart from that, there's nothing very heat specific in the heat solver :); > ; > Me too. I'm already cleaning up our code a bit so it's easier to see the differences and similarities. Sure! Let's do this.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1226#issuecomment-794646465:711,integrat,integrate,711,https://su2code.github.io,https://github.com/su2code/SU2/pull/1226#issuecomment-794646465,1,['integrat'],['integrate']
Integrability,"> > Hi @rois1995 any progress? Would be very interesting to add this to develop, looking forward to using it actually.; > ; > Hi @bigfooted, unfortunately I do not have enough time/computational power to perform a proper validation. I only tried something with a NACA0021 at 17 deg and 60 deg and they were promising, at least for the DDES implementation. The SAS ones are not that good. I'll upload some post-processing as soon as I have the time to do so. Hi @rois1995, I believe there is an error or a typo in the Babu's paper in the Q_SAS source term and in turn in your implementation, which may be the reason for the poor performance in SAS results. . ![image](https://github.com/user-attachments/assets/5791d344-967a-4cc5-b512-457b7fe61435). This term changes units depending on the output of the max function, which doesn't make any sense. I believe the terms in the max function should be divided by omega^2 and k^2 instead of omega and k, respectively. Which is exactly how it is done in [https://resolver.tudelft.nl/uuid:5d23e2a6-5675-450d-bf3d-1dd40d736cae](url). I will try some of the benchmark cases in these papers when I have the time. Let me know what you think.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2150#issuecomment-2447067474:773,depend,depending,773,https://su2code.github.io,https://github.com/su2code/SU2/pull/2150#issuecomment-2447067474,1,['depend'],['depending']
Integrability,"> > If you are planning to touch the heat solver, might I suggest you, @bigfooted, @danielmayer, and me get together like the power rangers and do the scalar solver thing properwise without grafting code from 10 versions ago into develop?; > > The ideia would be to create a CFVMSolverBase (in the style of the one for flow solvers) to cover:; > > ```; > > * Turbulence solvers;; > > ; > > * Heat solver;; > > ; > > * Radiation solver;; > > ; > > * General passive/active scalar solvers;; > > ; > > * Eventual transition solvers;; > > ```; > > ; > > ; > > The starting point would be the current base turbulence solver.; > ; > I'm in. The heat solver should be easy to integrate into a generic framework if the framework provides a Laplacian/diffusion coefficient (which will then turn into thermal diffusivity). Apart from that, there's nothing very heat specific in the heat solver :). Me too. I'm already cleaning up our code a bit so it's easier to see the differences and similarities.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1226#issuecomment-794344854:669,integrat,integrate,669,https://su2code.github.io,https://github.com/su2code/SU2/pull/1226#issuecomment-794344854,1,['integrat'],['integrate']
Integrability,> @EvertBunschoten even if the performance isn't great this is a pretty small change so I think we can merge it. Do you have time to wrap it up and add a simple regression test?. I just added a test case and tutorial under the TestCases and Tutorials repo under the same branch name. I'm also writing a short tutorial on the SU2 website repo.,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2152#issuecomment-2271237145:133,wrap,wrap,133,https://su2code.github.io,https://github.com/su2code/SU2/pull/2152#issuecomment-2271237145,2,['wrap'],['wrap']
Integrability,"> @bigfooted out of curiosity, how does a non-planar FFD box affect the deformation/optimization process?. When deforming a mesh, there can be mesh nodes close to the edge (planar sides) of the box that are either inside or outside of the box, depending on how you the nonplanar face ABCD is interpreted. This ambiguity can be resolved by either splitting the face into 2 triangles over a dividing line AC or BD, or by defining an average middle point and dividing the plane into 4 triangles.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1742#issuecomment-1225218421:244,depend,depending,244,https://su2code.github.io,https://github.com/su2code/SU2/pull/1742#issuecomment-1225218421,1,['depend'],['depending']
Integrability,"> @jayantmukho You can modify the routine CFlowOutput::WriteVolume_Output() in order to disable the writing of the files. Yes, I thought that would be the easiest place to make the change. But unfortunately, this gets ignored when the `CSingleZoneDriver` runs `SetResult_Files` and forces the output with the `force_writing` option. `StopCalc` passed into this function for `force_writing` and that is basically always true at this point in the case of steady RANS since the `CFluidIteration` has just finished running `Solve()`. An easy way to fix this would be to add `force_writing` to the input of `WriteVolume_Output`. I can preserve the behavior in the `COutput::WriteVolume_Output` but add some logic for the fixed CL mode in the `CFlowOutput::WriteVolume_Output`.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/780#issuecomment-540650002:34,rout,routine,34,https://su2code.github.io,https://github.com/su2code/SU2/pull/780#issuecomment-540650002,1,['rout'],['routine']
Integrability,"> @kursatyurt Hello, thank you so much for the lead.; > ; > Our initial scope mostly involved writing our own kernels and I did explore some libraries at the start - I was planning on using CUSP as well but my main concern was its lack of being updated to the newly compatible versions of the toolkit. cuSolver and cuBLAS do exist, but I chose to go ahead with a ""simple"" kernel implementation to have more control. I also felt that if I could keep the block size of the grid in optimal territory then they could be just as fast as those options (please do correct me if my reading of the literature or the situation was incorrect). To learn the basics, it's a good idea, but for large-scale projects, I prefer using existing libraries if possible.; Those libraries generally exploit state-of-the-art solution like mixed-precision computing. A gaming GPU is not way faster than a good CPU in double precision, but way faster in single precision, most of them have 64:1 ratio, however server class GPU have 2:1 ratio. Also when available they use vendor libraries like cuBLAS or hipBLAS. It is always nice to have you only care about connection and somebody else handle the solver as performant as possible. In future probably they will provide more and more solvers and it will be automagically works. It is kind of light-weight too, not a huge dependency like Trilinos or PETSc. ; > ; > I was not aware of Ginkgo and I will surely give it a go and try to produce some comparative results. I am currently super busy for this month and will get to working on the code with some delay.; > ; > Again, thank you for the lead!. I can test on various GPUs (P100/V100/A100 and 4070Mobile) on single node multi-gpu etc.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2346#issuecomment-2397803409:1345,depend,dependency,1345,https://su2code.github.io,https://github.com/su2code/SU2/pull/2346#issuecomment-2397803409,2,['depend'],['dependency']
Integrability,"> @martin-g this shouldn't affect your work right?. The changes in this PR won't affect my PR!; I have updated the actions already in my PR, e.g. https://github.com/su2code/SU2/pull/1619/files#diff-9410ebdbbce3193b6dc6a3c13da802b844198871d2e65958a82747fd84e86c64R64. So, once dependabot sends a new PR with updated action it may lead to merge conflicts but it will be trivial to fix them!",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1682#issuecomment-1164830493:276,depend,dependabot,276,https://su2code.github.io,https://github.com/su2code/SU2/pull/1682#issuecomment-1164830493,1,['depend'],['dependabot']
Integrability,"> @oleburghardt, looks like this is taking a turn to also address primal CHT topics, but all comments on the main dish have been addressed. Can we merge this to shorten the dependency chain between PR's while you continue working on ironing out minor kinks?. True, but that was about it. They just have fit in so well. As for the main part, we just have to keep in mind the `CDiscAdjMultizoneDriver::SetObjFunction` that two of you didn't like. But as I said, it has much to do with other changes that should be done before.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/774#issuecomment-540531599:173,depend,dependency,173,https://su2code.github.io,https://github.com/su2code/SU2/pull/774#issuecomment-540531599,1,['depend'],['dependency']
Integrability,"> @sun5k @rois1995 we now have 2 PR's on the same subject. This one is already reviewed, and I am not keen on wasting work (mine and others). The way I see it this PR followed the way we encourage for contributions to SU2, draft PR, etc, and thus it should be integrated. So, @sun5k can you finish the little things missing here? That way PR #1788 can then build on top of this. Oh, @rois1995 has significant progress in the LM model. I didn't know about this progress because I missed the SU2 conference in 2022. Now, I'm making the V&V and tutorial cases in my [repository](https://github.com/sun5k/su2code.github.io/blob/master/_vandv/LM_transition.md). So, at least tomorrow, I will PR to V&V, Tutorials, and TestCases. After PR of the V&V, Tutorials, and TestCases, I thought almost done about this PR #1751. Is there anything else I should do with this PR #1751?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1751#issuecomment-1275423001:260,integrat,integrated,260,https://su2code.github.io,https://github.com/su2code/SU2/pull/1751#issuecomment-1275423001,1,['integrat'],['integrated']
Integrability,"> Accuracy or stability wise? . Stability-wise. On the DSMA cases I posted, the edge limiters both stall. > It bugs me that the limiter function starts at 0 (when r=0) while all others start at 1 and actually go above one until r becomes greater than 1. Yeah, maybe it needs to be reworked, but I thought that most limiter functions started at 0? E.g. from Venkatakrishnan. <img width=""448"" alt=""Screen Shot 2020-07-23 at 9 22 37 AM"" src=""https://user-images.githubusercontent.com/19416354/88311740-23891a00-ccc6-11ea-9439-73e07343b7f2.png"">; <img width=""455"" alt=""Screen Shot 2020-07-23 at 9 20 39 AM"" src=""https://user-images.githubusercontent.com/19416354/88311750-25eb7400-ccc6-11ea-87dd-e134d5b686be.png"">. > Maybe the definition of r for Piperno needs some adjustment for unstructured grids? In the paper R is the ratio of consecutive deltas. He discusses that in section 5.1 of his paper. Depending on whether your upwind gradient comes from the node or the triangle upwind of the edge, you have; <img width=""547"" alt=""Screen Shot 2020-07-23 at 9 34 49 AM"" src=""https://user-images.githubusercontent.com/19416354/88313073-d312bc00-ccc7-11ea-8b59-5635bc8d9b15.png"">; I modified the upwind difference to be consistent with this definition (which is why the regressions that use van Albada failed, the rest seem to be a segfault that I'll fix soon).; The choice of r is also discussed briefly [here](https://github.com/su2code/SU2/files/4967575/r_factor_Li.pdf). > doesn't phi(r) (the piece-wise part) need to be multiplied by another term to give the final psi(R)?. The other term (1/3 + 2/3*R) is baked into when I recompute the limited Project_Grads. Since we multiply psi(R) by the upwind difference deltaU_u, it becomes U_i + 1/2\*(1/3 deltaU_u + 2/3 deltaU_c)\*psi(R), which we get for kappa=1/3. > With kappa close to 1 my gut feeling says the limiters will be off everywhere (r~1 by definition) unless the gradient goes wild.; > Also the left and right states will be very similar, and sin",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1050#issuecomment-663114188:896,Depend,Depending,896,https://su2code.github.io,https://github.com/su2code/SU2/pull/1050#issuecomment-663114188,1,['Depend'],['Depending']
Integrability,"> Can you describe a bit more the stopping strategy you want? The new output structure is much more flexible than before, and you can even use Cauchy criteria based on time averages (of pretty much any coefficient), with different windowing methods and so on. Does Cauchy criteria based on time averages only work for time-independent flows? Because it seems that WINDOW_START_ITER needs to be set in the section of TIME-DEPENDENT SIMULATION in the input .cfg file. Thank you.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1304#issuecomment-863322166:421,DEPEND,DEPENDENT,421,https://su2code.github.io,https://github.com/su2code/SU2/issues/1304#issuecomment-863322166,1,['DEPEND'],['DEPENDENT']
Integrability,"> Do that in a different order please, add the regression now, we merge the PR, and then you continue the work. We want short PRs. Hi, I meet a problem when I change /.github/workflows/regression.yaml to enable compilation with CoolProp for one of the config sets (BaseMPI). To compile CoolProp, I import cmake submodule of meson. However, when github workflow builds BaseMPI, the error message is **'can not find cmake.'** . I think this is because github does not have cmake. . Do you have any advice? Thank you. (the other subproject Mutationpp also import cmake submodule, do you know how that new feature is built on github?)",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1782#issuecomment-1289289170:387,message,message,387,https://su2code.github.io,https://github.com/su2code/SU2/pull/1782#issuecomment-1289289170,1,['message'],['message']
Integrability,"> Does the code work when the file exist? i.e. is this related to the reading in general or exclusively with writing the example?. Yes, it is only when writing the example_profile, so it doesn't leave _CSolver::LoadInletProfile_ ,although it does reach the end of the routine.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1767#issuecomment-1264688015:268,rout,routine,268,https://su2code.github.io,https://github.com/su2code/SU2/issues/1767#issuecomment-1264688015,1,['rout'],['routine']
Integrability,"> Every time we push commits or submit a pull request, the unit tests are run; > and checked.; > What is my vision for unit testing in SU2?; >; > I am *not* proposing that we start trying to get 100% code coverage with; > pre-existing code. That would not provide a good return on investment.; >; > Instead, I see people adding unit tests as they write new code and as they; > find bugs. For each new behavior added to SU2, tests are first added to; > document the related existing behavior. These tests serve to check that the; > existing behavior isn't damaged by the new code. Then new tests are added; > to prove that the new behavior is working correctly. For bug fixes, the; > process is simpler. A test is added to confirm that something is not; > behaving as expected. Then the code is fixed to make the test pass.; > What frameworks are available?; >; > For a unit testing framework, here are the most popular options, with the; > following pros and cons:; > Roll-your-own; >; > - Requires no external dependencies; > - The most flexible option; > - Involves the most work to setup; > - Will lack some of the more advances features of mature unit-testing; > frameworks.; >; > Boost Test; >; > - Can be header only, statically linked, or dynamically linked; > - If statically or dynamically linked, then Boost is not very; > lightweight; > - Easy to add if you're already using Boost; >; > Google Test; >; > - Most common unit-testing framework; > - Can be easily combined with Google's powerful GMock mocking library; > - Compiling and linking can be somewhat painful; >; > Catch2; >; > - Used by FEniCS; > - Makes unit tests easily readable with lots of syntactic sugar.; > - Has a very simple syntax; > - Is header-only; > - Requires C++11 compilation; > - Not as feature rich as Google Test or Boost Test; >; > Questions; >; > - How do developers feel about adding unit tests to SU2?; > - If a unit-testing framework were added to SU2, would you actually; > use it?; > - Do developers hav",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/698#issuecomment-499278427:5615,depend,dependencies,5615,https://su2code.github.io,https://github.com/su2code/SU2/issues/698#issuecomment-499278427,2,['depend'],['dependencies']
Integrability,"> Everything looks good. Please add yourself to AUTHORS.md. Thank you for you help, I updated the newest version following your advice. However, **'Build SU2 (linux 64) failed'** and the error message:. **'FileNotFoundError: [Errno 2] No such file or directory: '/github/workspace'**. When I compile and build this branch on my Pc, I do not meet this problem. Could you please give any idea to help solve it?. Thank you!",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1782#issuecomment-1273046609:193,message,message,193,https://su2code.github.io,https://github.com/su2code/SU2/pull/1782#issuecomment-1273046609,1,['message'],['message']
Integrability,"> Hi @SteffenMath,; > ; > Welcome to SU2 (it seems it is your first PR), it looks like a good generalisation of the moving averages, I leave some small code comments below. As a general point does this averaging rely on fixed timesteps?; > ; > Cheers,; > Pedro. Hi @pcarruscag, . thanks for your quick reply and the usefull comments. I've pushed and updated version, that includes changes to your suggestions. ; Regarding your general question: The windowing approach is in theory not dependent on a fixed time-stepsize, however the current implementation relies on a fixed stepsize. This can be changed quite easily in the CWindowingTools.cpp file and the corresponding class, should there be demand. Best; Steffen",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/836#issuecomment-566524740:485,depend,dependent,485,https://su2code.github.io,https://github.com/su2code/SU2/pull/836#issuecomment-566524740,1,['depend'],['dependent']
Integrability,"> Hi and thank you for this PR, I think it will be really useful. I noticed that you removed several functions in the python wrapper, and also renamed others. This will break the compatibility with the fsi module. May I ask you why you had to remove it? We can maybe find a solution that keeps the possibility to use the fsi module as well. Hi Nicola! Are you asking about methods relating to number of vertices, global indices, coordinates, deformable marker tags, etc.? If so, we have not removed those and they are still available through the Python wrapper. These functions were relocated to [CDriverBase](https://github.com/su2code/SU2/blob/feature_pysu2_DEF/Common/include/drivers/CDriverBase.hpp) so they can be inherited by all other drivers. These changes should not break compatibility with the FSI module (aside from some function renaming).",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1300#issuecomment-1351900925:125,wrap,wrapper,125,https://su2code.github.io,https://github.com/su2code/SU2/pull/1300#issuecomment-1351900925,2,['wrap'],['wrapper']
Integrability,"> How should I update my branch with upstream/develop? Should I merge upstream/develop into my branch (and push to my fork on github)? Or may I rebase my branch on top of upstream/develop (and force push to my fork on github)?. Both ways are legit, feel free to use which one is easier for you [here](https://www.freecodecamp.org/news/the-ultimate-guide-to-git-merge-and-git-rebase/) a comparison between them. It depends on the taste of the developer. . > I assume I should add myself to the _Individual Contributors_ section of AUTHORS.md, is that correct?. Yes",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1951#issuecomment-1466144727:414,depend,depends,414,https://su2code.github.io,https://github.com/su2code/SU2/pull/1951#issuecomment-1466144727,2,['depend'],['depends']
Integrability,"> I don't known how the process to find the alpha that gives you a given CL works, but could the derivative not be obtained from this process? i.e. you could avoid the FD step entirely. It is a simple proportional controller that will change the angle of attack after a number of iterations depending on the difference between the current CL and the target CL. . So if the the option `ITER_DCL_DALPHA = 0` then it will do exactly what you suggest. It calculates the derivative based on the last update. The only problem with that is, there is no guarantee that the simulation at the previous update was converged, so the derivative might be incorrect. . But you are correct, I could just do a really tiny update (order of delta AoA ~10^-6) at the end and calculate the finite difference using that value. Let me try that and see if the gradients it calculates are reasonable, or if the update is too small and it gets clouded by numerical errors.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/780#issuecomment-539606698:291,depend,depending,291,https://su2code.github.io,https://github.com/su2code/SU2/pull/780#issuecomment-539606698,2,['depend'],['depending']
Integrability,"> I don't understand the question very well. The order of the points needs to be according to the VTK hexahedron http://www.princeton.edu/~efeibush/viscourse/vtk.pdf I can't visualize where you are getting that deformation, but when using an FFD box that does not include the entire design surface you need to be careful with the continuity of the deformation to prevent creating discontinuous steps. Mmmh I see. It looks like the blade elements are extending beyond the blade surface itself and, therefore, are cut by the FFD box even if the whole geometry appears to be included withing the FFD box domain. I solved the issue by defining an user-defined fixing plane (very cool option, btw). I experienced a similar situation with an internal flow over cylinder, too.; My question was whether this behavior was mesh-dependent or FFD box-dependent. I guess it is reasonable to say that mesh elements extension beyond the body which we're optimizing is causing this, however FFD continuity allows to keep this dummy shape deformation from happening. . Secondly, I had MAX DIFF = 0 because I couldn't understand your correction properly. I had to consider the righ-hand rule third component (_thumb_) pointing inside the FFD box for each of the surfaces we establish when attaching the FFD box (_each of those defined by the points listed in FFD_DEFINITION_). Then it worked perfectly.; Still, I don't understand why for some geometries we apply what discussed in the [tutorial](https://su2code.github.io/tutorials/Species_Transport/) and here it is the opposite. At least I know what to expect and how to fix it. If you could add an alert message in the next SU2 version, that would be much appreciated. > Well, it's the F-FFD week it seems :) https://www.cfd-online.com/Forums/su2/249879-when-use-su2_def-generate-ffd-box-i-can-not-get-ffd_surface_points.html. It's sunday: is the week ending or starting? ahah I guess we both stopped counting ;); As always, thank you very much for the time you're s",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/2025#issuecomment-1546805169:818,depend,dependent,818,https://su2code.github.io,https://github.com/su2code/SU2/issues/2025#issuecomment-1546805169,2,['depend'],['dependent']
Integrability,"> I get the idea but from the numerical standpoint this is an even worse idea than the way we do fluid-fluid interfaces. Additive decomposition of elliptic equations is not effective at all. Are you looking to model contact between multiple solid materials?. Hi Pedro. What do you mean by additive decomposition? And what do you mean by ""effective"" in this context? In terms of stability, the model converges rapidly, even when initializing one zone at a temperature far above that of the neighboring zone.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2152#issuecomment-1819331603:109,interface,interfaces,109,https://su2code.github.io,https://github.com/su2code/SU2/pull/2152#issuecomment-1819331603,1,['interface'],['interfaces']
Integrability,"> I get the idea but from the numerical standpoint this is an even worse idea than the way we do fluid-fluid interfaces. Additive decomposition of elliptic equations is not effective at all. Are you looking to model contact between multiple solid materials?. Yes, I'm looking to model the transfer of heat between multiple solid zones with different thermal properties. Eventually I'd like to model contact resistance of such interfaces as well, where the user could specify the contact resistance value of each solid-to-solid interface. This is something that me and Praharsh will be working on.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2152#issuecomment-1782996372:109,interface,interfaces,109,https://su2code.github.io,https://github.com/su2code/SU2/pull/2152#issuecomment-1782996372,3,['interface'],"['interface', 'interfaces']"
Integrability,"> I just found a heap buffer overflow in the interface code, mentioning it here in case it is related [#2246 (comment)](https://github.com/su2code/SU2/pull/2246#issuecomment-2034404720). I ran your test case with the fixes from #2246 and the address sanitizer, it still shows the behaviour that you describe and the address sanitizer did not detect anything else. So it's probably not related to the aforementioned overflow.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/2255#issuecomment-2042496683:45,interface,interface,45,https://su2code.github.io,https://github.com/su2code/SU2/issues/2255#issuecomment-2042496683,1,['interface'],['interface']
Integrability,> I see that the heat dependencies are currently being set in the adjoint fluid iteration and on the new adjoint heat iteration. . Thanks for the comment. Could you give me an example to what kind of dependencies you are referring to?,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/619#issuecomment-442874041:22,depend,dependencies,22,https://su2code.github.io,https://github.com/su2code/SU2/pull/619#issuecomment-442874041,2,['depend'],['dependencies']
Integrability,> I'll ignore the request for review the same way you ignored my questions shrug. Could you clarify your questions? I sent you a message on Slack.,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1757#issuecomment-1622300968:129,message,message,129,https://su2code.github.io,https://github.com/su2code/SU2/pull/1757#issuecomment-1622300968,1,['message'],['message']
Integrability,"> If the mesh is not moving, why are you rotating the search coordinates?. I'm so sorry for the belated response! I was trying to debug and test the new feature and to give a proper pull-request.; As for the question:; Because we are using rotating frame for rotor. In rotating frame we consider the rotating effect by adding source terms in governing equations so that the mesh movement is spared. But when we transfer data between rotor and stator for unsteady simulation, the rotor side has to be rotated to match the reality. The rotor is actually rotating, so as the flow phenomena, like rotor wakes passing through the interface. Otherwise, we will see non-rotating wakes in the stator frame of reference. Every time step, the matching grid points between two sides need to be updated as well.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2173#issuecomment-1951929669:625,interface,interface,625,https://su2code.github.io,https://github.com/su2code/SU2/pull/2173#issuecomment-1951929669,1,['interface'],['interface']
Integrability,"> If you are planning to touch the heat solver, might I suggest you, @bigfooted, @danielmayer, and me get together like the power rangers and do the scalar solver thing properwise without grafting code from 10 versions ago into develop?; > ; > The ideia would be to create a CFVMSolverBase (in the style of the one for flow solvers) to cover:; > ; > * Turbulence solvers;; > ; > * Heat solver;; > ; > * Radiation solver;; > ; > * General passive/active scalar solvers;; > ; > * Eventual transition solvers;; > ; > ; > The starting point would be the current base turbulence solver. I'm in. The heat solver should be easy to integrate into a generic framework if the framework provides a Laplacian/diffusion coefficient (which will then turn into thermal diffusivity). Apart from that, there's nothing very heat specific in the heat solver :)",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1226#issuecomment-793978226:624,integrat,integrate,624,https://su2code.github.io,https://github.com/su2code/SU2/pull/1226#issuecomment-793978226,1,['integrat'],['integrate']
Integrability,"> In the discrete adjoint we always to a dry run before the real recording, maybe that could be use to recompute the CFL at 0 overhead?. Isn't that what we were doing before? While I also generally wouldn't want to rely on file I/O, my issues with how we had it were ; 1) if the final CFL of the primal solver was large then even adapting in the dry run would have a much lower CFL, which resulted in super slow adjoint convergence making it a huge (or at least more than necessary) bottleneck in optimization/mesh adaptation; 2) sometimes I would get divergence when adapting in the dry run even with converged primal solutions. Storing the CFL would at least recreate the state at primal convergence, which should be stable if the CFL adaptation is reliable. But maybe this idea is better suited for the python wrapper where we could just keep everything in memory.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1036#issuecomment-739075301:813,wrap,wrapper,813,https://su2code.github.io,https://github.com/su2code/SU2/pull/1036#issuecomment-739075301,1,['wrap'],['wrapper']
Integrability,"> Is it possible for the fluid side to work index-based and the structural side as before?; > We are combining the cross terms manually and re-recording each step anyway... (Please rather say internal-based, or variable-based - both approaches are index-based, they differ in the way they are stored :-)). In principle, yes. One can have both at the same time. I'd have to think about it, sounds a bit messy to me right now to get it all consistent. One could also change `GetMultizone_Problem()` to `GetMultizone_Problem() && !GetFSI_Problem()` or similar at those places. Anyway, we know the reason for this problem, so I'll leave it up to you which way we go. > but it depends also a lot on what timing we are moving in. Yes.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/803#issuecomment-542224837:672,depend,depends,672,https://su2code.github.io,https://github.com/su2code/SU2/pull/803#issuecomment-542224837,1,['depend'],['depends']
Integrability,"> Just in case it is helpful, the Abseil library from Google is a nice way to use some C++14 and later features with only a C++11 requirement. We could consider integrating if it makes life much easier...; > ; > https://abseil.io. Thanks for pointing me to this library :) There was a project that was in dire need for such libraries. Well I'm still a newbie discovering the code. From what I can see, the whole code base is C-oriented (maybe even originating from Fortran??). But I would advise against integrating it (Maybe it's a bit of an overkill for the current state of SU2) because most devs won't actually use the features from c++17 (myself included) and we should be able to deal with the lack of make_unique and variable templates in c++11 :smile:. With that said, if you're planning on using more c++ features while rebuilding/extending the code base, it might be a very good idea to integrate it.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1058#issuecomment-670977781:161,integrat,integrating,161,https://su2code.github.io,https://github.com/su2code/SU2/issues/1058#issuecomment-670977781,3,['integrat'],"['integrate', 'integrating']"
Integrability,"> Merge pull request <a href=""https://github-redirect.dependabot.com/actions/upload-artifact/issues/297"">#297</a> from actions/dependabot/npm_and_yarn/ajv-6.12.6</li>; <li><a href=""https://github.com/actions/upload-artifact/commit/c26a7ba4b5dbaecea906fec3b7d2c0c86f1ccaba""><code>c26a7ba</code></a> Bump ajv from 6.11.0 to 6.12.6</li>; <li><a href=""https://github.com/actions/upload-artifact/commit/6ed6c729229a623bcb1fdd75903dc6e436b3d0a7""><code>6ed6c72</code></a> Merge pull request <a href=""https://github-redirect.dependabot.com/actions/upload-artifact/issues/303"">#303</a> from actions/dependabot/npm_and_yarn/yargs-parser-13.1.2</li>; <li><a href=""https://github.com/actions/upload-artifact/commit/2aeee267b2cb1f938c861a763b9770ee6e921dc3""><code>2aeee26</code></a> Bump yargs-parser from 13.1.1 to 13.1.2</li>; <li>Additional commits viewable in <a href=""https://github.com/actions/upload-artifact/compare/v1...v3"">compare view</a></li>; </ul>; </details>; <br />. [![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=actions/upload-artifact&package-manager=github_actions&previous-version=1&new-version=3)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores). Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`. [//]: # (dependabot-automerge-start); [//]: # (dependabot-automerge-end). ---. <details>; <summary>Dependabot commands and options</summary>; <br />. You can trigger Dependabot actions by commenting on this PR:; - `@dependabot rebase` will rebase this PR; - `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it; - `@dependabot merge` will merge this PR after your CI passes on it; - `@dependabot squash and merge` will squash and merge this PR after your CI passes on it; - `@dependab",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1756:4850,Depend,Dependabot,4850,https://su2code.github.io,https://github.com/su2code/SU2/pull/1756,2,"['Depend', 'depend']","['Dependabot', 'dependabot-badges']"
Integrability,"> Nice work already! If you click on 'Details' at the right of the failed Regression and Unit Testing cases you will see why they fail. I think one of the first things to do is go through these error messages ('variable may be used uninitialized', etc) and fix them so the regression tests will run. Thank you! I am in the middle of doing it. Hopefully, there are not that many issues.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1810#issuecomment-1308632788:200,message,messages,200,https://su2code.github.io,https://github.com/su2code/SU2/pull/1810#issuecomment-1308632788,1,['message'],['messages']
Integrability,"> Note that you need to checkout this branch `fix_2d_periodic_rotation` (it is not in `develop` yet). Hi Pedro,; I checked the files you sent but building SU2 from source provided some errors:. - _MinGW64_ files provided from SU2 official website are corrupted and the installation crashes; however, it is possible to install the software but the .exe file mentioned in the installation guide won't be present. ; - After building _meson.py_ , the ninja installation command was line typed and the following alert message appeared "" **ninja: fatal: chdir to 'build' - No such file or directory** "". On a different laptop (with different user, to avoid the same mistakes) the following ERROR came up after the mason.py command line:; "" **'meson.py' is not recognized as an internal or external command, operable program or batch file** "". I don't know if any other user might have experienced the same errors. ; Anyway, are the bugfix files you published already available in the pre-compiled version? ; In the meanwhile, I'll try to figure out this inconvenient. Thank you in advance.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1562#issuecomment-1069325722:513,message,message,513,https://su2code.github.io,https://github.com/su2code/SU2/issues/1562#issuecomment-1069325722,2,['message'],['message']
Integrability,"> OK, I see that some refactoring happened e.g. to the python wrapper in the meantime. What's the best way to resolve the conflicts? --> If I hit the Resolve conflicts button, there is nothing I can do. Sorry, mistakenly I removed your functions from conflicted files github somewhat allow me to solve the conflict but not added any new commit or revert it. Feel free to add them as an additional commit or revert my commit. . Normally if you have a merge conflict easiest way is to solve the conflict from your IDE. Pull the latest develop and merge to your branch, while merging you need to resolve the merge conflict. This was an easy case you only have a few conflict, git write conflicts ass. ```; >>> code from your branch; void xyz(); /* your implementation */; === develop; void xyz(); /* their implementation */; <<< ; ````; your need to replace that part with whichever code you want to keep or delete both of them etc. Then mark from the top right corner as resolved. I am sorry, I am a bit tired and did not identify your part of the code from the previous implementation since it is in the middle. I removed all of them and GitHub automatically push it. The required code pieces are these if I am not wrong. I am really sorry about the mistake. from `SU2_CFD/src/python_wrapper_structure.cpp`; ```cpp; ////////////////////////////////////////////////////////////////////////////////; /* Functions related to dynamic mesh */; ////////////////////////////////////////////////////////////////////////////////. void CDriver::SetTranslationRate(passivedouble xDot, passivedouble yDot, passivedouble zDot) {; if (rank == MASTER_NODE) {; cout << endl << "" Setting new translational velocity in x, y, z direction."";; }; for (iZone = 0; iZone < nZone; iZone++) {; config_container[iZone]->SetTranslation_Rate(0, xDot);; config_container[iZone]->SetTranslation_Rate(1, yDot);; config_container[iZone]->SetTranslation_Rate(2, zDot);; }; }. void CDriver::SetRotationRate(passivedouble rot_x, passived",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2024#issuecomment-1536008994:62,wrap,wrapper,62,https://su2code.github.io,https://github.com/su2code/SU2/pull/2024#issuecomment-1536008994,1,['wrap'],['wrapper']
Integrability,> Please run `preconfigure.py --help` and see if it addresses what you need. You mean the script in the `legacy` folder ? . It does not provide any flag to tell the configure script to use existing external dependencies.,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/2086#issuecomment-1645514795:207,depend,dependencies,207,https://su2code.github.io,https://github.com/su2code/SU2/issues/2086#issuecomment-1645514795,1,['depend'],['dependencies']
Integrability,"> Recently I was looking around the 3rd Annual SU2 conference web page(#1683), and I came across a presentation that seemed to be related to this PR.; > ; > [SU2conference](https://su2foundation.org/su2conference2022/) : Day2 The title: Implementation of γ-Re θ transition model within SU2: model validation and the presenter is Andrea Rausa.; > ; > I'd like to see the presentation above the presentation. The 2nd SU2 conference presentation video was uploaded. So, Is the 3rd SU2 conference video going to be uploaded?. Hi @sun5k, I'm sorry but I've just seen this message. I have uploaded a link to the presentation to my pull request. If you need anything then feel free to ask.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1751#issuecomment-1276056772:567,message,message,567,https://su2code.github.io,https://github.com/su2code/SU2/pull/1751#issuecomment-1276056772,1,['message'],['message']
Integrability,"> Regrading the results: Why do we not see the dip in skin friction coefficient for low Reynolds like we see in the paper of Rumsey? The paper shows that predicting this dip is a feature of the model, and it makes it different from the van Driest theory. I thought it depended on the grid resolution. The case of fine resolution grid(545 x 385), we can see ""dip"" in SU2 result(but relatively small). . ![image](https://github.com/su2code/SU2/assets/50565314/35739361-fa48-4710-aaea-97daf8ccf7cc); ![image](https://github.com/su2code/SU2/assets/50565314/50025c47-35c8-4480-aec1-1a3f17cf2342). From the ""Coarse-Zoom"" plot, The ""dip"" in coarse mesh(138 x 97) also appears in SU2, but it is really weak.; ![image](https://github.com/su2code/SU2/assets/50565314/0a1cd730-b321-47c9-aaee-1647bb696898); ![image](https://github.com/su2code/SU2/assets/50565314/0d60d026-ab8e-4cbf-b3ec-439ae67b5c96)",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2271#issuecomment-2089945113:268,depend,depended,268,https://su2code.github.io,https://github.com/su2code/SU2/pull/2271#issuecomment-2089945113,1,['depend'],['depended']
Integrability,"> So, really, obtaining the GridVel vector would just be an additional FD computation both for rigid movement and dynamic grids, and a lot of memory savings are possible. Hey @rsanfer, I think that is ok for this PR. After a short search I guess such a routine does not exist yet. Or can you point me to the right direction? ; Otherwise `CVolumetricMovement::ComputeGridVel_from_Coord(..)` would be a naming suggestion. What do think?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/766#issuecomment-524359236:253,rout,routine,253,https://su2code.github.io,https://github.com/su2code/SU2/pull/766#issuecomment-524359236,1,['rout'],['routine']
Integrability,"> Thank you Yes we plan on contributing more, this commit was more of a test run just to understand the process. I added Dr Yair Mor Yossef and myself as Authors, per your request. However I do not see a button anywhere that says merge pull request (even before changing Authors.md). It should be below this message,You should see the list of 'things that need to be green': Changes Approved, Conversations resolved, and then Checks passed. At the moment I am writing this, the checks are still running. Below the Checks you should see the button ""Squash and Merge"". Once all checks have passed, you can press that button.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2295#issuecomment-2221211665:308,message,message,308,https://su2code.github.io,https://github.com/su2code/SU2/pull/2295#issuecomment-2221211665,1,['message'],['message']
Integrability,"> Thank you for the feedback but for 99% of cases it is easier for users if we download the dependencies for them. The philosophy behind SU2 has always been to provide as much of a self contained package as possible. But this check will allow users to use external dependencies just fine, as long as they happen to use an external 0.61.1?. ... I am not entirely sure I understand the issue here. You want to make it *easier* for users by downloading the dependencies, so you make it harder if they went and got their own dependencies? If someone has gone to the effort of getting their own dependencies instead of using your documented meson.py, it would seem like that inherently means they are the 1% of use cases and you could probably just leave them to it. Is the issue rather that only Meson 0.61.1 has been tested to work?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1945#issuecomment-1450921338:92,depend,dependencies,92,https://su2code.github.io,https://github.com/su2code/SU2/issues/1945#issuecomment-1450921338,10,['depend'],['dependencies']
Integrability,"> Thanks for pointing that out. I dont think it is intentional. Maybe we can use this PR also to fix this ?. That depends on how atomic we want these PRs to be. This PR is largely a refactoring PR, and shouldn't change any underlying performance. But adding extra calculations on source terms and wall conditions might change the performance of the code. The two changes are completely compatible, so combining them wouldn't be hard. Nevertheless, I propose we keep these changes separate, so that the purpose of each PR is clear and easy to see. In my mind, two small PRs are easier to check and review than one large PR. @talbring @economon What do you think? One big PR or two small PRs?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/626#issuecomment-458177675:114,depend,depends,114,https://su2code.github.io,https://github.com/su2code/SU2/pull/626#issuecomment-458177675,2,['depend'],['depends']
Integrability,"> Thanks. Is it possible to target only some paths for formatting? I'm concerned about making life too difficult for developers, and we cannot break lines in some files because we parse them to generate some python code. Having only some paths we would then include more files over time until we cover everything. @pcarruscag ; The hook options of pre-commit hooks are [here](https://pre-commit.com/index.html#pre-commit-configyaml---hooks) . As far as I understand yes it is possible with the `files` option (AFAIK it is a regex pattern) another option is excluding some directories now I only exclude the `external` directory. . I look at the regression test the values seem okay but the test fails is this due to wrappers? If you tell me which directories should be omitted, I would adjust it quickly. In general, we can also disable column limit/wrapping from `clang-format` but it is probably not the best option.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1948#issuecomment-1455246335:716,wrap,wrappers,716,https://su2code.github.io,https://github.com/su2code/SU2/pull/1948#issuecomment-1455246335,2,['wrap'],"['wrappers', 'wrapping']"
Integrability,"> The ""int"" in ""intIndexBased"" is for internal then? Because its type is also int, easy mistake to make xD. Yes.. The name was the first one I gave that routine. It somehow made it through.. Now that I had to type it several times I'd love to have it changed. But anyway.. I'm a bit puzzled that it seems to be so easy but maybe it's just as simple as you said - new approach inside `CDiscAdjSolver` and old in `CDiscAdjFEASolver` (if I got that correctly?). That would come in handy for all further developments. Let's wait for the validation. I'll also do one with this branch for the CHT adjoints tomorrow, just to be sure.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/803#issuecomment-542360883:153,rout,routine,153,https://su2code.github.io,https://github.com/su2code/SU2/pull/803#issuecomment-542360883,2,['rout'],['routine']
Integrability,"> The FFD is defined in a way that makes all points fail the ""point inside box"" check, we need to improve the user-friendliness of this check, try using this order of the points for ffd setting. Applying the right-hand rule to the first 4 points must point into the center of the FFD 0.0134584, 0.0087787, -0.035265, 0.0108551, 0.00980938, -0.041096, 0.00734385, 0.013199, -0.0388281, 0.0114466, 0.0124845, -0.0326164, 0.0276521, 0.0238333, -0.0393685, 0.0240801, 0.0278683, -0.0456933, 0.0203954, 0.0303584, -0.0422846, 0.0246565, 0.0271419, -0.035573). I checked but it works only for this specific mesh. When I apply the same FFD box generation for the diffuser (following the righy-hand rule), I still obtaind MAX DIFF = 0. . In [this tutorial](https://su2code.github.io/tutorials/Species_Transport/), the FFD box points ordering is counterclockwise and I always performed my optimization with this kind of FFD box. I cannot understand if this behavior is mesh dependent or it just me not understanding the way you ordered your points therefore my impossibility to replicate your FFD attachment is the correct way. Also, could this issue be the origin of this weird shape deformation? . ![image](https://github.com/su2code/SU2/assets/96534491/c2ff9f0b-26db-426e-96c9-6157e2a20891)",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/2025#issuecomment-1546644391:965,depend,dependent,965,https://su2code.github.io,https://github.com/su2code/SU2/issues/2025#issuecomment-1546644391,1,['depend'],['dependent']
Integrability,"> The change log entries are categorized depending on the labels feature, fix, chore for new features, bug fixes and maintenance. If you don't want your PR listed, add the label no_changelog.; So remember to always add a label to your PR (maybe we will automate that soon)!. That describes it pretty well in my opinion. . I'll close this issue in a day or so... maybe someone had the same question and didn't read the PR description yet as well.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/822#issuecomment-555021114:41,depend,depending,41,https://su2code.github.io,https://github.com/su2code/SU2/issues/822#issuecomment-555021114,1,['depend'],['depending']
Integrability,"> The documentation looks great! (Answered a couple of my questions); > Can you give an example of linking to external libraries? e.g. BLAS; > For example I currently need:; > ; > ```; > export CPPFLAGS=""-DHAVE_LAPACK""; > export LDFLAGS=""-L$OPENBLAS/haswell_omp/lib""; > export LIBS=""-lopenblas -lgfortran -fopenmp""; > ```. Well you have two options. First, if the libraries can be found with `pkg-config`, the easiest is to just use ; ```; openblas = dependency('openblas') ; su2_deps += openblas; ```; Otherwise you'll have to declare the dependency with; ```; openblas = declare_dependency(...); su2_deps += openblas; ```; where the arguments for that routine are explained [here](https://mesonbuild.com/Reference-manual.html#declare_dependency)",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/745#issuecomment-517243186:451,depend,dependency,451,https://su2code.github.io,https://github.com/su2code/SU2/pull/745#issuecomment-517243186,3,"['depend', 'rout']","['dependency', 'routine']"
Integrability,"> The message will look like this:; > ; > ```; > The FFD box 'BLADE_BOX' is not properly defined. The first 4 points must be listed counter; > clockwise, such that applying the right-hand rule results in a vector into the box.; > This is according to the VTK hexahedron ordering:; > 7 +----+ 6 ; > /| /| ; > 4 +----+5| ; > |3+--|-+ 2 ; > |/ |/ ; > 0 +----+ 1 ; > The CCW convention also applies in 2D, where only the bottom face is specified.; > ```. Thank you Pedro. ; However, for the diffuser scenario, I set up the FFD Box applying the right-hand rule to both surfaces (point the third component to the inside FFD box volume from each surface):. ![Screenshot (162)](https://github.com/su2code/SU2/assets/96534491/c50d22e2-f1af-4285-97aa-9a800f0a3ac3). It worked perfectly and mesh is deforming but it is the opposite for the second sets of points compared to what you've done. I don't know if this can help you.; Feel free to attach the updated version of SU2, I'll be happy to test it (I'm currently running it on Ubuntu).",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/2025#issuecomment-1547731020:6,message,message,6,https://su2code.github.io,https://github.com/su2code/SU2/issues/2025#issuecomment-1547731020,1,['message'],['message']
Integrability,"> There are 2 cases in the testcases repository, both are using the Euler solver. Maybe also check if your case is running correctly with the settings from those testcases. Earlier, I was defining the mesh movement for the static zone as:. ` GRID_MOVEMENT= NONE `. since it was stationary. However, after checking the test cases, I found that the stator zones should also be defined as moving as. ```; GRID_MOVEMENT= RIGID_MOTION; MOTION_ORIGIN= 0.0 0.0 0.0; ROTATION_RATE = 0.0 0.0 0.0 ; ```. even though the mesh stays stationary. In that case, the unphysical flow results I presented earlier vanished. Earlier, I tried the cylinder test case with the inner zone having . ```; GRID_MOVEMENT= RIGID_MOTION; MOTION_ORIGIN= 0.0 0.0 0.0; ROTATION_RATE = 0.0 0.0 0.0; ```. and the outer zone having; ` GRID_MOVEMENT= NONE `. where the simulation gave physically viable results. I guess the zone interface may not accurately work if the `GRID_MOVEMENT` options of the neighbouring zones do not match while one of the zones has a non-zero movement. However, I have not simulated any other test cases. Also, the sliding_interface/rotating_cylinders test case diverges with the given .cfg files. At around the 775th time step, I received the following error message:. `SU2 has diverged (Residual > 10^20 detected). `. However, it works just fine if the simulations are done in subsonic flow (e.g. `MACH_NUMBER= 0.1`) while keeping the rest of the configuration the same.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/2255#issuecomment-2051695181:892,interface,interface,892,https://su2code.github.io,https://github.com/su2code/SU2/issues/2255#issuecomment-2051695181,2,"['interface', 'message']","['interface', 'message']"
Integrability,"> This displs problem with a single rank was also a bug we had in our MPI wrapper and you fixed right?. Yes, in 83723092eeb1c7cdd232952c3ddbafa0dedd16be.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1893#issuecomment-1397474150:74,wrap,wrapper,74,https://su2code.github.io,https://github.com/su2code/SU2/issues/1893#issuecomment-1397474150,1,['wrap'],['wrapper']
Integrability,"> To me it looks like the strange behaviour develops from the area in your mesh where the mesh density along the interface is visibily different (north and south of the image shown). I have encountered the same issue with a finer mesh where the mesh density along the interface is more or less uniform:. <img width=""600"" alt=""vawt_fineMesh"" src=""https://github.com/su2code/SU2/assets/81166192/4e6cc10c-676a-4cba-bcb1-a189c23cf599""> . --------------. > Are you able to reproduce this behaviour with any other cases, say a rotating cylinder perhaps?. I have tried a rotating 2D cylinder case with a similar setting. The only differences are that the time step is reduced to a tenth to prevent any numerical oscillations, and the mesh is generated by using Gmsh (for the VAWT case, it was Pointwise). The simulation diverged at the end. The discontinuity around the interface is quite apparent, especially on the upstream part. **Mesh:**; <img width=""600"" alt=""meshAll"" src=""https://github.com/su2code/SU2/assets/81166192/174d0bb7-d9fe-474d-8fea-39f81c215cd3""> ; <img width=""600"" alt=""meshClose"" src=""https://github.com/su2code/SU2/assets/81166192/12d35aa5-f167-455b-929a-0ee6e009e9af""> . **Axial velocity:**; <img width=""480"" alt=""cyl_velX"" src=""https://media1.giphy.com/media/v1.Y2lkPTc5MGI3NjExdmZtdHNoc2JraTRoZDdpbGozb3FyeDJ2ZTl1aXEwYm15YjVpaWN1ayZlcD12MV9pbnRlcm5hbF9naWZfYnlfaWQmY3Q9Zw/82Sq7bFaCUITTYRjns/giphy.gif""> ; **Eddy viscosity:**; <img width=""480"" alt=""cyl_eddyVisc"" src=""https://media4.giphy.com/media/v1.Y2lkPTc5MGI3NjExaHNoc3B2ZjJnOWt1c2JzYTRqazF1aGs5bmd0bmFoZjMxaDl1NmswMiZlcD12MV9pbnRlcm5hbF9naWZfYnlfaWQmY3Q9Zw/nD011ofucZmvRVcg7H/giphy.gif"">",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/2255#issuecomment-2041086476:113,interface,interface,113,https://su2code.github.io,https://github.com/su2code/SU2/issues/2255#issuecomment-2041086476,3,['interface'],['interface']
Integrability,"> Well I've taken a look at this but it's probably beyong my current programming skills. I only have experience with Python. Perhaps someone else could look at this? I still think it's a very helpful error message for new users and it sounds like it wouldn't be too much work to fix it. Thank you for having a look at the code, I am sure your skills are fine, this area of the code is just horribly complex. It is fixed in #824, it should have been a separate PR but I had changes to the NumericsPreprocessing in that PR already.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/842#issuecomment-569149689:206,message,message,206,https://su2code.github.io,https://github.com/su2code/SU2/issues/842#issuecomment-569149689,1,['message'],['message']
Integrability,"> You had I comment but I don't see it here. In any case, it's the total time to solution (same residual drop) that I expect will get worse. At constant CFL. Sorry for replying so late, I had to put this project on the back burner for a bit. I made a mistake in my previous analysis, which is why I removed the message. I now ran five simulations with only solid to solid CHT heat transfer with contact resistance. With each simulation I quadrupled the number of mesh elements and ran with a constant CFL. ; ![iterations](https://github.com/su2code/SU2/assets/38651601/3ccccb9c-8e36-4ac5-b323-4e4c364aa58e); The number of iterations required until convergence seems to scale linearly with the number of elements. However, this was not the case for total simulation time, which scales quadratically. ; ![simtime](https://github.com/su2code/SU2/assets/38651601/654dfbec-4603-4006-a4b6-577824a5be7c)",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2152#issuecomment-1870457004:311,message,message,311,https://su2code.github.io,https://github.com/su2code/SU2/pull/2152#issuecomment-1870457004,1,['message'],['message']
Integrability,"> You may want to remove the string based interface since it's known to be inneficient. When replacing the string-based with index-based look-up methods, the performance improves substantially. The figure below shows the average measured evaluation time (measured with chrono library) vs the number of output variables. It's clear that using index-based look-up methods results in reduced query time, as well as improved scaling. ![scaling_nVars](https://github.com/su2code/SU2/assets/38651601/31252439-ac6e-4f1b-82d4-e13a55d54c98)",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2214#issuecomment-1952521226:42,interface,interface,42,https://su2code.github.io,https://github.com/su2code/SU2/pull/2214#issuecomment-1952521226,2,['interface'],['interface']
Integrability,"> after you install msmpi, you should modify environment Variable of MSMPI_LIB64, you can type set MSMPI_LIB64=\%MSMPI_LIB64% in cmd or $env:MSMPI_LIB64=""\""+$env:MSMPI_LIB64 in powershell, then you can build code like ""python meson.py build -Denable-tecio=false -Denable-autodiff=true --prefix=D:\SU2\executable"", it will work this time;. @Zcaic Hi zcaic, . I tried this, but it still thow the same error. with message; ```; OSError: [WinError 123] 文件名、目录名或卷标语法不正确。: 'D:\\mingw-w64\\x86_64\\mingw64\\bin\\..\\lib\\gcc\\x86_64-w64-mingw32\\8.1.0\\lib\\C:\\Program Files (x86)\\Microsoft SDKs\\MPI\\Lib\\x64\\msmpi.a'; ```. ⬆️ just from `xxx\\8.1.0\\libC:\\Program...` to `xxx\\8.1.0\\libC:\\Program...`. Is that any solutions ?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1471#issuecomment-1190519582:411,message,message,411,https://su2code.github.io,https://github.com/su2code/SU2/issues/1471#issuecomment-1190519582,1,['message'],['message']
Integrability,"> harder to compare your current work to previous versions. `git diff --ignore-space-change` -> the diff to develop is empty. > Splitting files does a lot more for readability than just removing white spaces. True... removing white spaces actually doesn't do much for readability. And this is not about ""one or the other"". Restructuring files with one class per file + consistent naming + checking comments etc has a lot more value.... and can still be done nonethless. > fixing other (more important) formatting and commenting issues,. New Formatting issues wrt to the tab removal are not introduced, they are just different now ... and consistent. With tabs it depends on the IDE setup whether the formatting for every specific line is ok. Because tabs are prob introduced by people with different space-per-tab ratio. The benefit I see is the possibility of a ""once-and-for-all"" solution of this PR in combination with some kind of trailing-whitespaces+tabs-bot.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/808#issuecomment-548465503:663,depend,depends,663,https://su2code.github.io,https://github.com/su2code/SU2/pull/808#issuecomment-548465503,1,['depend'],['depends']
Integrability,"> in the viscous forces case, it should be ok to move the ""if Domain"" up and avoiding computations on halo points. Corrected in commit f6f986ec256a1c47199703ef6540145506dbbdc3 in #1362 similar to that, moving the code depending on the nearest neighbor access (i.e. YPlus calculation) down into an ""if Domain"" block. Note however that after this change YPlus is not computed on halo cells any more, which might be problematic e.g. for [CTurbSSTSolver::SetTurbVars_WF](https://github.com/su2code/SU2/blob/5655d91d7da192ad0b2a231f9ab5334c2235c10a/SU2_CFD/src/solvers/CTurbSSTSolver.cpp#L494).",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1430#issuecomment-966266235:218,depend,depending,218,https://su2code.github.io,https://github.com/su2code/SU2/issues/1430#issuecomment-966266235,1,['depend'],['depending']
Integrability,"> the off-PR comments can be integrated in this PR to clear that up a bit. If not that is OK as well. It's more than OK, the CHT implementation suffers a bit from being a single person's project.. you're very welcome to have a look over it! :-). > Can you add that option to the config_template.cfg together with that description, the valid inputs and the default. Actually I'm hesitating a bit adding it to the config template right now. I'd prefer to have `DIRECT_TEMPERATURE_ROBIN_HEATFLUX` as the default and ""hide"" the rest as developer's options for the moment.; The reason simply is that those different methods need to checked and validated against each other before we make them public.; E.g. I figured that for the incompressible CHT test case from the repo, there is a severe gap between the heatfluxes obtained from the ""averaged"" approach and the direct one, see below. ![heatflux_convergence](https://user-images.githubusercontent.com/22639394/72885197-bb9e4a80-3d07-11ea-9fad-a4d709dc511e.png). That needs to be cleared up first...",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/839#issuecomment-577108935:29,integrat,integrated,29,https://su2code.github.io,https://github.com/su2code/SU2/pull/839#issuecomment-577108935,2,['integrat'],['integrated']
Integrability,">; </ul>; <h2>New Contributors</h2>; <ul>; <li><a href=""https://github.com/FerranPares""><code>@​FerranPares</code></a> made their first contribution in <a href=""https://redirect.github.com/actions/setup-python/pull/628"">actions/setup-python#628</a></li>; <li><a href=""https://github.com/timfel""><code>@​timfel</code></a> made their first contribution in <a href=""https://redirect.github.com/actions/setup-python/pull/694"">actions/setup-python#694</a></li>; <li><a href=""https://github.com/jeffwidman""><code>@​jeffwidman</code></a> made their first contribution in <a href=""https://redirect.github.com/actions/setup-python/pull/724"">actions/setup-python#724</a></li>; </ul>; <p><strong>Full Changelog</strong>: <a href=""https://github.com/actions/setup-python/compare/v4...v4.8.0"">https://github.com/actions/setup-python/compare/v4...v4.8.0</a></p>; <h2>v4.7.1</h2>; <h2>What's Changed</h2>; <ul>; <li>Bump word-wrap from 1.2.3 to 1.2.4 by <a href=""https://github.com/dependabot""><code>@​dependabot</code></a> in <a href=""https://redirect.github.com/actions/setup-python/pull/702"">actions/setup-python#702</a></li>; <li>Add range validation for toml files by <a href=""https://github.com/dmitry-shibanov""><code>@​dmitry-shibanov</code></a> in <a href=""https://redirect.github.com/actions/setup-python/pull/726"">actions/setup-python#726</a></li>; </ul>; <p><strong>Full Changelog</strong>: <a href=""https://github.com/actions/setup-python/compare/v4...v4.7.1"">https://github.com/actions/setup-python/compare/v4...v4.7.1</a></p>; <h2>v4.7.0</h2>; <p>In scope of this release, the support for reading python version from pyproject.toml was added (<a href=""https://redirect.github.com/actions/setup-python/pull/669"">actions/setup-python#669</a>).</p>; <pre lang=""yaml""><code> - name: Setup Python; uses: actions/setup-python@v4; &lt;/tr&gt;&lt;/table&gt; ; </code></pre>; </blockquote>; <p>... (truncated)</p>; </details>; <details>; <summary>Commits</summary>; <ul>; <li><a href=""https://github.com/actions",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2233:3762,depend,dependabot,3762,https://su2code.github.io,https://github.com/su2code/SU2/pull/2233,2,['depend'],['dependabot']
Integrability,">; </ul>; <h3>3.0.7</h3>; <ul>; <li>Fixed <a href=""https://github-redirect.dependabot.com/actions/cache/issues/810"">#810</a> - download stuck issue. A new timeout is introduced in the download process to abort the download if it gets stuck and doesn't finish within an hour.</li>; </ul>; <h3>3.0.8</h3>; <ul>; <li>Fix zstd not working for windows on gnu tar in issues <a href=""https://github-redirect.dependabot.com/actions/cache/issues/888"">#888</a> and <a href=""https://github-redirect.dependabot.com/actions/cache/issues/891"">#891</a>.</li>; <li>Allowing users to provide a custom timeout as input for aborting download of a cache segment using an environment variable <code>SEGMENT_DOWNLOAD_TIMEOUT_MIN</code>. Default is 60 minutes.</li>; </ul>; </blockquote>; </details>; <details>; <summary>Commits</summary>; <ul>; <li><a href=""https://github.com/actions/cache/commit/fd5de65bc895cf536527842281bea11763fefd77""><code>fd5de65</code></a> Merge pull request <a href=""https://github-redirect.dependabot.com/actions/cache/issues/899"">#899</a> from actions/kotewar/download-and-compression-fix</li>; <li><a href=""https://github.com/actions/cache/commit/d49b6bb21d712fc1556f99339b8324b1603f7560""><code>d49b6bb</code></a> Updated actions/cache toolkit dep to v3.0.4</li>; <li><a href=""https://github.com/actions/cache/commit/a7c34adf76222e77931dedbf4a45b2e4648ced19""><code>a7c34ad</code></a> Merge pull request <a href=""https://github-redirect.dependabot.com/actions/cache/issues/894"">#894</a> from actions/kotewar/update-toolkit-version</li>; <li><a href=""https://github.com/actions/cache/commit/83394c99b7089b29ee6c302fad5e940df48c472a""><code>83394c9</code></a> Updated cache version in license file</li>; <li><a href=""https://github.com/actions/cache/commit/e839c25979e6ffdd90792d34de69d6a87d3016f6""><code>e839c25</code></a> Updated actions/cache version to 3.0.3</li>; <li><a href=""https://github.com/actions/cache/commit/33a923d660988a68affcd47de6bd6744193223a6""><code>33a923d</code></a> Added rel",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1755:7132,depend,dependabot,7132,https://su2code.github.io,https://github.com/su2code/SU2/pull/1755,1,['depend'],['dependabot']
Integrability,"></a> Merge pull request <a href=""https://github-redirect.dependabot.com/actions/upload-artifact/issues/320"">#320</a> from actions/dependabot/npm_and_yarn/ansi-regex-4.1.1</li>; <li><a href=""https://github.com/actions/upload-artifact/commit/189315d9106f43a2a8eb60836608bb96b1f69d77""><code>189315d</code></a> Bump ansi-regex from 4.1.0 to 4.1.1</li>; <li><a href=""https://github.com/actions/upload-artifact/commit/d159c2d80bf32e77611286e4d71bfe6d15208d88""><code>d159c2d</code></a> Merge pull request <a href=""https://github-redirect.dependabot.com/actions/upload-artifact/issues/297"">#297</a> from actions/dependabot/npm_and_yarn/ajv-6.12.6</li>; <li><a href=""https://github.com/actions/upload-artifact/commit/c26a7ba4b5dbaecea906fec3b7d2c0c86f1ccaba""><code>c26a7ba</code></a> Bump ajv from 6.11.0 to 6.12.6</li>; <li><a href=""https://github.com/actions/upload-artifact/commit/6ed6c729229a623bcb1fdd75903dc6e436b3d0a7""><code>6ed6c72</code></a> Merge pull request <a href=""https://github-redirect.dependabot.com/actions/upload-artifact/issues/303"">#303</a> from actions/dependabot/npm_and_yarn/yargs-parser-13.1.2</li>; <li><a href=""https://github.com/actions/upload-artifact/commit/2aeee267b2cb1f938c861a763b9770ee6e921dc3""><code>2aeee26</code></a> Bump yargs-parser from 13.1.1 to 13.1.2</li>; <li>Additional commits viewable in <a href=""https://github.com/actions/upload-artifact/compare/v1...v3"">compare view</a></li>; </ul>; </details>; <br />. [![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=actions/upload-artifact&package-manager=github_actions&previous-version=1&new-version=3)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores). Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`. [//]: # (dependabot-automerge-start); [//]: # (d",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1756:4394,depend,dependabot,4394,https://su2code.github.io,https://github.com/su2code/SU2/pull/1756,1,['depend'],['dependabot']
Integrability,"><a href=""https://github.com/actions/download-artifact/commit/7c63dfde29f42bb9cb0f61b67e54c91106a6586e""><code>7c63dfd</code></a> licensed</li>; <li><a href=""https://github.com/actions/download-artifact/commit/67d37cd34678091933f0a88cd1bb026171ea20d2""><code>67d37cd</code></a> Update toolkit</li>; <li><a href=""https://github.com/actions/download-artifact/commit/348754975ef0295bfa2c111cba996120cfdf8a5d""><code>3487549</code></a> Update release-new-action-version.yml (<a href=""https://redirect.github.com/actions/download-artifact/issues/292"">#292</a>)</li>; <li>Additional commits viewable in <a href=""https://github.com/actions/download-artifact/compare/v3...v4"">compare view</a></li>; </ul>; </details>; <br />. [![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=actions/download-artifact&package-manager=github_actions&previous-version=3&new-version=4)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores). Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`. [//]: # (dependabot-automerge-start); [//]: # (dependabot-automerge-end). ---. <details>; <summary>Dependabot commands and options</summary>; <br />. You can trigger Dependabot actions by commenting on this PR:; - `@dependabot rebase` will rebase this PR; - `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it; - `@dependabot merge` will merge this PR after your CI passes on it; - `@dependabot squash and merge` will squash and merge this PR after your CI passes on it; - `@dependabot cancel merge` will cancel a previously requested merge and block automerging; - `@dependabot reopen` will reopen this PR if it is closed; - `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by c",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2230:5039,depend,dependabot-security-updates,5039,https://su2code.github.io,https://github.com/su2code/SU2/pull/2230,1,['depend'],['dependabot-security-updates']
Integrability,"><code>905ae4a</code></a> Merge pull request <a href=""https://redirect.github.com/github/codeql-action/issues/2163"">#2163</a> from github/mergeback/v3.24.5-to-main-47b3d888</li>; <li><a href=""https://github.com/github/codeql-action/commit/6dab9f2356bef6518153087116230299a4ee6712""><code>6dab9f2</code></a> Update checked-in dependencies</li>; <li><a href=""https://github.com/github/codeql-action/commit/4d6d2bfeaa911ec12eaaa346f581bb7ab1dc238d""><code>4d6d2bf</code></a> Merge remote-tracking branch 'origin/releases/v3' into mergeback/v3.24.5-to-m...</li>; <li><a href=""https://github.com/github/codeql-action/commit/633baf86c326c07635ec576d7f97ae3f76871e4c""><code>633baf8</code></a> Merge pull request <a href=""https://redirect.github.com/github/codeql-action/issues/2165"">#2165</a> from github/nickfyson/fix-3.24.5-changelog</li>; <li>See full diff in <a href=""https://github.com/github/codeql-action/compare/v2...v3"">compare view</a></li>; </ul>; </details>; <br />. [![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=github/codeql-action&package-manager=github_actions&previous-version=2&new-version=3)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores). Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`. [//]: # (dependabot-automerge-start); [//]: # (dependabot-automerge-end). ---. <details>; <summary>Dependabot commands and options</summary>; <br />. You can trigger Dependabot actions by commenting on this PR:; - `@dependabot rebase` will rebase this PR; - `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it; - `@dependabot merge` will merge this PR after your CI passes on it; - `@dependabot squash and merge` will squash and merge this PR after your CI passes on it; - `@dependabot ",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2229:15285,Depend,Dependabot,15285,https://su2code.github.io,https://github.com/su2code/SU2/pull/2229,2,"['Depend', 'depend']","['Dependabot', 'dependabot-badges']"
Integrability,">Also the cht interface is ""just"" an isothermal boundary, any reason not to make this feature available for that?. No, I am not really familiar with the CHT part, but If it is same as an isothermal boundary, I can add this feature there as well. . Are you suggesting I make an option say MARKER_ROUGH and read in roughness values only for the corresponding marker? I went with the current input method to make sure only wall boundaries were given roughness heights but I suppose that can be ensured in other ways too. I will experiment with a few things and see which works the best. I will wait to see if there any suggestions in the meeting and then fix all the MPI stuff. . Thanks.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/877#issuecomment-630819942:14,interface,interface,14,https://su2code.github.io,https://github.com/su2code/SU2/pull/877#issuecomment-630819942,1,['interface'],['interface']
Integrability,"@0x7fffffff8fb8: 0, ; monitoring=false, config=0x209bc10); at ../Common/src/linear_algebra/CSysSolve.cpp:553; #9 0x0000000000da404a in CSysSolve<double>::Solve (this=0x23a2240, ; Jacobian=..., LinSysRes=..., LinSysSol=..., geometry=0x2105400, ; config=0x209bc10) at ../Common/src/linear_algebra/CSysSolve.cpp:883; #10 0x00000000007b69da in CHeatSolver::ImplicitEuler_Iteration (; this=0x23a1de0, geometry=0x2105400, solver_container=0x23a1d70, ; config=0x209bc10) at ../SU2_CFD/src/solvers/CHeatSolver.cpp:1528; #11 0x0000000000b5a666 in CIntegration::Time_Integration (this=0x270d150, ; geometry=0x2105400, solver_container=0x23a1d70, config=0x209bc10, ; iRKStep=0, RunTime_EqSystem=21); at ../SU2_CFD/src/integration/CIntegration.cpp:205; #12 0x00000000004a2973 in CSingleGridIntegration::SingleGrid_Iteration (; this=0x270d150, geometry=0x2005130, solver_container=0x20058c0, ; numerics_container=0x20063b0, config=0x1de0e00, RunTime_EqSystem=21, ; iZone=1, iInst=0); at ../SU2_CFD/src/integration/CSingleGridIntegration.cpp:73; ---Type <return> to continue, or q <return> to quit---; #13 0x00000000004e33e4 in CHeatIteration::Iterate (this=0x270d170, ; output=0x20f0cc0, integration=0x1e3efe0, geometry=0x2005130, ; solver=0x20058c0, numerics=0x20063b0, config=0x1de0e00, ; surface_movement=0x1de0e20, grid_movement=0x1de0e40, FFDBox=0x1de0e60, ; val_iZone=1, val_iInst=0) at ../SU2_CFD/src/iteration/CHeatIteration.cpp:40; #14 0x00000000004db2ba in CFluidIteration::Solve (this=0x270d170, ; output=0x20f0cc0, integration=0x1e3efe0, geometry=0x2005130, ; solver=0x20058c0, numerics=0x20063b0, config=0x1de0e00, ; surface_movement=0x1de0e20, grid_movement=0x1de0e40, FFDBox=0x1de0e60, ; val_iZone=1, val_iInst=0); at ../SU2_CFD/src/iteration/CFluidIteration.cpp:302; #15 0x000000000047adec in CMultizoneDriver::Run_GaussSeidel (this=0x2009490); at ../SU2_CFD/src/drivers/CMultizoneDriver.cpp:329; #16 0x000000000047a415 in CMultizoneDriver::StartSolver (this=0x2009490); at ../SU2_CFD/src/drivers/",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1241:7045,integrat,integration,7045,https://su2code.github.io,https://github.com/su2code/SU2/issues/1241,1,['integrat'],['integration']
Integrability,@EvertBunschoten even if the performance isn't great this is a pretty small change so I think we can merge it.; Do you have time to wrap it up and add a simple regression test?,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2152#issuecomment-2269672071:132,wrap,wrap,132,https://su2code.github.io,https://github.com/su2code/SU2/pull/2152#issuecomment-2269672071,2,['wrap'],['wrap']
Integrability,"@LaSerpe : thanks for the mesh!. @EduardoMolina : no huge rush on merging this one.. we should make sure everything is working ok. It would be very helpful if you can take a look at the Taylor-Green Vortex case again, like we looked at before, now that the parallelization is improved. The option to run is still there (TGV = YES), and I think you already have the meshes.. @pcarruscag : thanks for the comments (will address soon). Also, thanks for the reminder about the pre-accumulation. I disabled that since I had to rework the least squares routines for the periodic BC and I did not turn it back on. The variables may need to be adjusted now though",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/652#issuecomment-464599593:547,rout,routines,547,https://su2code.github.io,https://github.com/su2code/SU2/pull/652#issuecomment-464599593,1,['rout'],['routines']
Integrability,"@MarcoFossati @monika1387 @economon I've been working with Adrien Loseille from INRIA to bring Vic's old fork (referenced above) up to date with develop. Check out [feature_adap](https://github.com/su2code/SU2/tree/feature_adap). It uses goal-oriented (adjoint-based) adaptation instead of feature-based (just based on Mach or pressure) that Vic's fork used. Some things to note:; 1. It's currently only tested on Euler (it uses a Hessian of the Euler fluxes so it might work for NS/RANS, but probably not) (@WallyMaier and I also extended it to TNE2 in [feature_amgtne2](https://github.com/su2code/SU2/tree/feature_amgtne2) but the source terms are giving us trouble on adapted meshes); 2. It requires AD support since it uses the discrete adjoint to weigh the Euler flux Hessians; 3. I did all my testing with the AMG executable since pyAMG doesn't have all the features I currently need, but I just updated the branch to use pyAMG. I just tested the new interface with an airfoil and it seems to be working, but there might still be some bugs. You'll want to run mesh_adaptation_amg.py with the following options:; **ADAP_SIZES:** list of mesh complexities for each adaptive level. This is correlated to mesh size, but picking good values requires some playing around; **ADAP_SUBITE:** number of adaptations performed at each adaptive level. If set to (2,3) for example, it will run 2 adaptive iterations to try to reach ADAP_SIZES[0], and 3 iterations to try to reach ADAP_SIZES[1]; **ADAP_EXT_ITER:** number of iterations used by SU2_CFD and SU2_CFD_AD for each adaptive level; **ADAP_RESIDUAL_REDUCTION:** order of magnitude residual reduction for SU2_CFD and SU2_CFD_AD for each adaptive level; **ADAP_SENSOR:** currently only works for GOAL; **ADAP_HMAX:** maximum cell size (m); **ADAP_HMIN:** minimum cell size (m); **ADAP_HGRAD:** gradation coefficient (>1) used by AMG during mesh smoothing. A larger value corresponds to larger allowed gradient in mesh size. E.g. for the RAE2822 I used:;",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/606#issuecomment-504675574:957,interface,interface,957,https://su2code.github.io,https://github.com/su2code/SU2/issues/606#issuecomment-504675574,1,['interface'],['interface']
Integrability,"@Mick7: yep, I’ll look at that next. You may have noticed that the other routines for Loading and preparing adjacency are now general for any mesh reader, so all we need is to move the reader for the ASCII format into its own class. . @pcarruscag: there is at least one simple stretching function I have in some old code I can put in. Other elements would also be nice. It’s easy to cut the quads into tris (I have the same implementation for this in a python script) and hexas into tets. Might wait for a compelling need to add these features though, but I have no doubt we’ll add them",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/728#issuecomment-524179517:73,rout,routines,73,https://su2code.github.io,https://github.com/su2code/SU2/pull/728#issuecomment-524179517,2,['rout'],['routines']
Integrability,"@Nicola-Fonzi, you may as well want to consider importing as well the structural velocities in the interface from your external solver. That information is always available and gives a consistent definition of the displacement and velocity on both the grid motions and the interface for dynamic FSI problems -- not to mention simplifying the evaluation of the mesh adjoints.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1174#issuecomment-778326558:99,interface,interface,99,https://su2code.github.io,https://github.com/su2code/SU2/pull/1174#issuecomment-778326558,4,['interface'],['interface']
Integrability,"@TobiKattmann,; In the Airfoil_2D case, why are the surfaces detected as straight? Also the messages are a bit strange:; Boundary marker leading_edge is a single straight.; Boundary marker 0.0 is a single straight.; Boundary marker pressure_side is a single straight.; Boundary marker 0.0 is a single straight.; Boundary marker suction_side is a single straight.; Boundary marker 0.0 is a single straight.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/740#issuecomment-537167522:92,message,messages,92,https://su2code.github.io,https://github.com/su2code/SU2/pull/740#issuecomment-537167522,1,['message'],['messages']
Integrability,"@WallyMaier . I am able to get two forces since I have defined; `% Marker(s) of the surface where the functional (Cd, Cl, etc.) will be evaluated; MARKER_MONITORING= ( shell1, shell2 )`. For instance I see . `Surface name: shell1 ; Total CL... ; ... ; Surface name: shell2; Total CL...; ...`. But these coefficients are dependent on shape attributes like `REF_AREA= 0` and `REF_LENGTH= 0.5` (diameter of sphere being 1 unit). I was just curious if there's a way for the user to define `REF_LENGTH` or `REF_AREA` for two objects that are being monitored? At the moment these shapes are the same dimension but I was curious about what to do in the case they are not identical. Thanks a million!",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/788#issuecomment-531982235:320,depend,dependent,320,https://su2code.github.io,https://github.com/su2code/SU2/issues/788#issuecomment-531982235,1,['depend'],['dependent']
Integrability,"@Zcaic nope, I add '\\' before`'C:Program Files...` and the environment MSMPI_LIB64 finally like `\C:\Program Files (x86)\Microsoft SDKs\MPI\Lib\x64\`. I paste wrong error message before . the actual error message after I change the envirnment variable is ; from `xxx\\8.1.0\\libC:\\Program...` to `xxx\\8.1.0\\lib\\C:\\Program...` . just a more `\\`",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1471#issuecomment-1191551136:172,message,message,172,https://su2code.github.io,https://github.com/su2code/SU2/issues/1471#issuecomment-1191551136,2,['message'],['message']
Integrability,"@bigfooted @economon and @pcarruscag . I created separate repo to demonstrate what I'm after in the simplest way possible: [FoamScience/AutoRegistering-Cpp-Classes](https://github.com/FoamScience/AutoRegistering-Cpp-Classes/commits/master). > If you're going to check the code, check CSolver first, then CEulerSolver ... - Commit FoamScience/AutoRegistering-Cpp-Classes@20ca601 implements the concept for a single Factory.; - (Make-believe) Standard solver classes are compiled to a library; - A (Make-beleive) Custom solver class is compiled to its own shared library; - By default, the make program knows only about CEulerSolver (from standard solvers lib); - But if you pass in a library name (eg. libCCustomSolvers.so), it gets loaded, symbols pulled and the registration map for CSolver gets updated with the new Solver automatically. - But it would bloat the code if things went this way, so commit FoamScience/AutoRegistering-Cpp-Classes@380c052 isolates self-registration code into 3 macros to:; - Declare the registration map and associated members; - Define and initialize registration-related members on the base class; - Register a class. If you only care about the interface and not how the thing is implemented, commit 380c052 is your target.; I took care to document the important parts of the code, so, please, dig in and let me know what you think. At this point, integrating this with SU2 (and at what parts, and when) is your call but If you decide to do so, l will help.; > And yes, I wrote my own build script so I can have direct control over the compiler and the linker. **One last note: I used ""dlopen"", so you will have to compile the code on Linux I suppose.**",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1058#issuecomment-680962672:1178,interface,interface,1178,https://su2code.github.io,https://github.com/su2code/SU2/issues/1058#issuecomment-680962672,4,"['integrat', 'interface']","['integrating', 'interface']"
Integrability,"@bigfooted Has there ever been any discussion regarding implementation of a `START_TIME=` capability into the config file? After going through the code a bit, it looks like doing this would be a good starting point for implementing ability to adjust deltaT mid-runs, as in general the code presumes `TimeIter*deltaT` as being the current time. This would be problematic for unsteady restarts that have a varying timestep. Plus, this would allow one to, without using the Python wrapper, use a different timestep in the config file for an unsteady restart. It also may clear up some confusion to have an explicit option for this, as in #2071. It can maybe look something like:. % Start time for restarting unsteady simulations; % = -1 for default calculation (START_TIME=RESTART_ITER*TIME_STEP); START_TIME=-1. Then `CConfig::GetPhysicalTime` could be appropriately updated and used in-place of all locations in the code where a physical time is manually calculated.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2190#issuecomment-1870730956:478,wrap,wrapper,478,https://su2code.github.io,https://github.com/su2code/SU2/pull/2190#issuecomment-1870730956,2,['wrap'],['wrapper']
Integrability,"@clarkepede Sure, I will try to make an example to show .; So my problem is CD nozzle and I am running FEM-LES solver and exported; data in .csv and PARAVIEW type. Everything seems good its just I was unable; to visualize exported .vtk files (open but does not show me the final; result- stuck in just opening it - I am not sure if its paraview issue or; its 4 GB file which causing this error). So I tried to export my file using; Tecplot type option but unable to do so and getting this Bus error which I; never encountered earlier in SU2 ever (what is that error - YOUR; APPLICATION TERMINATED WITH THE EXIT STRING: Bus error (signal 7)). So; trying to dump my files in anyway to visualize them, since its FEM-LES; solver with DG scheme so files are pretty huge. Still let me know if I need; to send you an example. Attached .cfg file for reference. On Mon, Mar 16, 2020 at 6:13 PM Clark Pederson <notifications@github.com>; wrote:. > @monika1387 <https://github.com/monika1387> I'm sorry, I still don't; > understand. Do you have a minimal working example, where you can reproduce; > the problem you're having?; >; > Where does the error occur? In SU2_CFD? In SU2_SOL? In Paraview? In; > Tecplot? What's the specific error message? What's the context?; >; > —; > You are receiving this because you were mentioned.; > Reply to this email directly, view it on GitHub; > <https://github.com/su2code/SU2/issues/787#issuecomment-599781328>, or; > unsubscribe; > <https://github.com/notifications/unsubscribe-auth/ALJ3OXFU367WBC2BSOGLCILRH2P7VANCNFSM4IT7MM2A>; > .; >. -- ; *Thank you,*. *Monika Chauhan *. *Graduate Research Assistant, Doctoral Program*. *Aerospace and Ocean Engineering Dept, Virginia Tech,Blacksburg, VA 24061*; *Cell# 540-998-5012*",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/787#issuecomment-599793809:1227,message,message,1227,https://su2code.github.io,https://github.com/su2code/SU2/issues/787#issuecomment-599793809,1,['message'],['message']
Integrability,"@clarkpede : I would like to collaborate with you to wrap up the C++ implementation of this feature (I know you have already completed the Python version). If you have some time, can you please push your version to an internal branch of the SU2 repository?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/467#issuecomment-366410742:53,wrap,wrap,53,https://su2code.github.io,https://github.com/su2code/SU2/issues/467#issuecomment-366410742,1,['wrap'],['wrap']
Integrability,"@clarkpede : Thank you for the detailed post, and your hunch is likely correct. Unfortunately, the existing periodic BC implementation has some limitations due to how closely it is coupled to the old mesh partitioning routines during setup. Those original partitioning routines had become difficult to maintain or expand (very hard to make quick fixes), so they were rewritten from scratch in PR #513. Now, the periodic BC is also being rewritten cleanly (hopefully for the last time :) ). A prototype can be seen in feature_periodic that is already working for Euler problems, and the rest is in progress now. I am aware that several folks are in need of this, but know that a new version is coming.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/550#issuecomment-403600179:218,rout,routines,218,https://su2code.github.io,https://github.com/su2code/SU2/issues/550#issuecomment-403600179,2,['rout'],['routines']
Integrability,"@clarkpede @EduardoMolina : yep, the issue is that the periodic and MPI communications are tangled up together in the current implementation. The main issue occurs when there are periodic points that are also ghost nodes. . Ideally the periodic and MPI would be separated, and the periodic communications would happen first so that all periodic BCs are synchronized before trying to send across partitions. Right now, the comms are mixed, so sometimes, we send old data at periodic points to their matching pair, which then gets updated in a later MPI comm. Therefore, the second call you have added to the MPI resends the periodic update to with the correct data that was updated with MPI in the first call. I hope this is clear.. Anyway, please go with this change as you have it. All of the MPI and periodic comms will be replaced with a cleaner/separated version right after v6.2.0 (you can see what I am working on in feature_mpi_periodic). I will likely need some help testing that soon :).",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/649#issuecomment-463711280:353,synchroniz,synchronized,353,https://su2code.github.io,https://github.com/su2code/SU2/pull/649#issuecomment-463711280,2,['synchroniz'],['synchronized']
Integrability,"@clarkpede @economon In my never ending shuffling-code-around I noticed that we do this:; ```; for (unsigned short iPeriodic = 1; iPeriodic <= config->GetnMarker_Periodic()/2; iPeriodic++) {; InitiatePeriodicComms(geometry, config, iPeriodic, PERIODIC_IMPLICIT);; CompletePeriodicComms(geometry, config, iPeriodic, PERIODIC_IMPLICIT);; }; ```; ... for implicit iterations but not for explicit ones, the purpose of that comm is to:. /*--- Communicate the solution from our master set of periodic; nodes (from the linear solver perspective) to the passive; periodic nodes on the matching face. This is done at the; end of the iteration to synchronize the solution after the; linear solve. ---*/. I imagine the residual is constructed in a way that is consistent for the 2 periodic points, but... The explicit iteration implementation is now in CFVMFlowSolverBase.hpp::Explicit_Iteration_impl",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/763#issuecomment-770241115:637,synchroniz,synchronize,637,https://su2code.github.io,https://github.com/su2code/SU2/issues/763#issuecomment-770241115,1,['synchroniz'],['synchronize']
Integrability,"@clarkpede: thanks for organizing - it would be great to have your help on this topic. I'll let the others comment on the status of those branches, but in general, we have 2 major issues:. 1. Numerous bugs in the creation of the initial periodic BCs and new mesh file generated by SU2_MSH (ordering, inability to treat adjacent periodic markers, e.g., triply-periodic cube, and others). The branches above contain some fixes, and we should also merge in your #500 too. 2. Runtime issues in SU2_CFD, especially in parallel. Some of these issues may be fixed by the branches above, but the second step is to create the periodic BCs on the fly in SU2_CFD and integrate properly with the parallel partitioning, removing the need to call SU2_MSH as a pre-processing. Once the clean up in 1 is finished (a lot of this searching and matching can be reused), and after the fix_partitioning branch is merged, we can start on this task. I am planning to work on this part.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/431#issuecomment-358744678:656,integrat,integrate,656,https://su2code.github.io,https://github.com/su2code/SU2/issues/431#issuecomment-358744678,1,['integrat'],['integrate']
Integrability,"@drewkett, in version 7.0.3 the hybrid solver should work better, it auto detects if it is not able to get enough parallelization and switches to an alternative approach (there is a warning message when this happens).; The alternative approach (which at least on hex-dominant grids is not worse) can also be forced with `EDGE_COLORING_GROUP_SIZE= 0`. I've been daily driving this version of the code for the past month without issues, if you find any do let us know. Also, to some extent I replicated these findings of SU2 slowing down when using ethernet interconnects, the machines I have access to with this kind of network are shared so I did not try to benchmark (as repeatability is an issue) but it does slow down quite a bit as soon as more than one node is involved.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/894#issuecomment-606535236:190,message,message,190,https://su2code.github.io,https://github.com/su2code/SU2/issues/894#issuecomment-606535236,1,['message'],['message']
Integrability,"@economon Hi, I've been looking at the code and I can't figure out how to use the custom BCs. Is there an example, preferably with a time dependent custom BC you could point me to? Thanks!",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/690#issuecomment-504792989:138,depend,dependent,138,https://su2code.github.io,https://github.com/su2code/SU2/issues/690#issuecomment-504792989,1,['depend'],['dependent']
Integrability,"@economon Hm ok, that is strange. The one that it builds is the newest on github (v1.9). On linux meson finds ninja if it is in the root directory of the source code (which should be there after bootstrapping), apparently that is not the case on mac. Can you check whether it works when you add the source dir in your path variable? Like @davetaflin also mentioned for windows, on mac you can also directly generated xcode files (by adding `--backend=xcode` to the meson call), then ninja is not required. But anyway, I will look for a solution to that problem. @davetaflin Thanks for your impressions. I would say the documentation is decent. The important things are there, which helped me setting it up. But I guess that we can also ask the developers if we have some problems when adding more complex dependencies (however, we then also should ask ourselves whether we really want to add them in this case). But is the conclusion that you'd also prefer meson over automake ? :D",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/685#issuecomment-495117437:805,depend,dependencies,805,https://su2code.github.io,https://github.com/su2code/SU2/issues/685#issuecomment-495117437,1,['depend'],['dependencies']
Integrability,"@economon for prototyping, the changes proposed in #753 allow a container to be added to CVariable as a public member and thus directly accessible everywhere (one can even allocate only in some derived constructors, with no risk of leaking memory). For release-quality code I think encapsulation is desirable, that being said I'm not above declaring the client solver a friend of the specific CVariable it uses (also with the changes introduced, there would be a way to access member variables directly without moving them to base CVariable).; I like encapsulation not because of OOP principles but because of `GetVelocity(iDim)` instead of `GetPrimitive(iDim+1)`. As for overhead I think it is 0 as long as methods are inline: [example](https://gcc.godbolt.org/z/QXoExF); But in all honesty I also chose to change the CVariable interface as little as possible to make my life easier.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/716#issuecomment-520226075:829,interface,interface,829,https://su2code.github.io,https://github.com/su2code/SU2/issues/716#issuecomment-520226075,1,['interface'],['interface']
Integrability,"@economon the error will be fixed in the next commit. About the error message: I added the additional dashed line in order to immediately see the error message. . What about the following ?; ```; ...; ------------------------ Iteration Preprocessing ------------------------; Zone 1: Euler/Navier-Stokes/RANS fluid iteration. ------------------------- Solver Preprocessing --------------------------. Error in ""void CSolver::Read_SU2_Restart_Metadata(CGeometry*, CConfig*, bool, std::__cxx11::string)"": ; -------------------------------------------------------------------------; Unable to open SU2 restart file solution_flow.dat; ----------------------------- Exit Failure ------------------------------. ```. Unfortunately I cannot get the kind of SU2 module in the interface ...",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/473#issuecomment-350366632:70,message,message,70,https://su2code.github.io,https://github.com/su2code/SU2/pull/473#issuecomment-350366632,3,"['interface', 'message']","['interface', 'message']"
Integrability,"@economon, I expect to run into problems for grids containing around 250 million DOFs, depending a bit on how many variables you store in the restart file. We can definitely do this test with a dummy grid. As you added this to the RPSVV group, let's close this issue here.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/696#issuecomment-500965914:87,depend,depending,87,https://su2code.github.io,https://github.com/su2code/SU2/issues/696#issuecomment-500965914,1,['depend'],['depending']
Integrability,"@hlkline Thank you for your reply. We have been using SU2 for over 2 years and only recently we started looking at the code to understand some of the issues we were facing. To clarify I did not report it as a bug. I do understand that the flow variables obtained by Riemann invariants (line 10433) are set as the primitive variables for the boundary point. But when it came to the flux calculation I saw Jacobian_j and that triggered my question. I know that each scheme has a ComputeResidual routine but for this specific case what routine is being used? Is it the one in numerics_template.cpp? And I still do not understand why Jacobian_j should play a role in the flux calculation! I will be glad if you can kindly comment on it. Finally, can I now treat that this is a non-issue?. @fpalacios @oleburghardt @hlkline By the way don't you think Nu_c in line no 729 in numerics_direct_mean.cpp should be Nu_c = (1.0-Beta)*LamdaNeg? This was the other *probable* bug I was referring to within SU2 found in CUSP implementation. Regards; Suman",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/405#issuecomment-314971522:493,rout,routine,493,https://su2code.github.io,https://github.com/su2code/SU2/issues/405#issuecomment-314971522,2,['rout'],['routine']
Integrability,"@hlkline to answer the question about LAPACK and BLAS. Yes, the code compiles and runs without them, albeit very inefficiently. However, it is necessary to have this possibility because the routines of LAPACK and BLAS cannot be used in AD mode.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/565#issuecomment-419082199:190,rout,routines,190,https://su2code.github.io,https://github.com/su2code/SU2/pull/565#issuecomment-419082199,1,['rout'],['routines']
Integrability,"@j-signorelli afai see this PR would indeed cause `CDriverBase::GetMarkerNormalHeatFlux` to return nondimensional HeatFlux (compared to dimensional HeatFlux in current master) and could trouble people there ... but in doubt we can still dimensionalize in that function to keep the python wrapper as-is. (But there might be a cleaner solution to this). As I do not know much about the structural solver in SU2, I cannot say with confidence -> but from what I saw from skimming over CFEA(Base)Solver, config_template, and a handful of Elasticity cfg's there is no nondimensionalization for the structural solver (but somebody with better knowledge of that should educate me here). . Edit: The HeatSolver's HeatFlux written dimensional as well -> so I guess that should be changed as well ... or at least the whole thing should be consistent across solvers",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2109#issuecomment-1679756279:288,wrap,wrapper,288,https://su2code.github.io,https://github.com/su2code/SU2/pull/2109#issuecomment-1679756279,1,['wrap'],['wrapper']
Integrability,"@jayantmukho Thanks for taking the lead on that. This is long overdue ... I already talked to some people about that and the conclusion was often that we should get rid of the current python framework and rely solely on the in-memory python wrapper functionalities. From what I can tell this is also what you would suggest. I have some additional things to add here:. - We should keep in mind other things than ""just"" shape optimization problems.; - The surface parameterization should be more or less independent of all the other things, so that we can easily integrate other tools/methods. In a first step it might be a good idea to just put all the FFD stuff into a separate (c++) library with a python interface.; - As you already mentioned, I am currently working on a more general way of defining output fields and in particular also objective functions in #913. I will add more information to this PR soon. The new python implementation should, in theory, not need to know about the specific objective function, but rather just asks for the value and the (surface) gradient. ; - We have to expose more c++ classes/functions to python. Especially the config and the geometry. . Maybe I will add more stuff/ideas, but thats it for now. @clarkpede : We will probably keep most of the postprocessing stuff in c++, so don't worry about that at the moment.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/923#issuecomment-607708376:241,wrap,wrapper,241,https://su2code.github.io,https://github.com/su2code/SU2/pull/923#issuecomment-607708376,3,"['integrat', 'interface', 'wrap']","['integrate', 'interface', 'wrapper']"
Integrability,"@jayantmukho The fix in PR in #921 is done. Whereas the shape optimization restart did not work before, it does work now, at least on the two test cases I checked. The only thing missing is a regression test, to make sure bugs like that don't happen again. So I agree that it should be merged soon while the long-term refactoring occurs. As for post-processing, the objective function calculation can be quite complex in the use-cases Beckett and I have encountered. That's why it's run as a post-processing step, rather than updated continuously during runtime. But I agree that those types of changes can be limited to the C++ side of the code, with minimal changes to the python wrappers. So it may not be relevant to the current refactoring.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/923#issuecomment-607975492:682,wrap,wrappers,682,https://su2code.github.io,https://github.com/su2code/SU2/pull/923#issuecomment-607975492,1,['wrap'],['wrappers']
Integrability,@jayantmukho There is no general setting. But you can change the branch in .travis.yml to something else than `develop` or you add `[ci skip]` to the commit message. That will prevent travis from running automatically.,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/762#issuecomment-526082617:157,message,message,157,https://su2code.github.io,https://github.com/su2code/SU2/pull/762#issuecomment-526082617,1,['message'],['message']
Integrability,@jayantmukho You can modify the routine CFlowOutput::WriteVolume_Output() in order to disable the writing of the files.,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/780#issuecomment-540470903:32,rout,routine,32,https://su2code.github.io,https://github.com/su2code/SU2/pull/780#issuecomment-540470903,1,['rout'],['routine']
Integrability,"@jayantmukho, as @juanjosealonso indicated the verification efforts will be presented at the annual developers meeting. However, we may not have time to answer all questions there, so a tutorial may be a good thing to have. To answer your question about setting different initial conditions (as well as space and time dependent boundary conditions), yes you can do that with the class CUserDefinedSolution, although this was not the primary intention. The intention of these classes is to run a verification case, where you add source terms to the governing equations, such that a given solution is an exact solution to the modified equations. In this way you can do a thorough accuracy check of your discretization, as shown in the figures by @economon. Hope this answers your questions a bit.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/672#issuecomment-486683930:318,depend,dependent,318,https://su2code.github.io,https://github.com/su2code/SU2/pull/672#issuecomment-486683930,1,['depend'],['dependent']
Integrability,"@joshkellyjak The memory access violation described [here](https://github.com/su2code/SU2/pull/2246#issuecomment-2034404720) does not occur unconditionally, it depends on the test case. The iterations of the inner loop for `jSpan == 0` and `jSpan == nSpanDonor - 1` (that we removed in the fix) only have an effect if the if-conditions in the loop body evaluate to `true`. I checked this for the serial test cases in the test file's ""turbomachinery"" section. - `aachen_turbine_restart`: iterations both with `jSpan == 0` and `jSpan == nSpanDonor - 1` have an effect, the latter trigger the memory access violations; - `jones_turbocharger_restart`: some iterations with `jSpan == 0` have an effect, but iterations for larger `jSpan` usually overwrite the results; also, the case `jSpan == 0` does not trigger the memory access violation; - `axial_stage2D`: the problematic code is not executed by this test case; - `transonic_stator_restart`: the problematic code is not executed by this test case. I think these observations point to why only the Aachen test case had address sanitizer findings, and why only the results of the Aachen test case were affected by the attempted fix. The other test cases basically ""do not care"" whether we do the extra iterations. @alecappiello Regarding your earlier question about the restart file. Restart files are to some extent specific to the version of SU2 they were obtained with, in the sense that newer versions of SU2 can behave differently if they use an old restart file. I was wondering if this is the case here, too. If the memory access violation had manifested itself in the restart file, a version of SU2 with the memory access violation fixed could give different results. The observations above point to why only the Aachen test case is affected.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/2276#issuecomment-2127703507:160,depend,depends,160,https://su2code.github.io,https://github.com/su2code/SU2/issues/2276#issuecomment-2127703507,1,['depend'],['depends']
Integrability,@juanjosealonso Thanks for your response. I would definitely want to have a look at SUmb. If there is some documentation with the code and any published work that shows its capability will also help. > Both @vdweide and I can provide you with access to the appropriate routines / functions in SUmb. Please do provide me the access.,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/791#issuecomment-533796609:269,rout,routines,269,https://su2code.github.io,https://github.com/su2code/SU2/issues/791#issuecomment-533796609,1,['rout'],['routines']
Integrability,"@mheimgartner it would be helpful to compare the full residual history of the two regression Testcases before and after this last commit. (you prob already have the ""old"" histories and just have to do 2 new ones, you know best how the case beahaves etc). The commit I added will fail the regression test but I strongly believe the Pseudo-time update, convective and viscous Jacobians were wrong. . A reason this went unnoticed might be because the densities were O(1), so disregarding them in the solution update after the Linear Solver acts some kind of Relaxation Factor (which can be larger 1 depending whether density < or > 1). And I guess that could be fixed via CFL or this CFLReductionFactor anyway.; The Jacobians were taking with respect to Y alone, which is not correct. They have to be taken with respect with rho*Y, the transported variable imo. The conv Jacobian is arguably the most important one (and tested alone showed the biggest lift in residual improvement). ; I briefly checked the BC's and DualTimeRes for this Jacobian problem. For the BC's I found no hand-derived Jacobians and DualTimeRes seems ok (but is not used afaik).; Note that if one got a case to convergence(=> Res ~=0) the Jacobians and pseudo time derivative do not matter of course at that point. So comparing fully converged solution should show only marginal/no differences. A little test showed mild benefits after 10 iter with the C6_vel_inl (but only 5 LinSolIter ... aint nobody got time for 50). old; Iter| rms p ....... | rms u ....... | rms v ......... | rms scalar; 10| -5.707858| -4.397627| -4.445825| -5.408779|; new; 10| -5.701236| -4.405045| -4.460350| -5.473466|",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1332#issuecomment-906774447:596,depend,depending,596,https://su2code.github.io,https://github.com/su2code/SU2/pull/1332#issuecomment-906774447,1,['depend'],['depending']
Integrability,"@monika1387 I'm sorry, I still don't understand. Do you have a minimal working example, where you can reproduce the problem you're having?. Where does the error occur? In SU2_CFD? In SU2_SOL? In Paraview? In Tecplot? What's the specific error message? What's the context?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/787#issuecomment-599781328:243,message,message,243,https://su2code.github.io,https://github.com/su2code/SU2/issues/787#issuecomment-599781328,1,['message'],['message']
Integrability,"@oleburghardt @talbring This PR fixes the multicore heat-flux-sensitivitiy issues. Tested with the tutorial made by ole. Good job. I added a commit that fixes the error-message if you want to have tecplot-binary output but compiled using the --disable-tecio flag. It caused a compile time error ... it is behind a preprocessor statement #ifndef HAVE_TECIO, so this thing is only seen when using the --disable-tecio flag.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/798#issuecomment-541239861:169,message,message,169,https://su2code.github.io,https://github.com/su2code/SU2/pull/798#issuecomment-541239861,1,['message'],['message']
Integrability,"@oleburghardt, looks like this is taking a turn to also address primal CHT topics, but all comments on the main dish have been addressed. Can we merge this to shorten the dependency chain between PR's while you continue working on ironing out minor kinks?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/774#issuecomment-540513667:171,depend,dependency,171,https://su2code.github.io,https://github.com/su2code/SU2/pull/774#issuecomment-540513667,1,['depend'],['dependency']
Integrability,@patelha57 and @aa-g have been doing a lot of work with the python wrapper. Any advice you guys can share here?,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1672#issuecomment-1160527137:67,wrap,wrapper,67,https://su2code.github.io,https://github.com/su2code/SU2/issues/1672#issuecomment-1160527137,1,['wrap'],['wrapper']
Integrability,"@pcarruscag . Of course I can make the test case available. Could you give me your email address, such that I can send you a link?; The typical size of the matrices is problem dependent. You can profile the gemm calls by adding the -DPROFILE flag to the compiler options. Edwin",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/643#issuecomment-462245462:176,depend,dependent,176,https://su2code.github.io,https://github.com/su2code/SU2/issues/643#issuecomment-462245462,1,['depend'],['dependent']
Integrability,"@pcarruscag : as for header issues, I believe the consensus was also moving toward completely splitting the headers by class as well. It is true that then we may need to include multiple headers one-by-one, but in most cases, I think that we may just need to add a handful (rather than all), and this division should also help us avoid some of the dependencies during compile time. Open to more opinions on this, of course.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/583#issuecomment-501388653:348,depend,dependencies,348,https://su2code.github.io,https://github.com/su2code/SU2/issues/583#issuecomment-501388653,1,['depend'],['dependencies']
Integrability,"@pcarruscag ; I added a commit that improves the bad names for the new routines that we discussed #803. They should be more instructional now.; Moreover, at some places (default) function arguments are used instead of different functions, which hides the changes a bit and makes it more elegant.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/798#issuecomment-546376383:71,rout,routines,71,https://su2code.github.io,https://github.com/su2code/SU2/pull/798#issuecomment-546376383,1,['rout'],['routines']
Integrability,@pcarruscag All of the things look reasonable. The long-term goal would be to really have a generic interface for the linear solvers (at least that was my goal) so that we don't have to distinguish between mesh deformation and flow solution anymore inside of the CSysSolve class. Rather we pass objects for the solver and preconditioner and other options to the constructor. We can merge this in as soon as the tests pass.,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/650#issuecomment-474871738:100,interface,interface,100,https://su2code.github.io,https://github.com/su2code/SU2/pull/650#issuecomment-474871738,1,['interface'],['interface']
Integrability,@pcarruscag Do you want to add the dependencies to meson in this PR?,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/771#issuecomment-525350424:35,depend,dependencies,35,https://su2code.github.io,https://github.com/su2code/SU2/pull/771#issuecomment-525350424,1,['depend'],['dependencies']
Integrability,@pcarruscag For me its fine if you do it in a separate PR. @economon I also assume that is has something to do with how the interfaces are handled. We definitely have to check it. For now in PR #715 I enabled grid movement (in the config) also in fixed zones.,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/700#issuecomment-505477458:124,interface,interfaces,124,https://su2code.github.io,https://github.com/su2code/SU2/pull/700#issuecomment-505477458,1,['interface'],['interfaces']
Integrability,"@pcarruscag Hi Pedro. ; After a while we think the problem lies in the .dylib shared library file suffix. After manually changing suffix into _pysu2.so one can import/load the python module. We also tried to change meson.build file under SU2_PY/pysu2 to enforce output .so file: ; ``` ; swig_lib = shared_library(; '_pysu2',; cpp_source,; dependencies: [wrapper_deps, common_dep, su2_deps],; objects: [; su2_cfd_lib.extract_all_objects(),; su2_def_lib.extract_objects('drivers/CDeformationDriver.cpp'); ],; install: true,; include_directories : mpi4py_include,; cpp_args : [default_warning_flags,su2_cpp_args],; name_prefix : '',; name_suffix: 'so',; install_dir: 'bin'; ) ; ```; However, bug still remains while running python script that used pysu2/pysu2ad module. There is a MPI related issue after calling Postprocessing in pysu2: . ```; ------------------------- Solver Postprocessing -------------------------; Deleted CNumerics container.; Deleted CIntegration container.; Deleted CSolver container.; Deleted CIteration container.; Deleted CInterface container.; Deleted CGeometry container.; Deleted CFreeFormDefBox class.; Deleted CSurfaceMovement class.; Deleted CVolumetricMovement class.; Deleted CConfig container.; Deleted nInst container.; Deleted COutput class.; -------------------------------------------------------------------------; [DN0a22c803:22646] *** Process received signal ***; [DN0a22c803:22646] Signal: Segmentation fault: 11 (11); [DN0a22c803:22646] Signal code: (0); [DN0a22c803:22646] Failing at address: 0x0; [DN0a22c803:22646] *** End of error message ***; Segmentation fault: 11; ```; The exact crash location is: ; ```; Exception Type: EXC_BAD_ACCESS (SIGSEGV); Exception Codes: KERN_INVALID_ADDRESS at 0x0000737e9bdce5a2; Exception Codes: 0x0000000000000001, 0x0000737e9bdce5a2; Exception Note: EXC_CORPSE_NOTIFY. VM Region Info: 0x737e9bdce5a2 is not in any region. Bytes after previous region: 3842065106339 Bytes before following region: 13412496251486; REGION",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1606#issuecomment-1106125840:339,depend,dependencies,339,https://su2code.github.io,https://github.com/su2code/SU2/issues/1606#issuecomment-1106125840,1,['depend'],['dependencies']
Integrability,@pcarruscag I guess the last to changes were in the equivalent area computation routine so they shouldn't alter the result of 'discadj_incomp_cylinder' in hybrid_regression_AD? Why does it fail?. In the flamelet PR I am currently fixing all regression tests and conflicts and I noticed in one of the recent runs that hybrid_regression_AD failed for a case which I couldn't explain at all. Rerunning the regression tests without any code modification solved that problem... so there seems to be some non-deterministic behavior maybe. @jblueh have you noticed such behaviour over at #1294 ?,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1329#issuecomment-898476956:80,rout,routine,80,https://su2code.github.io,https://github.com/su2code/SU2/pull/1329#issuecomment-898476956,1,['rout'],['routine']
Integrability,"@pcarruscag I see, sorry I didn't realise that it still might be a mesh problem - I thought it was a memory issue from the error messages! Ok, I'll give it another try from scratch. If I understand correctly, amg only works with triangles and tetrahedrons, not pyramids or quads, is that right? Thanks again.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1156#issuecomment-757196402:129,message,messages,129,https://su2code.github.io,https://github.com/su2code/SU2/issues/1156#issuecomment-757196402,1,['message'],['messages']
Integrability,@pcarruscag Indeed both implementations are very similar. But this is the case for a lot of routines in CEulerSolver and CIncEulerSolver at the moment. We can think about introducing a common base class for both in the future to remove this code duplication. But for now there is no other way except for moving the implementation to CSolver which we should avoid in my opinion.,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/657#issuecomment-470926608:92,rout,routines,92,https://su2code.github.io,https://github.com/su2code/SU2/pull/657#issuecomment-470926608,1,['rout'],['routines']
Integrability,@pcarruscag LGTM! Thanks for putting in the work and abstracting more of the repeated routines.,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1375#issuecomment-923111383:86,rout,routines,86,https://su2code.github.io,https://github.com/su2code/SU2/pull/1375#issuecomment-923111383,1,['rout'],['routines']
Integrability,"@pcarruscag Thank you for your quick response. ; The quotes solve the `:` delimiter problem, but the `\\` issue still persists. The output message is pasted below. `; Error in ""void __cdecl CConfig::SetConfig_Parsing(class std::basic_istream<char,struct std::char_traits<char> > &)"": ; -------------------------------------------------------------------------; Line 75: Statement found after continuation character.; MESH_FILENAME: multiple values for type string; Line 77: Statement found after continuation character.; Line 78: Statement found after continuation character.; Line 79: Statement found after continuation character.; MESH_OUT_FILENAME: multiple values for type string; Line 81: Statement found after continuation character.; Line 82: Statement found after continuation character.; Line 83: Statement found after continuation character.; Line 84: Statement found after continuation character.; Line 85: Statement found after continuation character.; Line 86: Statement found after continuation character.; Line 87: Statement found after continuation character.; Line 88: Statement found after continuation character.; CONV_FILENAME: multiple values for type string. ------------------------------ Error Exit -------------------------------; `",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1658#issuecomment-1152818053:139,message,message,139,https://su2code.github.io,https://github.com/su2code/SU2/issues/1658#issuecomment-1152818053,1,['message'],['message']
Integrability,"@pcarruscag Thanks for the cleanup. I have made a [pull request](https://github.com/su2code/TestCases/pull/72) to update solution file for the test case. You have deleted codes that create WeightNF.dat so I have deleted it from python codes as well. (I tried to push as a suggestion but it didn't work as I expected). > I think nearfield was a kind of internal interface between two boundaries with the same points, so not a ""do nothing"" group of points but more like an actuator disk without any jump. I thought so when I was trying to make it work in ver.6 but, when I tried with mesh with two boundaries with the same points, it didn't work.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1351#issuecomment-899276864:361,interface,interface,361,https://su2code.github.io,https://github.com/su2code/SU2/pull/1351#issuecomment-899276864,1,['interface'],['interface']
Integrability,"@pcarruscag When running SU2_CFD_AD, the solver is DISC_ADJ_INC_RANS, and a number of initializations are skipped when we do not include this check. Most notably setting kind_limiter, which then leads to the 'conditional depends on uninitialized value' message from valgrind.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1550#issuecomment-1064448056:221,depend,depends,221,https://su2code.github.io,https://github.com/su2code/SU2/pull/1550#issuecomment-1064448056,2,"['depend', 'message']","['depends', 'message']"
Integrability,"@pcarruscag can you finalize this, both these dependabots are waiting for the formatting status, but there is nothing to format I guess.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2133#issuecomment-1825623707:46,depend,dependabots,46,https://su2code.github.io,https://github.com/su2code/SU2/pull/2133#issuecomment-1825623707,1,['depend'],['dependabots']
Integrability,"@pcarruscag just to clarify, are you suggesting switching some of the containers, e.g. `direct_iteration` and `direct_output`, to `unique_ptr`, or some of the vars causing the remaining leaks? Because for some of the remaining leaks, I think it's more of an issue with how we interface with CoDi/MeDi, or maybe even the tools themselves. For example, the destructor for `ExternalFunctionHelper` is; ```; ~ExternalFunctionHelper() {; if(!isTapeActive) {; delete data;; }; }; ```; but we only call `AD::EndExtFunc()` (which deletes `FuncHelper`) when the tape is active. Maybe there's a reason for this that @talbring can explain.; The leaks in MeDi all seem to stem from lines like; ```; h = new AMPI_Allgatherv_AdjointHandle<SENDTYPE, RECVTYPE>();; ```; and; ```; WaitHandle* waitH = new WaitHandle((ReverseFunction)AMPI_Isend_b_finish<DATATYPE>,; (ForwardFunction)AMPI_Isend_d<DATATYPE>, h);; ```; in ampiFunctions.hpp, where `h` and `waitH` seem to be defined locally and are never freed (at least from what I see, but @talbring can correct me if I'm wrong).",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/929#issuecomment-612122738:276,interface,interface,276,https://su2code.github.io,https://github.com/su2code/SU2/pull/929#issuecomment-612122738,1,['interface'],['interface']
Integrability,"@pcarruscag, I agree with you it will be hard to beat the MKL (running at 60 percent peak for most of the gemm calls for the DG-solver), but if you don't have any performance loss, that would already be nice, as it improves readability. Furthermore, the performance of the DG solver in combination with the discrete adjoint is horrible, because it relies on my very naive implementation of the matrix products. So it would already be something if we can get an improvement there, although we do not use the DG adjoint solver (yet). . For me the easiest way to test things out for the DG-solver would actually be in SU2 itself. @economon put some nice profiling routines in there for the gemm calls, which can be used without any additional work to test eigen. @pcarruscag (or somebody else), could you create a branch in which eigen is downloaded in the external directory? I think I can manage from there. Thanks,. Edwin",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/643#issuecomment-459952137:661,rout,routines,661,https://su2code.github.io,https://github.com/su2code/SU2/issues/643#issuecomment-459952137,1,['rout'],['routines']
Integrability,"@pcarruscag, my icpc version is 19.0.0.117 20180804....; The speed up is most likely also processor dependent. I ran this case on a Xeon(R) Gold 6140 CPU @ 2.30GHz with 24 Mb cache. Anyway, this is probably as fast as you can get the code to run with the current data structures. Maybe you can squeeze another 10 percent out of it, but that's most likely it. If we really want to speed things up, we need to change the data structures significantly (structure of arrays, a single array per variable, aligned memory allocation, padding arrays to a multiple of 8, no small loops over the number of dimensions, etc.) . As said before, I think we can get at least a factor of 4 in speed compared to the current version if we can use a significant number of SIMD loops, i.e. vectorization. However, I don't know how much support there is for a pretty much complete rewrite of the computational kernel. My two cents,. Edwin",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/716#issuecomment-524038333:100,depend,dependent,100,https://su2code.github.io,https://github.com/su2code/SU2/issues/716#issuecomment-524038333,1,['depend'],['dependent']
