quality_attribute,sentence,source,author,repo,version,id,keyword,matched_word,match_idx,wiki,url,total_similar,target_keywords,target_matched_words
Security,@smuzaffar Can you put the file somewhere? I don't have the right certificate to download the file.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7718#issuecomment-815146690:66,certificate,certificate,66,https://root.cern,https://github.com/root-project/root/issues/7718#issuecomment-815146690,1,['certificate'],['certificate']
Security,"@smuzaffar, the major difference is the llvm9 which ships with v6.24. Do we have access to ppc64le machine so that we can build ROOT and LLVM in debug mode to investigate?. cc: @davidlange6",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9297#issuecomment-971750338:81,access,access,81,https://root.cern,https://github.com/root-project/root/issues/9297#issuecomment-971750338,1,['access'],['access']
Security,@vepadulano . All information is in the description of the PR.; THttpServer implements different kind of http requests.; Most of them described here:. https://root.cern/root/htmldoc/guides/HttpServer/HttpServer.html#data-access-from-command-shell. This PR adds one more.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14614#issuecomment-1931846997:221,access,access-from-command-shell,221,https://root.cern,https://github.com/root-project/root/pull/14614#issuecomment-1931846997,2,['access'],['access-from-command-shell']
Security,"@vgvassilev . > In principle we do not need this injected include path when runtime_cxxmodules are on and we might just drop that part from dictionary generation. . Isn't the recent nlohmann_json issue contradicting this? These headers must be found at runtime, and that's happening either because they are found where they were during build time, or due to `ROOT_INCLUDE_PATH`. Unless ""this"" in ""we do not need this injected include path"" specifically refers to the ROOT build directory. I suppose we'd ""survive"" that because we anyway inject `$ROOTSYS/include` (with ROOTSYS really being ""install include dir or parent dir of location of libCore"") at runtime.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7108#issuecomment-968641012:49,inject,injected,49,https://root.cern,https://github.com/root-project/root/issues/7108#issuecomment-968641012,3,['inject'],"['inject', 'injected']"
Security,@vgvassilev Do we actually have any tests that checks that things still work if the files used to produce the pcm (or the pch) are gone and/or not longer accessible? (i.e. the test framework would have to explicitly hides/move/removes some files to achieve this).,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10633#issuecomment-1138843195:154,access,accessible,154,https://root.cern,https://github.com/root-project/root/pull/10633#issuecomment-1138843195,1,['access'],['accessible']
Security,"@vgvassilev Great!. For performances, it looks like you lack a commit from the branch https://github.com/ChuanqiXu9/root/commits/chuanqi_pr83233/, which tries to reduce the time we calculating the ODR Hash.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14495#issuecomment-1978574202:201,Hash,Hash,201,https://root.cern,https://github.com/root-project/root/pull/14495#issuecomment-1978574202,1,['Hash'],['Hash']
Security,@vgvassilev I had sent you instruction to access ppc64le machine. Were you able connect and test?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9297#issuecomment-979434914:42,access,access,42,https://root.cern,https://github.com/root-project/root/issues/9297#issuecomment-979434914,1,['access'],['access']
Security,"@vgvassilev I have updated the PR to include a similar patch for the SourceManager and at least the trivial test seems to work fine, including a nice 9MB reduction in memory allocations. I am now testing with the ALICE analysis framework. I have also done a few of the cleanups, and it now only exposes an ""expand"" interface (basically resize without shrinking). AFAICT, it's not worth to implement the full ""resize"" functionality, given it's complicated and at least the places I fixed never shrink. I think also the calloc approach might not be a good idea given realloc does not guarantee that the memory is zeroed and besides that page ranges might be a tad too big for vector of pointers and so on. I would put aside that idea, at least for now. My current plan:. * Verify with larger tests using ALICE analysis and asynchronous reconstruction.; * Unify the two PagedVector implementations I currently have (one for ASTReader and one for SourceManager).; * Use fixed size ranges, so that I can get rid of the ranges in my internal index and just keep where each page was allocated.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13000#issuecomment-1717257305:295,expose,exposes,295,https://root.cern,https://github.com/root-project/root/issues/13000#issuecomment-1717257305,1,['expose'],['exposes']
Security,"@vgvassilev In theory, everybody with commit access can review and approve patches. In practice Lang's commits didn't touch the instruction selection, and I'd really prefer to get feedback from an expert on this. I'll ping the patch probably tomorrow, people might have been off last week.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7757#issuecomment-813881052:45,access,access,45,https://root.cern,https://github.com/root-project/root/pull/7757#issuecomment-813881052,2,['access'],['access']
Security,"@vgvassilev It runs in jail, I could pack it up in an image, but you'd need FreeBSD 14 to run it - but then it would be much less work to just start the process directly there sinceit's just a completely fresh vanilla installation (plus a few binary packages); If the problem is interesting enough I could give you access to the jail via a reverse ssh tunnel or so as I don't have a public ip. We'd need a proxy though, there seem to be some free public ones but I never used those.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14492#issuecomment-1919533447:315,access,access,315,https://root.cern,https://github.com/root-project/root/issues/14492#issuecomment-1919533447,1,['access'],['access']
Security,"@vgvassilev OK, so Cling is trying to access ""C:\\Windows\\bootstat.dat"" to see if it's a dynamic library (?!?!?!) and obviously fails. BTW, is Cling trying to open all possible files in the system PATH to search DLLs, whatever their extension is? This is not going to work on Windows...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6606#issuecomment-814656741:38,access,access,38,https://root.cern,https://github.com/root-project/root/pull/6606#issuecomment-814656741,1,['access'],['access']
Security,"@vgvassilev do you object to me merging? I'd want to see this exposed to users earlier rather than later, to hear feedback before we tag v6.26. I have opened an issue https://github.com/root-project/root/issues/9312 to keep track.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9301#issuecomment-972998223:62,expose,exposed,62,https://root.cern,https://github.com/root-project/root/pull/9301#issuecomment-972998223,2,['expose'],['exposed']
Security,"@will-cern Given that my idea didn't work, can we clean up the commit history using an interactive rebase or `git reset --hard <commit-hash>` to make the two extra commits disappear? It's safe to force-push to your current branch, so we merge only the first commit.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11313#issuecomment-1237203518:135,hash,hash,135,https://root.cern,https://github.com/root-project/root/pull/11313#issuecomment-1237203518,1,['hash'],['hash']
Security,"@wmyyy I just checked and I have the ""C++ Address Sanitizer"" component in Visual studio.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9445#issuecomment-1018399640:50,Sanitiz,Sanitizer,50,https://root.cern,https://github.com/root-project/root/issues/9445#issuecomment-1018399640,1,['Sanitiz'],['Sanitizer']
Security,"A compilable TTreeReader-only repro:. ```cpp; #include <TTreeReader.h>; #include <TTreeReaderValue.h>; #include <TFile.h>; #include <TTree.h>; #include <TROOT.h>; #include <string>; #include <iostream>. void MakeTree(); {; TFile f(""f.root"", ""recreate"");; TTree t(""t"", ""t"");; std::string s(""foo"");; t.Branch(""s"", &s);; t.Fill();; f.Write();; f.Close();; }. int main() {; MakeTree();. TFile f(""f.root"");; TTreeReader r(""t"", &f);; TTreeReaderValue<std::string> rv(r, ""s"");. gROOT->GetType(""std::string""); // this is what breaks it. while (r.Next()); std::cout << *rv << '\n';. return 0;; }; ```. This prints:. ```; Error in <TTreeReaderValueBase::CreateProxy()>: The branch s contains data of type string. It cannot be accessed by a TTreeReaderValue<string>; ```. The difference between runs with/without the `GetType(""std::string"")` seems to be that at the following line `fDict != branchActualType` when `GetType` is called, while `fDict == branchActualType` in the sane case. I did not have time to go deeper. https://github.com/root-project/root/blob/bbe45e9a9cee3adce3843225e1d4fc82c95bdb17/tree/treeplayer/src/TTreeReaderValue.cxx#L557",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7169#issuecomment-776878698:716,access,accessed,716,https://root.cern,https://github.com/root-project/root/issues/7169#issuecomment-776878698,1,['access'],['accessed']
Security,"A new `RooStringView` is introduced as a copy-free drop-in replacement for `const char*` in public RooFit interfaces, which also accepts a `std::string`. So far, this new `RooStringView` is used in the RooWorkspace accessors, and also in the dataset classes as it's a superior solution over using `std::string` view, which is not guaranteed to be null-terminated and needs specific preprocessor macros for the C++ case.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9747:215,access,accessors,215,https://root.cern,https://github.com/root-project/root/pull/9747,1,['access'],['accessors']
Security,"A number of changes, split into multiple commits:; * `RProjectedFields` moves to `Internal` and `GetFieldZero()` is not `const` (plus one fix to take references instead of pointers to `RNTupleModel`). The projected fields of a `RNTupleModel` can be accessed via `Internal::GetProjectedFieldsFromModel()`.; * A new `Internal::GetFieldZeroFromModel()` is used to get the `RFieldZero` also from a frozen model.; * `RNTupleModel::GetFieldZero()` is split into `GetConstFieldZero()`, which can always be called, and `GetMutableFieldZero()`, which is only allowed for unfrozen models.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16714:249,access,accessed,249,https://root.cern,https://github.com/root-project/root/pull/16714,1,['access'],['accessed']
Security,"A priori Python code is protected by the GIL, so this access wouldn't be an issue for threaded code (GIL release is ever only on the actual call into C++, not on any setup code to reach that point). Additionally, this is a workaround for ROOT/meta's buggy handling of enums. Since that is now fixed, this particular workaround is no longer necessary and can simply be removed.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6566#issuecomment-704347919:54,access,access,54,https://root.cern,https://github.com/root-project/root/issues/6566#issuecomment-704347919,2,['access'],['access']
Security,"A recent refactoring in RDF introduced an incompatibility with gcc; 7.5.0: clang and that gcc version disagree on the address of the; std::map argument passed to InitColumnReaders.; RCustomColumn<...>::InitSlot, the _jitted_ caller, sees the correct; address, but InitColumnReaders<...>, the _compiled_ callee, sees a; different address. For reasons known only to gcc 7.5.0, ~~moving the first function; argument to the last position~~ reducing the number of function; arguments (by aggregating some of them in a helper struct) resolves; the ABI incompatibility.; Valgrind could see an access to invalid memory before, and it does; not anymore. This should fix [this crash](https://lcgapp-services.cern.ch/root-jenkins/view/conda/job/conda-nightlies/94/testReport/junit/projectroot.root/dataframe/roottest_root_dataframe_test_snapshot/) in the conda nightly builds and [these test failures](https://lcgapp-services.cern.ch/root-jenkins/view/ROOT%20Nightly/job/root-nightly-master/LABEL=ROOT-ubuntu18.04,SPEC=nortcxxmod,V=master/2614/) in ROOT's nightlies on ubuntu 18.04.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6231:586,access,access,586,https://root.cern,https://github.com/root-project/root/pull/6231,1,['access'],['access']
Security,"A set of, hopefully, non-controversial changes to some roofit classes to allow certain data members to be accessed publicly.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12030:106,access,accessed,106,https://root.cern,https://github.com/root-project/root/pull/12030,1,['access'],['accessed']
Security,A-3.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/f5ead794.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/e523eeaa.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/PK-Grid-2007.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/e523eeaa.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/38f7145f.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/PK-Grid-2007.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/38f7145f.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/617ff41b.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/67707166.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/67707166.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/QuoVadis-Grid-ICA-G2.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/DigiCertGridTrustCA-Classic.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/DigiCertGridTrustCA-Classic.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/MYIFAM.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/PKIUNAMgrid.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/DigiCertGridTrustCA-Classic.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/QuoVadis-Grid-ICA-G2.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/MYIFAM.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/KEK.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/DigiCertGridTrustCA-Classic.signing_policy' from CURLOPT_CAPATH; * failed to load,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8092#issuecomment-840048181:26330,secur,security,26330,https://root.cern,https://github.com/root-project/root/issues/8092#issuecomment-840048181,2,"['certificate', 'secur']","['certificates', 'security']"
Security,A.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/84c78b97.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/8dd53007.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/DigitalTrustIGTFCA.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/ef7d3e44.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/84c78b97.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/ef7d3e44.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/530f7122.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/9c979c2b.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/UKeScienceCA-2B.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/9c979c2b.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/62c4a178.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/a603ba9c.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/8dd53007.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/943fd5f3.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/DigiCertGridCA-1G2-Classic-2015.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/DigitalTrustSecureCAG4-runbytheissuer.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/DigiCertGridCA-1G2-Classic-2015.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/DigitalTrustSecureCAG4-runbytheissuer.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/DigiCertGridCA-1G2-Classic-2015.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/d41ec82f.nam,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8092#issuecomment-840048181:14401,secur,security,14401,https://root.cern,https://github.com/root-project/root/issues/8092#issuecomment-840048181,2,"['certificate', 'secur']","['certificates', 'security']"
Security,"ALICE has reported regular crashes due to MT unsafe access in `TDirectory::RegisterGDirectory`. Example backtrace:. ```. ===========================================================; There was a crash.; This is the entire stack trace of all threads:; ===========================================================. Thread 6 (Thread 0x7ff42998d700 (LWP 56550) ""o2-sim-hit-merg""):; #0 0x00007ff44b42eef6 in longest_match () from /home/aliperf/aliperf_workspace/sw/slc7_x86-64/zlib/v1.2.8-local3/lib/libz.so.1; #1 0x00007ff44b42fd58 in deflate_fast () from /home/aliperf/aliperf_workspace/sw/slc7_x86-64/zlib/v1.2.8-local3/lib/libz.so.1; #2 0x00007ff44b430822 in deflate () from /home/aliperf/aliperf_workspace/sw/slc7_x86-64/zlib/v1.2.8-local3/lib/libz.so.1; #3 0x00007ff447cbe8a5 in R__zipZLIB (irep=0x7ff4299869a8, tgt=0x7ff3c94c924f ""ZL\b\177\272"", tgtsize=0x7ff4299869ac, src=0x7ff4299868c0 ""\177"", srcsize=0x7ff4299869ac, cxlevel=<optimized out>) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/core/zip/src/RZip.cxx:213; #4 R__zipMultipleAlgorithm (compressionAlgorithm=<optimized out>, irep=0x7ff4299869a8, tgt=0x7ff3c94c924f ""ZL\b\177\272"", tgtsize=0x7ff4299869ac, src=0x7ff4299868c0 ""\177"", srcsize=0x7ff4299869ac, cxlevel=32756) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/core/zip/src/RZip.cxx:109; #5 R__zipMultipleAlgorithm (cxlevel=cxlevel; entry=1, srcsize=srcsize; entry=0x7ff4299869ac, src=src; entry=0x7ff3d000007f ""\300Ro\211\300=\200I\300>\277\341\300D'\254\300F\343\016\300Ix\232\300K\333^\300M\340!\300O\255T\300P\320\344\300Q\254\250\300<\225B\300S,g\300S\313\061\300Tf\250\300TӾ\300U.\b\300U\027\\\300T}d\300S\200\344\300R\220\234\300QT}\300D\241\221\300V\a\360\300U\246\060\300S; \300\300QV\026\300OE\345\300M\020\314\300J\365\f\300I(D\300G\250X\300FE6\300P\r\376\300B\240\300\300; zV\300>\225\324\300=\036\206\300<8t\300;\252d\300;v\376\300;\210w\300;\336J\300HǬ\300\071\322+\300:\205\232\300;\231H\300<\367\a\300=\350\252\300?"", <inco",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8931:52,access,access,52,https://root.cern,https://github.com/root-project/root/issues/8931,1,['access'],['access']
Security,APATH; * failed to load '/etc/grid-security/certificates/DigiCertAssuredIDRootCA-Root.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/CESNET-CA-Root.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/DigiCertAssuredIDRootCA-Root.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/727146a8.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/b1159c4c.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/b1159c4c.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/727146a8.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/04f60c28.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/b4278411.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/04f60c28.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/CESNET-CA-Root.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/USERTrustECCCertificationAuthority.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/7ed47087.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/USERTrustECCCertificationAuthority.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/DigiCertGridRootCA-Root.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/USERTrustECCCertificationAuthority.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/CESNET-CA-Root.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/DigiCertGridRootCA-Root.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/USERTrustECCCertificationAuthority.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8092#issuecomment-840048181:2717,secur,security,2717,https://root.cern,https://github.com/root-project/root/issues/8092#issuecomment-840048181,2,"['certificate', 'secur']","['certificates', 'security']"
Security,APATH; * failed to load '/etc/grid-security/certificates/KEK.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/TERENA-eScience-SSL-CA-3.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/633dc6a4.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/TERENA-eScience-SSL-CA-3.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/QuoVadis-Grid-ICA-G2.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/58b08cb5.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/TERENA-eScience-SSL-CA-3.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/f5ead794.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/e523eeaa.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/PK-Grid-2007.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/e523eeaa.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/38f7145f.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/PK-Grid-2007.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/38f7145f.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/617ff41b.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/67707166.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/67707166.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/QuoVadis-Grid-ICA-G2.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/DigiCertGridTrustCA-Classic.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/DigiCertGridTrustCA-Classic.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/cert,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8092#issuecomment-840048181:25666,secur,security,25666,https://root.cern,https://github.com/root-project/root/issues/8092#issuecomment-840048181,2,"['certificate', 'secur']","['certificates', 'security']"
Security,APATH; * failed to load '/etc/grid-security/certificates/b85d64aa.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/DigitalTrustAssuredCAG4-runbytheissuer.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/DigitalTrustAssuredCAG4-runbytheissuer.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/5249c1ef.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/DigitalTrustAssuredCAG4-runbytheissuer.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/DigitalTrustSecureCAG4-runbytheissuer.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/5d9ea26d.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/DigitalTrustAssuredCAG4-runbytheissuer.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/b167aa9e.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/be44c37d.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/5249c1ef.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/be44c37d.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/b167aa9e.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/5e9e302b.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/MYIFAM.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/5e9e302b.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/GEANTeSciencePersonalECCCA4.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/GEANTeSciencePersonalCA4.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/GEANTeSciencePersonalCA4.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certif,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8092#issuecomment-840048181:19881,secur,security,19881,https://root.cern,https://github.com/root-project/root/issues/8092#issuecomment-840048181,2,"['certificate', 'secur']","['certificates', 'security']"
Security,APATH; * failed to load '/etc/grid-security/certificates/c7a717ce.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/GEANTeScienceSSLECCCA4.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/8a21c0da.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/a883462e.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/8a21c0da.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/a883462e.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/GEANTeScienceSSLCA4.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/GEANTeScienceSSLCA4.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/GEANTeSciencePersonalECCCA4.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/GEANTeScienceSSLCA4.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/e9cc934f.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/GEANTeSciencePersonalECCCA4.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/GEANTeScienceSSLCA4.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/c141eb07.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/e9cc934f.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/c141eb07.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/d9343743.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/3e0d64db.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/3e0d64db.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/b85d64aa.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certific,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8092#issuecomment-840048181:18029,secur,security,18029,https://root.cern,https://github.com/root-project/root/issues/8092#issuecomment-840048181,2,"['certificate', 'secur']","['certificates', 'security']"
Security,ATH; * failed to load '/etc/grid-security/certificates/3e0d64db.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/b85d64aa.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/DigitalTrustAssuredCAG4-runbytheissuer.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/DigitalTrustAssuredCAG4-runbytheissuer.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/5249c1ef.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/DigitalTrustAssuredCAG4-runbytheissuer.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/DigitalTrustSecureCAG4-runbytheissuer.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/5d9ea26d.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/DigitalTrustAssuredCAG4-runbytheissuer.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/b167aa9e.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/be44c37d.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/5249c1ef.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/be44c37d.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/b167aa9e.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/5e9e302b.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/MYIFAM.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/5e9e302b.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/GEANTeSciencePersonalECCCA4.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/GEANTeSciencePersonalCA4.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/G,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8092#issuecomment-840048181:19789,secur,security,19789,https://root.cern,https://github.com/root-project/root/issues/8092#issuecomment-840048181,2,"['certificate', 'secur']","['certificates', 'security']"
Security,ATH; * failed to load '/etc/grid-security/certificates/DigitalTrustPrivateRootCAG4.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/DigitalTrustPrivateRootCAG4.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/585d9326.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/d58bb4bc.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/585d9326.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/23c77840.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/CNRS2-Grid-FR.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/78351451.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/CESNET-CA-4.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/KENETROOTCA.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/CNRS2-Grid-FR.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/KENETROOTCA.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/CESNET-CA-4.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/CNRS2-Grid-FR.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/KENETROOTCA.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/COMODO-RSA-CA.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/CESNET-CA-4.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/COMODO-RSA-CA.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/UKeScienceCA-2B.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/COMODO-RSA-CA.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/CNRS2-Grid-FR.signing_po,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8092#issuecomment-840048181:9587,secur,security,9587,https://root.cern,https://github.com/root-project/root/issues/8092#issuecomment-840048181,2,"['certificate', 'secur']","['certificates', 'security']"
Security,ATH; * failed to load '/etc/grid-security/certificates/be44c37d.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/5249c1ef.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/be44c37d.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/b167aa9e.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/5e9e302b.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/MYIFAM.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/5e9e302b.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/GEANTeSciencePersonalECCCA4.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/GEANTeSciencePersonalCA4.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/GEANTeSciencePersonalCA4.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/GEANTeSciencePersonalECCCA4.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/GEANTeSciencePersonalCA4.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/GEANTeSciencePersonalCA4.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/943fd5f3.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/d9343743.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/DigitalTrustAssuredCAG3-runbytheissuer.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/DigitalTrustAssuredCAG3-runbytheissuer.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/DigitalTrustAssuredCAG3-runbytheissuer.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/DigitalTrustAssuredCAG3-runbytheissuer.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/g,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8092#issuecomment-840048181:20851,secur,security,20851,https://root.cern,https://github.com/root-project/root/issues/8092#issuecomment-840048181,2,"['certificate', 'secur']","['certificates', 'security']"
Security,Access of deleted object during hadd tear down.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9017:0,Access,Access,0,https://root.cern,https://github.com/root-project/root/issues/9017,1,['Access'],['Access']
Security,Access root with termux,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12433:0,Access,Access,0,https://root.cern,https://github.com/root-project/root/issues/12433,1,['Access'],['Access']
Security,Accessing pyROOT,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10676:0,Access,Accessing,0,https://root.cern,https://github.com/root-project/root/issues/10676,1,['Access'],['Accessing']
Security,"Actually, if/since it is passed by github, it wouldn't be so far. The cloning is just boot-strapping after that both the target branch and the incoming branch are being pulled. > Passing a hash here doesn't work (in local tests),. Yep, it is expected for PR to be of the form: `refs/pull/14052/head:ci-rootest-cmake` and both part are being used. [UPDATE: ""it"" was the `head_ref` rather than the `base_ref`]. This should be straight-forward to improve.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14061#issuecomment-1813248212:189,hash,hash,189,https://root.cern,https://github.com/root-project/root/issues/14061#issuecomment-1813248212,1,['hash'],['hash']
Security,Add RPageSinkFile metrics and access them through RNTupleWriter,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7235:30,access,access,30,https://root.cern,https://github.com/root-project/root/pull/7235,1,['access'],['access']
Security,"Add a couple of unit tests for two pythonizations:; - Access a TTree branch as an attribute; - Make a TTree iterable. Both of them test different types of branches, which is especially relevant in the first test. The fact that the pythonization of `SetBranchAddress` is still not present in PyROOT experimental prevents the second test from testing more branch types (i.e. those that require a reference to a pointer); this is not an issue anyway since the code of the TTree-iterable pythonization is tested in its entirety by the current cases.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2449:54,Access,Access,54,https://root.cern,https://github.com/root-project/root/pull/2449,1,['Access'],['Access']
Security,"Add a new page source and sink that use S3 as the backing store. Davix; is used as the S3 interface. The implementation is nearly identical; to the DAOS backend and there is a lot of duplicated code. ```cpp; std::string s3Uri(""s3://$(S3_BUCKET).$(S3_HOST)"");; {; auto model = RNTupleModel::Create();; auto pt = model->MakeField<float>(""pt"");; auto vec = model->MakeField<std::vector<int>>(""vec"");; // create a new RNTuple named `my_ntuple`; // -- objects are written to /bucket/my_ntuple/; auto writer = RNTupleWriter::Recreate(std::move(model), ""my_ntuple"", s3Uri);; for (int i = 0; i < 100; i++) {; *pt = 42.0;; *vec = {1, 2, 3};; writer->Fill();; }; }. // opens the RNTuple at the path /bucket/my_ntuple/; auto ntuple = RNTupleReader::Open(""my_ntuple"", s3Uri);; ```; results in the following objects stored in the bucket:; ```shell; my_ntuple/0 # page 0, 1, ... ; my_ntuple/1; my_ntuple/18446744073709551613 # footer; my_ntuple/18446744073709551614 # header; my_ntuple/18446744073709551615 # anchor; my_ntuple/2; ```; Like the current DAOS backend, one object is allocated for every page,; plus three for the header, footer, and anchor. Performance will not be; very good yet as only a single request at a time is issued. Pages are issued keys sequentially from 0, like the DAOS backend. There; are three reserved keys:; * anchor: u64(-1); * header: u64(-2); * footer: u64(-3). S3 access is controlled using the (ROOT & Davix-compatible) envvars:; * S3_REGION; * S3_SECRET_KEY; * S3_ACCESS_KEY. Perhaps these should be changed to the official AWS envvars. Todo:; - [ ] re-add cluster caching functionality to `PopulatePageFromCluster`; - [ ] implement `LoadCluster`; - [ ] test mocks; - [ ] test with real RNTuples; - [ ] issue concurrent requests to S3",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8525:1384,access,access,1384,https://root.cern,https://github.com/root-project/root/pull/8525,1,['access'],['access']
Security,Add a specialization of RTreeColumnReader that reads values from a branch of type std::array. The specialization uses the non-adopting view from RVec to expose the contents of the array to nodes of the graph. Fixes #16160,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16161:153,expose,expose,153,https://root.cern,https://github.com/root-project/root/pull/16161,1,['expose'],['expose']
Security,Add accessor functions and functionality needed by CMS event display.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/99:4,access,accessor,4,https://root.cern,https://github.com/root-project/root/pull/99,1,['access'],['accessor']
Security,Add checksum support to LZ4 compression,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/926:4,checksum,checksum,4,https://root.cern,https://github.com/root-project/root/pull/926,1,['checksum'],['checksum']
Security,Add checksum to the LZ4 compressed buffer format.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/907:4,checksum,checksum,4,https://root.cern,https://github.com/root-project/root/pull/907,1,['checksum'],['checksum']
Security,Add commented code to httpsccess.C macro which configures authentication. And server can be used with external JSROOT,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12889:58,authenticat,authentication,58,https://root.cern,https://github.com/root-project/root/pull/12889,1,['authenticat'],['authentication']
Security,"Add deprecation messages in PQ2, old deamons and authentication tools",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1755:49,authenticat,authentication,49,https://root.cern,https://github.com/root-project/root/pull/1755,1,['authenticat'],['authentication']
Security,"Add more error-checking to the `NTupleDescriptor` build process (sibling PR of #5934); Intent after #5985 lands is to make `EnsureValidDescriptor` private, remove `GetDescriptor` and `MoveDescriptor` ; and expose a new method. `RNTupleDescriptorBuilder::MakeDescriptor() -> RResult<RNTupleDescriptor>` . that we can call `Inspect` and `Unwrap` on. . The actual `NTupleDescriptor` validity check is a bit sparse right now (I don't really know many `Column` or `Cluster` invariants).",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5989:206,expose,expose,206,https://root.cern,https://github.com/root-project/root/pull/5989,1,['expose'],['expose']
Security,"Add range checks to `RNTupleView`'s indexing operators. Before this change out of bounds accesses were being caught by an internal assert (in `RPageStorageFile::PopulatePage`); ```cpp; auto model = RNTupleModel::Create();; auto fieldPt = model->MakeField<float>(""pt"", 42.0);; {; auto ntuple = RNTupleWriter::Recreate(std::move(model), ""myNTuple"", path);; ntuple->Fill();; ntuple->Fill();; // ntuple has 2 entries; }; auto ntuple = RNTupleReader::Open(""myNTuple"", path);; auto viewPt = ntuple->GetView<float>(""pt"");; std::cout << viewPt(2); // attempt to access the pt field at offset 2 ; ```. Before:; ```; Fatal: clusterId != kInvalidDescriptorId violated at line 400 of `/home/max/projects/rootdev/root/tree/ntuple/v7/src/RPageStorageFile.cxx'; aborting; ```. The assert location:; https://github.com/root-project/root/blob/a4b812bad84be0986ee416bbd65cf44527b92404/tree/ntuple/v7/src/RPageStorageFile.cxx#L391-L400. After this change we throw an exception like:; ```; index 2 out of bounds for field 'pt' with 2 elements; ```. This also required a change to `RFieldBase::GetNElements` to handle a few field corner cases: ; * before columns are generated; * class fields (which do not have a principal column)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7784:89,access,accesses,89,https://root.cern,https://github.com/root-project/root/pull/7784,2,['access'],"['access', 'accesses']"
Security,"Add support for 64bit split and unsplit column types. It also makes them the default for index columns. When compressed, the difference to 32bit on-disk offsets is [almost none](https://docs.google.com/spreadsheets/d/1M7DR5obCOG0aTx_5zTLBjXJZb1uXWkHXPBcUpDIkSEc/edit?usp=sharing). 64bit on-disk index columns are the missing piece for supporting large events/clusters (>512MB). In memory, offsets are already 64bit, always. Validation of large events is for a follow-up PR. Uncompressed, 64bit index columns may still hurt, so there is an option to use 32bit columns instead. In this case, the attempt to write large clusters will fail/throw.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12665:424,Validat,Validation,424,https://root.cern,https://github.com/root-project/root/pull/12665,1,['Validat'],['Validation']
Security,"Add template specialization for `RVec<T>::operator[]` to access elements by passing a vector of indices. Here an example:. ```cpp; using namespace ROOT::VecOps;; RVec<float> v = {1, 2, 3, 4, 5};; RVec<size_t> idx = {0, 2, 4};; cout << v[idx] << endl;; // Returns: { 1, 3, 5 }; ```. This enable numpy-like element access and a more convenient handling of index magic. See following scenario:. ```cpp; using namespace ROOT::VecOps;; RVec<float> v = {2, 1, 0};; auto idx = Argsort(v);; cout << v[idx] << endl;; // Returns: { 0, 1, 2 }; ```. **TODO:**. - [ ] Add this feature to a tutorial",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2621:57,access,access,57,https://root.cern,https://github.com/root-project/root/pull/2621,2,['access'],['access']
Security,Add training-validation split in MethodDL and PyKeras,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2844:13,validat,validation,13,https://root.cern,https://github.com/root-project/root/pull/2844,1,['validat'],['validation']
Security,Added missing accessors for polish property in TGeoOpticalSurface.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3623:14,access,accessors,14,https://root.cern,https://github.com/root-project/root/pull/3623,1,['access'],['accessors']
Security,"Added support for the VecGeom library as external package (-Dvecgeom). Creating new library libConverterVG within geom module. This contains the conversion interface for ROOT shapes into vecgeom ones, activated using the plugin mechanism from ROOT. Included also the class TGeoVGShape bridging TGeoShape methods to either VecGeom solid (navigation) or existing ROOT shape (visualisation and the rest). The conversion can be done once a ROOT geometry is in memory using:; TVirtualGeoConverter::Instance()->ConvertGeometry(); Once this is done, all TGeo functionality and tests can be accessed as for a standard TGeo geometry.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/156:583,access,accessed,583,https://root.cern,https://github.com/root-project/root/pull/156,2,['access'],['accessed']
Security,Address sanitizer uncovered an unprotected `memcpy` happening here:; https://github.com/root-project/root/blob/08cbc9bfd363f69a8be02f07e2330c7f44e0b420/core/base/src/TString.cxx#L127-L136. Invoked from here:; https://github.com/root-project/root/blob/08cbc9bfd363f69a8be02f07e2330c7f44e0b420/hist/hist/src/TF1.cxx#L535. Note that it's always 5 characters being copied from the incoming string `formula`.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8136:8,sanitiz,sanitizer,8,https://root.cern,https://github.com/root-project/root/issues/8136,1,['sanitiz'],['sanitizer']
Security,Address security threat reported by S. Luders.; Using the same technology used in TSystem::ExpandFileName. This is a backport of commit 88ccff152604e0f1012653a596d802ff7ede3145. This is a fix for [CVE-2017-1000203](https://nvd.nist.gov/vuln/detail/CVE-2017-1000203).,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1467:8,secur,security,8,https://root.cern,https://github.com/root-project/root/pull/1467,2,"['secur', 'threat']","['security', 'threat']"
Security,Addressed security threat reported by S. Luders.; Using the same technology used in TSystem::ExpandFileName .,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/513:10,secur,security,10,https://root.cern,https://github.com/root-project/root/pull/513,2,"['secur', 'threat']","['security', 'threat']"
Security,Addressing report in #7423 ; In most cases - potential access to nullptr.; Plus improving GetCppName.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7437:55,access,access,55,https://root.cern,https://github.com/root-project/root/pull/7437,1,['access'],['access']
Security,"Adds a `RRawFile` class in the `ROOT::Experimental::Detail` namespace for accessing files byte-wise or line-wise. This is supposed to be used in RNTuple as well as in the CSV and SQlite `RDataSource` classes. Files are addressed by URLs (e.g. http://server/file or file:///local/path) and derived classes of `RRawFile` implement the protocol-dependent low-level read routine. The class allows for; - unified access to files, either local or remote; - Automatic handling of UNIX and Windows line breaks ; - Control of the I/O buffer mechanism. Current todos:; - [ ] Use upcoming `RStatus` / `RException` based error handling; - [ ] Use RRawFile in RCsvDS and RSqliteDS and compare the performance to the current implementation ; - [x] Implementation of Davix based I/O, using ROOT's plugin infrastructure in order to avoid a dependency of RIO to RDAVIX; - [x] Revised I/O buffering mechanism to avoid buffer thrashing on `Readln`",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3030:74,access,accessing,74,https://root.cern,https://github.com/root-project/root/pull/3030,2,['access'],"['access', 'accessing']"
Security,Adds drawing possibilities for average ROC curves with cross validation. This integrates the work of @mohammaduzair9. Superseeds PR #2454.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2913:61,validat,validation,61,https://root.cern,https://github.com/root-project/root/pull/2913,1,['validat'],['validation']
Security,Adds public methods to allow access and modification of the underlying factors of RooProdPdf and RooProduct,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12048:29,access,access,29,https://root.cern,https://github.com/root-project/root/pull/12048,1,['access'],['access']
Security,"Adds the following columns to an RDF created from an RNTuple:. Inner collections; ----------------------; The inner fields of collection of a record is projected to collections of the inner fields. E.g. a for a field `jet` of type vector of. struct Jet {; float pt;; float eta;; };. the RDF exposes `std::vector<float> jet.pt` and `std::vector<float> jet.eta` in addition to `std::vector<Jet> jet`. Cardinality columns; --------------------------; For every collection `x`, an additional cardinality column `#x` is exposed that contains the number of elements of the collection. Note that for inner collections, the cardinality columns is itself a collection. For instance, for a column `std::vector<std::vector<float>>` the cardinality column is of type `std::vector<std::uint32_t>`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6700:291,expose,exposes,291,https://root.cern,https://github.com/root-project/root/pull/6700,2,['expose'],"['exposed', 'exposes']"
Security,"After commit a0fa4fa, the integration of a RooParamHistFunc still; doesn't work when the RooParamHistFunc was cloned with `cloneTree`.; This was because the ranges were stored in a hash map keyed by argument; pointer and then not the correct clones of the arguments were used to; look up the ranges afterwards. This commit is fixing that.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7479:181,hash,hash,181,https://root.cern,https://github.com/root-project/root/pull/7479,1,['hash'],['hash']
Security,"After commit a0fa4fa, the integration of a RooParamHistFunc still; doesn't work when the RooParamHistFunc was cloned with `cloneTree`.; This was because the ranges were stored in a hash map keyed by argument; pointer and then not the correct clones of the arguments were used to; look up the ranges afterwards. This commit is fixing that. The problem was reported in the ROOT forum: https://root-forum.cern.ch/t/barlow-beeston-in-subrange/43909/5.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7478:181,hash,hash,181,https://root.cern,https://github.com/root-project/root/pull/7478,1,['hash'],['hash']
Security,"After reviewing the implementation of `RPageSinkBuf` and starting to prototype parallel RNTuple writing, I would like to propose moving the code related to descriptor building and serialization into a new class. The main observation here is that ""wrapping"" `RPageSink`s do not need that functionality, only the ""final"" sink that actually writes to files or DAOS. For now, I named the class `RPagePersistentSink`, but that's of course up for debate. Other options include ""final"" (even though that is ambiguous in the context of a class hierarchy) and ""serializing"". The first two commits may be useful independent of the rest of the series; the one to ""Avoid calling `PageSink::UpdateSchema` from `RPageSinkBuf`"" depends on moving the `Commit` implementations first (which access `fOpenColumnRanges` and `fOpenPageRanges`. *If* we decide that we want to introduce an intermediate class, we need to carefully benchmark with buffered writes disabled (ie without `RPageSinkBuf`) because there will now be two `virtual` function calls for every `Commit`; with `RPageSinkBuf` we avoid the duplicate serialization. I would expect negligible impact, but better to be sure.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14142:773,access,access,773,https://root.cern,https://github.com/root-project/root/pull/14142,1,['access'],['access']
Security,"Ah yes, I had not thought about the py2 compatibility! I have now pushed the fix for that. Hope that works. . Unfortunately I don't have access to the details of the failing tests. Is there something else to do for the other test that @hageboeck mentioned?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7314#issuecomment-794102177:137,access,access,137,https://root.cern,https://github.com/root-project/root/pull/7314#issuecomment-794102177,1,['access'],['access']
Security,"Ah, but it doesn't hang outside of `ctest`!. <details>; <summary>sanitizer output of full debug build</summary>. ```; ==1219199==ERROR: AddressSanitizer: heap-use-after-free on address 0x61600011cf20 at pc 0x7fa0de6cd426 bp 0x7fa09adf51c0 sp 0x7fa09adf51b0; READ of size 4 at 0x61600011cf20 thread T1; #0 0x7fa0de6cd425 in TClass::Size() const /home/jhahnfel/ROOT/src/core/meta/src/TClass.cxx:5706:8; #1 0x7fa0d8ab118a in TBufferFile::ReadFastArray(void*, TClass const*, int, TMemberStreamer*, TClass const*) /home/jhahnfel/ROOT/src/io/io/src/TBufferFile.cxx:1605:25; #2 0x7fa0d8daf80a in TStreamerInfoActions::ReadSTLObjectWiseFastArray(TBuffer&, void*, TStreamerInfoActions::TConfiguration const*, short, unsigned int) /home/jhahnfel/ROOT/src/io/io/src/TStreamerInfoActions.cxx:1364:11; #3 0x7fa0d8d9bf5a in int TStreamerInfoActions::ReadSTL<&TStreamerInfoActions::ReadSTLMemberWiseSameClass(TBuffer&, void*, TStreamerInfoActions::TConfiguration const*, short), &TStreamerInfoActions::ReadSTLObjectWiseFastArray(TBuffer&, void*, TStreamerInfoActions::TConfiguration const*, short, unsigned int)>(TBuffer&, void*, TStreamerInfoActions::TConfiguration const*) /home/jhahnfel/ROOT/src/io/io/src/TStreamerInfoActions.cxx:1407:10; #4 0x7fa0d8ac70a3 in TStreamerInfoActions::TConfiguredAction::operator()(TBuffer&, void*) const /home/jhahnfel/ROOT/src/io/io/inc/TStreamerInfoActions.h:123:17; #5 0x7fa0d8ac267e in TBufferFile::ApplySequence(TStreamerInfoActions::TActionSequence const&, void*) /home/jhahnfel/ROOT/src/io/io/src/TBufferFile.cxx:3580:10; #6 0x7fa0d8ac13d4 in TBufferFile::ReadClassBuffer(TClass const*, void*, TClass const*) /home/jhahnfel/ROOT/src/io/io/src/TBufferFile.cxx:3499:4; #7 0x7fa0de30778e in TProtoClass::Streamer(TBuffer&) /home/jhahnfel/ROOT/build-asan-debug-clang/core/G__Core.cxx:26435:12; #8 0x7fa0de6ebc39 in TClass::StreamerTObjectInitialized(TClass const*, void*, TBuffer&, TClass const*) /home/jhahnfel/ROOT/src/core/meta/src/TClass.cxx:6817:10; #9 0x7fa0d8ac492a in TC",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12715#issuecomment-1554235372:65,sanitiz,sanitizer,65,https://root.cern,https://github.com/root-project/root/issues/12715#issuecomment-1554235372,1,['sanitiz'],['sanitizer']
Security,"AiLCJQIjoiV2luMzIiLCJBTiI6Ik1haWwiLCJXVCI6Mn0%3D%7C1000&sdata=h9OXPXSoNf6rog1YhZy1Iuiji7Tq8asNeePutHMw2rs%3D&reserved=0>,O=Grid,C=CA; >>>>>>> * 	start date: Apr 08 16:29:03 2021 GMT; >>>>>>> * 	expire date: May 08 16:29:03 2022 GMT; >>>>>>> * 	common name: dpool46.lcg.triumf.ca <http://dpool46.lcg.triumf.ca/>; >>>>>>> * 	issuer: CN=Grid Canada Certificate Authority,O=Grid,C=CA; >>>>>>> * NSS error -8179 (SEC_ERROR_UNKNOWN_ISSUER); >>>>>>> * Peer's Certificate issuer is not recognized.; >>>>>>> * Closing connection 0; >>>>>>> curl: (60) Peer's Certificate issuer is not recognized.; >>>>>>> More details here: http://curl.haxx.se/docs/sslcerts.html <https://can01.safelinks.protection.outlook.com/?url=http%3A%2F%2Fcurl.haxx.se%2Fdocs%2Fsslcerts.html&data=04%7C01%7Csimonliu%40triumf.ca%7C2bf615c9bb89486eaecd08d91571b94b%7Cc20535109cb34679a2d38f442e03b587%7C1%7C0%7C637564400460996291%7CUnknown%7CTWFpbGZsb3d8eyJWIjoiMC4wLjAwMDAiLCJQIjoiV2luMzIiLCJBTiI6Ik1haWwiLCJXVCI6Mn0%3D%7C1000&sdata=s%2FTzkvNzM41e0GBRqYtbxaUzcM3edlGm0YFY9wV%2BN2M%3D&reserved=0>; >>>>>>> ; >>>>>>> curl performs SSL certificate verification by default, using a ""bundle""; >>>>>>> of Certificate Authority (CA) public keys (CA certs). If the default; >>>>>>> bundle file isn't adequate, you can specify an alternate file; >>>>>>> using the --cacert option.; >>>>>>> If this HTTPS server uses a certificate signed by a CA represented in; >>>>>>> the bundle, the certificate verification probably failed due to a; >>>>>>> problem with the certificate (it might be expired, or the name might; >>>>>>> not match the domain name in the URL).; >>>>>>> If you'd like to turn off curl's verification of the certificate, use; >>>>>>> the -k (or --insecure) option.; >>>>>>> ***@***.*** t5]$ ; >>>>>> ; >>>>>> ; >>>>>> I am unfamiliar with how to use curl with X509 and everything I tried so far has not worked. eg; >>>>>> curl -v https://webdav.lcg.triumf.ca:2880/atlas/atlaslocalgroupdisk/rucio/user/desilva/a1/a8/myFile.1.root <ht",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8092#issuecomment-840018942:6424,certificate,certificate,6424,https://root.cern,https://github.com/root-project/root/issues/8092#issuecomment-840018942,2,"['Certificate', 'certificate']","['Certificate', 'certificate']"
Security,All derived classes should also redefine Hash and call recursive remove,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12796:41,Hash,Hash,41,https://root.cern,https://github.com/root-project/root/pull/12796,1,['Hash'],['Hash']
Security,All the errors seems infrastructure related (python not found and remote file access) but there are too many of them to know if this PR works or not ... so waiting for the infrastructure to settle.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5891#issuecomment-646357052:78,access,access,78,https://root.cern,https://github.com/root-project/root/pull/5891#issuecomment-646357052,1,['access'],['access']
Security,"All the ingredients needed in the tutorial seem to be finally working well together. This is what I get on lxplus with the latest LCG release (LCG104); ```; $which root; /cvmfs/sft.cern.ch/lcg/views/LCG_104/x86_64-centos7-gcc11-opt/bin/root; $python distrdf004_dask_lxbatch.py ; /cvmfs/sft.cern.ch/lcg/views/LCG_104/x86_64-centos7-gcc11-opt/lib/python3.9/site-packages/distributed/security.py:116: DeprecationWarning: support for OpenSSL 1.0.2k-fips 26 Jan 2017 is deprecated, and will be removed in a future release; warnings.warn(; Waiting for 2 workers to start.; All workers are ready, took 369.31 seconds.; Starting the computations at 2023-09-20 22:27:35.737711; Dataset has 10000 entries; Column x stats:; 	mean: 50.19706628187094; 	max: 99.99726188834757; 	min: 0.0008953968062996864; Computations ended at 2023-09-20 22:28:02.801630, took 27.06 seconds.; ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10176#issuecomment-1728419634:381,secur,security,381,https://root.cern,https://github.com/root-project/root/pull/10176#issuecomment-1728419634,1,['secur'],['security']
Security,"All these classes using additional histogram to draw axes, therefore one need to create and access such ; histogram before drawing object in web canvas. web canvas can address these histograms for context menu or when axis attributes are changed. Special handling of zoomed axis implemented. When necessary, `fMinimum`/`fMaximum` members are changed",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11762:92,access,access,92,https://root.cern,https://github.com/root-project/root/pull/11762,1,['access'],['access']
Security,Allow to pass Bearer token authentication header to Davix client,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6802:27,authenticat,authentication,27,https://root.cern,https://github.com/root-project/root/issues/6802,1,['authenticat'],['authentication']
Security,Allow users to set/access the floating point precision when writing GDML,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11890:19,access,access,19,https://root.cern,https://github.com/root-project/root/pull/11890,1,['access'],['access']
Security,"Allows to access files from `THttpServer` when it protected with `htdigest` password. Addresses issue discussed here:. https://root-forum.cern.ch/t/localhost-jsroot-server/54607/60. Example of starting such server on localhost:8011:; ```; THttpServer* serv = new THttpServer(""http:8011?auth_file=auth.txt&auth_domain=root&cred_cors&cors=http://localhost:8000"");; ```. Here crucial exact CORS url and `cred_cors` option which enables `Access-Control-Allow-Credentials` header. Server `localhost:8000` is just plain JSROOT installation with python3. To open ROOT file on such server:; ```; http://localhost:8000/jsroot/?with_credentials&file=http://localhost:8011/currentdir/hsimple.root; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12866:10,access,access,10,https://root.cern,https://github.com/root-project/root/pull/12866,3,"['Access', 'access', 'password']","['Access-Control-Allow-Credentials', 'access', 'password']"
Security,"Already mentioned that:; - Detect CXXFLAGS including LTO, issue a warning; - Provide an option to disable LTO for LLVM. LTO is more than just an optimization. It allows to find numerous coding issues which are only visible with whole program analysis, e.g. ODR violations, out-of-bound accesses across TUs, ...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11135#issuecomment-1208051939:286,access,accesses,286,https://root.cern,https://github.com/root-project/root/issues/11135#issuecomment-1208051939,1,['access'],['accesses']
Security,"Alright, I think all review comments have been addressed. Unfortunately, Jenkins is not working due to a firewall problem, but additional changes from the previous version (which passed the checks) are small, and all tests still pass locally on my machine, so I will merge this and watch the incremental builds to see if there's anything I missed.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3232#issuecomment-454002634:105,firewall,firewall,105,https://root.cern,https://github.com/root-project/root/pull/3232#issuecomment-454002634,1,['firewall'],['firewall']
Security,"Alright, I've put in the comments from @etejedor (thanks!). Now we've a refined version regarding the user interface:. ```python; @ROOT.DeclareCppCallable([""float""], ""float""); def f(x); return 2.0 * x. # General use-cases; ROOT.CppCallable.f(21) # Returns 42; ROOT.gInterpreter.ProcessLine(""cout << CppCallable::f(21.0) << endl;"") # Prints 42.0. # Inject callable into dataframe; df = ROOT.ROOT.RDataFrame(10).Define(""x"", ""rdfentry__"").Define(""CppCallable::f(x)""); ```. You can set an optional name. ```python; @ROOT.DeclareCppCallable([""float""], ""float"", name=""g""); def f(x); return 2.0 * x. ROOT.CppCallable.g(21.0) # Returns 42; ```. By default, we try numba first and then fall back to the generic implementation. You can force only numba using `numba_only=True` as optional argument. ```python; @ROOT.DeclareCppCallable([""float""], ""float"", numba_only=True); def f(x); return 2.0 * x; ```. In addition, you can set a `verbose` flag to let PyROOT tell you if the decorator falls back to the generic implementation. ```python; @ROOT.DeclareCppCallable([""float""], ""string"", verbose=True); def f(x); return ROOT.std.string(str(x)). ROOT.CppCallable.f(x); # 1) Throws Python warning:; # /home/stefan/foo.py:5: RuntimeWarning: Failed to compile Python callable using numba. Fall back to generic implementation.; # @ROOT.DeclareCppCallable([""float""], ""string"", verbose=True); # 2) Falls back to generic impl and prints ""42"" (as string); ```. **DEPRECATED:**. I've cleaned up and improved the feature. Here's the basic workflow now:. ```python; @ROOT.DeclareCallable([""float""], ""float""); def f(x); return 2.0 * x. # General use-cases; ROOT.ROOT.f(21) # Returns 42; ROOT.gInterpreter.ProcessLine(""cout << ROOT::f(21.0) << endl;"") # Prints 42.0. # Inject callable into dataframe; df = ROOT.ROOT.RDataFrame(10).Define(""x"", ""rdfentry__"").Define(""ROOT::f(x)""); ```. The `DeclareCallable` dispatches between numba and the generic implementation. It tries to compile the thingy with numba (falls through silently",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3488:348,Inject,Inject,348,https://root.cern,https://github.com/root-project/root/pull/3488,1,['Inject'],['Inject']
Security,Also sanitize setting of TEveArrow parameters and propagation of bounding-box updates to GL viewer.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/566:5,sanitiz,sanitize,5,https://root.cern,https://github.com/root-project/root/pull/566,1,['sanitiz'],['sanitize']
Security,"Also the file below (deadlock.cxx) is a Cling standalone reproducer of the mechanics of the problem.; To use:. ```; root [0] .L deadlock.cxx+; root [1] deadlock(false); // Do not emulate the 'protection' the internal of cling; WWoouulldd eexxeeccuuttee:: WWoorrkk((**((ssttdd::::ssttrriinngg**))00xx770000000000100830ee3300));;. Work being done within the lock of Second; Work being done within the lock of First; We successfully reached the end.; root [2] deadlock(true); // Emulate the 'protection' the internal of cling; WWoouulldd eexxeeccuuttee:: WWoorrkk((**((ssttdd::::ssttrriinngg**))00xx770000000000100830ee3300));;. ..... Process is now deadlocked ..... i.e. the point is that the same lock taken by the user code (Function Work) must be the same as the one used to 'protect the internal of cling'; ```. ```; #include <mutex>; #include <thread>; #include <iostream>; #include <sstream>. std::mutex gMutex;. void Work(const std::string &name); {; // simulate a long page fetch; std::this_thread::sleep_for(std::chrono::seconds(2));; std::string result = ""fake content"";. // This lock would be taken indirectly by any access to the global database; // (TClass, TCling, etc..); std::lock_guard<std::mutex> guard(gMutex);; cerr << ""Work being done within the lock of "" << name << '\n';; }. void IndirectWork(const std::string &name, bool takelock); {. std::stringstream cmd;; cmd << ""Work(*(std::string*)"";; cmd << (void*)&name;; cmd << "");"" ;; cerr << ""Would execute: "" << cmd.str()<< '\n';. if (takelock) {; // This lock is taken by gROOT->ProcessLine.; std::lock_guard<std::mutex> guard(gMutex);; /*; interpreter->execute(cmd.str().c_str());; */; Work(name);; } else {; /*; interpreter->execute(cmd.str().c_str());; */; Work(name);; }; }. void deadlock(bool takelock = true); {. std::thread t1(IndirectWork, ""First"", takelock);; std::thread t2(IndirectWork, ""Second"", takelock);. t1.join();; t2.join();; cerr << ""We successfully reached the end.\n"";; }; ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/892#issuecomment-325204215:1126,access,access,1126,https://root.cern,https://github.com/root-project/root/pull/892#issuecomment-325204215,1,['access'],['access']
Security,"Also, check this out:; https://codecogs.com/library/maths/special/bessel/kelvin.php; > Source code is available when you buy a [Commercial](https://codecogs.com/pages/licences/com.php) licence. And then in the commercial license it says:; > You **cannot** distribute source code behind the CodeCogs Software. By the way, other components of codecogs have different license options, for example [this one](https://www.codecogs.com/library/engineering/fluid_mechanics/waves/dispersion.php):; > Source code is available when you agree to a [GP Licence](https://www.codecogs.com/pages/licences/gpl.php) or buy a [Commercial Licence](https://www.codecogs.com/pages/licences/com.php). Maybe the Kelvin functions were also possible to be used with the GPL in the past, but at least now this doesn't seem to be possible, as only the commercial license gives you access to the source code. With this, I would also come to the conclusion that that the code needs to be removed ASAP.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13688#issuecomment-1729420363:854,access,access,854,https://root.cern,https://github.com/root-project/root/pull/13688#issuecomment-1729420363,1,['access'],['access']
Security,"Alternatively we could enlarge the buffer for `snprintf`. However, this would change the print-out since the truncation feature of `snprintf` is a feature. @lmoneta What do you think?. Edit: The truncation warnings can be found here: https://sft.its.cern.ch/jira/secure/attachment/22139/build.log",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3869:263,secur,secure,263,https://root.cern,https://github.com/root-project/root/pull/3869,1,['secur'],['secure']
Security,"Although on second thoughts we are introducing a different behaviour when the TFile is on the stack since we don't delete it anymore now. Its contents are still completely accessible even after the change of the TTree to new files, whereas the TFile on the heap would be destroyed. This gist; https://gist.github.com/vepadulano/ae831444e0e5e919f288957c8100eabe; outputs; ```; Fill: Switching to new file: tree_setmaxsize_seq_1.root; Fill: Switching to new file: tree_setmaxsize_seq_2.root; TFile on Stack name tree_setmaxsize_seq.root; ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6528#issuecomment-702212404:172,access,accessible,172,https://root.cern,https://github.com/root-project/root/pull/6528#issuecomment-702212404,1,['access'],['accessible']
Security,Any ideas why this may be failing @lmoneta? I don't have access to the Jenkins build logs.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5936#issuecomment-650475052:57,access,access,57,https://root.cern,https://github.com/root-project/root/pull/5936#issuecomment-650475052,1,['access'],['access']
Security,"Apologies for joining the party only after it's over. My opinion:. `ptr` is fine because I don't see how (regular) people would notice / care *when* the cost occurs, this should be opaque to them. If they ever notice, they can be told and learn. `TTree::Draw()` sort of suffers from a similar mismatch of interface announcement (""register in the pad"") and runtime cost that `ptr` has in this case. And we survived. I find the argument convincing that `ptr`, unlike `handle`, conveys the usage: `handle` often means ""opaque thing that you don't know what to do with but someone else will"" and is thus not very helpful for interfaces. I find the usage cost for separating trigger and value access too high.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1855#issuecomment-381906840:688,access,access,688,https://root.cern,https://github.com/root-project/root/pull/1855#issuecomment-381906840,2,['access'],['access']
Security,"Apparently xrootd 5.3.1 have a different sha256 hash (not clear how it could happened or if maybe in PR I was using old). Failure was detected on centos8 rootbench machine (https://lcgapp-services.cern.ch/root-jenkins/job/root-benchmark/):; ```; -- verifying file...; file='/data/sftnight/workspace/root-benchmark/BUILDTYPE/Release/COMPILER/default/LABEL/performance-cc8/SPEC/nortcxxmod/build/builtins/xrootd/XROOTD-prefix/src/v5.3.1.tar.gz'; -- SHA256 hash of; /data/sftnight/workspace/root-benchmark/BUILDTYPE/Release/COMPILER/default/LABEL/performance-cc8/SPEC/nortcxxmod/build/builtins/xrootd/XROOTD-prefix/src/v5.3.1.tar.gz; does not match expected value; expected: '1194ba435dc1e243f3cdb8273f6385407183799faf7622a582a828f4aff6807d'; actual: '0800b4c6444591a6514c5b81b2c4c79439875136ab2267ce4bed99cb94ead6e6'; -- Hash mismatch, removing...; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9103:48,hash,hash,48,https://root.cern,https://github.com/root-project/root/pull/9103,3,"['Hash', 'hash']","['Hash', 'hash']"
Security,"Applied patch:; ```.diff; --- interpreter/llvm/src/tools/clang/lib/Serialization/ASTWriterDecl.cpp~	2023-01-06 05:04:43.000000000 -0600; +++ interpreter/llvm/src/tools/clang/lib/Serialization/ASTWriterDecl.cpp	2023-01-10 13:21:47.554190854 -0600; @@ -26,6 +26,8 @@; using namespace clang;; using namespace serialization;; ; +#include <cstdio>; +; //===----------------------------------------------------------------------===//; // Declaration serialization; //===----------------------------------------------------------------------===//; @@ -361,6 +363,8 @@; Record.push_back(D->isTopLevelDeclInObjCContainer());; Record.push_back(D->getAccess());; Record.push_back(D->isModulePrivate());; + D->dump();; + if (D->getOwningModule()) fprintf(stderr, ""D->getOwningModule()->Name=%s"", D->getOwningModule()->Name.c_str());; Record.push_back(Writer.getSubmoduleID(D->getOwningModule()));; ; // If this declaration injected a name into a context different from its; ```; with result:; ```ConsoleSession; <snip/>; LinkageSpecDecl 0xbf7b930 <<module-includes>:1:1, line:3:1> line:1:8 C; |-CXXRecordDecl 0xbf7b988 </usr/include/xlocale.h:27:9, line:39:1> line:27:16 in xlocale.h hidden struct __locale_struct definition; | |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal; | | |-DefaultConstructor exists trivial needs_implicit; | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param; | | |-MoveConstructor exists simple trivial needs_implicit; | | |-CopyAssignment simple trivial has_const_param needs_implicit implicit_has_const_param; | | |-MoveAssignment exists simple trivial needs_implicit; | | `-Destructor simple irrelevant trivial needs_implicit; | |-CXXRecordDecl 0xbf7bad0 <col:9, col:16> col:16 in xlocale.h hidden implicit struct __locale_struct; | |-CXXRecordDecl 0xbf7bb88 parent 0xbf3f498 <line:30:3, col:10> col:10 in xlocale.h hidden struct __locale_data; | |-FieldDecl 0xbf7be08 <col:3, col:37> col:2",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10861#issuecomment-1377744663:911,inject,injected,911,https://root.cern,https://github.com/root-project/root/issues/10861#issuecomment-1377744663,2,['inject'],['injected']
Security,"Approx 10 years ago I create [file](https://root.cern/js/files/legends.root) with canvas from [`TLegend` docu](https://root.cern/doc/master/classTLegend.html). Now it is impossible to correctly read produced canvas and draw `TF1` object in it:. ```; root https://root.cern/js/files/legends.root -e ""legends->Draw()""; ```. Command produce a lot of error output like:; ```; Error in <TClingCallFunc::make_wrapper>: Failed to compile; ==== SOURCE BEGIN ====; #pragma clang diagnostic push; #pragma clang diagnostic ignored ""-Wformat-security""; __attribute__((used)) __attribute__((annotate(""__cling__ptrcheck(off)""))); extern ""C"" void __cf_1(void* obj, int nargs, void** args, void* ret); {; if (ret) {; new (ret) (double) (((double (&)(double *))TFormula____id1925463321337447592)(*(double**)args[0]));; return;; }; else {; (void)(((double (&)(double *))TFormula____id1925463321337447592)(*(double**)args[0]));; return;; }; }; #pragma clang diagnostic pop; ==== SOURCE END ====; Error in <prepareFuncPtr>: Compiled function pointer is null; Error in <TFormula::InputFormulaIntoCling>: Error compiling formula expression in Cling; Error in <TFormula::ProcessFormula>: Formula ""1000*TMath::Abs(sin(x)/x)"" is invalid !; Error in <TFormula::Eval>: Formula is invalid and not ready to execute ; TMath::Abs is unknown.; Error in <TFormula::Eval>: Formula is invalid and not ready to execute ; TMath::Abs is unknown.; Error in <TFormula::Eval>: Formula is invalid and not ready to execute ; TMath::Abs is unknown.; Error in <TFormula::Eval>: Formula is invalid and not ready to execute ; TMath::Abs is unknown.; Error in <TFormula::Eval>: Formula is invalid and not ready to execute ; TMath::Abs is unknown.; ```. Producing segfault when trying to quit ROOT session.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12559:530,secur,security,530,https://root.cern,https://github.com/root-project/root/issues/12559,1,['secur'],['security']
Security,Arguing about threading and roofit is an oxymoron :). I am still not getting the point. There are interfaces which are expected to change that output (namely [here](https://root-forum.cern.ch/t/accessing-gendata-in-roofit/28237)). I am far from expert in roofit but if we close this PR that would mean the const_casts are going to end up in users code which is arguably worse because it is out of our control. I'd prefer to land this and lift that burden from the users when interacting with roostats. EDIT: @lmoneta should be able to say...,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1721#issuecomment-371972966:194,access,accessing-gendata-in-roofit,194,https://root.cern,https://github.com/root-project/root/pull/1721#issuecomment-371972966,1,['access'],['accessing-gendata-in-roofit']
Security,"As a follow up of the discussion in ROOT-9846:. https://sft.its.cern.ch/jira/browse/ROOT-9846. This PR injects the necessary pythonizations to support the `len(c)` syntax when getting the size of containers (`TCollection`, `TArray`, `RooAbsCollection` and their respective derivates) from Python.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3082:103,inject,injects,103,https://root.cern,https://github.com/root-project/root/pull/3082,1,['inject'],['injects']
Security,"As a result of discussing #9947 , the following two use cases have arised (in terms of what a user would want to do with a TFile):. 1. Open the file, `cd` into it, write/read stuff to/from it, `cd` out of it (thus restoring the `gDirectory` to the previous open file or something like `gROOT`; 2. Open a file, write/read stuff to/from it, close the file and forget about it and its content. While case 2 can be better addressed with the original idea of the TFile pythonization of the PR linked above, case 1 is actually the purpose of the `TDirectory::TContext` class. Currently, there is no easy way to use this class in Python because it's an RAII construct that fulfills its mission at destruction time. Python scopes are quite different to C++ scopes, and calling the destructor of the TContext explicitly would mean calling the `__destruct__` magic method (which is maybe not even intended for public usage). Thus. a much more pythonic approach is to enable usage of `TContext` as a Python context manager. This allows for example the following:. ```python; import ROOT; from ROOT import TDirectory. with TDirectory.TContext():; # Open some file here; file = ROOT.TFile(...); # Retrieve contents from the file; histo = file.Get(""myhisto""); ```; where after the `with` statement, the current directory is restored to ROOT.gROOT. Or also. ```python; import ROOT; from ROOT import TDirectory. file1 = ROOT.TFile(""file1.root""); file2 = ROOT.TFile(""file2.root""). with TDirectory.TContext(file1, file2):; histo = ROOT.TH1F(...); histo.Write(); ```. where inside the `with` statement the current directory would be `file2`, and afterwards it would be set to `file1`. As an aside, this functionality would not modify anything of the TFile itself, e.g. it would not close it after the `with`. This means that all objects created or read from the file in the with statement would still be alive and accessible afterwards",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10167:1895,access,accessible,1895,https://root.cern,https://github.com/root-project/root/pull/10167,1,['access'],['accessible']
Security,"As another alternative (not sure that was mentioned or considered): we could have incremental builds on merge that ""asynchronously"" update the artifacts. That way we get newest artifacts to start from without the security issue of PR builds pushing. What do yous @hahnjo @olemorud think?. And yes, let's get this PR in and iterate afterwards!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12201#issuecomment-1417627970:213,secur,security,213,https://root.cern,https://github.com/root-project/root/pull/12201#issuecomment-1417627970,1,['secur'],['security']
Security,"As discussed in [ROOT-10409](https://sft.its.cern.ch/jira/browse/ROOT-10409), these accessors are very dangerous and aren't backed by a clear use case right now. Therefore, @Axel-Naumann and I think it's best to just remove them for now.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4708:84,access,accessors,84,https://root.cern,https://github.com/root-project/root/pull/4708,1,['access'],['accessors']
Security,"As per a request from @Nowakus, making `REntry::AddValue()` publicly accessible would be useful in some specific cases. @Nowakus could you please comment in this issue why (I cannot recall now). Also, it would be helpful if you also attach your current workaround.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11673:69,access,accessible,69,https://root.cern,https://github.com/root-project/root/issues/11673,1,['access'],['accessible']
Security,"As per discussion with Axel: have the ROOT interpreter warn about nullptr dereferences, but avoid injecting the checks in code that is not used interactively, as they bring a notable slowdown even to bug-free code.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9112:98,inject,injecting,98,https://root.cern,https://github.com/root-project/root/issues/9112,1,['inject'],['injecting']
Security,"As pointed out by ATLAS, it's currently not possible to use a `std::vector` with a non-default allocator in RNTuple:; ```c++; #include <ROOT/RNTupleModel.hxx>. #include <scoped_allocator>; #include <vector>. void ntuple_vector_allocator() {; auto model = ROOT::Experimental::RNTupleModel::CreateBare();; model->MakeField<std::vector<int, std::scoped_allocator_adaptor<std::allocator<int>>>>(""v"");; }; ```; leads to; ```; Processing ntuple_vector_allocator.C...; terminate called after throwing an instance of 'ROOT::Experimental::RException'; what(): vector<int,scoped_allocator_adaptor<allocator<int> > > is not supported; At:; ROOT::Experimental::RClassField::RClassField(std::string_view, std::string_view, TClass *) [/home/jhahnfel/ROOT/src/tree/ntuple/v7/src/RField.cxx:1807]. Aborted (core dumped); ```; This is because `RField` is only partially specialized for `std::vector<ItemT>`, so a non-default `Allocator` falls back to the default `RField` declaration (which assumes it's a class and checks that it's not in `std` namespace). Note that in principle, this affects all STL containers. For many of them, there are other template parameters, for example `Hash` for `std::unordered_set`:; ```c++; #include <ROOT/RNTupleModel.hxx>. #include <unordered_set>. struct IntHash : public std::hash<int> {};. void ntuple_unordered_set_hash() {; auto model = ROOT::Experimental::RNTupleModel::CreateBare();; model->MakeField<std::unordered_set<int, IntHash>>(""s"");; }; ```; leads to; ```; Processing ntuple_unordered_set_hash.C...; terminate called after throwing an instance of 'ROOT::Experimental::RException'; what(): unordered_set<int,IntHash,equal_to<int>,allocator<int> > is not supported; At:; ROOT::Experimental::RClassField::RClassField(std::string_view, std::string_view, TClass *) [/home/jhahnfel/ROOT/src/tree/ntuple/v7/src/RField.cxx:1807]. Aborted (core dumped); ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/16754:1166,Hash,Hash,1166,https://root.cern,https://github.com/root-project/root/issues/16754,2,"['Hash', 'hash']","['Hash', 'hash']"
Security,"As reported by Chris Jones:. > https://github.com/root-project/root/blob/6a1389a16625718f2750ba90156d3f8f9d5dfe8a/core/thread/src/RConcurrentHashColl.cxx#L53-L62; > There is a race condition between line 57 and 58. Between releasing the read lock and taking the write lock, another thread could have inserted the same hash. And indeed, the unconditional return of `true` within the write lock means that in the case of the race condition then the result is incorrect. (a) the only consequence of the race is a small performance loss and the return value of the function is incorrect (true instead of false). (b) but the function does not seem to be called anywhere. The consequence of (a) should be if (b) is incorrect that a StreamerInfo is being re-read when it does not need to, so 'only' a performance decrease when opening files. Also Matti noticed that the 2nd forms was always taking the write lock and that is because:. The proper use of that function is to do the check externally (via a call to Find) and then call the Insert if need be. The call to std::set::insert does a check internally to reject double inserts and return the status via the iterator. So that 2nd function is already doing (indirectly) the check Dan recommended. So the fix is to either fix the return value of the first function or have it call the 2nd function or .... just removing it.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11794:318,hash,hash,318,https://root.cern,https://github.com/root-project/root/pull/11794,1,['hash'],['hash']
Security,"As reported by ROOT-8935, when an enum is in a namespace and the; values of the enum are accessed via the namespace, the underlying; type of the enum is not taken into account. With this fix, we check the underlying type of the enum in; PropertyProxy::Set before creating the converter.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4202:89,access,accessed,89,https://root.cern,https://github.com/root-project/root/pull/4202,2,['access'],['accessed']
Security,"As reported here:. https://sft.its.cern.ch/jira/browse/ROOT-8935. when looking up an enum, the current PyROOT returns an unsigned integer. The changes of this PR, migrated from current Cppyy, allow to create an enum type during the lookup and inject the enum values in it. This is done both for global and non-global lookups. This PR also includes a fix to get the underlying type of the enum when picking a converter for its values.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4121:243,inject,inject,243,https://root.cern,https://github.com/root-project/root/pull/4121,1,['inject'],['inject']
Security,"As reported in ROOT-9025, there was a memory leak when accessing a branch of a TTree in Python, that branch being of type array. The leak was actually not in the branch access itself via __getattr__, but when accessing one element of the array. This commit fixes the leak that happened when trying to retrieve a pointer to the buffer with the array content as a linear char array. It does so by adding a missing reference decrement for the array.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1512:55,access,accessing,55,https://root.cern,https://github.com/root-project/root/pull/1512,3,['access'],"['access', 'accessing']"
Security,"As reported in ROOT-9463, the result of GetColumnNames is redundant. A simple reproducer:; ```; TFile f(""f.root"", ""recreate"");; TTree t(""t"", ""t"");; int a;; t.Branch(""a"", &a);; a = 42;; t.Fill();; t.Write();; f.Close();; ROOT::RDataFrame df(""t"", ""f.root"");. for (auto x : df.GetColumnNames()); std::cout <<x <<std::endl;; ```. This redundancy is now not exposed to the user. **It would be nice** to have more tests on real use cases.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2443:353,expose,exposed,353,https://root.cern,https://github.com/root-project/root/pull/2443,1,['expose'],['exposed']
Security,"As reported in https://root-forum.cern.ch/t/pure-virtual-method-called-on-hadding-tfiles-with-tfriendelements/46836/6; (see there for reproducer), hadd at tear down accesses already deleted objects. In version of ROOT equal or newer than v6.22/08 and v6.24/00, the problem appears only in a slow merge. (for example `hadd -f0 output.root testroot_1,root testroot_2.root`) . The resulting stack trace is:. ```; ==1241== Process terminating with default action of signal 6 (SIGABRT); ==1241== at 0x5BB618B: raise (raise.c:51); ==1241== by 0x5B9592D: abort (abort.c:100); ==1241== by 0x58C2910: ??? (in /usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.28); ==1241== by 0x58CE38B: ??? (in /usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.28); ==1241== by 0x58CE3F6: std::terminate() (in /usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.28); ==1241== by 0x58CF154: __cxa_pure_virtual (in /usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.28); ==1241== by 0x551449A: TCollection::RecursiveRemove(TObject*) (TCollection.cxx:579); ==1241== by 0x4A345D0: TTree::RecursiveRemove(TObject*) (TTree.cxx:7857); ==1241== by 0x551F16F: TList::RecursiveRemove(TObject*) (TList.cxx:813); ==1241== by 0x5518879: THashList::RecursiveRemove(TObject*) (THashList.cxx:354); ==1241== by 0x543C003: TROOT::RecursiveRemove(TObject*) (TROOT.cxx:2455); ==1241== by 0x496B26E: ROOT::CallRecursiveRemoveIfNeeded(TObject&) (TROOT.h:398); ==1241== by 0x5512E61: TCollection::~TCollection() (TCollection.cxx:189); ==1241== by 0x5506D19: TSeqCollection::~TSeqCollection() (TSeqCollection.h:37); ==1241== by 0x551BE8E: TList::~TList() (TList.cxx:92); ==1241== by 0x551BEAD: TList::~TList() (TList.cxx:95); ==1241== by 0x4A1DE02: TTree::~TTree() (TTree.cxx:975); ==1241== by 0x4A1E2C7: TTree::~TTree() (TTree.cxx:1023); ==1241== by 0x4A308E9: TTree::Merge(TCollection*, TFileMergeInfo*) (TTree.cxx:6908); ==1241== by 0x4960BA2: ROOT::merge_TTree(void*, TCollection*, TFileMergeInfo*) (G__Tree.cxx:4209); ==1241== by 0x4E739D6: TFileMerger::MergeOne(TDirectory*, ",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9017:165,access,accesses,165,https://root.cern,https://github.com/root-project/root/issues/9017,1,['access'],['accesses']
Security,"As seen in https://github.com/cms-sw/cmssw/pull/40435, ROOT I/O annotation can be moved from the comments to using `C++ attributes` (in particular because support for the comment is implemented internally through the same mechanics). To quote the referred pull request:. The way dictionary information are propagated from the `C++` code or `XML` dictionaries to reflex and cling is rather roundabout:. - a; - `<field name=""data_"" comment=""!""/>` tags `XML` dictionaries are parsed by `genreflex` and injected into the `LLVM AST` of the corresponding `C++` code as comments `//!`;; - `C++` comments like `//!` or `//[size_]` are converted by `genreflex/rootcling` into `LLVM AST` annotations; cling parses the `LLVM` annotations and uses them to generate the desired behavior in the dictionaries. This approach does not work well with macro-generated data members:. - macros cannot generate comments, so `//!` or `//[size_]` cannot be used directly;; - macros cannot easily be used to generate the `class_def.xml` file, requiring manual intervention for their implementation and maintenance. However, it turns out that dictionaries can bypass the comments and use LLVM annotations directly within the C++ code. So; ```; private:; int size_;; float* data_; //[size_]; float* transient_; //!; ```; can be also expressed as; ```; private:; int size_;; float* data_ [[clang::annotate(""[size_]"")]];; float* transient_ [[clang::annotate(""!"")]];; ```; and annotations can be generated by macros. In order to avoid spurious warnings when compiling the header, we should offer a (set of) macro(s), eg:. - `ROOT_IO_TRANSIENT` can be used to annotate transient data members, like `//!; - `ROO_IO_SIZE(SIZE)` can be used to annotate dynamic arrays, like `//[SIZE]`; or. - `ROOT_IO_ANNOTATE` that can be used with `ROOT_IO_ANNOATE(""!"")` and `ROOT_IO_ANNOTATE(""[size]"")`. The advantage of the earlier case would be to (possibly) allow simplification of the internal parsing, by using:; ```; float* data_ [[rootio::siz",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12012:499,inject,injected,499,https://root.cern,https://github.com/root-project/root/issues/12012,1,['inject'],['injected']
Security,"As seen in https://root-forum.cern.ch/t/draw-short-integers-as-numbers-not-characters/52530/10,; in that case we get:; ```; Error in <TTreeReaderArrayBase::CreateContentProxy()>: The branch Jet_idx contains data of type char. It cannot be accessed by a TTreeReaderArray<signed char>; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11837:239,access,accessed,239,https://root.cern,https://github.com/root-project/root/issues/11837,1,['access'],['accessed']
Security,As seen in https://root-forum.cern.ch/t/ttreereaderarray-with-enum-type/54283:; ```; TTreeReaderArray<someEnum> test_someEnum ...; ```; leads to error like; ```; Error in <TTreeReaderArrayBase::CreateProxy()>: The template argument type T of T accessing branch test_struct.e1 (which contains data of type Int_t) is not known to ROOT. You will need to create a dictionary for it.; ```,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12661:244,access,accessing,244,https://root.cern,https://github.com/root-project/root/issues/12661,1,['access'],['accessing']
Security,"As stated in. https://bitbucket.org/wlav/cppyy/issues/176/issue-with-python-list-created-from-vector. in Cppyy-1.5.6 when we do the following:. l = [e for e in cppyy.gbl.get_vec()]. where get_vec() is a C++ injected function that returns a C++; std::vector<std::string>, the variable 'e' that goes through the vector is; not a Python string, but a temporary object of type std::string. Being 'e' a reference to a temporary, the vector goes out of scope. The second of the two solutions suggested in the discussion is applied; where necessary.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4648:207,inject,injected,207,https://root.cern,https://github.com/root-project/root/pull/4648,1,['inject'],['injected']
Security,"As there is one RLoopManager per computation graph, when aliases; were managed by RLoopManager they were computation-graph-wide.; It is desirable to make Alias definitions behave coherently with; Defines instead, i.e. have Aliases be only accessible in the branch; of the computation graph in which they were defined, and only in; nodes that are downstream of the one where the alias is added. This resolves #7381, ""[DF] Let Aliases be defined per computation graph; branch, not globally"".",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9519:239,access,accessible,239,https://root.cern,https://github.com/root-project/root/pull/9519,1,['access'],['accessible']
Security,"As there is one RLoopManager per computation graph, when aliases; were managed by RLoopManager they were computation-graph-wide.; It is desirable to make Alias definitions behave coherently with; Defines instead, i.e. have Aliases be only accessible in the branch; of the computation graph in which they were defined, and only in; nodes that are downstream of the one where the alias is added. This resolves #7381, ""[DF] Let Aliases be defined per computation graph; branch, not globally"". In particular, in this commit:; - move alias management from RLoopManager to RBookedColumns; - remove alias-managing logic from RLoopManager; - refactor several functions so they only take RBookedColumns as input; rather than a list of defined names plus a map of aliases; (CheckForDefinition, CheckForRedefinition, FindUnknownColumns,; GetValidatedColumnNames, BookFilterJit, FindUsedColumns,; ParseRDFExpression); - use RBookedColumns::ResolveAlias instead of ResolveAlias helper function; - adapt dataframe_utils test to the new signature of FindUnknownColumns. Note that this is a backward-incompatible change for user code that; relied on this global definition of Aliases. We expect this to be an; exceedingly rare usecase, and if such code exists it will produce a; clear error message.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9496:239,access,accessible,239,https://root.cern,https://github.com/root-project/root/pull/9496,1,['access'],['accessible']
Security,"As we discovered in a CMSSW ROOT `master` sync PR, the new RooFit CPU; backend treats empty datasets differently from the legacy NLL evaluation; backend:; https://github.com/cms-sw/cmsdist/pull/9025. This commit is fixing this, in particular removing the assumption that; datasets used for fits with the new CPU backend are never empty. A unit test that validates the behavior for empty data objects is also; added. I set the priority to ""high"" because this is a blocker for CMSSW to use ROOT master.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14817:354,validat,validates,354,https://root.cern,https://github.com/root-project/root/pull/14817,1,['validat'],['validates']
Security,"As we discussed, I prefer to have ROOT's code work with or without PCH or PCM. In general, let's use PCH and PCM as an optimization, but let's keep ROOT's code valid (and backward compatible for users) without:. - rootcling needs to be exposed to types as before, in case people (maybe unknowingly) rely on e.g. `<string>` being included and `using namespace std` being injected (`#pragma link C++ class MyClass<string>`). OTOH, `string.h` is likely not needed in rootcling's runtime.; - the interpreter-version of `ClassDef` should assume that the interpreter has not seed `Rtypes.h` before, for consistency. Thanks!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2755#issuecomment-463971199:236,expose,exposed,236,https://root.cern,https://github.com/root-project/root/pull/2755#issuecomment-463971199,2,"['expose', 'inject']","['exposed', 'injected']"
Security,"Asoka,. There was a mistake in your ping command, did you see the 'ping' in the ; middle, so actually it was pinging host ping. Regards,. Di. On 2021-05-12 10:43 a.m., Asoka De Silva wrote:; > hmm ... that was really unexpected for me for lxplus ...; >; > ***@***.*** ~]$ ping -c 10 ping webdav.lcg.triumf.ca ; > <http://webdav.lcg.triumf.ca>; > PING (137.138.28.175) 56(124) bytes of data.; >; > --- ping statistics ---; > 10 packets transmitted, 0 received, 100% packet loss, time 8999ms; >; > ***@***.*** ~]$; >; > Vitaliy, shouldn't we expect that to be accessible from lxplus ?; >; > regards,; > Asoka; >; >> On May 12, 2021, at 10:37 AM, Di Qing ***@***.*** ; >> ***@***.***>> wrote:; >>; >> Maybe the connections were from commodity network? Are you able to ; >> ping webdav.lcg.triumf.ca <http://webdav.lcg.triumf.ca>?; >>; >> Thanks,; >>; >> Di; >>; >>> On May 12, 2021, at 10:29 AM, Asoka De Silva ***@***.*** ; >>> ***@***.***>> wrote:; >>>; >>> ﻿ Hi Axel,; >>>; >>> I don't know but I'll add Simon and Di who are the Tier-1 experts ; >>> and may have ideas.; >>>; >>> Simon and Di, Axel has this issue and me a similar one - any ideas ?; >>>; >>>; >>>>; >>>>> s I crosscheck (to see whether it's related to the Davix redirect ; >>>>> issue #8155 ; >>>>> <https://can01.safelinks.protection.outlook.com/?url=https%3A%2F%2Fgithub.com%2Froot-project%2Froot%2Fissues%2F8155&data=04%7C01%7Cdqing%40triumf.ca%7Cb7cde810efc1452a4eab08d9156d8727%7Cc20535109cb34679a2d38f442e03b587%7C1%7C0%7C637564382428498460%7CUnknown%7CTWFpbGZsb3d8eyJWIjoiMC4wLjAwMDAiLCJQIjoiV2luMzIiLCJBTiI6Ik1haWwiLCJXVCI6Mn0%3D%7C1000&sdata=uCliumeh1X0KTsDzvHcojQm9qfvqZ96DsLCqoTBDdgs%3D&reserved=0> ) ; >>>>> I tried with curl but I get; >>>>>; >>>>> |$ curl -v ; >>>>> https://webdav.lcg.triumf.ca:2880/atlas/atlaslocalgroupdisk/rucio/user/desilva/a1/a8/myFile.1.root ; >>>>> <https://can01.safelinks.protection.outlook.com/?url=https%3A%2F%2Fwebdav.lcg.triumf.ca%3A2880%2Fatlas%2Fatlaslocalgroupdisk%2Frucio%2Fuser%2Fdesi",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8092#issuecomment-839989913:558,access,accessible,558,https://root.cern,https://github.com/root-project/root/issues/8092#issuecomment-839989913,1,['access'],['accessible']
Security,"Assigning to @pcanal - but expect a higher response time. This is a well known issue with TTree: not all code paths allow for robust handling of data errors (even though here, Philippe seems to suggest that it can indeed be caught). Having access to this file could indeed be very useful. We should then be able to create another, public file from that which we can use for testing.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9154#issuecomment-950921176:240,access,access,240,https://root.cern,https://github.com/root-project/root/issues/9154#issuecomment-950921176,1,['access'],['access']
Security,Assuming 'envfile' is non-null in /opt/root_src/main/src/pmain.cxx:51; 5: Left side of '||' is false in /opt/root_src/main/src/pmain.cxx:51; 6: Assuming the condition is false in /opt/root_src/main/src/pmain.cxx:51; 7: Taking false branch in /opt/root_src/main/src/pmain.cxx:51; 8: Assuming 'fenv' is non-null in /opt/root_src/main/src/pmain.cxx:55; 9: Taking false branch in /opt/root_src/main/src/pmain.cxx:55; 10: Loop condition is true. Entering loop body in /opt/root_src/main/src/pmain.cxx:59; 11: Assuming 'l' is > 0 in /opt/root_src/main/src/pmain.cxx:62; 12: Left side of '&&' is true in /opt/root_src/main/src/pmain.cxx:62; 13: Assuming the condition is false in /opt/root_src/main/src/pmain.cxx:62; 14: Taking false branch in /opt/root_src/main/src/pmain.cxx:62; 15: 'l' is > 0 in /opt/root_src/main/src/pmain.cxx:64; 16: Left side of '||' is false in /opt/root_src/main/src/pmain.cxx:64; 17: Assuming the condition is false in /opt/root_src/main/src/pmain.cxx:64; 18: Taking false branch in /opt/root_src/main/src/pmain.cxx:64; 19: Assuming the condition is false in /opt/root_src/main/src/pmain.cxx:66; 20: Taking false branch in /opt/root_src/main/src/pmain.cxx:66; 21: Memory is allocated in /opt/root_src/main/src/pmain.cxx:68; 22: Potential leak of memory pointed to by 'ev' in /opt/root_src/main/src/pmain.cxx:59; /opt/root_src/main/src/pmain.cxx:69:7: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]; 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/main/src/pmain.cxx:69; /opt/root_src/core/base/inc/TVersionCheck.h; /opt/root_src/main/src/nbmain.cxx; /opt/root_src/main/src/pmain.cxx; ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7527#issuecomment-800130662:2775,secur,security,2775,https://root.cern,https://github.com/root-project/root/issues/7527#issuecomment-800130662,1,['secur'],['security']
Security,"AsymmErrors(n, x, y, xerr_lo, xerr_hi, yerr_lo, yerr_hi); print(reproducer.GetErrorXlow(1), reproducer.GetErrorXhigh(1), reproducer.GetErrorYlow(1), reproducer.GetErrorYhigh(1)); [vpadulan@lxplus706 ~]$python github-7393-reproducer.py ; 6.465722853820043e+170 0.0 0.0 8.005628501318925e+261; ```. Whereas printing the index `0` elements of the data member arrays reported the correct values for them (although issue number 1 above is still present); ```; [vpadulan@lxplus706 ~]$cat github-7393-reproducer.py; import numpy as np; import ROOT; n = 1; x = np.array([1]); y = np.array([2]); xerr_hi, xerr_lo = np.array([0.1]), np.array([0.1]); yerr_hi, yerr_lo = np.array([0.2]), np.array([0.2]); reproducer = ROOT.TGraphAsymmErrors(n, x, y, xerr_lo, xerr_hi, yerr_lo, yerr_hi); print(reproducer.GetErrorXlow(0), reproducer.GetErrorXhigh(0), reproducer.GetErrorYlow(0), reproducer.GetErrorYhigh(0)); [vpadulan@lxplus706 ~]$python github-7393-reproducer.py ; 0.1 0.1 0.2 0.2; ```. 6.22/00 already shows the correct error raised as @AlkaidCheng confirmed above, although the out-of-bound access is still permitted if one insists a bit; ```; [vpadulan@lxplus706 ~]$source /cvmfs/sft.cern.ch/lcg/views/LCG_98python3/x86_64-centos7-gcc9-opt/setup.sh; [vpadulan@lxplus706 ~]$root --version; ROOT Version: 6.22/00; Built for linuxx8664gcc on Jun 14 2020, 15:54:05; From tags/v6-22-00@v6-22-00; [vpadulan@lxplus706 ~]$cat github-7393-reproducer.py; import numpy as np; import ROOT; n = 1; x = np.array([1.0]); y = np.array([2.0]); xerr_hi, xerr_lo = np.array([0.1]), np.array([0.1]); yerr_hi, yerr_lo = np.array([0.2]), np.array([0.2]); reproducer = ROOT.TGraphAsymmErrors(n, x, y, xerr_lo, xerr_hi, yerr_lo, yerr_hi); print(reproducer.GetErrorXlow(1), reproducer.GetErrorXhigh(1), reproducer.GetErrorYlow(1), reproducer.GetErrorYhigh(1)); [vpadulan@lxplus706 ~]$python github-7393-reproducer.py ; 6.465722853820043e+170 8.114724e-317 0.0 8.005628501318925e+261; ```; To be discussed in a separate issue probably",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7393#issuecomment-822586476:1870,access,access,1870,https://root.cern,https://github.com/root-project/root/issues/7393#issuecomment-822586476,1,['access'],['access']
Security,"At the moment, `push` workflows pass `--base_ref master` to `build_root.py`. This means that they may actually pick up a later commit (= the current commit on the branch) at the time the job actually starts to run. In order to be usable as indications when a certain configuration broke, it would be more useful to test exactly the pushed commit, identified by its hash. Unfortunately, fixing this isn't as easy as replacing; https://github.com/root-project/root/blob/db6ff452b032b23251970046fd1febe066e4fa4d/.github/workflows/root-ci.yml#L456-L465; to pass `--base_ref ${{ github.sha }}` because `build_root.py` calls `git clone --branch {branch} --single-branch {repository}`. Passing a hash here doesn't work (in local tests), and would otherwise probably result in a detached `HEAD`. Another complication is that the sources are included in the build artifacts used by PR builds, so they have to look like an ordinary clone for the rebase operation to work.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14061:365,hash,hash,365,https://root.cern,https://github.com/root-project/root/issues/14061,2,['hash'],['hash']
Security,Authority.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/98ef0ee5.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/CNRS2.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/f30dd6ad.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/b4278411.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/f30dd6ad.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/CNRS2.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/35105088.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/35105088.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/KENETROOTCA.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/USERTrustRSACertificationAuthority.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/CNRS2.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/USERTrustRSACertificationAuthority.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/DigiCertGridRootCA-Root.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/USERTrustRSACertificationAuthority.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/edca0fc0.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/2436bbb8.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/d58bb4bc.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/USERTrustRSACertificationAuthority.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/fc5a8f99.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/c2a48ab6.namespaces' from CURLOPT_CAPATH; * fai,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8092#issuecomment-840048181:4621,secur,security,4621,https://root.cern,https://github.com/root-project/root/issues/8092#issuecomment-840048181,2,"['certificate', 'secur']","['certificates', 'security']"
Security,Avoid access to deleted object (indirectly) from TH1::Clone.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1818:6,access,access,6,https://root.cern,https://github.com/root-project/root/pull/1818,1,['access'],['access']
Security,Avoid out-of-bounds vector element access,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11704:35,access,access,35,https://root.cern,https://github.com/root-project/root/pull/11704,1,['access'],['access']
Security,"Back to an alternative... Myself, I do the following to find out whether a C++ class had an `operator[]`: https://github.com/wlav/CPyCppyy/blob/master/src/Pythonize.cxx#L38 , but it may not work for you as-is, b/c an important point of that code is to not search for `__getitem__` in base classes, which I think you do want. Maybe something much simpler would be something along these lines:. ```; import cppyy; import cppyy.types. cppyy.cppdef(""""""\; struct MyStruct1 {};; struct MyStruct2 {; int operator[](int) { return 42; }; };. #include ""CPyCppyy/API.h"". bool CheckSequence(PyObject* obj, PyObject* base) {; if (CPyCppyy::Instance_Check(obj)) {; PyObject* gi1 = PyObject_GetAttrString((PyObject*)Py_TYPE(obj), ""__getitem__"");; PyObject* gi2 = PyObject_GetAttrString(base, ""__getitem__"");; bool ret = gi1 && gi1 != gi2;; Py_XDECREF(gi2);; Py_XDECREF(gi1);; return ret;; }; return false;; }; """"""). print(cppyy.gbl.CheckSequence(cppyy.gbl.MyStruct1(), cppyy.types.Instance)); print(cppyy.gbl.CheckSequence(cppyy.gbl.MyStruct2(), cppyy.types.Instance)); ```. (Where you'd import `cppyy.types.Instance` on the C-side, not pass it as an argument, but this Q&D code was simpler.). This can be greatly simplified/sped up, by explicitly adding `op_getitem` as a method for `tp_as_sequence` and then do a straight-up pointer comparison. Can probably also expose it as a `CPyCppyy::Sequence_Check` in the API.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/15161#issuecomment-2058191558:1350,expose,expose,1350,https://root.cern,https://github.com/root-project/root/issues/15161#issuecomment-2058191558,2,['expose'],['expose']
Security,"Back to this. I got sanitizer errors with ROOT master, like for example:; ```; Generating G__ROOTVecOps.cxx, ../../bin/libROOTVecOps_rdict.pcm, ../../bin/libROOTVecOps.rootmap; =================================================================; ==13496==ERROR: AddressSanitizer: heap-use-after-free on address 0x1262507beddc at pc 0x7ffdb6b7a85c bp 0x008d589d7da0 sp 0x008d589d7da8; READ of size 4 at 0x1262507beddc thread T0; #0 0x7ffdb6b7a85b in ROOT::Internal::DeleteChangesMemoryImpl(void) C:\root-dev\git\master\core\base\src\TObject.cxx:120; #1 0x7ffdb6b7a543 in ROOT::Internal::DeleteChangesMemory(void) C:\root-dev\git\master\core\base\src\TObject.cxx:129; #2 0x7ffdb6c4f848 in ROOT::Detail::HasBeenDeleted C:\root-dev\git\master\core\base\inc\TObject.h:403; #3 0x7ffdb6c4f848 in TList::FindLink(class TObject const *, int &) const C:\root-dev\git\master\core\cont\src\TList.cxx:644; #4 0x7ffdb6c519d5 in TList::Remove(class TObject *) C:\root-dev\git\master\core\cont\src\TList.cxx:827; #5 0x7ffdb6c44e76 in THashList::RecursiveRemove(class TObject *) C:\root-dev\git\master\core\cont\src\THashList.cxx:335; #6 0x7ffdb6bb56a5 in TROOT::RecursiveRemove(class TObject *) C:\root-dev\git\master\core\base\src\TROOT.cxx:2502; #7 0x7ffdb6b54712 in ROOT::CallRecursiveRemoveIfNeeded(class TObject &) C:\root-dev\git\master\core\base\inc\TROOT.h:400; #8 0x7ffdb6b7993d in TObject::~TObject(void) C:\root-dev\git\master\core\base\src\TObject.cxx:163; #9 0x7ffdb6cc03ae in ROOT::Internal::TCheckHashRecursiveRemoveConsistency::~TCheckHashRecursiveRemoveConsistency(void) C:\root-dev\git\master\core\meta\src\TCheckHashRecursiveRemoveConsistency.h; :68; #10 0x7ffdb6cd5c65 in TClass::HasConsistentHashMember(void) C:\root-dev\git\master\core\meta\inc\TClass.h:504; #11 0x7ffdb6cd5838 in ROOT::Internal::HasConsistentHashMember(class TClass &) C:\root-dev\git\master\core\meta\src\TClass.cxx:7373; #12 0x7ffdb6c54bc2 in TPair::CheckTObjectHashConsistency(void) const C:\root-dev\git\master\core\cont\inc\",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9445#issuecomment-2370893163:20,sanitiz,sanitizer,20,https://root.cern,https://github.com/root-project/root/issues/9445#issuecomment-2370893163,1,['sanitiz'],['sanitizer']
Security,"Back-ported to [root-project:v6-22-00-patches](https://github.com/root-project/root/tree/v6-22-00-patches) at [chissg:hotfix/v6-22-00-patches-8428](https://github.com/chissg/root/tree/hotfix/v6-22-00-patches-8428). Local build successful on `scisoftbuild01`, fix validation in progress by Kyle.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8429#issuecomment-861574811:263,validat,validation,263,https://root.cern,https://github.com/root-project/root/pull/8429#issuecomment-861574811,1,['validat'],['validation']
Security,"Backport of #15867 . For security reasons this option is off by default. . Only when desired `win.SetUseCurrentDir(true)` should be invoked. ; It happens automatically when ""localapp."" namespace configured as main ui5 panel for the window",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15868:25,secur,security,25,https://root.cern,https://github.com/root-project/root/pull/15868,1,['secur'],['security']
Security,"Before this commit, RDataSource columns were treated like a special; kind of Defined columns: they were registered in RBookedCustomColumn; and their contents were accessed via RCustomColumn::Get. This commit removes the logic that was Define'ing ad-hoc columns; corresponding to the RDS columns. Instead, we store the RDS column value; pointers in a dedicated std::map and teach RDSColumnReader to directly; use that. Logic is simpler, we avoid an extra function call and an extra; copy upon data-source value accesses, and we move closer to implementing; column readers specialized for a given RDS implementation. Sorry for the large commit, unfortunately changing how datasource columns _work_ requires touching a lot of different places and I am not sure it makes sense to split the commit in smaller pieces.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6208:163,access,accessed,163,https://root.cern,https://github.com/root-project/root/pull/6208,2,['access'],"['accessed', 'accesses']"
Security,"Before this commit, RResultPtr and RLoopManager shared the status (run or not run) of the RAction. Now only the action has knowledge of it, and exposes a method to retrieve the information, used only by the RResultPtr.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2461:144,expose,exposes,144,https://root.cern,https://github.com/root-project/root/pull/2461,1,['expose'],['exposes']
Security,"Before this patch, RCustomColumnBase's destructor could access; RLoopManager after deletion in some cases, e.g. when jitting code after; the computation graph was already out of scope or when the RLoopManager; was kept alive only by another node's shared_ptr to it. I think we never; saw a crash due to this bug because the use is _right after_ deletion,; and there is never an allocation between deletion and use. Valgrind; still sees it though. Thanks to the previous commit, all the logic that entangled RLoopManager; and RCustomColumns can actually be removed, and in particular; RCustomColumnBase's destructor does not need to access RLoopManager; anymore, fixing the use after delete. A minimal reproducer for the use after delete:. ```cpp; auto f = ROOT::RDataFrame(1).Filter([] { return true; });; ```. Before RFilter is destructed, it deletes its fPrevNode (shared_ptr to; the previous node), which triggers destruction of RLoopManager. Later,; RFilterBase is destructed, which triggers destruction of its registered; custom columns (in this case, the default ""rdfentry_"" or ""rdfslot_""; columns) and ~RCustomColumnBase tries to access RLoopManager.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5544:56,access,access,56,https://root.cern,https://github.com/root-project/root/pull/5544,3,['access'],['access']
Security,"Before this patch, friend branches or leaves were listed in the output of `GetColumnNames` twice, as `friendname.bname` and as `bname`. Now we only list the longer version. This fixes #8450 as a side-effect. This PR also adds a test and improves the related docs. Rationale for the change in behavior of `GetColumnNames`: currently, in RDataFrame we have (fairly convoluted) logic to retrieve 3 different lists of branch names given a TTree/TChain:. 1. a user-readable of list of available column names returned by `df.GetColumnNames()`; 2. a larger list of all valid spellings for all column names, used to validate user inputs (this includes all names returned by `df.GetColumnNames()` plus alternative spellings such as `branchname.leafname` when `branchname == leafname`, shorthands for `friendname.branchname` as just `branchname`, etc.; 3. a list of only top-level branches that we use as the list of branches to `Snapshot` by default. Before this patch `df.GetColumnNames()` returned multiple valid spellings for the same friend branch. That can be confusing, so I'd rather (try to) return only one valid spelling for each available branch/leaf. For consistency with `Display` and to not withhold information from users, among the two valid spellings we always show the ""fully qualified friendname.branchname"". Users can still use the shorthand ""branchname"" if it's not ambiguous, as the relevant documentation now points out.; I think this solution is the sweet spot between not being surprising (to users and to RDF developers), being easy to implement without further complicating or completely refactoring the branch-retrieval logic and being somewhat backward-compatible.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8529:608,validat,validate,608,https://root.cern,https://github.com/root-project/root/pull/8529,1,['validat'],['validate']
Security,"Before we can merge (or even test) this, the version needs to be uploaded at https://lcgpackages.web.cern.ch/tarFiles/sources/. The checksum of the github files are not stable (somehow the files are 'routinely' regenerated sometimes with different version of tar or gzip), so we can not rely on downloading it directly from github.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10725#issuecomment-1151358394:132,checksum,checksum,132,https://root.cern,https://github.com/root-project/root/pull/10725#issuecomment-1151358394,1,['checksum'],['checksum']
Security,"Below are the current results for ROOT master. No ""result2"" warning:. ```; /opt/root_src/bindings/pyroot/cppyy/CPyCppyy/src/CPPMethod.cxx:276:9: warning: Access to field 'fTopMessage' results in a dereference of a null pointer (loaded from variable 'evalue') [clang-analyzer-core.NullDereference]; 1: expanded from macro 'Py_XDECREF' in /usr/include/python2.7/object.h:825; 2: Assuming the condition is false in /opt/root_src/bindings/pyroot/cppyy/CPyCppyy/src/CPPMethod.cxx:749; 3: Left side of '&&' is false in /opt/root_src/bindings/pyroot/cppyy/CPyCppyy/src/CPPMethod.cxx:749; 4: Assuming 'args' is non-null in /opt/root_src/bindings/pyroot/cppyy/CPyCppyy/src/CPPMethod.cxx:753; 5: Taking false branch in /opt/root_src/bindings/pyroot/cppyy/CPyCppyy/src/CPPMethod.cxx:753; 6: Assuming field 'fArgsRequired' is not equal to 0 in /opt/root_src/bindings/pyroot/cppyy/CPyCppyy/src/CPPMethod.cxx:757; 7: Left side of '||' is true in /opt/root_src/bindings/pyroot/cppyy/CPyCppyy/src/CPPMethod.cxx:757; 8: Calling 'CPPMethod::ConvertAndSetArgs' in /opt/root_src/bindings/pyroot/cppyy/CPyCppyy/src/CPPMethod.cxx:758; 9: Assuming 'argMax' is not equal to 'argc' in /opt/root_src/bindings/pyroot/cppyy/CPyCppyy/src/CPPMethod.cxx:683; 10: Taking true branch in /opt/root_src/bindings/pyroot/cppyy/CPyCppyy/src/CPPMethod.cxx:683; 11: Assuming 'argc' is < field 'fArgsRequired' in /opt/root_src/bindings/pyroot/cppyy/CPyCppyy/src/CPPMethod.cxx:685; 12: Taking true branch in /opt/root_src/bindings/pyroot/cppyy/CPyCppyy/src/CPPMethod.cxx:685; 13: Calling 'CPPMethod::SetPyError_' in /opt/root_src/bindings/pyroot/cppyy/CPyCppyy/src/CPPMethod.cxx:686; 14: 'evalue' initialized to a null pointer value in /opt/root_src/bindings/pyroot/cppyy/CPyCppyy/src/CPPMethod.cxx:239; 15: Assuming the condition is false in /opt/root_src/bindings/pyroot/cppyy/CPyCppyy/src/CPPMethod.cxx:240; 16: Taking false branch in /opt/root_src/bindings/pyroot/cppyy/CPyCppyy/src/CPPMethod.cxx:240; 17: 'errtype' is null in /opt/root_sr",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7400#issuecomment-824715675:154,Access,Access,154,https://root.cern,https://github.com/root-project/root/issues/7400#issuecomment-824715675,1,['Access'],['Access']
Security,"Bertrand, could you do ""what's necessary"" here? I suppose following @eguiraud 's suggestion is the way to go, and you can probably validate this with WileE.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9730#issuecomment-1023140021:131,validat,validate,131,https://root.cern,https://github.com/root-project/root/issues/9730#issuecomment-1023140021,1,['validat'],['validate']
Security,"Bloom filter in header section of so files is well described by:; https://blogs.oracle.com/solaris/gnu-hash-elf-sections-v2; and; lld/ELF/SyntheticSections.cpp. The point is that the static linker puts bloom filter value to .gnu.hash section; in so files. We just have to read this value and compare to the; mangled_name hash that we're looking for. Bloom filter is a false posive; probability data structure, so it might say ""yes"" to library which; ""doesn't"" contain mangled_name, but it won't say ""no"" to library which; ""do"" contain mangled_name. Modules W/O this patch; ```; Processing tutorials/hsimple.C...; hsimple : Real Time = 0.04 seconds Cpu Time = 0.03 seconds; (TFile *) 0x562b37a14fe0; Processing /home/yuka/CERN/ROOT/memory.C...; cpu time = 0.362307 seconds; sys time = 0.039741 seconds; res memory = 278.215 Mbytes; vir memory = 448.973 Mbytes; ```. Modules With this patch; ```; Processing tutorials/hsimple.C...; hsimple : Real Time = 0.05 seconds Cpu Time = 0.05 seconds; (TFile *) 0x564410677780; Processing /home/yuka/CERN/ROOT/memory.C...; cpu time = 0.356471 seconds; sys time = 0.079519 seconds; res memory = 266.73 Mbytes; vir memory = 423.59 Mbytes; ```. This difference become bigger when we need to lookup more libraries in; experiments.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2131:103,hash,hash-elf-sections-,103,https://root.cern,https://github.com/root-project/root/pull/2131,3,['hash'],"['hash', 'hash-elf-sections-']"
Security,"Both `Foo<double>` and `Foo<Double32_t>` have the same typeid.; Before this commit, TClass::GetClass(typeid(Foo<double>)) would return; whatever was registered *last*. This is not ""stable""; it depends on which; branch is accessed first, or which TClass::GetClass call happens first, or; which library is loaded first. Make this more reporducible by consistently preferring types will less; Double32_t / Float16_t occurrences uin the typename. While at this, only remove a TClass from the typeid=>TClass map if it; really is the value for the typename.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12480:221,access,accessed,221,https://root.cern,https://github.com/root-project/root/pull/12480,1,['access'],['accessed']
Security,"Boundary/FindNode implementations. * The use of a 3D voxel grid (TGeoVoxelGrid) structure, able to store properties ""local"" or in the vicinity of a cartesian coordinate P. This structure allows to reduce the (typical) algorithmic complexity for ""Safety"" queries to ~O(1) (with a constant factor determined by the voxel size). Filling of the 3D voxel grid cache for Safety is done on-the-fly (using the BVH once). * (Optional) Additional caching of ""last-call"" safety values for really quick return when the value is still valid at the next call. Ideas for these improvements come from prior work in related libraries such as VecGeom. -----. Implementation details:. * The implementation is, for now (until fully tested), provided in a backward compatible manner:. - By default, nothing changes; - Users have to activate the BVH mode by setting an environment variable TGEO_PW_USEBVH; - Users may hence compare the 2 modes. * Functions for Safety, FindNode, FindBoundary dispatch to some internal implementation. This causes an extra lookup/jump, which can be removed once BVH is fully validated. * For the BVH, a well known open source implementation is included in header-only form. The headers are copied from https://github.com/madmann91/bvh commit 66e445b92f68801a6dd8ef943fe3038976ecb4ff. * A new class, TGeoVoxelGrid is provided for the cartesian VoxelGrid container. ----. Performance examples:. In a test with the ALICE simulation framework including the ITS + TPC detectors with 48240 volumes on the parallel world, we see. * initialization time goes from TGeoVoxelFinder: 10s ---> BVH: 40ms; * Geant simulation time: 10s --> 2s; * memory usage: 3GB --> 1GB. Hence, this PR will make a big difference for the ALICE simulation program. It was verified, that identical results (number of hits, steps, etc) are obtained when going from TGeoVoxelFinder --> BVH+GRID. ----. Outlook:. Similar techniques could be applied to ordinary TGeoNavigator routines. Checklist:. - [x] tested changes locally",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16442:2089,validat,validated,2089,https://root.cern,https://github.com/root-project/root/pull/16442,1,['validat'],['validated']
Security,"Bring down the number of address sanitizer failures to ~ 36. In detail:; - Add use-after-scope checks for clang builds.; - Disable new/delete and malloc/free consistency checks.; Since interpreted code cannot be instrumented, address sanitizer cannot; check whether memory is managed consistently.; (Technical details: asan replaces new, delete, malloc and free. In non-instrumented code, the new/delete replacement doesn't work, though. To asan it therefore looks like something was `new`ed in instrumented code, but `free`d in JITted code and vice versa.); - Change the order in which libaries are `LD_PRELOADED`. Address sanitizer needs the config first, and runtimes later. Otherwise, it will ignore the configs.; - Fix a regex, so address sanitizer is `LD_PRELOADED` only when python is used. Before, it would be loaded twice for command lines such as `root.exe .... ..../python/....`",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5660:33,sanitiz,sanitizer,33,https://root.cern,https://github.com/root-project/root/pull/5660,4,['sanitiz'],['sanitizer']
Security,Browser will read all data and all scripts from HTML file directly - ; no need to manage access to file system. Make more robust batch mode of web canvas,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16643:89,access,access,89,https://root.cern,https://github.com/root-project/root/pull/16643,1,['access'],['access']
Security,"Btw, `property` for modules does not exist. Afaik, this is the only lazy way to inject such a thing lazily.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4048#issuecomment-509227616:80,inject,inject,80,https://root.cern,https://github.com/root-project/root/pull/4048#issuecomment-509227616,1,['inject'],['inject']
Security,"Build failed on ROOT-debian10-i386/soversion.; Running on pcepsft10.dyndns.cern.ch:/build/workspace/root-pullrequests-build; [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/174875/console).; ### Errors:; - [2023-05-18T18:15:30.152Z] /home/sftnight/build/workspace/root-pullrequests-build/root/core/thread/src/RConcurrentHashColl.cxx:13:1: error: global qualification of class name is invalid before ‘{’ token ; - [2023-05-18T18:15:30.152Z] /usr/include/c++/8/bits/hashtable.h:195:21: error: static assertion failed: hash function must be invocable with an argument of key type ; - [2023-05-18T18:15:30.152Z] /usr/include/c++/8/bits/unique_ptr.h:831:30: error: use of deleted function ‘ROOT::Internal::RHashMap::RHashMap()’ ; - [2023-05-18T18:15:30.152Z] /home/sftnight/build/workspace/root-pullrequests-build/root/core/thread/src/RConcurrentHashColl.cxx:37:8: error: use of deleted function ‘std::unordered_map&lt;_Key, _Tp, _Hash, _Pred, _Alloc&gt;::unordered_map() [with _Key = ROOT::Internal::RConcurrentHashColl::HashValue; _Tp = std::vector&lt;int&gt;; _Hash = std::hash&lt;ROOT::Internal::RConcurrentHashColl::HashValue&gt;; _Pred = std::equal_to&lt;ROOT::Internal::RConcurrentHashColl::HashValue&gt;; _Alloc = std::allocator&lt;std::pair&lt;const ROOT::Internal::RConcurrentHashColl::HashValue, std::vector&lt;int&gt; &gt; &gt;]’ ; - [2023-05-18T18:15:30.152Z] /usr/include/c++/8/bits/unordered_map.h:141:7: error: use of deleted function ‘std::_Hashtable&lt;_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits&gt;::_Hashtable() [with _Key = ROOT::Internal::RConcurrentHashColl::HashValue; _Value = std::pair&lt;const ROOT::Internal::RConcurrentHashColl::HashValue, std::vector&lt;int&gt; &gt;; _Alloc = std::allocator&lt;std::pair&lt;const ROOT::Internal::RConcurrentHashColl::HashValue, std::vector&lt;int&gt; &gt; &gt;; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to&lt;ROOT::Internal::RConcurrent",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12847#issuecomment-1553441066:510,hash,hashtable,510,https://root.cern,https://github.com/root-project/root/pull/12847#issuecomment-1553441066,2,['hash'],"['hash', 'hashtable']"
Security,"Build failed on ROOT-debian10-i386/soversion.; Running on pcepsft10.dyndns.cern.ch:/build/workspace/root-pullrequests-build; [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/174896/console).; ### Errors:; - [2023-05-18T18:49:54.137Z] /home/sftnight/build/workspace/root-pullrequests-build/root/core/thread/src/RConcurrentHashColl.cxx:13:1: error: global qualification of class name is invalid before ‘{’ token ; - [2023-05-18T18:49:54.137Z] /usr/include/c++/8/bits/hashtable.h:195:21: error: static assertion failed: hash function must be invocable with an argument of key type ; - [2023-05-18T18:49:54.137Z] /usr/include/c++/8/bits/unique_ptr.h:831:30: error: use of deleted function ‘ROOT::Internal::RHashMap::RHashMap()’ ; - [2023-05-18T18:49:54.137Z] /home/sftnight/build/workspace/root-pullrequests-build/root/core/thread/src/RConcurrentHashColl.cxx:37:8: error: use of deleted function ‘std::unordered_map&lt;_Key, _Tp, _Hash, _Pred, _Alloc&gt;::unordered_map() [with _Key = ROOT::Internal::RConcurrentHashColl::HashValue; _Tp = std::vector&lt;int&gt;; _Hash = std::hash&lt;ROOT::Internal::RConcurrentHashColl::HashValue&gt;; _Pred = std::equal_to&lt;ROOT::Internal::RConcurrentHashColl::HashValue&gt;; _Alloc = std::allocator&lt;std::pair&lt;const ROOT::Internal::RConcurrentHashColl::HashValue, std::vector&lt;int&gt; &gt; &gt;]’ ; - [2023-05-18T18:49:54.137Z] /usr/include/c++/8/bits/unordered_map.h:141:7: error: use of deleted function ‘std::_Hashtable&lt;_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits&gt;::_Hashtable() [with _Key = ROOT::Internal::RConcurrentHashColl::HashValue; _Value = std::pair&lt;const ROOT::Internal::RConcurrentHashColl::HashValue, std::vector&lt;int&gt; &gt;; _Alloc = std::allocator&lt;std::pair&lt;const ROOT::Internal::RConcurrentHashColl::HashValue, std::vector&lt;int&gt; &gt; &gt;; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to&lt;ROOT::Internal::RConcurrent",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12846#issuecomment-1553488642:510,hash,hashtable,510,https://root.cern,https://github.com/root-project/root/pull/12846#issuecomment-1553488642,2,['hash'],"['hash', 'hashtable']"
Security,"Build failed on ROOT-debian10-i386/soversion.; Running on pcepsft10.dyndns.cern.ch:/build/workspace/root-pullrequests-build; [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/174903/console).; ### Errors:; - [2023-05-18T18:56:29.933Z] /home/sftnight/build/workspace/root-pullrequests-build/root/core/thread/src/RConcurrentHashColl.cxx:13:1: error: global qualification of class name is invalid before ‘{’ token ; - [2023-05-18T18:56:29.933Z] /usr/include/c++/8/bits/hashtable.h:195:21: error: static assertion failed: hash function must be invocable with an argument of key type ; - [2023-05-18T18:56:29.933Z] /usr/include/c++/8/bits/unique_ptr.h:831:30: error: use of deleted function ‘ROOT::Internal::RHashMap::RHashMap()’ ; - [2023-05-18T18:56:29.933Z] /home/sftnight/build/workspace/root-pullrequests-build/root/core/thread/src/RConcurrentHashColl.cxx:37:8: error: use of deleted function ‘std::unordered_map&lt;_Key, _Tp, _Hash, _Pred, _Alloc&gt;::unordered_map() [with _Key = ROOT::Internal::RConcurrentHashColl::HashValue; _Tp = std::vector&lt;int&gt;; _Hash = std::hash&lt;ROOT::Internal::RConcurrentHashColl::HashValue&gt;; _Pred = std::equal_to&lt;ROOT::Internal::RConcurrentHashColl::HashValue&gt;; _Alloc = std::allocator&lt;std::pair&lt;const ROOT::Internal::RConcurrentHashColl::HashValue, std::vector&lt;int&gt; &gt; &gt;]’ ; - [2023-05-18T18:56:29.934Z] /usr/include/c++/8/bits/unordered_map.h:141:7: error: use of deleted function ‘std::_Hashtable&lt;_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits&gt;::_Hashtable() [with _Key = ROOT::Internal::RConcurrentHashColl::HashValue; _Value = std::pair&lt;const ROOT::Internal::RConcurrentHashColl::HashValue, std::vector&lt;int&gt; &gt;; _Alloc = std::allocator&lt;std::pair&lt;const ROOT::Internal::RConcurrentHashColl::HashValue, std::vector&lt;int&gt; &gt; &gt;; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to&lt;ROOT::Internal::RConcurrent",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12847#issuecomment-1553499782:510,hash,hashtable,510,https://root.cern,https://github.com/root-project/root/pull/12847#issuecomment-1553499782,2,['hash'],"['hash', 'hashtable']"
Security,"Build failed on ROOT-debian10-i386/soversion.; Running on pcepsft11.dyndns.cern.ch:/home/sftnight/build/workspace/root-pullrequests-build; [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/174868/console).; ### Errors:; - [2023-05-18T18:23:23.216Z] FAILED: core/thread/CMakeFiles/Thread.dir/src/RConcurrentHashColl.cxx.o ; - [2023-05-18T18:23:23.216Z] /home/sftnight/build/workspace/root-pullrequests-build/root/core/thread/src/RConcurrentHashColl.cxx:13:1: error: global qualification of class name is invalid before ‘{’ token ; - [2023-05-18T18:23:23.216Z] /usr/include/c++/8/bits/hashtable.h:195:21: error: static assertion failed: hash function must be invocable with an argument of key type ; - [2023-05-18T18:23:23.216Z] /usr/include/c++/8/bits/unique_ptr.h:831:30: error: use of deleted function ‘ROOT::Internal::RHashMap::RHashMap()’ ; - [2023-05-18T18:23:23.216Z] /home/sftnight/build/workspace/root-pullrequests-build/root/core/thread/src/RConcurrentHashColl.cxx:37:8: error: use of deleted function ‘std::unordered_map&lt;_Key, _Tp, _Hash, _Pred, _Alloc&gt;::unordered_map() [with _Key = ROOT::Internal::RConcurrentHashColl::HashValue; _Tp = std::vector&lt;int&gt;; _Hash = std::hash&lt;ROOT::Internal::RConcurrentHashColl::HashValue&gt;; _Pred = std::equal_to&lt;ROOT::Internal::RConcurrentHashColl::HashValue&gt;; _Alloc = std::allocator&lt;std::pair&lt;const ROOT::Internal::RConcurrentHashColl::HashValue, std::vector&lt;int&gt; &gt; &gt;]’ ; - [2023-05-18T18:23:23.216Z] /usr/include/c++/8/bits/unordered_map.h:141:7: error: use of deleted function ‘std::_Hashtable&lt;_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits&gt;::_Hashtable() [with _Key = ROOT::Internal::RConcurrentHashColl::HashValue; _Value = std::pair&lt;const ROOT::Internal::RConcurrentHashColl::HashValue, std::vector&lt;int&gt; &gt;; _Alloc = std::allocator&lt;std::pair&lt;const ROOT::Internal::RConcurrentHashColl::HashValue, std::vector",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12846#issuecomment-1553447609:627,hash,hashtable,627,https://root.cern,https://github.com/root-project/root/pull/12846#issuecomment-1553447609,2,['hash'],"['hash', 'hashtable']"
Security,"Build failed on ROOT-fedora29/python3.; [See console output](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/51378/console).; ### Warnings:; - /mnt/build/workspace/root-pullrequests-build/root/core/meta/src/TClass.cxx:686:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:490:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing between 2147483648 and 2147483647 bytes at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 4294967295] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:761:21: warning: ‘%lu’ directive writing between 1 and 20 bytes into a region of size between 0 and 8191 [-Wformat-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:5203:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:4757:26: warning: ‘char* strncpy(char*, const char*, size_t)’ output may be truncated copying 10 bytes from a string of length 10 [-Wstringop-truncation] ; - /mnt/build/workspace/root-pullrequests-build/root/graf3d/ftgl/src/FTVectoriser.cxx:186:76: warning: cast between incompatible function types from ‘void (*)(GLenum, FTMesh*)’ {aka ‘void (*)(unsigned int, FTMesh*)’} to ‘GLUTesselatorFunction’ {aka ‘void (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/graf3d/ftgl/src/FTVectoriser.cxx:187:76: warning: cast between incompatible function types from ‘void (*)(void*, FTMesh*)’ to ‘GLUTesselatorFunction’ {aka ‘void (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/graf3d/ftgl/src/FTVectoriser.cxx:188:76: warning: cast between incompatible fun",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3236#issuecomment-454135180:512,access,accessing,512,https://root.cern,https://github.com/root-project/root/pull/3236#issuecomment-454135180,1,['access'],['accessing']
Security,"Build failed on ROOT-fedora29/python3.; [See console output](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/51648/console).; ### Warnings:; - /mnt/build/workspace/root-pullrequests-build/root/core/meta/src/TClass.cxx:686:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:490:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing between 2147483648 and 2147483647 bytes at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 4294967295] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:761:21: warning: ‘%lu’ directive writing between 1 and 20 bytes into a region of size between 0 and 8191 [-Wformat-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:5203:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:4757:26: warning: ‘char* strncpy(char*, const char*, size_t)’ output may be truncated copying 10 bytes from a string of length 10 [-Wstringop-truncation] ; - /mnt/build/workspace/root-pullrequests-build/root/graf3d/ftgl/src/FTVectoriser.cxx:186:76: warning: cast between incompatible function types from ‘void (*)(GLenum, FTMesh*)’ {aka ‘void (*)(unsigned int, FTMesh*)’} to ‘GLUTesselatorFunction’ {aka ‘void (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/graf3d/ftgl/src/FTVectoriser.cxx:187:76: warning: cast between incompatible function types from ‘void (*)(void*, FTMesh*)’ to ‘GLUTesselatorFunction’ {aka ‘void (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/graf3d/ftgl/src/FTVectoriser.cxx:188:76: warning: cast between incompatible fun",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2983#issuecomment-454782659:512,access,accessing,512,https://root.cern,https://github.com/root-project/root/pull/2983#issuecomment-454782659,1,['access'],['accessing']
Security,"Build failed on ROOT-fedora29/python3.; [See console output](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/52311/console).; ### Warnings:; - /mnt/build/workspace/root-pullrequests-build/root/core/meta/src/TClass.cxx:686:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:490:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing between 2147483648 and 2147483647 bytes at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 4294967295] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:761:21: warning: ‘%lu’ directive writing between 1 and 20 bytes into a region of size between 0 and 8191 [-Wformat-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/graf3d/ftgl/src/FTVectoriser.cxx:186:76: warning: cast between incompatible function types from ‘void (*)(GLenum, FTMesh*)’ {aka ‘void (*)(unsigned int, FTMesh*)’} to ‘GLUTesselatorFunction’ {aka ‘void (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/graf3d/ftgl/src/FTVectoriser.cxx:187:76: warning: cast between incompatible function types from ‘void (*)(void*, FTMesh*)’ to ‘GLUTesselatorFunction’ {aka ‘void (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/graf3d/ftgl/src/FTVectoriser.cxx:188:76: warning: cast between incompatible function types from ‘void (*)(FTGL_DOUBLE*, void**, GLfloat*, void**, FTMesh*)’ {aka ‘void (*)(double*, void**, float*, void**, FTMesh*)’} to ‘GLUTesselatorFunction’ {aka ‘void (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/graf3d/ftgl/src/FTVectoriser.cxx:189:76: warning: cast between incompatible function types from ‘void (*)(FTMesh*)’ to ‘GLUTesselatorFunction’ {aka ‘void (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2983#issuecomment-457425291:512,access,accessing,512,https://root.cern,https://github.com/root-project/root/pull/2983#issuecomment-457425291,1,['access'],['accessing']
Security,"Build failed on ROOT-fedora29/python3.; [See console output](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/52436/console).; ### Warnings:; - /mnt/build/workspace/root-pullrequests-build/root/core/meta/src/TClass.cxx:686:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:490:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing between 2147483648 and 2147483647 bytes at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 4294967295] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:761:21: warning: ‘%lu’ directive writing between 1 and 20 bytes into a region of size between 0 and 8191 [-Wformat-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:5203:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:4757:26: warning: ‘char* strncpy(char*, const char*, size_t)’ output may be truncated copying 10 bytes from a string of length 10 [-Wstringop-truncation] ; - /mnt/build/workspace/root-pullrequests-build/root/graf3d/ftgl/src/FTVectoriser.cxx:186:76: warning: cast between incompatible function types from ‘void (*)(GLenum, FTMesh*)’ {aka ‘void (*)(unsigned int, FTMesh*)’} to ‘GLUTesselatorFunction’ {aka ‘void (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/graf3d/ftgl/src/FTVectoriser.cxx:187:76: warning: cast between incompatible function types from ‘void (*)(void*, FTMesh*)’ to ‘GLUTesselatorFunction’ {aka ‘void (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/graf3d/ftgl/src/FTVectoriser.cxx:188:76: warning: cast between incompatible fun",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3236#issuecomment-458141335:512,access,accessing,512,https://root.cern,https://github.com/root-project/root/pull/3236#issuecomment-458141335,1,['access'],['accessing']
Security,"Build failed on ROOT-fedora29/python3.; [See console output](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/52472/console).; ### Warnings:; - /mnt/build/workspace/root-pullrequests-build/root/core/meta/src/TClass.cxx:686:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:490:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing between 2147483648 and 2147483647 bytes at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 4294967295] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:761:21: warning: ‘%lu’ directive writing between 1 and 20 bytes into a region of size between 0 and 8191 [-Wformat-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:5203:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:4757:26: warning: ‘char* strncpy(char*, const char*, size_t)’ output may be truncated copying 10 bytes from a string of length 10 [-Wstringop-truncation] ; - /mnt/build/workspace/root-pullrequests-build/root/graf3d/ftgl/src/FTVectoriser.cxx:186:76: warning: cast between incompatible function types from ‘void (*)(GLenum, FTMesh*)’ {aka ‘void (*)(unsigned int, FTMesh*)’} to ‘GLUTesselatorFunction’ {aka ‘void (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/graf3d/ftgl/src/FTVectoriser.cxx:187:76: warning: cast between incompatible function types from ‘void (*)(void*, FTMesh*)’ to ‘GLUTesselatorFunction’ {aka ‘void (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/graf3d/ftgl/src/FTVectoriser.cxx:188:76: warning: cast between incompatible fun",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3236#issuecomment-458503585:512,access,accessing,512,https://root.cern,https://github.com/root-project/root/pull/3236#issuecomment-458503585,1,['access'],['accessing']
Security,"Build failed on ROOT-fedora29/python3.; [See console output](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/52784/console).; ### Warnings:; - /mnt/build/workspace/root-pullrequests-build/root/core/meta/src/TClass.cxx:686:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:490:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing between 2147483648 and 2147483647 bytes at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 4294967295] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:761:21: warning: ‘%lu’ directive writing between 1 and 20 bytes into a region of size between 0 and 8191 [-Wformat-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:5203:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:4757:26: warning: ‘char* strncpy(char*, const char*, size_t)’ output may be truncated copying 10 bytes from a string of length 10 [-Wstringop-truncation] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TVirtualGL.cxx:31:85: warning: cast between incompatible function types from ‘TGLManager*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TSystem.cxx:1148:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing 1 byte at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 2147483649] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/graf3d/ftgl/src/FTVectoriser.cxx:186:76: warning: cast between incompatible function types from ‘void ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3357#issuecomment-459369738:512,access,accessing,512,https://root.cern,https://github.com/root-project/root/pull/3357#issuecomment-459369738,1,['access'],['accessing']
Security,"Build failed on ROOT-fedora29/python3.; [See console output](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/53006/console).; ### Warnings:; - /mnt/build/workspace/root-pullrequests-build/root/core/meta/src/TClass.cxx:686:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:490:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing between 2147483648 and 2147483647 bytes at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 4294967295] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:761:21: warning: ‘%lu’ directive writing between 1 and 20 bytes into a region of size between 0 and 8191 [-Wformat-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:5203:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:4757:26: warning: ‘char* strncpy(char*, const char*, size_t)’ output may be truncated copying 10 bytes from a string of length 10 [-Wstringop-truncation] ; - /mnt/build/workspace/root-pullrequests-build/root/graf3d/ftgl/src/FTVectoriser.cxx:186:76: warning: cast between incompatible function types from ‘void (*)(GLenum, FTMesh*)’ {aka ‘void (*)(unsigned int, FTMesh*)’} to ‘GLUTesselatorFunction’ {aka ‘void (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/graf3d/ftgl/src/FTVectoriser.cxx:187:76: warning: cast between incompatible function types from ‘void (*)(void*, FTMesh*)’ to ‘GLUTesselatorFunction’ {aka ‘void (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/graf3d/ftgl/src/FTVectoriser.cxx:188:76: warning: cast between incompatible fun",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3236#issuecomment-460347884:512,access,accessing,512,https://root.cern,https://github.com/root-project/root/pull/3236#issuecomment-460347884,1,['access'],['accessing']
Security,"Build failed on ROOT-fedora29/python3.; [See console output](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/53372/console).; ### Warnings:; - /mnt/build/workspace/root-pullrequests-build/root/core/meta/src/TClass.cxx:686:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:490:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing between 2147483648 and 2147483647 bytes at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 4294967295] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:761:21: warning: ‘%lu’ directive writing between 1 and 20 bytes into a region of size between 0 and 8191 [-Wformat-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:5203:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:4757:26: warning: ‘char* strncpy(char*, const char*, size_t)’ output may be truncated copying 10 bytes from a string of length 10 [-Wstringop-truncation] ; - /mnt/build/workspace/root-pullrequests-build/root/graf3d/ftgl/src/FTVectoriser.cxx:186:76: warning: cast between incompatible function types from ‘void (*)(GLenum, FTMesh*)’ {aka ‘void (*)(unsigned int, FTMesh*)’} to ‘GLUTesselatorFunction’ {aka ‘void (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/graf3d/ftgl/src/FTVectoriser.cxx:187:76: warning: cast between incompatible function types from ‘void (*)(void*, FTMesh*)’ to ‘GLUTesselatorFunction’ {aka ‘void (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/graf3d/ftgl/src/FTVectoriser.cxx:188:76: warning: cast between incompatible fun",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2983#issuecomment-461825509:512,access,accessing,512,https://root.cern,https://github.com/root-project/root/pull/2983#issuecomment-461825509,1,['access'],['accessing']
Security,"Build failed on ROOT-fedora29/python3.; [See console output](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/54842/console).; ### Warnings:; - CMake Warning at /mnt/build/workspace/root-pullrequests-build/rootspi/jenkins/root-build.cmake:785 (message): ; - /mnt/build/workspace/root-pullrequests-build/root/core/meta/src/TClass.cxx:686:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:490:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing between 2147483648 and 2147483647 bytes at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 4294967295] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:761:21: warning: ‘%lu’ directive writing between 1 and 20 bytes into a region of size between 0 and 8191 [-Wformat-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/graf3d/ftgl/src/FTVectoriser.cxx:186:76: warning: cast between incompatible function types from ‘void (*)(GLenum, FTMesh*)’ {aka ‘void (*)(unsigned int, FTMesh*)’} to ‘GLUTesselatorFunction’ {aka ‘void (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/graf3d/ftgl/src/FTVectoriser.cxx:187:76: warning: cast between incompatible function types from ‘void (*)(void*, FTMesh*)’ to ‘GLUTesselatorFunction’ {aka ‘void (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/graf3d/ftgl/src/FTVectoriser.cxx:188:76: warning: cast between incompatible function types from ‘void (*)(FTGL_DOUBLE*, void**, GLfloat*, void**, FTMesh*)’ {aka ‘void (*)(double*, void**, float*, void**, FTMesh*)’} to ‘GLUTesselatorFunction’ {aka ‘void (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/graf3d/ftgl/src/FTVectoriser.cxx:189:76: warning: cast between incompatible function types from",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3495#issuecomment-470430033:626,access,accessing,626,https://root.cern,https://github.com/root-project/root/pull/3495#issuecomment-470430033,1,['access'],['accessing']
Security,"Build failed on ROOT-fedora29/python3.; [See console output](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/54902/console).; ### Warnings:; - /mnt/build/workspace/root-pullrequests-build/root/core/meta/src/TClass.cxx:686:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:490:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing between 2147483648 and 2147483647 bytes at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 4294967295] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:761:21: warning: ‘%lu’ directive writing between 1 and 20 bytes into a region of size between 0 and 8191 [-Wformat-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:5203:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:4757:26: warning: ‘char* strncpy(char*, const char*, size_t)’ output may be truncated copying 10 bytes from a string of length 10 [-Wstringop-truncation] ; - /mnt/build/workspace/root-pullrequests-build/root/graf3d/ftgl/src/FTVectoriser.cxx:186:76: warning: cast between incompatible function types from ‘void (*)(GLenum, FTMesh*)’ {aka ‘void (*)(unsigned int, FTMesh*)’} to ‘GLUTesselatorFunction’ {aka ‘void (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/graf3d/ftgl/src/FTVectoriser.cxx:187:76: warning: cast between incompatible function types from ‘void (*)(void*, FTMesh*)’ to ‘GLUTesselatorFunction’ {aka ‘void (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/graf3d/ftgl/src/FTVectoriser.cxx:188:76: warning: cast between incompatible fun",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3509#issuecomment-470527237:512,access,accessing,512,https://root.cern,https://github.com/root-project/root/pull/3509#issuecomment-470527237,1,['access'],['accessing']
Security,"Build failed on ROOT-fedora29/python3.; [See console output](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/54998/console).; ### Warnings:; - CMake Warning at /mnt/build/workspace/root-pullrequests-build/rootspi/jenkins/root-build.cmake:785 (message): ; - /mnt/build/workspace/root-pullrequests-build/root/core/meta/src/TClass.cxx:686:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:490:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing between 2147483648 and 2147483647 bytes at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 4294967295] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:761:21: warning: ‘%lu’ directive writing between 1 and 20 bytes into a region of size between 0 and 8191 [-Wformat-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:5203:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:4757:26: warning: ‘char* strncpy(char*, const char*, size_t)’ output may be truncated copying 10 bytes from a string of length 10 [-Wstringop-truncation] ; - /mnt/build/workspace/root-pullrequests-build/root/graf3d/ftgl/src/FTVectoriser.cxx:186:76: warning: cast between incompatible function types from ‘void (*)(GLenum, FTMesh*)’ {aka ‘void (*)(unsigned int, FTMesh*)’} to ‘GLUTesselatorFunction’ {aka ‘void (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/graf3d/ftgl/src/FTVectoriser.cxx:187:76: warning: cast between incompatible function types from ‘void (*)(void*, FTMesh*)’ to ‘GLUTesselatorFunction’ {aka ‘void (*)()’} [-Wcast-function-type] ; - /mnt/build/work",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3495#issuecomment-471012018:626,access,accessing,626,https://root.cern,https://github.com/root-project/root/pull/3495#issuecomment-471012018,1,['access'],['accessing']
Security,"Build failed on ROOT-fedora29/python3.; [See console output](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/56136/console).; ### Warnings:; - /mnt/build/workspace/root-pullrequests-build/root/core/meta/src/TClass.cxx:686:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:490:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing between 2147483648 and 2147483647 bytes at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 4294967295] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:761:21: warning: ‘%lu’ directive writing between 1 and 20 bytes into a region of size between 0 and 8191 [-Wformat-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/graf3d/ftgl/src/FTVectoriser.cxx:186:76: warning: cast between incompatible function types from ‘void (*)(GLenum, FTMesh*)’ {aka ‘void (*)(unsigned int, FTMesh*)’} to ‘GLUTesselatorFunction’ {aka ‘void (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/graf3d/ftgl/src/FTVectoriser.cxx:187:76: warning: cast between incompatible function types from ‘void (*)(void*, FTMesh*)’ to ‘GLUTesselatorFunction’ {aka ‘void (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/graf3d/ftgl/src/FTVectoriser.cxx:188:76: warning: cast between incompatible function types from ‘void (*)(FTGL_DOUBLE*, void**, GLfloat*, void**, FTMesh*)’ {aka ‘void (*)(double*, void**, float*, void**, FTMesh*)’} to ‘GLUTesselatorFunction’ {aka ‘void (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/graf3d/ftgl/src/FTVectoriser.cxx:189:76: warning: cast between incompatible function types from ‘void (*)(FTMesh*)’ to ‘GLUTesselatorFunction’ {aka ‘void (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3619#issuecomment-478136552:512,access,accessing,512,https://root.cern,https://github.com/root-project/root/pull/3619#issuecomment-478136552,1,['access'],['accessing']
Security,"Build failed on ROOT-fedora29/python3.; [See console output](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/57919/console).; ### Warnings:; - /mnt/build/workspace/root-pullrequests-build/root/core/meta/src/TClass.cxx:686:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:490:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing between 2147483648 and 2147483647 bytes at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 4294967295] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:761:21: warning: ‘%lu’ directive writing between 1 and 20 bytes into a region of size between 0 and 8191 [-Wformat-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:5203:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:4757:26: warning: ‘char* strncpy(char*, const char*, size_t)’ output may be truncated copying 10 bytes from a string of length 10 [-Wstringop-truncation] ; - /mnt/build/workspace/root-pullrequests-build/root/graf3d/ftgl/src/FTVectoriser.cxx:186:76: warning: cast between incompatible function types from ‘void (*)(GLenum, FTMesh*)’ {aka ‘void (*)(unsigned int, FTMesh*)’} to ‘GLUTesselatorFunction’ {aka ‘void (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/graf3d/ftgl/src/FTVectoriser.cxx:187:76: warning: cast between incompatible function types from ‘void (*)(void*, FTMesh*)’ to ‘GLUTesselatorFunction’ {aka ‘void (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/graf3d/ftgl/src/FTVectoriser.cxx:188:76: warning: cast between incompatible fun",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3726#issuecomment-486155559:512,access,accessing,512,https://root.cern,https://github.com/root-project/root/pull/3726#issuecomment-486155559,1,['access'],['accessing']
Security,"Build failed on ROOT-fedora29/python3.; [See console output](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/58334/console).; ### Warnings:; - /mnt/build/workspace/root-pullrequests-build/root/core/meta/src/TClass.cxx:686:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:490:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing between 2147483648 and 2147483647 bytes at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 4294967295] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:761:21: warning: ‘%lu’ directive writing between 1 and 20 bytes into a region of size between 0 and 8191 [-Wformat-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:5203:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:4757:26: warning: ‘char* strncpy(char*, const char*, size_t)’ output may be truncated copying 10 bytes from a string of length 10 [-Wstringop-truncation] ; - /mnt/build/workspace/root-pullrequests-build/root/graf3d/ftgl/src/FTVectoriser.cxx:186:76: warning: cast between incompatible function types from ‘void (*)(GLenum, FTMesh*)’ {aka ‘void (*)(unsigned int, FTMesh*)’} to ‘GLUTesselatorFunction’ {aka ‘void (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/graf3d/ftgl/src/FTVectoriser.cxx:187:76: warning: cast between incompatible function types from ‘void (*)(void*, FTMesh*)’ to ‘GLUTesselatorFunction’ {aka ‘void (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/graf3d/ftgl/src/FTVectoriser.cxx:188:76: warning: cast between incompatible fun",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3751#issuecomment-487600631:512,access,accessing,512,https://root.cern,https://github.com/root-project/root/pull/3751#issuecomment-487600631,1,['access'],['accessing']
Security,"Build failed on ROOT-fedora29/python3.; [See console output](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/60123/console).; ### Warnings:; - CMake Warning at /mnt/build/workspace/root-pullrequests-build/rootspi/jenkins/root-build.cmake:807 (message): ; - /mnt/build/workspace/root-pullrequests-build/root/core/meta/src/TClass.cxx:686:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:490:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing between 2147483648 and 2147483647 bytes at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 4294967295] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:761:21: warning: ‘%lu’ directive writing between 1 and 20 bytes into a region of size between 0 and 8191 [-Wformat-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:5203:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:4757:26: warning: ‘char* strncpy(char*, const char*, size_t)’ output may be truncated copying 10 bytes from a string of length 10 [-Wstringop-truncation] ; - /mnt/build/workspace/root-pullrequests-build/root/graf3d/ftgl/src/FTVectoriser.cxx:186:76: warning: cast between incompatible function types from ‘void (*)(GLenum, FTMesh*)’ {aka ‘void (*)(unsigned int, FTMesh*)’} to ‘GLUTesselatorFunction’ {aka ‘void (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/graf3d/ftgl/src/FTVectoriser.cxx:187:76: warning: cast between incompatible function types from ‘void (*)(void*, FTMesh*)’ to ‘GLUTesselatorFunction’ {aka ‘void (*)()’} [-Wcast-function-type] ; - /mnt/build/work",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3875#issuecomment-496524545:626,access,accessing,626,https://root.cern,https://github.com/root-project/root/pull/3875#issuecomment-496524545,1,['access'],['accessing']
Security,"Build failed on ROOT-fedora29/python3.; [See console output](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/61815/console).; ### Warnings:; - /mnt/build/workspace/root-pullrequests-build/root/core/meta/src/TClass.cxx:686:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:490:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing between 2147483648 and 2147483647 bytes at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 4294967295] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:761:21: warning: ‘%lu’ directive writing between 1 and 20 bytes into a region of size between 0 and 8191 [-Wformat-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:5203:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:4757:26: warning: ‘char* strncpy(char*, const char*, size_t)’ output may be truncated copying 10 bytes from a string of length 10 [-Wstringop-truncation] ; - /mnt/build/workspace/root-pullrequests-build/root/graf3d/ftgl/src/FTVectoriser.cxx:186:76: warning: cast between incompatible function types from ‘void (*)(GLenum, FTMesh*)’ {aka ‘void (*)(unsigned int, FTMesh*)’} to ‘GLUTesselatorFunction’ {aka ‘void (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/graf3d/ftgl/src/FTVectoriser.cxx:187:76: warning: cast between incompatible function types from ‘void (*)(void*, FTMesh*)’ to ‘GLUTesselatorFunction’ {aka ‘void (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/graf3d/ftgl/src/FTVectoriser.cxx:188:76: warning: cast between incompatible fun",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3236#issuecomment-503915403:512,access,accessing,512,https://root.cern,https://github.com/root-project/root/pull/3236#issuecomment-503915403,1,['access'],['accessing']
Security,"Build failed on ROOT-fedora29/python3.; [See console output](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/66556/console).; ### Warnings:; - /mnt/build/workspace/root-pullrequests-build/root/core/meta/src/TClass.cxx:686:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:490:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing between 2147483648 and 2147483647 bytes at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 4294967295] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:761:21: warning: ‘%lu’ directive writing between 1 and 20 bytes into a region of size between 0 and 8191 [-Wformat-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/graf3d/ftgl/src/FTVectoriser.cxx:186:76: warning: cast between incompatible function types from ‘void (*)(GLenum, FTMesh*)’ {aka ‘void (*)(unsigned int, FTMesh*)’} to ‘GLUTesselatorFunction’ {aka ‘void (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/graf3d/ftgl/src/FTVectoriser.cxx:187:76: warning: cast between incompatible function types from ‘void (*)(void*, FTMesh*)’ to ‘GLUTesselatorFunction’ {aka ‘void (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/graf3d/ftgl/src/FTVectoriser.cxx:188:76: warning: cast between incompatible function types from ‘void (*)(FTGL_DOUBLE*, void**, GLfloat*, void**, FTMesh*)’ {aka ‘void (*)(double*, void**, float*, void**, FTMesh*)’} to ‘GLUTesselatorFunction’ {aka ‘void (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/graf3d/ftgl/src/FTVectoriser.cxx:189:76: warning: cast between incompatible function types from ‘void (*)(FTMesh*)’ to ‘GLUTesselatorFunction’ {aka ‘void (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4309#issuecomment-526262587:512,access,accessing,512,https://root.cern,https://github.com/root-project/root/pull/4309#issuecomment-526262587,1,['access'],['accessing']
Security,"Build failed on ROOT-fedora29/python3.; [See console output](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/71198/console).; AXEL DEBUG: logParserAction errors=0, warnings=1195; ### Warnings:; - CMake Warning at /mnt/build/workspace/root-pullrequests-build/rootspi/jenkins/root-build.cmake:892 (message): ; - /mnt/build/workspace/root-pullrequests-build/root/core/meta/src/TClass.cxx:686:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:490:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing between 2147483648 and 2147483647 bytes at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 4294967295] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:761:21: warning: ‘%lu’ directive writing between 1 and 20 bytes into a region of size between 0 and 8191 [-Wformat-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:5203:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:4757:26: warning: ‘char* strncpy(char*, const char*, size_t)’ output may be truncated copying 10 bytes from a string of length 10 [-Wstringop-truncation] ; - /mnt/build/workspace/root-pullrequests-build/root/graf3d/ftgl/src/FTVectoriser.cxx:186:76: warning: cast between incompatible function types from ‘void (*)(GLenum, FTMesh*)’ {aka ‘void (*)(unsigned int, FTMesh*)’} to ‘GLUTesselatorFunction’ {aka ‘void (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/graf3d/ftgl/src/FTVectoriser.cxx:187:76: warning: cast between incompatible function types from ‘void (*)(void*, FTMesh*)’ to ‘GLUTesselatorFunction’ {aka ‘vo",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4592#issuecomment-547429612:679,access,accessing,679,https://root.cern,https://github.com/root-project/root/pull/4592#issuecomment-547429612,1,['access'],['accessing']
Security,"Build failed on ROOT-fedora29/python3.; [See console output](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/71287/console).; ### Warnings:; - /mnt/build/workspace/root-pullrequests-build/root/core/meta/src/TClass.cxx:686:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:490:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing between 2147483648 and 2147483647 bytes at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 4294967295] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:761:21: warning: ‘%lu’ directive writing between 1 and 20 bytes into a region of size between 0 and 8191 [-Wformat-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:5203:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:4757:26: warning: ‘char* strncpy(char*, const char*, size_t)’ output may be truncated copying 10 bytes from a string of length 10 [-Wstringop-truncation] ; - /mnt/build/workspace/root-pullrequests-build/root/graf3d/ftgl/src/FTVectoriser.cxx:186:76: warning: cast between incompatible function types from ‘void (*)(GLenum, FTMesh*)’ {aka ‘void (*)(unsigned int, FTMesh*)’} to ‘GLUTesselatorFunction’ {aka ‘void (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/graf3d/ftgl/src/FTVectoriser.cxx:187:76: warning: cast between incompatible function types from ‘void (*)(void*, FTMesh*)’ to ‘GLUTesselatorFunction’ {aka ‘void (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/graf3d/ftgl/src/FTVectoriser.cxx:188:76: warning: cast between incompatible fun",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4595#issuecomment-547811067:512,access,accessing,512,https://root.cern,https://github.com/root-project/root/pull/4595#issuecomment-547811067,1,['access'],['accessing']
Security,"Build failed on ROOT-performance-centos8-multicore/cxx17.; Running on olbdw-01.cern.ch:/data/sftnight/workspace/root-pullrequests-build; [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/174869/console).; ### Errors:; - [2023-05-18T18:18:09.068Z] /data/sftnight/workspace/root-pullrequests-build/root/core/thread/src/RConcurrentHashColl.cxx:13:1: error: global qualification of class name is invalid before ‘{’ token ; - [2023-05-18T18:18:09.069Z] /usr/include/c++/8/bits/unique_ptr.h:835:30: error: use of deleted function ‘ROOT::Internal::RHashMap::RHashMap()’ ; - [2023-05-18T18:18:09.069Z] /data/sftnight/workspace/root-pullrequests-build/root/core/thread/src/RConcurrentHashColl.cxx:37:8: error: use of deleted function ‘std::unordered_map&lt;_Key, _Tp, _Hash, _Pred, _Alloc&gt;::unordered_map() [with _Key = ROOT::Internal::RConcurrentHashColl::HashValue; _Tp = std::vector&lt;int&gt;; _Hash = std::hash&lt;ROOT::Internal::RConcurrentHashColl::HashValue&gt;; _Pred = std::equal_to&lt;ROOT::Internal::RConcurrentHashColl::HashValue&gt;; _Alloc = std::allocator&lt;std::pair&lt;const ROOT::Internal::RConcurrentHashColl::HashValue, std::vector&lt;int&gt; &gt; &gt;]’ ; - [2023-05-18T18:18:09.069Z] /usr/include/c++/8/bits/unordered_map.h:141:7: error: use of deleted function ‘std::_Hashtable&lt;_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits&gt;::_Hashtable() [with _Key = ROOT::Internal::RConcurrentHashColl::HashValue; _Value = std::pair&lt;const ROOT::Internal::RConcurrentHashColl::HashValue, std::vector&lt;int&gt; &gt;; _Alloc = std::allocator&lt;std::pair&lt;const ROOT::Internal::RConcurrentHashColl::HashValue, std::vector&lt;int&gt; &gt; &gt;; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to&lt;ROOT::Internal::RConcurrentHashColl::HashValue&gt;; _H1 = std::hash&lt;ROOT::Internal::RConcurrentHashColl::HashValue&gt;; _H2 = std::__detail::_Mod_range_hashing; _Hash = std::__detail::_Default",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12846#issuecomment-1553443733:895,Hash,HashValue,895,https://root.cern,https://github.com/root-project/root/pull/12846#issuecomment-1553443733,5,"['Hash', 'hash']","['HashValue', 'hash']"
Security,"Build failed on ROOT-performance-centos8-multicore/cxx17.; Running on olbdw-01.cern.ch:/data/sftnight/workspace/root-pullrequests-build; [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/174876/console).; ### Errors:; - [2023-05-18T18:28:25.353Z] /data/sftnight/workspace/root-pullrequests-build/root/core/thread/src/RConcurrentHashColl.cxx:13:1: error: global qualification of class name is invalid before ‘{’ token ; - [2023-05-18T18:28:25.630Z] /usr/include/c++/8/bits/unique_ptr.h:835:30: error: use of deleted function ‘ROOT::Internal::RHashMap::RHashMap()’ ; - [2023-05-18T18:28:25.630Z] /data/sftnight/workspace/root-pullrequests-build/root/core/thread/src/RConcurrentHashColl.cxx:37:8: error: use of deleted function ‘std::unordered_map&lt;_Key, _Tp, _Hash, _Pred, _Alloc&gt;::unordered_map() [with _Key = ROOT::Internal::RConcurrentHashColl::HashValue; _Tp = std::vector&lt;int&gt;; _Hash = std::hash&lt;ROOT::Internal::RConcurrentHashColl::HashValue&gt;; _Pred = std::equal_to&lt;ROOT::Internal::RConcurrentHashColl::HashValue&gt;; _Alloc = std::allocator&lt;std::pair&lt;const ROOT::Internal::RConcurrentHashColl::HashValue, std::vector&lt;int&gt; &gt; &gt;]’ ; - [2023-05-18T18:28:25.630Z] /usr/include/c++/8/bits/unordered_map.h:141:7: error: use of deleted function ‘std::_Hashtable&lt;_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits&gt;::_Hashtable() [with _Key = ROOT::Internal::RConcurrentHashColl::HashValue; _Value = std::pair&lt;const ROOT::Internal::RConcurrentHashColl::HashValue, std::vector&lt;int&gt; &gt;; _Alloc = std::allocator&lt;std::pair&lt;const ROOT::Internal::RConcurrentHashColl::HashValue, std::vector&lt;int&gt; &gt; &gt;; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to&lt;ROOT::Internal::RConcurrentHashColl::HashValue&gt;; _H1 = std::hash&lt;ROOT::Internal::RConcurrentHashColl::HashValue&gt;; _H2 = std::__detail::_Mod_range_hashing; _Hash = std::__detail::_Default",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12847#issuecomment-1553458918:895,Hash,HashValue,895,https://root.cern,https://github.com/root-project/root/pull/12847#issuecomment-1553458918,5,"['Hash', 'hash']","['HashValue', 'hash']"
Security,"Build failed on ROOT-performance-centos8-multicore/cxx17.; Running on olbdw-01.cern.ch:/data/sftnight/workspace/root-pullrequests-build; [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/174897/console).; ### Errors:; - [2023-05-18T19:40:02.839Z] /data/sftnight/workspace/root-pullrequests-build/root/core/thread/src/RConcurrentHashColl.cxx:13:1: error: global qualification of class name is invalid before ‘{’ token ; - [2023-05-18T19:40:02.839Z] /usr/include/c++/8/bits/unique_ptr.h:835:30: error: use of deleted function ‘ROOT::Internal::RHashMap::RHashMap()’ ; - [2023-05-18T19:40:02.839Z] /data/sftnight/workspace/root-pullrequests-build/root/core/thread/src/RConcurrentHashColl.cxx:37:8: error: use of deleted function ‘std::unordered_map&lt;_Key, _Tp, _Hash, _Pred, _Alloc&gt;::unordered_map() [with _Key = ROOT::Internal::RConcurrentHashColl::HashValue; _Tp = std::vector&lt;int&gt;; _Hash = std::hash&lt;ROOT::Internal::RConcurrentHashColl::HashValue&gt;; _Pred = std::equal_to&lt;ROOT::Internal::RConcurrentHashColl::HashValue&gt;; _Alloc = std::allocator&lt;std::pair&lt;const ROOT::Internal::RConcurrentHashColl::HashValue, std::vector&lt;int&gt; &gt; &gt;]’ ; - [2023-05-18T19:40:02.839Z] /usr/include/c++/8/bits/unordered_map.h:141:7: error: use of deleted function ‘std::_Hashtable&lt;_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits&gt;::_Hashtable() [with _Key = ROOT::Internal::RConcurrentHashColl::HashValue; _Value = std::pair&lt;const ROOT::Internal::RConcurrentHashColl::HashValue, std::vector&lt;int&gt; &gt;; _Alloc = std::allocator&lt;std::pair&lt;const ROOT::Internal::RConcurrentHashColl::HashValue, std::vector&lt;int&gt; &gt; &gt;; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to&lt;ROOT::Internal::RConcurrentHashColl::HashValue&gt;; _H1 = std::hash&lt;ROOT::Internal::RConcurrentHashColl::HashValue&gt;; _H2 = std::__detail::_Mod_range_hashing; _Hash = std::__detail::_Default",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12846#issuecomment-1553557302:895,Hash,HashValue,895,https://root.cern,https://github.com/root-project/root/pull/12846#issuecomment-1553557302,5,"['Hash', 'hash']","['HashValue', 'hash']"
Security,"Build failed on ROOT-performance-centos8-multicore/cxx17.; Running on olbdw-01.cern.ch:/data/sftnight/workspace/root-pullrequests-build; [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/174904/console).; ### Errors:; - [2023-05-18T19:50:07.334Z] /data/sftnight/workspace/root-pullrequests-build/root/core/thread/src/RConcurrentHashColl.cxx:13:1: error: global qualification of class name is invalid before ‘{’ token ; - [2023-05-18T19:50:07.334Z] /usr/include/c++/8/bits/unique_ptr.h:835:30: error: use of deleted function ‘ROOT::Internal::RHashMap::RHashMap()’ ; - [2023-05-18T19:50:07.334Z] /data/sftnight/workspace/root-pullrequests-build/root/core/thread/src/RConcurrentHashColl.cxx:37:8: error: use of deleted function ‘std::unordered_map&lt;_Key, _Tp, _Hash, _Pred, _Alloc&gt;::unordered_map() [with _Key = ROOT::Internal::RConcurrentHashColl::HashValue; _Tp = std::vector&lt;int&gt;; _Hash = std::hash&lt;ROOT::Internal::RConcurrentHashColl::HashValue&gt;; _Pred = std::equal_to&lt;ROOT::Internal::RConcurrentHashColl::HashValue&gt;; _Alloc = std::allocator&lt;std::pair&lt;const ROOT::Internal::RConcurrentHashColl::HashValue, std::vector&lt;int&gt; &gt; &gt;]’ ; - [2023-05-18T19:50:07.334Z] /usr/include/c++/8/bits/unordered_map.h:141:7: error: use of deleted function ‘std::_Hashtable&lt;_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits&gt;::_Hashtable() [with _Key = ROOT::Internal::RConcurrentHashColl::HashValue; _Value = std::pair&lt;const ROOT::Internal::RConcurrentHashColl::HashValue, std::vector&lt;int&gt; &gt;; _Alloc = std::allocator&lt;std::pair&lt;const ROOT::Internal::RConcurrentHashColl::HashValue, std::vector&lt;int&gt; &gt; &gt;; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to&lt;ROOT::Internal::RConcurrentHashColl::HashValue&gt;; _H1 = std::hash&lt;ROOT::Internal::RConcurrentHashColl::HashValue&gt;; _H2 = std::__detail::_Mod_range_hashing; _Hash = std::__detail::_Default",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12847#issuecomment-1553567486:895,Hash,HashValue,895,https://root.cern,https://github.com/root-project/root/pull/12847#issuecomment-1553567486,5,"['Hash', 'hash']","['HashValue', 'hash']"
Security,"Build failed on ROOT-ubuntu16/nortcxxmod.; Running on sft-ubuntu-1604-1.cern.ch:/build/workspace/root-pullrequests-build; [See cdash](http://cdash.cern.ch/index.php?project=ROOT&filtercount=1&field1=buildname/string&compare1=65&value1=PR-6321-ROOT-ubuntu16-nortcxxmod&date=2020-09-08).; [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/95241/console).; ### Errors:; - [2020-09-08T13:33:22.441Z] FAILED: : && /usr/bin/c++ -fPIC -UNDEBUG -fdiagnostics-color=always -std=c++11 -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread -O3 -DNDEBUG -Wl,--no-undefined -Wl,--hash-style=""both"" -shared -Wl,-soname,libRooFitCore.so.6.23 -o lib/libRooFitCore.so.6.23.01 roofit/roofitcore/CMakeFiles/G__RooFitCore.dir/G__RooFitCore.cxx.o roofit/roofitcore/CMakeFiles/RooFitCore.dir/src/BidirMMapPipe.cxx.o roofit/roofitcore/CMakeFiles/RooFitCore.dir/src/Roo1DTable.cxx.o roofit/roofitcore/CMakeFiles/RooFitCore.dir/src/RooAbsAnaConvPdf.cxx.o roofit/roofitcore/CMakeFiles/RooFitCore.dir/src/RooAbsArg.cxx.o roofit/roofitcore/CMakeFiles/RooFitCore.dir/src/RooAbsBinning.cxx.o roofit/roofitcore/CMakeFiles/RooFitCore.dir/src/RooAbsCache.cxx.o roofit/roofitcore/CMakeFiles/RooFitCore.dir/src/RooAbsCachedPdf.cxx.o roofit/roofitcore/CMakeFiles/RooFitCore.dir/src/RooAbsCachedReal.cxx.o roofit/roofitcore/CMakeFiles/RooFitCore.dir/src/RooAbsCacheElement.cxx.o roofit/roofitcore/CMakeFiles/RooFitCore.dir/src/RooAbsCategory.cxx.o roofit/roofitcore/CMakeFiles/RooFitCore.dir/src/RooAbsCategoryLValue.cxx.o roofit/roofitcore/CMakeFiles/RooFitCore.dir/src/RooAbsCollection.cxx.o roofit/roofitcore/CMakeFiles/RooFitCore.dir/src/RooAbsData.cxx.o roofit/roofitcore/CMakeFiles/RooFitCore.dir/src/RooAbsDataStore.cxx.o roofit/roofitcore/CMakeFiles/RooFitCore.dir/src/RooAbsFunc.cxx.o roofit/roofitcore/CMakeFiles/RooFitCore.dir/src/RooAbsGenContext.cxx.o roofit/roofitcore/CMakeFiles/RooFitCore.dir/src/RooAbsHiddenReal.cxx.o roofit/roofitcore/CMakeFiles/RooFitCore.dir/",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6321#issuecomment-688870340:625,hash,hash-style,625,https://root.cern,https://github.com/root-project/root/pull/6321#issuecomment-688870340,1,['hash'],['hash-style']
Security,"Build failed on ROOT-ubuntu16/nortcxxmod.; Running on sft-ubuntu-1604-1.cern.ch:/build/workspace/root-pullrequests-build; [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/106758/console).; ### Errors:; - [2021-02-15T13:59:37.894Z] FAILED: : && /usr/bin/c++ -fPIC -fdiagnostics-color=always -std=c++11 -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread -O3 -Wl,--no-undefined -Wl,--hash-style=""both"" -shared -Wl,-soname,libCore.so.6.23 -o lib/libCore.so.6.23.01 core/CMakeFiles/BaseTROOT.dir/base/src/TROOT.cxx.o core/base/CMakeFiles/Base.dir/src/Match.cxx.o core/base/CMakeFiles/Base.dir/src/String.cxx.o core/base/CMakeFiles/Base.dir/src/Stringio.cxx.o core/base/CMakeFiles/Base.dir/src/TApplication.cxx.o core/base/CMakeFiles/Base.dir/src/TAtt3D.cxx.o core/base/CMakeFiles/Base.dir/src/TAttAxis.cxx.o core/base/CMakeFiles/Base.dir/src/TAttBBox2D.cxx.o core/base/CMakeFiles/Base.dir/src/TAttBBox.cxx.o core/base/CMakeFiles/Base.dir/src/TAttFill.cxx.o core/base/CMakeFiles/Base.dir/src/TAttLine.cxx.o core/base/CMakeFiles/Base.dir/src/TAttMarker.cxx.o core/base/CMakeFiles/Base.dir/src/TAttPad.cxx.o core/base/CMakeFiles/Base.dir/src/TAttText.cxx.o core/base/CMakeFiles/Base.dir/src/TBase64.cxx.o core/base/CMakeFiles/Base.dir/src/TBenchmark.cxx.o core/base/CMakeFiles/Base.dir/src/TBuffer3D.cxx.o core/base/CMakeFiles/Base.dir/src/TBuffer.cxx.o core/base/CMakeFiles/Base.dir/src/TColor.cxx.o core/base/CMakeFiles/Base.dir/src/TColorGradient.cxx.o core/base/CMakeFiles/Base.dir/src/TDatime.cxx.o core/base/CMakeFiles/Base.dir/src/TDirectory.cxx.o core/base/CMakeFiles/Base.dir/src/TEnv.cxx.o core/base/CMakeFiles/Base.dir/src/TErrorDefaultHandler.cxx.o core/base/CMakeFiles/Base.dir/src/TException.cxx.o core/base/CMakeFiles/Base.dir/src/TExec.cxx.o core/base/CMakeFiles/Base.dir/src/TFileCollection.cxx.o core/base/CMakeFiles/Base.dir/src/TFileInfo.cxx.o core/base/CMakeFiles/Base.dir/src/TFolder.cxx.o core/base/CMakeFiles/Base.dir/src/T",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7214#issuecomment-779241275:443,hash,hash-style,443,https://root.cern,https://github.com/root-project/root/pull/7214#issuecomment-779241275,1,['hash'],['hash-style']
Security,"Build failed on ROOT-ubuntu16/nortcxxmod.; Running on sft-ubuntu-1604-1.cern.ch:/build/workspace/root-pullrequests-build; [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/131360/console).; ### Errors:; - [2021-12-01T21:51:12.790Z] FAILED: : && /usr/bin/c++ -fPIC -fdiagnostics-color=always -std=c++14 -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread -O3 -Wl,--no-undefined -Wl,--hash-style=""both"" -shared -Wl,-soname,libRooFitCore.so.6.25 -o lib/libRooFitCore.so.6.25.01 roofit/roofitcore/CMakeFiles/G__RooFitCore.dir/G__RooFitCore.cxx.o roofit/roofitcore/CMakeFiles/RooFitCore.dir/src/BidirMMapPipe.cxx.o roofit/roofitcore/CMakeFiles/RooFitCore.dir/src/Roo1DTable.cxx.o roofit/roofitcore/CMakeFiles/RooFitCore.dir/src/RooAbsAnaConvPdf.cxx.o roofit/roofitcore/CMakeFiles/RooFitCore.dir/src/RooAbsArg.cxx.o roofit/roofitcore/CMakeFiles/RooFitCore.dir/src/RooAbsBinning.cxx.o roofit/roofitcore/CMakeFiles/RooFitCore.dir/src/RooAbsCache.cxx.o roofit/roofitcore/CMakeFiles/RooFitCore.dir/src/RooAbsCachedPdf.cxx.o roofit/roofitcore/CMakeFiles/RooFitCore.dir/src/RooAbsCachedReal.cxx.o roofit/roofitcore/CMakeFiles/RooFitCore.dir/src/RooAbsCacheElement.cxx.o roofit/roofitcore/CMakeFiles/RooFitCore.dir/src/RooAbsCategory.cxx.o roofit/roofitcore/CMakeFiles/RooFitCore.dir/src/RooAbsCategoryLValue.cxx.o roofit/roofitcore/CMakeFiles/RooFitCore.dir/src/RooAbsCollection.cxx.o roofit/roofitcore/CMakeFiles/RooFitCore.dir/src/RooAbsData.cxx.o roofit/roofitcore/CMakeFiles/RooFitCore.dir/src/RooAbsDataStore.cxx.o roofit/roofitcore/CMakeFiles/RooFitCore.dir/src/RooAbsFunc.cxx.o roofit/roofitcore/CMakeFiles/RooFitCore.dir/src/RooAbsGenContext.cxx.o roofit/roofitcore/CMakeFiles/RooFitCore.dir/src/RooAbsHiddenReal.cxx.o roofit/roofitcore/CMakeFiles/RooFitCore.dir/src/RooAbsIntegrator.cxx.o roofit/roofitcore/CMakeFiles/RooFitCore.dir/src/RooAbsLValue.cxx.o roofit/roofitcore/CMakeFiles/RooFitCore.dir/src/RooAbsMCStudyModule.cxx.o roofit/roofitc",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9349#issuecomment-984085924:443,hash,hash-style,443,https://root.cern,https://github.com/root-project/root/pull/9349#issuecomment-984085924,1,['hash'],['hash-style']
Security,Build failed on ROOT-ubuntu16/nortcxxmod.; Running on sft-ubuntu-1604-1.cern.ch:/build/workspace/root-pullrequests-build; [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139444/console).; ### Warnings:; - [2022-03-15T11:26:54.751Z] /mnt/build/workspace/root-pullrequests-build/root/tree/dataframe/src/RCsvDS.cxx:437:36: warning: format not a string literal and no format arguments [-Wformat-security],MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9988#issuecomment-1067900567:437,secur,security,437,https://root.cern,https://github.com/root-project/root/pull/9988#issuecomment-1067900567,1,['secur'],['security']
Security,"Build failed on ROOT-ubuntu16/nortcxxmod.; Running on sft-ubuntu-1604-1.cern.ch:/build/workspace/root-pullrequests-build; [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/141674/console).; ### Errors:; - [2022-04-05T15:36:05.525Z] FAILED: : && /usr/bin/c++ -fPIC -fdiagnostics-color=always -std=c++14 -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread -O3 -Wl,--no-undefined -Wl,--hash-style=""both"" -shared -Wl,-soname,libRDAVIX.so.6.27 -o lib/libRDAVIX.so.6.27.01 net/davix/CMakeFiles/G__RDAVIX.dir/G__RDAVIX.cxx.o net/davix/CMakeFiles/RDAVIX.dir/src/RRawFileDavix.cxx.o net/davix/CMakeFiles/RDAVIX.dir/src/TDavixFile.cxx.o net/davix/CMakeFiles/RDAVIX.dir/src/TDavixSystem.cxx.o -Wl,-rpath,/mnt/build/workspace/root-pullrequests-build/build/lib: lib/libNet.so.6.27.01 lib/libRIO.so.6.27.01 builtins/davix/DAVIX-prefix/lib/libdavix.a builtins/davix/DAVIX-prefix/lib/libcurl.a -luuid /usr/lib/x86_64-linux-gnu/libssl.so /usr/lib/x86_64-linux-gnu/libcrypto.so /usr/lib/x86_64-linux-gnu/libxml2.so -ldl lib/libThread.so.6.27.01 lib/libCore.so.6.27.01 -lpthread && : ; - [2022-04-05T15:36:05.525Z] c++: error: builtins/davix/DAVIX-prefix/lib/libcurl.a: No such file or directory",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10275#issuecomment-1088880496:443,hash,hash-style,443,https://root.cern,https://github.com/root-project/root/pull/10275#issuecomment-1088880496,1,['hash'],['hash-style']
Security,"Build failed on ROOT-ubuntu16/nortcxxmod.; Running on sft-ubuntu-1604-1.cern.ch:/build/workspace/root-pullrequests-build; [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146151/console).; ### Errors:; - [2022-05-30T12:22:46.767Z] FAILED: : && /usr/bin/c++ -fPIC -fdiagnostics-color=always -std=c++14 -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread -O3 -Wl,--no-undefined -Wl,--hash-style=""both"" -shared -Wl,-soname,libMathCore.so.6.27 -o lib/libMathCore.so.6.27.01 math/mathcore/CMakeFiles/G__MathCore.dir/G__MathCore.cxx.o math/mathcore/CMakeFiles/MathCore.dir/src/AdaptiveIntegratorMultiDim.cxx.o math/mathcore/CMakeFiles/MathCore.dir/src/BasicMinimizer.cxx.o math/mathcore/CMakeFiles/MathCore.dir/src/BinData.cxx.o math/mathcore/CMakeFiles/MathCore.dir/src/BrentMethods.cxx.o math/mathcore/CMakeFiles/MathCore.dir/src/BrentMinimizer1D.cxx.o math/mathcore/CMakeFiles/MathCore.dir/src/BrentRootFinder.cxx.o math/mathcore/CMakeFiles/MathCore.dir/src/ChebyshevPol.cxx.o math/mathcore/CMakeFiles/MathCore.dir/src/DataRange.cxx.o math/mathcore/CMakeFiles/MathCore.dir/src/Delaunay2D.cxx.o math/mathcore/CMakeFiles/MathCore.dir/src/DistSampler.cxx.o math/mathcore/CMakeFiles/MathCore.dir/src/DistSamplerOptions.cxx.o math/mathcore/CMakeFiles/MathCore.dir/src/Factory.cxx.o math/mathcore/CMakeFiles/MathCore.dir/src/FitConfig.cxx.o math/mathcore/CMakeFiles/MathCore.dir/src/FitData.cxx.o math/mathcore/CMakeFiles/MathCore.dir/src/FitResult.cxx.o math/mathcore/CMakeFiles/MathCore.dir/src/FitUtil.cxx.o math/mathcore/CMakeFiles/MathCore.dir/src/Fitter.cxx.o math/mathcore/CMakeFiles/MathCore.dir/src/GaussIntegrator.cxx.o math/mathcore/CMakeFiles/MathCore.dir/src/GaussLegendreIntegrator.cxx.o math/mathcore/CMakeFiles/MathCore.dir/src/GenAlgoOptions.cxx.o math/mathcore/CMakeFiles/MathCore.dir/src/GoFTest.cxx.o math/mathcore/CMakeFiles/MathCore.dir/src/Integrator.cxx.o math/mathcore/CMakeFiles/MathCore.dir/src/IntegratorOptions.cxx.o mat",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10617#issuecomment-1141092598:443,hash,hash-style,443,https://root.cern,https://github.com/root-project/root/pull/10617#issuecomment-1141092598,1,['hash'],['hash-style']
Security,"Build failed on ROOT-ubuntu16/nortcxxmod.; Running on sft-ubuntu-1604-1.cern.ch:/build/workspace/root-pullrequests-build; [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/97024/console).; ### Errors:; - [2020-09-26T22:01:18.384Z] FAILED: : && /usr/bin/c++ -fPIC -UNDEBUG -fdiagnostics-color=always -std=c++11 -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread -D_GNU_SOURCE -D_DEBUG -D__STDC_CONSTANT_MACROS -D__STDC_FORMAT_MACROS -D__STDC_LIMIT_MACROS -Wno-maybe-uninitialized -O3 -DNDEBUG -Wl,--no-undefined -Wl,--hash-style=""both"" -shared -Wl,-soname,libCling.so.6.23 -o lib/libCling.so.6.23.01 core/clingutils/CMakeFiles/ClingUtils.dir/src/RStl.cxx.o core/clingutils/CMakeFiles/ClingUtils.dir/src/TClingUtils.cxx.o core/dictgen/CMakeFiles/Dictgen.dir/src/BaseSelectionRule.cxx.o core/dictgen/CMakeFiles/Dictgen.dir/src/ClassSelectionRule.cxx.o core/dictgen/CMakeFiles/Dictgen.dir/src/DictSelectionReader.cxx.o core/dictgen/CMakeFiles/Dictgen.dir/src/LinkdefReader.cxx.o core/dictgen/CMakeFiles/Dictgen.dir/src/rootcling_impl.cxx.o core/dictgen/CMakeFiles/Dictgen.dir/src/Scanner.cxx.o core/dictgen/CMakeFiles/Dictgen.dir/src/SelectionRules.cxx.o core/dictgen/CMakeFiles/Dictgen.dir/src/TModuleGenerator.cxx.o core/dictgen/CMakeFiles/Dictgen.dir/src/VariableSelectionRule.cxx.o core/dictgen/CMakeFiles/Dictgen.dir/src/XMLReader.cxx.o core/metacling/src/CMakeFiles/MetaCling.dir/rootclingTCling.cxx.o core/metacling/src/CMakeFiles/MetaCling.dir/TCling.cxx.o core/metacling/src/CMakeFiles/MetaCling.dir/TClingBaseClassInfo.cxx.o core/metacling/src/CMakeFiles/MetaCling.dir/TClingCallbacks.cxx.o core/metacling/src/CMakeFiles/MetaCling.dir/TClingCallFunc.cxx.o core/metacling/src/CMakeFiles/MetaCling.dir/TClingClassInfo.cxx.o core/metacling/src/CMakeFiles/MetaCling.dir/TClingDataMemberInfo.cxx.o core/metacling/src/CMakeFiles/MetaCling.dir/TClingDeclInfo.cxx.o core/metacling/src/CMakeFiles/MetaCling.dir/TClingMemberIter.cxx.o core/meta",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6385#issuecomment-699553531:578,hash,hash-style,578,https://root.cern,https://github.com/root-project/root/pull/6385#issuecomment-699553531,1,['hash'],['hash-style']
Security,"Build failed on ROOT-ubuntu16/nortcxxmod.; Running on sft-ubuntu-1604-1.cern.ch:/build/workspace/root-pullrequests-build; [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/97032/console).; ### Errors:; - [2020-09-27T08:17:54.306Z] FAILED: : && /usr/bin/c++ -fPIC -UNDEBUG -fdiagnostics-color=always -std=c++11 -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread -D_GNU_SOURCE -D_DEBUG -D__STDC_CONSTANT_MACROS -D__STDC_FORMAT_MACROS -D__STDC_LIMIT_MACROS -O3 -DNDEBUG -Wl,--no-undefined -Wl,--hash-style=""both"" -shared -Wl,-soname,libCling.so.6.23 -o lib/libCling.so.6.23.01 core/clingutils/CMakeFiles/ClingUtils.dir/src/RStl.cxx.o core/clingutils/CMakeFiles/ClingUtils.dir/src/TClingUtils.cxx.o core/dictgen/CMakeFiles/Dictgen.dir/src/BaseSelectionRule.cxx.o core/dictgen/CMakeFiles/Dictgen.dir/src/ClassSelectionRule.cxx.o core/dictgen/CMakeFiles/Dictgen.dir/src/DictSelectionReader.cxx.o core/dictgen/CMakeFiles/Dictgen.dir/src/LinkdefReader.cxx.o core/dictgen/CMakeFiles/Dictgen.dir/src/rootcling_impl.cxx.o core/dictgen/CMakeFiles/Dictgen.dir/src/Scanner.cxx.o core/dictgen/CMakeFiles/Dictgen.dir/src/SelectionRules.cxx.o core/dictgen/CMakeFiles/Dictgen.dir/src/TModuleGenerator.cxx.o core/dictgen/CMakeFiles/Dictgen.dir/src/VariableSelectionRule.cxx.o core/dictgen/CMakeFiles/Dictgen.dir/src/XMLReader.cxx.o core/metacling/src/CMakeFiles/MetaCling.dir/rootclingTCling.cxx.o core/metacling/src/CMakeFiles/MetaCling.dir/TCling.cxx.o core/metacling/src/CMakeFiles/MetaCling.dir/TClingBaseClassInfo.cxx.o core/metacling/src/CMakeFiles/MetaCling.dir/TClingCallbacks.cxx.o core/metacling/src/CMakeFiles/MetaCling.dir/TClingCallFunc.cxx.o core/metacling/src/CMakeFiles/MetaCling.dir/TClingClassInfo.cxx.o core/metacling/src/CMakeFiles/MetaCling.dir/TClingDataMemberInfo.cxx.o core/metacling/src/CMakeFiles/MetaCling.dir/TClingDeclInfo.cxx.o core/metacling/src/CMakeFiles/MetaCling.dir/TClingMemberIter.cxx.o core/metacling/src/CMakeFiles/Meta",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6385#issuecomment-699602985:553,hash,hash-style,553,https://root.cern,https://github.com/root-project/root/pull/6385#issuecomment-699602985,1,['hash'],['hash-style']
Security,"Build failed on ROOT-ubuntu16/nortcxxmod.; Running on sft-ubuntu-1604-2.cern.ch:/build/workspace/root-pullrequests-build; [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/104632/console).; ### Errors:; - [2021-01-12T15:29:13.816Z] FAILED: : && /usr/bin/c++ -fPIC -fdiagnostics-color=always -std=c++11 -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread -O3 -Wl,--no-undefined -Wl,--hash-style=""both"" -shared -Wl,-soname,libRooFitMore.so.6.23 -o lib/libRooFitMore.so.6.23.01 roofit/roofitmore/CMakeFiles/G__RooFitMore.dir/G__RooFitMore.cxx.o roofit/roofitmore/CMakeFiles/RooFitMore.dir/src/RooFitMoreLib.cxx.o roofit/roofitmore/CMakeFiles/RooFitMore.dir/src/RooAdaptiveGaussKronrodIntegrator1D.cxx.o roofit/roofitmore/CMakeFiles/RooFitMore.dir/src/RooGaussKronrodIntegrator1D.cxx.o roofit/roofitmore/CMakeFiles/RooFitMore.dir/src/RooLegendre.cxx.o roofit/roofitmore/CMakeFiles/RooFitMore.dir/src/RooMathMoreReg.cxx.o roofit/roofitmore/CMakeFiles/RooFitMore.dir/src/RooSpHarmonic.cxx.o roofit/roofitmore/CMakeFiles/RooFitMore.dir/src/RooNonCentralChiSquare.cxx.o roofit/roofitmore/CMakeFiles/RooFitMore.dir/src/RooHypatia2.cxx.o -Wl,-rpath,/mnt/build/workspace/root-pullrequests-build/build/lib: lib/libMathMore.so.6.23.01 lib/libRooFit.so.6.23.01 lib/libRooFitCore.so.6.23.01 lib/libMinuit.so.6.23.01 lib/libFoam.so.6.23.01 lib/libGraf.so.6.23.01 lib/libHist.so.6.23.01 lib/libSmatrix.so.6.23.01 lib/libMatrix.so.6.23.01 lib/libTree.so.6.23.01 lib/libNet.so.6.23.01 lib/libRIO.so.6.23.01 lib/libMathCore.so.6.23.01 lib/libImt.so.6.23.01 lib/libThread.so.6.23.01 lib/libCore.so.6.23.01 -lpthread -Wl,-rpath-link,/mnt/build/workspace/root-pullrequests-build/build/lib && : ; - [2021-01-12T15:29:13.816Z] collect2: error: ld returned 1 exit status",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7026#issuecomment-758733453:443,hash,hash-style,443,https://root.cern,https://github.com/root-project/root/pull/7026#issuecomment-758733453,1,['hash'],['hash-style']
Security,"Build failed on ROOT-ubuntu16/nortcxxmod.; Running on sft-ubuntu-1604-2.cern.ch:/build/workspace/root-pullrequests-build; [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/140972/console).; ### Errors:; - [2022-03-30T14:10:46.113Z] FAILED: : && /usr/bin/c++ -fPIC -fdiagnostics-color=always -std=c++14 -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread -O3 -Wl,--no-undefined -Wl,--hash-style=""both"" -shared -Wl,-soname,libRDAVIX.so.6.27 -o lib/libRDAVIX.so.6.27.01 net/davix/CMakeFiles/G__RDAVIX.dir/G__RDAVIX.cxx.o net/davix/CMakeFiles/RDAVIX.dir/src/RRawFileDavix.cxx.o net/davix/CMakeFiles/RDAVIX.dir/src/TDavixFile.cxx.o net/davix/CMakeFiles/RDAVIX.dir/src/TDavixSystem.cxx.o -Wl,-rpath,/mnt/build/workspace/root-pullrequests-build/build/lib: lib/libNet.so.6.27.01 lib/libRIO.so.6.27.01 builtins/davix/DAVIX-prefix/lib/libdavix.a -luuid /usr/lib/x86_64-linux-gnu/libssl.so /usr/lib/x86_64-linux-gnu/libcrypto.so /usr/lib/x86_64-linux-gnu/libxml2.so -ldl lib/libThread.so.6.27.01 lib/libCore.so.6.27.01 -lpthread && : ; - [2022-03-30T14:10:46.114Z] collect2: error: ld returned 1 exit status",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10275#issuecomment-1083190225:443,hash,hash-style,443,https://root.cern,https://github.com/root-project/root/pull/10275#issuecomment-1083190225,1,['hash'],['hash-style']
Security,"Build failed on ROOT-ubuntu16/nortcxxmod.; Running on sft-ubuntu-1604-3.cern.ch:/build/workspace/root-pullrequests-build; [See cdash](http://cdash.cern.ch/index.php?project=ROOT&filtercount=1&field1=buildname/string&compare1=65&value1=PR-6321-ROOT-ubuntu16-nortcxxmod&date=2020-09-08).; [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/95233/console).; ### Errors:; - [2020-09-08T13:09:20.724Z] FAILED: : && /usr/bin/c++ -fPIC -UNDEBUG -fdiagnostics-color=always -std=c++11 -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread -O3 -DNDEBUG -Wl,--no-undefined -Wl,--hash-style=""both"" -shared -Wl,-soname,libRooFitCore.so.6.23 -o lib/libRooFitCore.so.6.23.01 roofit/roofitcore/CMakeFiles/G__RooFitCore.dir/G__RooFitCore.cxx.o roofit/roofitcore/CMakeFiles/RooFitCore.dir/src/BidirMMapPipe.cxx.o roofit/roofitcore/CMakeFiles/RooFitCore.dir/src/Roo1DTable.cxx.o roofit/roofitcore/CMakeFiles/RooFitCore.dir/src/RooAbsAnaConvPdf.cxx.o roofit/roofitcore/CMakeFiles/RooFitCore.dir/src/RooAbsArg.cxx.o roofit/roofitcore/CMakeFiles/RooFitCore.dir/src/RooAbsBinning.cxx.o roofit/roofitcore/CMakeFiles/RooFitCore.dir/src/RooAbsCache.cxx.o roofit/roofitcore/CMakeFiles/RooFitCore.dir/src/RooAbsCachedPdf.cxx.o roofit/roofitcore/CMakeFiles/RooFitCore.dir/src/RooAbsCachedReal.cxx.o roofit/roofitcore/CMakeFiles/RooFitCore.dir/src/RooAbsCacheElement.cxx.o roofit/roofitcore/CMakeFiles/RooFitCore.dir/src/RooAbsCategory.cxx.o roofit/roofitcore/CMakeFiles/RooFitCore.dir/src/RooAbsCategoryLValue.cxx.o roofit/roofitcore/CMakeFiles/RooFitCore.dir/src/RooAbsCollection.cxx.o roofit/roofitcore/CMakeFiles/RooFitCore.dir/src/RooAbsData.cxx.o roofit/roofitcore/CMakeFiles/RooFitCore.dir/src/RooAbsDataStore.cxx.o roofit/roofitcore/CMakeFiles/RooFitCore.dir/src/RooAbsFunc.cxx.o roofit/roofitcore/CMakeFiles/RooFitCore.dir/src/RooAbsGenContext.cxx.o roofit/roofitcore/CMakeFiles/RooFitCore.dir/src/RooAbsHiddenReal.cxx.o roofit/roofitcore/CMakeFiles/RooFitCore.dir/",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6321#issuecomment-688854776:625,hash,hash-style,625,https://root.cern,https://github.com/root-project/root/pull/6321#issuecomment-688854776,1,['hash'],['hash-style']
Security,"Build failed on ROOT-ubuntu16/nortcxxmod.; Running on sft-ubuntu-1604-3.cern.ch:/build/workspace/root-pullrequests-build; [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/140923/console).; ### Errors:; - [2022-03-30T13:18:07.864Z] FAILED: : && /usr/bin/c++ -fPIC -fdiagnostics-color=always -std=c++14 -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread -O3 -Wl,--no-undefined -Wl,--hash-style=""both"" -shared -Wl,-soname,libRDAVIX.so.6.27 -o lib/libRDAVIX.so.6.27.01 net/davix/CMakeFiles/G__RDAVIX.dir/G__RDAVIX.cxx.o net/davix/CMakeFiles/RDAVIX.dir/src/RRawFileDavix.cxx.o net/davix/CMakeFiles/RDAVIX.dir/src/TDavixFile.cxx.o net/davix/CMakeFiles/RDAVIX.dir/src/TDavixSystem.cxx.o -Wl,-rpath,/mnt/build/workspace/root-pullrequests-build/build/lib: lib/libNet.so.6.27.01 lib/libRIO.so.6.27.01 builtins/davix/DAVIX-prefix/lib/libdavix.a builtins/davix/DAVIX-prefix/lib/libneon.a -luuid /usr/lib/x86_64-linux-gnu/libssl.so /usr/lib/x86_64-linux-gnu/libcrypto.so /usr/lib/x86_64-linux-gnu/libxml2.so -ldl lib/libThread.so.6.27.01 lib/libCore.so.6.27.01 -lpthread && : ; - [2022-03-30T13:18:07.864Z] c++: error: builtins/davix/DAVIX-prefix/lib/libneon.a: No such file or directory",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10275#issuecomment-1083130516:443,hash,hash-style,443,https://root.cern,https://github.com/root-project/root/pull/10275#issuecomment-1083130516,1,['hash'],['hash-style']
Security,Build failed on ROOT-ubuntu16/nortcxxmod.; Running on sft-ubuntu-1604-4.cern.ch:/build/workspace/root-pullrequests-build; [See cdash](http://cdash.cern.ch/index.php?project=ROOT&filtercount=1&field1=buildname/string&compare1=65&value1=PR-5922-ROOT-ubuntu16-nortcxxmod&date=2020-06-26).; [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/88116/console).; ### Warnings:; - [2020-06-26T13:26:22.008Z] /mnt/build/workspace/root-pullrequests-build/root/core/base/test/TErrorTests.cxx:51:40: warning: format not a string literal and no format arguments [-Wformat-security] . ### Failing tests:; - [projectroot.roottest.root.meta.evolution.roottest_root_meta_evolution_execMixedBaseClass_v2](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/88116/testReport/projectroot.roottest.root.meta/evolution/roottest_root_meta_evolution_execMixedBaseClass_v2/); - [projectroot.tree.tree.test.gtest_tree_tree_test_testTBasket](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/88116/testReport/projectroot.tree.tree/test/gtest_tree_tree_test_testTBasket/); - [projectroot.roottest.root.io.fakeClass.roottest_root_io_fakeClass_make](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/88116/testReport/projectroot.roottest.root.io/fakeClass/roottest_root_io_fakeClass_make/); - [projectroot.roottest.root.meta.evolution.roottest_root_meta_evolution_mixedBase_merge1](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/88116/testReport/projectroot.roottest.root.meta/evolution/roottest_root_meta_evolution_mixedBase_merge1/); - [projectroot.roottest.root.meta.evolution.roottest_root_meta_evolution_mixedBase_merge2](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/88116/testReport/projectroot.roottest.root.meta/evolution/roottest_root_meta_evolution_mixedBase_merge2/); - [projectroot.roottest.root.meta.evolution.roottest_root_meta_evolution_checkWarn0](http,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5922#issuecomment-650198966:601,secur,security,601,https://root.cern,https://github.com/root-project/root/pull/5922#issuecomment-650198966,1,['secur'],['security']
Security,"Build failed on ROOT-ubuntu16/nortcxxmod.; [See console output](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/73622/console).; ### Errors:; - FAILED: : && /usr/bin/c++ -fPIC -std=c++11 -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread -O3 -DNDEBUG -Wl,--no-undefined -Wl,--hash-style=""both"" -shared -Wl,-soname,libRooFit.so.6.19 -o lib/libRooFit.so.6.19.01 roofit/roofit/CMakeFiles/G__RooFit.dir/G__RooFit.cxx.o roofit/roofit/CMakeFiles/RooFit.dir/src/Roo2DKeysPdf.cxx.o roofit/roofit/CMakeFiles/RooFit.dir/src/RooArgusBG.cxx.o roofit/roofit/CMakeFiles/RooFit.dir/src/RooBCPEffDecay.cxx.o roofit/roofit/CMakeFiles/RooFit.dir/src/RooBCPGenDecay.cxx.o roofit/roofit/CMakeFiles/RooFit.dir/src/RooBDecay.cxx.o roofit/roofit/CMakeFiles/RooFit.dir/src/RooBernstein.cxx.o roofit/roofit/CMakeFiles/RooFit.dir/src/RooBifurGauss.cxx.o roofit/roofit/CMakeFiles/RooFit.dir/src/RooBlindTools.cxx.o roofit/roofit/CMakeFiles/RooFit.dir/src/RooBMixDecay.cxx.o roofit/roofit/CMakeFiles/RooFit.dir/src/RooBreitWigner.cxx.o roofit/roofit/CMakeFiles/RooFit.dir/src/RooBukinPdf.cxx.o roofit/roofit/CMakeFiles/RooFit.dir/src/RooCBShape.cxx.o roofit/roofit/CMakeFiles/RooFit.dir/src/RooCFunction1Binding.cxx.o roofit/roofit/CMakeFiles/RooFit.dir/src/RooCFunction2Binding.cxx.o roofit/roofit/CMakeFiles/RooFit.dir/src/RooCFunction3Binding.cxx.o roofit/roofit/CMakeFiles/RooFit.dir/src/RooCFunction4Binding.cxx.o roofit/roofit/CMakeFiles/RooFit.dir/src/RooChebychev.cxx.o roofit/roofit/CMakeFiles/RooFit.dir/src/RooChi2MCSModule.cxx.o roofit/roofit/CMakeFiles/RooFit.dir/src/RooChiSquarePdf.cxx.o roofit/roofit/CMakeFiles/RooFit.dir/src/RooDecay.cxx.o roofit/roofit/CMakeFiles/RooFit.dir/src/RooDstD0BG.cxx.o roofit/roofit/CMakeFiles/RooFit.dir/src/RooExponential.cxx.o roofit/roofit/CMakeFiles/RooFit.dir/src/RooFunctor1DBinding.cxx.o roofit/roofit/CMakeFiles/RooFit.dir/src/RooFunctorBinding.cxx.o roofit/roofit/CMakeFiles/RooFit.dir/src/RooGamma.cxx.o roofit/roofit/CMakeFiles/RooFit.dir/src/R",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4536#issuecomment-566949633:303,hash,hash-style,303,https://root.cern,https://github.com/root-project/root/pull/4536#issuecomment-566949633,1,['hash'],['hash-style']
Security,Build failed on ROOT-ubuntu16/nortcxxmod.; [See console output](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/75631/console).; ### Warnings:; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TMacro.cxx:340:102: warning: format not a string literal and no format arguments [-Wformat-security] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TMacro.cxx:344:108: warning: format not a string literal and no format arguments [-Wformat-security],MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4830#issuecomment-577152083:311,secur,security,311,https://root.cern,https://github.com/root-project/root/pull/4830#issuecomment-577152083,2,['secur'],['security']
Security,Build failed on ROOT-ubuntu16/rtcxxmod.; [See console output](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/51932/console).; ### Warnings:; - /mnt/build/workspace/root-pullrequests-build/root/core/dictgen/src/rootcling_impl.cxx:3926:31: warning: format not a string literal and no format arguments [-Wformat-security] ; - cc1plus: warning: unrecognized command line option ‘-Wno-class-memaccess’ . ### Failing tests:; - [projectroot.roottest.root.html.roottest_root_html_runMakeIndex](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/51932/testReport/projectroot.roottest.root/html/roottest_root_html_runMakeIndex/),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3283#issuecomment-455567252:320,secur,security,320,https://root.cern,https://github.com/root-project/root/pull/3283#issuecomment-455567252,1,['secur'],['security']
Security,Build failed on ROOT-ubuntu16/rtcxxmod.; [See console output](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/51946/console).; ### Errors:; - collect2: error: ld returned 1 exit status . ### Warnings:; - /mnt/build/workspace/root-pullrequests-build/root/core/dictgen/src/rootcling_impl.cxx:3926:31: warning: format not a string literal and no format arguments [-Wformat-security] ; - cc1plus: warning: unrecognized command line option ‘-Wno-class-memaccess’ ; - Warning in &lt;CheckModuleValid&gt;: warning: Couldn't find the following specified headers in the module Core:,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3259#issuecomment-455603118:380,secur,security,380,https://root.cern,https://github.com/root-project/root/pull/3259#issuecomment-455603118,1,['secur'],['security']
Security,Build failed on ROOT-ubuntu16/rtcxxmod.; [See console output](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/51970/console).; ### Warnings:; - /mnt/build/workspace/root-pullrequests-build/root/core/dictgen/src/rootcling_impl.cxx:3926:31: warning: format not a string literal and no format arguments [-Wformat-security] ; - cc1plus: warning: unrecognized command line option ‘-Wno-class-memaccess’ . ### Failing tests:; - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_TreeRootls1](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/51970/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_TreeRootls1/),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3285#issuecomment-456052551:320,secur,security,320,https://root.cern,https://github.com/root-project/root/pull/3285#issuecomment-456052551,1,['secur'],['security']
Security,Build failed on ROOT-ubuntu16/rtcxxmod.; [See console output](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/51992/console).; ### Warnings:; - /mnt/build/workspace/root-pullrequests-build/root/core/dictgen/src/rootcling_impl.cxx:3926:31: warning: format not a string literal and no format arguments [-Wformat-security] ; - cc1plus: warning: unrecognized command line option ‘-Wno-class-memaccess’ . ### Failing tests:; - [projectroot.roottest.root.multicore.roottest_root_multicore_tp_process_imt](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/51992/testReport/projectroot.roottest.root/multicore/roottest_root_multicore_tp_process_imt/),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3289#issuecomment-456145078:320,secur,security,320,https://root.cern,https://github.com/root-project/root/pull/3289#issuecomment-456145078,1,['secur'],['security']
Security,Build failed on ROOT-ubuntu16/rtcxxmod.; [See console output](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/54198/console).; ### Warnings:; - /mnt/build/workspace/root-pullrequests-build/root/tree/treeplayer/src/TTreeReader.cxx:214:39: warning: format not a string literal and no format arguments [-Wformat-security] . ### Failing tests:; - [projectroot.roottest.root.tree.fastcloning.roottest_root_tree_fastcloning_make](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/54198/testReport/projectroot.roottest.root.tree/fastcloning/roottest_root_tree_fastcloning_make/),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3460#issuecomment-466294018:319,secur,security,319,https://root.cern,https://github.com/root-project/root/pull/3460#issuecomment-466294018,1,['secur'],['security']
Security,Build failed on ROOT-ubuntu16/rtcxxmod.; [See console output](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/57763/console).; ### Warnings:; - CMake Warning at /mnt/build/workspace/root-pullrequests-build/rootspi/jenkins/root-build.cmake:801 (message): ; - /mnt/build/workspace/root-pullrequests-build/root/tree/tree/src/TTreeSQL.cxx:464:39: warning: format not a string literal and no format arguments [-Wformat-security] . ### Failing tests:; - [projectroot.roottest.root.io.tuple.roottest_root_io_tuple_make](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/57763/testReport/projectroot.roottest.root.io/tuple/roottest_root_io_tuple_make/); - [projectroot.roottest.root.meta.roottest_root_meta_getFuncBody](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/57763/testReport/projectroot.roottest.root/meta/roottest_root_meta_getFuncBody/); - [projectroot.roottest.root.meta.roottest_root_meta_runMemberComments_auto](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/57763/testReport/projectroot.roottest.root/meta/roottest_root_meta_runMemberComments_auto/),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2717#issuecomment-484984564:424,secur,security,424,https://root.cern,https://github.com/root-project/root/pull/2717#issuecomment-484984564,1,['secur'],['security']
Security,Build failed on ROOT-ubuntu16/rtcxxmod.; [See console output](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/57766/console).; ### Warnings:; - CMake Warning at /mnt/build/workspace/root-pullrequests-build/rootspi/jenkins/root-build.cmake:801 (message): ; - /mnt/build/workspace/root-pullrequests-build/root/tree/tree/src/TTreeSQL.cxx:464:39: warning: format not a string literal and no format arguments [-Wformat-security] . ### Failing tests:; - [projectroot.roottest.root.io.tuple.roottest_root_io_tuple_make](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/57766/testReport/projectroot.roottest.root.io/tuple/roottest_root_io_tuple_make/); - [projectroot.roottest.root.meta.roottest_root_meta_getFuncBody](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/57766/testReport/projectroot.roottest.root/meta/roottest_root_meta_getFuncBody/); - [projectroot.roottest.root.meta.roottest_root_meta_runMemberComments_auto](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/57766/testReport/projectroot.roottest.root/meta/roottest_root_meta_runMemberComments_auto/),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2717#issuecomment-485001744:424,secur,security,424,https://root.cern,https://github.com/root-project/root/pull/2717#issuecomment-485001744,1,['secur'],['security']
Security,Build failed on ROOT-ubuntu16/rtcxxmod.; [See console output](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/57800/console).; ### Warnings:; - /mnt/build/workspace/root-pullrequests-build/root/tree/tree/src/TTreeSQL.cxx:464:39: warning: format not a string literal and no format arguments [-Wformat-security] . ### Failing tests:; - [projectroot.roottest.root.multicore.roottest_root_multicore_tp_process_imt](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/57800/testReport/projectroot.roottest.root/multicore/roottest_root_multicore_tp_process_imt/); - [projectroot.roottest.root.multicore.roottest_root_multicore_ttree_read_imt](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/57800/testReport/projectroot.roottest.root/multicore/roottest_root_multicore_ttree_read_imt/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootrm1CheckOutput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/57800/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootrm1CheckOutput/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootrm2CheckOutput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/57800/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootrm2CheckOutput/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootmkdir1CheckOutput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/57800/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootmkdir1CheckOutput/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootrm3CheckOutput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/57800/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootrm3CheckOutput/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootmkdir2CheckOutput],MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3715#issuecomment-485014327:310,secur,security,310,https://root.cern,https://github.com/root-project/root/pull/3715#issuecomment-485014327,1,['secur'],['security']
Security,"Build failed on ROOT-ubuntu16/rtcxxmod.; [See console output](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/58347/console).; ### Errors:; - FAILED: : && /usr/bin/c++ -fPIC -std=c++11 -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread -O3 -DNDEBUG -Wl,--no-undefined -Wl,--hash-style=""both"" -shared -Wl,-soname,libCore.so.6.17 -o lib/libCore.so.6.17.01 core/CMakeFiles/BaseTROOT.dir/base/src/TROOT.cxx.o core/base/CMakeFiles/Base.dir/src/InitGui.cxx.o core/base/CMakeFiles/Base.dir/src/Match.cxx.o core/base/CMakeFiles/Base.dir/src/String.cxx.o core/base/CMakeFiles/Base.dir/src/Stringio.cxx.o core/base/CMakeFiles/Base.dir/src/TApplication.cxx.o core/base/CMakeFiles/Base.dir/src/TApplicationImp.cxx.o core/base/CMakeFiles/Base.dir/src/TAtt3D.cxx.o core/base/CMakeFiles/Base.dir/src/TAttAxis.cxx.o core/base/CMakeFiles/Base.dir/src/TAttBBox2D.cxx.o core/base/CMakeFiles/Base.dir/src/TAttBBox.cxx.o core/base/CMakeFiles/Base.dir/src/TAttFill.cxx.o core/base/CMakeFiles/Base.dir/src/TAttLine.cxx.o core/base/CMakeFiles/Base.dir/src/TAttMarker.cxx.o core/base/CMakeFiles/Base.dir/src/TAttPad.cxx.o core/base/CMakeFiles/Base.dir/src/TAttText.cxx.o core/base/CMakeFiles/Base.dir/src/TBase64.cxx.o core/base/CMakeFiles/Base.dir/src/TBenchmark.cxx.o core/base/CMakeFiles/Base.dir/src/TBrowser.cxx.o core/base/CMakeFiles/Base.dir/src/TBrowserImp.cxx.o core/base/CMakeFiles/Base.dir/src/TBuffer3D.cxx.o core/base/CMakeFiles/Base.dir/src/TBuffer.cxx.o core/base/CMakeFiles/Base.dir/src/TCanvasImp.cxx.o core/base/CMakeFiles/Base.dir/src/TColor.cxx.o core/base/CMakeFiles/Base.dir/src/TColorGradient.cxx.o core/base/CMakeFiles/Base.dir/src/TContextMenu.cxx.o core/base/CMakeFiles/Base.dir/src/TContextMenuImp.cxx.o core/base/CMakeFiles/Base.dir/src/TControlBarImp.cxx.o core/base/CMakeFiles/Base.dir/src/TDatime.cxx.o core/base/CMakeFiles/Base.dir/src/TDirectory.cxx.o core/base/CMakeFiles/Base.dir/src/TEnv.cxx.o core/base/CMakeFiles/Base.dir/src/TError.cxx.o core/base/CMakeFiles/B",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3752#issuecomment-487559051:301,hash,hash-style,301,https://root.cern,https://github.com/root-project/root/pull/3752#issuecomment-487559051,1,['hash'],['hash-style']
Security,"Build failed on ROOT-ubuntu16/rtcxxmod.; [See console output](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/64857/console).; ### Errors:; - FAILED: : && /usr/bin/c++ -fPIC -std=c++11 -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread -O3 -DNDEBUG -Wl,--no-undefined -Wl,--hash-style=""both"" -shared -Wl,-soname,libRooFitCore.so.6.19 -o lib/libRooFitCore.so.6.19.01 roofit/roofitcore/CMakeFiles/RooFitCore.dir/src/BidirMMapPipe.cxx.o roofit/roofitcore/CMakeFiles/RooFitCore.dir/src/Roo1DTable.cxx.o roofit/roofitcore/CMakeFiles/RooFitCore.dir/src/RooAbsAnaConvPdf.cxx.o roofit/roofitcore/CMakeFiles/RooFitCore.dir/src/RooAbsArg.cxx.o roofit/roofitcore/CMakeFiles/RooFitCore.dir/src/RooAbsBinning.cxx.o roofit/roofitcore/CMakeFiles/RooFitCore.dir/src/RooAbsCache.cxx.o roofit/roofitcore/CMakeFiles/RooFitCore.dir/src/RooAbsCachedPdf.cxx.o roofit/roofitcore/CMakeFiles/RooFitCore.dir/src/RooAbsCachedReal.cxx.o roofit/roofitcore/CMakeFiles/RooFitCore.dir/src/RooAbsCacheElement.cxx.o roofit/roofitcore/CMakeFiles/RooFitCore.dir/src/RooAbsCategory.cxx.o roofit/roofitcore/CMakeFiles/RooFitCore.dir/src/RooAbsCategoryLValue.cxx.o roofit/roofitcore/CMakeFiles/RooFitCore.dir/src/RooAbsCollection.cxx.o roofit/roofitcore/CMakeFiles/RooFitCore.dir/src/RooAbsData.cxx.o roofit/roofitcore/CMakeFiles/RooFitCore.dir/src/RooAbsDataStore.cxx.o roofit/roofitcore/CMakeFiles/RooFitCore.dir/src/RooAbsFunc.cxx.o roofit/roofitcore/CMakeFiles/RooFitCore.dir/src/RooAbsGenContext.cxx.o roofit/roofitcore/CMakeFiles/RooFitCore.dir/src/RooAbsHiddenReal.cxx.o roofit/roofitcore/CMakeFiles/RooFitCore.dir/src/RooAbsIntegrator.cxx.o roofit/roofitcore/CMakeFiles/RooFitCore.dir/src/RooAbsLValue.cxx.o roofit/roofitcore/CMakeFiles/RooFitCore.dir/src/RooAbsMCStudyModule.cxx.o roofit/roofitcore/CMakeFiles/RooFitCore.dir/src/RooAbsMoment.cxx.o roofit/roofitcore/CMakeFiles/RooFitCore.dir/src/RooAbsNumGenerator.cxx.o roofit/roofitcore/CMakeFiles/RooFitCore.dir/src/RooAbsOptTestStatistic.cxx.o roofit",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4179#issuecomment-520832166:301,hash,hash-style,301,https://root.cern,https://github.com/root-project/root/pull/4179#issuecomment-520832166,1,['hash'],['hash-style']
Security,"Build failed on ROOT-ubuntu16/rtcxxmod.; [See console output](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/65983/console).; ### Errors:; - FAILED: : && /usr/bin/c++ -fPIC -std=c++11 -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread -O3 -DNDEBUG -Wl,--no-undefined -Wl,--hash-style=""both"" -shared -Wl,-soname,libCore.so.6.19 -o lib/libCore.so.6.19.01 core/CMakeFiles/BaseTROOT.dir/base/src/TROOT.cxx.o core/base/CMakeFiles/Base.dir/src/InitGui.cxx.o core/base/CMakeFiles/Base.dir/src/Match.cxx.o core/base/CMakeFiles/Base.dir/src/String.cxx.o core/base/CMakeFiles/Base.dir/src/Stringio.cxx.o core/base/CMakeFiles/Base.dir/src/TApplication.cxx.o core/base/CMakeFiles/Base.dir/src/TApplicationImp.cxx.o core/base/CMakeFiles/Base.dir/src/TAtt3D.cxx.o core/base/CMakeFiles/Base.dir/src/TAttAxis.cxx.o core/base/CMakeFiles/Base.dir/src/TAttBBox2D.cxx.o core/base/CMakeFiles/Base.dir/src/TAttBBox.cxx.o core/base/CMakeFiles/Base.dir/src/TAttFill.cxx.o core/base/CMakeFiles/Base.dir/src/TAttLine.cxx.o core/base/CMakeFiles/Base.dir/src/TAttMarker.cxx.o core/base/CMakeFiles/Base.dir/src/TAttPad.cxx.o core/base/CMakeFiles/Base.dir/src/TAttText.cxx.o core/base/CMakeFiles/Base.dir/src/TBase64.cxx.o core/base/CMakeFiles/Base.dir/src/TBenchmark.cxx.o core/base/CMakeFiles/Base.dir/src/TBrowser.cxx.o core/base/CMakeFiles/Base.dir/src/TBrowserImp.cxx.o core/base/CMakeFiles/Base.dir/src/TBuffer3D.cxx.o core/base/CMakeFiles/Base.dir/src/TBuffer.cxx.o core/base/CMakeFiles/Base.dir/src/TCanvasImp.cxx.o core/base/CMakeFiles/Base.dir/src/TColor.cxx.o core/base/CMakeFiles/Base.dir/src/TColorGradient.cxx.o core/base/CMakeFiles/Base.dir/src/TContextMenu.cxx.o core/base/CMakeFiles/Base.dir/src/TContextMenuImp.cxx.o core/base/CMakeFiles/Base.dir/src/TControlBarImp.cxx.o core/base/CMakeFiles/Base.dir/src/TDatime.cxx.o core/base/CMakeFiles/Base.dir/src/TDirectory.cxx.o core/base/CMakeFiles/Base.dir/src/TEnv.cxx.o core/base/CMakeFiles/Base.dir/src/TError.cxx.o core/base/CMakeFiles/B",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4277#issuecomment-524558359:301,hash,hash-style,301,https://root.cern,https://github.com/root-project/root/pull/4277#issuecomment-524558359,1,['hash'],['hash-style']
Security,"Build failed on ROOT-ubuntu16/rtcxxmod.; [See console output](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/67768/console).; ### Errors:; - FAILED: : && /usr/bin/c++ -fPIC -std=c++11 -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread -O3 -DNDEBUG -Wl,--no-undefined -Wl,--hash-style=""both"" -shared -Wl,-soname,libRooFitCore.so.6.19 -o lib/libRooFitCore.so.6.19.01 roofit/roofitcore/CMakeFiles/G__RooFitCore.dir/G__RooFitCore.cxx.o roofit/roofitcore/CMakeFiles/RooFitCore.dir/src/BidirMMapPipe.cxx.o roofit/roofitcore/CMakeFiles/RooFitCore.dir/src/Roo1DTable.cxx.o roofit/roofitcore/CMakeFiles/RooFitCore.dir/src/RooAbsAnaConvPdf.cxx.o roofit/roofitcore/CMakeFiles/RooFitCore.dir/src/RooAbsArg.cxx.o roofit/roofitcore/CMakeFiles/RooFitCore.dir/src/RooAbsBinning.cxx.o roofit/roofitcore/CMakeFiles/RooFitCore.dir/src/RooAbsCache.cxx.o roofit/roofitcore/CMakeFiles/RooFitCore.dir/src/RooAbsCachedPdf.cxx.o roofit/roofitcore/CMakeFiles/RooFitCore.dir/src/RooAbsCachedReal.cxx.o roofit/roofitcore/CMakeFiles/RooFitCore.dir/src/RooAbsCacheElement.cxx.o roofit/roofitcore/CMakeFiles/RooFitCore.dir/src/RooAbsCategory.cxx.o roofit/roofitcore/CMakeFiles/RooFitCore.dir/src/RooAbsCategoryLValue.cxx.o roofit/roofitcore/CMakeFiles/RooFitCore.dir/src/RooAbsCollection.cxx.o roofit/roofitcore/CMakeFiles/RooFitCore.dir/src/RooAbsData.cxx.o roofit/roofitcore/CMakeFiles/RooFitCore.dir/src/RooAbsDataStore.cxx.o roofit/roofitcore/CMakeFiles/RooFitCore.dir/src/RooAbsFunc.cxx.o roofit/roofitcore/CMakeFiles/RooFitCore.dir/src/RooAbsGenContext.cxx.o roofit/roofitcore/CMakeFiles/RooFitCore.dir/src/RooAbsHiddenReal.cxx.o roofit/roofitcore/CMakeFiles/RooFitCore.dir/src/RooAbsIntegrator.cxx.o roofit/roofitcore/CMakeFiles/RooFitCore.dir/src/RooAbsLValue.cxx.o roofit/roofitcore/CMakeFiles/RooFitCore.dir/src/RooAbsMCStudyModule.cxx.o roofit/roofitcore/CMakeFiles/RooFitCore.dir/src/RooAbsMoment.cxx.o roofit/roofitcore/CMakeFiles/RooFitCore.dir/src/RooAbsNumGenerator.cxx.o roofit/roofitcor",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4383#issuecomment-530825186:301,hash,hash-style,301,https://root.cern,https://github.com/root-project/root/pull/4383#issuecomment-530825186,1,['hash'],['hash-style']
Security,"Build failed on ROOT-ubuntu16/rtcxxmod.; [See console output](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/67939/console).; ### Errors:; - FAILED: : && /usr/bin/c++ -fPIC -std=c++11 -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread -O3 -DNDEBUG -Wl,--no-undefined -Wl,--hash-style=""both"" -shared -Wl,-soname,libCore.so.6.19 -o lib/libCore.so.6.19.01 core/CMakeFiles/BaseTROOT.dir/base/src/TROOT.cxx.o core/base/CMakeFiles/Base.dir/src/InitGui.cxx.o core/base/CMakeFiles/Base.dir/src/Match.cxx.o core/base/CMakeFiles/Base.dir/src/String.cxx.o core/base/CMakeFiles/Base.dir/src/Stringio.cxx.o core/base/CMakeFiles/Base.dir/src/TApplication.cxx.o core/base/CMakeFiles/Base.dir/src/TApplicationImp.cxx.o core/base/CMakeFiles/Base.dir/src/TAtt3D.cxx.o core/base/CMakeFiles/Base.dir/src/TAttAxis.cxx.o core/base/CMakeFiles/Base.dir/src/TAttBBox2D.cxx.o core/base/CMakeFiles/Base.dir/src/TAttBBox.cxx.o core/base/CMakeFiles/Base.dir/src/TAttFill.cxx.o core/base/CMakeFiles/Base.dir/src/TAttLine.cxx.o core/base/CMakeFiles/Base.dir/src/TAttMarker.cxx.o core/base/CMakeFiles/Base.dir/src/TAttPad.cxx.o core/base/CMakeFiles/Base.dir/src/TAttText.cxx.o core/base/CMakeFiles/Base.dir/src/TBase64.cxx.o core/base/CMakeFiles/Base.dir/src/TBenchmark.cxx.o core/base/CMakeFiles/Base.dir/src/TBrowser.cxx.o core/base/CMakeFiles/Base.dir/src/TBrowserImp.cxx.o core/base/CMakeFiles/Base.dir/src/TBuffer3D.cxx.o core/base/CMakeFiles/Base.dir/src/TBuffer.cxx.o core/base/CMakeFiles/Base.dir/src/TCanvasImp.cxx.o core/base/CMakeFiles/Base.dir/src/TColor.cxx.o core/base/CMakeFiles/Base.dir/src/TColorGradient.cxx.o core/base/CMakeFiles/Base.dir/src/TContextMenu.cxx.o core/base/CMakeFiles/Base.dir/src/TContextMenuImp.cxx.o core/base/CMakeFiles/Base.dir/src/TControlBarImp.cxx.o core/base/CMakeFiles/Base.dir/src/TDatime.cxx.o core/base/CMakeFiles/Base.dir/src/TDirectory.cxx.o core/base/CMakeFiles/Base.dir/src/TEnv.cxx.o core/base/CMakeFiles/Base.dir/src/TError.cxx.o core/base/CMakeFiles/B",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4396#issuecomment-532177130:301,hash,hash-style,301,https://root.cern,https://github.com/root-project/root/pull/4396#issuecomment-532177130,1,['hash'],['hash-style']
Security,"Build failed on ROOT-ubuntu16/rtcxxmod.; [See console output](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/68565/console).; ### Errors:; - FAILED: : && /usr/bin/c++ -fPIC -std=c++11 -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread -O3 -DNDEBUG -Wl,--no-undefined -Wl,--hash-style=""both"" -shared -Wl,-soname,libCore.so.6.19 -o lib/libCore.so.6.19.01 core/CMakeFiles/BaseTROOT.dir/base/src/TROOT.cxx.o core/base/CMakeFiles/Base.dir/src/InitGui.cxx.o core/base/CMakeFiles/Base.dir/src/Match.cxx.o core/base/CMakeFiles/Base.dir/src/String.cxx.o core/base/CMakeFiles/Base.dir/src/Stringio.cxx.o core/base/CMakeFiles/Base.dir/src/TApplication.cxx.o core/base/CMakeFiles/Base.dir/src/TApplicationImp.cxx.o core/base/CMakeFiles/Base.dir/src/TAtt3D.cxx.o core/base/CMakeFiles/Base.dir/src/TAttAxis.cxx.o core/base/CMakeFiles/Base.dir/src/TAttBBox2D.cxx.o core/base/CMakeFiles/Base.dir/src/TAttBBox.cxx.o core/base/CMakeFiles/Base.dir/src/TAttFill.cxx.o core/base/CMakeFiles/Base.dir/src/TAttLine.cxx.o core/base/CMakeFiles/Base.dir/src/TAttMarker.cxx.o core/base/CMakeFiles/Base.dir/src/TAttPad.cxx.o core/base/CMakeFiles/Base.dir/src/TAttText.cxx.o core/base/CMakeFiles/Base.dir/src/TBase64.cxx.o core/base/CMakeFiles/Base.dir/src/TBenchmark.cxx.o core/base/CMakeFiles/Base.dir/src/TBrowser.cxx.o core/base/CMakeFiles/Base.dir/src/TBrowserImp.cxx.o core/base/CMakeFiles/Base.dir/src/TBuffer3D.cxx.o core/base/CMakeFiles/Base.dir/src/TBuffer.cxx.o core/base/CMakeFiles/Base.dir/src/TCanvasImp.cxx.o core/base/CMakeFiles/Base.dir/src/TColor.cxx.o core/base/CMakeFiles/Base.dir/src/TColorGradient.cxx.o core/base/CMakeFiles/Base.dir/src/TContextMenu.cxx.o core/base/CMakeFiles/Base.dir/src/TContextMenuImp.cxx.o core/base/CMakeFiles/Base.dir/src/TControlBarImp.cxx.o core/base/CMakeFiles/Base.dir/src/TDatime.cxx.o core/base/CMakeFiles/Base.dir/src/TDirectory.cxx.o core/base/CMakeFiles/Base.dir/src/TEnv.cxx.o core/base/CMakeFiles/Base.dir/src/TError.cxx.o core/base/CMakeFiles/B",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4401#issuecomment-535397579:301,hash,hash-style,301,https://root.cern,https://github.com/root-project/root/pull/4401#issuecomment-535397579,1,['hash'],['hash-style']
Security,"Build failed on ROOT-ubuntu18.04-i386/cxx14.; [See console output](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/56929/console).; ### Errors:; - Error in &lt;HandleInterpreterException&gt;: Trying to access a pointer that points to an invalid memory address.. . ### Warnings:; - /mnt/build/workspace/root-pullrequests-build/root/tree/tree/test/BulkApiVarLength.cxx:102:19: warning: format ‘%lu’ expects argument of type ‘long unsigned int’, but argument 2 has type ‘std::size_t {aka unsigned int}’ [-Wformat=] ; - /mnt/build/workspace/root-pullrequests-build/root/tree/tree/test/BulkApiVarLength.cxx:109:19: warning: format ‘%lu’ expects argument of type ‘long unsigned int’, but argument 2 has type ‘std::size_t {aka unsigned int}’ [-Wformat=] ; - /mnt/build/workspace/root-pullrequests-build/build/tutorials/hsimple.C:56:8: warning: invalid memory pointer passed to a callee:",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3666#issuecomment-481506488:212,access,access,212,https://root.cern,https://github.com/root-project/root/pull/3666#issuecomment-481506488,1,['access'],['access']
Security,Build failed on ROOT-ubuntu18.04-i386/cxx14.; [See console output](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/75632/console).; ### Warnings:; - /home/sftnight/build/workspace/root-pullrequests-build/root/core/base/src/TMacro.cxx:340:102: warning: format not a string literal and no format arguments [-Wformat-security] ; - /home/sftnight/build/workspace/root-pullrequests-build/root/core/base/src/TMacro.cxx:344:108: warning: format not a string literal and no format arguments [-Wformat-security],MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4830#issuecomment-577157808:324,secur,security,324,https://root.cern,https://github.com/root-project/root/pull/4830#issuecomment-577157808,2,['secur'],['security']
Security,"Build failed on ROOT-ubuntu18.04/nortcxxmod.; Running on sft-ubuntu-1804-2.cern.ch:/build/workspace/root-pullrequests-build; [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/174898/console).; ### Errors:; - [2023-05-18T18:53:17.078Z] FAILED: core/thread/CMakeFiles/Thread.dir/src/RConcurrentHashColl.cxx.o ; - [2023-05-18T18:53:17.334Z] /mnt/build/workspace/root-pullrequests-build/root/core/thread/src/RConcurrentHashColl.cxx:13:1: error: global qualification of class name is invalid before ‘{’ token ; - [2023-05-18T18:53:17.334Z] /usr/include/c++/7/bits/hashtable_policy.h:87:34: error: no match for call to ‘(const std::hash&lt;ROOT::Internal::RConcurrentHashColl::HashValue&gt;) (const ROOT::Internal::RConcurrentHashColl::HashValue&)’ ; - [2023-05-18T18:53:17.334Z] /usr/include/c++/7/type_traits:154:31: error: ‘value’ is not a member of ‘std::__and_&lt;std::__is_fast_hash&lt;std::hash&lt;ROOT::Internal::RConcurrentHashColl::HashValue&gt; &gt;, std::__detail::__is_noexcept_hash&lt;ROOT::Internal::RConcurrentHashColl::HashValue, std::hash&lt;ROOT::Internal::RConcurrentHashColl::HashValue&gt; &gt; &gt;’ ; - [2023-05-18T18:53:17.334Z] /usr/include/c++/7/bits/unordered_map.h:103:66: error: ‘value’ is not a member of ‘std::__not_&lt;std::__and_&lt;std::__is_fast_hash&lt;std::hash&lt;ROOT::Internal::RConcurrentHashColl::HashValue&gt; &gt;, std::__detail::__is_noexcept_hash&lt;ROOT::Internal::RConcurrentHashColl::HashValue, std::hash&lt;ROOT::Internal::RConcurrentHashColl::HashValue&gt; &gt; &gt; &gt;’ ; - [2023-05-18T18:53:17.334Z] /usr/include/c++/7/bits/unordered_map.h:110:45: error: ‘value’ is not a member of ‘std::__not_&lt;std::__and_&lt;std::__is_fast_hash&lt;std::hash&lt;ROOT::Internal::RConcurrentHashColl::HashValue&gt; &gt;, std::__detail::__is_noexcept_hash&lt;ROOT::Internal::RConcurrentHashColl::HashValue, std::hash&lt;ROOT::Internal::RConcurrentHashColl::HashValue&gt; &gt; &gt; &gt;’ ; - [2023-05-18T18:53:17.334Z] /usr/i",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12846#issuecomment-1553490953:670,hash,hash,670,https://root.cern,https://github.com/root-project/root/pull/12846#issuecomment-1553490953,8,"['Hash', 'hash']","['HashValue', 'hash']"
Security,"Build failed on ROOT-ubuntu18.04/nortcxxmod.; Running on sft-ubuntu-1804-2.cern.ch:/build/workspace/root-pullrequests-build; [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/174905/console).; ### Errors:; - [2023-05-18T18:57:04.826Z] FAILED: core/thread/CMakeFiles/Thread.dir/src/RConcurrentHashColl.cxx.o ; - [2023-05-18T18:57:04.826Z] /mnt/build/workspace/root-pullrequests-build/root/core/thread/src/RConcurrentHashColl.cxx:13:1: error: global qualification of class name is invalid before ‘{’ token ; - [2023-05-18T18:57:04.826Z] /usr/include/c++/7/bits/hashtable_policy.h:87:34: error: no match for call to ‘(const std::hash&lt;ROOT::Internal::RConcurrentHashColl::HashValue&gt;) (const ROOT::Internal::RConcurrentHashColl::HashValue&)’ ; - [2023-05-18T18:57:04.826Z] /usr/include/c++/7/type_traits:154:31: error: ‘value’ is not a member of ‘std::__and_&lt;std::__is_fast_hash&lt;std::hash&lt;ROOT::Internal::RConcurrentHashColl::HashValue&gt; &gt;, std::__detail::__is_noexcept_hash&lt;ROOT::Internal::RConcurrentHashColl::HashValue, std::hash&lt;ROOT::Internal::RConcurrentHashColl::HashValue&gt; &gt; &gt;’ ; - [2023-05-18T18:57:04.826Z] /usr/include/c++/7/bits/unordered_map.h:103:66: error: ‘value’ is not a member of ‘std::__not_&lt;std::__and_&lt;std::__is_fast_hash&lt;std::hash&lt;ROOT::Internal::RConcurrentHashColl::HashValue&gt; &gt;, std::__detail::__is_noexcept_hash&lt;ROOT::Internal::RConcurrentHashColl::HashValue, std::hash&lt;ROOT::Internal::RConcurrentHashColl::HashValue&gt; &gt; &gt; &gt;’ ; - [2023-05-18T18:57:04.826Z] /usr/include/c++/7/bits/unordered_map.h:110:45: error: ‘value’ is not a member of ‘std::__not_&lt;std::__and_&lt;std::__is_fast_hash&lt;std::hash&lt;ROOT::Internal::RConcurrentHashColl::HashValue&gt; &gt;, std::__detail::__is_noexcept_hash&lt;ROOT::Internal::RConcurrentHashColl::HashValue, std::hash&lt;ROOT::Internal::RConcurrentHashColl::HashValue&gt; &gt; &gt; &gt;’ ; - [2023-05-18T18:57:04.826Z] /usr/i",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12847#issuecomment-1553498683:670,hash,hash,670,https://root.cern,https://github.com/root-project/root/pull/12847#issuecomment-1553498683,8,"['Hash', 'hash']","['HashValue', 'hash']"
Security,"Build failed on ROOT-ubuntu18.04/nortcxxmod.; Running on sft-ubuntu-1804-3.cern.ch:/build/workspace/root-pullrequests-build; [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/174870/console).; ### Errors:; - [2023-05-18T18:13:20.786Z] FAILED: core/thread/CMakeFiles/Thread.dir/src/RConcurrentHashColl.cxx.o ; - [2023-05-18T18:13:21.043Z] /mnt/build/workspace/root-pullrequests-build/root/core/thread/src/RConcurrentHashColl.cxx:13:1: error: global qualification of class name is invalid before ‘{’ token ; - [2023-05-18T18:13:21.043Z] /usr/include/c++/7/bits/hashtable_policy.h:87:34: error: no match for call to ‘(const std::hash&lt;ROOT::Internal::RConcurrentHashColl::HashValue&gt;) (const ROOT::Internal::RConcurrentHashColl::HashValue&)’ ; - [2023-05-18T18:13:21.043Z] /usr/include/c++/7/type_traits:154:31: error: ‘value’ is not a member of ‘std::__and_&lt;std::__is_fast_hash&lt;std::hash&lt;ROOT::Internal::RConcurrentHashColl::HashValue&gt; &gt;, std::__detail::__is_noexcept_hash&lt;ROOT::Internal::RConcurrentHashColl::HashValue, std::hash&lt;ROOT::Internal::RConcurrentHashColl::HashValue&gt; &gt; &gt;’ ; - [2023-05-18T18:13:21.043Z] /usr/include/c++/7/bits/unordered_map.h:103:66: error: ‘value’ is not a member of ‘std::__not_&lt;std::__and_&lt;std::__is_fast_hash&lt;std::hash&lt;ROOT::Internal::RConcurrentHashColl::HashValue&gt; &gt;, std::__detail::__is_noexcept_hash&lt;ROOT::Internal::RConcurrentHashColl::HashValue, std::hash&lt;ROOT::Internal::RConcurrentHashColl::HashValue&gt; &gt; &gt; &gt;’ ; - [2023-05-18T18:13:21.043Z] /usr/include/c++/7/bits/unordered_map.h:110:45: error: ‘value’ is not a member of ‘std::__not_&lt;std::__and_&lt;std::__is_fast_hash&lt;std::hash&lt;ROOT::Internal::RConcurrentHashColl::HashValue&gt; &gt;, std::__detail::__is_noexcept_hash&lt;ROOT::Internal::RConcurrentHashColl::HashValue, std::hash&lt;ROOT::Internal::RConcurrentHashColl::HashValue&gt; &gt; &gt; &gt;’ ; - [2023-05-18T18:13:21.043Z] /usr/i",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12846#issuecomment-1553437393:670,hash,hash,670,https://root.cern,https://github.com/root-project/root/pull/12846#issuecomment-1553437393,8,"['Hash', 'hash']","['HashValue', 'hash']"
Security,"Build failed on ROOT-ubuntu18.04/nortcxxmod.; Running on sft-ubuntu-1804-3.cern.ch:/build/workspace/root-pullrequests-build; [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/174877/console).; ### Errors:; - [2023-05-18T18:23:19.549Z] FAILED: core/thread/CMakeFiles/Thread.dir/src/RConcurrentHashColl.cxx.o ; - [2023-05-18T18:23:19.549Z] /mnt/build/workspace/root-pullrequests-build/root/core/thread/src/RConcurrentHashColl.cxx:13:1: error: global qualification of class name is invalid before ‘{’ token ; - [2023-05-18T18:23:19.549Z] /usr/include/c++/7/bits/hashtable_policy.h:87:34: error: no match for call to ‘(const std::hash&lt;ROOT::Internal::RConcurrentHashColl::HashValue&gt;) (const ROOT::Internal::RConcurrentHashColl::HashValue&)’ ; - [2023-05-18T18:23:19.549Z] /usr/include/c++/7/type_traits:154:31: error: ‘value’ is not a member of ‘std::__and_&lt;std::__is_fast_hash&lt;std::hash&lt;ROOT::Internal::RConcurrentHashColl::HashValue&gt; &gt;, std::__detail::__is_noexcept_hash&lt;ROOT::Internal::RConcurrentHashColl::HashValue, std::hash&lt;ROOT::Internal::RConcurrentHashColl::HashValue&gt; &gt; &gt;’ ; - [2023-05-18T18:23:19.806Z] /usr/include/c++/7/bits/unordered_map.h:103:66: error: ‘value’ is not a member of ‘std::__not_&lt;std::__and_&lt;std::__is_fast_hash&lt;std::hash&lt;ROOT::Internal::RConcurrentHashColl::HashValue&gt; &gt;, std::__detail::__is_noexcept_hash&lt;ROOT::Internal::RConcurrentHashColl::HashValue, std::hash&lt;ROOT::Internal::RConcurrentHashColl::HashValue&gt; &gt; &gt; &gt;’ ; - [2023-05-18T18:23:19.806Z] /usr/include/c++/7/bits/unordered_map.h:110:45: error: ‘value’ is not a member of ‘std::__not_&lt;std::__and_&lt;std::__is_fast_hash&lt;std::hash&lt;ROOT::Internal::RConcurrentHashColl::HashValue&gt; &gt;, std::__detail::__is_noexcept_hash&lt;ROOT::Internal::RConcurrentHashColl::HashValue, std::hash&lt;ROOT::Internal::RConcurrentHashColl::HashValue&gt; &gt; &gt; &gt;’ ; - [2023-05-18T18:23:19.806Z] /usr/i",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12847#issuecomment-1553447487:670,hash,hash,670,https://root.cern,https://github.com/root-project/root/pull/12847#issuecomment-1553447487,8,"['Hash', 'hash']","['HashValue', 'hash']"
Security,Build failed on ROOT-ubuntu2004/soversion.; Running on root-ubuntu-2004-1.cern.ch:/home/sftnight/build/workspace/root-pullrequests-build; [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/139445/console).; ### Warnings:; - [2022-03-15T12:06:23.002Z] /home/sftnight/build/workspace/root-pullrequests-build/root/tree/dataframe/src/RCsvDS.cxx:437:36: warning: format not a string literal and no format arguments [-Wformat-security],MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9988#issuecomment-1067929710:463,secur,security,463,https://root.cern,https://github.com/root-project/root/pull/9988#issuecomment-1067929710,1,['secur'],['security']
Security,"Build failed on centos7/clang_gcc62.; [See console output](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/15936/console).; ### Errors:; - /usr/lib/gcc/x86_64-redhat-linux/4.8.5/../../../../include/c++/4.8.5/bits/hashtable.h:179:24: error: default argument of '_Insert' must be imported from one of the following modules before it is required: ; - /usr/lib/gcc/x86_64-redhat-linux/4.8.5/../../../../include/c++/4.8.5/bits/hashtable.h:220:54: error: '__node_base' is a protected member of 'std::__detail::_Hashtable_base&lt;std::basic_string&lt;char&gt;, std::basic_string&lt;char&gt;, std::__detail::_Identity, std::equal_to&lt;std::basic_string&lt;char&gt; &gt;, std::hash&lt;std::string&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Hashtable_traits&lt;true, true, true&gt; &gt;' ; - /usr/lib/gcc/x86_64-redhat-linux/4.8.5/../../../../include/c++/4.8.5/bits/hashtable.h:221:56: error: '__bucket_type' is a protected member of 'std::__detail::_Hashtable_base&lt;std::basic_string&lt;char&gt;, std::basic_string&lt;char&gt;, std::__detail::_Identity, std::equal_to&lt;std::basic_string&lt;char&gt; &gt;, std::hash&lt;std::string&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Hashtable_traits&lt;true, true, true&gt; &gt;' ; - /usr/lib/gcc/x86_64-redhat-linux/4.8.5/../../../../include/c++/4.8.5/bits/unordered_set.h:104:36: error: no type named 'hasher' in 'std::_Hashtable&lt;std::basic_string&lt;char&gt;, std::basic_string&lt;char&gt;, std::allocator&lt;std::basic_string&lt;char&gt; &gt;, std::__detail::_Identity, std::equal_to&lt;std::basic_string&lt;char&gt; &gt;, std::hash&lt;std::string&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, true, true&gt; &gt;' ; - /usr/lib/gcc/x86_64-redhat-linux/4.8.5/../../../../include/c++/4.8.5/bits/hashtable.h:179:24: error: default argument o",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1412#issuecomment-361415584:223,hash,hashtable,223,https://root.cern,https://github.com/root-project/root/pull/1412#issuecomment-361415584,4,['hash'],"['hash', 'hashtable']"
Security,Build failed on centos7/gcc49.; [See console output](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/8168/console).; ### Errors:; - /mnt/build/jenkins/workspace/root-pullrequests-build/build/tutorials/rootalias.C:70:4: error: unknown type name 'TPaveText' ; - /mnt/build/jenkins/workspace/root-pullrequests-build/build/tutorials/rootalias.C:70:26: error: use of undeclared identifier 'TPaveText' ; - /mnt/build/jenkins/workspace/root-pullrequests-build/build/tutorials/rootalias.C:70:36: error: expected expression ; - /mnt/build/jenkins/workspace/root-pullrequests-build/build/tutorials/rootalias.C:71:4: error: unknown type name 'TText' ; - /mnt/build/jenkins/workspace/root-pullrequests-build/build/tutorials/rootalias.C:73:9: error: member access into incomplete type 'TCanvas' ; - /mnt/build/jenkins/workspace/root-pullrequests-build/build/tutorials/rootalias.C:73:28: error: member access into incomplete type 'TCanvas' ; - /mnt/build/jenkins/workspace/root-pullrequests-build/build/tutorials/rootalias.C:77:4: error: unknown type name 'TPaveText' ; - /mnt/build/jenkins/workspace/root-pullrequests-build/build/tutorials/rootalias.C:77:27: error: use of undeclared identifier 'TPaveText' ; - /mnt/build/jenkins/workspace/root-pullrequests-build/build/tutorials/rootalias.C:77:37: error: expected expression ; - /mnt/build/jenkins/workspace/root-pullrequests-build/build/tutorials/rootalias.C:78:4: error: unknown type name 'TText' . And 81 more,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1136#issuecomment-334455482:754,access,access,754,https://root.cern,https://github.com/root-project/root/pull/1136#issuecomment-334455482,2,['access'],['access']
Security,Build failed on centos7/gcc49.; [See console output](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/8198/console).; ### Errors:; - /mnt/build/jenkins/workspace/root-pullrequests-build/build/tutorials/rootalias.C:70:4: error: unknown type name 'TPaveText' ; - /mnt/build/jenkins/workspace/root-pullrequests-build/build/tutorials/rootalias.C:70:26: error: use of undeclared identifier 'TPaveText' ; - /mnt/build/jenkins/workspace/root-pullrequests-build/build/tutorials/rootalias.C:70:36: error: expected expression ; - /mnt/build/jenkins/workspace/root-pullrequests-build/build/tutorials/rootalias.C:71:4: error: unknown type name 'TText' ; - /mnt/build/jenkins/workspace/root-pullrequests-build/build/tutorials/rootalias.C:73:9: error: member access into incomplete type 'TCanvas' ; - /mnt/build/jenkins/workspace/root-pullrequests-build/build/tutorials/rootalias.C:73:28: error: member access into incomplete type 'TCanvas' ; - /mnt/build/jenkins/workspace/root-pullrequests-build/build/tutorials/rootalias.C:77:4: error: unknown type name 'TPaveText' ; - /mnt/build/jenkins/workspace/root-pullrequests-build/build/tutorials/rootalias.C:77:27: error: use of undeclared identifier 'TPaveText' ; - /mnt/build/jenkins/workspace/root-pullrequests-build/build/tutorials/rootalias.C:77:37: error: expected expression ; - /mnt/build/jenkins/workspace/root-pullrequests-build/build/tutorials/rootalias.C:78:4: error: unknown type name 'TText' . And 6 more. ### Warnings:; - Warning in &lt;GenerateModule&gt;: warning: Couldn't find the following specified headers in the module Core: ; - Warning in &lt;GenerateModule&gt;: warning: Couldn't find the following specified headers in the module valarrayDict: ; - Warning in &lt;GenerateModule&gt;: warning: Couldn't find the following specified headers in the module dequeDict: ; - Warning in &lt;GenerateModule&gt;: warning: Couldn't find the following specified headers in the module setDict: ; - Warning in &lt;GenerateModule&gt;: warning: Couldn',MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1139#issuecomment-334479828:754,access,access,754,https://root.cern,https://github.com/root-project/root/pull/1139#issuecomment-334479828,2,['access'],['access']
Security,Build failed on centos7/gcc49.; [See console output](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/8223/console).; ### Errors:; - /mnt/build/jenkins/workspace/root-pullrequests-build/build/tutorials/rootalias.C:70:4: error: unknown type name 'TPaveText' ; - /mnt/build/jenkins/workspace/root-pullrequests-build/build/tutorials/rootalias.C:70:26: error: use of undeclared identifier 'TPaveText' ; - /mnt/build/jenkins/workspace/root-pullrequests-build/build/tutorials/rootalias.C:70:36: error: expected expression ; - /mnt/build/jenkins/workspace/root-pullrequests-build/build/tutorials/rootalias.C:71:4: error: unknown type name 'TText' ; - /mnt/build/jenkins/workspace/root-pullrequests-build/build/tutorials/rootalias.C:73:9: error: member access into incomplete type 'TCanvas' ; - /mnt/build/jenkins/workspace/root-pullrequests-build/build/tutorials/rootalias.C:73:28: error: member access into incomplete type 'TCanvas' ; - /mnt/build/jenkins/workspace/root-pullrequests-build/build/tutorials/rootalias.C:77:4: error: unknown type name 'TPaveText' ; - /mnt/build/jenkins/workspace/root-pullrequests-build/build/tutorials/rootalias.C:77:27: error: use of undeclared identifier 'TPaveText' ; - /mnt/build/jenkins/workspace/root-pullrequests-build/build/tutorials/rootalias.C:77:37: error: expected expression ; - /mnt/build/jenkins/workspace/root-pullrequests-build/build/tutorials/rootalias.C:78:4: error: unknown type name 'TText' . And 6 more. ### Warnings:; - Warning in &lt;GenerateModule&gt;: warning: Couldn't find the following specified headers in the module Core: ; - Warning in &lt;GenerateModule&gt;: warning: Couldn't find the following specified headers in the module listDict: ; - Warning in &lt;GenerateModule&gt;: warning: Couldn't find the following specified headers in the module dequeDict: ; - Warning in &lt;GenerateModule&gt;: warning: Couldn't find the following specified headers in the module forward_listDict: ; - Warning in &lt;GenerateModule&gt;: warning: Co,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1139#issuecomment-334493075:754,access,access,754,https://root.cern,https://github.com/root-project/root/pull/1139#issuecomment-334493075,2,['access'],['access']
Security,Build failed on centos7/gcc49.; [See console output](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/8981/console).; ### Errors:; - /mnt/build/jenkins/workspace/root-pullrequests-build/build/tutorials/rootalias.C:70:4: error: unknown type name 'TPaveText' ; - /mnt/build/jenkins/workspace/root-pullrequests-build/build/tutorials/rootalias.C:70:26: error: use of undeclared identifier 'TPaveText' ; - /mnt/build/jenkins/workspace/root-pullrequests-build/build/tutorials/rootalias.C:70:36: error: expected expression ; - /mnt/build/jenkins/workspace/root-pullrequests-build/build/tutorials/rootalias.C:71:4: error: unknown type name 'TText' ; - /mnt/build/jenkins/workspace/root-pullrequests-build/build/tutorials/rootalias.C:73:9: error: member access into incomplete type 'TCanvas' ; - /mnt/build/jenkins/workspace/root-pullrequests-build/build/tutorials/rootalias.C:73:28: error: member access into incomplete type 'TCanvas' ; - /mnt/build/jenkins/workspace/root-pullrequests-build/build/tutorials/rootalias.C:77:4: error: unknown type name 'TPaveText' ; - /mnt/build/jenkins/workspace/root-pullrequests-build/build/tutorials/rootalias.C:77:27: error: use of undeclared identifier 'TPaveText' ; - /mnt/build/jenkins/workspace/root-pullrequests-build/build/tutorials/rootalias.C:77:37: error: expected expression ; - /mnt/build/jenkins/workspace/root-pullrequests-build/build/tutorials/rootalias.C:78:4: error: unknown type name 'TText' . And 110 more,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1188#issuecomment-336673701:754,access,access,754,https://root.cern,https://github.com/root-project/root/pull/1188#issuecomment-336673701,2,['access'],['access']
Security,Build failed on centos7/gcc49.; [See console output](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/9009/console).; ### Errors:; - /mnt/build/jenkins/workspace/root-pullrequests-build/build/tutorials/rootalias.C:70:4: error: unknown type name 'TPaveText' ; - /mnt/build/jenkins/workspace/root-pullrequests-build/build/tutorials/rootalias.C:70:26: error: use of undeclared identifier 'TPaveText' ; - /mnt/build/jenkins/workspace/root-pullrequests-build/build/tutorials/rootalias.C:70:36: error: expected expression ; - /mnt/build/jenkins/workspace/root-pullrequests-build/build/tutorials/rootalias.C:71:4: error: unknown type name 'TText' ; - /mnt/build/jenkins/workspace/root-pullrequests-build/build/tutorials/rootalias.C:73:9: error: member access into incomplete type 'TCanvas' ; - /mnt/build/jenkins/workspace/root-pullrequests-build/build/tutorials/rootalias.C:73:28: error: member access into incomplete type 'TCanvas' ; - /mnt/build/jenkins/workspace/root-pullrequests-build/build/tutorials/rootalias.C:77:4: error: unknown type name 'TPaveText' ; - /mnt/build/jenkins/workspace/root-pullrequests-build/build/tutorials/rootalias.C:77:27: error: use of undeclared identifier 'TPaveText' ; - /mnt/build/jenkins/workspace/root-pullrequests-build/build/tutorials/rootalias.C:77:37: error: expected expression ; - /mnt/build/jenkins/workspace/root-pullrequests-build/build/tutorials/rootalias.C:78:4: error: unknown type name 'TText' . And 110 more,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1188#issuecomment-336695484:754,access,access,754,https://root.cern,https://github.com/root-project/root/pull/1188#issuecomment-336695484,2,['access'],['access']
Security,Build failed on centos7/gcc49.; [See console output](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/9772/console).; ### Errors:; - /mnt/build/jenkins/workspace/root-pullrequests-build/build/tutorials/rootalias.C:70:4: error: unknown type name 'TPaveText' ; - /mnt/build/jenkins/workspace/root-pullrequests-build/build/tutorials/rootalias.C:70:26: error: use of undeclared identifier 'TPaveText' ; - /mnt/build/jenkins/workspace/root-pullrequests-build/build/tutorials/rootalias.C:70:36: error: expected expression ; - /mnt/build/jenkins/workspace/root-pullrequests-build/build/tutorials/rootalias.C:71:4: error: unknown type name 'TText' ; - /mnt/build/jenkins/workspace/root-pullrequests-build/build/tutorials/rootalias.C:73:9: error: member access into incomplete type 'TCanvas' ; - /mnt/build/jenkins/workspace/root-pullrequests-build/build/tutorials/rootalias.C:73:28: error: member access into incomplete type 'TCanvas' ; - /mnt/build/jenkins/workspace/root-pullrequests-build/build/tutorials/rootalias.C:77:4: error: unknown type name 'TPaveText' ; - /mnt/build/jenkins/workspace/root-pullrequests-build/build/tutorials/rootalias.C:77:27: error: use of undeclared identifier 'TPaveText' ; - /mnt/build/jenkins/workspace/root-pullrequests-build/build/tutorials/rootalias.C:77:37: error: expected expression ; - /mnt/build/jenkins/workspace/root-pullrequests-build/build/tutorials/rootalias.C:78:4: error: unknown type name 'TText' . And 8 more. ### Warnings:; - Warning in &lt;GenerateModule&gt;: warning: Couldn't find the following specified headers in the module Core: ; - Warning in &lt;GenerateModule&gt;: warning: Couldn't find the following specified headers in the module forward_listDict: ; - Warning in &lt;GenerateModule&gt;: warning: Couldn't find the following specified headers in the module listDict: ; - Warning in &lt;GenerateModule&gt;: warning: Couldn't find the following specified headers in the module dequeDict: ; - Warning in &lt;GenerateModule&gt;: warning: Co,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1229#issuecomment-339573612:754,access,access,754,https://root.cern,https://github.com/root-project/root/pull/1229#issuecomment-339573612,2,['access'],['access']
Security,"Build failed on fedora28/native.; [See console output](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/28299/console).; ### Warnings:; - /mnt/build/workspace/root-pullrequests-build/root/core/meta/src/TClass.cxx:686:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:490:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing between 2147483648 and 2147483647 bytes at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 4294967295] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:761:21: warning: ‘%lu’ directive writing between 1 and 20 bytes into a region of size between 0 and 8191 [-Wformat-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:5203:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:4757:26: warning: ‘char* strncpy(char*, const char*, size_t)’ output may be truncated copying 10 bytes from a string of length 10 [-Wstringop-truncation] ; - /mnt/build/workspace/root-pullrequests-build/root/proof/proofd/src/XrdProofdProtocol.cxx:527:45: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘class XrdSecEntity’; use assignment or value-initialization instead [-Wclass-memaccess] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TSystem.cxx:1148:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing 1 byte at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 2147483649] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1770:96: warning: cast between incompatible function types fr",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2113#issuecomment-393289526:506,access,accessing,506,https://root.cern,https://github.com/root-project/root/pull/2113#issuecomment-393289526,2,['access'],['accessing']
Security,"Build failed on fedora28/native.; [See console output](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/28369/console).; ### Warnings:; - /mnt/build/workspace/root-pullrequests-build/root/core/meta/src/TClass.cxx:686:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:5203:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:4757:26: warning: ‘char* strncpy(char*, const char*, size_t)’ output may be truncated copying 10 bytes from a string of length 10 [-Wstringop-truncation] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:490:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing between 2147483648 and 2147483647 bytes at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 4294967295] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:761:21: warning: ‘%lu’ directive writing between 1 and 20 bytes into a region of size between 0 and 8191 [-Wformat-overflow=]",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2121#issuecomment-393539826:974,access,accessing,974,https://root.cern,https://github.com/root-project/root/pull/2121#issuecomment-393539826,1,['access'],['accessing']
Security,"Build failed on fedora28/native.; [See console output](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/28689/console).; ### Warnings:; - /mnt/build/workspace/root-pullrequests-build/root/core/meta/src/TClass.cxx:686:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:490:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing between 2147483648 and 2147483647 bytes at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 4294967295] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:761:21: warning: ‘%lu’ directive writing between 1 and 20 bytes into a region of size between 0 and 8191 [-Wformat-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:5203:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:4757:26: warning: ‘char* strncpy(char*, const char*, size_t)’ output may be truncated copying 10 bytes from a string of length 10 [-Wstringop-truncation] ; - /mnt/build/workspace/root-pullrequests-build/root/proof/proofd/src/XrdProofdProtocol.cxx:527:45: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘class XrdSecEntity’; use assignment or value-initialization instead [-Wclass-memaccess] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TSystem.cxx:1148:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing 1 byte at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 2147483649] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1770:96: warning: cast between incompatible function types fr",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2128#issuecomment-394262891:506,access,accessing,506,https://root.cern,https://github.com/root-project/root/pull/2128#issuecomment-394262891,2,['access'],['accessing']
Security,"Build failed on fedora28/native.; [See console output](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/28729/console).; ### Warnings:; - /mnt/build/workspace/root-pullrequests-build/root/core/meta/src/TClass.cxx:686:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:490:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing between 2147483648 and 2147483647 bytes at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 4294967295] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:761:21: warning: ‘%lu’ directive writing between 1 and 20 bytes into a region of size between 0 and 8191 [-Wformat-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:5203:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:4757:26: warning: ‘char* strncpy(char*, const char*, size_t)’ output may be truncated copying 10 bytes from a string of length 10 [-Wstringop-truncation] ; - /mnt/build/workspace/root-pullrequests-build/root/proof/proofd/src/XrdProofdProtocol.cxx:527:45: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘class XrdSecEntity’; use assignment or value-initialization instead [-Wclass-memaccess] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TSystem.cxx:1148:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing 1 byte at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 2147483649] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1770:96: warning: cast between incompatible function types fr",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2130#issuecomment-394298233:506,access,accessing,506,https://root.cern,https://github.com/root-project/root/pull/2130#issuecomment-394298233,2,['access'],['accessing']
Security,"Build failed on fedora28/native.; [See console output](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/28799/console).; ### Warnings:; - /mnt/build/workspace/root-pullrequests-build/root/core/meta/src/TClass.cxx:686:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:490:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing between 2147483648 and 2147483647 bytes at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 4294967295] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:761:21: warning: ‘%lu’ directive writing between 1 and 20 bytes into a region of size between 0 and 8191 [-Wformat-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:5203:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:4757:26: warning: ‘char* strncpy(char*, const char*, size_t)’ output may be truncated copying 10 bytes from a string of length 10 [-Wstringop-truncation] ; - /mnt/build/workspace/root-pullrequests-build/root/proof/proofd/src/XrdProofdProtocol.cxx:527:45: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘class XrdSecEntity’; use assignment or value-initialization instead [-Wclass-memaccess] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TSystem.cxx:1148:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing 1 byte at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 2147483649] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1770:96: warning: cast between incompatible function types fr",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1973#issuecomment-394348081:506,access,accessing,506,https://root.cern,https://github.com/root-project/root/pull/1973#issuecomment-394348081,2,['access'],['accessing']
Security,"Build failed on fedora28/native.; [See console output](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/28889/console).; ### Errors:; - collect2: error: ld returned 1 exit status . ### Warnings:; - /mnt/build/workspace/root-pullrequests-build/root/core/meta/src/TClass.cxx:686:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:5203:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:4757:26: warning: ‘char* strncpy(char*, const char*, size_t)’ output may be truncated copying 10 bytes from a string of length 10 [-Wstringop-truncation] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:490:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing between 2147483648 and 2147483647 bytes at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 4294967295] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:761:21: warning: ‘%lu’ directive writing between 1 and 20 bytes into a region of size between 0 and 8191 [-Wformat-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/proof/proofd/src/XrdProofdProtocol.cxx:527:45: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘class XrdSecEntity’; use assignment or value-initialization instead [-Wclass-memaccess]",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2141#issuecomment-394388968:1034,access,accessing,1034,https://root.cern,https://github.com/root-project/root/pull/2141#issuecomment-394388968,2,['access'],['accessing']
Security,"Build failed on fedora28/native.; [See console output](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/30062/console).; ### Warnings:; - /mnt/build/workspace/root-pullrequests-build/root/core/meta/src/TClass.cxx:686:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:490:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing between 2147483648 and 2147483647 bytes at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 4294967295] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:761:21: warning: ‘%lu’ directive writing between 1 and 20 bytes into a region of size between 0 and 8191 [-Wformat-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:5203:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:4757:26: warning: ‘char* strncpy(char*, const char*, size_t)’ output may be truncated copying 10 bytes from a string of length 10 [-Wstringop-truncation] ; - /mnt/build/workspace/root-pullrequests-build/root/proof/proofd/src/XrdProofdProtocol.cxx:527:45: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘class XrdSecEntity’; use assignment or value-initialization instead [-Wclass-memaccess] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TSystem.cxx:1148:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing 1 byte at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 2147483649] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1770:96: warning: cast between incompatible function types fr",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2188#issuecomment-396924388:506,access,accessing,506,https://root.cern,https://github.com/root-project/root/pull/2188#issuecomment-396924388,2,['access'],['accessing']
Security,"Build failed on fedora28/native.; [See console output](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/31336/console).; ### Warnings:; - /mnt/build/workspace/root-pullrequests-build/root/core/meta/src/TClass.cxx:686:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:490:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing between 2147483648 and 2147483647 bytes at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 4294967295] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:761:21: warning: ‘%lu’ directive writing between 1 and 20 bytes into a region of size between 0 and 8191 [-Wformat-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:5203:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:4757:26: warning: ‘char* strncpy(char*, const char*, size_t)’ output may be truncated copying 10 bytes from a string of length 10 [-Wstringop-truncation] ; - /mnt/build/workspace/root-pullrequests-build/root/proof/proofd/src/XrdProofdProtocol.cxx:527:45: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘class XrdSecEntity’; use assignment or value-initialization instead [-Wclass-memaccess] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TSystem.cxx:1148:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing 1 byte at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 2147483649] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1770:96: warning: cast between incompatible function types fr",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2251#issuecomment-400304937:506,access,accessing,506,https://root.cern,https://github.com/root-project/root/pull/2251#issuecomment-400304937,2,['access'],['accessing']
Security,"Build failed on fedora28/native.; [See console output](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/31399/console).; ### Warnings:; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:5203:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:4757:26: warning: ‘char* strncpy(char*, const char*, size_t)’ output may be truncated copying 10 bytes from a string of length 10 [-Wstringop-truncation] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:490:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing between 2147483648 and 2147483647 bytes at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 4294967295] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:761:21: warning: ‘%lu’ directive writing between 1 and 20 bytes into a region of size between 0 and 8191 [-Wformat-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/proof/proofd/src/XrdProofdProtocol.cxx:527:45: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘class XrdSecEntity’; use assignment or value-initialization instead [-Wclass-memaccess] ; - /mnt/build/workspace/root-pullrequests-build/root/core/meta/src/TClass.cxx:686:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TSystem.cxx:1148:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing 1 byte at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 2147483649] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1770:96: warning: cast between incompatible function types fr",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2217#issuecomment-400351100:750,access,accessing,750,https://root.cern,https://github.com/root-project/root/pull/2217#issuecomment-400351100,2,['access'],['accessing']
Security,"Build failed on fedora28/native.; [See console output](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/31493/console).; ### Warnings:; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:5203:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:4757:26: warning: ‘char* strncpy(char*, const char*, size_t)’ output may be truncated copying 10 bytes from a string of length 10 [-Wstringop-truncation] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:490:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing between 2147483648 and 2147483647 bytes at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 4294967295] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:761:21: warning: ‘%lu’ directive writing between 1 and 20 bytes into a region of size between 0 and 8191 [-Wformat-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/proof/proofd/src/XrdProofdProtocol.cxx:527:45: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘class XrdSecEntity’; use assignment or value-initialization instead [-Wclass-memaccess] ; - /mnt/build/workspace/root-pullrequests-build/root/core/meta/src/TClass.cxx:686:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TSystem.cxx:1148:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing 1 byte at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 2147483649] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1770:96: warning: cast between incompatible function types fr",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2260#issuecomment-400865752:750,access,accessing,750,https://root.cern,https://github.com/root-project/root/pull/2260#issuecomment-400865752,2,['access'],['accessing']
Security,"Build failed on fedora28/native.; [See console output](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/32357/console).; ### Warnings:; - /mnt/build/workspace/root-pullrequests-build/root/core/meta/src/TClass.cxx:686:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/proof/proofd/src/XrdProofdProtocol.cxx:527:45: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘class XrdSecEntity’; use assignment or value-initialization instead [-Wclass-memaccess] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:490:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing between 2147483648 and 2147483647 bytes at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 4294967295] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:761:21: warning: ‘%lu’ directive writing between 1 and 20 bytes into a region of size between 0 and 8191 [-Wformat-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:5203:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:4757:26: warning: ‘char* strncpy(char*, const char*, size_t)’ output may be truncated copying 10 bytes from a string of length 10 [-Wstringop-truncation] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TSystem.cxx:1148:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing 1 byte at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 2147483649] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1770:96: warning: cast between incompatible function types fr",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2319#issuecomment-405050428:779,access,accessing,779,https://root.cern,https://github.com/root-project/root/pull/2319#issuecomment-405050428,2,['access'],['accessing']
Security,"Build failed on fedora28/native.; [See console output](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/32672/console).; ### Warnings:; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:5203:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:4757:26: warning: ‘char* strncpy(char*, const char*, size_t)’ output may be truncated copying 10 bytes from a string of length 10 [-Wstringop-truncation] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:490:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing between 2147483648 and 2147483647 bytes at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 4294967295] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:761:21: warning: ‘%lu’ directive writing between 1 and 20 bytes into a region of size between 0 and 8191 [-Wformat-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/proof/proofd/src/XrdProofdProtocol.cxx:527:45: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘class XrdSecEntity’; use assignment or value-initialization instead [-Wclass-memaccess] ; - /mnt/build/workspace/root-pullrequests-build/root/core/meta/src/TClass.cxx:686:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TSystem.cxx:1148:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing 1 byte at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 2147483649] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1770:96: warning: cast between incompatible function types fr",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2319#issuecomment-405627002:750,access,accessing,750,https://root.cern,https://github.com/root-project/root/pull/2319#issuecomment-405627002,2,['access'],['accessing']
Security,"Build failed on fedora28/native.; [See console output](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/32748/console).; ### Errors:; - /mnt/build/workspace/root-pullrequests-build/root/core/clingutils/src/TClingUtils.cxx:3377:82: error: ‘interpreter’ was not declared in this scope . ### Warnings:; - /mnt/build/workspace/root-pullrequests-build/root/core/meta/src/TClass.cxx:686:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:5203:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:4757:26: warning: ‘char* strncpy(char*, const char*, size_t)’ output may be truncated copying 10 bytes from a string of length 10 [-Wstringop-truncation] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:490:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing between 2147483648 and 2147483647 bytes at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 4294967295] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:761:21: warning: ‘%lu’ directive writing between 1 and 20 bytes into a region of size between 0 and 8191 [-Wformat-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/proof/proofd/src/XrdProofdProtocol.cxx:527:45: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘class XrdSecEntity’; use assignment or value-initialization instead [-Wclass-memaccess]",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2331#issuecomment-405843696:1138,access,accessing,1138,https://root.cern,https://github.com/root-project/root/pull/2331#issuecomment-405843696,2,['access'],['accessing']
Security,"Build failed on fedora28/native.; [See console output](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/33965/console).; ### Warnings:; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:5203:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:4757:26: warning: ‘char* strncpy(char*, const char*, size_t)’ output may be truncated copying 10 bytes from a string of length 10 [-Wstringop-truncation] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:490:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing between 2147483648 and 2147483647 bytes at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 4294967295] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:761:21: warning: ‘%lu’ directive writing between 1 and 20 bytes into a region of size between 0 and 8191 [-Wformat-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/proof/proofd/src/XrdProofdProtocol.cxx:527:45: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘class XrdSecEntity’; use assignment or value-initialization instead [-Wclass-memaccess] ; - /mnt/build/workspace/root-pullrequests-build/root/core/meta/src/TClass.cxx:686:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TSystem.cxx:1148:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing 1 byte at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 2147483649] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1770:96: warning: cast between incompatible function types fr",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2381#issuecomment-408677038:750,access,accessing,750,https://root.cern,https://github.com/root-project/root/pull/2381#issuecomment-408677038,2,['access'],['accessing']
Security,"Build failed on fedora28/native.; [See console output](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/34227/console).; ### Warnings:; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:5203:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:4757:26: warning: ‘char* strncpy(char*, const char*, size_t)’ output may be truncated copying 10 bytes from a string of length 10 [-Wstringop-truncation] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:490:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing between 2147483648 and 2147483647 bytes at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 4294967295] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:761:21: warning: ‘%lu’ directive writing between 1 and 20 bytes into a region of size between 0 and 8191 [-Wformat-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/proof/proofd/src/XrdProofdProtocol.cxx:527:45: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘class XrdSecEntity’; use assignment or value-initialization instead [-Wclass-memaccess] ; - /mnt/build/workspace/root-pullrequests-build/root/core/meta/src/TClass.cxx:686:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TSystem.cxx:1148:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing 1 byte at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 2147483649] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1770:96: warning: cast between incompatible function types fr",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2176#issuecomment-409167887:750,access,accessing,750,https://root.cern,https://github.com/root-project/root/pull/2176#issuecomment-409167887,2,['access'],['accessing']
Security,"Build failed on fedora28/native.; [See console output](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/34456/console).; ### Warnings:; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:5203:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:4757:26: warning: ‘char* strncpy(char*, const char*, size_t)’ output may be truncated copying 10 bytes from a string of length 10 [-Wstringop-truncation] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:490:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing between 2147483648 and 2147483647 bytes at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 4294967295] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:761:21: warning: ‘%lu’ directive writing between 1 and 20 bytes into a region of size between 0 and 8191 [-Wformat-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/proof/proofd/src/XrdProofdProtocol.cxx:527:45: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘class XrdSecEntity’; use assignment or value-initialization instead [-Wclass-memaccess] ; - /mnt/build/workspace/root-pullrequests-build/root/core/meta/src/TClass.cxx:686:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TSystem.cxx:1148:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing 1 byte at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 2147483649] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1770:96: warning: cast between incompatible function types fr",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2389#issuecomment-409277662:750,access,accessing,750,https://root.cern,https://github.com/root-project/root/pull/2389#issuecomment-409277662,2,['access'],['accessing']
Security,"Build failed on fedora28/native.; [See console output](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/34737/console).; ### Errors:; - ERROR in cling::CIFactory::createCI(): ; - Error: Error loading the default header files. . ### Warnings:; - /mnt/build/workspace/root-pullrequests-build/root/core/meta/src/TClass.cxx:686:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:5203:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:4757:26: warning: ‘char* strncpy(char*, const char*, size_t)’ output may be truncated copying 10 bytes from a string of length 10 [-Wstringop-truncation] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:490:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing between 2147483648 and 2147483647 bytes at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 4294967295] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:761:21: warning: ‘%lu’ directive writing between 1 and 20 bytes into a region of size between 0 and 8191 [-Wformat-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/proof/proofd/src/XrdProofdProtocol.cxx:527:45: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘class XrdSecEntity’; use assignment or value-initialization instead [-Wclass-memaccess]",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2406#issuecomment-409554854:1081,access,accessing,1081,https://root.cern,https://github.com/root-project/root/pull/2406#issuecomment-409554854,2,['access'],['accessing']
Security,"Build failed on fedora28/native.; [See console output](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/35709/console).; ### Warnings:; - /mnt/build/workspace/root-pullrequests-build/root/core/meta/src/TClass.cxx:686:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:490:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing between 2147483648 and 2147483647 bytes at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 4294967295] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:761:21: warning: ‘%lu’ directive writing between 1 and 20 bytes into a region of size between 0 and 8191 [-Wformat-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:5203:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:4757:26: warning: ‘char* strncpy(char*, const char*, size_t)’ output may be truncated copying 10 bytes from a string of length 10 [-Wstringop-truncation] ; - /mnt/build/workspace/root-pullrequests-build/root/proof/proofd/src/XrdProofdProtocol.cxx:527:45: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘class XrdSecEntity’; use assignment or value-initialization instead [-Wclass-memaccess] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TSystem.cxx:1148:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing 1 byte at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 2147483649] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1770:96: warning: cast between incompatible function types fr",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2423#issuecomment-410609447:506,access,accessing,506,https://root.cern,https://github.com/root-project/root/pull/2423#issuecomment-410609447,2,['access'],['accessing']
Security,"Build failed on fedora28/native.; [See console output](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36204/console).; ### Warnings:; - /mnt/build/workspace/root-pullrequests-build/root/core/meta/src/TClass.cxx:686:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:490:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing between 2147483648 and 2147483647 bytes at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 4294967295] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:761:21: warning: ‘%lu’ directive writing between 1 and 20 bytes into a region of size between 0 and 8191 [-Wformat-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:5203:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:4757:26: warning: ‘char* strncpy(char*, const char*, size_t)’ output may be truncated copying 10 bytes from a string of length 10 [-Wstringop-truncation] ; - /mnt/build/workspace/root-pullrequests-build/root/proof/proofd/src/XrdProofdProtocol.cxx:527:45: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘class XrdSecEntity’; use assignment or value-initialization instead [-Wclass-memaccess] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TSystem.cxx:1148:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing 1 byte at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 2147483649] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1770:96: warning: cast between incompatible function types fr",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2453#issuecomment-411201963:506,access,accessing,506,https://root.cern,https://github.com/root-project/root/pull/2453#issuecomment-411201963,2,['access'],['accessing']
Security,"Build failed on fedora28/native.; [See console output](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36231/console).; ### Warnings:; - /mnt/build/workspace/root-pullrequests-build/root/core/meta/src/TClass.cxx:686:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:490:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing between 2147483648 and 2147483647 bytes at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 4294967295] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:761:21: warning: ‘%lu’ directive writing between 1 and 20 bytes into a region of size between 0 and 8191 [-Wformat-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:5203:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:4757:26: warning: ‘char* strncpy(char*, const char*, size_t)’ output may be truncated copying 10 bytes from a string of length 10 [-Wstringop-truncation] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TSystem.cxx:1148:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing 1 byte at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 2147483649] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/proof/proofd/src/XrdProofdProtocol.cxx:527:45: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘class XrdSecEntity’; use assignment or value-initialization instead [-Wclass-memaccess] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1770:96: warning: cast between incompatible function types fr",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2453#issuecomment-411309441:506,access,accessing,506,https://root.cern,https://github.com/root-project/root/pull/2453#issuecomment-411309441,2,['access'],['accessing']
Security,"Build failed on fedora28/native.; [See console output](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36679/console).; ### Warnings:; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:5203:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:4757:26: warning: ‘char* strncpy(char*, const char*, size_t)’ output may be truncated copying 10 bytes from a string of length 10 [-Wstringop-truncation] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:490:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing between 2147483648 and 2147483647 bytes at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 4294967295] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:761:21: warning: ‘%lu’ directive writing between 1 and 20 bytes into a region of size between 0 and 8191 [-Wformat-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/proof/proofd/src/XrdProofdProtocol.cxx:527:45: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘class XrdSecEntity’; use assignment or value-initialization instead [-Wclass-memaccess] ; - /mnt/build/workspace/root-pullrequests-build/root/core/meta/src/TClass.cxx:686:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TSystem.cxx:1148:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing 1 byte at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 2147483649] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1770:96: warning: cast between incompatible function types fr",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2389#issuecomment-411746107:750,access,accessing,750,https://root.cern,https://github.com/root-project/root/pull/2389#issuecomment-411746107,2,['access'],['accessing']
Security,"Build failed on fedora28/native.; [See console output](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/37008/console).; ### Warnings:; - /mnt/build/workspace/root-pullrequests-build/root/core/meta/src/TClass.cxx:686:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:5203:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:4757:26: warning: ‘char* strncpy(char*, const char*, size_t)’ output may be truncated copying 10 bytes from a string of length 10 [-Wstringop-truncation] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:490:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing between 2147483648 and 2147483647 bytes at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 4294967295] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:761:21: warning: ‘%lu’ directive writing between 1 and 20 bytes into a region of size between 0 and 8191 [-Wformat-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/proof/proofd/src/XrdProofdProtocol.cxx:527:45: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘class XrdSecEntity’; use assignment or value-initialization instead [-Wclass-memaccess]",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2442#issuecomment-412504856:974,access,accessing,974,https://root.cern,https://github.com/root-project/root/pull/2442#issuecomment-412504856,2,['access'],['accessing']
Security,"Build failed on fedora28/native.; [See console output](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/37035/console).; ### Errors:; - ERROR in cling::CIFactory::createCI(): ; - Error: Error loading the default header files. . ### Warnings:; - /mnt/build/workspace/root-pullrequests-build/root/core/meta/src/TClass.cxx:686:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:5203:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:4757:26: warning: ‘char* strncpy(char*, const char*, size_t)’ output may be truncated copying 10 bytes from a string of length 10 [-Wstringop-truncation] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:490:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing between 2147483648 and 2147483647 bytes at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 4294967295] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:761:21: warning: ‘%lu’ directive writing between 1 and 20 bytes into a region of size between 0 and 8191 [-Wformat-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/proof/proofd/src/XrdProofdProtocol.cxx:527:45: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘class XrdSecEntity’; use assignment or value-initialization instead [-Wclass-memaccess]",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2406#issuecomment-412837784:1081,access,accessing,1081,https://root.cern,https://github.com/root-project/root/pull/2406#issuecomment-412837784,2,['access'],['accessing']
Security,"Build failed on fedora28/native.; [See console output](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/37062/console).; ### Errors:; - ERROR in cling::CIFactory::createCI(): ; - Error: Error loading the default header files. . ### Warnings:; - /mnt/build/workspace/root-pullrequests-build/root/core/meta/src/TClass.cxx:686:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:5203:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:4757:26: warning: ‘char* strncpy(char*, const char*, size_t)’ output may be truncated copying 10 bytes from a string of length 10 [-Wstringop-truncation] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:490:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing between 2147483648 and 2147483647 bytes at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 4294967295] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:761:21: warning: ‘%lu’ directive writing between 1 and 20 bytes into a region of size between 0 and 8191 [-Wformat-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/proof/proofd/src/XrdProofdProtocol.cxx:527:45: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘class XrdSecEntity’; use assignment or value-initialization instead [-Wclass-memaccess]",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2406#issuecomment-412940246:1081,access,accessing,1081,https://root.cern,https://github.com/root-project/root/pull/2406#issuecomment-412940246,2,['access'],['accessing']
Security,"Build failed on fedora28/native.; [See console output](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/37071/console).; ### Errors:; - ERROR in cling::CIFactory::createCI(): ; - Error: Error loading the default header files. . ### Warnings:; - /mnt/build/workspace/root-pullrequests-build/root/core/meta/src/TClass.cxx:686:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:5203:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:4757:26: warning: ‘char* strncpy(char*, const char*, size_t)’ output may be truncated copying 10 bytes from a string of length 10 [-Wstringop-truncation] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:490:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing between 2147483648 and 2147483647 bytes at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 4294967295] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:761:21: warning: ‘%lu’ directive writing between 1 and 20 bytes into a region of size between 0 and 8191 [-Wformat-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/proof/proofd/src/XrdProofdProtocol.cxx:527:45: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘class XrdSecEntity’; use assignment or value-initialization instead [-Wclass-memaccess]",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2406#issuecomment-412957016:1081,access,accessing,1081,https://root.cern,https://github.com/root-project/root/pull/2406#issuecomment-412957016,2,['access'],['accessing']
Security,"Build failed on fedora28/native.; [See console output](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/43493/console).; ### Warnings:; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:5203:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:4757:26: warning: ‘char* strncpy(char*, const char*, size_t)’ output may be truncated copying 10 bytes from a string of length 10 [-Wstringop-truncation] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:490:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing between 2147483648 and 2147483647 bytes at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 4294967295] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:761:21: warning: ‘%lu’ directive writing between 1 and 20 bytes into a region of size between 0 and 8191 [-Wformat-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/graf3d/ftgl/src/FTVectoriser.cxx:186:76: warning: cast between incompatible function types from ‘void (*)(GLenum, FTMesh*)’ {aka ‘void (*)(unsigned int, FTMesh*)’} to ‘GLUTesselatorFunction’ {aka ‘void (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/graf3d/ftgl/src/FTVectoriser.cxx:187:76: warning: cast between incompatible function types from ‘void (*)(void*, FTMesh*)’ to ‘GLUTesselatorFunction’ {aka ‘void (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/graf3d/ftgl/src/FTVectoriser.cxx:188:76: warning: cast between incompatible function types from ‘void (*)(FTGL_DOUBLE*, void**, GLfloat*, void**, FTMesh*)’ {aka ‘void (*)(double*, void**, float*, void**, FTMesh*)’} to ‘GLUTesselatorFunction’ {aka ‘void (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2768#issuecomment-427830089:750,access,accessing,750,https://root.cern,https://github.com/root-project/root/pull/2768#issuecomment-427830089,2,['access'],['accessing']
Security,"Build failed on fedora28/native.; [See console output](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/45678/console).; ### Warnings:; - /mnt/build/workspace/root-pullrequests-build/root/core/meta/src/TClass.cxx:686:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:490:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing between 2147483648 and 2147483647 bytes at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 4294967295] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:761:21: warning: ‘%lu’ directive writing between 1 and 20 bytes into a region of size between 0 and 8191 [-Wformat-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:5203:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:4757:26: warning: ‘char* strncpy(char*, const char*, size_t)’ output may be truncated copying 10 bytes from a string of length 10 [-Wstringop-truncation] ; - /mnt/build/workspace/root-pullrequests-build/root/graf3d/ftgl/src/FTVectoriser.cxx:186:76: warning: cast between incompatible function types from ‘void (*)(GLenum, FTMesh*)’ {aka ‘void (*)(unsigned int, FTMesh*)’} to ‘GLUTesselatorFunction’ {aka ‘void (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/graf3d/ftgl/src/FTVectoriser.cxx:187:76: warning: cast between incompatible function types from ‘void (*)(void*, FTMesh*)’ to ‘GLUTesselatorFunction’ {aka ‘void (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/graf3d/ftgl/src/FTVectoriser.cxx:188:76: warning: cast between incompatible function ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2861#issuecomment-433260714:506,access,accessing,506,https://root.cern,https://github.com/root-project/root/pull/2861#issuecomment-433260714,1,['access'],['accessing']
Security,"Build failed on fedora28/native.; [See console output](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/47279/console).; ### Warnings:; - /mnt/build/workspace/root-pullrequests-build/root/core/meta/src/TClass.cxx:686:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:490:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing between 2147483648 and 2147483647 bytes at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 4294967295] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:761:21: warning: ‘%lu’ directive writing between 1 and 20 bytes into a region of size between 0 and 8191 [-Wformat-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:5203:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:4757:26: warning: ‘char* strncpy(char*, const char*, size_t)’ output may be truncated copying 10 bytes from a string of length 10 [-Wstringop-truncation] ; - /mnt/build/workspace/root-pullrequests-build/root/graf3d/ftgl/src/FTVectoriser.cxx:186:76: warning: cast between incompatible function types from ‘void (*)(GLenum, FTMesh*)’ {aka ‘void (*)(unsigned int, FTMesh*)’} to ‘GLUTesselatorFunction’ {aka ‘void (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/graf3d/ftgl/src/FTVectoriser.cxx:187:76: warning: cast between incompatible function types from ‘void (*)(void*, FTMesh*)’ to ‘GLUTesselatorFunction’ {aka ‘void (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/graf3d/ftgl/src/FTVectoriser.cxx:188:76: warning: cast between incompatible function ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2929#issuecomment-436387385:506,access,accessing,506,https://root.cern,https://github.com/root-project/root/pull/2929#issuecomment-436387385,1,['access'],['accessing']
Security,"Build failed on fedora28/native.; [See console output](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/47634/console).; ### Warnings:; - /mnt/build/workspace/root-pullrequests-build/root/core/meta/src/TClass.cxx:686:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:490:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing between 2147483648 and 2147483647 bytes at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 4294967295] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:761:21: warning: ‘%lu’ directive writing between 1 and 20 bytes into a region of size between 0 and 8191 [-Wformat-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/graf3d/ftgl/src/FTVectoriser.cxx:186:76: warning: cast between incompatible function types from ‘void (*)(GLenum, FTMesh*)’ {aka ‘void (*)(unsigned int, FTMesh*)’} to ‘GLUTesselatorFunction’ {aka ‘void (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/graf3d/ftgl/src/FTVectoriser.cxx:187:76: warning: cast between incompatible function types from ‘void (*)(void*, FTMesh*)’ to ‘GLUTesselatorFunction’ {aka ‘void (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/graf3d/ftgl/src/FTVectoriser.cxx:188:76: warning: cast between incompatible function types from ‘void (*)(FTGL_DOUBLE*, void**, GLfloat*, void**, FTMesh*)’ {aka ‘void (*)(double*, void**, float*, void**, FTMesh*)’} to ‘GLUTesselatorFunction’ {aka ‘void (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/graf3d/ftgl/src/FTVectoriser.cxx:189:76: warning: cast between incompatible function types from ‘void (*)(FTMesh*)’ to ‘GLUTesselatorFunction’ {aka ‘void (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2943#issuecomment-437335723:506,access,accessing,506,https://root.cern,https://github.com/root-project/root/pull/2943#issuecomment-437335723,1,['access'],['accessing']
Security,Build failed on mac1012/native.; [See console output](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/8983/console).; ### Errors:; - /Volumes/MacintoshHD2/ec/build/workspace/root-pullrequests-build/build/tutorials/rootalias.C:70:4: error: unknown type name 'TPaveText' ; - /Volumes/MacintoshHD2/ec/build/workspace/root-pullrequests-build/build/tutorials/rootalias.C:70:26: error: use of undeclared identifier 'TPaveText' ; - /Volumes/MacintoshHD2/ec/build/workspace/root-pullrequests-build/build/tutorials/rootalias.C:70:36: error: expected expression ; - /Volumes/MacintoshHD2/ec/build/workspace/root-pullrequests-build/build/tutorials/rootalias.C:71:4: error: unknown type name 'TText' ; - /Volumes/MacintoshHD2/ec/build/workspace/root-pullrequests-build/build/tutorials/rootalias.C:73:9: error: member access into incomplete type 'TCanvas' ; - /Volumes/MacintoshHD2/ec/build/workspace/root-pullrequests-build/build/tutorials/rootalias.C:73:28: error: member access into incomplete type 'TCanvas' ; - /Volumes/MacintoshHD2/ec/build/workspace/root-pullrequests-build/build/tutorials/rootalias.C:77:4: error: unknown type name 'TPaveText' ; - /Volumes/MacintoshHD2/ec/build/workspace/root-pullrequests-build/build/tutorials/rootalias.C:77:27: error: use of undeclared identifier 'TPaveText' ; - /Volumes/MacintoshHD2/ec/build/workspace/root-pullrequests-build/build/tutorials/rootalias.C:77:37: error: expected expression ; - /Volumes/MacintoshHD2/ec/build/workspace/root-pullrequests-build/build/tutorials/rootalias.C:78:4: error: unknown type name 'TText' . And 110 more. ### Warnings:; - /cvmfs/sft.cern.ch/lcg/releases/R/3.2.5-c8cca/x86_64-mac1012-clang81-opt/lib/R/include/R.h:40:10: warning: non-portable path to file '&lt;RConfig.h&gt;'; specified path differs in case from file name on disk [-Wnonportable-include-path] ; - /cvmfs/sft.cern.ch/lcg/releases/R/3.2.5-c8cca/x86_64-mac1012-clang81-opt/lib/R/include/R_ext/RS.h:29:10: warning: non-portable path to file '&lt;RConfig.h&gt;',MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1188#issuecomment-336673754:815,access,access,815,https://root.cern,https://github.com/root-project/root/pull/1188#issuecomment-336673754,1,['access'],['access']
Security,Build failed on mac1012/native.; [See console output](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/9010/console).; ### Errors:; - /Volumes/HDD2/ec/build/workspace/root-pullrequests-build/build/tutorials/rootalias.C:70:4: error: unknown type name 'TPaveText' ; - /Volumes/HDD2/ec/build/workspace/root-pullrequests-build/build/tutorials/rootalias.C:70:26: error: use of undeclared identifier 'TPaveText' ; - /Volumes/HDD2/ec/build/workspace/root-pullrequests-build/build/tutorials/rootalias.C:70:36: error: expected expression ; - /Volumes/HDD2/ec/build/workspace/root-pullrequests-build/build/tutorials/rootalias.C:71:4: error: unknown type name 'TText' ; - /Volumes/HDD2/ec/build/workspace/root-pullrequests-build/build/tutorials/rootalias.C:73:9: error: member access into incomplete type 'TCanvas' ; - /Volumes/HDD2/ec/build/workspace/root-pullrequests-build/build/tutorials/rootalias.C:73:28: error: member access into incomplete type 'TCanvas' ; - /Volumes/HDD2/ec/build/workspace/root-pullrequests-build/build/tutorials/rootalias.C:77:4: error: unknown type name 'TPaveText' ; - /Volumes/HDD2/ec/build/workspace/root-pullrequests-build/build/tutorials/rootalias.C:77:27: error: use of undeclared identifier 'TPaveText' ; - /Volumes/HDD2/ec/build/workspace/root-pullrequests-build/build/tutorials/rootalias.C:77:37: error: expected expression ; - /Volumes/HDD2/ec/build/workspace/root-pullrequests-build/build/tutorials/rootalias.C:78:4: error: unknown type name 'TText' . And 110 more. ### Warnings:; - /cvmfs/sft.cern.ch/lcg/releases/R/3.2.5-c8cca/x86_64-mac1012-clang81-opt/lib/R/include/R.h:40:10: warning: non-portable path to file '&lt;RConfig.h&gt;'; specified path differs in case from file name on disk [-Wnonportable-include-path] ; - /cvmfs/sft.cern.ch/lcg/releases/R/3.2.5-c8cca/x86_64-mac1012-clang81-opt/lib/R/include/R_ext/RS.h:29:10: warning: non-portable path to file '&lt;RConfig.h&gt;'; specified path differs in case from file name on disk [-Wnonportable-include-p,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1188#issuecomment-336695809:775,access,access,775,https://root.cern,https://github.com/root-project/root/pull/1188#issuecomment-336695809,2,['access'],['access']
Security,Build failed on mac1013/native.; [See console output](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/40133/console).; ### Errors:; - /Volumes/MacintoshHD/build/jenkins/workspace/root-pullrequests-build/root/test/TFormulaParsingTests.h:912:15: error: incomplete type 'TFile' named in nested name specifier ; - /Volumes/MacintoshHD/build/jenkins/workspace/root-pullrequests-build/root/test/TFormulaParsingTests.h:915:22: error: incomplete type 'TFile' named in nested name specifier ; - /Volumes/MacintoshHD/build/jenkins/workspace/root-pullrequests-build/root/test/TFormulaParsingTests.h:923:11: error: member access into incomplete type 'TFile' ; - /Volumes/MacintoshHD/build/jenkins/workspace/root-pullrequests-build/root/test/TFormulaParsingTests.h:924:11: error: incomplete type 'TFile' named in nested name specifier ; - /Volumes/MacintoshHD/build/jenkins/workspace/root-pullrequests-build/root/test/TFormulaParsingTests.h:927:34: error: member access into incomplete type 'TFile' ; - /Volumes/MacintoshHD/build/jenkins/workspace/root-pullrequests-build/root/test/TFormulaParsingTests.h:927:36: error: expected ')' ; - /Volumes/MacintoshHD/build/jenkins/workspace/root-pullrequests-build/root/test/TFormulaParsingTests.h:928:34: error: member access into incomplete type 'TFile' ; - /Volumes/MacintoshHD/build/jenkins/workspace/root-pullrequests-build/root/test/TFormulaParsingTests.h:928:36: error: expected ')',MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2617#issuecomment-421323892:620,access,access,620,https://root.cern,https://github.com/root-project/root/pull/2617#issuecomment-421323892,3,['access'],['access']
Security,Build failed on mac1013/native.; [See console output](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/40151/console).; ### Errors:; - /Volumes/HD2/build/jenkins/workspace/root-pullrequests-build/root/test/TFormulaParsingTests.h:912:15: error: incomplete type 'TFile' named in nested name specifier ; - /Volumes/HD2/build/jenkins/workspace/root-pullrequests-build/root/test/TFormulaParsingTests.h:915:22: error: incomplete type 'TFile' named in nested name specifier ; - /Volumes/HD2/build/jenkins/workspace/root-pullrequests-build/root/test/TFormulaParsingTests.h:923:11: error: member access into incomplete type 'TFile' ; - /Volumes/HD2/build/jenkins/workspace/root-pullrequests-build/root/test/TFormulaParsingTests.h:924:11: error: incomplete type 'TFile' named in nested name specifier ; - /Volumes/HD2/build/jenkins/workspace/root-pullrequests-build/root/test/TFormulaParsingTests.h:927:34: error: member access into incomplete type 'TFile' ; - /Volumes/HD2/build/jenkins/workspace/root-pullrequests-build/root/test/TFormulaParsingTests.h:927:36: error: expected ')' ; - /Volumes/HD2/build/jenkins/workspace/root-pullrequests-build/root/test/TFormulaParsingTests.h:928:34: error: member access into incomplete type 'TFile' ; - /Volumes/HD2/build/jenkins/workspace/root-pullrequests-build/root/test/TFormulaParsingTests.h:928:36: error: expected ')',MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2619#issuecomment-421330875:596,access,access,596,https://root.cern,https://github.com/root-project/root/pull/2619#issuecomment-421330875,3,['access'],['access']
Security,Build failed on mac1013/native.; [See console output](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/42283/console).; ### Errors:; - /Volumes/HD2/build/jenkins/workspace/root-pullrequests-build/root/core/rint/src/TRint.cxx:69:16: error: expected value in expression ; - /Volumes/HD2/build/jenkins/workspace/root-pullrequests-build/root/core/rint/src/TRint.cxx:74:7: error: unknown type name 'DIR' ; - /Volumes/HD2/build/jenkins/workspace/root-pullrequests-build/root/core/rint/src/TRint.cxx:74:18: error: use of undeclared identifier 'opendir' ; - /Volumes/HD2/build/jenkins/workspace/root-pullrequests-build/root/core/rint/src/TRint.cxx:78:10: error: unknown type name 'DIR' ; - /Volumes/HD2/build/jenkins/workspace/root-pullrequests-build/root/core/rint/src/TRint.cxx:83:17: error: member access into incomplete type 'struct dirent' . ### Warnings:; - ld: warning: text-based stub file /System/Library/Frameworks//OpenGL.framework/OpenGL.tbd and library file /System/Library/Frameworks//OpenGL.framework/OpenGL are out of sync. Falling back to library file for linking. ; - ld: warning: text-based stub file /System/Library/Frameworks//OpenGL.framework/OpenGL.tbd and library file /System/Library/Frameworks//OpenGL.framework/OpenGL are out of sync. Falling back to library file for linking. ; - ld: warning: text-based stub file /System/Library/Frameworks/OpenGL.framework/Versions/A/Libraries/libGLU.tbd and library file /System/Library/Frameworks/OpenGL.framework/Versions/A/Libraries/libGLU.dylib are out of sync. Falling back to library file for linking. ; - ld: warning: text-based stub file /System/Library/Frameworks/OpenGL.framework/Versions/A/Libraries/libGL.tbd and library file /System/Library/Frameworks/OpenGL.framework/Versions/A/Libraries/libGL.dylib are out of sync. Falling back to library file for linking. ; - ld: warning: text-based stub file /System/Library/Frameworks//Cocoa.framework/Cocoa.tbd and library file /System/Library/Frameworks//Cocoa.framework/Cocoa are,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2703#issuecomment-425258517:802,access,access,802,https://root.cern,https://github.com/root-project/root/pull/2703#issuecomment-425258517,1,['access'],['access']
Security,Build failed on mac1014/cxx17.; [See console output](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/51933/console).; ### Warnings:; - /build/jenkins/workspace/root-pullrequests-build/root/core/dictgen/src/rootcling_impl.cxx:3926:23: warning: format string is not a string literal (potentially insecure) [-Wformat-security] . ### Failing tests:; - [projectroot.roottest.root.io.json.roottest_root_io_json_make](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/51933/testReport/projectroot.roottest.root.io/json/roottest_root_io_json_make/); - [projectroot.roottest.root.io.xml.roottest_root_io_xml_make](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/51933/testReport/projectroot.roottest.root.io/xml/roottest_root_io_xml_make/); - [projectroot.roottest.root.meta.roottest_root_meta_execOptionList_auto](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/51933/testReport/projectroot.roottest.root/meta/roottest_root_meta_execOptionList_auto/); - [projectroot.roottest.root.html.roottest_root_html_runMakeIndex](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/51933/testReport/projectroot.roottest.root/html/roottest_root_html_runMakeIndex/),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3283#issuecomment-455574601:324,secur,security,324,https://root.cern,https://github.com/root-project/root/pull/3283#issuecomment-455574601,1,['secur'],['security']
Security,Build failed on mac1014/cxx17.; [See console output](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/51947/console).; ### Errors:; - clang: error: linker command failed with exit code 1 (use -v to see invocation) . ### Warnings:; - /build/jenkins/workspace/root-pullrequests-build/root/core/dictgen/src/rootcling_impl.cxx:3926:23: warning: format string is not a string literal (potentially insecure) [-Wformat-security] ; - /build/jenkins/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:2675:8: warning: 'ruserok' is deprecated [-Wdeprecated-declarations] ; - /build/jenkins/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:2675:8: warning: 'ruserok' is deprecated [-Wdeprecated-declarations],MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3259#issuecomment-455609127:421,secur,security,421,https://root.cern,https://github.com/root-project/root/pull/3259#issuecomment-455609127,1,['secur'],['security']
Security,Build failed on mac1014/cxx17.; [See console output](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/51953/console).; ### Warnings:; - /build/jenkins/workspace/root-pullrequests-build/root/core/dictgen/src/rootcling_impl.cxx:3926:23: warning: format string is not a string literal (potentially insecure) [-Wformat-security],MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3284#issuecomment-455620373:324,secur,security,324,https://root.cern,https://github.com/root-project/root/pull/3284#issuecomment-455620373,1,['secur'],['security']
Security,Build failed on mac1014/cxx17.; [See console output](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/51994/console).; ### Warnings:; - /build/jenkins/workspace/root-pullrequests-build/root/core/dictgen/src/rootcling_impl.cxx:3926:23: warning: format string is not a string literal (potentially insecure) [-Wformat-security] . ### Failing tests:; - [projectroot.roottest.root.multicore.roottest_root_multicore_tp_process_imt](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/51994/testReport/projectroot.roottest.root/multicore/roottest_root_multicore_tp_process_imt/),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3289#issuecomment-456146949:324,secur,security,324,https://root.cern,https://github.com/root-project/root/pull/3289#issuecomment-456146949,1,['secur'],['security']
Security,Build failed on mac1014/cxx17.; [See console output](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/54223/console).; ### Warnings:; - /build/jenkins/workspace/root-pullrequests-build/root/tree/treeplayer/src/TTreeReader.cxx:214:28: warning: format string is not a string literal (potentially insecure) [-Wformat-security] . ### Failing tests:; - [projectroot.test.test_TFormulaTests](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/54223/testReport/projectroot/test/test_TFormulaTests/),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3460#issuecomment-466628689:323,secur,security,323,https://root.cern,https://github.com/root-project/root/pull/3460#issuecomment-466628689,1,['secur'],['security']
Security,Build failed on mac1014/cxx17.; [See console output](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/54529/console).; ### Warnings:; - /build/jenkins/workspace/root-pullrequests-build/root/graf3d/eve7/src/REveElement.cxx:1291:45: warning: format string is not a string literal (potentially insecure) [-Wformat-security] ; - /build/jenkins/workspace/root-pullrequests-build/root/graf3d/eve7/src/REveManager.cxx:731:54: warning: format string is not a string literal (potentially insecure) [-Wformat-security] . ### Failing tests:; - [projectroot.test.test_TFormulaTests](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/54529/testReport/projectroot/test/test_TFormulaTests/),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3480#issuecomment-468239802:320,secur,security,320,https://root.cern,https://github.com/root-project/root/pull/3480#issuecomment-468239802,2,['secur'],['security']
Security,Build failed on mac1014/cxx17.; [See console output](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/57795/console).; ### Errors:; - Error in &lt;TCling::RegisterModule&gt;: cannot find dictionary module libMathCore_rdict.pcm ; - Error in &lt;TCling::RegisterModule&gt;: cannot find dictionary module libNet_rdict.pcm ; - Error in &lt;TCling::RegisterModule&gt;: cannot find dictionary module libTree_rdict.pcm ; - Error in &lt;TCling::RegisterModule&gt;: cannot find dictionary module libMatrix_rdict.pcm ; - Error in &lt;TCling::RegisterModule&gt;: cannot find dictionary module libHist_rdict.pcm ; - Error in &lt;TCling::RegisterModule&gt;: cannot find dictionary module libGraf_rdict.pcm ; - Error in &lt;TCling::RegisterModule&gt;: cannot find dictionary module libGpad_rdict.pcm ; - Error in &lt;TCling::RegisterModule&gt;: cannot find dictionary module libHistPainter_rdict.pcm . ### Warnings:; - /build/jenkins/workspace/root-pullrequests-build/root/tree/tree/src/TTreeSQL.cxx:464:29: warning: format string is not a string literal (potentially insecure) [-Wformat-security],MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3715#issuecomment-485003730:1083,secur,security,1083,https://root.cern,https://github.com/root-project/root/pull/3715#issuecomment-485003730,1,['secur'],['security']
Security,Build failed on mac1014/cxx17.; [See console output](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/57801/console).; ### Warnings:; - /build/jenkins/workspace/root-pullrequests-build/root/tree/tree/src/TTreeSQL.cxx:464:29: warning: format string is not a string literal (potentially insecure) [-Wformat-security] . ### Failing tests:; - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootrm1CheckOutput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/57801/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootrm1CheckOutput/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootrm2CheckOutput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/57801/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootrm2CheckOutput/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootrm3CheckOutput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/57801/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootrm3CheckOutput/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootmkdir1CheckOutput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/57801/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootmkdir1CheckOutput/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootmkdir2CheckOutput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/57801/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootmkdir2CheckOutput/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootmkdir3CheckOutput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/57801/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootmkdir3CheckOutput/); - [pr,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3715#issuecomment-485006929:314,secur,security,314,https://root.cern,https://github.com/root-project/root/pull/3715#issuecomment-485006929,1,['secur'],['security']
Security,Build failed on mac1014/cxx17.; [See console output](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/75633/console).; ### Warnings:; - /build/jenkins/workspace/root-pullrequests-build/root/core/base/src/TMacro.cxx:340:27: warning: format string is not a string literal (potentially insecure) [-Wformat-security] ; - /build/jenkins/workspace/root-pullrequests-build/root/core/base/src/TMacro.cxx:344:27: warning: format string is not a string literal (potentially insecure) [-Wformat-security],MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4830#issuecomment-577135002:312,secur,security,312,https://root.cern,https://github.com/root-project/root/pull/4830#issuecomment-577135002,2,['secur'],['security']
Security,Build failed on mac1014/cxx17.; [See console output](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/80001/console).; ### Errors:; - FAILED: hist/hist/test/CMakeFiles/testTF1.dir/test_tf1.cxx.o ; - /build/jenkins/workspace/root-pullrequests-build/root/hist/hist/test/test_tf1.cxx:35:39: error: member access into incomplete type 'TObjArray' ; - /build/jenkins/workspace/root-pullrequests-build/root/hist/hist/test/test_tf1.cxx:36:34: error: member access into incomplete type 'TObjArray' ; - /build/jenkins/workspace/root-pullrequests-build/root/hist/hist/test/test_tf1.cxx:37:54: error: member access into incomplete type 'TObjArray' ; - /build/jenkins/workspace/root-pullrequests-build/root/hist/hist/test/test_tf1.cxx:46:32: error: allocation of incomplete type 'TObjArray' ; - /build/jenkins/workspace/root-pullrequests-build/root/hist/hist/test/test_tf1.cxx:47:14: error: member access into incomplete type 'TObjArray' ; - /build/jenkins/workspace/root-pullrequests-build/root/hist/hist/test/test_tf1.cxx:48:14: error: member access into incomplete type 'TObjArray' ; - /build/jenkins/workspace/root-pullrequests-build/root/hist/hist/test/test_tf1.cxx:49:14: error: member access into incomplete type 'TObjArray' ; - /build/jenkins/workspace/root-pullrequests-build/root/hist/hist/test/test_tf1.cxx:50:14: error: member access into incomplete type 'TObjArray' ; - /build/jenkins/workspace/root-pullrequests-build/root/hist/hist/test/test_tf1.cxx:51:14: error: member access into incomplete type 'TObjArray' . And 1 more. ### Warnings:; - /build/jenkins/workspace/root-pullrequests-build/root/hist/hist/test/test_tf1.cxx:57:4: warning: deleting pointer to incomplete type 'TObjArray' may cause undefined behavior [-Wdelete-incomplete],MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5071#issuecomment-592489306:311,access,access,311,https://root.cern,https://github.com/root-project/root/pull/5071#issuecomment-592489306,8,['access'],['access']
Security,Build failed on mac1014/python3.; Running on macitois19.cern.ch:/ec/build/workspace/root-pullrequests-build; [See cdash](http://cdash.cern.ch/index.php?project=ROOT&filtercount=1&field1=buildname/string&compare1=65&value1=PR-6154-mac1014-python3&date=2020-08-11).; [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/92127/console).; ### Errors:; - [2020-08-11T04:50:52.179Z] /ec/build/workspace/root-pullrequests-build/root/interpreter/cling/lib/Interpreter/DynamicLibraryManagerSymbol.cpp:550:7: error: unknown type name 'export_directory_iterator' ; - [2020-08-11T04:50:52.179Z] /ec/build/workspace/root-pullrequests-build/root/interpreter/cling/lib/Interpreter/DynamicLibraryManagerSymbol.cpp:550:44: error: member access into incomplete type 'llvm::object::COFFObjectFile' ; - [2020-08-11T04:50:52.179Z] /ec/build/workspace/root-pullrequests-build/root/interpreter/cling/lib/Interpreter/DynamicLibraryManagerSymbol.cpp:551:7: error: unknown type name 'export_directory_iterator' ; - [2020-08-11T04:50:52.179Z] /ec/build/workspace/root-pullrequests-build/root/interpreter/cling/lib/Interpreter/DynamicLibraryManagerSymbol.cpp:551:44: error: member access into incomplete type 'llvm::object::COFFObjectFile' ; - [2020-08-11T04:50:52.179Z] /ec/build/workspace/root-pullrequests-build/root/interpreter/llvm/src/include/llvm/Support/Casting.h:59:12: error: incomplete type 'llvm::object::COFFObjectFile' named in nested name specifier,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6154#issuecomment-671723155:761,access,access,761,https://root.cern,https://github.com/root-project/root/pull/6154#issuecomment-671723155,2,['access'],['access']
Security,"Build failed on mac1014/python3.; Running on macitois21.dyndns.cern.ch:/Users/sftnight/build/workspace/root-pullrequests-build; [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/117257/console).; ### Errors:; - [2021-05-07T17:08:49.070Z] FAILED: core/metacling/test/CMakeFiles/TClingTest.dir/TClingMethodInfoTests.cxx.o ; - [2021-05-07T17:08:49.330Z] /Volumes/HD2/build/workspace/root-pullrequests-build/root/core/metacling/test/TClingMethodInfoTests.cxx:621:53: error: no template named 'unordered_map' in namespace 'std'; did you mean 'unordered_set'? ; - [2021-05-07T17:08:49.330Z] /Library/Developer/CommandLineTools/usr/bin/../include/c++/v1/__hash_table:868:5: error: static_assert failed due to requirement 'integral_constant&lt;bool, false&gt;::value' ""the specified hash does not meet the Hash requirements"" ; - [2021-05-07T17:08:49.330Z] /Volumes/HD2/build/workspace/root-pullrequests-build/root/core/metacling/test/TClingMethodInfoTests.cxx:633:31: error: no member named 'second' in 'std::__1::basic_string&lt;char&gt;' ; - [2021-05-07T17:08:49.331Z] /Library/Developer/CommandLineTools/usr/bin/../include/c++/v1/__hash_table:2456:21: error: type 'std::__1::__hash_table&lt;std::__1::basic_string&lt;char&gt;, std::__1::basic_string&lt;char&gt;, std::__1::equal_to&lt;std::__1::basic_string&lt;char&gt; &gt;, std::__1::allocator&lt;std::__1::basic_string&lt;char&gt; &gt; &gt;::hasher' (aka 'std::__1::basic_string&lt;char&gt;') does not provide a call operator ; - [2021-05-07T17:08:49.331Z] /Library/Developer/CommandLineTools/usr/bin/../include/c++/v1/__hash_table:2104:21: error: type 'std::__1::__hash_table&lt;std::__1::basic_string&lt;char&gt;, std::__1::basic_string&lt;char&gt;, std::__1::equal_to&lt;std::__1::basic_string&lt;char&gt; &gt;, std::__1::allocator&lt;std::__1::basic_string&lt;char&gt; &gt; &gt;::hasher' (aka 'std::__1::basic_string&lt;char&gt;') does not provide a call operator",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8124#issuecomment-834628666:819,hash,hash,819,https://root.cern,https://github.com/root-project/root/pull/8124#issuecomment-834628666,4,"['Hash', 'hash']","['Hash', 'hash', 'hasher']"
Security,"Build failed on mac1014/python3.; Running on macitois21.dyndns.cern.ch:/Users/sftnight/build/workspace/root-pullrequests-build; [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/118315/console).; ### Warnings:; - [2021-05-21T13:10:36.449Z] ld: warning: direct access in function 'llvm::cl::AddLiteralOption(llvm::cl::Option&, llvm::StringRef)' from file 'interpreter/llvm/src/lib/libLLVMSupport.a(CommandLine.cpp.o)' to global weak symbol 'llvm::object_deleter&lt;llvm::cl::SubCommand&gt;::call(void*)' from file 'core/dictgen/CMakeFiles/Dictgen.dir/src/rootcling_impl.cxx.o' means the weak symbol cannot be overridden at runtime. This was likely caused by different translation units being compiled with different visibility settings. ; - [2021-05-21T13:10:36.449Z] ld: warning: direct access in function 'llvm::cl::AddLiteralOption(llvm::cl::Option&, llvm::StringRef)' from file 'interpreter/llvm/src/lib/libLLVMSupport.a(CommandLine.cpp.o)' to global weak symbol 'llvm::object_creator&lt;llvm::cl::SubCommand&gt;::call()' from file 'core/dictgen/CMakeFiles/Dictgen.dir/src/rootcling_impl.cxx.o' means the weak symbol cannot be overridden at runtime. This was likely caused by different translation units being compiled with different visibility settings. ; - [2021-05-21T13:10:36.449Z] ld: warning: direct access in function '(anonymous namespace)::CommandLineParser::addOption(llvm::cl::Option*, bool)' from file 'interpreter/llvm/src/lib/libLLVMSupport.a(CommandLine.cpp.o)' to global weak symbol 'llvm::object_deleter&lt;llvm::cl::SubCommand&gt;::call(void*)' from file 'core/dictgen/CMakeFiles/Dictgen.dir/src/rootcling_impl.cxx.o' means the weak symbol cannot be overridden at runtime. This was likely caused by different translation units being compiled with different visibility settings. ; - [2021-05-21T13:10:36.449Z] ld: warning: direct access in function '(anonymous namespace)::CommandLineParser::addOption(llvm::cl::Option*, bool)' from file",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8204#issuecomment-845970841:304,access,access,304,https://root.cern,https://github.com/root-project/root/pull/8204#issuecomment-845970841,2,['access'],['access']
Security,Build failed on mac1014/python3.; Running on macphsft17.dyndns.cern.ch:/build/jenkins/workspace/root-pullrequests-build; [See cdash](http://cdash.cern.ch/index.php?project=ROOT&filtercount=1&field1=buildname/string&compare1=65&value1=PR-6217-mac1014-python3&date=2020-08-19).; [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/93170/console).; ### Errors:; - [2020-08-19T08:25:10.674Z] FAILED: test/CMakeFiles/stressHistogram.dir/stressHistogram.cxx.o ; - [2020-08-19T08:25:10.932Z] /build/jenkins/workspace/root-pullrequests-build/root/test/stressHistogram.cxx:4912:50: error: member access into incomplete type 'THashList' ; - [2020-08-19T08:25:10.932Z] /build/jenkins/workspace/root-pullrequests-build/root/test/stressHistogram.cxx:4919:50: error: member access into incomplete type 'THashList' ; - [2020-08-19T08:25:10.932Z] /build/jenkins/workspace/root-pullrequests-build/root/test/stressHistogram.cxx:4927:50: error: member access into incomplete type 'THashList',MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6217#issuecomment-675934320:629,access,access,629,https://root.cern,https://github.com/root-project/root/pull/6217#issuecomment-675934320,3,['access'],['access']
Security,Build failed on mac1015/cxx17.; Running on macphsft18.dyndns.cern.ch:/Users/sftnight/build/jenkins/workspace/root-pullrequests-build; [See cdash](http://cdash.cern.ch/index.php?project=ROOT&filtercount=1&field1=buildname/string&compare1=65&value1=PR-5599-mac1015-cxx17&date=2020-05-12).; [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/81713/console).; ### Errors:; - [2020-05-12T09:29:44.609Z] FAILED: roofit/roofitcore/test/CMakeFiles/testRooDataSet.dir/testRooDataSet.cxx.o ; - [2020-05-12T09:29:45.538Z] /Users/sftnight/build/jenkins/workspace/root-pullrequests-build/root/roofit/roofitcore/test/testRooDataSet.cxx:123:86: error: member access into incomplete type 'RooDataHist' ; - [2020-05-12T09:29:45.538Z] /Users/sftnight/build/jenkins/workspace/root-pullrequests-build/root/roofit/roofitcore/test/testRooDataSet.cxx:123:88: error: expected ')' ; - [2020-05-12T09:29:45.538Z] /Users/sftnight/build/jenkins/workspace/root-pullrequests-build/root/roofit/roofitcore/test/testRooDataSet.cxx:125:42: error: member access into incomplete type 'RooDataHist' ; - [2020-05-12T09:29:45.538Z] /Users/sftnight/build/jenkins/workspace/root-pullrequests-build/root/roofit/roofitcore/test/testRooDataSet.cxx:127:36: error: member access into incomplete type 'RooDataHist' ; - [2020-05-12T09:29:45.538Z] /Library/Developer/CommandLineTools/usr/bin/../include/c++/v1/memory:2335:19: error: invalid application of 'sizeof' to an incomplete type 'RooDataHist',MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5599#issuecomment-627225625:687,access,access,687,https://root.cern,https://github.com/root-project/root/pull/5599#issuecomment-627225625,3,['access'],['access']
Security,Build failed on mac1015/cxx17.; Running on macphsft18.dyndns.cern.ch:/Users/sftnight/build/jenkins/workspace/root-pullrequests-build; [See cdash](http://cdash.cern.ch/index.php?project=ROOT&filtercount=1&field1=buildname/string&compare1=65&value1=PR-5922-mac1015-cxx17&date=2020-06-26).; [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/88118/console).; ### Warnings:; - [2020-06-26T13:20:14.880Z] /Users/sftnight/build/jenkins/workspace/root-pullrequests-build/root/core/base/test/TErrorTests.cxx:51:21: warning: format string is not a string literal (potentially insecure) [-Wformat-security] . ### Failing tests:; - [projectroot.roottest.root.io.withoutDictionaries.roottest_root_io_withoutDictionaries_IOWithoutDictionaries](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/88118/testReport/projectroot.roottest.root.io/withoutDictionaries/roottest_root_io_withoutDictionaries_IOWithoutDictionaries/),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5922#issuecomment-650187671:630,secur,security,630,https://root.cern,https://github.com/root-project/root/pull/5922#issuecomment-650187671,1,['secur'],['security']
Security,Build failed on mac1015/cxx17.; Running on macphsft18.dyndns.cern.ch:/Users/sftnight/build/jenkins/workspace/root-pullrequests-build; [See cdash](http://cdash.cern.ch/index.php?project=ROOT&filtercount=1&field1=buildname/string&compare1=65&value1=PR-6154-mac1015-cxx17&date=2020-08-11).; [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/92128/console).; ### Errors:; - [2020-08-11T04:08:39.493Z] FAILED: interpreter/llvm/src/tools/cling/lib/Interpreter/CMakeFiles/obj.clingInterpreter.dir/DynamicLibraryManagerSymbol.cpp.o ; - [2020-08-11T04:08:39.752Z] /Users/sftnight/build/jenkins/workspace/root-pullrequests-build/root/interpreter/cling/lib/Interpreter/DynamicLibraryManagerSymbol.cpp:550:7: error: unknown type name 'export_directory_iterator' ; - [2020-08-11T04:08:39.752Z] /Users/sftnight/build/jenkins/workspace/root-pullrequests-build/root/interpreter/cling/lib/Interpreter/DynamicLibraryManagerSymbol.cpp:550:44: error: member access into incomplete type 'llvm::object::COFFObjectFile' ; - [2020-08-11T04:08:39.752Z] /Users/sftnight/build/jenkins/workspace/root-pullrequests-build/root/interpreter/cling/lib/Interpreter/DynamicLibraryManagerSymbol.cpp:551:7: error: unknown type name 'export_directory_iterator' ; - [2020-08-11T04:08:39.752Z] /Users/sftnight/build/jenkins/workspace/root-pullrequests-build/root/interpreter/cling/lib/Interpreter/DynamicLibraryManagerSymbol.cpp:551:44: error: member access into incomplete type 'llvm::object::COFFObjectFile' ; - [2020-08-11T04:08:39.752Z] /Users/sftnight/build/jenkins/workspace/root-pullrequests-build/root/interpreter/llvm/src/include/llvm/Support/Casting.h:59:12: error: incomplete type 'llvm::object::COFFObjectFile' named in nested name specifier,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6154#issuecomment-671712992:982,access,access,982,https://root.cern,https://github.com/root-project/root/pull/6154#issuecomment-671712992,2,['access'],['access']
Security,Build failed on mac1015/cxx17.; Running on macphsft18.dyndns.cern.ch:/Users/sftnight/build/jenkins/workspace/root-pullrequests-build; [See cdash](http://cdash.cern.ch/index.php?project=ROOT&filtercount=1&field1=buildname/string&compare1=65&value1=PR-6217-mac1015-cxx17&date=2020-08-19).; [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/93171/console).; ### Errors:; - [2020-08-19T08:46:31.433Z] FAILED: test/CMakeFiles/stressHistogram.dir/stressHistogram.cxx.o ; - [2020-08-19T08:46:31.693Z] /Users/sftnight/build/jenkins/workspace/root-pullrequests-build/root/test/stressHistogram.cxx:4912:50: error: member access into incomplete type 'THashList' ; - [2020-08-19T08:46:31.693Z] /Users/sftnight/build/jenkins/workspace/root-pullrequests-build/root/test/stressHistogram.cxx:4919:50: error: member access into incomplete type 'THashList' ; - [2020-08-19T08:46:31.693Z] /Users/sftnight/build/jenkins/workspace/root-pullrequests-build/root/test/stressHistogram.cxx:4927:50: error: member access into incomplete type 'THashList',MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6217#issuecomment-675964855:655,access,access,655,https://root.cern,https://github.com/root-project/root/pull/6217#issuecomment-675964855,3,['access'],['access']
Security,"Build failed on mac1015/cxx17.; [See cdash ](http://cdash.cern.ch/index.php?project=ROOT&filtercount=1&field1=buildname/string&compare1=65&value1=PR-5384-mac1015-cxx17&date=2020-04-17).; [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/76986/console).; ### Errors:; - [2020-04-17T16:40:55.155Z] FAILED: core/meta/CMakeFiles/Meta.dir/src/TProtoClass.cxx.o ; - [2020-04-17T16:40:55.155Z] /Users/sftnight/build/jenkins/workspace/root-pullrequests-build/root/core/meta/src/TProtoClass.cxx:66:12: error: no template named 'unordered_map' in namespace 'std'; did you mean 'unordered_set'? ; - [2020-04-17T16:40:55.155Z] /Library/Developer/CommandLineTools/usr/bin/../include/c++/v1/__hash_table:868:5: error: static_assert failed due to requirement 'integral_constant&lt;bool, false&gt;::value' ""the specified hash does not meet the Hash requirements"" ; - [2020-04-17T16:40:55.156Z] /Users/sftnight/build/jenkins/workspace/root-pullrequests-build/root/core/meta/src/TProtoClass.cxx:85:30: error: no member named 'second' in 'std::__1::basic_string&lt;char&gt;' ; - [2020-04-17T16:40:55.156Z] /Library/Developer/CommandLineTools/usr/bin/../include/c++/v1/__hash_table:2104:21: error: called object type 'std::__1::__hash_table&lt;std::__1::basic_string&lt;char&gt;, int, std::__1::equal_to&lt;std::__1::basic_string&lt;char&gt; &gt;, std::__1::allocator&lt;std::__1::basic_string&lt;char&gt; &gt; &gt;::hasher' (aka 'int') is not a function or function pointer",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5384#issuecomment-615348022:849,hash,hash,849,https://root.cern,https://github.com/root-project/root/pull/5384#issuecomment-615348022,3,"['Hash', 'hash']","['Hash', 'hash', 'hasher']"
Security,"Build failed on mac11.0/cxx17.; Running on macphsft20.dyndns.cern.ch:/Users/sftnight/build/workspace/root-pullrequests-build; [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/118316/console).; ### Warnings:; - [2021-05-21T12:52:16.778Z] ld: warning: direct access in function 'llvm::cl::AddLiteralOption(llvm::cl::Option&, llvm::StringRef)' from file 'interpreter/llvm/src/lib/libLLVMSupport.a(CommandLine.cpp.o)' to global weak symbol 'llvm::object_deleter&lt;llvm::cl::SubCommand&gt;::call(void*)' from file 'core/dictgen/CMakeFiles/Dictgen.dir/src/rootcling_impl.cxx.o' means the weak symbol cannot be overridden at runtime. This was likely caused by different translation units being compiled with different visibility settings. ; - [2021-05-21T12:52:16.778Z] ld: warning: direct access in function 'llvm::cl::AddLiteralOption(llvm::cl::Option&, llvm::StringRef)' from file 'interpreter/llvm/src/lib/libLLVMSupport.a(CommandLine.cpp.o)' to global weak symbol 'llvm::object_creator&lt;llvm::cl::SubCommand&gt;::call()' from file 'core/dictgen/CMakeFiles/Dictgen.dir/src/rootcling_impl.cxx.o' means the weak symbol cannot be overridden at runtime. This was likely caused by different translation units being compiled with different visibility settings. ; - [2021-05-21T12:52:16.778Z] ld: warning: direct access in function '(anonymous namespace)::CommandLineParser::addOption(llvm::cl::Option*, bool)' from file 'interpreter/llvm/src/lib/libLLVMSupport.a(CommandLine.cpp.o)' to global weak symbol 'llvm::object_deleter&lt;llvm::cl::SubCommand&gt;::call(void*)' from file 'core/dictgen/CMakeFiles/Dictgen.dir/src/rootcling_impl.cxx.o' means the weak symbol cannot be overridden at runtime. This was likely caused by different translation units being compiled with different visibility settings. ; - [2021-05-21T12:52:16.778Z] ld: warning: direct access in function '(anonymous namespace)::CommandLineParser::addOption(llvm::cl::Option*, bool)' from file '",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8204#issuecomment-845962649:302,access,access,302,https://root.cern,https://github.com/root-project/root/pull/8204#issuecomment-845962649,2,['access'],['access']
Security,"Build failed on mac11.0/cxx17.; Running on macphsft23.dyndns.cern.ch:/Users/sftnight/build/workspace/root-pullrequests-build; [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/117258/console).; ### Errors:; - [2021-05-07T16:48:56.149Z] FAILED: core/metacling/test/CMakeFiles/TClingTest.dir/TClingMethodInfoTests.cxx.o ; - [2021-05-07T16:48:56.412Z] /Users/sftnight/build/workspace/root-pullrequests-build/root/core/metacling/test/TClingMethodInfoTests.cxx:621:53: error: no template named 'unordered_map' in namespace 'std'; did you mean 'unordered_set'? ; - [2021-05-07T16:48:56.412Z] /Users/sftnight/build/workspace/root-pullrequests-build/root/core/metacling/test/TClingMethodInfoTests.cxx:633:31: error: no member named 'second' in 'std::__1::basic_string&lt;char&gt;' ; - [2021-05-07T16:48:56.412Z] /Library/Developer/CommandLineTools/SDKs/MacOSX11.3.sdk/usr/include/c++/v1/__hash_table:2458:21: error: type 'std::__1::__hash_table&lt;std::__1::basic_string&lt;char&gt;, std::__1::basic_string&lt;char&gt;, std::__1::equal_to&lt;std::__1::basic_string&lt;char&gt;&gt;, std::__1::allocator&lt;std::__1::basic_string&lt;char&gt;&gt;&gt;::hasher' (aka 'std::__1::basic_string&lt;char&gt;') does not provide a call operator ; - [2021-05-07T16:48:56.412Z] /Library/Developer/CommandLineTools/SDKs/MacOSX11.3.sdk/usr/include/c++/v1/__hash_table:2105:21: error: type 'std::__1::__hash_table&lt;std::__1::basic_string&lt;char&gt;, std::__1::basic_string&lt;char&gt;, std::__1::equal_to&lt;std::__1::basic_string&lt;char&gt;&gt;, std::__1::allocator&lt;std::__1::basic_string&lt;char&gt;&gt;&gt;::hasher' (aka 'std::__1::basic_string&lt;char&gt;') does not provide a call operator ; - [2021-05-07T16:48:56.412Z] /Library/Developer/CommandLineTools/SDKs/MacOSX11.3.sdk/usr/include/c++/v1/__hash_table:869:5: error: static_assert failed due to requirement 'integral_constant&lt;bool, false&gt;::value' ""the specified hash does not meet the Hash requirements""",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8124#issuecomment-834615958:1185,hash,hasher,1185,https://root.cern,https://github.com/root-project/root/pull/8124#issuecomment-834615958,4,"['Hash', 'hash']","['Hash', 'hash', 'hasher']"
Security,"Build failed on mac11arm/cxx17.; Running on macphsft24.dyndns.cern.ch:/Users/sftnight/build/workspace/root-pullrequests-build; [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/174041/console).; ### Warnings:; - [2023-05-05T13:09:43.221Z] ld: warning: direct access in function 'ROOT::GenerateInitInstanceLocal(TKDTree&lt;int, double&gt; const*)' from file 'math/mathcore/CMakeFiles/G__MathCore.dir/G__MathCore.cxx.o' to global weak symbol 'typeinfo for TKDTree&lt;int, double&gt;' from file 'math/mathcore/CMakeFiles/MathCore.dir/src/TKDTree.cxx.o' means the weak symbol cannot be overridden at runtime. This was likely caused by different translation units being compiled with different visibility settings. ; - [2023-05-05T13:09:43.221Z] ld: warning: direct access in function 'ROOT::GenerateInitInstanceLocal(TKDTree&lt;int, double&gt; const*)' from file 'math/mathcore/CMakeFiles/G__MathCore.dir/G__MathCore.cxx.o' to global weak symbol 'typeinfo for TKDTree&lt;int, double&gt;' from file 'math/mathcore/CMakeFiles/MathCore.dir/src/TKDTree.cxx.o' means the weak symbol cannot be overridden at runtime. This was likely caused by different translation units being compiled with different visibility settings. ; - [2023-05-05T13:09:43.221Z] ld: warning: direct access in function 'ROOT::GenerateInitInstanceLocal(TKDTree&lt;int, float&gt; const*)' from file 'math/mathcore/CMakeFiles/G__MathCore.dir/G__MathCore.cxx.o' to global weak symbol 'typeinfo for TKDTree&lt;int, float&gt;' from file 'math/mathcore/CMakeFiles/MathCore.dir/src/TKDTree.cxx.o' means the weak symbol cannot be overridden at runtime. This was likely caused by different translation units being compiled with different visibility settings. ; - [2023-05-05T13:09:43.221Z] ld: warning: direct access in function 'ROOT::GenerateInitInstanceLocal(TKDTree&lt;int, float&gt; const*)' from file 'math/mathcore/CMakeFiles/G__MathCore.dir/G__MathCore.cxx.o' to global weak symbol 'typeinfo for ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12238#issuecomment-1536272242:303,access,access,303,https://root.cern,https://github.com/root-project/root/pull/12238#issuecomment-1536272242,2,['access'],['access']
Security,"Build failed on mac11arm/cxx17.; Running on macphsft24.dyndns.cern.ch:/Users/sftnight/build/workspace/root-pullrequests-build; [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/175198/console).; ### Warnings:; - [2023-05-24T07:15:50.535Z] ld: warning: direct access in function 'ROOT::GenerateInitInstanceLocal(TKDTree&lt;int, double&gt; const*)' from file 'math/mathcore/CMakeFiles/G__MathCore.dir/G__MathCore.cxx.o' to global weak symbol 'typeinfo for TKDTree&lt;int, double&gt;' from file 'math/mathcore/CMakeFiles/MathCore.dir/src/TKDTree.cxx.o' means the weak symbol cannot be overridden at runtime. This was likely caused by different translation units being compiled with different visibility settings. ; - [2023-05-24T07:15:50.535Z] ld: warning: direct access in function 'ROOT::GenerateInitInstanceLocal(TKDTree&lt;int, double&gt; const*)' from file 'math/mathcore/CMakeFiles/G__MathCore.dir/G__MathCore.cxx.o' to global weak symbol 'typeinfo for TKDTree&lt;int, double&gt;' from file 'math/mathcore/CMakeFiles/MathCore.dir/src/TKDTree.cxx.o' means the weak symbol cannot be overridden at runtime. This was likely caused by different translation units being compiled with different visibility settings. ; - [2023-05-24T07:15:50.535Z] ld: warning: direct access in function 'ROOT::GenerateInitInstanceLocal(TKDTree&lt;int, float&gt; const*)' from file 'math/mathcore/CMakeFiles/G__MathCore.dir/G__MathCore.cxx.o' to global weak symbol 'typeinfo for TKDTree&lt;int, float&gt;' from file 'math/mathcore/CMakeFiles/MathCore.dir/src/TKDTree.cxx.o' means the weak symbol cannot be overridden at runtime. This was likely caused by different translation units being compiled with different visibility settings. ; - [2023-05-24T07:15:50.535Z] ld: warning: direct access in function 'ROOT::GenerateInitInstanceLocal(TKDTree&lt;int, float&gt; const*)' from file 'math/mathcore/CMakeFiles/G__MathCore.dir/G__MathCore.cxx.o' to global weak symbol 'typeinfo for ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12864#issuecomment-1560656733:303,access,access,303,https://root.cern,https://github.com/root-project/root/pull/12864#issuecomment-1560656733,2,['access'],['access']
Security,"Build failed on mac11arm/cxx17.; Running on macphsft24.dyndns.cern.ch:/Users/sftnight/build/workspace/root-pullrequests-build; [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/175204/console).; ### Warnings:; - [2023-05-24T08:37:44.958Z] ld: warning: direct access in function 'ROOT::GenerateInitInstanceLocal(TKDTree&lt;int, double&gt; const*)' from file 'math/mathcore/CMakeFiles/G__MathCore.dir/G__MathCore.cxx.o' to global weak symbol 'typeinfo for TKDTree&lt;int, double&gt;' from file 'math/mathcore/CMakeFiles/MathCore.dir/src/TKDTree.cxx.o' means the weak symbol cannot be overridden at runtime. This was likely caused by different translation units being compiled with different visibility settings. ; - [2023-05-24T08:37:44.958Z] ld: warning: direct access in function 'ROOT::GenerateInitInstanceLocal(TKDTree&lt;int, double&gt; const*)' from file 'math/mathcore/CMakeFiles/G__MathCore.dir/G__MathCore.cxx.o' to global weak symbol 'typeinfo for TKDTree&lt;int, double&gt;' from file 'math/mathcore/CMakeFiles/MathCore.dir/src/TKDTree.cxx.o' means the weak symbol cannot be overridden at runtime. This was likely caused by different translation units being compiled with different visibility settings. ; - [2023-05-24T08:37:44.958Z] ld: warning: direct access in function 'ROOT::GenerateInitInstanceLocal(TKDTree&lt;int, float&gt; const*)' from file 'math/mathcore/CMakeFiles/G__MathCore.dir/G__MathCore.cxx.o' to global weak symbol 'typeinfo for TKDTree&lt;int, float&gt;' from file 'math/mathcore/CMakeFiles/MathCore.dir/src/TKDTree.cxx.o' means the weak symbol cannot be overridden at runtime. This was likely caused by different translation units being compiled with different visibility settings. ; - [2023-05-24T08:37:44.958Z] ld: warning: direct access in function 'ROOT::GenerateInitInstanceLocal(TKDTree&lt;int, float&gt; const*)' from file 'math/mathcore/CMakeFiles/G__MathCore.dir/G__MathCore.cxx.o' to global weak symbol 'typeinfo for ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12864#issuecomment-1560787612:303,access,access,303,https://root.cern,https://github.com/root-project/root/pull/12864#issuecomment-1560787612,2,['access'],['access']
Security,"Build failed on mac11arm/cxx17.; Running on macphsft24.dyndns.cern.ch:/Users/sftnight/build/workspace/root-pullrequests-build; [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/177175/console).; ### Warnings:; - [2023-06-15T05:49:37.347Z] ld: warning: direct access in function 'ROOT::GenerateInitInstanceLocal(TKDTree&lt;int, double&gt; const*)' from file 'math/mathcore/CMakeFiles/G__MathCore.dir/G__MathCore.cxx.o' to global weak symbol 'typeinfo for TKDTree&lt;int, double&gt;' from file 'math/mathcore/CMakeFiles/MathCore.dir/src/TKDTree.cxx.o' means the weak symbol cannot be overridden at runtime. This was likely caused by different translation units being compiled with different visibility settings. ; - [2023-06-15T05:49:37.347Z] ld: warning: direct access in function 'ROOT::GenerateInitInstanceLocal(TKDTree&lt;int, double&gt; const*)' from file 'math/mathcore/CMakeFiles/G__MathCore.dir/G__MathCore.cxx.o' to global weak symbol 'typeinfo for TKDTree&lt;int, double&gt;' from file 'math/mathcore/CMakeFiles/MathCore.dir/src/TKDTree.cxx.o' means the weak symbol cannot be overridden at runtime. This was likely caused by different translation units being compiled with different visibility settings. ; - [2023-06-15T05:49:37.347Z] ld: warning: direct access in function 'ROOT::GenerateInitInstanceLocal(TKDTree&lt;int, float&gt; const*)' from file 'math/mathcore/CMakeFiles/G__MathCore.dir/G__MathCore.cxx.o' to global weak symbol 'typeinfo for TKDTree&lt;int, float&gt;' from file 'math/mathcore/CMakeFiles/MathCore.dir/src/TKDTree.cxx.o' means the weak symbol cannot be overridden at runtime. This was likely caused by different translation units being compiled with different visibility settings. ; - [2023-06-15T05:49:37.347Z] ld: warning: direct access in function 'ROOT::GenerateInitInstanceLocal(TKDTree&lt;int, float&gt; const*)' from file 'math/mathcore/CMakeFiles/G__MathCore.dir/G__MathCore.cxx.o' to global weak symbol 'typeinfo for ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12062#issuecomment-1592464351:303,access,access,303,https://root.cern,https://github.com/root-project/root/pull/12062#issuecomment-1592464351,2,['access'],['access']
Security,"Build failed on mac11arm/cxx17.; Running on macphsft24.dyndns.cern.ch:/Users/sftnight/build/workspace/root-pullrequests-build; [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/177181/console).; ### Warnings:; - [2023-06-15T07:06:09.529Z] ld: warning: direct access in function 'ROOT::GenerateInitInstanceLocal(TKDTree&lt;int, double&gt; const*)' from file 'math/mathcore/CMakeFiles/G__MathCore.dir/G__MathCore.cxx.o' to global weak symbol 'typeinfo for TKDTree&lt;int, double&gt;' from file 'math/mathcore/CMakeFiles/MathCore.dir/src/TKDTree.cxx.o' means the weak symbol cannot be overridden at runtime. This was likely caused by different translation units being compiled with different visibility settings. ; - [2023-06-15T07:06:09.529Z] ld: warning: direct access in function 'ROOT::GenerateInitInstanceLocal(TKDTree&lt;int, double&gt; const*)' from file 'math/mathcore/CMakeFiles/G__MathCore.dir/G__MathCore.cxx.o' to global weak symbol 'typeinfo for TKDTree&lt;int, double&gt;' from file 'math/mathcore/CMakeFiles/MathCore.dir/src/TKDTree.cxx.o' means the weak symbol cannot be overridden at runtime. This was likely caused by different translation units being compiled with different visibility settings. ; - [2023-06-15T07:06:09.529Z] ld: warning: direct access in function 'ROOT::GenerateInitInstanceLocal(TKDTree&lt;int, float&gt; const*)' from file 'math/mathcore/CMakeFiles/G__MathCore.dir/G__MathCore.cxx.o' to global weak symbol 'typeinfo for TKDTree&lt;int, float&gt;' from file 'math/mathcore/CMakeFiles/MathCore.dir/src/TKDTree.cxx.o' means the weak symbol cannot be overridden at runtime. This was likely caused by different translation units being compiled with different visibility settings. ; - [2023-06-15T07:06:09.529Z] ld: warning: direct access in function 'ROOT::GenerateInitInstanceLocal(TKDTree&lt;int, float&gt; const*)' from file 'math/mathcore/CMakeFiles/G__MathCore.dir/G__MathCore.cxx.o' to global weak symbol 'typeinfo for ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12238#issuecomment-1592568988:303,access,access,303,https://root.cern,https://github.com/root-project/root/pull/12238#issuecomment-1592568988,2,['access'],['access']
Security,"Build failed on mac11arm/cxx17.; Running on macphsft24.dyndns.cern.ch:/Users/sftnight/build/workspace/root-pullrequests-build; [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/177328/console).; ### Warnings:; - [2023-06-16T11:17:10.710Z] ld: warning: direct access in function 'ROOT::GenerateInitInstanceLocal(TKDTree&lt;int, double&gt; const*)' from file 'math/mathcore/CMakeFiles/G__MathCore.dir/G__MathCore.cxx.o' to global weak symbol 'typeinfo for TKDTree&lt;int, double&gt;' from file 'math/mathcore/CMakeFiles/MathCore.dir/src/TKDTree.cxx.o' means the weak symbol cannot be overridden at runtime. This was likely caused by different translation units being compiled with different visibility settings. ; - [2023-06-16T11:17:10.710Z] ld: warning: direct access in function 'ROOT::GenerateInitInstanceLocal(TKDTree&lt;int, double&gt; const*)' from file 'math/mathcore/CMakeFiles/G__MathCore.dir/G__MathCore.cxx.o' to global weak symbol 'typeinfo for TKDTree&lt;int, double&gt;' from file 'math/mathcore/CMakeFiles/MathCore.dir/src/TKDTree.cxx.o' means the weak symbol cannot be overridden at runtime. This was likely caused by different translation units being compiled with different visibility settings. ; - [2023-06-16T11:17:10.710Z] ld: warning: direct access in function 'ROOT::GenerateInitInstanceLocal(TKDTree&lt;int, float&gt; const*)' from file 'math/mathcore/CMakeFiles/G__MathCore.dir/G__MathCore.cxx.o' to global weak symbol 'typeinfo for TKDTree&lt;int, float&gt;' from file 'math/mathcore/CMakeFiles/MathCore.dir/src/TKDTree.cxx.o' means the weak symbol cannot be overridden at runtime. This was likely caused by different translation units being compiled with different visibility settings. ; - [2023-06-16T11:17:10.710Z] ld: warning: direct access in function 'ROOT::GenerateInitInstanceLocal(TKDTree&lt;int, float&gt; const*)' from file 'math/mathcore/CMakeFiles/G__MathCore.dir/G__MathCore.cxx.o' to global weak symbol 'typeinfo for ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12238#issuecomment-1594562137:303,access,access,303,https://root.cern,https://github.com/root-project/root/pull/12238#issuecomment-1594562137,2,['access'],['access']
Security,"Build failed on mac11arm/cxx17.; Running on macphsft24.dyndns.cern.ch:/Users/sftnight/build/workspace/root-pullrequests-build; [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/177439/console).; ### Warnings:; - [2023-06-20T05:25:06.418Z] ld: warning: direct access in function 'ROOT::GenerateInitInstanceLocal(TKDTree&lt;int, double&gt; const*)' from file 'math/mathcore/CMakeFiles/G__MathCore.dir/G__MathCore.cxx.o' to global weak symbol 'typeinfo for TKDTree&lt;int, double&gt;' from file 'math/mathcore/CMakeFiles/MathCore.dir/src/TKDTree.cxx.o' means the weak symbol cannot be overridden at runtime. This was likely caused by different translation units being compiled with different visibility settings. ; - [2023-06-20T05:25:06.418Z] ld: warning: direct access in function 'ROOT::GenerateInitInstanceLocal(TKDTree&lt;int, double&gt; const*)' from file 'math/mathcore/CMakeFiles/G__MathCore.dir/G__MathCore.cxx.o' to global weak symbol 'typeinfo for TKDTree&lt;int, double&gt;' from file 'math/mathcore/CMakeFiles/MathCore.dir/src/TKDTree.cxx.o' means the weak symbol cannot be overridden at runtime. This was likely caused by different translation units being compiled with different visibility settings. ; - [2023-06-20T05:25:06.418Z] ld: warning: direct access in function 'ROOT::GenerateInitInstanceLocal(TKDTree&lt;int, float&gt; const*)' from file 'math/mathcore/CMakeFiles/G__MathCore.dir/G__MathCore.cxx.o' to global weak symbol 'typeinfo for TKDTree&lt;int, float&gt;' from file 'math/mathcore/CMakeFiles/MathCore.dir/src/TKDTree.cxx.o' means the weak symbol cannot be overridden at runtime. This was likely caused by different translation units being compiled with different visibility settings. ; - [2023-06-20T05:25:06.418Z] ld: warning: direct access in function 'ROOT::GenerateInitInstanceLocal(TKDTree&lt;int, float&gt; const*)' from file 'math/mathcore/CMakeFiles/G__MathCore.dir/G__MathCore.cxx.o' to global weak symbol 'typeinfo for ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13046#issuecomment-1598165512:303,access,access,303,https://root.cern,https://github.com/root-project/root/pull/13046#issuecomment-1598165512,2,['access'],['access']
Security,"Build failed on mac11arm/cxx17.; Running on macphsft24.dyndns.cern.ch:/Users/sftnight/build/workspace/root-pullrequests-build; [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/178633/console).; ### Warnings:; - [2023-07-01T09:00:47.933Z] ld: warning: direct access in function 'ROOT::GenerateInitInstanceLocal(TKDTree&lt;int, double&gt; const*)' from file 'math/mathcore/CMakeFiles/G__MathCore.dir/G__MathCore.cxx.o' to global weak symbol 'typeinfo for TKDTree&lt;int, double&gt;' from file 'math/mathcore/CMakeFiles/MathCore.dir/src/TKDTree.cxx.o' means the weak symbol cannot be overridden at runtime. This was likely caused by different translation units being compiled with different visibility settings. ; - [2023-07-01T09:00:47.933Z] ld: warning: direct access in function 'ROOT::GenerateInitInstanceLocal(TKDTree&lt;int, double&gt; const*)' from file 'math/mathcore/CMakeFiles/G__MathCore.dir/G__MathCore.cxx.o' to global weak symbol 'typeinfo for TKDTree&lt;int, double&gt;' from file 'math/mathcore/CMakeFiles/MathCore.dir/src/TKDTree.cxx.o' means the weak symbol cannot be overridden at runtime. This was likely caused by different translation units being compiled with different visibility settings. ; - [2023-07-01T09:00:47.933Z] ld: warning: direct access in function 'ROOT::GenerateInitInstanceLocal(TKDTree&lt;int, float&gt; const*)' from file 'math/mathcore/CMakeFiles/G__MathCore.dir/G__MathCore.cxx.o' to global weak symbol 'typeinfo for TKDTree&lt;int, float&gt;' from file 'math/mathcore/CMakeFiles/MathCore.dir/src/TKDTree.cxx.o' means the weak symbol cannot be overridden at runtime. This was likely caused by different translation units being compiled with different visibility settings. ; - [2023-07-01T09:00:47.933Z] ld: warning: direct access in function 'ROOT::GenerateInitInstanceLocal(TKDTree&lt;int, float&gt; const*)' from file 'math/mathcore/CMakeFiles/G__MathCore.dir/G__MathCore.cxx.o' to global weak symbol 'typeinfo for ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13139#issuecomment-1615776009:303,access,access,303,https://root.cern,https://github.com/root-project/root/pull/13139#issuecomment-1615776009,2,['access'],['access']
Security,"Build failed on mac11arm/cxx17.; Running on macphsft24.dyndns.cern.ch:/Users/sftnight/build/workspace/root-pullrequests-build; [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/178723/console).; ### Warnings:; - [2023-07-03T12:52:21.831Z] ld: warning: direct access in function 'ROOT::GenerateInitInstanceLocal(TKDTree&lt;int, double&gt; const*)' from file 'math/mathcore/CMakeFiles/G__MathCore.dir/G__MathCore.cxx.o' to global weak symbol 'typeinfo for TKDTree&lt;int, double&gt;' from file 'math/mathcore/CMakeFiles/MathCore.dir/src/TKDTree.cxx.o' means the weak symbol cannot be overridden at runtime. This was likely caused by different translation units being compiled with different visibility settings. ; - [2023-07-03T12:52:21.831Z] ld: warning: direct access in function 'ROOT::GenerateInitInstanceLocal(TKDTree&lt;int, double&gt; const*)' from file 'math/mathcore/CMakeFiles/G__MathCore.dir/G__MathCore.cxx.o' to global weak symbol 'typeinfo for TKDTree&lt;int, double&gt;' from file 'math/mathcore/CMakeFiles/MathCore.dir/src/TKDTree.cxx.o' means the weak symbol cannot be overridden at runtime. This was likely caused by different translation units being compiled with different visibility settings. ; - [2023-07-03T12:52:21.831Z] ld: warning: direct access in function 'ROOT::GenerateInitInstanceLocal(TKDTree&lt;int, float&gt; const*)' from file 'math/mathcore/CMakeFiles/G__MathCore.dir/G__MathCore.cxx.o' to global weak symbol 'typeinfo for TKDTree&lt;int, float&gt;' from file 'math/mathcore/CMakeFiles/MathCore.dir/src/TKDTree.cxx.o' means the weak symbol cannot be overridden at runtime. This was likely caused by different translation units being compiled with different visibility settings. ; - [2023-07-03T12:52:21.831Z] ld: warning: direct access in function 'ROOT::GenerateInitInstanceLocal(TKDTree&lt;int, float&gt; const*)' from file 'math/mathcore/CMakeFiles/G__MathCore.dir/G__MathCore.cxx.o' to global weak symbol 'typeinfo for ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13139#issuecomment-1618264564:303,access,access,303,https://root.cern,https://github.com/root-project/root/pull/13139#issuecomment-1618264564,2,['access'],['access']
Security,"Build failed on mac12/default.; Running on macphsft17.dyndns.cern.ch:/Users/sftnight/build/jenkins/workspace/root-pullrequests-build; [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/155529/console).; ### Warnings:; - [2022-09-27T12:01:11.822Z] /Users/sftnight/build/jenkins/workspace/root-pullrequests-build/root/core/base/src/TDirectory.cxx:1244:7: warning: 'sprintf' is deprecated: This function is provided for compatibility reasons only. Due to security concerns inherent in the design of sprintf(3), it is highly recommended that you use snprintf(3) instead. [-Wdeprecated-declarations] ; - [2022-09-27T12:02:35.267Z] ld: warning: -undefined dynamic_lookup may not work with chained fixups ; - [2022-09-27T12:03:00.421Z] ld: warning: -undefined dynamic_lookup may not work with chained fixups ; - [2022-09-27T12:03:00.421Z] ld: warning: -undefined dynamic_lookup may not work with chained fixups ; - [2022-09-27T12:03:47.057Z] ld: warning: -undefined dynamic_lookup may not work with chained fixups ; - [2022-09-27T12:05:29.337Z] ld: warning: -undefined dynamic_lookup may not work with chained fixups ; - [2022-09-27T12:07:53.625Z] /Users/sftnight/build/jenkins/workspace/root-pullrequests-build/root/gui/guihtml/src/TGHtmlDraw.cxx:127:7: warning: 'sprintf' is deprecated: This function is provided for compatibility reasons only. Due to security concerns inherent in the design of sprintf(3), it is highly recommended that you use snprintf(3) instead. [-Wdeprecated-declarations] ; - [2022-09-27T12:07:53.625Z] /Users/sftnight/build/jenkins/workspace/root-pullrequests-build/root/gui/guihtml/src/TGHtmlDraw.cxx:189:7: warning: 'sprintf' is deprecated: This function is provided for compatibility reasons only. Due to security concerns inherent in the design of sprintf(3), it is highly recommended that you use snprintf(3) instead. [-Wdeprecated-declarations] . ### Failing tests:; - [projectroot.roottest.root.meta.evolution.roottest_root_meta_evo",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11439#issuecomment-1259609519:495,secur,security,495,https://root.cern,https://github.com/root-project/root/pull/11439#issuecomment-1259609519,1,['secur'],['security']
Security,"Build failed on mac12/default.; Running on macphsft17.dyndns.cern.ch:/Users/sftnight/build/jenkins/workspace/root-pullrequests-build; [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/156129/console).; ### Warnings:; - [2022-10-03T10:26:28.897Z] /Users/sftnight/build/jenkins/workspace/root-pullrequests-build/root/core/base/src/TDirectory.cxx:1244:7: warning: 'sprintf' is deprecated: This function is provided for compatibility reasons only. Due to security concerns inherent in the design of sprintf(3), it is highly recommended that you use snprintf(3) instead. [-Wdeprecated-declarations] ; - [2022-10-03T10:30:31.377Z] ld: warning: -undefined dynamic_lookup may not work with chained fixups ; - [2022-10-03T10:31:02.129Z] ld: warning: -undefined dynamic_lookup may not work with chained fixups ; - [2022-10-03T10:31:02.129Z] ld: warning: -undefined dynamic_lookup may not work with chained fixups ; - [2022-10-03T10:31:46.812Z] ld: warning: -undefined dynamic_lookup may not work with chained fixups ; - [2022-10-03T10:32:56.935Z] ld: warning: -undefined dynamic_lookup may not work with chained fixups ; - [2022-10-03T10:37:23.098Z] /Users/sftnight/build/jenkins/workspace/root-pullrequests-build/root/gui/guihtml/src/TGHtmlDraw.cxx:127:7: warning: 'sprintf' is deprecated: This function is provided for compatibility reasons only. Due to security concerns inherent in the design of sprintf(3), it is highly recommended that you use snprintf(3) instead. [-Wdeprecated-declarations] ; - [2022-10-03T10:37:23.098Z] /Users/sftnight/build/jenkins/workspace/root-pullrequests-build/root/gui/guihtml/src/TGHtmlDraw.cxx:189:7: warning: 'sprintf' is deprecated: This function is provided for compatibility reasons only. Due to security concerns inherent in the design of sprintf(3), it is highly recommended that you use snprintf(3) instead. [-Wdeprecated-declarations] . ### Failing tests:; - [projectroot.bindings.pyroot.pythonizations.test.pyunittests_pyr",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11432#issuecomment-1265283847:495,secur,security,495,https://root.cern,https://github.com/root-project/root/pull/11432#issuecomment-1265283847,1,['secur'],['security']
Security,"Build failed on mac12/default.; Running on macphsft17.dyndns.cern.ch:/Users/sftnight/build/jenkins/workspace/root-pullrequests-build; [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/156244/console).; ### Warnings:; - [2022-10-04T08:57:16.310Z] /Users/sftnight/build/jenkins/workspace/root-pullrequests-build/root/core/base/src/TDirectory.cxx:1244:7: warning: 'sprintf' is deprecated: This function is provided for compatibility reasons only. Due to security concerns inherent in the design of sprintf(3), it is highly recommended that you use snprintf(3) instead. [-Wdeprecated-declarations] ; - [2022-10-04T08:57:28.121Z] ld: warning: -undefined dynamic_lookup may not work with chained fixups ; - [2022-10-04T08:57:34.687Z] ld: warning: -undefined dynamic_lookup may not work with chained fixups ; - [2022-10-04T08:57:35.220Z] ld: warning: -undefined dynamic_lookup may not work with chained fixups ; - [2022-10-04T08:57:47.448Z] ld: warning: -undefined dynamic_lookup may not work with chained fixups ; - [2022-10-04T08:58:04.228Z] ld: warning: -undefined dynamic_lookup may not work with chained fixups ; - [2022-10-04T08:58:39.500Z] /Users/sftnight/build/jenkins/workspace/root-pullrequests-build/root/gui/guihtml/src/TGHtmlDraw.cxx:127:7: warning: 'sprintf' is deprecated: This function is provided for compatibility reasons only. Due to security concerns inherent in the design of sprintf(3), it is highly recommended that you use snprintf(3) instead. [-Wdeprecated-declarations] ; - [2022-10-04T08:58:39.500Z] /Users/sftnight/build/jenkins/workspace/root-pullrequests-build/root/gui/guihtml/src/TGHtmlDraw.cxx:189:7: warning: 'sprintf' is deprecated: This function is provided for compatibility reasons only. Due to security concerns inherent in the design of sprintf(3), it is highly recommended that you use snprintf(3) instead. [-Wdeprecated-declarations] . ### Failing tests:; - [projectroot.bindings.experimental.distrdf.test.pyunittests_dist",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11432#issuecomment-1266661576:495,secur,security,495,https://root.cern,https://github.com/root-project/root/pull/11432#issuecomment-1266661576,1,['secur'],['security']
Security,"Build failed on mac12/default.; Running on macphsft17.dyndns.cern.ch:/Users/sftnight/build/jenkins/workspace/root-pullrequests-build; [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/156825/console).; ### Warnings:; - [2022-10-10T10:35:58.842Z] /Users/sftnight/build/jenkins/workspace/root-pullrequests-build/root/core/base/src/TDirectory.cxx:1244:7: warning: 'sprintf' is deprecated: This function is provided for compatibility reasons only. Due to security concerns inherent in the design of sprintf(3), it is highly recommended that you use snprintf(3) instead. [-Wdeprecated-declarations] ; - [2022-10-10T10:45:41.694Z] ld: warning: -undefined dynamic_lookup may not work with chained fixups ; - [2022-10-10T10:45:50.062Z] ld: warning: -undefined dynamic_lookup may not work with chained fixups ; - [2022-10-10T10:45:50.062Z] ld: warning: -undefined dynamic_lookup may not work with chained fixups ; - [2022-10-10T10:46:38.182Z] ld: warning: -undefined dynamic_lookup may not work with chained fixups ; - [2022-10-10T10:47:55.262Z] ld: warning: -undefined dynamic_lookup may not work with chained fixups ; - [2022-10-10T10:50:24.246Z] /Users/sftnight/build/jenkins/workspace/root-pullrequests-build/root/gui/guihtml/src/TGHtmlDraw.cxx:127:7: warning: 'sprintf' is deprecated: This function is provided for compatibility reasons only. Due to security concerns inherent in the design of sprintf(3), it is highly recommended that you use snprintf(3) instead. [-Wdeprecated-declarations] ; - [2022-10-10T10:50:24.246Z] /Users/sftnight/build/jenkins/workspace/root-pullrequests-build/root/gui/guihtml/src/TGHtmlDraw.cxx:189:7: warning: 'sprintf' is deprecated: This function is provided for compatibility reasons only. Due to security concerns inherent in the design of sprintf(3), it is highly recommended that you use snprintf(3) instead. [-Wdeprecated-declarations] . ### Failing tests:; - [projectroot.roottest.cling.const.roottest_cling_const_run2](htt",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11432#issuecomment-1273169240:495,secur,security,495,https://root.cern,https://github.com/root-project/root/pull/11432#issuecomment-1273169240,1,['secur'],['security']
Security,"Build failed on mac12/noimt.; Running on macphsft17.dyndns.cern.ch:/Users/sftnight/build/jenkins/workspace/root-pullrequests-build; [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/163689/console).; ### Warnings:; - [2023-01-10T11:01:38.230Z] /Users/sftnight/build/jenkins/workspace/root-pullrequests-build/root/core/base/src/TDirectory.cxx:1245:7: warning: 'sprintf' is deprecated: This function is provided for compatibility reasons only. Due to security concerns inherent in the design of sprintf(3), it is highly recommended that you use snprintf(3) instead. [-Wdeprecated-declarations] . ### Failing tests:; - [projectroot.test.test_stressinterpreter](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/163689/testReport/projectroot/test/test_stressinterpreter/); - [projectroot.roottest.cling.const.roottest_cling_const_run2](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/163689/testReport/projectroot.roottest.cling/const/roottest_cling_const_run2/); - [projectroot.roottest.cling.dict.roottest_cling_dict_rundefaultargs_compiled](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/163689/testReport/projectroot.roottest.cling/dict/roottest_cling_dict_rundefaultargs_compiled/); - [projectroot.roottest.cling.dict.roottest_cling_dict_exectemplatetemplateTest](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/163689/testReport/projectroot.roottest.cling/dict/roottest_cling_dict_exectemplatetemplateTest/); - [projectroot.roottest.cling.dict.roottest_cling_dict_runalgebra](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/163689/testReport/projectroot.roottest.cling/dict/roottest_cling_dict_runalgebra/); - [projectroot.roottest.cling.functionTemplate.roottest_cling_functionTemplate_testcint](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/163689/testReport/projectroot.roottest.cling/functionTemplate",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11997#issuecomment-1377128786:493,secur,security,493,https://root.cern,https://github.com/root-project/root/pull/11997#issuecomment-1377128786,1,['secur'],['security']
Security,"Build failed on mac12/noimt.; Running on macphsft17.dyndns.cern.ch:/Users/sftnight/build/jenkins/workspace/root-pullrequests-build; [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/163717/console).; ### Errors:; - [2023-01-10T12:03:17.915Z] FAILED: roofit/roofitcore/CMakeFiles/RooFitCore.dir/src/RooAbsRealLValue.cxx.o ; - [2023-01-10T12:03:19.281Z] /Users/sftnight/build/jenkins/workspace/root-pullrequests-build/root/roofit/roofitcore/src/RooAbsRealLValue.cxx:78:15: error: static_assert expression is not an integral constant expression . ### Warnings:; - [2023-01-10T12:02:23.787Z] /Users/sftnight/build/jenkins/workspace/root-pullrequests-build/root/core/base/src/TDirectory.cxx:1245:7: warning: 'sprintf' is deprecated: This function is provided for compatibility reasons only. Due to security concerns inherent in the design of sprintf(3), it is highly recommended that you use snprintf(3) instead. [-Wdeprecated-declarations]",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11999#issuecomment-1377157762:837,secur,security,837,https://root.cern,https://github.com/root-project/root/pull/11999#issuecomment-1377157762,1,['secur'],['security']
Security,"Build failed on mac12/noimt.; Running on macphsft17.dyndns.cern.ch:/Users/sftnight/build/jenkins/workspace/root-pullrequests-build; [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/163745/console).; ### Warnings:; - [2023-01-10T13:32:09.237Z] /Users/sftnight/build/jenkins/workspace/root-pullrequests-build/root/core/base/src/TDirectory.cxx:1245:7: warning: 'sprintf' is deprecated: This function is provided for compatibility reasons only. Due to security concerns inherent in the design of sprintf(3), it is highly recommended that you use snprintf(3) instead. [-Wdeprecated-declarations] . ### Failing tests:; - [projectroot.roottest.root.meta.evolution.roottest_root_meta_evolution_execBaseClass_v1](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/163745/testReport/projectroot.roottest.root.meta/evolution/roottest_root_meta_evolution_execBaseClass_v1/); - [projectroot.roottest.root.meta.evolution.roottest_root_meta_evolution_execMixedBaseClass_v1](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/163745/testReport/projectroot.roottest.root.meta/evolution/roottest_root_meta_evolution_execMixedBaseClass_v1/); - [projectroot.roottest.root.io.issue-7754.roottest_root_io_issue_7754_write_cmssw_class_v2](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/163745/testReport/projectroot.roottest.root.io/issue-7754/roottest_root_io_issue_7754_write_cmssw_class_v2/); - [projectroot.roottest.root.io.issue-9899.roottest_root_io_issue_9899_write_cmssw_class_v2](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/163745/testReport/projectroot.roottest.root.io/issue-9899/roottest_root_io_issue_9899_write_cmssw_class_v2/); - [projectroot.roottest.root.io.issue-7754.roottest_root_io_issue_7754_read_mwe_0](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/163745/testReport/projectroot.roottest.root.io/issue-7754/roottest_root_io_issue_",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12001#issuecomment-1377325038:493,secur,security,493,https://root.cern,https://github.com/root-project/root/pull/12001#issuecomment-1377325038,1,['secur'],['security']
Security,"Build failed on mac12/noimt.; Running on macphsft17.dyndns.cern.ch:/Users/sftnight/build/jenkins/workspace/root-pullrequests-build; [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/163766/console).; ### Warnings:; - [2023-01-10T15:07:23.003Z] /Users/sftnight/build/jenkins/workspace/root-pullrequests-build/root/core/base/src/TDirectory.cxx:1245:7: warning: 'sprintf' is deprecated: This function is provided for compatibility reasons only. Due to security concerns inherent in the design of sprintf(3), it is highly recommended that you use snprintf(3) instead. [-Wdeprecated-declarations] . ### Failing tests:; - [projectroot.roottest.cling.const.roottest_cling_const_run2](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/163766/testReport/projectroot.roottest.cling/const/roottest_cling_const_run2/); - [projectroot.roottest.cling.dict.roottest_cling_dict_rundefaultargs_compiled](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/163766/testReport/projectroot.roottest.cling/dict/roottest_cling_dict_rundefaultargs_compiled/); - [projectroot.roottest.cling.dict.roottest_cling_dict_exectemplatetemplateTest](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/163766/testReport/projectroot.roottest.cling/dict/roottest_cling_dict_exectemplatetemplateTest/); - [projectroot.roottest.cling.dict.roottest_cling_dict_runalgebra](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/163766/testReport/projectroot.roottest.cling/dict/roottest_cling_dict_runalgebra/); - [projectroot.roottest.cling.functionTemplate.roottest_cling_functionTemplate_testcint](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/163766/testReport/projectroot.roottest.cling/functionTemplate/roottest_cling_functionTemplate_testcint/); - [projectroot.roottest.cling.other.roottest_cling_other_runsprintfselect](https://lcgapp-services.cern.ch/root-jenkins/job/root-pull",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11466#issuecomment-1377448733:493,secur,security,493,https://root.cern,https://github.com/root-project/root/pull/11466#issuecomment-1377448733,1,['secur'],['security']
Security,"Build failed on mac12/noimt.; Running on macphsft17.dyndns.cern.ch:/Users/sftnight/build/jenkins/workspace/root-pullrequests-build; [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/163780/console).; ### Warnings:; - [2023-01-10T15:36:59.366Z] /Users/sftnight/build/jenkins/workspace/root-pullrequests-build/root/core/base/src/TDirectory.cxx:1245:7: warning: 'sprintf' is deprecated: This function is provided for compatibility reasons only. Due to security concerns inherent in the design of sprintf(3), it is highly recommended that you use snprintf(3) instead. [-Wdeprecated-declarations] . ### Failing tests:; - [projectroot.roottest.root.meta.evolution.roottest_root_meta_evolution_execBaseClass_v1](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/163780/testReport/projectroot.roottest.root.meta/evolution/roottest_root_meta_evolution_execBaseClass_v1/); - [projectroot.roottest.root.meta.evolution.roottest_root_meta_evolution_execMixedBaseClass_v1](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/163780/testReport/projectroot.roottest.root.meta/evolution/roottest_root_meta_evolution_execMixedBaseClass_v1/); - [projectroot.roottest.root.io.issue-7754.roottest_root_io_issue_7754_write_cmssw_class_v2](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/163780/testReport/projectroot.roottest.root.io/issue-7754/roottest_root_io_issue_7754_write_cmssw_class_v2/); - [projectroot.roottest.root.io.issue-7754.roottest_root_io_issue_7754_read_mwe_0](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/163780/testReport/projectroot.roottest.root.io/issue-7754/roottest_root_io_issue_7754_read_mwe_0/); - [projectroot.roottest.root.io.issue-9899.roottest_root_io_issue_9899_write_cmssw_class_v2](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/163780/testReport/projectroot.roottest.root.io/issue-9899/roottest_root_io_issue_9899_write",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11999#issuecomment-1377492323:493,secur,security,493,https://root.cern,https://github.com/root-project/root/pull/11999#issuecomment-1377492323,1,['secur'],['security']
Security,"Build failed on mac12/noimt.; Running on macphsft17.dyndns.cern.ch:/Users/sftnight/build/jenkins/workspace/root-pullrequests-build; [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/163787/console).; ### Warnings:; - [2023-01-10T16:28:20.446Z] /Users/sftnight/build/jenkins/workspace/root-pullrequests-build/root/core/base/src/TDirectory.cxx:1245:7: warning: 'sprintf' is deprecated: This function is provided for compatibility reasons only. Due to security concerns inherent in the design of sprintf(3), it is highly recommended that you use snprintf(3) instead. [-Wdeprecated-declarations] . ### Failing tests:; - [projectroot.roottest.cling.const.roottest_cling_const_run2](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/163787/testReport/projectroot.roottest.cling/const/roottest_cling_const_run2/); - [projectroot.roottest.cling.dict.roottest_cling_dict_rundefaultargs_compiled](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/163787/testReport/projectroot.roottest.cling/dict/roottest_cling_dict_rundefaultargs_compiled/); - [projectroot.roottest.cling.dict.roottest_cling_dict_exectemplatetemplateTest](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/163787/testReport/projectroot.roottest.cling/dict/roottest_cling_dict_exectemplatetemplateTest/); - [projectroot.roottest.cling.dict.roottest_cling_dict_runalgebra](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/163787/testReport/projectroot.roottest.cling/dict/roottest_cling_dict_runalgebra/); - [projectroot.roottest.cling.functionTemplate.roottest_cling_functionTemplate_testcint](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/163787/testReport/projectroot.roottest.cling/functionTemplate/roottest_cling_functionTemplate_testcint/); - [projectroot.roottest.cling.other.roottest_cling_other_runsprintfselect](https://lcgapp-services.cern.ch/root-jenkins/job/root-pull",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11995#issuecomment-1377561218:493,secur,security,493,https://root.cern,https://github.com/root-project/root/pull/11995#issuecomment-1377561218,1,['secur'],['security']
Security,"Build failed on mac12/noimt.; Running on macphsft17.dyndns.cern.ch:/Users/sftnight/build/jenkins/workspace/root-pullrequests-build; [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/163801/console).; ### Warnings:; - [2023-01-10T17:39:17.386Z] /Users/sftnight/build/jenkins/workspace/root-pullrequests-build/root/core/base/src/TDirectory.cxx:1245:7: warning: 'sprintf' is deprecated: This function is provided for compatibility reasons only. Due to security concerns inherent in the design of sprintf(3), it is highly recommended that you use snprintf(3) instead. [-Wdeprecated-declarations] . ### Failing tests:; - [projectroot.roottest.cling.const.roottest_cling_const_run2](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/163801/testReport/projectroot.roottest.cling/const/roottest_cling_const_run2/); - [projectroot.roottest.cling.dict.roottest_cling_dict_rundefaultargs_compiled](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/163801/testReport/projectroot.roottest.cling/dict/roottest_cling_dict_rundefaultargs_compiled/); - [projectroot.roottest.cling.dict.roottest_cling_dict_exectemplatetemplateTest](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/163801/testReport/projectroot.roottest.cling/dict/roottest_cling_dict_exectemplatetemplateTest/); - [projectroot.roottest.cling.dict.roottest_cling_dict_runalgebra](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/163801/testReport/projectroot.roottest.cling/dict/roottest_cling_dict_runalgebra/); - [projectroot.roottest.cling.functionTemplate.roottest_cling_functionTemplate_testcint](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/163801/testReport/projectroot.roottest.cling/functionTemplate/roottest_cling_functionTemplate_testcint/); - [projectroot.roottest.cling.other.roottest_cling_other_runsprintfselect](https://lcgapp-services.cern.ch/root-jenkins/job/root-pull",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12000#issuecomment-1377650313:493,secur,security,493,https://root.cern,https://github.com/root-project/root/pull/12000#issuecomment-1377650313,1,['secur'],['security']
Security,"Build failed on mac12/noimt.; Running on macphsft17.dyndns.cern.ch:/Users/sftnight/build/jenkins/workspace/root-pullrequests-build; [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/163811/console).; ### Warnings:; - [2023-01-10T18:10:50.806Z] /Users/sftnight/build/jenkins/workspace/root-pullrequests-build/root/core/base/src/TDirectory.cxx:1245:7: warning: 'sprintf' is deprecated: This function is provided for compatibility reasons only. Due to security concerns inherent in the design of sprintf(3), it is highly recommended that you use snprintf(3) instead. [-Wdeprecated-declarations] . ### Failing tests:; - [projectroot.roottest.cling.const.roottest_cling_const_run2](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/163811/testReport/projectroot.roottest.cling/const/roottest_cling_const_run2/); - [projectroot.roottest.cling.dict.roottest_cling_dict_rundefaultargs_compiled](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/163811/testReport/projectroot.roottest.cling/dict/roottest_cling_dict_rundefaultargs_compiled/); - [projectroot.roottest.cling.dict.roottest_cling_dict_exectemplatetemplateTest](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/163811/testReport/projectroot.roottest.cling/dict/roottest_cling_dict_exectemplatetemplateTest/); - [projectroot.roottest.cling.dict.roottest_cling_dict_runalgebra](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/163811/testReport/projectroot.roottest.cling/dict/roottest_cling_dict_runalgebra/); - [projectroot.roottest.cling.functionTemplate.roottest_cling_functionTemplate_testcint](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/163811/testReport/projectroot.roottest.cling/functionTemplate/roottest_cling_functionTemplate_testcint/); - [projectroot.roottest.cling.other.roottest_cling_other_runsprintfselect](https://lcgapp-services.cern.ch/root-jenkins/job/root-pull",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11999#issuecomment-1377688449:493,secur,security,493,https://root.cern,https://github.com/root-project/root/pull/11999#issuecomment-1377688449,1,['secur'],['security']
Security,"Build failed on mac12/noimt.; Running on macphsft17.dyndns.cern.ch:/Users/sftnight/build/jenkins/workspace/root-pullrequests-build; [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/163832/console).; ### Warnings:; - [2023-01-10T20:47:25.332Z] /Users/sftnight/build/jenkins/workspace/root-pullrequests-build/root/core/base/src/TDirectory.cxx:1245:7: warning: 'sprintf' is deprecated: This function is provided for compatibility reasons only. Due to security concerns inherent in the design of sprintf(3), it is highly recommended that you use snprintf(3) instead. [-Wdeprecated-declarations] . ### Failing tests:; - [projectroot.roottest.cling.const.roottest_cling_const_run2](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/163832/testReport/projectroot.roottest.cling/const/roottest_cling_const_run2/); - [projectroot.roottest.cling.dict.roottest_cling_dict_rundefaultargs_compiled](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/163832/testReport/projectroot.roottest.cling/dict/roottest_cling_dict_rundefaultargs_compiled/); - [projectroot.roottest.cling.dict.roottest_cling_dict_exectemplatetemplateTest](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/163832/testReport/projectroot.roottest.cling/dict/roottest_cling_dict_exectemplatetemplateTest/); - [projectroot.roottest.cling.dict.roottest_cling_dict_runalgebra](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/163832/testReport/projectroot.roottest.cling/dict/roottest_cling_dict_runalgebra/); - [projectroot.roottest.cling.functionTemplate.roottest_cling_functionTemplate_testcint](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/163832/testReport/projectroot.roottest.cling/functionTemplate/roottest_cling_functionTemplate_testcint/); - [projectroot.roottest.cling.other.roottest_cling_other_runsprintfselect](https://lcgapp-services.cern.ch/root-jenkins/job/root-pull",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11973#issuecomment-1377861797:493,secur,security,493,https://root.cern,https://github.com/root-project/root/pull/11973#issuecomment-1377861797,1,['secur'],['security']
Security,"Build failed on mac12/noimt.; Running on macphsft17.dyndns.cern.ch:/Users/sftnight/build/jenkins/workspace/root-pullrequests-build; [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/163843/console).; ### Warnings:; - [2023-01-11T09:00:17.632Z] /Users/sftnight/build/jenkins/workspace/root-pullrequests-build/root/core/base/src/TDirectory.cxx:1245:7: warning: 'sprintf' is deprecated: This function is provided for compatibility reasons only. Due to security concerns inherent in the design of sprintf(3), it is highly recommended that you use snprintf(3) instead. [-Wdeprecated-declarations] . ### Failing tests:; - [projectroot.roottest.cling.const.roottest_cling_const_run2](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/163843/testReport/projectroot.roottest.cling/const/roottest_cling_const_run2/); - [projectroot.roottest.cling.dict.roottest_cling_dict_rundefaultargs_compiled](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/163843/testReport/projectroot.roottest.cling/dict/roottest_cling_dict_rundefaultargs_compiled/); - [projectroot.roottest.cling.dict.roottest_cling_dict_exectemplatetemplateTest](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/163843/testReport/projectroot.roottest.cling/dict/roottest_cling_dict_exectemplatetemplateTest/); - [projectroot.roottest.cling.dict.roottest_cling_dict_runalgebra](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/163843/testReport/projectroot.roottest.cling/dict/roottest_cling_dict_runalgebra/); - [projectroot.roottest.cling.functionTemplate.roottest_cling_functionTemplate_testcint](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/163843/testReport/projectroot.roottest.cling/functionTemplate/roottest_cling_functionTemplate_testcint/); - [projectroot.roottest.cling.other.roottest_cling_other_runsprintfselect](https://lcgapp-services.cern.ch/root-jenkins/job/root-pull",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12002#issuecomment-1378458027:493,secur,security,493,https://root.cern,https://github.com/root-project/root/pull/12002#issuecomment-1378458027,1,['secur'],['security']
Security,"Build failed on mac12/noimt.; Running on macphsft17.dyndns.cern.ch:/Users/sftnight/build/jenkins/workspace/root-pullrequests-build; [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/163850/console).; ### Warnings:; - [2023-01-11T12:00:17.572Z] /Users/sftnight/build/jenkins/workspace/root-pullrequests-build/root/core/base/src/TDirectory.cxx:1245:7: warning: 'sprintf' is deprecated: This function is provided for compatibility reasons only. Due to security concerns inherent in the design of sprintf(3), it is highly recommended that you use snprintf(3) instead. [-Wdeprecated-declarations] . ### Failing tests:; - [projectroot.roottest.cling.const.roottest_cling_const_run2](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/163850/testReport/projectroot.roottest.cling/const/roottest_cling_const_run2/); - [projectroot.roottest.cling.dict.roottest_cling_dict_rundefaultargs_compiled](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/163850/testReport/projectroot.roottest.cling/dict/roottest_cling_dict_rundefaultargs_compiled/); - [projectroot.roottest.cling.dict.roottest_cling_dict_exectemplatetemplateTest](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/163850/testReport/projectroot.roottest.cling/dict/roottest_cling_dict_exectemplatetemplateTest/); - [projectroot.roottest.cling.dict.roottest_cling_dict_runalgebra](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/163850/testReport/projectroot.roottest.cling/dict/roottest_cling_dict_runalgebra/); - [projectroot.roottest.cling.functionTemplate.roottest_cling_functionTemplate_testcint](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/163850/testReport/projectroot.roottest.cling/functionTemplate/roottest_cling_functionTemplate_testcint/); - [projectroot.roottest.cling.other.roottest_cling_other_runsprintfselect](https://lcgapp-services.cern.ch/root-jenkins/job/root-pull",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12004#issuecomment-1378672138:493,secur,security,493,https://root.cern,https://github.com/root-project/root/pull/12004#issuecomment-1378672138,1,['secur'],['security']
Security,"Build failed on mac12/noimt.; Running on macphsft17.dyndns.cern.ch:/Users/sftnight/build/jenkins/workspace/root-pullrequests-build; [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/163885/console).; ### Warnings:; - [2023-01-11T14:20:48.584Z] /Users/sftnight/build/jenkins/workspace/root-pullrequests-build/root/core/base/src/TDirectory.cxx:1245:7: warning: 'sprintf' is deprecated: This function is provided for compatibility reasons only. Due to security concerns inherent in the design of sprintf(3), it is highly recommended that you use snprintf(3) instead. [-Wdeprecated-declarations] . ### Failing tests:; - [projectroot.roottest.cling.const.roottest_cling_const_run2](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/163885/testReport/projectroot.roottest.cling/const/roottest_cling_const_run2/); - [projectroot.roottest.cling.dict.roottest_cling_dict_rundefaultargs_compiled](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/163885/testReport/projectroot.roottest.cling/dict/roottest_cling_dict_rundefaultargs_compiled/); - [projectroot.roottest.cling.dict.roottest_cling_dict_exectemplatetemplateTest](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/163885/testReport/projectroot.roottest.cling/dict/roottest_cling_dict_exectemplatetemplateTest/); - [projectroot.roottest.cling.dict.roottest_cling_dict_runalgebra](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/163885/testReport/projectroot.roottest.cling/dict/roottest_cling_dict_runalgebra/); - [projectroot.roottest.cling.functionTemplate.roottest_cling_functionTemplate_testcint](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/163885/testReport/projectroot.roottest.cling/functionTemplate/roottest_cling_functionTemplate_testcint/); - [projectroot.roottest.cling.other.roottest_cling_other_runsprintfselect](https://lcgapp-services.cern.ch/root-jenkins/job/root-pull",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12008#issuecomment-1378857938:493,secur,security,493,https://root.cern,https://github.com/root-project/root/pull/12008#issuecomment-1378857938,1,['secur'],['security']
Security,"Build failed on mac12/noimt.; Running on macphsft17.dyndns.cern.ch:/Users/sftnight/build/jenkins/workspace/root-pullrequests-build; [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/163892/console).; ### Warnings:; - [2023-01-11T16:53:56.918Z] /Users/sftnight/build/jenkins/workspace/root-pullrequests-build/root/core/base/src/TDirectory.cxx:1245:7: warning: 'sprintf' is deprecated: This function is provided for compatibility reasons only. Due to security concerns inherent in the design of sprintf(3), it is highly recommended that you use snprintf(3) instead. [-Wdeprecated-declarations] . ### Failing tests:; - [projectroot.roottest.cling.const.roottest_cling_const_run2](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/163892/testReport/projectroot.roottest.cling/const/roottest_cling_const_run2/); - [projectroot.roottest.cling.dict.roottest_cling_dict_rundefaultargs_compiled](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/163892/testReport/projectroot.roottest.cling/dict/roottest_cling_dict_rundefaultargs_compiled/); - [projectroot.roottest.cling.dict.roottest_cling_dict_exectemplatetemplateTest](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/163892/testReport/projectroot.roottest.cling/dict/roottest_cling_dict_exectemplatetemplateTest/); - [projectroot.roottest.cling.dict.roottest_cling_dict_runalgebra](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/163892/testReport/projectroot.roottest.cling/dict/roottest_cling_dict_runalgebra/); - [projectroot.roottest.cling.functionTemplate.roottest_cling_functionTemplate_testcint](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/163892/testReport/projectroot.roottest.cling/functionTemplate/roottest_cling_functionTemplate_testcint/); - [projectroot.roottest.cling.other.roottest_cling_other_runsprintfselect](https://lcgapp-services.cern.ch/root-jenkins/job/root-pull",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12009#issuecomment-1379213479:493,secur,security,493,https://root.cern,https://github.com/root-project/root/pull/12009#issuecomment-1379213479,1,['secur'],['security']
Security,"Build failed on mac12/noimt.; Running on macphsft17.dyndns.cern.ch:/Users/sftnight/build/jenkins/workspace/root-pullrequests-build; [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/163955/console).; ### Warnings:; - [2023-01-12T09:56:46.024Z] /Users/sftnight/build/jenkins/workspace/root-pullrequests-build/root/core/base/src/TDirectory.cxx:1245:7: warning: 'sprintf' is deprecated: This function is provided for compatibility reasons only. Due to security concerns inherent in the design of sprintf(3), it is highly recommended that you use snprintf(3) instead. [-Wdeprecated-declarations] . ### Failing tests:; - [projectroot.roottest.cling.const.roottest_cling_const_run2](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/163955/testReport/projectroot.roottest.cling/const/roottest_cling_const_run2/); - [projectroot.roottest.cling.dict.roottest_cling_dict_rundefaultargs_compiled](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/163955/testReport/projectroot.roottest.cling/dict/roottest_cling_dict_rundefaultargs_compiled/); - [projectroot.roottest.cling.dict.roottest_cling_dict_exectemplatetemplateTest](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/163955/testReport/projectroot.roottest.cling/dict/roottest_cling_dict_exectemplatetemplateTest/); - [projectroot.roottest.cling.dict.roottest_cling_dict_runalgebra](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/163955/testReport/projectroot.roottest.cling/dict/roottest_cling_dict_runalgebra/); - [projectroot.roottest.cling.functionTemplate.roottest_cling_functionTemplate_testcint](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/163955/testReport/projectroot.roottest.cling/functionTemplate/roottest_cling_functionTemplate_testcint/); - [projectroot.roottest.cling.other.roottest_cling_other_runsprintfselect](https://lcgapp-services.cern.ch/root-jenkins/job/root-pull",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12014#issuecomment-1380125433:493,secur,security,493,https://root.cern,https://github.com/root-project/root/pull/12014#issuecomment-1380125433,1,['secur'],['security']
Security,"Build failed on mac12/noimt.; Running on macphsft17.dyndns.cern.ch:/Users/sftnight/build/jenkins/workspace/root-pullrequests-build; [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/163969/console).; ### Warnings:; - [2023-01-12T10:39:27.417Z] /Users/sftnight/build/jenkins/workspace/root-pullrequests-build/root/core/base/src/TDirectory.cxx:1245:7: warning: 'sprintf' is deprecated: This function is provided for compatibility reasons only. Due to security concerns inherent in the design of sprintf(3), it is highly recommended that you use snprintf(3) instead. [-Wdeprecated-declarations] . ### Failing tests:; - [projectroot.roottest.cling.const.roottest_cling_const_run2](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/163969/testReport/projectroot.roottest.cling/const/roottest_cling_const_run2/); - [projectroot.roottest.cling.dict.roottest_cling_dict_rundefaultargs_compiled](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/163969/testReport/projectroot.roottest.cling/dict/roottest_cling_dict_rundefaultargs_compiled/); - [projectroot.roottest.cling.dict.roottest_cling_dict_exectemplatetemplateTest](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/163969/testReport/projectroot.roottest.cling/dict/roottest_cling_dict_exectemplatetemplateTest/); - [projectroot.roottest.cling.dict.roottest_cling_dict_runalgebra](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/163969/testReport/projectroot.roottest.cling/dict/roottest_cling_dict_runalgebra/); - [projectroot.roottest.cling.functionTemplate.roottest_cling_functionTemplate_testcint](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/163969/testReport/projectroot.roottest.cling/functionTemplate/roottest_cling_functionTemplate_testcint/); - [projectroot.roottest.cling.other.roottest_cling_other_runsprintfselect](https://lcgapp-services.cern.ch/root-jenkins/job/root-pull",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11980#issuecomment-1380161249:493,secur,security,493,https://root.cern,https://github.com/root-project/root/pull/11980#issuecomment-1380161249,1,['secur'],['security']
Security,"Build failed on mac12/noimt.; Running on macphsft17.dyndns.cern.ch:/Users/sftnight/build/jenkins/workspace/root-pullrequests-build; [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/164018/console).; ### Warnings:; - [2023-01-12T13:11:48.604Z] /Users/sftnight/build/jenkins/workspace/root-pullrequests-build/root/core/base/src/TDirectory.cxx:1245:7: warning: 'sprintf' is deprecated: This function is provided for compatibility reasons only. Due to security concerns inherent in the design of sprintf(3), it is highly recommended that you use snprintf(3) instead. [-Wdeprecated-declarations] . ### Failing tests:; - [projectroot.roottest.cling.const.roottest_cling_const_run2](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/164018/testReport/projectroot.roottest.cling/const/roottest_cling_const_run2/); - [projectroot.roottest.cling.dict.roottest_cling_dict_rundefaultargs_compiled](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/164018/testReport/projectroot.roottest.cling/dict/roottest_cling_dict_rundefaultargs_compiled/); - [projectroot.roottest.cling.dict.roottest_cling_dict_exectemplatetemplateTest](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/164018/testReport/projectroot.roottest.cling/dict/roottest_cling_dict_exectemplatetemplateTest/); - [projectroot.roottest.cling.dict.roottest_cling_dict_runalgebra](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/164018/testReport/projectroot.roottest.cling/dict/roottest_cling_dict_runalgebra/); - [projectroot.roottest.cling.functionTemplate.roottest_cling_functionTemplate_testcint](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/164018/testReport/projectroot.roottest.cling/functionTemplate/roottest_cling_functionTemplate_testcint/); - [projectroot.roottest.cling.other.roottest_cling_other_runsprintfselect](https://lcgapp-services.cern.ch/root-jenkins/job/root-pull",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12017#issuecomment-1380367571:493,secur,security,493,https://root.cern,https://github.com/root-project/root/pull/12017#issuecomment-1380367571,1,['secur'],['security']
Security,"Build failed on mac12/noimt.; Running on macphsft17.dyndns.cern.ch:/Users/sftnight/build/jenkins/workspace/root-pullrequests-build; [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/164025/console).; ### Warnings:; - [2023-01-12T13:42:03.909Z] /Users/sftnight/build/jenkins/workspace/root-pullrequests-build/root/core/base/src/TDirectory.cxx:1245:7: warning: 'sprintf' is deprecated: This function is provided for compatibility reasons only. Due to security concerns inherent in the design of sprintf(3), it is highly recommended that you use snprintf(3) instead. [-Wdeprecated-declarations] . ### Failing tests:; - [projectroot.roottest.cling.const.roottest_cling_const_run2](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/164025/testReport/projectroot.roottest.cling/const/roottest_cling_const_run2/); - [projectroot.roottest.cling.dict.roottest_cling_dict_rundefaultargs_compiled](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/164025/testReport/projectroot.roottest.cling/dict/roottest_cling_dict_rundefaultargs_compiled/); - [projectroot.roottest.cling.dict.roottest_cling_dict_exectemplatetemplateTest](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/164025/testReport/projectroot.roottest.cling/dict/roottest_cling_dict_exectemplatetemplateTest/); - [projectroot.roottest.cling.dict.roottest_cling_dict_runalgebra](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/164025/testReport/projectroot.roottest.cling/dict/roottest_cling_dict_runalgebra/); - [projectroot.roottest.cling.functionTemplate.roottest_cling_functionTemplate_testcint](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/164025/testReport/projectroot.roottest.cling/functionTemplate/roottest_cling_functionTemplate_testcint/); - [projectroot.roottest.cling.other.roottest_cling_other_runsprintfselect](https://lcgapp-services.cern.ch/root-jenkins/job/root-pull",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12008#issuecomment-1380404543:493,secur,security,493,https://root.cern,https://github.com/root-project/root/pull/12008#issuecomment-1380404543,1,['secur'],['security']
Security,"Build failed on mac12/noimt.; Running on macphsft17.dyndns.cern.ch:/Users/sftnight/build/jenkins/workspace/root-pullrequests-build; [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/164053/console).; ### Warnings:; - [2023-01-12T16:31:33.816Z] /Users/sftnight/build/jenkins/workspace/root-pullrequests-build/root/core/base/src/TDirectory.cxx:1245:7: warning: 'sprintf' is deprecated: This function is provided for compatibility reasons only. Due to security concerns inherent in the design of sprintf(3), it is highly recommended that you use snprintf(3) instead. [-Wdeprecated-declarations] . ### Failing tests:; - [projectroot.roottest.cling.const.roottest_cling_const_run2](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/164053/testReport/projectroot.roottest.cling/const/roottest_cling_const_run2/); - [projectroot.roottest.cling.dict.roottest_cling_dict_rundefaultargs_compiled](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/164053/testReport/projectroot.roottest.cling/dict/roottest_cling_dict_rundefaultargs_compiled/); - [projectroot.roottest.cling.dict.roottest_cling_dict_exectemplatetemplateTest](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/164053/testReport/projectroot.roottest.cling/dict/roottest_cling_dict_exectemplatetemplateTest/); - [projectroot.roottest.cling.dict.roottest_cling_dict_runalgebra](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/164053/testReport/projectroot.roottest.cling/dict/roottest_cling_dict_runalgebra/); - [projectroot.roottest.cling.functionTemplate.roottest_cling_functionTemplate_testcint](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/164053/testReport/projectroot.roottest.cling/functionTemplate/roottest_cling_functionTemplate_testcint/); - [projectroot.roottest.cling.other.roottest_cling_other_runsprintfselect](https://lcgapp-services.cern.ch/root-jenkins/job/root-pull",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12017#issuecomment-1380717746:493,secur,security,493,https://root.cern,https://github.com/root-project/root/pull/12017#issuecomment-1380717746,1,['secur'],['security']
Security,"Build failed on mac12/noimt.; Running on macphsft17.dyndns.cern.ch:/Users/sftnight/build/jenkins/workspace/root-pullrequests-build; [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/164081/console).; ### Warnings:; - [2023-01-12T18:34:18.641Z] /Users/sftnight/build/jenkins/workspace/root-pullrequests-build/root/core/base/src/TDirectory.cxx:1245:7: warning: 'sprintf' is deprecated: This function is provided for compatibility reasons only. Due to security concerns inherent in the design of sprintf(3), it is highly recommended that you use snprintf(3) instead. [-Wdeprecated-declarations] . ### Failing tests:; - [projectroot.roottest.root.meta.evolution.roottest_root_meta_evolution_execBaseClass_v1](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/164081/testReport/projectroot.roottest.root.meta/evolution/roottest_root_meta_evolution_execBaseClass_v1/); - [projectroot.roottest.root.meta.evolution.roottest_root_meta_evolution_execMixedBaseClass_v1](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/164081/testReport/projectroot.roottest.root.meta/evolution/roottest_root_meta_evolution_execMixedBaseClass_v1/); - [projectroot.roottest.root.io.complex.roottest_root_io_complex_writecomplex](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/164081/testReport/projectroot.roottest.root.io/complex/roottest_root_io_complex_writecomplex/); - [projectroot.roottest.root.io.issue-7754.roottest_root_io_issue_7754_write_cmssw_class_v2](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/164081/testReport/projectroot.roottest.root.io/issue-7754/roottest_root_io_issue_7754_write_cmssw_class_v2/); - [projectroot.roottest.root.io.issue-7754.roottest_root_io_issue_7754_read_mwe_0](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/164081/testReport/projectroot.roottest.root.io/issue-7754/roottest_root_io_issue_7754_read_mwe_0/); - [projec",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12018#issuecomment-1380879175:493,secur,security,493,https://root.cern,https://github.com/root-project/root/pull/12018#issuecomment-1380879175,1,['secur'],['security']
Security,"Build failed on mac12/noimt.; Running on macphsft17.dyndns.cern.ch:/Users/sftnight/build/jenkins/workspace/root-pullrequests-build; [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/164109/console).; ### Warnings:; - [2023-01-12T21:28:13.707Z] /Users/sftnight/build/jenkins/workspace/root-pullrequests-build/root/core/base/src/TDirectory.cxx:1245:7: warning: 'sprintf' is deprecated: This function is provided for compatibility reasons only. Due to security concerns inherent in the design of sprintf(3), it is highly recommended that you use snprintf(3) instead. [-Wdeprecated-declarations] . ### Failing tests:; - [projectroot.roottest.cling.const.roottest_cling_const_run2](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/164109/testReport/projectroot.roottest.cling/const/roottest_cling_const_run2/); - [projectroot.roottest.cling.dict.roottest_cling_dict_rundefaultargs_compiled](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/164109/testReport/projectroot.roottest.cling/dict/roottest_cling_dict_rundefaultargs_compiled/); - [projectroot.roottest.cling.dict.roottest_cling_dict_exectemplatetemplateTest](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/164109/testReport/projectroot.roottest.cling/dict/roottest_cling_dict_exectemplatetemplateTest/); - [projectroot.roottest.cling.dict.roottest_cling_dict_runalgebra](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/164109/testReport/projectroot.roottest.cling/dict/roottest_cling_dict_runalgebra/); - [projectroot.roottest.cling.functionTemplate.roottest_cling_functionTemplate_testcint](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/164109/testReport/projectroot.roottest.cling/functionTemplate/roottest_cling_functionTemplate_testcint/); - [projectroot.roottest.cling.other.roottest_cling_other_runsprintfselect](https://lcgapp-services.cern.ch/root-jenkins/job/root-pull",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12022#issuecomment-1381034392:493,secur,security,493,https://root.cern,https://github.com/root-project/root/pull/12022#issuecomment-1381034392,1,['secur'],['security']
Security,"Build failed on mac12/noimt.; Running on macphsft17.dyndns.cern.ch:/Users/sftnight/build/jenkins/workspace/root-pullrequests-build; [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/164130/console).; ### Warnings:; - [2023-01-12T22:43:14.600Z] /Users/sftnight/build/jenkins/workspace/root-pullrequests-build/root/core/base/src/TDirectory.cxx:1245:7: warning: 'sprintf' is deprecated: This function is provided for compatibility reasons only. Due to security concerns inherent in the design of sprintf(3), it is highly recommended that you use snprintf(3) instead. [-Wdeprecated-declarations] . ### Failing tests:; - [projectroot.roottest.cling.const.roottest_cling_const_run2](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/164130/testReport/projectroot.roottest.cling/const/roottest_cling_const_run2/); - [projectroot.roottest.cling.dict.roottest_cling_dict_rundefaultargs_compiled](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/164130/testReport/projectroot.roottest.cling/dict/roottest_cling_dict_rundefaultargs_compiled/); - [projectroot.roottest.cling.dict.roottest_cling_dict_exectemplatetemplateTest](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/164130/testReport/projectroot.roottest.cling/dict/roottest_cling_dict_exectemplatetemplateTest/); - [projectroot.roottest.cling.dict.roottest_cling_dict_runalgebra](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/164130/testReport/projectroot.roottest.cling/dict/roottest_cling_dict_runalgebra/); - [projectroot.roottest.cling.functionTemplate.roottest_cling_functionTemplate_testcint](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/164130/testReport/projectroot.roottest.cling/functionTemplate/roottest_cling_functionTemplate_testcint/); - [projectroot.roottest.cling.other.roottest_cling_other_runsprintfselect](https://lcgapp-services.cern.ch/root-jenkins/job/root-pull",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12022#issuecomment-1381091460:493,secur,security,493,https://root.cern,https://github.com/root-project/root/pull/12022#issuecomment-1381091460,1,['secur'],['security']
Security,"Build failed on mac12/noimt.; Running on macphsft17.dyndns.cern.ch:/Users/sftnight/build/jenkins/workspace/root-pullrequests-build; [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/164145/console).; ### Warnings:; - [2023-01-13T08:22:20.490Z] /Users/sftnight/build/jenkins/workspace/root-pullrequests-build/root/core/base/src/TDirectory.cxx:1245:7: warning: 'sprintf' is deprecated: This function is provided for compatibility reasons only. Due to security concerns inherent in the design of sprintf(3), it is highly recommended that you use snprintf(3) instead. [-Wdeprecated-declarations] . ### Failing tests:; - [projectroot.roottest.cling.const.roottest_cling_const_run2](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/164145/testReport/projectroot.roottest.cling/const/roottest_cling_const_run2/); - [projectroot.roottest.cling.dict.roottest_cling_dict_rundefaultargs_compiled](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/164145/testReport/projectroot.roottest.cling/dict/roottest_cling_dict_rundefaultargs_compiled/); - [projectroot.roottest.cling.dict.roottest_cling_dict_exectemplatetemplateTest](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/164145/testReport/projectroot.roottest.cling/dict/roottest_cling_dict_exectemplatetemplateTest/); - [projectroot.roottest.cling.dict.roottest_cling_dict_runalgebra](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/164145/testReport/projectroot.roottest.cling/dict/roottest_cling_dict_runalgebra/); - [projectroot.roottest.cling.functionTemplate.roottest_cling_functionTemplate_testcint](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/164145/testReport/projectroot.roottest.cling/functionTemplate/roottest_cling_functionTemplate_testcint/); - [projectroot.roottest.cling.other.roottest_cling_other_runsprintfselect](https://lcgapp-services.cern.ch/root-jenkins/job/root-pull",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12019#issuecomment-1381489611:493,secur,security,493,https://root.cern,https://github.com/root-project/root/pull/12019#issuecomment-1381489611,1,['secur'],['security']
Security,"Build failed on mac12/noimt.; Running on macphsft17.dyndns.cern.ch:/Users/sftnight/build/jenkins/workspace/root-pullrequests-build; [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/164153/console).; ### Warnings:; - [2023-01-13T12:35:18.342Z] /Users/sftnight/build/jenkins/workspace/root-pullrequests-build/root/core/base/src/TDirectory.cxx:1245:7: warning: 'sprintf' is deprecated: This function is provided for compatibility reasons only. Due to security concerns inherent in the design of sprintf(3), it is highly recommended that you use snprintf(3) instead. [-Wdeprecated-declarations] . ### Failing tests:; - [projectroot.roottest.cling.const.roottest_cling_const_run2](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/164153/testReport/projectroot.roottest.cling/const/roottest_cling_const_run2/); - [projectroot.roottest.cling.dict.roottest_cling_dict_rundefaultargs_compiled](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/164153/testReport/projectroot.roottest.cling/dict/roottest_cling_dict_rundefaultargs_compiled/); - [projectroot.roottest.cling.dict.roottest_cling_dict_exectemplatetemplateTest](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/164153/testReport/projectroot.roottest.cling/dict/roottest_cling_dict_exectemplatetemplateTest/); - [projectroot.roottest.cling.dict.roottest_cling_dict_runalgebra](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/164153/testReport/projectroot.roottest.cling/dict/roottest_cling_dict_runalgebra/); - [projectroot.roottest.cling.functionTemplate.roottest_cling_functionTemplate_testcint](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/164153/testReport/projectroot.roottest.cling/functionTemplate/roottest_cling_functionTemplate_testcint/); - [projectroot.roottest.cling.other.roottest_cling_other_runsprintfselect](https://lcgapp-services.cern.ch/root-jenkins/job/root-pull",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12024#issuecomment-1381818511:493,secur,security,493,https://root.cern,https://github.com/root-project/root/pull/12024#issuecomment-1381818511,1,['secur'],['security']
Security,"Build failed on mac12/noimt.; Running on macphsft17.dyndns.cern.ch:/Users/sftnight/build/jenkins/workspace/root-pullrequests-build; [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/164181/console).; ### Warnings:; - [2023-01-13T16:00:22.594Z] /Users/sftnight/build/jenkins/workspace/root-pullrequests-build/root/core/base/src/TDirectory.cxx:1245:7: warning: 'sprintf' is deprecated: This function is provided for compatibility reasons only. Due to security concerns inherent in the design of sprintf(3), it is highly recommended that you use snprintf(3) instead. [-Wdeprecated-declarations] . ### Failing tests:; - [projectroot.roottest.cling.const.roottest_cling_const_run2](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/164181/testReport/projectroot.roottest.cling/const/roottest_cling_const_run2/); - [projectroot.roottest.cling.dict.roottest_cling_dict_rundefaultargs_compiled](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/164181/testReport/projectroot.roottest.cling/dict/roottest_cling_dict_rundefaultargs_compiled/); - [projectroot.roottest.cling.dict.roottest_cling_dict_exectemplatetemplateTest](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/164181/testReport/projectroot.roottest.cling/dict/roottest_cling_dict_exectemplatetemplateTest/); - [projectroot.roottest.cling.dict.roottest_cling_dict_runalgebra](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/164181/testReport/projectroot.roottest.cling/dict/roottest_cling_dict_runalgebra/); - [projectroot.roottest.cling.functionTemplate.roottest_cling_functionTemplate_testcint](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/164181/testReport/projectroot.roottest.cling/functionTemplate/roottest_cling_functionTemplate_testcint/); - [projectroot.roottest.cling.other.roottest_cling_other_runsprintfselect](https://lcgapp-services.cern.ch/root-jenkins/job/root-pull",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12026#issuecomment-1382083279:493,secur,security,493,https://root.cern,https://github.com/root-project/root/pull/12026#issuecomment-1382083279,1,['secur'],['security']
Security,"Build failed on mac12/noimt.; Running on macphsft17.dyndns.cern.ch:/Users/sftnight/build/jenkins/workspace/root-pullrequests-build; [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/164195/console).; ### Warnings:; - [2023-01-13T16:30:21.184Z] /Users/sftnight/build/jenkins/workspace/root-pullrequests-build/root/core/base/src/TDirectory.cxx:1245:7: warning: 'sprintf' is deprecated: This function is provided for compatibility reasons only. Due to security concerns inherent in the design of sprintf(3), it is highly recommended that you use snprintf(3) instead. [-Wdeprecated-declarations] . ### Failing tests:; - [projectroot.roottest.cling.const.roottest_cling_const_run2](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/164195/testReport/projectroot.roottest.cling/const/roottest_cling_const_run2/); - [projectroot.roottest.cling.dict.roottest_cling_dict_rundefaultargs_compiled](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/164195/testReport/projectroot.roottest.cling/dict/roottest_cling_dict_rundefaultargs_compiled/); - [projectroot.roottest.cling.dict.roottest_cling_dict_exectemplatetemplateTest](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/164195/testReport/projectroot.roottest.cling/dict/roottest_cling_dict_exectemplatetemplateTest/); - [projectroot.roottest.cling.dict.roottest_cling_dict_runalgebra](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/164195/testReport/projectroot.roottest.cling/dict/roottest_cling_dict_runalgebra/); - [projectroot.roottest.cling.functionTemplate.roottest_cling_functionTemplate_testcint](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/164195/testReport/projectroot.roottest.cling/functionTemplate/roottest_cling_functionTemplate_testcint/); - [projectroot.roottest.cling.other.roottest_cling_other_runsprintfselect](https://lcgapp-services.cern.ch/root-jenkins/job/root-pull",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12018#issuecomment-1382132015:493,secur,security,493,https://root.cern,https://github.com/root-project/root/pull/12018#issuecomment-1382132015,1,['secur'],['security']
Security,"Build failed on mac12/noimt.; Running on macphsft17.dyndns.cern.ch:/Users/sftnight/build/jenkins/workspace/root-pullrequests-build; [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/164209/console).; ### Warnings:; - [2023-01-13T17:56:33.407Z] /Users/sftnight/build/jenkins/workspace/root-pullrequests-build/root/core/base/src/TDirectory.cxx:1299:7: warning: 'sprintf' is deprecated: This function is provided for compatibility reasons only. Due to security concerns inherent in the design of sprintf(3), it is highly recommended that you use snprintf(3) instead. [-Wdeprecated-declarations] . ### Failing tests:; - [projectroot.roottest.cling.const.roottest_cling_const_run2](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/164209/testReport/projectroot.roottest.cling/const/roottest_cling_const_run2/); - [projectroot.roottest.cling.dict.roottest_cling_dict_rundefaultargs_compiled](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/164209/testReport/projectroot.roottest.cling/dict/roottest_cling_dict_rundefaultargs_compiled/); - [projectroot.roottest.cling.dict.roottest_cling_dict_exectemplatetemplateTest](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/164209/testReport/projectroot.roottest.cling/dict/roottest_cling_dict_exectemplatetemplateTest/); - [projectroot.roottest.cling.dict.roottest_cling_dict_runalgebra](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/164209/testReport/projectroot.roottest.cling/dict/roottest_cling_dict_runalgebra/); - [projectroot.roottest.cling.functionTemplate.roottest_cling_functionTemplate_testcint](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/164209/testReport/projectroot.roottest.cling/functionTemplate/roottest_cling_functionTemplate_testcint/); - [projectroot.roottest.cling.other.roottest_cling_other_runsprintfselect](https://lcgapp-services.cern.ch/root-jenkins/job/root-pull",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11956#issuecomment-1382229379:493,secur,security,493,https://root.cern,https://github.com/root-project/root/pull/11956#issuecomment-1382229379,1,['secur'],['security']
Security,"Build failed on mac12/noimt.; Running on macphsft17.dyndns.cern.ch:/Users/sftnight/build/jenkins/workspace/root-pullrequests-build; [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/164232/console).; ### Warnings:; - [2023-01-15T10:12:40.387Z] /Users/sftnight/build/jenkins/workspace/root-pullrequests-build/root/core/base/src/TDirectory.cxx:1245:7: warning: 'sprintf' is deprecated: This function is provided for compatibility reasons only. Due to security concerns inherent in the design of sprintf(3), it is highly recommended that you use snprintf(3) instead. [-Wdeprecated-declarations] . ### Failing tests:; - [projectroot.roottest.cling.const.roottest_cling_const_run2](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/164232/testReport/projectroot.roottest.cling/const/roottest_cling_const_run2/); - [projectroot.roottest.cling.dict.roottest_cling_dict_rundefaultargs_compiled](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/164232/testReport/projectroot.roottest.cling/dict/roottest_cling_dict_rundefaultargs_compiled/); - [projectroot.roottest.cling.dict.roottest_cling_dict_exectemplatetemplateTest](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/164232/testReport/projectroot.roottest.cling/dict/roottest_cling_dict_exectemplatetemplateTest/); - [projectroot.roottest.cling.dict.roottest_cling_dict_runalgebra](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/164232/testReport/projectroot.roottest.cling/dict/roottest_cling_dict_runalgebra/); - [projectroot.roottest.cling.functionTemplate.roottest_cling_functionTemplate_testcint](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/164232/testReport/projectroot.roottest.cling/functionTemplate/roottest_cling_functionTemplate_testcint/); - [projectroot.roottest.cling.other.roottest_cling_other_runsprintfselect](https://lcgapp-services.cern.ch/root-jenkins/job/root-pull",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12030#issuecomment-1383117475:493,secur,security,493,https://root.cern,https://github.com/root-project/root/pull/12030#issuecomment-1383117475,1,['secur'],['security']
Security,"Build failed on mac12/noimt.; Running on macphsft17.dyndns.cern.ch:/Users/sftnight/build/jenkins/workspace/root-pullrequests-build; [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/164253/console).; ### Warnings:; - [2023-01-15T11:46:33.738Z] /Users/sftnight/build/jenkins/workspace/root-pullrequests-build/root/core/base/src/TDirectory.cxx:1245:7: warning: 'sprintf' is deprecated: This function is provided for compatibility reasons only. Due to security concerns inherent in the design of sprintf(3), it is highly recommended that you use snprintf(3) instead. [-Wdeprecated-declarations] . ### Failing tests:; - [projectroot.roottest.cling.const.roottest_cling_const_run2](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/164253/testReport/projectroot.roottest.cling/const/roottest_cling_const_run2/); - [projectroot.roottest.cling.dict.roottest_cling_dict_rundefaultargs_compiled](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/164253/testReport/projectroot.roottest.cling/dict/roottest_cling_dict_rundefaultargs_compiled/); - [projectroot.roottest.cling.dict.roottest_cling_dict_exectemplatetemplateTest](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/164253/testReport/projectroot.roottest.cling/dict/roottest_cling_dict_exectemplatetemplateTest/); - [projectroot.roottest.cling.dict.roottest_cling_dict_runalgebra](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/164253/testReport/projectroot.roottest.cling/dict/roottest_cling_dict_runalgebra/); - [projectroot.roottest.cling.functionTemplate.roottest_cling_functionTemplate_testcint](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/164253/testReport/projectroot.roottest.cling/functionTemplate/roottest_cling_functionTemplate_testcint/); - [projectroot.roottest.cling.other.roottest_cling_other_runsprintfselect](https://lcgapp-services.cern.ch/root-jenkins/job/root-pull",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12033#issuecomment-1383135338:493,secur,security,493,https://root.cern,https://github.com/root-project/root/pull/12033#issuecomment-1383135338,1,['secur'],['security']
Security,"Build failed on mac12/noimt.; Running on macphsft17.dyndns.cern.ch:/Users/sftnight/build/jenkins/workspace/root-pullrequests-build; [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/164288/console).; ### Warnings:; - [2023-01-16T11:36:31.260Z] /Users/sftnight/build/jenkins/workspace/root-pullrequests-build/root/core/base/src/TDirectory.cxx:1245:7: warning: 'sprintf' is deprecated: This function is provided for compatibility reasons only. Due to security concerns inherent in the design of sprintf(3), it is highly recommended that you use snprintf(3) instead. [-Wdeprecated-declarations] . ### Failing tests:; - [projectroot.roottest.cling.const.roottest_cling_const_run2](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/164288/testReport/projectroot.roottest.cling/const/roottest_cling_const_run2/); - [projectroot.roottest.cling.dict.roottest_cling_dict_rundefaultargs_compiled](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/164288/testReport/projectroot.roottest.cling/dict/roottest_cling_dict_rundefaultargs_compiled/); - [projectroot.roottest.cling.dict.roottest_cling_dict_exectemplatetemplateTest](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/164288/testReport/projectroot.roottest.cling/dict/roottest_cling_dict_exectemplatetemplateTest/); - [projectroot.roottest.cling.dict.roottest_cling_dict_runalgebra](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/164288/testReport/projectroot.roottest.cling/dict/roottest_cling_dict_runalgebra/); - [projectroot.roottest.cling.functionTemplate.roottest_cling_functionTemplate_testcint](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/164288/testReport/projectroot.roottest.cling/functionTemplate/roottest_cling_functionTemplate_testcint/); - [projectroot.roottest.cling.other.roottest_cling_other_runsprintfselect](https://lcgapp-services.cern.ch/root-jenkins/job/root-pull",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12033#issuecomment-1383949331:493,secur,security,493,https://root.cern,https://github.com/root-project/root/pull/12033#issuecomment-1383949331,1,['secur'],['security']
Security,"Build failed on mac12/noimt.; Running on macphsft17.dyndns.cern.ch:/Users/sftnight/build/jenkins/workspace/root-pullrequests-build; [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/164952/console).; ### Warnings:; - [2023-01-20T11:18:38.740Z] /Users/sftnight/build/jenkins/workspace/root-pullrequests-build/root/core/base/src/TDirectory.cxx:1245:7: warning: 'sprintf' is deprecated: This function is provided for compatibility reasons only. Due to security concerns inherent in the design of sprintf(3), it is highly recommended that you use snprintf(3) instead. [-Wdeprecated-declarations] . ### Failing tests:; - [projectroot.roottest.cling.const.roottest_cling_const_run2](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/164952/testReport/projectroot.roottest.cling/const/roottest_cling_const_run2/); - [projectroot.roottest.cling.dict.roottest_cling_dict_rundefaultargs_compiled](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/164952/testReport/projectroot.roottest.cling/dict/roottest_cling_dict_rundefaultargs_compiled/); - [projectroot.roottest.cling.dict.roottest_cling_dict_exectemplatetemplateTest](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/164952/testReport/projectroot.roottest.cling/dict/roottest_cling_dict_exectemplatetemplateTest/); - [projectroot.roottest.cling.dict.roottest_cling_dict_runalgebra](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/164952/testReport/projectroot.roottest.cling/dict/roottest_cling_dict_runalgebra/); - [projectroot.roottest.cling.functionTemplate.roottest_cling_functionTemplate_testcint](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/164952/testReport/projectroot.roottest.cling/functionTemplate/roottest_cling_functionTemplate_testcint/); - [projectroot.roottest.cling.parsing.roottest_cling_parsing_ptrconst](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12070#issuecomment-1398277000:493,secur,security,493,https://root.cern,https://github.com/root-project/root/pull/12070#issuecomment-1398277000,1,['secur'],['security']
Security,"Build failed on mac12/noimt.; Running on macphsft17.dyndns.cern.ch:/Users/sftnight/build/jenkins/workspace/root-pullrequests-build; [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/164959/console).; ### Warnings:; - [2023-01-20T12:02:32.107Z] /Users/sftnight/build/jenkins/workspace/root-pullrequests-build/root/core/base/src/TDirectory.cxx:1245:7: warning: 'sprintf' is deprecated: This function is provided for compatibility reasons only. Due to security concerns inherent in the design of sprintf(3), it is highly recommended that you use snprintf(3) instead. [-Wdeprecated-declarations] . ### Failing tests:; - [projectroot.roottest.cling.const.roottest_cling_const_run2](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/164959/testReport/projectroot.roottest.cling/const/roottest_cling_const_run2/); - [projectroot.roottest.cling.dict.roottest_cling_dict_rundefaultargs_compiled](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/164959/testReport/projectroot.roottest.cling/dict/roottest_cling_dict_rundefaultargs_compiled/); - [projectroot.roottest.cling.dict.roottest_cling_dict_exectemplatetemplateTest](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/164959/testReport/projectroot.roottest.cling/dict/roottest_cling_dict_exectemplatetemplateTest/); - [projectroot.roottest.cling.dict.roottest_cling_dict_runalgebra](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/164959/testReport/projectroot.roottest.cling/dict/roottest_cling_dict_runalgebra/); - [projectroot.roottest.cling.functionTemplate.roottest_cling_functionTemplate_testcint](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/164959/testReport/projectroot.roottest.cling/functionTemplate/roottest_cling_functionTemplate_testcint/); - [projectroot.roottest.cling.parsing.roottest_cling_parsing_ptrconst](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12061#issuecomment-1398312451:493,secur,security,493,https://root.cern,https://github.com/root-project/root/pull/12061#issuecomment-1398312451,1,['secur'],['security']
Security,"Build failed on mac12/noimt.; Running on macphsft17.dyndns.cern.ch:/Users/sftnight/build/jenkins/workspace/root-pullrequests-build; [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/164966/console).; ### Warnings:; - [2023-01-20T12:31:50.946Z] /Users/sftnight/build/jenkins/workspace/root-pullrequests-build/root/core/base/src/TDirectory.cxx:1245:7: warning: 'sprintf' is deprecated: This function is provided for compatibility reasons only. Due to security concerns inherent in the design of sprintf(3), it is highly recommended that you use snprintf(3) instead. [-Wdeprecated-declarations] . ### Failing tests:; - [projectroot.roottest.root.meta.evolution.roottest_root_meta_evolution_execBaseClass_v1](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/164966/testReport/projectroot.roottest.root.meta/evolution/roottest_root_meta_evolution_execBaseClass_v1/); - [projectroot.roottest.root.meta.evolution.roottest_root_meta_evolution_execMixedBaseClass_v1](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/164966/testReport/projectroot.roottest.root.meta/evolution/roottest_root_meta_evolution_execMixedBaseClass_v1/); - [projectroot.roottest.root.io.issue-7754.roottest_root_io_issue_7754_write_cmssw_class_v2](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/164966/testReport/projectroot.roottest.root.io/issue-7754/roottest_root_io_issue_7754_write_cmssw_class_v2/); - [projectroot.roottest.root.io.issue-7754.roottest_root_io_issue_7754_read_mwe_0](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/164966/testReport/projectroot.roottest.root.io/issue-7754/roottest_root_io_issue_7754_read_mwe_0/); - [projectroot.roottest.root.io.issue-9899.roottest_root_io_issue_9899_write_cmssw_class_v2](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/164966/testReport/projectroot.roottest.root.io/issue-9899/roottest_root_io_issue_9899_write",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12044#issuecomment-1398340124:493,secur,security,493,https://root.cern,https://github.com/root-project/root/pull/12044#issuecomment-1398340124,1,['secur'],['security']
Security,"Build failed on mac12/noimt.; Running on macphsft17.dyndns.cern.ch:/Users/sftnight/build/jenkins/workspace/root-pullrequests-build; [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/164980/console).; ### Warnings:; - [2023-01-20T13:01:30.895Z] /Users/sftnight/build/jenkins/workspace/root-pullrequests-build/root/core/base/src/TDirectory.cxx:1245:7: warning: 'sprintf' is deprecated: This function is provided for compatibility reasons only. Due to security concerns inherent in the design of sprintf(3), it is highly recommended that you use snprintf(3) instead. [-Wdeprecated-declarations] . ### Failing tests:; - [projectroot.roottest.root.meta.evolution.roottest_root_meta_evolution_execBaseClass_v1](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/164980/testReport/projectroot.roottest.root.meta/evolution/roottest_root_meta_evolution_execBaseClass_v1/); - [projectroot.roottest.root.meta.evolution.roottest_root_meta_evolution_execMixedBaseClass_v1](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/164980/testReport/projectroot.roottest.root.meta/evolution/roottest_root_meta_evolution_execMixedBaseClass_v1/); - [projectroot.roottest.root.io.issue-7754.roottest_root_io_issue_7754_write_cmssw_class_v2](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/164980/testReport/projectroot.roottest.root.io/issue-7754/roottest_root_io_issue_7754_write_cmssw_class_v2/); - [projectroot.roottest.root.io.issue-7754.roottest_root_io_issue_7754_read_mwe_0](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/164980/testReport/projectroot.roottest.root.io/issue-7754/roottest_root_io_issue_7754_read_mwe_0/); - [projectroot.roottest.root.io.issue-9899.roottest_root_io_issue_9899_write_cmssw_class_v2](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/164980/testReport/projectroot.roottest.root.io/issue-9899/roottest_root_io_issue_9899_write",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12026#issuecomment-1398383009:493,secur,security,493,https://root.cern,https://github.com/root-project/root/pull/12026#issuecomment-1398383009,1,['secur'],['security']
Security,"Build failed on mac12/noimt.; Running on macphsft17.dyndns.cern.ch:/Users/sftnight/build/jenkins/workspace/root-pullrequests-build; [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/164987/console).; ### Warnings:; - [2023-01-20T13:38:16.871Z] /Users/sftnight/build/jenkins/workspace/root-pullrequests-build/root/core/base/src/TDirectory.cxx:1297:7: warning: 'sprintf' is deprecated: This function is provided for compatibility reasons only. Due to security concerns inherent in the design of sprintf(3), it is highly recommended that you use snprintf(3) instead. [-Wdeprecated-declarations] . ### Failing tests:; - [projectroot.roottest.cling.const.roottest_cling_const_run2](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/164987/testReport/projectroot.roottest.cling/const/roottest_cling_const_run2/); - [projectroot.roottest.cling.dict.roottest_cling_dict_rundefaultargs_compiled](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/164987/testReport/projectroot.roottest.cling/dict/roottest_cling_dict_rundefaultargs_compiled/); - [projectroot.roottest.cling.dict.roottest_cling_dict_exectemplatetemplateTest](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/164987/testReport/projectroot.roottest.cling/dict/roottest_cling_dict_exectemplatetemplateTest/); - [projectroot.roottest.cling.dict.roottest_cling_dict_runalgebra](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/164987/testReport/projectroot.roottest.cling/dict/roottest_cling_dict_runalgebra/); - [projectroot.roottest.cling.functionTemplate.roottest_cling_functionTemplate_testcint](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/164987/testReport/projectroot.roottest.cling/functionTemplate/roottest_cling_functionTemplate_testcint/); - [projectroot.roottest.cling.other.roottest_cling_other_runsprintfselect](https://lcgapp-services.cern.ch/root-jenkins/job/root-pull",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12072#issuecomment-1398454661:493,secur,security,493,https://root.cern,https://github.com/root-project/root/pull/12072#issuecomment-1398454661,1,['secur'],['security']
Security,"Build failed on mac12/noimt.; Running on macphsft17.dyndns.cern.ch:/Users/sftnight/build/jenkins/workspace/root-pullrequests-build; [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/164997/console).; ### Warnings:; - [2023-01-20T14:21:38.529Z] /Users/sftnight/build/jenkins/workspace/root-pullrequests-build/root/core/base/src/TDirectory.cxx:1297:7: warning: 'sprintf' is deprecated: This function is provided for compatibility reasons only. Due to security concerns inherent in the design of sprintf(3), it is highly recommended that you use snprintf(3) instead. [-Wdeprecated-declarations] . ### Failing tests:; - [projectroot.roottest.root.meta.evolution.roottest_root_meta_evolution_execBaseClass_v1](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/164997/testReport/projectroot.roottest.root.meta/evolution/roottest_root_meta_evolution_execBaseClass_v1/); - [projectroot.roottest.root.meta.evolution.roottest_root_meta_evolution_execMixedBaseClass_v1](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/164997/testReport/projectroot.roottest.root.meta/evolution/roottest_root_meta_evolution_execMixedBaseClass_v1/); - [projectroot.roottest.root.io.issue-7754.roottest_root_io_issue_7754_write_cmssw_class_v2](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/164997/testReport/projectroot.roottest.root.io/issue-7754/roottest_root_io_issue_7754_write_cmssw_class_v2/); - [projectroot.roottest.root.io.issue-7754.roottest_root_io_issue_7754_read_mwe_0](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/164997/testReport/projectroot.roottest.root.io/issue-7754/roottest_root_io_issue_7754_read_mwe_0/); - [projectroot.roottest.root.io.issue-9899.roottest_root_io_issue_9899_write_cmssw_class_v2](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/164997/testReport/projectroot.roottest.root.io/issue-9899/roottest_root_io_issue_9899_write",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12074#issuecomment-1398504617:493,secur,security,493,https://root.cern,https://github.com/root-project/root/pull/12074#issuecomment-1398504617,1,['secur'],['security']
Security,"Build failed on mac12/noimt.; Running on macphsft17.dyndns.cern.ch:/Users/sftnight/build/jenkins/workspace/root-pullrequests-build; [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/165018/console).; ### Warnings:; - [2023-01-20T17:14:32.117Z] /Users/sftnight/build/jenkins/workspace/root-pullrequests-build/root/core/base/src/TDirectory.cxx:1297:7: warning: 'sprintf' is deprecated: This function is provided for compatibility reasons only. Due to security concerns inherent in the design of sprintf(3), it is highly recommended that you use snprintf(3) instead. [-Wdeprecated-declarations] . ### Failing tests:; - [projectroot.roottest.root.meta.evolution.roottest_root_meta_evolution_execBaseClass_v1](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/165018/testReport/projectroot.roottest.root.meta/evolution/roottest_root_meta_evolution_execBaseClass_v1/); - [projectroot.roottest.root.meta.evolution.roottest_root_meta_evolution_execMixedBaseClass_v1](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/165018/testReport/projectroot.roottest.root.meta/evolution/roottest_root_meta_evolution_execMixedBaseClass_v1/); - [projectroot.roottest.root.io.issue-7754.roottest_root_io_issue_7754_write_cmssw_class_v2](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/165018/testReport/projectroot.roottest.root.io/issue-7754/roottest_root_io_issue_7754_write_cmssw_class_v2/); - [projectroot.roottest.root.io.issue-7754.roottest_root_io_issue_7754_read_mwe_0](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/165018/testReport/projectroot.roottest.root.io/issue-7754/roottest_root_io_issue_7754_read_mwe_0/); - [projectroot.roottest.root.io.issue-9899.roottest_root_io_issue_9899_write_cmssw_class_v2](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/165018/testReport/projectroot.roottest.root.io/issue-9899/roottest_root_io_issue_9899_write",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11252#issuecomment-1398727440:493,secur,security,493,https://root.cern,https://github.com/root-project/root/pull/11252#issuecomment-1398727440,1,['secur'],['security']
Security,"Build failed on mac12/noimt.; Running on macphsft17.dyndns.cern.ch:/Users/sftnight/build/jenkins/workspace/root-pullrequests-build; [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/165033/console).; ### Errors:; - [2023-01-20T19:22:41.828Z] FAILED: tmva/pymva/CMakeFiles/PyMVA.dir/src/RModelParser_Keras.cxx.o ; - [2023-01-20T19:22:42.391Z] /Users/sftnight/build/jenkins/workspace/root-pullrequests-build/root/tmva/pymva/src/RModelParser_Keras.cxx:79:18: error: use of undeclared identifier 'MakeKerasDropout'; did you mean 'MakeKerasConcat'? ; - [2023-01-20T19:22:42.391Z] /Users/sftnight/build/jenkins/workspace/root-pullrequests-build/root/tmva/pymva/src/RModelParser_Keras.cxx:82:4: error: expected '}' . ### Warnings:; - [2023-01-20T19:21:14.884Z] /Users/sftnight/build/jenkins/workspace/root-pullrequests-build/root/core/base/src/TDirectory.cxx:1297:7: warning: 'sprintf' is deprecated: This function is provided for compatibility reasons only. Due to security concerns inherent in the design of sprintf(3), it is highly recommended that you use snprintf(3) instead. [-Wdeprecated-declarations]",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12076#issuecomment-1398831850:1003,secur,security,1003,https://root.cern,https://github.com/root-project/root/pull/12076#issuecomment-1398831850,1,['secur'],['security']
Security,"Build failed on mac12/noimt.; Running on macphsft17.dyndns.cern.ch:/Users/sftnight/build/jenkins/workspace/root-pullrequests-build; [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/165054/console).; ### Warnings:; - [2023-01-20T19:53:51.742Z] /Users/sftnight/build/jenkins/workspace/root-pullrequests-build/root/core/base/src/TDirectory.cxx:1292:7: warning: 'sprintf' is deprecated: This function is provided for compatibility reasons only. Due to security concerns inherent in the design of sprintf(3), it is highly recommended that you use snprintf(3) instead. [-Wdeprecated-declarations] . ### Failing tests:; - [projectroot.roottest.cling.const.roottest_cling_const_run2](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/165054/testReport/projectroot.roottest.cling/const/roottest_cling_const_run2/); - [projectroot.roottest.cling.dict.roottest_cling_dict_rundefaultargs_compiled](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/165054/testReport/projectroot.roottest.cling/dict/roottest_cling_dict_rundefaultargs_compiled/); - [projectroot.roottest.cling.dict.roottest_cling_dict_exectemplatetemplateTest](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/165054/testReport/projectroot.roottest.cling/dict/roottest_cling_dict_exectemplatetemplateTest/); - [projectroot.roottest.cling.dict.roottest_cling_dict_runalgebra](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/165054/testReport/projectroot.roottest.cling/dict/roottest_cling_dict_runalgebra/); - [projectroot.roottest.cling.functionTemplate.roottest_cling_functionTemplate_testcint](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/165054/testReport/projectroot.roottest.cling/functionTemplate/roottest_cling_functionTemplate_testcint/); - [projectroot.roottest.cling.parsing.roottest_cling_parsing_ptrconst](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12072#issuecomment-1398885842:493,secur,security,493,https://root.cern,https://github.com/root-project/root/pull/12072#issuecomment-1398885842,1,['secur'],['security']
Security,"Build failed on mac12/noimt.; Running on macphsft17.dyndns.cern.ch:/Users/sftnight/build/jenkins/workspace/root-pullrequests-build; [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/165096/console).; ### Warnings:; - [2023-01-20T21:43:05.081Z] /Users/sftnight/build/jenkins/workspace/root-pullrequests-build/root/core/base/src/TDirectory.cxx:1297:7: warning: 'sprintf' is deprecated: This function is provided for compatibility reasons only. Due to security concerns inherent in the design of sprintf(3), it is highly recommended that you use snprintf(3) instead. [-Wdeprecated-declarations] . ### Failing tests:; - [projectroot.roottest.cling.const.roottest_cling_const_run2](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/165096/testReport/projectroot.roottest.cling/const/roottest_cling_const_run2/); - [projectroot.roottest.cling.dict.roottest_cling_dict_rundefaultargs_compiled](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/165096/testReport/projectroot.roottest.cling/dict/roottest_cling_dict_rundefaultargs_compiled/); - [projectroot.roottest.cling.dict.roottest_cling_dict_exectemplatetemplateTest](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/165096/testReport/projectroot.roottest.cling/dict/roottest_cling_dict_exectemplatetemplateTest/); - [projectroot.roottest.cling.dict.roottest_cling_dict_runalgebra](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/165096/testReport/projectroot.roottest.cling/dict/roottest_cling_dict_runalgebra/); - [projectroot.roottest.cling.functionTemplate.roottest_cling_functionTemplate_testcint](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/165096/testReport/projectroot.roottest.cling/functionTemplate/roottest_cling_functionTemplate_testcint/); - [projectroot.roottest.cling.parsing.roottest_cling_parsing_ptrconst](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12073#issuecomment-1399008089:493,secur,security,493,https://root.cern,https://github.com/root-project/root/pull/12073#issuecomment-1399008089,1,['secur'],['security']
Security,"Build failed on mac12/noimt.; Running on macphsft17.dyndns.cern.ch:/Users/sftnight/build/jenkins/workspace/root-pullrequests-build; [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/165166/console).; ### Warnings:; - [2023-01-21T03:52:52.801Z] /Users/sftnight/build/jenkins/workspace/root-pullrequests-build/root/core/base/src/TDirectory.cxx:1297:7: warning: 'sprintf' is deprecated: This function is provided for compatibility reasons only. Due to security concerns inherent in the design of sprintf(3), it is highly recommended that you use snprintf(3) instead. [-Wdeprecated-declarations] . ### Failing tests:; - [projectroot.roottest.root.meta.evolution.roottest_root_meta_evolution_execBaseClass_v1](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/165166/testReport/projectroot.roottest.root.meta/evolution/roottest_root_meta_evolution_execBaseClass_v1/); - [projectroot.roottest.root.meta.evolution.roottest_root_meta_evolution_execMixedBaseClass_v1](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/165166/testReport/projectroot.roottest.root.meta/evolution/roottest_root_meta_evolution_execMixedBaseClass_v1/); - [projectroot.roottest.root.io.issue-7754.roottest_root_io_issue_7754_write_cmssw_class_v2](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/165166/testReport/projectroot.roottest.root.io/issue-7754/roottest_root_io_issue_7754_write_cmssw_class_v2/); - [projectroot.roottest.root.io.issue-9899.roottest_root_io_issue_9899_write_cmssw_class_v2](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/165166/testReport/projectroot.roottest.root.io/issue-9899/roottest_root_io_issue_9899_write_cmssw_class_v2/); - [projectroot.roottest.root.io.issue-7754.roottest_root_io_issue_7754_read_mwe_0](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/165166/testReport/projectroot.roottest.root.io/issue-7754/roottest_root_io_issue_",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12076#issuecomment-1399178291:493,secur,security,493,https://root.cern,https://github.com/root-project/root/pull/12076#issuecomment-1399178291,1,['secur'],['security']
Security,"Build failed on mac12/noimt.; Running on macphsft17.dyndns.cern.ch:/Users/sftnight/build/jenkins/workspace/root-pullrequests-build; [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/165209/console).; ### Warnings:; - [2023-01-21T19:51:18.262Z] /Users/sftnight/build/jenkins/workspace/root-pullrequests-build/root/core/base/src/TDirectory.cxx:1297:7: warning: 'sprintf' is deprecated: This function is provided for compatibility reasons only. Due to security concerns inherent in the design of sprintf(3), it is highly recommended that you use snprintf(3) instead. [-Wdeprecated-declarations] . ### Failing tests:; - [projectroot.roottest.cling.const.roottest_cling_const_run2](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/165209/testReport/projectroot.roottest.cling/const/roottest_cling_const_run2/); - [projectroot.roottest.cling.dict.roottest_cling_dict_rundefaultargs_compiled](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/165209/testReport/projectroot.roottest.cling/dict/roottest_cling_dict_rundefaultargs_compiled/); - [projectroot.roottest.cling.dict.roottest_cling_dict_exectemplatetemplateTest](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/165209/testReport/projectroot.roottest.cling/dict/roottest_cling_dict_exectemplatetemplateTest/); - [projectroot.roottest.cling.dict.roottest_cling_dict_runalgebra](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/165209/testReport/projectroot.roottest.cling/dict/roottest_cling_dict_runalgebra/); - [projectroot.roottest.cling.functionTemplate.roottest_cling_functionTemplate_testcint](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/165209/testReport/projectroot.roottest.cling/functionTemplate/roottest_cling_functionTemplate_testcint/); - [projectroot.roottest.cling.parsing.roottest_cling_parsing_ptrconst](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11466#issuecomment-1399324927:493,secur,security,493,https://root.cern,https://github.com/root-project/root/pull/11466#issuecomment-1399324927,1,['secur'],['security']
Security,"Build failed on mac12/noimt.; Running on macphsft17.dyndns.cern.ch:/Users/sftnight/build/jenkins/workspace/root-pullrequests-build; [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/165230/console).; ### Warnings:; - [2023-01-22T07:38:44.658Z] /Users/sftnight/build/jenkins/workspace/root-pullrequests-build/root/core/base/src/TDirectory.cxx:1297:7: warning: 'sprintf' is deprecated: This function is provided for compatibility reasons only. Due to security concerns inherent in the design of sprintf(3), it is highly recommended that you use snprintf(3) instead. [-Wdeprecated-declarations] . ### Failing tests:; - [projectroot.roottest.cling.const.roottest_cling_const_run2](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/165230/testReport/projectroot.roottest.cling/const/roottest_cling_const_run2/); - [projectroot.roottest.cling.dict.roottest_cling_dict_rundefaultargs_compiled](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/165230/testReport/projectroot.roottest.cling/dict/roottest_cling_dict_rundefaultargs_compiled/); - [projectroot.roottest.cling.dict.roottest_cling_dict_exectemplatetemplateTest](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/165230/testReport/projectroot.roottest.cling/dict/roottest_cling_dict_exectemplatetemplateTest/); - [projectroot.roottest.cling.dict.roottest_cling_dict_runalgebra](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/165230/testReport/projectroot.roottest.cling/dict/roottest_cling_dict_runalgebra/); - [projectroot.roottest.cling.functionTemplate.roottest_cling_functionTemplate_testcint](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/165230/testReport/projectroot.roottest.cling/functionTemplate/roottest_cling_functionTemplate_testcint/); - [projectroot.roottest.cling.parsing.roottest_cling_parsing_ptrconst](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12082#issuecomment-1399426252:493,secur,security,493,https://root.cern,https://github.com/root-project/root/pull/12082#issuecomment-1399426252,1,['secur'],['security']
Security,"Build failed on mac12/noimt.; Running on macphsft17.dyndns.cern.ch:/Users/sftnight/build/jenkins/workspace/root-pullrequests-build; [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/165252/console).; ### Warnings:; - [2023-01-22T12:39:00.701Z] /Users/sftnight/build/jenkins/workspace/root-pullrequests-build/root/core/base/src/TDirectory.cxx:1292:7: warning: 'sprintf' is deprecated: This function is provided for compatibility reasons only. Due to security concerns inherent in the design of sprintf(3), it is highly recommended that you use snprintf(3) instead. [-Wdeprecated-declarations] . ### Failing tests:; - [projectroot.roottest.cling.const.roottest_cling_const_run2](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/165252/testReport/projectroot.roottest.cling/const/roottest_cling_const_run2/); - [projectroot.roottest.cling.dict.roottest_cling_dict_rundefaultargs_compiled](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/165252/testReport/projectroot.roottest.cling/dict/roottest_cling_dict_rundefaultargs_compiled/); - [projectroot.roottest.cling.dict.roottest_cling_dict_exectemplatetemplateTest](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/165252/testReport/projectroot.roottest.cling/dict/roottest_cling_dict_exectemplatetemplateTest/); - [projectroot.roottest.cling.dict.roottest_cling_dict_runalgebra](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/165252/testReport/projectroot.roottest.cling/dict/roottest_cling_dict_runalgebra/); - [projectroot.roottest.cling.functionTemplate.roottest_cling_functionTemplate_testcint](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/165252/testReport/projectroot.roottest.cling/functionTemplate/roottest_cling_functionTemplate_testcint/); - [projectroot.roottest.cling.parsing.roottest_cling_parsing_ptrconst](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12083#issuecomment-1399481626:493,secur,security,493,https://root.cern,https://github.com/root-project/root/pull/12083#issuecomment-1399481626,1,['secur'],['security']
Security,"Build failed on mac12/noimt.; Running on macphsft17.dyndns.cern.ch:/Users/sftnight/build/jenkins/workspace/root-pullrequests-build; [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/165295/console).; ### Warnings:; - [2023-01-23T08:08:26.916Z] /Users/sftnight/build/jenkins/workspace/root-pullrequests-build/root/core/base/src/TDirectory.cxx:1297:7: warning: 'sprintf' is deprecated: This function is provided for compatibility reasons only. Due to security concerns inherent in the design of sprintf(3), it is highly recommended that you use snprintf(3) instead. [-Wdeprecated-declarations] . ### Failing tests:; - [projectroot.roottest.cling.const.roottest_cling_const_run2](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/165295/testReport/projectroot.roottest.cling/const/roottest_cling_const_run2/); - [projectroot.roottest.cling.dict.roottest_cling_dict_rundefaultargs_compiled](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/165295/testReport/projectroot.roottest.cling/dict/roottest_cling_dict_rundefaultargs_compiled/); - [projectroot.roottest.cling.dict.roottest_cling_dict_exectemplatetemplateTest](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/165295/testReport/projectroot.roottest.cling/dict/roottest_cling_dict_exectemplatetemplateTest/); - [projectroot.roottest.cling.dict.roottest_cling_dict_runalgebra](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/165295/testReport/projectroot.roottest.cling/dict/roottest_cling_dict_runalgebra/); - [projectroot.roottest.cling.functionTemplate.roottest_cling_functionTemplate_testcint](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/165295/testReport/projectroot.roottest.cling/functionTemplate/roottest_cling_functionTemplate_testcint/); - [projectroot.roottest.cling.parsing.roottest_cling_parsing_ptrconst](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12084#issuecomment-1399981933:493,secur,security,493,https://root.cern,https://github.com/root-project/root/pull/12084#issuecomment-1399981933,1,['secur'],['security']
Security,"Build failed on mac12/noimt.; Running on macphsft17.dyndns.cern.ch:/Users/sftnight/build/jenkins/workspace/root-pullrequests-build; [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/165316/console).; ### Warnings:; - [2023-01-23T08:52:04.795Z] /Users/sftnight/build/jenkins/workspace/root-pullrequests-build/root/core/base/src/TDirectory.cxx:1297:7: warning: 'sprintf' is deprecated: This function is provided for compatibility reasons only. Due to security concerns inherent in the design of sprintf(3), it is highly recommended that you use snprintf(3) instead. [-Wdeprecated-declarations] . ### Failing tests:; - [projectroot.roottest.cling.const.roottest_cling_const_run2](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/165316/testReport/projectroot.roottest.cling/const/roottest_cling_const_run2/); - [projectroot.roottest.cling.dict.roottest_cling_dict_rundefaultargs_compiled](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/165316/testReport/projectroot.roottest.cling/dict/roottest_cling_dict_rundefaultargs_compiled/); - [projectroot.roottest.cling.dict.roottest_cling_dict_exectemplatetemplateTest](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/165316/testReport/projectroot.roottest.cling/dict/roottest_cling_dict_exectemplatetemplateTest/); - [projectroot.roottest.cling.dict.roottest_cling_dict_runalgebra](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/165316/testReport/projectroot.roottest.cling/dict/roottest_cling_dict_runalgebra/); - [projectroot.roottest.cling.functionTemplate.roottest_cling_functionTemplate_testcint](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/165316/testReport/projectroot.roottest.cling/functionTemplate/roottest_cling_functionTemplate_testcint/); - [projectroot.roottest.cling.parsing.roottest_cling_parsing_ptrconst](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12087#issuecomment-1400016513:493,secur,security,493,https://root.cern,https://github.com/root-project/root/pull/12087#issuecomment-1400016513,1,['secur'],['security']
Security,"Build failed on mac12/noimt.; Running on macphsft17.dyndns.cern.ch:/Users/sftnight/build/jenkins/workspace/root-pullrequests-build; [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/165338/console).; ### Warnings:; - [2023-01-23T09:21:43.557Z] /Users/sftnight/build/jenkins/workspace/root-pullrequests-build/root/core/base/src/TDirectory.cxx:1297:7: warning: 'sprintf' is deprecated: This function is provided for compatibility reasons only. Due to security concerns inherent in the design of sprintf(3), it is highly recommended that you use snprintf(3) instead. [-Wdeprecated-declarations] . ### Failing tests:; - [projectroot.roottest.cling.const.roottest_cling_const_run2](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/165338/testReport/projectroot.roottest.cling/const/roottest_cling_const_run2/); - [projectroot.roottest.cling.dict.roottest_cling_dict_rundefaultargs_compiled](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/165338/testReport/projectroot.roottest.cling/dict/roottest_cling_dict_rundefaultargs_compiled/); - [projectroot.roottest.cling.dict.roottest_cling_dict_exectemplatetemplateTest](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/165338/testReport/projectroot.roottest.cling/dict/roottest_cling_dict_exectemplatetemplateTest/); - [projectroot.roottest.cling.dict.roottest_cling_dict_runalgebra](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/165338/testReport/projectroot.roottest.cling/dict/roottest_cling_dict_runalgebra/); - [projectroot.roottest.cling.functionTemplate.roottest_cling_functionTemplate_testcint](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/165338/testReport/projectroot.roottest.cling/functionTemplate/roottest_cling_functionTemplate_testcint/); - [projectroot.roottest.cling.parsing.roottest_cling_parsing_ptrconst](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12077#issuecomment-1400057760:493,secur,security,493,https://root.cern,https://github.com/root-project/root/pull/12077#issuecomment-1400057760,1,['secur'],['security']
Security,"Build failed on mac12/noimt.; Running on macphsft17.dyndns.cern.ch:/Users/sftnight/build/jenkins/workspace/root-pullrequests-build; [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/165345/console).; ### Warnings:; - [2023-01-23T09:51:03.186Z] /Users/sftnight/build/jenkins/workspace/root-pullrequests-build/root/core/base/src/TDirectory.cxx:1297:7: warning: 'sprintf' is deprecated: This function is provided for compatibility reasons only. Due to security concerns inherent in the design of sprintf(3), it is highly recommended that you use snprintf(3) instead. [-Wdeprecated-declarations] . ### Failing tests:; - [projectroot.roottest.cling.const.roottest_cling_const_run2](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/165345/testReport/projectroot.roottest.cling/const/roottest_cling_const_run2/); - [projectroot.roottest.cling.dict.roottest_cling_dict_rundefaultargs_compiled](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/165345/testReport/projectroot.roottest.cling/dict/roottest_cling_dict_rundefaultargs_compiled/); - [projectroot.roottest.cling.dict.roottest_cling_dict_exectemplatetemplateTest](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/165345/testReport/projectroot.roottest.cling/dict/roottest_cling_dict_exectemplatetemplateTest/); - [projectroot.roottest.cling.dict.roottest_cling_dict_runalgebra](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/165345/testReport/projectroot.roottest.cling/dict/roottest_cling_dict_runalgebra/); - [projectroot.roottest.cling.functionTemplate.roottest_cling_functionTemplate_testcint](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/165345/testReport/projectroot.roottest.cling/functionTemplate/roottest_cling_functionTemplate_testcint/); - [projectroot.roottest.cling.parsing.roottest_cling_parsing_ptrconst](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12079#issuecomment-1400104482:493,secur,security,493,https://root.cern,https://github.com/root-project/root/pull/12079#issuecomment-1400104482,1,['secur'],['security']
Security,"Build failed on mac12/noimt.; Running on macphsft17.dyndns.cern.ch:/Users/sftnight/build/jenkins/workspace/root-pullrequests-build; [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/165353/console).; ### Warnings:; - [2023-01-23T10:22:49.206Z] /Users/sftnight/build/jenkins/workspace/root-pullrequests-build/root/core/base/src/TDirectory.cxx:1297:7: warning: 'sprintf' is deprecated: This function is provided for compatibility reasons only. Due to security concerns inherent in the design of sprintf(3), it is highly recommended that you use snprintf(3) instead. [-Wdeprecated-declarations] . ### Failing tests:; - [projectroot.roottest.cling.const.roottest_cling_const_run2](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/165353/testReport/projectroot.roottest.cling/const/roottest_cling_const_run2/); - [projectroot.roottest.cling.dict.roottest_cling_dict_rundefaultargs_compiled](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/165353/testReport/projectroot.roottest.cling/dict/roottest_cling_dict_rundefaultargs_compiled/); - [projectroot.roottest.cling.dict.roottest_cling_dict_exectemplatetemplateTest](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/165353/testReport/projectroot.roottest.cling/dict/roottest_cling_dict_exectemplatetemplateTest/); - [projectroot.roottest.cling.dict.roottest_cling_dict_runalgebra](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/165353/testReport/projectroot.roottest.cling/dict/roottest_cling_dict_runalgebra/); - [projectroot.roottest.cling.functionTemplate.roottest_cling_functionTemplate_testcint](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/165353/testReport/projectroot.roottest.cling/functionTemplate/roottest_cling_functionTemplate_testcint/); - [projectroot.roottest.cling.parsing.roottest_cling_parsing_ptrconst](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12052#issuecomment-1400142062:493,secur,security,493,https://root.cern,https://github.com/root-project/root/pull/12052#issuecomment-1400142062,1,['secur'],['security']
Security,"Build failed on mac12/noimt.; Running on macphsft17.dyndns.cern.ch:/Users/sftnight/build/jenkins/workspace/root-pullrequests-build; [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/165374/console).; ### Warnings:; - [2023-01-23T12:29:20.496Z] /Users/sftnight/build/jenkins/workspace/root-pullrequests-build/root/core/base/src/TDirectory.cxx:1297:7: warning: 'sprintf' is deprecated: This function is provided for compatibility reasons only. Due to security concerns inherent in the design of sprintf(3), it is highly recommended that you use snprintf(3) instead. [-Wdeprecated-declarations] . ### Failing tests:; - [projectroot.roottest.cling.const.roottest_cling_const_run2](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/165374/testReport/projectroot.roottest.cling/const/roottest_cling_const_run2/); - [projectroot.roottest.cling.dict.roottest_cling_dict_rundefaultargs_compiled](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/165374/testReport/projectroot.roottest.cling/dict/roottest_cling_dict_rundefaultargs_compiled/); - [projectroot.roottest.cling.dict.roottest_cling_dict_exectemplatetemplateTest](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/165374/testReport/projectroot.roottest.cling/dict/roottest_cling_dict_exectemplatetemplateTest/); - [projectroot.roottest.cling.dict.roottest_cling_dict_runalgebra](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/165374/testReport/projectroot.roottest.cling/dict/roottest_cling_dict_runalgebra/); - [projectroot.roottest.cling.function.roottest_cling_function_refFunction_build](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/165374/testReport/projectroot.roottest.cling/function/roottest_cling_function_refFunction_build/); - [projectroot.roottest.cling.function.roottest_cling_function_refClasses_build](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12076#issuecomment-1400288238:493,secur,security,493,https://root.cern,https://github.com/root-project/root/pull/12076#issuecomment-1400288238,1,['secur'],['security']
Security,"Build failed on mac12/noimt.; Running on macphsft17.dyndns.cern.ch:/Users/sftnight/build/jenkins/workspace/root-pullrequests-build; [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/166286/console).; ### Warnings:; - [2023-01-30T16:49:53.599Z] /Users/sftnight/build/jenkins/workspace/root-pullrequests-build/root/core/base/src/TDirectory.cxx:1292:7: warning: 'sprintf' is deprecated: This function is provided for compatibility reasons only. Due to security concerns inherent in the design of sprintf(3), it is highly recommended that you use snprintf(3) instead. [-Wdeprecated-declarations]",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12169#issuecomment-1409030879:493,secur,security,493,https://root.cern,https://github.com/root-project/root/pull/12169#issuecomment-1409030879,1,['secur'],['security']
Security,"Build failed on mac12/noimt.; Running on macphsft17.dyndns.cern.ch:/Users/sftnight/build/jenkins/workspace/root-pullrequests-build; [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/166301/console).; ### Warnings:; - [2023-01-30T17:44:12.950Z] /Users/sftnight/build/jenkins/workspace/root-pullrequests-build/root/core/base/src/TDirectory.cxx:1292:7: warning: 'sprintf' is deprecated: This function is provided for compatibility reasons only. Due to security concerns inherent in the design of sprintf(3), it is highly recommended that you use snprintf(3) instead. [-Wdeprecated-declarations]",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11096#issuecomment-1409110356:493,secur,security,493,https://root.cern,https://github.com/root-project/root/pull/11096#issuecomment-1409110356,1,['secur'],['security']
Security,"Build failed on mac12/noimt.; Running on macphsft17.dyndns.cern.ch:/Users/sftnight/build/jenkins/workspace/root-pullrequests-build; [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/166369/console).; ### Warnings:; - [2023-01-31T07:36:53.519Z] /Users/sftnight/build/jenkins/workspace/root-pullrequests-build/root/core/base/src/TDirectory.cxx:1292:7: warning: 'sprintf' is deprecated: This function is provided for compatibility reasons only. Due to security concerns inherent in the design of sprintf(3), it is highly recommended that you use snprintf(3) instead. [-Wdeprecated-declarations]",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12175#issuecomment-1409932970:493,secur,security,493,https://root.cern,https://github.com/root-project/root/pull/12175#issuecomment-1409932970,1,['secur'],['security']
Security,"Build failed on mac12/noimt.; Running on macphsft17.dyndns.cern.ch:/Users/sftnight/build/jenkins/workspace/root-pullrequests-build; [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/166390/console).; ### Warnings:; - [2023-01-31T11:20:37.361Z] /Users/sftnight/build/jenkins/workspace/root-pullrequests-build/root/core/base/src/TDirectory.cxx:1292:7: warning: 'sprintf' is deprecated: This function is provided for compatibility reasons only. Due to security concerns inherent in the design of sprintf(3), it is highly recommended that you use snprintf(3) instead. [-Wdeprecated-declarations]",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12178#issuecomment-1410209585:493,secur,security,493,https://root.cern,https://github.com/root-project/root/pull/12178#issuecomment-1410209585,1,['secur'],['security']
Security,"Build failed on mac12/noimt.; Running on macphsft18.dyndns.cern.ch:/Users/sftnight/build/jenkins/workspace/root-pullrequests-build; [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/164973/console).; ### Warnings:; - [2023-01-20T12:54:42.293Z] /Users/sftnight/build/jenkins/workspace/root-pullrequests-build/root/core/base/src/TDirectory.cxx:1245:7: warning: 'sprintf' is deprecated: This function is provided for compatibility reasons only. Due to security concerns inherent in the design of sprintf(3), it is highly recommended that you use snprintf(3) instead. [-Wdeprecated-declarations] . ### Failing tests:; - [projectroot.bindings.experimental.distrdf.test.pyunittests_distrdf_unit_test_operation](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/164973/testReport/projectroot.bindings.experimental.distrdf/test/pyunittests_distrdf_unit_test_operation/); - [projectroot.bindings.pyroot.pythonizations.test.pyunittests_pyroot_pyz_rdataframe_makenumpy](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/164973/testReport/projectroot.bindings.pyroot.pythonizations/test/pyunittests_pyroot_pyz_rdataframe_makenumpy/); - [projectroot.bindings.pyroot.pythonizations.test.pyunittests_pyroot_pyz_rdataframe_histo_profile](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/164973/testReport/projectroot.bindings.pyroot.pythonizations/test/pyunittests_pyroot_pyz_rdataframe_histo_profile/); - [projectroot.bindings.pyroot.pythonizations.test.pyunittests_pyroot_pyz_rtensor](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/164973/testReport/projectroot.bindings.pyroot.pythonizations/test/pyunittests_pyroot_pyz_rtensor/); - [projectroot.roottest.cling.const.roottest_cling_const_run2](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/164973/testReport/projectroot.roottest.cling/const/roottest_cling_const_run2/); - [projectroot.roottest.cli",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12071#issuecomment-1398420773:493,secur,security,493,https://root.cern,https://github.com/root-project/root/pull/12071#issuecomment-1398420773,1,['secur'],['security']
Security,"Build failed on mac12/noimt.; Running on macphsft18.dyndns.cern.ch:/Users/sftnight/build/jenkins/workspace/root-pullrequests-build; [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/164992/console).; ### Warnings:; - [2023-01-20T14:16:21.083Z] /Users/sftnight/build/jenkins/workspace/root-pullrequests-build/root/core/base/src/TDirectory.cxx:1297:7: warning: 'sprintf' is deprecated: This function is provided for compatibility reasons only. Due to security concerns inherent in the design of sprintf(3), it is highly recommended that you use snprintf(3) instead. [-Wdeprecated-declarations] . ### Failing tests:; - [projectroot.bindings.experimental.distrdf.test.pyunittests_distrdf_unit_test_operation](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/164992/testReport/projectroot.bindings.experimental.distrdf/test/pyunittests_distrdf_unit_test_operation/); - [projectroot.bindings.pyroot.pythonizations.test.pyunittests_pyroot_pyz_rdataframe_makenumpy](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/164992/testReport/projectroot.bindings.pyroot.pythonizations/test/pyunittests_pyroot_pyz_rdataframe_makenumpy/); - [projectroot.bindings.pyroot.pythonizations.test.pyunittests_pyroot_pyz_rdataframe_histo_profile](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/164992/testReport/projectroot.bindings.pyroot.pythonizations/test/pyunittests_pyroot_pyz_rdataframe_histo_profile/); - [projectroot.bindings.pyroot.pythonizations.test.pyunittests_pyroot_pyz_rtensor](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/164992/testReport/projectroot.bindings.pyroot.pythonizations/test/pyunittests_pyroot_pyz_rtensor/); - [projectroot.roottest.cling.const.roottest_cling_const_run2](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/164992/testReport/projectroot.roottest.cling/const/roottest_cling_const_run2/); - [projectroot.roottest.cli",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12069#issuecomment-1398505865:493,secur,security,493,https://root.cern,https://github.com/root-project/root/pull/12069#issuecomment-1398505865,1,['secur'],['security']
Security,"Build failed on mac12/noimt.; Running on macphsft18.dyndns.cern.ch:/Users/sftnight/build/jenkins/workspace/root-pullrequests-build; [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/165004/console).; ### Warnings:; - [2023-01-20T15:45:21.110Z] /Users/sftnight/build/jenkins/workspace/root-pullrequests-build/root/core/base/src/TDirectory.cxx:1297:7: warning: 'sprintf' is deprecated: This function is provided for compatibility reasons only. Due to security concerns inherent in the design of sprintf(3), it is highly recommended that you use snprintf(3) instead. [-Wdeprecated-declarations] . ### Failing tests:; - [projectroot.roottest.root.meta.evolution.roottest_root_meta_evolution_execBaseClass_v1](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/165004/testReport/projectroot.roottest.root.meta/evolution/roottest_root_meta_evolution_execBaseClass_v1/); - [projectroot.roottest.root.meta.evolution.roottest_root_meta_evolution_execMixedBaseClass_v1](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/165004/testReport/projectroot.roottest.root.meta/evolution/roottest_root_meta_evolution_execMixedBaseClass_v1/); - [projectroot.roottest.root.io.issue-7754.roottest_root_io_issue_7754_write_cmssw_class_v2](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/165004/testReport/projectroot.roottest.root.io/issue-7754/roottest_root_io_issue_7754_write_cmssw_class_v2/); - [projectroot.roottest.root.io.issue-7754.roottest_root_io_issue_7754_read_mwe_0](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/165004/testReport/projectroot.roottest.root.io/issue-7754/roottest_root_io_issue_7754_read_mwe_0/); - [projectroot.roottest.root.io.issue-9899.roottest_root_io_issue_9899_write_cmssw_class_v2](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/165004/testReport/projectroot.roottest.root.io/issue-9899/roottest_root_io_issue_9899_write",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12075#issuecomment-1398618181:493,secur,security,493,https://root.cern,https://github.com/root-project/root/pull/12075#issuecomment-1398618181,1,['secur'],['security']
Security,"Build failed on mac12/noimt.; Running on macphsft18.dyndns.cern.ch:/Users/sftnight/build/jenkins/workspace/root-pullrequests-build; [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/165011/console).; ### Warnings:; - [2023-01-20T16:48:24.134Z] /Users/sftnight/build/jenkins/workspace/root-pullrequests-build/root/core/base/src/TDirectory.cxx:1297:7: warning: 'sprintf' is deprecated: This function is provided for compatibility reasons only. Due to security concerns inherent in the design of sprintf(3), it is highly recommended that you use snprintf(3) instead. [-Wdeprecated-declarations] . ### Failing tests:; - [projectroot.roottest.root.meta.evolution.roottest_root_meta_evolution_execBaseClass_v1](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/165011/testReport/projectroot.roottest.root.meta/evolution/roottest_root_meta_evolution_execBaseClass_v1/); - [projectroot.roottest.root.meta.evolution.roottest_root_meta_evolution_execMixedBaseClass_v1](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/165011/testReport/projectroot.roottest.root.meta/evolution/roottest_root_meta_evolution_execMixedBaseClass_v1/); - [projectroot.roottest.root.io.issue-7754.roottest_root_io_issue_7754_write_cmssw_class_v2](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/165011/testReport/projectroot.roottest.root.io/issue-7754/roottest_root_io_issue_7754_write_cmssw_class_v2/); - [projectroot.roottest.root.io.issue-7754.roottest_root_io_issue_7754_read_mwe_0](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/165011/testReport/projectroot.roottest.root.io/issue-7754/roottest_root_io_issue_7754_read_mwe_0/); - [projectroot.roottest.root.io.issue-9899.roottest_root_io_issue_9899_write_cmssw_class_v2](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/165011/testReport/projectroot.roottest.root.io/issue-9899/roottest_root_io_issue_9899_write",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12070#issuecomment-1398698790:493,secur,security,493,https://root.cern,https://github.com/root-project/root/pull/12070#issuecomment-1398698790,1,['secur'],['security']
Security,"Build failed on mac12/noimt.; Running on macphsft18.dyndns.cern.ch:/Users/sftnight/build/jenkins/workspace/root-pullrequests-build; [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/165040/console).; ### Warnings:; - [2023-01-20T19:25:12.913Z] /Users/sftnight/build/jenkins/workspace/root-pullrequests-build/root/core/base/src/TDirectory.cxx:1297:7: warning: 'sprintf' is deprecated: This function is provided for compatibility reasons only. Due to security concerns inherent in the design of sprintf(3), it is highly recommended that you use snprintf(3) instead. [-Wdeprecated-declarations] . ### Failing tests:; - [projectroot.bindings.experimental.distrdf.test.pyunittests_distrdf_unit_test_operation](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/165040/testReport/projectroot.bindings.experimental.distrdf/test/pyunittests_distrdf_unit_test_operation/); - [projectroot.bindings.pyroot.pythonizations.test.pyunittests_pyroot_pyz_rdataframe_makenumpy](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/165040/testReport/projectroot.bindings.pyroot.pythonizations/test/pyunittests_pyroot_pyz_rdataframe_makenumpy/); - [projectroot.bindings.pyroot.pythonizations.test.pyunittests_pyroot_pyz_rdataframe_histo_profile](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/165040/testReport/projectroot.bindings.pyroot.pythonizations/test/pyunittests_pyroot_pyz_rdataframe_histo_profile/); - [projectroot.bindings.pyroot.pythonizations.test.pyunittests_pyroot_pyz_rtensor](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/165040/testReport/projectroot.bindings.pyroot.pythonizations/test/pyunittests_pyroot_pyz_rtensor/); - [projectroot.roottest.cling.const.roottest_cling_const_run2](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/165040/testReport/projectroot.roottest.cling/const/roottest_cling_const_run2/); - [projectroot.roottest.cli",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12077#issuecomment-1398863857:493,secur,security,493,https://root.cern,https://github.com/root-project/root/pull/12077#issuecomment-1398863857,1,['secur'],['security']
Security,"Build failed on mac12/noimt.; Running on macphsft18.dyndns.cern.ch:/Users/sftnight/build/jenkins/workspace/root-pullrequests-build; [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/165061/console).; ### Warnings:; - [2023-01-20T20:02:35.821Z] /Users/sftnight/build/jenkins/workspace/root-pullrequests-build/root/core/base/src/TDirectory.cxx:1297:7: warning: 'sprintf' is deprecated: This function is provided for compatibility reasons only. Due to security concerns inherent in the design of sprintf(3), it is highly recommended that you use snprintf(3) instead. [-Wdeprecated-declarations] . ### Failing tests:; - [projectroot.bindings.experimental.distrdf.test.pyunittests_distrdf_unit_test_operation](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/165061/testReport/projectroot.bindings.experimental.distrdf/test/pyunittests_distrdf_unit_test_operation/); - [projectroot.bindings.pyroot.pythonizations.test.pyunittests_pyroot_pyz_rdataframe_makenumpy](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/165061/testReport/projectroot.bindings.pyroot.pythonizations/test/pyunittests_pyroot_pyz_rdataframe_makenumpy/); - [projectroot.bindings.pyroot.pythonizations.test.pyunittests_pyroot_pyz_rdataframe_histo_profile](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/165061/testReport/projectroot.bindings.pyroot.pythonizations/test/pyunittests_pyroot_pyz_rdataframe_histo_profile/); - [projectroot.bindings.pyroot.pythonizations.test.pyunittests_pyroot_pyz_rtensor](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/165061/testReport/projectroot.bindings.pyroot.pythonizations/test/pyunittests_pyroot_pyz_rtensor/); - [projectroot.roottest.root.meta.evolution.roottest_root_meta_evolution_execBaseClass_v1](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/165061/testReport/projectroot.roottest.root.meta/evolution/roottest_root_meta_e",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12076#issuecomment-1398904264:493,secur,security,493,https://root.cern,https://github.com/root-project/root/pull/12076#issuecomment-1398904264,1,['secur'],['security']
Security,"Build failed on mac12/noimt.; Running on macphsft18.dyndns.cern.ch:/Users/sftnight/build/jenkins/workspace/root-pullrequests-build; [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/165068/console).; ### Warnings:; - [2023-01-20T20:53:14.735Z] /Users/sftnight/build/jenkins/workspace/root-pullrequests-build/root/core/base/src/TDirectory.cxx:1297:7: warning: 'sprintf' is deprecated: This function is provided for compatibility reasons only. Due to security concerns inherent in the design of sprintf(3), it is highly recommended that you use snprintf(3) instead. [-Wdeprecated-declarations] . ### Failing tests:; - [projectroot.roottest.root.meta.evolution.roottest_root_meta_evolution_execBaseClass_v1](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/165068/testReport/projectroot.roottest.root.meta/evolution/roottest_root_meta_evolution_execBaseClass_v1/); - [projectroot.roottest.root.meta.evolution.roottest_root_meta_evolution_execMixedBaseClass_v1](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/165068/testReport/projectroot.roottest.root.meta/evolution/roottest_root_meta_evolution_execMixedBaseClass_v1/); - [projectroot.roottest.root.io.issue-7754.roottest_root_io_issue_7754_write_cmssw_class_v2](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/165068/testReport/projectroot.roottest.root.io/issue-7754/roottest_root_io_issue_7754_write_cmssw_class_v2/); - [projectroot.roottest.root.io.issue-7754.roottest_root_io_issue_7754_read_mwe_0](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/165068/testReport/projectroot.roottest.root.io/issue-7754/roottest_root_io_issue_7754_read_mwe_0/); - [projectroot.roottest.root.io.issue-9899.roottest_root_io_issue_9899_write_cmssw_class_v2](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/165068/testReport/projectroot.roottest.root.io/issue-9899/roottest_root_io_issue_9899_write",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12044#issuecomment-1398968394:493,secur,security,493,https://root.cern,https://github.com/root-project/root/pull/12044#issuecomment-1398968394,1,['secur'],['security']
Security,"Build failed on mac12/noimt.; Running on macphsft18.dyndns.cern.ch:/Users/sftnight/build/jenkins/workspace/root-pullrequests-build; [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/165138/console).; ### Warnings:; - [2023-01-21T00:28:30.647Z] /Users/sftnight/build/jenkins/workspace/root-pullrequests-build/root/core/base/src/TDirectory.cxx:1297:7: warning: 'sprintf' is deprecated: This function is provided for compatibility reasons only. Due to security concerns inherent in the design of sprintf(3), it is highly recommended that you use snprintf(3) instead. [-Wdeprecated-declarations] . ### Failing tests:; - [projectroot.bindings.experimental.distrdf.test.pyunittests_distrdf_unit_test_operation](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/165138/testReport/projectroot.bindings.experimental.distrdf/test/pyunittests_distrdf_unit_test_operation/); - [projectroot.bindings.pyroot.pythonizations.test.pyunittests_pyroot_pyz_rdataframe_makenumpy](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/165138/testReport/projectroot.bindings.pyroot.pythonizations/test/pyunittests_pyroot_pyz_rdataframe_makenumpy/); - [projectroot.bindings.pyroot.pythonizations.test.pyunittests_pyroot_pyz_rdataframe_histo_profile](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/165138/testReport/projectroot.bindings.pyroot.pythonizations/test/pyunittests_pyroot_pyz_rdataframe_histo_profile/); - [projectroot.bindings.pyroot.pythonizations.test.pyunittests_pyroot_pyz_rtensor](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/165138/testReport/projectroot.bindings.pyroot.pythonizations/test/pyunittests_pyroot_pyz_rtensor/); - [projectroot.roottest.cling.const.roottest_cling_const_run2](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/165138/testReport/projectroot.roottest.cling/const/roottest_cling_const_run2/); - [projectroot.roottest.cli",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11466#issuecomment-1399109419:493,secur,security,493,https://root.cern,https://github.com/root-project/root/pull/11466#issuecomment-1399109419,1,['secur'],['security']
Security,"Build failed on mac12/noimt.; Running on macphsft18.dyndns.cern.ch:/Users/sftnight/build/jenkins/workspace/root-pullrequests-build; [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/165216/console).; ### Warnings:; - [2023-01-21T19:58:45.265Z] /Users/sftnight/build/jenkins/workspace/root-pullrequests-build/root/core/base/src/TDirectory.cxx:1292:7: warning: 'sprintf' is deprecated: This function is provided for compatibility reasons only. Due to security concerns inherent in the design of sprintf(3), it is highly recommended that you use snprintf(3) instead. [-Wdeprecated-declarations] . ### Failing tests:; - [projectroot.bindings.experimental.distrdf.test.pyunittests_distrdf_unit_test_operation](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/165216/testReport/projectroot.bindings.experimental.distrdf/test/pyunittests_distrdf_unit_test_operation/); - [projectroot.bindings.pyroot.pythonizations.test.pyunittests_pyroot_pyz_rdataframe_makenumpy](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/165216/testReport/projectroot.bindings.pyroot.pythonizations/test/pyunittests_pyroot_pyz_rdataframe_makenumpy/); - [projectroot.bindings.pyroot.pythonizations.test.pyunittests_pyroot_pyz_rdataframe_histo_profile](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/165216/testReport/projectroot.bindings.pyroot.pythonizations/test/pyunittests_pyroot_pyz_rdataframe_histo_profile/); - [projectroot.bindings.pyroot.pythonizations.test.pyunittests_pyroot_pyz_rtensor](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/165216/testReport/projectroot.bindings.pyroot.pythonizations/test/pyunittests_pyroot_pyz_rtensor/); - [projectroot.roottest.cling.const.roottest_cling_const_run2](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/165216/testReport/projectroot.roottest.cling/const/roottest_cling_const_run2/); - [projectroot.roottest.cli",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12080#issuecomment-1399329243:493,secur,security,493,https://root.cern,https://github.com/root-project/root/pull/12080#issuecomment-1399329243,1,['secur'],['security']
Security,"Build failed on mac12/noimt.; Running on macphsft18.dyndns.cern.ch:/Users/sftnight/build/jenkins/workspace/root-pullrequests-build; [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/165245/console).; ### Warnings:; - [2023-01-22T12:04:20.315Z] /Users/sftnight/build/jenkins/workspace/root-pullrequests-build/root/core/base/src/TDirectory.cxx:1297:7: warning: 'sprintf' is deprecated: This function is provided for compatibility reasons only. Due to security concerns inherent in the design of sprintf(3), it is highly recommended that you use snprintf(3) instead. [-Wdeprecated-declarations] . ### Failing tests:; - [projectroot.bindings.experimental.distrdf.test.pyunittests_distrdf_unit_test_operation](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/165245/testReport/projectroot.bindings.experimental.distrdf/test/pyunittests_distrdf_unit_test_operation/); - [projectroot.bindings.pyroot.pythonizations.test.pyunittests_pyroot_pyz_rdataframe_makenumpy](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/165245/testReport/projectroot.bindings.pyroot.pythonizations/test/pyunittests_pyroot_pyz_rdataframe_makenumpy/); - [projectroot.bindings.pyroot.pythonizations.test.pyunittests_pyroot_pyz_rdataframe_histo_profile](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/165245/testReport/projectroot.bindings.pyroot.pythonizations/test/pyunittests_pyroot_pyz_rdataframe_histo_profile/); - [projectroot.bindings.pyroot.pythonizations.test.pyunittests_pyroot_pyz_rtensor](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/165245/testReport/projectroot.bindings.pyroot.pythonizations/test/pyunittests_pyroot_pyz_rtensor/); - [projectroot.roofit.roofitcore.test.gtest_roofit_roofitcore_test_testLikelihoodJob](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/165245/testReport/projectroot.roofit.roofitcore/test/gtest_roofit_roofitcore_test_te",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12071#issuecomment-1399474119:493,secur,security,493,https://root.cern,https://github.com/root-project/root/pull/12071#issuecomment-1399474119,1,['secur'],['security']
Security,"Build failed on mac12/noimt.; Running on macphsft18.dyndns.cern.ch:/Users/sftnight/build/jenkins/workspace/root-pullrequests-build; [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/165259/console).; ### Warnings:; - [2023-01-22T14:37:24.089Z] /Users/sftnight/build/jenkins/workspace/root-pullrequests-build/root/core/base/src/TDirectory.cxx:1297:7: warning: 'sprintf' is deprecated: This function is provided for compatibility reasons only. Due to security concerns inherent in the design of sprintf(3), it is highly recommended that you use snprintf(3) instead. [-Wdeprecated-declarations] . ### Failing tests:; - [projectroot.bindings.experimental.distrdf.test.pyunittests_distrdf_unit_test_operation](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/165259/testReport/projectroot.bindings.experimental.distrdf/test/pyunittests_distrdf_unit_test_operation/); - [projectroot.bindings.pyroot.pythonizations.test.pyunittests_pyroot_pyz_rdataframe_makenumpy](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/165259/testReport/projectroot.bindings.pyroot.pythonizations/test/pyunittests_pyroot_pyz_rdataframe_makenumpy/); - [projectroot.bindings.pyroot.pythonizations.test.pyunittests_pyroot_pyz_rdataframe_histo_profile](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/165259/testReport/projectroot.bindings.pyroot.pythonizations/test/pyunittests_pyroot_pyz_rdataframe_histo_profile/); - [projectroot.bindings.pyroot.pythonizations.test.pyunittests_pyroot_pyz_rtensor](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/165259/testReport/projectroot.bindings.pyroot.pythonizations/test/pyunittests_pyroot_pyz_rtensor/); - [projectroot.roottest.cling.const.roottest_cling_const_run2](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/165259/testReport/projectroot.roottest.cling/const/roottest_cling_const_run2/); - [projectroot.roottest.cli",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12082#issuecomment-1399514963:493,secur,security,493,https://root.cern,https://github.com/root-project/root/pull/12082#issuecomment-1399514963,1,['secur'],['security']
Security,"Build failed on mac12/noimt.; Running on macphsft18.dyndns.cern.ch:/Users/sftnight/build/jenkins/workspace/root-pullrequests-build; [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/165266/console).; ### Warnings:; - [2023-01-22T16:26:09.511Z] /Users/sftnight/build/jenkins/workspace/root-pullrequests-build/root/core/base/src/TDirectory.cxx:1297:7: warning: 'sprintf' is deprecated: This function is provided for compatibility reasons only. Due to security concerns inherent in the design of sprintf(3), it is highly recommended that you use snprintf(3) instead. [-Wdeprecated-declarations] . ### Failing tests:; - [projectroot.bindings.experimental.distrdf.test.pyunittests_distrdf_unit_test_operation](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/165266/testReport/projectroot.bindings.experimental.distrdf/test/pyunittests_distrdf_unit_test_operation/); - [projectroot.bindings.pyroot.pythonizations.test.pyunittests_pyroot_pyz_rdataframe_makenumpy](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/165266/testReport/projectroot.bindings.pyroot.pythonizations/test/pyunittests_pyroot_pyz_rdataframe_makenumpy/); - [projectroot.bindings.pyroot.pythonizations.test.pyunittests_pyroot_pyz_rdataframe_histo_profile](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/165266/testReport/projectroot.bindings.pyroot.pythonizations/test/pyunittests_pyroot_pyz_rdataframe_histo_profile/); - [projectroot.bindings.pyroot.pythonizations.test.pyunittests_pyroot_pyz_rtensor](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/165266/testReport/projectroot.bindings.pyroot.pythonizations/test/pyunittests_pyroot_pyz_rtensor/); - [projectroot.roottest.cling.const.roottest_cling_const_run2](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/165266/testReport/projectroot.roottest.cling/const/roottest_cling_const_run2/); - [projectroot.roottest.cli",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12071#issuecomment-1399542461:493,secur,security,493,https://root.cern,https://github.com/root-project/root/pull/12071#issuecomment-1399542461,1,['secur'],['security']
Security,"Build failed on mac12/noimt.; Running on macphsft18.dyndns.cern.ch:/Users/sftnight/build/jenkins/workspace/root-pullrequests-build; [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/165274/console).; ### Warnings:; - [2023-01-22T19:01:14.214Z] /Users/sftnight/build/jenkins/workspace/root-pullrequests-build/root/core/base/src/TDirectory.cxx:1297:7: warning: 'sprintf' is deprecated: This function is provided for compatibility reasons only. Due to security concerns inherent in the design of sprintf(3), it is highly recommended that you use snprintf(3) instead. [-Wdeprecated-declarations] . ### Failing tests:; - [projectroot.bindings.experimental.distrdf.test.pyunittests_distrdf_unit_test_operation](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/165274/testReport/projectroot.bindings.experimental.distrdf/test/pyunittests_distrdf_unit_test_operation/); - [projectroot.bindings.pyroot.pythonizations.test.pyunittests_pyroot_pyz_rdataframe_makenumpy](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/165274/testReport/projectroot.bindings.pyroot.pythonizations/test/pyunittests_pyroot_pyz_rdataframe_makenumpy/); - [projectroot.bindings.pyroot.pythonizations.test.pyunittests_pyroot_pyz_rdataframe_histo_profile](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/165274/testReport/projectroot.bindings.pyroot.pythonizations/test/pyunittests_pyroot_pyz_rdataframe_histo_profile/); - [projectroot.bindings.pyroot.pythonizations.test.pyunittests_pyroot_pyz_rtensor](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/165274/testReport/projectroot.bindings.pyroot.pythonizations/test/pyunittests_pyroot_pyz_rtensor/); - [projectroot.roottest.cling.const.roottest_cling_const_run2](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/165274/testReport/projectroot.roottest.cling/const/roottest_cling_const_run2/); - [projectroot.roottest.cli",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12021#issuecomment-1399584204:493,secur,security,493,https://root.cern,https://github.com/root-project/root/pull/12021#issuecomment-1399584204,1,['secur'],['security']
Security,"Build failed on mac12/noimt.; Running on macphsft18.dyndns.cern.ch:/Users/sftnight/build/jenkins/workspace/root-pullrequests-build; [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/165288/console).; ### Warnings:; - [2023-01-22T23:08:20.796Z] /Users/sftnight/build/jenkins/workspace/root-pullrequests-build/root/core/base/src/TDirectory.cxx:1297:7: warning: 'sprintf' is deprecated: This function is provided for compatibility reasons only. Due to security concerns inherent in the design of sprintf(3), it is highly recommended that you use snprintf(3) instead. [-Wdeprecated-declarations] . ### Failing tests:; - [projectroot.roottest.root.meta.evolution.roottest_root_meta_evolution_execBaseClass_v1](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/165288/testReport/projectroot.roottest.root.meta/evolution/roottest_root_meta_evolution_execBaseClass_v1/); - [projectroot.roottest.root.meta.evolution.roottest_root_meta_evolution_execMixedBaseClass_v1](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/165288/testReport/projectroot.roottest.root.meta/evolution/roottest_root_meta_evolution_execMixedBaseClass_v1/); - [projectroot.roottest.root.io.issue-7754.roottest_root_io_issue_7754_write_cmssw_class_v2](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/165288/testReport/projectroot.roottest.root.io/issue-7754/roottest_root_io_issue_7754_write_cmssw_class_v2/); - [projectroot.roottest.root.io.issue-7754.roottest_root_io_issue_7754_read_mwe_0](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/165288/testReport/projectroot.roottest.root.io/issue-7754/roottest_root_io_issue_7754_read_mwe_0/); - [projectroot.roottest.root.io.stdarray.roottest_root_io_stdarray_modelReadDictTXMLFile](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/165288/testReport/projectroot.roottest.root.io/stdarray/roottest_root_io_stdarray_modelReadDic",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12079#issuecomment-1399642656:493,secur,security,493,https://root.cern,https://github.com/root-project/root/pull/12079#issuecomment-1399642656,1,['secur'],['security']
Security,"Build failed on mac12/noimt.; Running on macphsft18.dyndns.cern.ch:/Users/sftnight/build/jenkins/workspace/root-pullrequests-build; [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/165302/console).; ### Warnings:; - [2023-01-23T07:58:33.834Z] /Users/sftnight/build/jenkins/workspace/root-pullrequests-build/root/core/base/src/TDirectory.cxx:1297:7: warning: 'sprintf' is deprecated: This function is provided for compatibility reasons only. Due to security concerns inherent in the design of sprintf(3), it is highly recommended that you use snprintf(3) instead. [-Wdeprecated-declarations] . ### Failing tests:; - [projectroot.roottest.root.meta.evolution.roottest_root_meta_evolution_execBaseClass_v1](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/165302/testReport/projectroot.roottest.root.meta/evolution/roottest_root_meta_evolution_execBaseClass_v1/); - [projectroot.roottest.root.meta.evolution.roottest_root_meta_evolution_execMixedBaseClass_v1](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/165302/testReport/projectroot.roottest.root.meta/evolution/roottest_root_meta_evolution_execMixedBaseClass_v1/); - [projectroot.roottest.root.io.issue-7754.roottest_root_io_issue_7754_write_cmssw_class_v2](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/165302/testReport/projectroot.roottest.root.io/issue-7754/roottest_root_io_issue_7754_write_cmssw_class_v2/); - [projectroot.roottest.root.io.issue-7754.roottest_root_io_issue_7754_read_mwe_0](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/165302/testReport/projectroot.roottest.root.io/issue-7754/roottest_root_io_issue_7754_read_mwe_0/); - [projectroot.roottest.root.io.issue-9899.roottest_root_io_issue_9899_write_cmssw_class_v2](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/165302/testReport/projectroot.roottest.root.io/issue-9899/roottest_root_io_issue_9899_write",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12085#issuecomment-1399969974:493,secur,security,493,https://root.cern,https://github.com/root-project/root/pull/12085#issuecomment-1399969974,1,['secur'],['security']
Security,"Build failed on mac12/noimt.; Running on macphsft18.dyndns.cern.ch:/Users/sftnight/build/jenkins/workspace/root-pullrequests-build; [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/165309/console).; ### Warnings:; - [2023-01-23T08:39:02.917Z] /Users/sftnight/build/jenkins/workspace/root-pullrequests-build/root/core/base/src/TDirectory.cxx:1297:7: warning: 'sprintf' is deprecated: This function is provided for compatibility reasons only. Due to security concerns inherent in the design of sprintf(3), it is highly recommended that you use snprintf(3) instead. [-Wdeprecated-declarations] . ### Failing tests:; - [projectroot.bindings.experimental.distrdf.test.pyunittests_distrdf_unit_test_operation](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/165309/testReport/projectroot.bindings.experimental.distrdf/test/pyunittests_distrdf_unit_test_operation/); - [projectroot.bindings.pyroot.pythonizations.test.pyunittests_pyroot_pyz_rdataframe_makenumpy](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/165309/testReport/projectroot.bindings.pyroot.pythonizations/test/pyunittests_pyroot_pyz_rdataframe_makenumpy/); - [projectroot.bindings.pyroot.pythonizations.test.pyunittests_pyroot_pyz_rdataframe_histo_profile](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/165309/testReport/projectroot.bindings.pyroot.pythonizations/test/pyunittests_pyroot_pyz_rdataframe_histo_profile/); - [projectroot.bindings.pyroot.pythonizations.test.pyunittests_pyroot_pyz_rtensor](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/165309/testReport/projectroot.bindings.pyroot.pythonizations/test/pyunittests_pyroot_pyz_rtensor/); - [projectroot.roottest.cling.const.roottest_cling_const_run2](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/165309/testReport/projectroot.roottest.cling/const/roottest_cling_const_run2/); - [projectroot.roottest.cli",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12086#issuecomment-1400009898:493,secur,security,493,https://root.cern,https://github.com/root-project/root/pull/12086#issuecomment-1400009898,1,['secur'],['security']
Security,"Build failed on mac12/noimt.; Running on macphsft18.dyndns.cern.ch:/Users/sftnight/build/jenkins/workspace/root-pullrequests-build; [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/165324/console).; ### Warnings:; - [2023-01-23T09:16:41.360Z] /Users/sftnight/build/jenkins/workspace/root-pullrequests-build/root/core/base/src/TDirectory.cxx:1297:7: warning: 'sprintf' is deprecated: This function is provided for compatibility reasons only. Due to security concerns inherent in the design of sprintf(3), it is highly recommended that you use snprintf(3) instead. [-Wdeprecated-declarations] . ### Failing tests:; - [projectroot.bindings.experimental.distrdf.test.pyunittests_distrdf_unit_test_operation](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/165324/testReport/projectroot.bindings.experimental.distrdf/test/pyunittests_distrdf_unit_test_operation/); - [projectroot.bindings.pyroot.pythonizations.test.pyunittests_pyroot_pyz_rdataframe_makenumpy](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/165324/testReport/projectroot.bindings.pyroot.pythonizations/test/pyunittests_pyroot_pyz_rdataframe_makenumpy/); - [projectroot.bindings.pyroot.pythonizations.test.pyunittests_pyroot_pyz_rdataframe_histo_profile](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/165324/testReport/projectroot.bindings.pyroot.pythonizations/test/pyunittests_pyroot_pyz_rdataframe_histo_profile/); - [projectroot.bindings.pyroot.pythonizations.test.pyunittests_pyroot_pyz_rtensor](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/165324/testReport/projectroot.bindings.pyroot.pythonizations/test/pyunittests_pyroot_pyz_rtensor/); - [projectroot.roottest.cling.const.roottest_cling_const_run2](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/165324/testReport/projectroot.roottest.cling/const/roottest_cling_const_run2/); - [projectroot.roottest.cli",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12064#issuecomment-1400064658:493,secur,security,493,https://root.cern,https://github.com/root-project/root/pull/12064#issuecomment-1400064658,1,['secur'],['security']
Security,"Build failed on mac12/noimt.; Running on macphsft18.dyndns.cern.ch:/Users/sftnight/build/jenkins/workspace/root-pullrequests-build; [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/165348/console).; ### Warnings:; - [2023-01-23T09:54:18.485Z] /Users/sftnight/build/jenkins/workspace/root-pullrequests-build/root/core/base/src/TDirectory.cxx:1297:7: warning: 'sprintf' is deprecated: This function is provided for compatibility reasons only. Due to security concerns inherent in the design of sprintf(3), it is highly recommended that you use snprintf(3) instead. [-Wdeprecated-declarations] . ### Failing tests:; - [projectroot.bindings.experimental.distrdf.test.pyunittests_distrdf_unit_test_operation](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/165348/testReport/projectroot.bindings.experimental.distrdf/test/pyunittests_distrdf_unit_test_operation/); - [projectroot.bindings.pyroot.pythonizations.test.pyunittests_pyroot_pyz_rdataframe_makenumpy](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/165348/testReport/projectroot.bindings.pyroot.pythonizations/test/pyunittests_pyroot_pyz_rdataframe_makenumpy/); - [projectroot.bindings.pyroot.pythonizations.test.pyunittests_pyroot_pyz_rdataframe_histo_profile](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/165348/testReport/projectroot.bindings.pyroot.pythonizations/test/pyunittests_pyroot_pyz_rdataframe_histo_profile/); - [projectroot.bindings.pyroot.pythonizations.test.pyunittests_pyroot_pyz_rtensor](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/165348/testReport/projectroot.bindings.pyroot.pythonizations/test/pyunittests_pyroot_pyz_rtensor/); - [projectroot.roottest.cling.const.roottest_cling_const_run2](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/165348/testReport/projectroot.roottest.cling/const/roottest_cling_const_run2/); - [projectroot.roottest.cli",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12067#issuecomment-1400115916:493,secur,security,493,https://root.cern,https://github.com/root-project/root/pull/12067#issuecomment-1400115916,1,['secur'],['security']
Security,"Build failed on mac12/noimt.; Running on macphsft18.dyndns.cern.ch:/Users/sftnight/build/jenkins/workspace/root-pullrequests-build; [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/165360/console).; ### Warnings:; - [2023-01-23T10:31:48.898Z] /Users/sftnight/build/jenkins/workspace/root-pullrequests-build/root/core/base/src/TDirectory.cxx:1297:7: warning: 'sprintf' is deprecated: This function is provided for compatibility reasons only. Due to security concerns inherent in the design of sprintf(3), it is highly recommended that you use snprintf(3) instead. [-Wdeprecated-declarations] . ### Failing tests:; - [projectroot.bindings.experimental.distrdf.test.pyunittests_distrdf_unit_test_operation](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/165360/testReport/projectroot.bindings.experimental.distrdf/test/pyunittests_distrdf_unit_test_operation/); - [projectroot.bindings.pyroot.pythonizations.test.pyunittests_pyroot_pyz_rdataframe_makenumpy](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/165360/testReport/projectroot.bindings.pyroot.pythonizations/test/pyunittests_pyroot_pyz_rdataframe_makenumpy/); - [projectroot.bindings.pyroot.pythonizations.test.pyunittests_pyroot_pyz_rdataframe_histo_profile](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/165360/testReport/projectroot.bindings.pyroot.pythonizations/test/pyunittests_pyroot_pyz_rdataframe_histo_profile/); - [projectroot.bindings.pyroot.pythonizations.test.pyunittests_pyroot_pyz_rtensor](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/165360/testReport/projectroot.bindings.pyroot.pythonizations/test/pyunittests_pyroot_pyz_rtensor/); - [projectroot.roottest.cling.const.roottest_cling_const_run2](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/165360/testReport/projectroot.roottest.cling/const/roottest_cling_const_run2/); - [projectroot.roottest.cli",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12088#issuecomment-1400161360:493,secur,security,493,https://root.cern,https://github.com/root-project/root/pull/12088#issuecomment-1400161360,1,['secur'],['security']
Security,"Build failed on mac12/noimt.; Running on macphsft18.dyndns.cern.ch:/Users/sftnight/build/jenkins/workspace/root-pullrequests-build; [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/165367/console).; ### Warnings:; - [2023-01-23T11:34:10.568Z] /Users/sftnight/build/jenkins/workspace/root-pullrequests-build/root/core/base/src/TDirectory.cxx:1297:7: warning: 'sprintf' is deprecated: This function is provided for compatibility reasons only. Due to security concerns inherent in the design of sprintf(3), it is highly recommended that you use snprintf(3) instead. [-Wdeprecated-declarations] . ### Failing tests:; - [projectroot.bindings.experimental.distrdf.test.pyunittests_distrdf_unit_test_operation](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/165367/testReport/projectroot.bindings.experimental.distrdf/test/pyunittests_distrdf_unit_test_operation/); - [projectroot.bindings.pyroot.pythonizations.test.pyunittests_pyroot_pyz_rdataframe_makenumpy](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/165367/testReport/projectroot.bindings.pyroot.pythonizations/test/pyunittests_pyroot_pyz_rdataframe_makenumpy/); - [projectroot.bindings.pyroot.pythonizations.test.pyunittests_pyroot_pyz_rdataframe_histo_profile](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/165367/testReport/projectroot.bindings.pyroot.pythonizations/test/pyunittests_pyroot_pyz_rdataframe_histo_profile/); - [projectroot.bindings.pyroot.pythonizations.test.pyunittests_pyroot_pyz_rtensor](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/165367/testReport/projectroot.bindings.pyroot.pythonizations/test/pyunittests_pyroot_pyz_rtensor/); - [projectroot.roottest.cling.const.roottest_cling_const_run2](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/165367/testReport/projectroot.roottest.cling/const/roottest_cling_const_run2/); - [projectroot.roottest.cli",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12079#issuecomment-1400238026:493,secur,security,493,https://root.cern,https://github.com/root-project/root/pull/12079#issuecomment-1400238026,1,['secur'],['security']
Security,"Build failed on mac12/noimt.; Running on macphsft18.dyndns.cern.ch:/Users/sftnight/build/jenkins/workspace/root-pullrequests-build; [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/166190/console).; ### Warnings:; - [2023-01-30T08:42:27.881Z] /Users/sftnight/build/jenkins/workspace/root-pullrequests-build/root/core/base/src/TDirectory.cxx:1292:7: warning: 'sprintf' is deprecated: This function is provided for compatibility reasons only. Due to security concerns inherent in the design of sprintf(3), it is highly recommended that you use snprintf(3) instead. [-Wdeprecated-declarations]",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12139#issuecomment-1408248369:493,secur,security,493,https://root.cern,https://github.com/root-project/root/pull/12139#issuecomment-1408248369,1,['secur'],['security']
Security,"Build failed on mac12/noimt.; Running on macphsft18.dyndns.cern.ch:/Users/sftnight/build/jenkins/workspace/root-pullrequests-build; [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/166195/console).; ### Warnings:; - [2023-01-30T10:49:36.683Z] /Users/sftnight/build/jenkins/workspace/root-pullrequests-build/root/core/base/src/TDirectory.cxx:1292:7: warning: 'sprintf' is deprecated: This function is provided for compatibility reasons only. Due to security concerns inherent in the design of sprintf(3), it is highly recommended that you use snprintf(3) instead. [-Wdeprecated-declarations]",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12159#issuecomment-1408435626:493,secur,security,493,https://root.cern,https://github.com/root-project/root/pull/12159#issuecomment-1408435626,1,['secur'],['security']
Security,"Build failed on mac12/noimt.; Running on macphsft18.dyndns.cern.ch:/Users/sftnight/build/jenkins/workspace/root-pullrequests-build; [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/166209/console).; ### Warnings:; - [2023-01-30T11:29:44.773Z] /Users/sftnight/build/jenkins/workspace/root-pullrequests-build/root/core/base/src/TDirectory.cxx:1292:7: warning: 'sprintf' is deprecated: This function is provided for compatibility reasons only. Due to security concerns inherent in the design of sprintf(3), it is highly recommended that you use snprintf(3) instead. [-Wdeprecated-declarations]",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12160#issuecomment-1408488320:493,secur,security,493,https://root.cern,https://github.com/root-project/root/pull/12160#issuecomment-1408488320,1,['secur'],['security']
Security,"Build failed on mac12/noimt.; Running on macphsft18.dyndns.cern.ch:/Users/sftnight/build/jenkins/workspace/root-pullrequests-build; [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/166216/console).; ### Warnings:; - [2023-01-30T12:00:48.174Z] /Users/sftnight/build/jenkins/workspace/root-pullrequests-build/root/core/base/src/TDirectory.cxx:1292:7: warning: 'sprintf' is deprecated: This function is provided for compatibility reasons only. Due to security concerns inherent in the design of sprintf(3), it is highly recommended that you use snprintf(3) instead. [-Wdeprecated-declarations]",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12161#issuecomment-1408528852:493,secur,security,493,https://root.cern,https://github.com/root-project/root/pull/12161#issuecomment-1408528852,1,['secur'],['security']
Security,"Build failed on mac12/noimt.; Running on macphsft18.dyndns.cern.ch:/Users/sftnight/build/jenkins/workspace/root-pullrequests-build; [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/166223/console).; ### Warnings:; - [2023-01-30T12:32:09.594Z] /Users/sftnight/build/jenkins/workspace/root-pullrequests-build/root/core/base/src/TDirectory.cxx:1292:7: warning: 'sprintf' is deprecated: This function is provided for compatibility reasons only. Due to security concerns inherent in the design of sprintf(3), it is highly recommended that you use snprintf(3) instead. [-Wdeprecated-declarations]",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12074#issuecomment-1408585278:493,secur,security,493,https://root.cern,https://github.com/root-project/root/pull/12074#issuecomment-1408585278,1,['secur'],['security']
Security,"Build failed on mac12/noimt.; Running on macphsft18.dyndns.cern.ch:/Users/sftnight/build/jenkins/workspace/root-pullrequests-build; [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/166230/console).; ### Warnings:; - [2023-01-30T13:03:05.638Z] /Users/sftnight/build/jenkins/workspace/root-pullrequests-build/root/core/base/src/TDirectory.cxx:1292:7: warning: 'sprintf' is deprecated: This function is provided for compatibility reasons only. Due to security concerns inherent in the design of sprintf(3), it is highly recommended that you use snprintf(3) instead. [-Wdeprecated-declarations]",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12157#issuecomment-1408632925:493,secur,security,493,https://root.cern,https://github.com/root-project/root/pull/12157#issuecomment-1408632925,1,['secur'],['security']
Security,"Build failed on mac12/noimt.; Running on macphsft18.dyndns.cern.ch:/Users/sftnight/build/jenkins/workspace/root-pullrequests-build; [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/166237/console).; ### Warnings:; - [2023-01-30T13:42:11.414Z] /Users/sftnight/build/jenkins/workspace/root-pullrequests-build/root/core/base/src/TDirectory.cxx:1292:7: warning: 'sprintf' is deprecated: This function is provided for compatibility reasons only. Due to security concerns inherent in the design of sprintf(3), it is highly recommended that you use snprintf(3) instead. [-Wdeprecated-declarations]",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12163#issuecomment-1408709182:493,secur,security,493,https://root.cern,https://github.com/root-project/root/pull/12163#issuecomment-1408709182,1,['secur'],['security']
Security,"Build failed on mac12/noimt.; Running on macphsft18.dyndns.cern.ch:/Users/sftnight/build/jenkins/workspace/root-pullrequests-build; [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/166244/console).; ### Warnings:; - [2023-01-30T14:28:17.499Z] /Users/sftnight/build/jenkins/workspace/root-pullrequests-build/root/core/base/src/TDirectory.cxx:1292:7: warning: 'sprintf' is deprecated: This function is provided for compatibility reasons only. Due to security concerns inherent in the design of sprintf(3), it is highly recommended that you use snprintf(3) instead. [-Wdeprecated-declarations]",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12154#issuecomment-1408792800:493,secur,security,493,https://root.cern,https://github.com/root-project/root/pull/12154#issuecomment-1408792800,1,['secur'],['security']
Security,"Build failed on mac12/noimt.; Running on macphsft18.dyndns.cern.ch:/Users/sftnight/build/jenkins/workspace/root-pullrequests-build; [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/166331/console).; ### Warnings:; - [2023-01-30T18:08:46.918Z] /Users/sftnight/build/jenkins/workspace/root-pullrequests-build/root/core/base/src/TDirectory.cxx:1292:7: warning: 'sprintf' is deprecated: This function is provided for compatibility reasons only. Due to security concerns inherent in the design of sprintf(3), it is highly recommended that you use snprintf(3) instead. [-Wdeprecated-declarations]",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12145#issuecomment-1409126101:493,secur,security,493,https://root.cern,https://github.com/root-project/root/pull/12145#issuecomment-1409126101,1,['secur'],['security']
Security,"Build failed on mac12/noimt.; Running on macphsft18.dyndns.cern.ch:/Users/sftnight/build/jenkins/workspace/root-pullrequests-build; [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/166376/console).; ### Warnings:; - [2023-01-31T07:38:25.134Z] /Users/sftnight/build/jenkins/workspace/root-pullrequests-build/root/core/base/src/TDirectory.cxx:1292:7: warning: 'sprintf' is deprecated: This function is provided for compatibility reasons only. Due to security concerns inherent in the design of sprintf(3), it is highly recommended that you use snprintf(3) instead. [-Wdeprecated-declarations]",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12176#issuecomment-1409926805:493,secur,security,493,https://root.cern,https://github.com/root-project/root/pull/12176#issuecomment-1409926805,1,['secur'],['security']
Security,"Build failed on mac12/noimt.; Running on macphsft18.dyndns.cern.ch:/Users/sftnight/build/jenkins/workspace/root-pullrequests-build; [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/166383/console).; ### Warnings:; - [2023-01-31T09:49:38.749Z] /Users/sftnight/build/jenkins/workspace/root-pullrequests-build/root/core/base/src/TDirectory.cxx:1292:7: warning: 'sprintf' is deprecated: This function is provided for compatibility reasons only. Due to security concerns inherent in the design of sprintf(3), it is highly recommended that you use snprintf(3) instead. [-Wdeprecated-declarations]",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12177#issuecomment-1410093357:493,secur,security,493,https://root.cern,https://github.com/root-project/root/pull/12177#issuecomment-1410093357,1,['secur'],['security']
Security,"Build failed on mac12/noimt.; Running on macphsft18.dyndns.cern.ch:/Users/sftnight/build/jenkins/workspace/root-pullrequests-build; [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/166397/console).; ### Warnings:; - [2023-01-31T11:53:30.844Z] /Users/sftnight/build/jenkins/workspace/root-pullrequests-build/root/core/base/src/TDirectory.cxx:1292:7: warning: 'sprintf' is deprecated: This function is provided for compatibility reasons only. Due to security concerns inherent in the design of sprintf(3), it is highly recommended that you use snprintf(3) instead. [-Wdeprecated-declarations]",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12179#issuecomment-1410249742:493,secur,security,493,https://root.cern,https://github.com/root-project/root/pull/12179#issuecomment-1410249742,1,['secur'],['security']
Security,"Build failed on mac12/noimt.; Running on macphsft18.dyndns.cern.ch:/Users/sftnight/build/jenkins/workspace/root-pullrequests-build; [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/166418/console).; ### Warnings:; - [2023-01-31T12:25:15.810Z] /Users/sftnight/build/jenkins/workspace/root-pullrequests-build/root/core/base/src/TDirectory.cxx:1292:7: warning: 'sprintf' is deprecated: This function is provided for compatibility reasons only. Due to security concerns inherent in the design of sprintf(3), it is highly recommended that you use snprintf(3) instead. [-Wdeprecated-declarations]",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11096#issuecomment-1410299013:493,secur,security,493,https://root.cern,https://github.com/root-project/root/pull/11096#issuecomment-1410299013,1,['secur'],['security']
Security,"Build failed on mac12/noimt.; Running on macphsft18.dyndns.cern.ch:/Users/sftnight/build/jenkins/workspace/root-pullrequests-build; [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/166432/console).; ### Warnings:; - [2023-01-31T13:20:39.939Z] /Users/sftnight/build/jenkins/workspace/root-pullrequests-build/root/core/base/src/TDirectory.cxx:1292:7: warning: 'sprintf' is deprecated: This function is provided for compatibility reasons only. Due to security concerns inherent in the design of sprintf(3), it is highly recommended that you use snprintf(3) instead. [-Wdeprecated-declarations]",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12178#issuecomment-1410386097:493,secur,security,493,https://root.cern,https://github.com/root-project/root/pull/12178#issuecomment-1410386097,1,['secur'],['security']
Security,"Build failed on mac12/noimt.; Running on macphsft18.dyndns.cern.ch:/Users/sftnight/build/jenkins/workspace/root-pullrequests-build; [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/166447/console).; ### Warnings:; - [2023-01-31T13:52:07.718Z] /Users/sftnight/build/jenkins/workspace/root-pullrequests-build/root/core/base/src/TDirectory.cxx:1292:7: warning: 'sprintf' is deprecated: This function is provided for compatibility reasons only. Due to security concerns inherent in the design of sprintf(3), it is highly recommended that you use snprintf(3) instead. [-Wdeprecated-declarations]",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12174#issuecomment-1410443016:493,secur,security,493,https://root.cern,https://github.com/root-project/root/pull/12174#issuecomment-1410443016,1,['secur'],['security']
Security,"Build failed on mac12/noimt.; Running on macphsft18.dyndns.cern.ch:/Users/sftnight/build/jenkins/workspace/root-pullrequests-build; [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/172551/console).; ### Warnings:; - [2023-04-13T21:36:03.607Z] /Users/sftnight/build/jenkins/workspace/root-pullrequests-build/root/core/base/src/TTimeStamp.cxx:289:7: warning: 'sprintf' is deprecated: This function is provided for compatibility reasons only. Due to security concerns inherent in the design of sprintf(3), it is highly recommended that you use snprintf(3) instead. [-Wdeprecated-declarations] ; - [2023-04-13T21:36:03.607Z] /Users/sftnight/build/jenkins/workspace/root-pullrequests-build/root/core/base/src/TTimeStamp.cxx:335:4: warning: 'sprintf' is deprecated: This function is provided for compatibility reasons only. Due to security concerns inherent in the design of sprintf(3), it is highly recommended that you use snprintf(3) instead. [-Wdeprecated-declarations] ; - [2023-04-13T21:36:03.865Z] /Users/sftnight/build/jenkins/workspace/root-pullrequests-build/root/core/base/src/TUri.cxx:827:10: warning: 'sprintf' is deprecated: This function is provided for compatibility reasons only. Due to security concerns inherent in the design of sprintf(3), it is highly recommended that you use snprintf(3) instead. [-Wdeprecated-declarations] ; - [2023-04-13T21:36:04.135Z] /Users/sftnight/build/jenkins/workspace/root-pullrequests-build/root/core/base/src/TUrl.cxx:199:10: warning: 'sprintf' is deprecated: This function is provided for compatibility reasons only. Due to security concerns inherent in the design of sprintf(3), it is highly recommended that you use snprintf(3) instead. [-Wdeprecated-declarations] ; - [2023-04-13T21:36:04.135Z] /Users/sftnight/build/jenkins/workspace/root-pullrequests-build/root/core/base/src/TUrl.cxx:449:10: warning: 'sprintf' is deprecated: This function is provided for compatibility reasons only. Due to security con",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12604#issuecomment-1507678411:492,secur,security,492,https://root.cern,https://github.com/root-project/root/pull/12604#issuecomment-1507678411,2,['secur'],['security']
Security,"Build failed on mac13/cxx17.; Running on macphsft21.dyndns.cern.ch:/Users/sftnight/build/workspace/root-pullrequests-build; [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/164808/console).; ### Warnings:; - [2023-01-19T15:56:03.178Z] /System/Volumes/Data/build/workspace/root-pullrequests-build/root/core/base/src/TDirectory.cxx:1245:7: warning: 'sprintf' is deprecated: This function is provided for compatibility reasons only. Due to security concerns inherent in the design of sprintf(3), it is highly recommended that you use snprintf(3) instead. [-Wdeprecated-declarations] . ### Failing tests:; - [projectroot.hist.histdrawv7.test.gtest_hist_histdrawv7_test_histhistdrawv7testUnit](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/164808/testReport/projectroot.hist.histdrawv7/test/gtest_hist_histdrawv7_test_histhistdrawv7testUnit/)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12062#issuecomment-1397279980:482,secur,security,482,https://root.cern,https://github.com/root-project/root/pull/12062#issuecomment-1397279980,1,['secur'],['security']
Security,"Build failed on mac13arm/cxx17.; Running on macphsft25.dyndns.cern.ch:/Users/sftnight/build/workspace/root-pullrequests-build; [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/164811/console).; ### Warnings:; - [2023-01-19T15:46:34.162Z] /Users/sftnight/build/workspace/root-pullrequests-build/root/core/base/src/TDirectory.cxx:1245:7: warning: 'sprintf' is deprecated: This function is provided for compatibility reasons only. Due to security concerns inherent in the design of sprintf(3), it is highly recommended that you use snprintf(3) instead. [-Wdeprecated-declarations] ; - [2023-01-19T15:47:51.129Z] /Users/sftnight/build/workspace/root-pullrequests-build/build/ginclude/tbb/machine/macos_common.h:55:13: warning: 'OSAtomicCompareAndSwap64Barrier' is deprecated: first deprecated in macOS 10.12 - Use std::atomic_compare_exchange_strong() from &lt;atomic&gt; instead [-Wdeprecated-declarations] ; - [2023-01-19T15:47:51.130Z] /Users/sftnight/build/workspace/root-pullrequests-build/build/ginclude/tbb/machine/macos_common.h:59:28: warning: 'OSAtomicAdd64' is deprecated: first deprecated in macOS 10.12 - Use std::atomic_fetch_add_explicit(std::memory_order_relaxed) from &lt;atomic&gt; instead [-Wdeprecated-declarations] ; - [2023-01-19T15:47:51.130Z] /Users/sftnight/build/workspace/root-pullrequests-build/build/ginclude/tbb/machine/macos_common.h:100:13: warning: 'OSAtomicCompareAndSwap32Barrier' is deprecated: first deprecated in macOS 10.12 - Use std::atomic_compare_exchange_strong() from &lt;atomic&gt; instead [-Wdeprecated-declarations] ; - [2023-01-19T15:47:51.130Z] /Users/sftnight/build/workspace/root-pullrequests-build/build/ginclude/tbb/machine/macos_common.h:110:12: warning: 'OSAtomicAdd32Barrier' is deprecated: first deprecated in macOS 10.12 - Use std::atomic_fetch_add() from &lt;atomic&gt; instead [-Wdeprecated-declarations] ; - [2023-01-19T15:47:51.130Z] /Users/sftnight/build/workspace/root-pullrequests-build/build/gi",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12062#issuecomment-1397223966:480,secur,security,480,https://root.cern,https://github.com/root-project/root/pull/12062#issuecomment-1397223966,1,['secur'],['security']
Security,"Build failed on mac13arm/default.; Running on macphsft25.dyndns.cern.ch:/Users/sftnight/build/workspace/root-pullrequests-build; [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/164577/console).; ### Warnings:; - [2023-01-18T07:43:16.758Z] /Users/sftnight/build/workspace/root-pullrequests-build/root/core/base/src/TDirectory.cxx:1245:7: warning: 'sprintf' is deprecated: This function is provided for compatibility reasons only. Due to security concerns inherent in the design of sprintf(3), it is highly recommended that you use snprintf(3) instead. [-Wdeprecated-declarations] ; - [2023-01-18T07:43:46.960Z] /Users/sftnight/build/workspace/root-pullrequests-build/build/ginclude/tbb/machine/macos_common.h:55:13: warning: 'OSAtomicCompareAndSwap64Barrier' is deprecated: first deprecated in macOS 10.12 - Use std::atomic_compare_exchange_strong() from &lt;atomic&gt; instead [-Wdeprecated-declarations] ; - [2023-01-18T07:43:46.960Z] /Users/sftnight/build/workspace/root-pullrequests-build/build/ginclude/tbb/machine/macos_common.h:59:28: warning: 'OSAtomicAdd64' is deprecated: first deprecated in macOS 10.12 - Use std::atomic_fetch_add_explicit(std::memory_order_relaxed) from &lt;atomic&gt; instead [-Wdeprecated-declarations] ; - [2023-01-18T07:43:46.960Z] /Users/sftnight/build/workspace/root-pullrequests-build/build/ginclude/tbb/machine/macos_common.h:100:13: warning: 'OSAtomicCompareAndSwap32Barrier' is deprecated: first deprecated in macOS 10.12 - Use std::atomic_compare_exchange_strong() from &lt;atomic&gt; instead [-Wdeprecated-declarations] ; - [2023-01-18T07:43:46.960Z] /Users/sftnight/build/workspace/root-pullrequests-build/build/ginclude/tbb/machine/macos_common.h:110:12: warning: 'OSAtomicAdd32Barrier' is deprecated: first deprecated in macOS 10.12 - Use std::atomic_fetch_add() from &lt;atomic&gt; instead [-Wdeprecated-declarations] ; - [2023-01-18T07:43:46.960Z] /Users/sftnight/build/workspace/root-pullrequests-build/build/",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11946#issuecomment-1386638532:482,secur,security,482,https://root.cern,https://github.com/root-project/root/pull/11946#issuecomment-1386638532,1,['secur'],['security']
Security,"Build failed on macbeta/default.; Running on 194.12.145.0:/Users/sftnight/build/jenkins/workspace/root-pullrequests-build; [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/159680/console).; ### Warnings:; - [2022-11-23T13:08:33.688Z] /Users/sftnight/build/jenkins/workspace/root-pullrequests-build/root/core/base/src/TDirectory.cxx:1245:7: warning: 'sprintf' is deprecated: This function is provided for compatibility reasons only. Due to security concerns inherent in the design of sprintf(3), it is highly recommended that you use snprintf(3) instead. [-Wdeprecated-declarations] ; - [2022-11-23T13:09:36.954Z] /Users/sftnight/build/jenkins/workspace/root-pullrequests-build/root/bindings/pyroot/cppyy/CPyCppyy/src/API.cxx:72:9: warning: 'PySys_SetArgv' is deprecated [-Wdeprecated-declarations] ; - [2022-11-23T13:17:38.258Z] /Users/sftnight/build/jenkins/workspace/root-pullrequests-build/root/tmva/pymva/src/PyMethodBase.cxx:258:4: warning: 'Py_SetProgramName' is deprecated [-Wdeprecated-declarations] . ### Failing tests:; - [projectroot.runtutorials.test_import_pandas](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/159680/testReport/projectroot/runtutorials/test_import_pandas/); - [projectroot.runtutorials.test_import_numba](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/159680/testReport/projectroot/runtutorials/test_import_numba/); - [projectroot.bindings.pyroot.pythonizations.test.test_import_numba](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/159680/testReport/projectroot.bindings.pyroot.pythonizations/test/test_import_numba/); - [projectroot.bindings.pyroot.pythonizations.test.pyunittests_pyroot_dependency_versions](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/159680/testReport/projectroot.bindings.pyroot.pythonizations/test/pyunittests_pyroot_dependency_versions/); - [projectroot.roottest.cling.other.roottest_cling_oth",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10294#issuecomment-1325092461:484,secur,security,484,https://root.cern,https://github.com/root-project/root/pull/10294#issuecomment-1325092461,1,['secur'],['security']
Security,Build failed on slc6-i686/gcc49.; [See console output](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/32992/console).; ### Errors:; - ERROR: Error fetching remote repo 'origin' ; - stderr: error: The requested URL returned error: 403 Forbidden while accessing https://github.com/root-project/root.git/info/refs ; - ERROR: Error fetching remote repo 'origin' . ### Warnings:; - ninja: warning: multiple rules generate lib/libGenVector.rootmap. builds involving this target will not be correct; continuing anyway [-w dupbuild=warn],MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2344#issuecomment-406498237:261,access,accessing,261,https://root.cern,https://github.com/root-project/root/pull/2344#issuecomment-406498237,1,['access'],['accessing']
Security,Build failed on slc6/gcc49.; [See console output](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/8170/console).; ### Errors:; - /mnt/build/jenkins/workspace/root-pullrequests-build/build/tutorials/rootalias.C:70:4: error: unknown type name 'TPaveText' ; - /mnt/build/jenkins/workspace/root-pullrequests-build/build/tutorials/rootalias.C:70:26: error: use of undeclared identifier 'TPaveText' ; - /mnt/build/jenkins/workspace/root-pullrequests-build/build/tutorials/rootalias.C:70:36: error: expected expression ; - /mnt/build/jenkins/workspace/root-pullrequests-build/build/tutorials/rootalias.C:71:4: error: unknown type name 'TText' ; - /mnt/build/jenkins/workspace/root-pullrequests-build/build/tutorials/rootalias.C:73:9: error: member access into incomplete type 'TCanvas' ; - /mnt/build/jenkins/workspace/root-pullrequests-build/build/tutorials/rootalias.C:73:28: error: member access into incomplete type 'TCanvas' ; - /mnt/build/jenkins/workspace/root-pullrequests-build/build/tutorials/rootalias.C:77:4: error: unknown type name 'TPaveText' ; - /mnt/build/jenkins/workspace/root-pullrequests-build/build/tutorials/rootalias.C:77:27: error: use of undeclared identifier 'TPaveText' ; - /mnt/build/jenkins/workspace/root-pullrequests-build/build/tutorials/rootalias.C:77:37: error: expected expression ; - /mnt/build/jenkins/workspace/root-pullrequests-build/build/tutorials/rootalias.C:78:4: error: unknown type name 'TText' . And 81 more,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1136#issuecomment-334455869:751,access,access,751,https://root.cern,https://github.com/root-project/root/pull/1136#issuecomment-334455869,2,['access'],['access']
Security,Build failed on slc6/gcc49.; [See console output](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/8200/console).; ### Errors:; - /mnt/build/jenkins/workspace/root-pullrequests-build/build/tutorials/rootalias.C:70:4: error: unknown type name 'TPaveText' ; - /mnt/build/jenkins/workspace/root-pullrequests-build/build/tutorials/rootalias.C:70:26: error: use of undeclared identifier 'TPaveText' ; - /mnt/build/jenkins/workspace/root-pullrequests-build/build/tutorials/rootalias.C:70:36: error: expected expression ; - /mnt/build/jenkins/workspace/root-pullrequests-build/build/tutorials/rootalias.C:71:4: error: unknown type name 'TText' ; - /mnt/build/jenkins/workspace/root-pullrequests-build/build/tutorials/rootalias.C:73:9: error: member access into incomplete type 'TCanvas' ; - /mnt/build/jenkins/workspace/root-pullrequests-build/build/tutorials/rootalias.C:73:28: error: member access into incomplete type 'TCanvas' ; - /mnt/build/jenkins/workspace/root-pullrequests-build/build/tutorials/rootalias.C:77:4: error: unknown type name 'TPaveText' ; - /mnt/build/jenkins/workspace/root-pullrequests-build/build/tutorials/rootalias.C:77:27: error: use of undeclared identifier 'TPaveText' ; - /mnt/build/jenkins/workspace/root-pullrequests-build/build/tutorials/rootalias.C:77:37: error: expected expression ; - /mnt/build/jenkins/workspace/root-pullrequests-build/build/tutorials/rootalias.C:78:4: error: unknown type name 'TText' . And 6 more. ### Warnings:; - Warning in &lt;GenerateModule&gt;: warning: Couldn't find the following specified headers in the module Core: ; - Warning in &lt;GenerateModule&gt;: warning: Couldn't find the following specified headers in the module unordered_setDict: ; - Warning in &lt;GenerateModule&gt;: warning: Couldn't find the following specified headers in the module setDict: ; - Warning in &lt;GenerateModule&gt;: warning: Couldn't find the following specified headers in the module dequeDict: ; - Warning in &lt;GenerateModule&gt;: warning: Could,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1139#issuecomment-334481161:751,access,access,751,https://root.cern,https://github.com/root-project/root/pull/1139#issuecomment-334481161,2,['access'],['access']
Security,Build failed on slc6/gcc49.; [See console output](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/8225/console).; ### Errors:; - /mnt/build/jenkins/workspace/root-pullrequests-build/build/tutorials/rootalias.C:70:4: error: unknown type name 'TPaveText' ; - /mnt/build/jenkins/workspace/root-pullrequests-build/build/tutorials/rootalias.C:70:26: error: use of undeclared identifier 'TPaveText' ; - /mnt/build/jenkins/workspace/root-pullrequests-build/build/tutorials/rootalias.C:70:36: error: expected expression ; - /mnt/build/jenkins/workspace/root-pullrequests-build/build/tutorials/rootalias.C:71:4: error: unknown type name 'TText' ; - /mnt/build/jenkins/workspace/root-pullrequests-build/build/tutorials/rootalias.C:73:9: error: member access into incomplete type 'TCanvas' ; - /mnt/build/jenkins/workspace/root-pullrequests-build/build/tutorials/rootalias.C:73:28: error: member access into incomplete type 'TCanvas' ; - /mnt/build/jenkins/workspace/root-pullrequests-build/build/tutorials/rootalias.C:77:4: error: unknown type name 'TPaveText' ; - /mnt/build/jenkins/workspace/root-pullrequests-build/build/tutorials/rootalias.C:77:27: error: use of undeclared identifier 'TPaveText' ; - /mnt/build/jenkins/workspace/root-pullrequests-build/build/tutorials/rootalias.C:77:37: error: expected expression ; - /mnt/build/jenkins/workspace/root-pullrequests-build/build/tutorials/rootalias.C:78:4: error: unknown type name 'TText' . And 6 more. ### Warnings:; - Warning in &lt;GenerateModule&gt;: warning: Couldn't find the following specified headers in the module Core: ; - Warning in &lt;GenerateModule&gt;: warning: Couldn't find the following specified headers in the module dequeDict: ; - Warning in &lt;GenerateModule&gt;: warning: Couldn't find the following specified headers in the module listDict: ; - Warning in &lt;GenerateModule&gt;: warning: Couldn't find the following specified headers in the module valarrayDict: ; - Warning in &lt;GenerateModule&gt;: warning: Couldn't ,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1139#issuecomment-334490516:751,access,access,751,https://root.cern,https://github.com/root-project/root/pull/1139#issuecomment-334490516,2,['access'],['access']
Security,Build failed on slc6/gcc49.; [See console output](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/8985/console).; ### Errors:; - /mnt/build/jenkins/workspace/root-pullrequests-build/build/tutorials/rootalias.C:70:4: error: unknown type name 'TPaveText' ; - /mnt/build/jenkins/workspace/root-pullrequests-build/build/tutorials/rootalias.C:70:26: error: use of undeclared identifier 'TPaveText' ; - /mnt/build/jenkins/workspace/root-pullrequests-build/build/tutorials/rootalias.C:70:36: error: expected expression ; - /mnt/build/jenkins/workspace/root-pullrequests-build/build/tutorials/rootalias.C:71:4: error: unknown type name 'TText' ; - /mnt/build/jenkins/workspace/root-pullrequests-build/build/tutorials/rootalias.C:73:9: error: member access into incomplete type 'TCanvas' ; - /mnt/build/jenkins/workspace/root-pullrequests-build/build/tutorials/rootalias.C:73:28: error: member access into incomplete type 'TCanvas' ; - /mnt/build/jenkins/workspace/root-pullrequests-build/build/tutorials/rootalias.C:77:4: error: unknown type name 'TPaveText' ; - /mnt/build/jenkins/workspace/root-pullrequests-build/build/tutorials/rootalias.C:77:27: error: use of undeclared identifier 'TPaveText' ; - /mnt/build/jenkins/workspace/root-pullrequests-build/build/tutorials/rootalias.C:77:37: error: expected expression ; - /mnt/build/jenkins/workspace/root-pullrequests-build/build/tutorials/rootalias.C:78:4: error: unknown type name 'TText' . And 110 more,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1188#issuecomment-336672725:751,access,access,751,https://root.cern,https://github.com/root-project/root/pull/1188#issuecomment-336672725,2,['access'],['access']
Security,Build failed on slc6/gcc49.; [See console output](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/9011/console).; ### Errors:; - /mnt/build/jenkins/workspace/root-pullrequests-build/build/tutorials/rootalias.C:70:4: error: unknown type name 'TPaveText' ; - /mnt/build/jenkins/workspace/root-pullrequests-build/build/tutorials/rootalias.C:70:26: error: use of undeclared identifier 'TPaveText' ; - /mnt/build/jenkins/workspace/root-pullrequests-build/build/tutorials/rootalias.C:70:36: error: expected expression ; - /mnt/build/jenkins/workspace/root-pullrequests-build/build/tutorials/rootalias.C:71:4: error: unknown type name 'TText' ; - /mnt/build/jenkins/workspace/root-pullrequests-build/build/tutorials/rootalias.C:73:9: error: member access into incomplete type 'TCanvas' ; - /mnt/build/jenkins/workspace/root-pullrequests-build/build/tutorials/rootalias.C:73:28: error: member access into incomplete type 'TCanvas' ; - /mnt/build/jenkins/workspace/root-pullrequests-build/build/tutorials/rootalias.C:77:4: error: unknown type name 'TPaveText' ; - /mnt/build/jenkins/workspace/root-pullrequests-build/build/tutorials/rootalias.C:77:27: error: use of undeclared identifier 'TPaveText' ; - /mnt/build/jenkins/workspace/root-pullrequests-build/build/tutorials/rootalias.C:77:37: error: expected expression ; - /mnt/build/jenkins/workspace/root-pullrequests-build/build/tutorials/rootalias.C:78:4: error: unknown type name 'TText' . And 110 more,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1188#issuecomment-336695462:751,access,access,751,https://root.cern,https://github.com/root-project/root/pull/1188#issuecomment-336695462,2,['access'],['access']
Security,Build failed on slc6/gcc49.; [See console output](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/9774/console).; ### Errors:; - /mnt/build/jenkins/workspace/root-pullrequests-build/build/tutorials/rootalias.C:70:4: error: unknown type name 'TPaveText' ; - /mnt/build/jenkins/workspace/root-pullrequests-build/build/tutorials/rootalias.C:70:26: error: use of undeclared identifier 'TPaveText' ; - /mnt/build/jenkins/workspace/root-pullrequests-build/build/tutorials/rootalias.C:70:36: error: expected expression ; - /mnt/build/jenkins/workspace/root-pullrequests-build/build/tutorials/rootalias.C:71:4: error: unknown type name 'TText' ; - /mnt/build/jenkins/workspace/root-pullrequests-build/build/tutorials/rootalias.C:73:9: error: member access into incomplete type 'TCanvas' ; - /mnt/build/jenkins/workspace/root-pullrequests-build/build/tutorials/rootalias.C:73:28: error: member access into incomplete type 'TCanvas' ; - /mnt/build/jenkins/workspace/root-pullrequests-build/build/tutorials/rootalias.C:77:4: error: unknown type name 'TPaveText' ; - /mnt/build/jenkins/workspace/root-pullrequests-build/build/tutorials/rootalias.C:77:27: error: use of undeclared identifier 'TPaveText' ; - /mnt/build/jenkins/workspace/root-pullrequests-build/build/tutorials/rootalias.C:77:37: error: expected expression ; - /mnt/build/jenkins/workspace/root-pullrequests-build/build/tutorials/rootalias.C:78:4: error: unknown type name 'TText' . And 8 more. ### Warnings:; - Warning in &lt;GenerateModule&gt;: warning: Couldn't find the following specified headers in the module Core: ; - Warning in &lt;GenerateModule&gt;: warning: Couldn't find the following specified headers in the module forward_listDict: ; - Warning in &lt;GenerateModule&gt;: warning: Couldn't find the following specified headers in the module listDict: ; - Warning in &lt;GenerateModule&gt;: warning: Couldn't find the following specified headers in the module vectorDict: ; - Warning in &lt;GenerateModule&gt;: warning: Coul,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1229#issuecomment-339572383:751,access,access,751,https://root.cern,https://github.com/root-project/root/pull/1229#issuecomment-339572383,2,['access'],['access']
Security,Build failed on slc6/gcc62.; [See console output](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/12360/console).; ### Errors:; - /mnt/build/jenkins/workspace/root-pullrequests-build/build/tutorials/rootalias.C:70:4: error: unknown type name 'TPaveText' ; - /mnt/build/jenkins/workspace/root-pullrequests-build/build/tutorials/rootalias.C:70:26: error: use of undeclared identifier 'TPaveText' ; - /mnt/build/jenkins/workspace/root-pullrequests-build/build/tutorials/rootalias.C:70:36: error: expected expression ; - /mnt/build/jenkins/workspace/root-pullrequests-build/build/tutorials/rootalias.C:71:4: error: unknown type name 'TText' ; - /mnt/build/jenkins/workspace/root-pullrequests-build/build/tutorials/rootalias.C:73:9: error: member access into incomplete type 'TCanvas' ; - /mnt/build/jenkins/workspace/root-pullrequests-build/build/tutorials/rootalias.C:73:28: error: member access into incomplete type 'TCanvas' ; - /mnt/build/jenkins/workspace/root-pullrequests-build/build/tutorials/rootalias.C:77:4: error: unknown type name 'TPaveText' ; - /mnt/build/jenkins/workspace/root-pullrequests-build/build/tutorials/rootalias.C:77:27: error: use of undeclared identifier 'TPaveText' ; - /mnt/build/jenkins/workspace/root-pullrequests-build/build/tutorials/rootalias.C:77:37: error: expected expression ; - /mnt/build/jenkins/workspace/root-pullrequests-build/build/tutorials/rootalias.C:78:4: error: unknown type name 'TText' . And 2 more. ### Warnings:; - Warning in &lt;GenerateModule&gt;: warning: Couldn't find the following specified headers in the module Core: ; - Warning in &lt;GenerateModule&gt;: warning: Couldn't find the following specified headers in the module unordered_multisetDict: ; - Warning in &lt;GenerateModule&gt;: warning: Couldn't find the following specified headers in the module listDict: ; - Warning in &lt;GenerateModule&gt;: warning: Couldn't find the following specified headers in the module unordered_setDict: ; - Warning in &lt;GenerateModule&gt;:,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1356#issuecomment-346700271:752,access,access,752,https://root.cern,https://github.com/root-project/root/pull/1356#issuecomment-346700271,2,['access'],['access']
Security,"Build failed on slc6/gcc62.; [See console output](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/19312/console).; ### Errors:; - Error in &lt;TStreamerInfo::Build&gt;: TBaseClass: BaseClassInfo_t* has no streamer or dictionary, data member fInfo will not be saved ; - Error in &lt;TBufferFile::CheckByteCount&gt;: object of class TDictionary read too many bytes: 39 instead of 31 ; - Error in &lt;TExMap::Remove&gt;: key 1186048 not found at 478 ; - Error in &lt;TExMap::Remove&gt;: key 3 not found at 3 ; - Error in &lt;TExMap::Remove&gt;: key 3045 not found at 27 ; - Error in &lt;TBufferFile::ReadClassBuffer&gt;: class: TClassRef, attempting to access a wrong version: 4633, object skipped at offset 265 ; - Error in &lt;TExMap::Remove&gt;: key 591700 not found at 173 ; - Error in &lt;TBufferFile::CheckByteCount&gt;: object of class TBaseClass read too few bytes: 67 instead of 73 ; - Error in &lt;TExMap::Remove&gt;: key 1074331651 not found at 107 ; - Error in &lt;TExMap::Remove&gt;: key 156520290 not found at 272 . And 352 more. ### Warnings:; - ninja: warning: multiple rules generate tutorials/hsimple.root. builds involving this target will not be correct; continuing anyway [-w dupbuild=warn]",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1697#issuecomment-372155080:660,access,access,660,https://root.cern,https://github.com/root-project/root/pull/1697#issuecomment-372155080,1,['access'],['access']
Security,"Build failed on slc6/gcc62.; [See console output](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/19318/console).; ### Errors:; - Error in &lt;TStreamerInfo::Build&gt;: TBaseClass: BaseClassInfo_t* has no streamer or dictionary, data member fInfo will not be saved ; - Error in &lt;TBufferFile::CheckByteCount&gt;: object of class TDictionary read too many bytes: 39 instead of 31 ; - Error in &lt;TExMap::Remove&gt;: key 1186048 not found at 478 ; - Error in &lt;TExMap::Remove&gt;: key 3 not found at 3 ; - Error in &lt;TExMap::Remove&gt;: key 3045 not found at 27 ; - Error in &lt;TBufferFile::ReadClassBuffer&gt;: class: TClassRef, attempting to access a wrong version: 4633, object skipped at offset 265 ; - Error in &lt;TExMap::Remove&gt;: key 591700 not found at 173 ; - Error in &lt;TBufferFile::CheckByteCount&gt;: object of class TBaseClass read too few bytes: 67 instead of 73 ; - Error in &lt;TExMap::Remove&gt;: key 1074331651 not found at 107 ; - Error in &lt;TExMap::Remove&gt;: key 156520290 not found at 272 . And 320 more. ### Warnings:; - ninja: warning: multiple rules generate tutorials/hsimple.root. builds involving this target will not be correct; continuing anyway [-w dupbuild=warn]",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1730#issuecomment-372154925:660,access,access,660,https://root.cern,https://github.com/root-project/root/pull/1730#issuecomment-372154925,1,['access'],['access']
Security,"Build failed on slc6/gcc62.; [See console output](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/19322/console).; ### Errors:; - Error in &lt;TStreamerInfo::Build&gt;: TBaseClass: BaseClassInfo_t* has no streamer or dictionary, data member fInfo will not be saved ; - Error in &lt;TBufferFile::CheckByteCount&gt;: object of class TDictionary read too many bytes: 39 instead of 31 ; - Error in &lt;TExMap::Remove&gt;: key 1186048 not found at 478 ; - Error in &lt;TExMap::Remove&gt;: key 3 not found at 3 ; - Error in &lt;TExMap::Remove&gt;: key 3045 not found at 27 ; - Error in &lt;TBufferFile::ReadClassBuffer&gt;: class: TClassRef, attempting to access a wrong version: 4633, object skipped at offset 265 ; - Error in &lt;TExMap::Remove&gt;: key 591700 not found at 173 ; - Error in &lt;TBufferFile::CheckByteCount&gt;: object of class TBaseClass read too few bytes: 67 instead of 73 ; - Error in &lt;TExMap::Remove&gt;: key 1074331651 not found at 107 ; - Error in &lt;TExMap::Remove&gt;: key 156520290 not found at 272 . And 319 more. ### Warnings:; - ninja: warning: multiple rules generate tutorials/hsimple.root. builds involving this target will not be correct; continuing anyway [-w dupbuild=warn]",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1730#issuecomment-372158111:660,access,access,660,https://root.cern,https://github.com/root-project/root/pull/1730#issuecomment-372158111,1,['access'],['access']
Security,"Build failed on slc6/gcc62.; [See console output](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/19707/console).; ### Errors:; - Error in &lt;TStreamerInfo::Build&gt;: TBaseClass: BaseClassInfo_t* has no streamer or dictionary, data member fInfo will not be saved ; - Error in &lt;TBufferFile::CheckByteCount&gt;: object of class TDictionary read too many bytes: 39 instead of 31 ; - Error in &lt;TExMap::Remove&gt;: key 933888 not found at 321 ; - Error in &lt;TExMap::Remove&gt;: key 3 not found at 3 ; - Error in &lt;TExMap::Remove&gt;: key 3045 not found at 27 ; - Error in &lt;TBufferFile::ReadClassBuffer&gt;: class: TClassRef, attempting to access a wrong version: 4633, object skipped at offset 265 ; - Error in &lt;TExMap::Remove&gt;: key 591700 not found at 173 ; - Error in &lt;TBufferFile::CheckByteCount&gt;: object of class TBaseClass read too few bytes: 67 instead of 73 ; - Error in &lt;TExMap::Remove&gt;: key 1074331651 not found at 107 ; - Error in &lt;TExMap::Remove&gt;: key 156520290 not found at 272 . And 318 more. ### Warnings:; - ninja: warning: multiple rules generate tutorials/hsimple.root. builds involving this target will not be correct; continuing anyway [-w dupbuild=warn]",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1730#issuecomment-373543706:659,access,access,659,https://root.cern,https://github.com/root-project/root/pull/1730#issuecomment-373543706,1,['access'],['access']
Security,Build failed on slc6/gcc62.; [See console output](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/23104/console).; ### Errors:; - ERROR: Error fetching remote repo 'origin' ; - stderr: error: The requested URL returned error: 403 Forbidden while accessing https://github.com/root-project/root.git/info/refs ; - ERROR: Error fetching remote repo 'origin' . ### Failing tests:; - [projectroot.bindings.pyroot.test.pyunittests_pyroot_ttree_asmatrix](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/23104/testReport/projectroot.bindings.pyroot/test/pyunittests_pyroot_ttree_asmatrix/); - [projectroot.test.test_stressentrylist_interpreted](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/23104/testReport/projectroot/test/test_stressentrylist_interpreted/); - [projectroot.roottest.root.dataframe.roottest_root_dataframe_test_snapshotNFiles](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/23104/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_test_snapshotNFiles/); - [projectroot.roottest.root.dataframe.roottest_root_dataframe_test_listFilesCtor](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/23104/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_test_listFilesCtor/); - [projectroot.roottest.root.hist.formula.roottest_root_hist_formula_execGetExp](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/23104/testReport/projectroot.roottest.root.hist/formula/roottest_root_hist_formula_execGetExp/); - [projectroot.roottest.root.hist.formula.roottest_root_hist_formula_assertTernary](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/23104/testReport/projectroot.roottest.root.hist/formula/roottest_root_hist_formula_assertTernary/); - [projectroot.roottest.root.fit.linear.roottest_root_fit_linear_runstoring](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/23104/testReport/projectroot.roottest.root.fit/linear/roottest_root_fit_linear_runstoring/); - [projectroot.roottest.root.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1911#issuecomment-384230322:256,access,accessing,256,https://root.cern,https://github.com/root-project/root/pull/1911#issuecomment-384230322,1,['access'],['accessing']
Security,Build failed on slc6/gcc62.; [See console output](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/8171/console).; ### Errors:; - /mnt/build/jenkins/workspace/root-pullrequests-build/build/tutorials/rootalias.C:70:4: error: unknown type name 'TPaveText' ; - /mnt/build/jenkins/workspace/root-pullrequests-build/build/tutorials/rootalias.C:70:26: error: use of undeclared identifier 'TPaveText' ; - /mnt/build/jenkins/workspace/root-pullrequests-build/build/tutorials/rootalias.C:70:36: error: expected expression ; - /mnt/build/jenkins/workspace/root-pullrequests-build/build/tutorials/rootalias.C:71:4: error: unknown type name 'TText' ; - /mnt/build/jenkins/workspace/root-pullrequests-build/build/tutorials/rootalias.C:73:9: error: member access into incomplete type 'TCanvas' ; - /mnt/build/jenkins/workspace/root-pullrequests-build/build/tutorials/rootalias.C:73:28: error: member access into incomplete type 'TCanvas' ; - /mnt/build/jenkins/workspace/root-pullrequests-build/build/tutorials/rootalias.C:77:4: error: unknown type name 'TPaveText' ; - /mnt/build/jenkins/workspace/root-pullrequests-build/build/tutorials/rootalias.C:77:27: error: use of undeclared identifier 'TPaveText' ; - /mnt/build/jenkins/workspace/root-pullrequests-build/build/tutorials/rootalias.C:77:37: error: expected expression ; - /mnt/build/jenkins/workspace/root-pullrequests-build/build/tutorials/rootalias.C:78:4: error: unknown type name 'TText' . And 81 more,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1136#issuecomment-334455989:751,access,access,751,https://root.cern,https://github.com/root-project/root/pull/1136#issuecomment-334455989,2,['access'],['access']
Security,Build failed on slc6/gcc62.; [See console output](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/8987/console).; ### Errors:; - /mnt/build/jenkins/workspace/root-pullrequests-build/build/tutorials/rootalias.C:70:4: error: unknown type name 'TPaveText' ; - /mnt/build/jenkins/workspace/root-pullrequests-build/build/tutorials/rootalias.C:70:26: error: use of undeclared identifier 'TPaveText' ; - /mnt/build/jenkins/workspace/root-pullrequests-build/build/tutorials/rootalias.C:70:36: error: expected expression ; - /mnt/build/jenkins/workspace/root-pullrequests-build/build/tutorials/rootalias.C:71:4: error: unknown type name 'TText' ; - /mnt/build/jenkins/workspace/root-pullrequests-build/build/tutorials/rootalias.C:73:9: error: member access into incomplete type 'TCanvas' ; - /mnt/build/jenkins/workspace/root-pullrequests-build/build/tutorials/rootalias.C:73:28: error: member access into incomplete type 'TCanvas' ; - /mnt/build/jenkins/workspace/root-pullrequests-build/build/tutorials/rootalias.C:77:4: error: unknown type name 'TPaveText' ; - /mnt/build/jenkins/workspace/root-pullrequests-build/build/tutorials/rootalias.C:77:27: error: use of undeclared identifier 'TPaveText' ; - /mnt/build/jenkins/workspace/root-pullrequests-build/build/tutorials/rootalias.C:77:37: error: expected expression ; - /mnt/build/jenkins/workspace/root-pullrequests-build/build/tutorials/rootalias.C:78:4: error: unknown type name 'TText' . And 110 more,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1188#issuecomment-336672497:751,access,access,751,https://root.cern,https://github.com/root-project/root/pull/1188#issuecomment-336672497,2,['access'],['access']
Security,Build failed on slc6/gcc62.; [See console output](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/8989/console).; ### Errors:; - /mnt/build/jenkins/workspace/root-pullrequests-build/build/tutorials/rootalias.C:70:4: error: unknown type name 'TPaveText' ; - /mnt/build/jenkins/workspace/root-pullrequests-build/build/tutorials/rootalias.C:70:26: error: use of undeclared identifier 'TPaveText' ; - /mnt/build/jenkins/workspace/root-pullrequests-build/build/tutorials/rootalias.C:70:36: error: expected expression ; - /mnt/build/jenkins/workspace/root-pullrequests-build/build/tutorials/rootalias.C:71:4: error: unknown type name 'TText' ; - /mnt/build/jenkins/workspace/root-pullrequests-build/build/tutorials/rootalias.C:73:9: error: member access into incomplete type 'TCanvas' ; - /mnt/build/jenkins/workspace/root-pullrequests-build/build/tutorials/rootalias.C:73:28: error: member access into incomplete type 'TCanvas' ; - /mnt/build/jenkins/workspace/root-pullrequests-build/build/tutorials/rootalias.C:77:4: error: unknown type name 'TPaveText' ; - /mnt/build/jenkins/workspace/root-pullrequests-build/build/tutorials/rootalias.C:77:27: error: use of undeclared identifier 'TPaveText' ; - /mnt/build/jenkins/workspace/root-pullrequests-build/build/tutorials/rootalias.C:77:37: error: expected expression ; - /mnt/build/jenkins/workspace/root-pullrequests-build/build/tutorials/rootalias.C:78:4: error: unknown type name 'TText' . And 110 more,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1188#issuecomment-336674234:751,access,access,751,https://root.cern,https://github.com/root-project/root/pull/1188#issuecomment-336674234,2,['access'],['access']
Security,Build failed on slc6/gcc62.; [See console output](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/9012/console).; ### Errors:; - /mnt/build/jenkins/workspace/root-pullrequests-build/build/tutorials/rootalias.C:70:4: error: unknown type name 'TPaveText' ; - /mnt/build/jenkins/workspace/root-pullrequests-build/build/tutorials/rootalias.C:70:26: error: use of undeclared identifier 'TPaveText' ; - /mnt/build/jenkins/workspace/root-pullrequests-build/build/tutorials/rootalias.C:70:36: error: expected expression ; - /mnt/build/jenkins/workspace/root-pullrequests-build/build/tutorials/rootalias.C:71:4: error: unknown type name 'TText' ; - /mnt/build/jenkins/workspace/root-pullrequests-build/build/tutorials/rootalias.C:73:9: error: member access into incomplete type 'TCanvas' ; - /mnt/build/jenkins/workspace/root-pullrequests-build/build/tutorials/rootalias.C:73:28: error: member access into incomplete type 'TCanvas' ; - /mnt/build/jenkins/workspace/root-pullrequests-build/build/tutorials/rootalias.C:77:4: error: unknown type name 'TPaveText' ; - /mnt/build/jenkins/workspace/root-pullrequests-build/build/tutorials/rootalias.C:77:27: error: use of undeclared identifier 'TPaveText' ; - /mnt/build/jenkins/workspace/root-pullrequests-build/build/tutorials/rootalias.C:77:37: error: expected expression ; - /mnt/build/jenkins/workspace/root-pullrequests-build/build/tutorials/rootalias.C:78:4: error: unknown type name 'TText' . And 110 more,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1188#issuecomment-336695685:751,access,access,751,https://root.cern,https://github.com/root-project/root/pull/1188#issuecomment-336695685,2,['access'],['access']
Security,Build failed on slc6/gcc62.; [See console output](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/9013/console).; ### Errors:; - /mnt/build/jenkins/workspace/root-pullrequests-build/build/tutorials/rootalias.C:70:4: error: unknown type name 'TPaveText' ; - /mnt/build/jenkins/workspace/root-pullrequests-build/build/tutorials/rootalias.C:70:26: error: use of undeclared identifier 'TPaveText' ; - /mnt/build/jenkins/workspace/root-pullrequests-build/build/tutorials/rootalias.C:70:36: error: expected expression ; - /mnt/build/jenkins/workspace/root-pullrequests-build/build/tutorials/rootalias.C:71:4: error: unknown type name 'TText' ; - /mnt/build/jenkins/workspace/root-pullrequests-build/build/tutorials/rootalias.C:73:9: error: member access into incomplete type 'TCanvas' ; - /mnt/build/jenkins/workspace/root-pullrequests-build/build/tutorials/rootalias.C:73:28: error: member access into incomplete type 'TCanvas' ; - /mnt/build/jenkins/workspace/root-pullrequests-build/build/tutorials/rootalias.C:77:4: error: unknown type name 'TPaveText' ; - /mnt/build/jenkins/workspace/root-pullrequests-build/build/tutorials/rootalias.C:77:27: error: use of undeclared identifier 'TPaveText' ; - /mnt/build/jenkins/workspace/root-pullrequests-build/build/tutorials/rootalias.C:77:37: error: expected expression ; - /mnt/build/jenkins/workspace/root-pullrequests-build/build/tutorials/rootalias.C:78:4: error: unknown type name 'TText' . And 110 more,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1188#issuecomment-336695464:751,access,access,751,https://root.cern,https://github.com/root-project/root/pull/1188#issuecomment-336695464,2,['access'],['access']
Security,Build failed on ubuntu14/native.; [See console output](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/8991/console).; ### Errors:; - /mnt/vdb/lsf/workspace/root-pullrequests-build/build/tutorials/rootalias.C:70:4: error: unknown type name 'TPaveText' ; - /mnt/vdb/lsf/workspace/root-pullrequests-build/build/tutorials/rootalias.C:70:26: error: use of undeclared identifier 'TPaveText' ; - /mnt/vdb/lsf/workspace/root-pullrequests-build/build/tutorials/rootalias.C:70:36: error: expected expression ; - /mnt/vdb/lsf/workspace/root-pullrequests-build/build/tutorials/rootalias.C:71:4: error: unknown type name 'TText' ; - /mnt/vdb/lsf/workspace/root-pullrequests-build/build/tutorials/rootalias.C:73:9: error: member access into incomplete type 'TCanvas' ; - /mnt/vdb/lsf/workspace/root-pullrequests-build/build/tutorials/rootalias.C:73:28: error: member access into incomplete type 'TCanvas' ; - /mnt/vdb/lsf/workspace/root-pullrequests-build/build/tutorials/rootalias.C:77:4: error: unknown type name 'TPaveText' ; - /mnt/vdb/lsf/workspace/root-pullrequests-build/build/tutorials/rootalias.C:77:27: error: use of undeclared identifier 'TPaveText' ; - /mnt/vdb/lsf/workspace/root-pullrequests-build/build/tutorials/rootalias.C:77:37: error: expected expression ; - /mnt/vdb/lsf/workspace/root-pullrequests-build/build/tutorials/rootalias.C:78:4: error: unknown type name 'TText' . And 110 more,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1188#issuecomment-336672581:726,access,access,726,https://root.cern,https://github.com/root-project/root/pull/1188#issuecomment-336672581,2,['access'],['access']
Security,Build failed on ubuntu14/native.; [See console output](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/8993/console).; ### Errors:; - /mnt/vdb/lsf/workspace/root-pullrequests-build/build/tutorials/rootalias.C:70:4: error: unknown type name 'TPaveText' ; - /mnt/vdb/lsf/workspace/root-pullrequests-build/build/tutorials/rootalias.C:70:26: error: use of undeclared identifier 'TPaveText' ; - /mnt/vdb/lsf/workspace/root-pullrequests-build/build/tutorials/rootalias.C:70:36: error: expected expression ; - /mnt/vdb/lsf/workspace/root-pullrequests-build/build/tutorials/rootalias.C:71:4: error: unknown type name 'TText' ; - /mnt/vdb/lsf/workspace/root-pullrequests-build/build/tutorials/rootalias.C:73:9: error: member access into incomplete type 'TCanvas' ; - /mnt/vdb/lsf/workspace/root-pullrequests-build/build/tutorials/rootalias.C:73:28: error: member access into incomplete type 'TCanvas' ; - /mnt/vdb/lsf/workspace/root-pullrequests-build/build/tutorials/rootalias.C:77:4: error: unknown type name 'TPaveText' ; - /mnt/vdb/lsf/workspace/root-pullrequests-build/build/tutorials/rootalias.C:77:27: error: use of undeclared identifier 'TPaveText' ; - /mnt/vdb/lsf/workspace/root-pullrequests-build/build/tutorials/rootalias.C:77:37: error: expected expression ; - /mnt/vdb/lsf/workspace/root-pullrequests-build/build/tutorials/rootalias.C:78:4: error: unknown type name 'TText' . And 110 more,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1188#issuecomment-336672669:726,access,access,726,https://root.cern,https://github.com/root-project/root/pull/1188#issuecomment-336672669,2,['access'],['access']
Security,Build failed on ubuntu14/native.; [See console output](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/9008/console).; ### Errors:; - /mnt/vdb/lsf/workspace/root-pullrequests-build/build/tutorials/rootalias.C:70:4: error: unknown type name 'TPaveText' ; - /mnt/vdb/lsf/workspace/root-pullrequests-build/build/tutorials/rootalias.C:70:26: error: use of undeclared identifier 'TPaveText' ; - /mnt/vdb/lsf/workspace/root-pullrequests-build/build/tutorials/rootalias.C:70:36: error: expected expression ; - /mnt/vdb/lsf/workspace/root-pullrequests-build/build/tutorials/rootalias.C:71:4: error: unknown type name 'TText' ; - /mnt/vdb/lsf/workspace/root-pullrequests-build/build/tutorials/rootalias.C:73:9: error: member access into incomplete type 'TCanvas' ; - /mnt/vdb/lsf/workspace/root-pullrequests-build/build/tutorials/rootalias.C:73:28: error: member access into incomplete type 'TCanvas' ; - /mnt/vdb/lsf/workspace/root-pullrequests-build/build/tutorials/rootalias.C:77:4: error: unknown type name 'TPaveText' ; - /mnt/vdb/lsf/workspace/root-pullrequests-build/build/tutorials/rootalias.C:77:27: error: use of undeclared identifier 'TPaveText' ; - /mnt/vdb/lsf/workspace/root-pullrequests-build/build/tutorials/rootalias.C:77:37: error: expected expression ; - /mnt/vdb/lsf/workspace/root-pullrequests-build/build/tutorials/rootalias.C:78:4: error: unknown type name 'TText' . And 110 more,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1188#issuecomment-336694155:726,access,access,726,https://root.cern,https://github.com/root-project/root/pull/1188#issuecomment-336694155,2,['access'],['access']
Security,Build failed on ubuntu14/native.; [See console output](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/9014/console).; ### Errors:; - /mnt/vdb/lsf/workspace/root-pullrequests-build/build/tutorials/rootalias.C:70:4: error: unknown type name 'TPaveText' ; - /mnt/vdb/lsf/workspace/root-pullrequests-build/build/tutorials/rootalias.C:70:26: error: use of undeclared identifier 'TPaveText' ; - /mnt/vdb/lsf/workspace/root-pullrequests-build/build/tutorials/rootalias.C:70:36: error: expected expression ; - /mnt/vdb/lsf/workspace/root-pullrequests-build/build/tutorials/rootalias.C:71:4: error: unknown type name 'TText' ; - /mnt/vdb/lsf/workspace/root-pullrequests-build/build/tutorials/rootalias.C:73:9: error: member access into incomplete type 'TCanvas' ; - /mnt/vdb/lsf/workspace/root-pullrequests-build/build/tutorials/rootalias.C:73:28: error: member access into incomplete type 'TCanvas' ; - /mnt/vdb/lsf/workspace/root-pullrequests-build/build/tutorials/rootalias.C:77:4: error: unknown type name 'TPaveText' ; - /mnt/vdb/lsf/workspace/root-pullrequests-build/build/tutorials/rootalias.C:77:27: error: use of undeclared identifier 'TPaveText' ; - /mnt/vdb/lsf/workspace/root-pullrequests-build/build/tutorials/rootalias.C:77:37: error: expected expression ; - /mnt/vdb/lsf/workspace/root-pullrequests-build/build/tutorials/rootalias.C:78:4: error: unknown type name 'TText' . And 110 more,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1188#issuecomment-336695131:726,access,access,726,https://root.cern,https://github.com/root-project/root/pull/1188#issuecomment-336695131,2,['access'],['access']
Security,Build failed on ubuntu14/native.; [See console output](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/9015/console).; ### Errors:; - /mnt/vdb/lsf/workspace/root-pullrequests-build/build/tutorials/rootalias.C:70:4: error: unknown type name 'TPaveText' ; - /mnt/vdb/lsf/workspace/root-pullrequests-build/build/tutorials/rootalias.C:70:26: error: use of undeclared identifier 'TPaveText' ; - /mnt/vdb/lsf/workspace/root-pullrequests-build/build/tutorials/rootalias.C:70:36: error: expected expression ; - /mnt/vdb/lsf/workspace/root-pullrequests-build/build/tutorials/rootalias.C:71:4: error: unknown type name 'TText' ; - /mnt/vdb/lsf/workspace/root-pullrequests-build/build/tutorials/rootalias.C:73:9: error: member access into incomplete type 'TCanvas' ; - /mnt/vdb/lsf/workspace/root-pullrequests-build/build/tutorials/rootalias.C:73:28: error: member access into incomplete type 'TCanvas' ; - /mnt/vdb/lsf/workspace/root-pullrequests-build/build/tutorials/rootalias.C:77:4: error: unknown type name 'TPaveText' ; - /mnt/vdb/lsf/workspace/root-pullrequests-build/build/tutorials/rootalias.C:77:27: error: use of undeclared identifier 'TPaveText' ; - /mnt/vdb/lsf/workspace/root-pullrequests-build/build/tutorials/rootalias.C:77:37: error: expected expression ; - /mnt/vdb/lsf/workspace/root-pullrequests-build/build/tutorials/rootalias.C:78:4: error: unknown type name 'TText' . And 110 more,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1188#issuecomment-336696030:726,access,access,726,https://root.cern,https://github.com/root-project/root/pull/1188#issuecomment-336696030,2,['access'],['access']
Security,"Build failed on ubuntu16/native.; [See console output](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/42333/console).; ### Errors:; - /mnt/build/workspace/root-pullrequests-build/root/io/io/src/TFile.cxx:1324:20: error: ‘RConcurrentHashColl’ in namespace ‘ROOT::Internal’ does not name a type ; - /mnt/build/workspace/root-pullrequests-build/root/io/io/src/TFile.cxx:1334:20: error: ‘ROOT::Internal::RConcurrentHashColl’ has not been declared ; - /mnt/build/workspace/root-pullrequests-build/root/io/io/src/TFile.cxx:1336:40: error: ‘hash’ was not declared in this scope ; - /mnt/build/workspace/root-pullrequests-build/root/io/io/src/TFile.cxx:1336:44: error: could not convert ‘{nullptr, 1, &lt;expression error&gt;}’ from ‘&lt;brace-enclosed initializer list&gt;’ to ‘TFile::InfoListRet’ ; - /mnt/build/workspace/root-pullrequests-build/root/io/io/src/TFile.cxx:1349:30: error: ‘hash’ was not declared in this scope ; - /mnt/build/workspace/root-pullrequests-build/root/io/io/src/TFile.cxx:1349:34: error: could not convert ‘{nullptr, 1, &lt;expression error&gt;}’ from ‘&lt;brace-enclosed initializer list&gt;’ to ‘TFile::InfoListRet’ ; - /mnt/build/workspace/root-pullrequests-build/root/io/io/src/TFile.cxx:1379:27: error: ‘hash’ was not declared in this scope ; - /mnt/build/workspace/root-pullrequests-build/root/io/io/src/TFile.cxx:1379:31: error: could not convert ‘{nullptr, 1, &lt;expression error&gt;}’ from ‘&lt;brace-enclosed initializer list&gt;’ to ‘TFile::InfoListRet’ ; - /mnt/build/workspace/root-pullrequests-build/root/io/io/src/TFile.cxx:1382:21: error: ‘hash’ was not declared in this scope ; - /mnt/build/workspace/root-pullrequests-build/root/io/io/src/TFile.cxx:1382:25: error: could not convert ‘{list, 0, &lt;expression error&gt;}’ from ‘&lt;brace-enclosed initializer list&gt;’ to ‘TFile::InfoListRet’ . ### Warnings:; - include/ROOT/RConcurrentHashColl.hxx:39:19: warning: variable ‘d’ set but not used [-Wunused-but-set-variable] ; - include/ROOT/RConcurrent",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2710#issuecomment-425299194:545,hash,hash,545,https://root.cern,https://github.com/root-project/root/pull/2710#issuecomment-425299194,2,['hash'],['hash']
Security,Build failed on windows10/cxx14.; Running on null:C:\build\workspace\root-pullrequests-build; [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/138089/console).; ### Errors:; - [2022-02-23T11:08:12.374Z] ghprbPullLongDescription=Fix an access violation error when using `fscanf` on Windows 64 bit:\r\n```\r\n243: Processing C:/Users/sftnight/git/master/test/stressGraphics.cxx...\r\n243: **********************************************************************\r\n243: * Starting Graphics - S T R E S S suite *\r\n243: **********************************************************************\r\n243: * Starting Basic Graphics - S T R E S S *\r\n243: **********************************************************************\r\n243: CMake Error at C:/Users/sftnight/build/release/RootTestDriver.cmake:227 (message):\r\n243: error code: Access violation\r\n243:\r\n243:\r\n1/1 Test #243: test-stressgraphics-interpreted ...***Failed 4.33 sec\r\n```\r\n,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9959#issuecomment-1048760763:280,access,access,280,https://root.cern,https://github.com/root-project/root/pull/9959#issuecomment-1048760763,2,"['Access', 'access']","['Access', 'access']"
Security,"Build failed on windows10/cxx14.; Running on null:C:\build\workspace\root-pullrequests-build; [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/142340/console).; ### Errors:; - [2022-04-11T16:40:24.377Z] ghprbPullLongDescription=The TFile objects need to be closed before the ROOT files can be\r\ndeleted. Otherwise, we get errors such as these on Windows 10:\r\n\r\n```\r\nTraceback (most recent call last):\r\n File \""C:/build/night/LABEL/windows10/SPEC/default/V/master/root/tutorials/pyroot/pyroot006_tcontext_context_manager.py\"", line 56, in &lt;module&gt;\r\n os.remove(\""pyroot006_file_{}.root\"".format(i))\r\nPermissionError: [WinError 32] The process cannot access the file because it is being used by another process: 'pyroot006_file_1.root'\r\nCMake Error at C:/build/night/LABEL/windows10/SPEC/default/V/master/build/RootTestDriver.cmake:227 (message):\r\n error code: 1\r\n```\r\n\r\nhttps://lcgapp-services.cern.ch/root-jenkins/view/ROOT%20Nightly/job/root-nightly-master/LABEL=windows10,SPEC=default,V=master/lastBuild/testReport/projectroot/runtutorials/tutorial_pyroot_pyroot006_tcontext_context_manager_py/",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10378#issuecomment-1095355673:712,access,access,712,https://root.cern,https://github.com/root-project/root/pull/10378#issuecomment-1095355673,1,['access'],['access']
Security,"Build failed on windows10/cxx14.; Running on null:C:\build\workspace\root-pullrequests-build; [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146768/console).; ### Errors:; - [2022-06-05T22:08:36.206Z] ghprbPullLongDescription=# This Pull request:\r\n\r\n## Changes or fixes:\r\n\r\nAt FreeBSD 13.1, the following compilation error appears:\r\n```\r\ncore/base/src/TUUID.cxx:444:33: error: member access into incomplete type 'struct sockaddr'\r\n if (ifa-&gt;ifa_addr-&gt;sa_family != AF_INET) { // check only IP4\r\n ^\r\n/usr/include/ifaddrs.h:37:9: note: forward declaration of 'sockaddr'\r\n struct sockaddr *ifa_addr;\r\n ^\r\n1 error generated.\r\n```\r\nThe `struct sockaddr` is defined in the header file sys/socket.h ([specification](https://pubs.opengroup.org/onlinepubs/9699919799.2018edition/basedefs/sys_socket.h.html#tag_13_61)), which is missing. The header is added in this request.\r\n\r\n## Checklist:\r\n\r\n- [x] tested changes locally\r\n- [ ] updated the docs (if necessary)\r\n\r\nThis PR fixes # \r\n\r\n",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10703#issuecomment-1146894542:443,access,access,443,https://root.cern,https://github.com/root-project/root/pull/10703#issuecomment-1146894542,1,['access'],['access']
Security,"Build failed on windows10/cxx14.; Running on null:C:\build\workspace\root-pullrequests-build; [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/154865/console).; ### Errors:; - [2022-09-21T12:19:43.841Z] C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\include\llvm/ADT/APFloat.h(804,27): fatal error C1060: compiler is out of heap space (compiling source file C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\lib\Transforms\Utils\SanitizerStats.cpp) [C:\build\workspace\root-pullrequests-build\build\interpreter\llvm\src\lib\Transforms\Utils\LLVMTransformUtils.vcxproj] ; - [2022-09-21T12:19:43.841Z] c1xx : fatal error C1356: unable to find mspdbcore.dll [C:\build\workspace\root-pullrequests-build\build\interpreter\llvm\src\tools\clang\lib\Analysis\obj.clangAnalysis.vcxproj] ; - [2022-09-21T12:19:43.841Z] c1xx : fatal error C1060: compiler is out of heap spacec1xx: fatal error C1356: unable to find mspdbcore.dll [C:\build\workspace\root-pullrequests-build\build\interpreter\llvm\src\tools\clang\lib\Analysis\obj.clangAnalysis.vcxproj] ; - [2022-09-21T12:19:43.841Z] C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\include\llvm/ADT/StringSwitch.h(107,1): fatal error C1060: compiler is out of heap space (compiling source file C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\tools\clang\lib\AST\ASTTypeTraits.cpp) [C:\build\workspace\root-pullrequests-build\build\interpreter\llvm\src\tools\clang\lib\AST\obj.clangAST.vcxproj] ; - [2022-09-21T12:19:43.841Z] C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\tuple(398,1): fatal error C1060: compiler is out of heap space (compiling source file C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\lib\Transforms\Utils\PromoteMemoryToRegister.cpp) [C:\build\workspace\root-pullrequests-build\build\interpreter\llvm\src\lib\Transforms\Utils\LLVMTransformUtils.vcxp",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11401#issuecomment-1253634415:515,Sanitiz,SanitizerStats,515,https://root.cern,https://github.com/root-project/root/pull/11401#issuecomment-1253634415,1,['Sanitiz'],['SanitizerStats']
Security,"Build failed on windows10/cxx14.; Running on null:C:\build\workspace\root-pullrequests-build; [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/164682/console).; ### Errors:; - [2023-01-18T16:51:13.124Z] C:\build\workspace\root-pullrequests-build\root\roofit\roofitcore\src\RooFitLegacy\RooMinuit.cxx(916,28): error C2248: 'RooFitResult::fillCorrMatrix': cannot access protected member declared in class 'RooFitResult' [C:\build\workspace\root-pullrequests-build\build\roofit\roofitcore\RooFitCore.vcxproj]",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12057#issuecomment-1387385061:406,access,access,406,https://root.cern,https://github.com/root-project/root/pull/12057#issuecomment-1387385061,1,['access'],['access']
Security,"Build failed on windows10/cxx14.; Running on null:C:\build\workspace\root-pullrequests-build; [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/165540/console).; ### Warnings:; - [2023-01-23T20:04:19.371Z] ghprbPullLongDescription=```\r\nbuild/rmkdepend/include.c:306:28: warning: '%s' directive writing up to 8190 bytes into a region of size between 1 and 8191 [-Wformat-overflow=]\r\n 306 | sprintf(path, \""%s/%s\"", *pp, include);\r\n | ^~\r\n```\r\nApple needs to be told to expose snprintf...\r\n\r\n(cherry picked from commit 19909eb71a5ce5a066ca4588e62ff012dec0bb7c)\r\n\r\n# This Pull request:\r\n\r\n## Changes or fixes:\r\n\r\n\r\n## Checklist:\r\n\r\n- [ ] tested changes locally\r\n- [ ] updated the docs (if necessary)\r\n\r\nThis PR fixes # \r\n\r\n",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12099#issuecomment-1400940013:522,expose,expose,522,https://root.cern,https://github.com/root-project/root/pull/12099#issuecomment-1400940013,1,['expose'],['expose']
Security,"Build failed on windows10/cxx14.; [See console output](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/72731/console).; ### Errors:; - C:\build\workspace\root-pullrequests-build\root\tree\ntuple\v7\src\RPageStorageFile.cxx(126,24): error C3615: constexpr function '`anonymous-namespace'::ChecksumString' cannot result in a constant expression [C:\build\workspace\root-pullrequests-build\build\tree\ntuple\ROOTNTuple.vcxproj]",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4674#issuecomment-562272371:298,Checksum,ChecksumString,298,https://root.cern,https://github.com/root-project/root/pull/4674#issuecomment-562272371,1,['Checksum'],['ChecksumString']
Security,"Build failed on windows10/default.; Running on null:C:\build\workspace\root-pullrequests-build; [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/193631/console).; ### Errors:; - [2024-01-25T21:27:21.811Z] C:\build\workspace\root-pullrequests-build\root\roofit\roofitcore\src\RooFormulaVar.cxx(335,33): error C2248: 'RooFormula::_tFormula': cannot access private member declared in class 'RooFormula' [C:\build\workspace\root-pullrequests-build\build\roofit\roofitcore\RooFitCore.vcxproj] ; - [2024-01-25T21:27:41.142Z] C:\build\workspace\root-pullrequests-build\root\roofit\roofitcore\src\RooGenericPdf.cxx(224,33): error C2248: 'RooFormula::_tFormula': cannot access private member declared in class 'RooFormula' [C:\build\workspace\root-pullrequests-build\build\roofit\roofitcore\RooFitCore.vcxproj]",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14422#issuecomment-1911030563:392,access,access,392,https://root.cern,https://github.com/root-project/root/pull/14422#issuecomment-1911030563,2,['access'],['access']
Security,Build option for Address Sanitizer is broken,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7968:25,Sanitiz,Sanitizer,25,https://root.cern,https://github.com/root-project/root/issues/7968,1,['Sanitiz'],['Sanitizer']
Security,"Bumps [path-parse](https://github.com/jbgutierrez/path-parse) from 1.0.6 to 1.0.7.; <details>; <summary>Commits</summary>; <ul>; <li>See full diff in <a href=""https://github.com/jbgutierrez/path-parse/commits/v1.0.7"">compare view</a></li>; </ul>; </details>; <br />. [![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=path-parse&package-manager=npm_and_yarn&previous-version=1.0.6&new-version=1.0.7)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores). Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`. [//]: # (dependabot-automerge-start); [//]: # (dependabot-automerge-end). ---. <details>; <summary>Dependabot commands and options</summary>; <br />. You can trigger Dependabot actions by commenting on this PR:; - `@dependabot rebase` will rebase this PR; - `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it; - `@dependabot merge` will merge this PR after your CI passes on it; - `@dependabot squash and merge` will squash and merge this PR after your CI passes on it; - `@dependabot cancel merge` will cancel a previously requested merge and block automerging; - `@dependabot reopen` will reopen this PR if it is closed; - `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually; - `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself); - `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself); - `@dependabot ignore this dependency` will close this PR and stop Dependabot creating",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11863:511,secur,security-vulnerabilities,511,https://root.cern,https://github.com/root-project/root/pull/11863,2,['secur'],"['security-updates', 'security-vulnerabilities']"
Security,But maybe one can resolve this - `root_build/include` as include path required only during ROOT compilation. ; But should not be inserted into generated ROOT dictionaries - `$ROOTSYS/include` anyway accessible during ROOT running.; No idea how this can be done.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7108#issuecomment-969938344:199,access,accessible,199,https://root.cern,https://github.com/root-project/root/issues/7108#issuecomment-969938344,1,['access'],['accessible']
Security,"By default, libraries didn't have .gnu.hash section when compiled by old; compilers like gcc6. We need .gnu.hash section for bloomfilter to; quickly check symbols in the given library.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2204:39,hash,hash,39,https://root.cern,https://github.com/root-project/root/pull/2204,2,['hash'],['hash']
Security,"By leveraging std::max_align_t, insure that the return addressed (offset-ed; compared to the address allocated by TStorage::ObjectAlloc) is still well; aligned. In https://root-forum.cern.ch/t/libnew-so-and-tcanvas/51039/8, executing; in rootn.exe:. TMapFile *mf=TMapFile::Create(""test.map"",""recreate""); TH1 *h=new TH1F(""test"",""test"",100,-5,5); h->Fill (0); h->Draw(). led to a segmentation fault in. during the execution of:. => 0x00007ffff2a62a12 <+162>:	movaps %xmm0,0x10(%r12). with an address that was ending in '8'. When allocating; the TMethodCall, the address returned was aligned on a 16 bit; boundary but the memory counting over-allocating was shifting; the address by 'only' 8 bits, leading to a mis-aligned access; by this vector memcpy.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11172:720,access,access,720,https://root.cern,https://github.com/root-project/root/pull/11172,1,['access'],['access']
Security,"C++ didn't have wording for class members until C++11. C++ draft, 9.2 [class.mem]; 17) ""Non-static data members of a (non-union) class with the same access control; (Clause 11) are allocated so that later members have higher addresses within a; class object. The order of allocation of non-static data members with different; access control is unspecified (Clause 11). Implementation alignment requirements; might cause two adjacent members not to be allocated immediately after each; other; so might requirements for space for managing virtual functions (10.3) and; virtual base classes (10.1)."". This means fX, fY and fZ indeed get higher addresses but are not guaranteed to be; continuous in memory. This should fix this issue.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/570:149,access,access,149,https://root.cern,https://github.com/root-project/root/pull/570,2,['access'],['access']
Security,"C++ modules have two concepts -- a modulemap and a module file. The modulemap gives the mapping between a set of header files present in the module file. Clang has two ways to discover these artifacts -- modulemaps must be either explicitly specified or they have to be on the include paths (-I). Module files must be in the module cache path or the prebuilt module path. ROOT enforces the module files to be next to the library files. In some cases it the LD_LIBRARY_PATH is considered to extend the set of discoverables ROOT libraries. Over the years we have considered the LD_LIBRARY_PATH as the prebuilt module file locations. Relying on it leads to a number of issues. First, the osx system integrity protection filters its contents. Second, the LCG distribution mechanism can set the LD_LIBRARY_PATH to point to a complementary location of ROOT. In this case we will start loading irrelevant module files. This patch disables the LD_LIBRARY_PATH module discovery and relies on ROOT to provide its set of locations where modules should be present. Nowadays the current state of the implementation allows us to enforce this finer granularity.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4540:696,integrity,integrity,696,https://root.cern,https://github.com/root-project/root/pull/4540,1,['integrity'],['integrity']
Security,"C++17, the mangling of the same entity should be the same). > Can you point out where GCC states that their ABI and stdlib API is compatible for different C++ standard versions?. So far, I have not found any direct description of standard mixing in GCC documents, but it seems that they do not point out that changing standards will lead to changes in ABI compatibility (If so, it means that the backward compatibility of the C++ standard is violated, which seems serious). I tend to think that this compatibility is guaranteed, but it does require more evidence. > I also don't understand how `cxx20::span` would solve anything: we want users to be able to use the stdlib `span` with ROOT, if their stdlib provides it. In fact, if the user uses the same standard as ROOT, the current situation is very good. I propose to change the name on the premise that users are allowed to link to ROOT with different standards. Typically, if the user is using a higher standard, the `std::span` in the std library will be exposed and conflict with the ROOT version `std::(inline)__ROOT::span`. In order to resolve the conflict, we have to take the second place: if we use `cxx20::span` and provide an interface to convert from/to standard `std::span`, then even if there are differences in standards, the two sides will not interfere with each other. If users have `std::span`, they can use it; If not, they should not get an implementation from ROOT in the std namespace (which affects their subsequent upgrade to a higher version of the C++ standard). All in all, it provides an implementation independent of std when the true `std::span` is not available, and prevents name conflict when mixing the standard.; Of course, if want ROOT to use `std::span` of the standard library when feasible (e.g. complie with C++20), we can just use `cxx20::span` as the alias of `std::span`. However, after then the user cannot be allowed to go back to a standard lower than C++20, otherwise `span` will missing in the hea",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11311#issuecomment-1254659106:1696,expose,exposed,1696,https://root.cern,https://github.com/root-project/root/pull/11311#issuecomment-1254659106,1,['expose'],['exposed']
Security,C11 in /opt/root_src/builtins/lz4/lz4.c:503; 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320; /opt/root_src/builtins/lz4/lz4.c:822:13: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4.c:208; 2: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:822; 3: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4.c:208; /opt/root_src/builtins/lz4/lz4.c:1228:9: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320; 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:1228; 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320; /opt/root_src/builtins/lz4/lz4.c:1449:5: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-securi,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7411:11217,secur,security,11217,https://root.cern,https://github.com/root-project/root/issues/7411,1,['secur'],['security']
Security,CA-2016.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/HellasGrid-CA-2016.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/HellasGrid-CA-2016.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/HellasGrid-CA-2016.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/f4cf8fb6.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/6999cae3.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/6999cae3.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/UGRID-G2.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/UGRID-G2.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/UGRID-G2.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/UGRID-G2.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/c53e160f.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/c53e160f.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/8fa17d52.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/368bc755.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/HKU-CA-2.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/c36f6349.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/HKU-CA-2.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/c36f6349.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/HKU-CA-2.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/IGCA2.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/HKU-CA-2.signing_policy' from CURLOPT,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8092#issuecomment-840048181:37271,secur,security,37271,https://root.cern,https://github.com/root-project/root/issues/8092#issuecomment-840048181,2,"['certificate', 'secur']","['certificates', 'security']"
Security,CAPATH; * failed to load '/etc/grid-security/certificates/COMODO-RSA-CA.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/CESNET-CA-4.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/COMODO-RSA-CA.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/UKeScienceCA-2B.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/COMODO-RSA-CA.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/CNRS2-Grid-FR.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/d4c339cb.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/d6325660.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/InCommon-IGTF-Server-CA.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/UKeScienceCA-2B.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/InCommon-IGTF-Server-CA.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/d11f973e.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/82c2b224.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/InCommon-IGTF-Server-CA.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/d11f973e.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/ba240aa8.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/f5f0dfc2.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/4339b4bc.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/3cc00941.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/68aa9d51.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificat,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8092#issuecomment-840048181:11032,secur,security,11032,https://root.cern,https://github.com/root-project/root/issues/8092#issuecomment-840048181,2,"['certificate', 'secur']","['certificates', 'security']"
Security,CAPATH; * failed to load '/etc/grid-security/certificates/DigiCertGridCA-1-Classic.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/598b583e.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/c7a717ce.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/c7a717ce.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/GEANTeScienceSSLECCCA4.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/8a21c0da.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/a883462e.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/8a21c0da.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/a883462e.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/GEANTeScienceSSLCA4.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/GEANTeScienceSSLCA4.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/GEANTeSciencePersonalECCCA4.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/GEANTeScienceSSLCA4.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/e9cc934f.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/GEANTeSciencePersonalECCCA4.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/GEANTeScienceSSLCA4.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/c141eb07.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/e9cc934f.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/c141eb07.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/d9343743.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8092#issuecomment-840048181:17721,secur,security,17721,https://root.cern,https://github.com/root-project/root/issues/8092#issuecomment-840048181,2,"['certificate', 'secur']","['certificates', 'security']"
Security,CAPATH; * failed to load '/etc/grid-security/certificates/GEANTeSciencePersonalCA4.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/GEANTeSciencePersonalCA4.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/GEANTeSciencePersonalECCCA4.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/GEANTeSciencePersonalCA4.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/GEANTeSciencePersonalCA4.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/943fd5f3.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/d9343743.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/DigitalTrustAssuredCAG3-runbytheissuer.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/DigitalTrustAssuredCAG3-runbytheissuer.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/DigitalTrustAssuredCAG3-runbytheissuer.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/DigitalTrustAssuredCAG3-runbytheissuer.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/GEANTeScienceSSLECCCA4.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/GEANTeScienceSSLECCCA4.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/GEANTeScienceSSLECCCA4.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/DigitalTrustSecureCAG3-runbytheissuer.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/DigitalTrustSecureCAG3-runbytheissuer.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/DigitalTrustSecureCAG3-runbytheissuer.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/DigitalTrustSecureCAG3-runbytheissuer.signing_policy' from C,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8092#issuecomment-840048181:21605,secur,security,21605,https://root.cern,https://github.com/root-project/root/issues/8092#issuecomment-840048181,2,"['certificate', 'secur']","['certificates', 'security']"
Security,CAPATH; * failed to load '/etc/grid-security/certificates/TERENA-eScience-SSL-CA-3.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/QuoVadis-Grid-ICA-G2.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/58b08cb5.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/TERENA-eScience-SSL-CA-3.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/f5ead794.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/e523eeaa.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/PK-Grid-2007.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/e523eeaa.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/38f7145f.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/PK-Grid-2007.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/38f7145f.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/617ff41b.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/67707166.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/67707166.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/QuoVadis-Grid-ICA-G2.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/DigiCertGridTrustCA-Classic.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/DigiCertGridTrustCA-Classic.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/MYIFAM.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/PKIUNAMgrid.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/DigiCertGridTrustCA-Classic.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-secu,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8092#issuecomment-840048181:25950,secur,security,25950,https://root.cern,https://github.com/root-project/root/issues/8092#issuecomment-840048181,2,"['certificate', 'secur']","['certificates', 'security']"
Security,CAPATH; * failed to load '/etc/grid-security/certificates/USERTrustRSACertificationAuthority.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/edca0fc0.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/2436bbb8.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/d58bb4bc.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/USERTrustRSACertificationAuthority.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/fc5a8f99.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/c2a48ab6.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/fc5a8f99.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/23c77840.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/CNRS2.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/2694e4f2.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/c2a48ab6.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/2694e4f2.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/74a04bb6.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/74a04bb6.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/09ff08b7.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/f4401b90.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/163af95c.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/f4401b90.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/09ff08b7.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/CERN-Root-2.crl_url' ,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8092#issuecomment-840048181:5910,secur,security,5910,https://root.cern,https://github.com/root-project/root/issues/8092#issuecomment-840048181,2,"['certificate', 'secur']","['certificates', 'security']"
Security,"CTWFpbGZsb3d8eyJWIjoiMC4wLjAwMDAiLCJQIjoiV2luMzIiLCJBTiI6Ik1haWwiLCJXVCI6Mn0%3D%7C1000&sdata=MrLsQ1shn0qv2itSXIVUc3da2Y5VUnltiBnYwHs6YjE%3D&reserved=0> ; >>>>>>> --key ~/.globus/userkey.pem --cert ~/.globus/usercert.pem; >>>>>>> or; >>>>>>> *curl*-v ; >>>>>>> https://webdav.lcg.triumf.ca:2880/atlas/atlaslocalgroupdisk/rucio/user/desilva/a1/a8/myFile.1.root ; >>>>>>> <https://can01.safelinks.protection.outlook.com/?url=https%3A%2F%2Fwebdav.lcg.triumf.ca%3A2880%2Fatlas%2Fatlaslocalgroupdisk%2Frucio%2Fuser%2Fdesilva%2Fa1%2Fa8%2FmyFile.1.root&data=04%7C01%7Csimonliu%40triumf.ca%7Ca59fceaddf634d196e5608d91576f34a%7Cc20535109cb34679a2d38f442e03b587%7C1%7C0%7C637564422909267345%7CUnknown%7CTWFpbGZsb3d8eyJWIjoiMC4wLjAwMDAiLCJQIjoiV2luMzIiLCJBTiI6Ik1haWwiLCJXVCI6Mn0%3D%7C1000&sdata=MrLsQ1shn0qv2itSXIVUc3da2Y5VUnltiBnYwHs6YjE%3D&reserved=0> ; >>>>>>> --key ~/.globus/userkey.pem --cert ~/.globus/usercert.pem ; >>>>>>> --capath /etc/grid-security/certificates; >>>>>>>; >>>>>>>; >>>>>>> regards,; >>>>>>> Asoka; >>>>>>>; >>>>>>>> On May 12, 2021, at 10:18 AM, Axel Naumann ; >>>>>>>> ***@***.*** ***@***.***>> wrote:; >>>>>>>>; >>>>>>>>; >>>>>>>> Right - without authentication I cannot see what's happening. ; >>>>>>>> /If/ this is due to a redirect it would be a dupe of #8155 ; >>>>>>>> <https://can01.safelinks.protection.outlook.com/?url=https%3A%2F%2Fgithub.com%2Froot-project%2Froot%2Fissues%2F8155&data=04%7C01%7Csimonliu%40triumf.ca%7Ca59fceaddf634d196e5608d91576f34a%7Cc20535109cb34679a2d38f442e03b587%7C1%7C0%7C637564422909277340%7CUnknown%7CTWFpbGZsb3d8eyJWIjoiMC4wLjAwMDAiLCJQIjoiV2luMzIiLCJBTiI6Ik1haWwiLCJXVCI6Mn0%3D%7C1000&sdata=zggbyYqBAFAg%2FMlgDfFg3zamaawZqBMBbmbK7glOxj4%3D&reserved=0> ; >>>>>>>> - if not then it's different :-) But I don't know how to tell ; >>>>>>>> whether it's a redirect. Do you?; >>>>>>>>; >>>>>>>> If not let's get #8155 ; >>>>>>>> <https://can01.safelinks.protection.outlook.com/?url=https%3A%2F%2Fgithub.com%2Froot-project%2Froot%2Fissues%2F8155&data=0",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8092#issuecomment-840043080:10019,secur,security,10019,https://root.cern,https://github.com/root-project/root/issues/8092#issuecomment-840043080,2,"['certificate', 'secur']","['certificates', 'security']"
Security,CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/18700496.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/5d9ea26d.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/e732ef10.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/DigiCertGridTrustCAG2-Classic.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/617ff41b.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/DigiCertGridTrustCAG2-Classic.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/58b08cb5.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/KEK.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/DigiCertGridTrustCAG2-Classic.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/d33760ec.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/e732ef10.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/2f2f573f.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/DigiCertGridTrustCAG2-Classic.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/18700496.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/bd43b60c.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/f5ead794.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/1db3b27f.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/PK-Grid-2007.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/1db3b27f.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/d33760ec.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/T,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8092#issuecomment-840048181:23622,secur,security,23622,https://root.cern,https://github.com/root-project/root/issues/8092#issuecomment-840048181,2,"['certificate', 'secur']","['certificates', 'security']"
Security,CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/20b7db76.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/156a0f0f.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/QuoVadis-Root-CA2G3.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/QuoVadis-Root-CA2G3.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/24c3ccde.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/37a553c6.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/24c3ccde.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/3f638905.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/UNAMgrid-ca.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/AC-GRID-FR-Robots.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/UNAMgrid-ca.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/AC-GRID-FR-Robots.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/UNAMgrid-ca.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/UNLPGrid.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/SDG-G2.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/AC-GRID-FR-Robots.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/7a819ef2.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/UNAMgrid-ca.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/QuoVadis-Root-CA2.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/QuoVadis-Root-CA2.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/UNLPGrid.namespaces' fro,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8092#issuecomment-840048181:51750,secur,security,51750,https://root.cern,https://github.com/root-project/root/issues/8092#issuecomment-840048181,2,"['certificate', 'secur']","['certificates', 'security']"
Security,CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/2f2f573f.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/TERENAeSciencePersonalCA3.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/KEK.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/MYIFAM.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/TERENAeSciencePersonalCA3.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/dbf09133.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/PK-Grid-2007.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/dbf09133.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/8f016f43.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/TSU-GE.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/8f016f43.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/PKIUNAMgrid.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/TSU-GE.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/PKIUNAMgrid.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/GermanGrid.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/TSU-GE.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/PKIUNAMgrid.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/d0a33f8e.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/d0a33f8e.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/dd4b34ea.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/4b2783ac.namespaces' from CURLOPT_,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8092#issuecomment-840048181:28606,secur,security,28606,https://root.cern,https://github.com/root-project/root/issues/8092#issuecomment-840048181,2,"['certificate', 'secur']","['certificates', 'security']"
Security,CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/4b3f5558.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/GermanGrid.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/4b3f5558.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/GermanGrid.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/QuoVadis-Root-CA3G3.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/QuoVadis-Root-CA3G3.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/87429ba3.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/TRGrid.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/7c27c6a1.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/HellasGrid-CA-2016.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/HellasGrid-CA-2016.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/HellasGrid-CA-2016.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/HellasGrid-CA-2016.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/f4cf8fb6.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/6999cae3.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/6999cae3.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/UGRID-G2.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/UGRID-G2.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/UGRID-G2.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/UGRID-G2.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/c53e160f.namespaces,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8092#issuecomment-840048181:36320,secur,security,36320,https://root.cern,https://github.com/root-project/root/issues/8092#issuecomment-840048181,2,"['certificate', 'secur']","['certificates', 'security']"
Security,CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/5d9ea26d.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/e732ef10.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/DigiCertGridTrustCAG2-Classic.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/617ff41b.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/DigiCertGridTrustCAG2-Classic.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/58b08cb5.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/KEK.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/DigiCertGridTrustCAG2-Classic.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/d33760ec.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/e732ef10.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/2f2f573f.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/DigiCertGridTrustCAG2-Classic.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/18700496.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/bd43b60c.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/f5ead794.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/1db3b27f.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/PK-Grid-2007.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/1db3b27f.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/d33760ec.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/TERENA-eScience-SSL-CA-3.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/c,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8092#issuecomment-840048181:23714,secur,security,23714,https://root.cern,https://github.com/root-project/root/issues/8092#issuecomment-840048181,2,"['certificate', 'secur']","['certificates', 'security']"
Security,CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/87429ba3.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/TRGrid.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/7c27c6a1.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/HellasGrid-CA-2016.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/HellasGrid-CA-2016.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/HellasGrid-CA-2016.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/HellasGrid-CA-2016.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/f4cf8fb6.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/6999cae3.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/6999cae3.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/UGRID-G2.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/UGRID-G2.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/UGRID-G2.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/UGRID-G2.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/c53e160f.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/c53e160f.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/8fa17d52.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/368bc755.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/HKU-CA-2.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/c36f6349.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/HKU-CA-2.info' from CURLOPT_CAPATH; *,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8092#issuecomment-840048181:36908,secur,security,36908,https://root.cern,https://github.com/root-project/root/issues/8092#issuecomment-840048181,2,"['certificate', 'secur']","['certificates', 'security']"
Security,CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/PK-Grid-2007.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/e523eeaa.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/38f7145f.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/PK-Grid-2007.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/38f7145f.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/617ff41b.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/67707166.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/67707166.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/QuoVadis-Grid-ICA-G2.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/DigiCertGridTrustCA-Classic.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/DigiCertGridTrustCA-Classic.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/MYIFAM.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/PKIUNAMgrid.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/DigiCertGridTrustCA-Classic.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/QuoVadis-Grid-ICA-G2.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/MYIFAM.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/KEK.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/DigiCertGridTrustCA-Classic.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/TERENAeSciencePersonalCA3.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/e91bd360.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8092#issuecomment-840048181:26536,secur,security,26536,https://root.cern,https://github.com/root-project/root/issues/8092#issuecomment-840048181,2,"['certificate', 'secur']","['certificates', 'security']"
Security,"CXXRecordDecls will synthesize special functions through lookup, but; do not expose them as part of the DeclContext iteration. Synthesize them,; and inject them into the iteration of TClingMethodInfo. This is especially; needed for modules which aggressively prune these special functions, relying; on DefinitionData instead. This also fixes roottest/root/meta/runMemberComments.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5036:77,expose,expose,77,https://root.cern,https://github.com/root-project/root/pull/5036,2,"['expose', 'inject']","['expose', 'inject']"
Security,"Caches and precomputes data for this calculation, resulting in a; much more cache friendly access pattern. Leads to increased memory; usage during optimisation, which is subsequently released.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/443:91,access,access,91,https://root.cern,https://github.com/root-project/root/pull/443,1,['access'],['access']
Security,Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:9918; /opt/root_src/net/http/civetweb/civetweb.c:10419:2: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:10419; /opt/root_src/net/http/civetweb/civetweb.c:11294:2: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:11294; /opt/root_src/net/http/civetweb/civetweb.c:11508:2: warning: Call to function 'memset' is i,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7528:47918,secur,security,47918,https://root.cern,https://github.com/root-project/root/issues/7528,1,['secur'],['security']
Security,Call to function 'sscanf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sscanf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'sscanf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sscanf_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:7708; /opt/root_src/net/http/civetweb/civetweb.c:7717:10: warning: Call to function 'sscanf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sscanf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'sscanf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sscanf_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:7717; /opt/root_src/net/http/civetweb/civetweb.c:7726:10: warning: Call to function 'sscanf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sscanf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'sscanf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sscanf_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:7726; /opt/root_src/net/http/civetweb/civetweb.c:7735:10: warning: Call to function 'sscanf' is ins,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7528:36562,secur,security,36562,https://root.cern,https://github.com/root-project/root/issues/7528,1,['secur'],['security']
Security,Call to function 'sscanf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sscanf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'sscanf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sscanf_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:7717; /opt/root_src/net/http/civetweb/civetweb.c:7726:10: warning: Call to function 'sscanf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sscanf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'sscanf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sscanf_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:7726; /opt/root_src/net/http/civetweb/civetweb.c:7735:10: warning: Call to function 'sscanf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sscanf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'sscanf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sscanf_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:7735; /opt/root_src/net/http/civetweb/civetweb.c:7746:4: warning: Call to function 'memset' is inse,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7528:37218,secur,security,37218,https://root.cern,https://github.com/root-project/root/issues/7528,1,['secur'],['security']
Security,Call to function 'sscanf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sscanf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'sscanf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sscanf_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:7726; /opt/root_src/net/http/civetweb/civetweb.c:7735:10: warning: Call to function 'sscanf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sscanf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'sscanf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sscanf_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:7735; /opt/root_src/net/http/civetweb/civetweb.c:7746:4: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:7746; /opt/root_src/net/http/civetweb/civetweb.c:7927:4: warning: Call to function 'memset' is insec,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7528:37874,secur,security,37874,https://root.cern,https://github.com/root-project/root/issues/7528,1,['secur'],['security']
Security,Calling 'TEmulatedMapProxy::WriteMap' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:254; 7: Initializing to 0 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:159; 8: 'idx' is < 'nElements' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:163; 9: Loop condition is true. Entering loop body in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:163; 10: The value 0 is assigned to 'loop' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:165; 11: Loop condition is true. Entering loop body in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:165; 12: Null pointer value stored to 'addr' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:166; 13: Null pointer value stored to 'i' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:167; 14: Control jumps to 'case kIsEnum:' at line 171 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:169; 15: Control jumps to 'case kFloat16_t:' at line 180 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:172; 16: Access to field 'flt' results in a dereference of a null pointer (loaded from variable 'i') in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:180; /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:181:35: warning: Access to field 'dbl' results in a dereference of a null pointer (loaded from variable 'i') [clang-analyzer-core.NullDereference]; 1: Taking false branch in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:240; 2: Assuming field 'fObject' is non-null in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:251; 3: '?' condition is true in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:251; 4: Assuming 'nElements' is > 0 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:253; 5: Taking true branch in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:253; 6: Calling 'TEmulatedMapProxy::WriteMap' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:254; 7: Initializing to 0 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:159; 8: 'idx' is < 'nElements' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:163; 9: Loop condition is true. Entering loop body in /opt/root_sr,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7431:59328,Access,Access,59328,https://root.cern,https://github.com/root-project/root/issues/7431,1,['Access'],['Access']
Security,Calling 'TEmulatedMapProxy::WriteMap' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:254; 7: Initializing to 0 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:159; 8: 'idx' is < 'nElements' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:163; 9: Loop condition is true. Entering loop body in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:163; 10: The value 0 is assigned to 'loop' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:165; 11: Loop condition is true. Entering loop body in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:165; 12: Null pointer value stored to 'addr' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:166; 13: Null pointer value stored to 'i' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:167; 14: Control jumps to 'case kIsEnum:' at line 171 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:169; 15: Control jumps to 'case kShort_t:' at line 175 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:172; 16: Access to field 's_short' results in a dereference of a null pointer (loaded from variable 'i') in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:175; /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:176:35: warning: Access to field 's_int' results in a dereference of a null pointer (loaded from variable 'i') [clang-analyzer-core.NullDereference]; 1: Taking false branch in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:240; 2: Assuming field 'fObject' is non-null in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:251; 3: '?' condition is true in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:251; 4: Assuming 'nElements' is > 0 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:253; 5: Taking true branch in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:253; 6: Calling 'TEmulatedMapProxy::WriteMap' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:254; 7: Initializing to 0 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:159; 8: 'idx' is < 'nElements' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:163; 9: Loop condition is true. Entering loop body in /opt/roo,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7431:50850,Access,Access,50850,https://root.cern,https://github.com/root-project/root/issues/7431,1,['Access'],['Access']
Security,"Calling `RooCmdArg::take` in `RooGlobalFunc.h` header can cause linker; errors, because it accesses a static data member. That's unsupported; across DLL boundaries on Windows. This should fix the Windows 10 test errors that appeard after #8416.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8437:91,access,accesses,91,https://root.cern,https://github.com/root-project/root/pull/8437,1,['access'],['accesses']
Security,"Can I have remote access to _that_ ROOT build on a Windows host? Perhaps, you could also try this and report whether it gives the correct result:; ```c++; root [0] gClingOpts->AllowRedefinition = 0;; root [1] double z = 1234;; root [2] z = 1; (double) 1.0000000; root [3] z; (double) ????; ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9809#issuecomment-1039304994:18,access,access,18,https://root.cern,https://github.com/root-project/root/issues/9809#issuecomment-1039304994,1,['access'],['access']
Security,Can one of you confirm that this issue can be closed? nullptr checks should now only be injected if `TRint` is used *and* if there is a terminal attached (or Windows) *and* if outside callfunc.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9112#issuecomment-1010763602:88,inject,injected,88,https://root.cern,https://github.com/root-project/root/issues/9112#issuecomment-1010763602,1,['inject'],['injected']
Security,"Can this new mode be the default? And we add option h for the old, non hash approach?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14067#issuecomment-1814888086:71,hash,hash,71,https://root.cern,https://github.com/root-project/root/pull/14067#issuecomment-1814888086,1,['hash'],['hash']
Security,Can u open a jira item with the overloads you have in mind? we can consider those 1 by 1 and decide if they need to be resolved. I think that giving access to top performance with compiled only DF based analysis applications is quite important.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3646#issuecomment-480174385:149,access,access,149,https://root.cern,https://github.com/root-project/root/pull/3646#issuecomment-480174385,1,['access'],['access']
Security,"Can we simply add `const TROOT *&GetROOTPtrRef()`, in the source file of where `gROOT` is injected in the list of globals?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3208#issuecomment-457495268:90,inject,injected,90,https://root.cern,https://github.com/root-project/root/pull/3208#issuecomment-457495268,2,['inject'],['injected']
Security,"Can you improve the commit logs over ""hash"" and ""debug""? Or is this not meant to be reviewed yet?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2093#issuecomment-393083489:38,hash,hash,38,https://root.cern,https://github.com/root-project/root/pull/2093#issuecomment-393083489,1,['hash'],['hash']
Security,"Can you motivate why we should include those in ROOT's interface? I understand the motivation for testing! I'm sure you have a good reason to also expose them, I'd just like to see the reasons :-)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8383#issuecomment-857664938:147,expose,expose,147,https://root.cern,https://github.com/root-project/root/pull/8383#issuecomment-857664938,1,['expose'],['expose']
Security,Ccache has an issue reading the config file on some Linux distros when using an invalid kerberos ticket. For some reason it will attempt to access a ccache config file in the home directory which it does does not have permission to do causing ccache to exit. Approach suggested by @dpiparo,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/429:140,access,access,140,https://root.cern,https://github.com/root-project/root/pull/429,1,['access'],['access']
Security,"Change logic how sub-elements in classes like `THStack` or `TMultiGraph` are handled.; Before was tried to disentangle them already on server side - to get direct access to object id (hashed object pointer).; But this made difficult to correctly work with such composed objects on client side. . Therefore now such objects remain as is and one provides special referencing methods to get access to such objects ; via suffixes in object id. Like if THStack has id `123456`, then first histogram in stack will have id `123456#hist_1`.; And X axis of such histogram will be referenced as `123456#hist_1#x`. Such logic used on client side to get context menus; for the objects and execute some methods. Correspondent update in JSROOT with several other fixes. Adjust two tutorials",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14040:163,access,access,163,https://root.cern,https://github.com/root-project/root/pull/14040,3,"['access', 'hash']","['access', 'hashed']"
Security,"Checksum is now excluded from the on-disk representation and it's not; stored in the anchor. This allows to leverage the ROOT I/O machinery for; schema evolution rather than having to rely entirely on custom code in; RNTuple::Streamer(). The RNTuple class version gets bumped from 4 to 5. This is a breaking change, but backwards compatibility with version 4; will be preserved for a while for easing the transition. Support for; version 4 will be dropped before stabilization. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15553:0,Checksum,Checksum,0,https://root.cern,https://github.com/root-project/root/pull/15553,1,['Checksum'],['Checksum']
Security,"Clang 18 changed the name mangling of function templates, see https://releases.llvm.org/18.1.0/tools/clang/docs/ReleaseNotes.html#c-specific-potentially-breaking-changes. The first mentioned case is ""When a template parameter in a function template depends on a previous template parameter"", for example:; ```; struct A {; template <typename T, std::enable_if_t<std::is_integral_v<T>, int> = 0>; void Member(T p) {}; };. template void A::Member(int);; ```. With Clang < 18 and current versions of GCC, this will mangle to `_ZN1A6MemberIiLi0EEEvT_`, but Clang 18 and later will mangle it to `_ZN1A6MemberIiTnNSt9enable_ifIXsr3stdE13is_integral_vIT_EEiE4typeELi0EEEvS2_` (unless reverted for compatibility with `-fclang-abi-compat=17`). For ROOT's use of Cling, this poses a bidirectional problem:; * If building current master with Clang 18, the compiler will, by default, mangle according to the new rules. At runtime, Cling based on LLVM/Clang 16 will generate the old name, but that symbol cannot be found in the shared library.; * Conversely, in the current attempt to upgrade to LLVM/Clang 18, the opposite situation will happen when building with an ""older"" compiler so the shared library has the old name. In both cases, a failure of `tutorial-tmva-tmva103_Application` can be observed, when Cling cannot find the symbol. Unfortunately, it is not easily possible to detect which symbol names are in the shared library because it depends on the host compiler and configuration. Furthermore, with the current LLVM/Clang 16, we do not have access to the new mangling. Finally, it is unclear if generating the template instantiations in question actually takes up significant time during compilation. As such, the best approach in the current situation is to remove the `extern template` declarations and let the compiler / Cling re-generate them as needed. FYI @devajithvs",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16176:1543,access,access,1543,https://root.cern,https://github.com/root-project/root/pull/16176,1,['access'],['access']
Security,Classes with the basic functionality for k-fold cross-validation and hyper parameter optimisation have been added. Also there were some changes made to the dataloader to allow for the splitting of the input dataset into k-folds.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/245:54,validat,validation,54,https://root.cern,https://github.com/root-project/root/pull/245,1,['validat'],['validation']
Security,"Closes https://github.com/root-project/root/issues/14553. This PR adds the dependencies for the TMVA GNN unit tests to the; docker images via the `requirements.txt`. However, this will only have a; delayed effect until the images are re-built. Therefore, we can't; validate for now that the tests actually work. Once the missing packages make it into the CI images, a PR should be; opened to revert this commit. For the JsMVA dependency, we don't have to worry about anything.; The JsMVA tests have already been temporarily disabled by @dpiparo 7 years ago:; https://github.com/root-project/roottest/blame/master/python/JsMVA/CMakeLists.txt. Note: adding the new dependencies only grows the environment by 20 MB, which is less then 1 % of a size increase (the size of the environment is currently 2.3 GB).",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15512:265,validat,validate,265,https://root.cern,https://github.com/root-project/root/pull/15512,1,['validat'],['validate']
Security,Code is not accessible by Jenkins - merging,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4045#issuecomment-509142959:12,access,accessible,12,https://root.cern,https://github.com/root-project/root/pull/4045#issuecomment-509142959,1,['access'],['accessible']
Security,"Coll.cxx:37:8: error: use of deleted function ‘std::unordered_map&lt;_Key, _Tp, _Hash, _Pred, _Alloc&gt;::unordered_map() [with _Key = ROOT::Internal::RConcurrentHashColl::HashValue; _Tp = std::vector&lt;int&gt;; _Hash = std::hash&lt;ROOT::Internal::RConcurrentHashColl::HashValue&gt;; _Pred = std::equal_to&lt;ROOT::Internal::RConcurrentHashColl::HashValue&gt;; _Alloc = std::allocator&lt;std::pair&lt;const ROOT::Internal::RConcurrentHashColl::HashValue, std::vector&lt;int&gt; &gt; &gt;]’ ; - [2023-05-18T18:12:58.148Z] /usr/include/c++/9/bits/unordered_map.h:141:7: error: use of deleted function ‘std::_Hashtable&lt;_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits&gt;::_Hashtable() [with _Key = ROOT::Internal::RConcurrentHashColl::HashValue; _Value = std::pair&lt;const ROOT::Internal::RConcurrentHashColl::HashValue, std::vector&lt;int&gt; &gt;; _Alloc = std::allocator&lt;std::pair&lt;const ROOT::Internal::RConcurrentHashColl::HashValue, std::vector&lt;int&gt; &gt; &gt;; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to&lt;ROOT::Internal::RConcurrentHashColl::HashValue&gt;; _H1 = std::hash&lt;ROOT::Internal::RConcurrentHashColl::HashValue&gt;; _H2 = std::__detail::_Mod_range_hashing; _Hash = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits&lt;true, false, true&gt;]’ ; - [2023-05-18T18:12:58.149Z] /usr/include/c++/9/bits/hashtable.h:438:7: error: use of deleted function ‘std::__detail::_Hashtable_base&lt;_Key, _Value, _ExtractKey, _Equal, _H1, _H2, _Hash, _Traits&gt;::_Hashtable_base() [with _Key = ROOT::Internal::RConcurrentHashColl::HashValue; _Value = std::pair&lt;const ROOT::Internal::RConcurrentHashColl::HashValue, std::vector&lt;int&gt; &gt;; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to&lt;ROOT::Internal::RConcurrentHashColl::HashValue&gt;; _H1 = std::hash&lt;ROOT::Internal::RConcurrentHashColl::HashValue&gt;; _H2 = s",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12846#issuecomment-1553437110:1609,Hash,HashValue,1609,https://root.cern,https://github.com/root-project/root/pull/12846#issuecomment-1553437110,6,"['Hash', 'hash']","['HashValue', 'hash']"
Security,"Coll.cxx:37:8: error: use of deleted function ‘std::unordered_map&lt;_Key, _Tp, _Hash, _Pred, _Alloc&gt;::unordered_map() [with _Key = ROOT::Internal::RConcurrentHashColl::HashValue; _Tp = std::vector&lt;int&gt;; _Hash = std::hash&lt;ROOT::Internal::RConcurrentHashColl::HashValue&gt;; _Pred = std::equal_to&lt;ROOT::Internal::RConcurrentHashColl::HashValue&gt;; _Alloc = std::allocator&lt;std::pair&lt;const ROOT::Internal::RConcurrentHashColl::HashValue, std::vector&lt;int&gt; &gt; &gt;]’ ; - [2023-05-18T18:15:30.152Z] /usr/include/c++/8/bits/unordered_map.h:141:7: error: use of deleted function ‘std::_Hashtable&lt;_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits&gt;::_Hashtable() [with _Key = ROOT::Internal::RConcurrentHashColl::HashValue; _Value = std::pair&lt;const ROOT::Internal::RConcurrentHashColl::HashValue, std::vector&lt;int&gt; &gt;; _Alloc = std::allocator&lt;std::pair&lt;const ROOT::Internal::RConcurrentHashColl::HashValue, std::vector&lt;int&gt; &gt; &gt;; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to&lt;ROOT::Internal::RConcurrentHashColl::HashValue&gt;; _H1 = std::hash&lt;ROOT::Internal::RConcurrentHashColl::HashValue&gt;; _H2 = std::__detail::_Mod_range_hashing; _Hash = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits&lt;true, false, true&gt;]’ ; - [2023-05-18T18:15:30.152Z] /usr/include/c++/8/bits/hashtable.h:413:7: error: use of deleted function ‘std::__detail::_Hashtable_base&lt;_Key, _Value, _ExtractKey, _Equal, _H1, _H2, _Hash, _Traits&gt;::_Hashtable_base() [with _Key = ROOT::Internal::RConcurrentHashColl::HashValue; _Value = std::pair&lt;const ROOT::Internal::RConcurrentHashColl::HashValue, std::vector&lt;int&gt; &gt;; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to&lt;ROOT::Internal::RConcurrentHashColl::HashValue&gt;; _H1 = std::hash&lt;ROOT::Internal::RConcurrentHashColl::HashValue&gt;; _H2 = s",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12847#issuecomment-1553441066:1663,Hash,HashValue,1663,https://root.cern,https://github.com/root-project/root/pull/12847#issuecomment-1553441066,6,"['Hash', 'hash']","['HashValue', 'hash']"
Security,"Coll.cxx:37:8: error: use of deleted function ‘std::unordered_map&lt;_Key, _Tp, _Hash, _Pred, _Alloc&gt;::unordered_map() [with _Key = ROOT::Internal::RConcurrentHashColl::HashValue; _Tp = std::vector&lt;int&gt;; _Hash = std::hash&lt;ROOT::Internal::RConcurrentHashColl::HashValue&gt;; _Pred = std::equal_to&lt;ROOT::Internal::RConcurrentHashColl::HashValue&gt;; _Alloc = std::allocator&lt;std::pair&lt;const ROOT::Internal::RConcurrentHashColl::HashValue, std::vector&lt;int&gt; &gt; &gt;]’ ; - [2023-05-18T18:15:37.088Z] /usr/include/c++/9/bits/unordered_map.h:141:7: error: use of deleted function ‘std::_Hashtable&lt;_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits&gt;::_Hashtable() [with _Key = ROOT::Internal::RConcurrentHashColl::HashValue; _Value = std::pair&lt;const ROOT::Internal::RConcurrentHashColl::HashValue, std::vector&lt;int&gt; &gt;; _Alloc = std::allocator&lt;std::pair&lt;const ROOT::Internal::RConcurrentHashColl::HashValue, std::vector&lt;int&gt; &gt; &gt;; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to&lt;ROOT::Internal::RConcurrentHashColl::HashValue&gt;; _H1 = std::hash&lt;ROOT::Internal::RConcurrentHashColl::HashValue&gt;; _H2 = std::__detail::_Mod_range_hashing; _Hash = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits&lt;true, false, true&gt;]’ ; - [2023-05-18T18:15:37.088Z] /usr/include/c++/9/bits/hashtable.h:438:7: error: use of deleted function ‘std::__detail::_Hashtable_base&lt;_Key, _Value, _ExtractKey, _Equal, _H1, _H2, _Hash, _Traits&gt;::_Hashtable_base() [with _Key = ROOT::Internal::RConcurrentHashColl::HashValue; _Value = std::pair&lt;const ROOT::Internal::RConcurrentHashColl::HashValue, std::vector&lt;int&gt; &gt;; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to&lt;ROOT::Internal::RConcurrentHashColl::HashValue&gt;; _H1 = std::hash&lt;ROOT::Internal::RConcurrentHashColl::HashValue&gt;; _H2 = s",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12847#issuecomment-1553440181:1609,Hash,HashValue,1609,https://root.cern,https://github.com/root-project/root/pull/12847#issuecomment-1553440181,6,"['Hash', 'hash']","['HashValue', 'hash']"
Security,"Coll.cxx:37:8: error: use of deleted function ‘std::unordered_map&lt;_Key, _Tp, _Hash, _Pred, _Alloc&gt;::unordered_map() [with _Key = ROOT::Internal::RConcurrentHashColl::HashValue; _Tp = std::vector&lt;int&gt;; _Hash = std::hash&lt;ROOT::Internal::RConcurrentHashColl::HashValue&gt;; _Pred = std::equal_to&lt;ROOT::Internal::RConcurrentHashColl::HashValue&gt;; _Alloc = std::allocator&lt;std::pair&lt;const ROOT::Internal::RConcurrentHashColl::HashValue, std::vector&lt;int&gt; &gt; &gt;]’ ; - [2023-05-18T18:18:09.069Z] /usr/include/c++/8/bits/unordered_map.h:141:7: error: use of deleted function ‘std::_Hashtable&lt;_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits&gt;::_Hashtable() [with _Key = ROOT::Internal::RConcurrentHashColl::HashValue; _Value = std::pair&lt;const ROOT::Internal::RConcurrentHashColl::HashValue, std::vector&lt;int&gt; &gt;; _Alloc = std::allocator&lt;std::pair&lt;const ROOT::Internal::RConcurrentHashColl::HashValue, std::vector&lt;int&gt; &gt; &gt;; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to&lt;ROOT::Internal::RConcurrentHashColl::HashValue&gt;; _H1 = std::hash&lt;ROOT::Internal::RConcurrentHashColl::HashValue&gt;; _H2 = std::__detail::_Mod_range_hashing; _Hash = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits&lt;true, false, true&gt;]’ ; - [2023-05-18T18:18:09.069Z] /usr/include/c++/8/bits/hashtable.h:408:7: error: use of deleted function ‘std::__detail::_Hashtable_base&lt;_Key, _Value, _ExtractKey, _Equal, _H1, _H2, _Hash, _Traits&gt;::_Hashtable_base() [with _Key = ROOT::Internal::RConcurrentHashColl::HashValue; _Value = std::pair&lt;const ROOT::Internal::RConcurrentHashColl::HashValue, std::vector&lt;int&gt; &gt;; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to&lt;ROOT::Internal::RConcurrentHashColl::HashValue&gt;; _H1 = std::hash&lt;ROOT::Internal::RConcurrentHashColl::HashValue&gt;; _H2 = s",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12846#issuecomment-1553443733:1495,Hash,HashValue,1495,https://root.cern,https://github.com/root-project/root/pull/12846#issuecomment-1553443733,6,"['Hash', 'hash']","['HashValue', 'hash']"
Security,"Coll.cxx:37:8: error: use of deleted function ‘std::unordered_map&lt;_Key, _Tp, _Hash, _Pred, _Alloc&gt;::unordered_map() [with _Key = ROOT::Internal::RConcurrentHashColl::HashValue; _Tp = std::vector&lt;int&gt;; _Hash = std::hash&lt;ROOT::Internal::RConcurrentHashColl::HashValue&gt;; _Pred = std::equal_to&lt;ROOT::Internal::RConcurrentHashColl::HashValue&gt;; _Alloc = std::allocator&lt;std::pair&lt;const ROOT::Internal::RConcurrentHashColl::HashValue, std::vector&lt;int&gt; &gt; &gt;]’ ; - [2023-05-18T18:23:23.216Z] /usr/include/c++/8/bits/unordered_map.h:141:7: error: use of deleted function ‘std::_Hashtable&lt;_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits&gt;::_Hashtable() [with _Key = ROOT::Internal::RConcurrentHashColl::HashValue; _Value = std::pair&lt;const ROOT::Internal::RConcurrentHashColl::HashValue, std::vector&lt;int&gt; &gt;; _Alloc = std::allocator&lt;std::pair&lt;const ROOT::Internal::RConcurrentHashColl::HashValue, std::vector&lt;int&gt; &gt; &gt;; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to&lt;ROOT::Internal::RConcurrentHashColl::HashValue&gt;; _H1 = std::hash&lt;ROOT::Internal::RConcurrentHashColl::HashValue&gt;; _H2 = std::__detail::_Mod_range_hashing; _Hash = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits&lt;true, false, true&gt;]’ ; - [2023-05-18T18:23:23.216Z] /usr/include/c++/8/bits/hashtable.h:413:7: error: use of deleted function ‘std::__detail::_Hashtable_base&lt;_Key, _Value, _ExtractKey, _Equal, _H1, _H2, _Hash, _Traits&gt;::_Hashtable_base() [with _Key = ROOT::Internal::RConcurrentHashColl::HashValue; _Value = std::pair&lt;const ROOT::Internal::RConcurrentHashColl::HashValue, std::vector&lt;int&gt; &gt;; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to&lt;ROOT::Internal::RConcurrentHashColl::HashValue&gt;; _H1 = std::hash&lt;ROOT::Internal::RConcurrentHashColl::HashValue&gt;; _H2 = s",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12846#issuecomment-1553447609:1780,Hash,HashValue,1780,https://root.cern,https://github.com/root-project/root/pull/12846#issuecomment-1553447609,6,"['Hash', 'hash']","['HashValue', 'hash']"
Security,"Coll.cxx:37:8: error: use of deleted function ‘std::unordered_map&lt;_Key, _Tp, _Hash, _Pred, _Alloc&gt;::unordered_map() [with _Key = ROOT::Internal::RConcurrentHashColl::HashValue; _Tp = std::vector&lt;int&gt;; _Hash = std::hash&lt;ROOT::Internal::RConcurrentHashColl::HashValue&gt;; _Pred = std::equal_to&lt;ROOT::Internal::RConcurrentHashColl::HashValue&gt;; _Alloc = std::allocator&lt;std::pair&lt;const ROOT::Internal::RConcurrentHashColl::HashValue, std::vector&lt;int&gt; &gt; &gt;]’ ; - [2023-05-18T18:28:25.630Z] /usr/include/c++/8/bits/unordered_map.h:141:7: error: use of deleted function ‘std::_Hashtable&lt;_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits&gt;::_Hashtable() [with _Key = ROOT::Internal::RConcurrentHashColl::HashValue; _Value = std::pair&lt;const ROOT::Internal::RConcurrentHashColl::HashValue, std::vector&lt;int&gt; &gt;; _Alloc = std::allocator&lt;std::pair&lt;const ROOT::Internal::RConcurrentHashColl::HashValue, std::vector&lt;int&gt; &gt; &gt;; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to&lt;ROOT::Internal::RConcurrentHashColl::HashValue&gt;; _H1 = std::hash&lt;ROOT::Internal::RConcurrentHashColl::HashValue&gt;; _H2 = std::__detail::_Mod_range_hashing; _Hash = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits&lt;true, false, true&gt;]’ ; - [2023-05-18T18:28:25.630Z] /usr/include/c++/8/bits/hashtable.h:408:7: error: use of deleted function ‘std::__detail::_Hashtable_base&lt;_Key, _Value, _ExtractKey, _Equal, _H1, _H2, _Hash, _Traits&gt;::_Hashtable_base() [with _Key = ROOT::Internal::RConcurrentHashColl::HashValue; _Value = std::pair&lt;const ROOT::Internal::RConcurrentHashColl::HashValue, std::vector&lt;int&gt; &gt;; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to&lt;ROOT::Internal::RConcurrentHashColl::HashValue&gt;; _H1 = std::hash&lt;ROOT::Internal::RConcurrentHashColl::HashValue&gt;; _H2 = s",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12847#issuecomment-1553458918:1495,Hash,HashValue,1495,https://root.cern,https://github.com/root-project/root/pull/12847#issuecomment-1553458918,6,"['Hash', 'hash']","['HashValue', 'hash']"
Security,"Coll.cxx:37:8: error: use of deleted function ‘std::unordered_map&lt;_Key, _Tp, _Hash, _Pred, _Alloc&gt;::unordered_map() [with _Key = ROOT::Internal::RConcurrentHashColl::HashValue; _Tp = std::vector&lt;int&gt;; _Hash = std::hash&lt;ROOT::Internal::RConcurrentHashColl::HashValue&gt;; _Pred = std::equal_to&lt;ROOT::Internal::RConcurrentHashColl::HashValue&gt;; _Alloc = std::allocator&lt;std::pair&lt;const ROOT::Internal::RConcurrentHashColl::HashValue, std::vector&lt;int&gt; &gt; &gt;]’ ; - [2023-05-18T18:49:04.198Z] /usr/include/c++/9/bits/unordered_map.h:141:7: error: use of deleted function ‘std::_Hashtable&lt;_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits&gt;::_Hashtable() [with _Key = ROOT::Internal::RConcurrentHashColl::HashValue; _Value = std::pair&lt;const ROOT::Internal::RConcurrentHashColl::HashValue, std::vector&lt;int&gt; &gt;; _Alloc = std::allocator&lt;std::pair&lt;const ROOT::Internal::RConcurrentHashColl::HashValue, std::vector&lt;int&gt; &gt; &gt;; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to&lt;ROOT::Internal::RConcurrentHashColl::HashValue&gt;; _H1 = std::hash&lt;ROOT::Internal::RConcurrentHashColl::HashValue&gt;; _H2 = std::__detail::_Mod_range_hashing; _Hash = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits&lt;true, false, true&gt;]’ ; - [2023-05-18T18:49:04.198Z] /usr/include/c++/9/bits/hashtable.h:438:7: error: use of deleted function ‘std::__detail::_Hashtable_base&lt;_Key, _Value, _ExtractKey, _Equal, _H1, _H2, _Hash, _Traits&gt;::_Hashtable_base() [with _Key = ROOT::Internal::RConcurrentHashColl::HashValue; _Value = std::pair&lt;const ROOT::Internal::RConcurrentHashColl::HashValue, std::vector&lt;int&gt; &gt;; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to&lt;ROOT::Internal::RConcurrentHashColl::HashValue&gt;; _H1 = std::hash&lt;ROOT::Internal::RConcurrentHashColl::HashValue&gt;; _H2 = s",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12846#issuecomment-1553486787:1609,Hash,HashValue,1609,https://root.cern,https://github.com/root-project/root/pull/12846#issuecomment-1553486787,6,"['Hash', 'hash']","['HashValue', 'hash']"
Security,"Coll.cxx:37:8: error: use of deleted function ‘std::unordered_map&lt;_Key, _Tp, _Hash, _Pred, _Alloc&gt;::unordered_map() [with _Key = ROOT::Internal::RConcurrentHashColl::HashValue; _Tp = std::vector&lt;int&gt;; _Hash = std::hash&lt;ROOT::Internal::RConcurrentHashColl::HashValue&gt;; _Pred = std::equal_to&lt;ROOT::Internal::RConcurrentHashColl::HashValue&gt;; _Alloc = std::allocator&lt;std::pair&lt;const ROOT::Internal::RConcurrentHashColl::HashValue, std::vector&lt;int&gt; &gt; &gt;]’ ; - [2023-05-18T18:49:54.137Z] /usr/include/c++/8/bits/unordered_map.h:141:7: error: use of deleted function ‘std::_Hashtable&lt;_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits&gt;::_Hashtable() [with _Key = ROOT::Internal::RConcurrentHashColl::HashValue; _Value = std::pair&lt;const ROOT::Internal::RConcurrentHashColl::HashValue, std::vector&lt;int&gt; &gt;; _Alloc = std::allocator&lt;std::pair&lt;const ROOT::Internal::RConcurrentHashColl::HashValue, std::vector&lt;int&gt; &gt; &gt;; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to&lt;ROOT::Internal::RConcurrentHashColl::HashValue&gt;; _H1 = std::hash&lt;ROOT::Internal::RConcurrentHashColl::HashValue&gt;; _H2 = std::__detail::_Mod_range_hashing; _Hash = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits&lt;true, false, true&gt;]’ ; - [2023-05-18T18:49:54.137Z] /usr/include/c++/8/bits/hashtable.h:413:7: error: use of deleted function ‘std::__detail::_Hashtable_base&lt;_Key, _Value, _ExtractKey, _Equal, _H1, _H2, _Hash, _Traits&gt;::_Hashtable_base() [with _Key = ROOT::Internal::RConcurrentHashColl::HashValue; _Value = std::pair&lt;const ROOT::Internal::RConcurrentHashColl::HashValue, std::vector&lt;int&gt; &gt;; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to&lt;ROOT::Internal::RConcurrentHashColl::HashValue&gt;; _H1 = std::hash&lt;ROOT::Internal::RConcurrentHashColl::HashValue&gt;; _H2 = s",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12846#issuecomment-1553488642:1663,Hash,HashValue,1663,https://root.cern,https://github.com/root-project/root/pull/12846#issuecomment-1553488642,6,"['Hash', 'hash']","['HashValue', 'hash']"
Security,"Coll.cxx:37:8: error: use of deleted function ‘std::unordered_map&lt;_Key, _Tp, _Hash, _Pred, _Alloc&gt;::unordered_map() [with _Key = ROOT::Internal::RConcurrentHashColl::HashValue; _Tp = std::vector&lt;int&gt;; _Hash = std::hash&lt;ROOT::Internal::RConcurrentHashColl::HashValue&gt;; _Pred = std::equal_to&lt;ROOT::Internal::RConcurrentHashColl::HashValue&gt;; _Alloc = std::allocator&lt;std::pair&lt;const ROOT::Internal::RConcurrentHashColl::HashValue, std::vector&lt;int&gt; &gt; &gt;]’ ; - [2023-05-18T18:53:17.121Z] /usr/include/c++/9/bits/unordered_map.h:141:7: error: use of deleted function ‘std::_Hashtable&lt;_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits&gt;::_Hashtable() [with _Key = ROOT::Internal::RConcurrentHashColl::HashValue; _Value = std::pair&lt;const ROOT::Internal::RConcurrentHashColl::HashValue, std::vector&lt;int&gt; &gt;; _Alloc = std::allocator&lt;std::pair&lt;const ROOT::Internal::RConcurrentHashColl::HashValue, std::vector&lt;int&gt; &gt; &gt;; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to&lt;ROOT::Internal::RConcurrentHashColl::HashValue&gt;; _H1 = std::hash&lt;ROOT::Internal::RConcurrentHashColl::HashValue&gt;; _H2 = std::__detail::_Mod_range_hashing; _Hash = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits&lt;true, false, true&gt;]’ ; - [2023-05-18T18:53:17.121Z] /usr/include/c++/9/bits/hashtable.h:438:7: error: use of deleted function ‘std::__detail::_Hashtable_base&lt;_Key, _Value, _ExtractKey, _Equal, _H1, _H2, _Hash, _Traits&gt;::_Hashtable_base() [with _Key = ROOT::Internal::RConcurrentHashColl::HashValue; _Value = std::pair&lt;const ROOT::Internal::RConcurrentHashColl::HashValue, std::vector&lt;int&gt; &gt;; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to&lt;ROOT::Internal::RConcurrentHashColl::HashValue&gt;; _H1 = std::hash&lt;ROOT::Internal::RConcurrentHashColl::HashValue&gt;; _H2 = s",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12847#issuecomment-1553491495:1609,Hash,HashValue,1609,https://root.cern,https://github.com/root-project/root/pull/12847#issuecomment-1553491495,6,"['Hash', 'hash']","['HashValue', 'hash']"
Security,"Coll.cxx:37:8: error: use of deleted function ‘std::unordered_map&lt;_Key, _Tp, _Hash, _Pred, _Alloc&gt;::unordered_map() [with _Key = ROOT::Internal::RConcurrentHashColl::HashValue; _Tp = std::vector&lt;int&gt;; _Hash = std::hash&lt;ROOT::Internal::RConcurrentHashColl::HashValue&gt;; _Pred = std::equal_to&lt;ROOT::Internal::RConcurrentHashColl::HashValue&gt;; _Alloc = std::allocator&lt;std::pair&lt;const ROOT::Internal::RConcurrentHashColl::HashValue, std::vector&lt;int&gt; &gt; &gt;]’ ; - [2023-05-18T18:56:29.934Z] /usr/include/c++/8/bits/unordered_map.h:141:7: error: use of deleted function ‘std::_Hashtable&lt;_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits&gt;::_Hashtable() [with _Key = ROOT::Internal::RConcurrentHashColl::HashValue; _Value = std::pair&lt;const ROOT::Internal::RConcurrentHashColl::HashValue, std::vector&lt;int&gt; &gt;; _Alloc = std::allocator&lt;std::pair&lt;const ROOT::Internal::RConcurrentHashColl::HashValue, std::vector&lt;int&gt; &gt; &gt;; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to&lt;ROOT::Internal::RConcurrentHashColl::HashValue&gt;; _H1 = std::hash&lt;ROOT::Internal::RConcurrentHashColl::HashValue&gt;; _H2 = std::__detail::_Mod_range_hashing; _Hash = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits&lt;true, false, true&gt;]’ ; - [2023-05-18T18:56:29.934Z] /usr/include/c++/8/bits/hashtable.h:413:7: error: use of deleted function ‘std::__detail::_Hashtable_base&lt;_Key, _Value, _ExtractKey, _Equal, _H1, _H2, _Hash, _Traits&gt;::_Hashtable_base() [with _Key = ROOT::Internal::RConcurrentHashColl::HashValue; _Value = std::pair&lt;const ROOT::Internal::RConcurrentHashColl::HashValue, std::vector&lt;int&gt; &gt;; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to&lt;ROOT::Internal::RConcurrentHashColl::HashValue&gt;; _H1 = std::hash&lt;ROOT::Internal::RConcurrentHashColl::HashValue&gt;; _H2 = s",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12847#issuecomment-1553499782:1663,Hash,HashValue,1663,https://root.cern,https://github.com/root-project/root/pull/12847#issuecomment-1553499782,6,"['Hash', 'hash']","['HashValue', 'hash']"
Security,"Coll.cxx:37:8: error: use of deleted function ‘std::unordered_map&lt;_Key, _Tp, _Hash, _Pred, _Alloc&gt;::unordered_map() [with _Key = ROOT::Internal::RConcurrentHashColl::HashValue; _Tp = std::vector&lt;int&gt;; _Hash = std::hash&lt;ROOT::Internal::RConcurrentHashColl::HashValue&gt;; _Pred = std::equal_to&lt;ROOT::Internal::RConcurrentHashColl::HashValue&gt;; _Alloc = std::allocator&lt;std::pair&lt;const ROOT::Internal::RConcurrentHashColl::HashValue, std::vector&lt;int&gt; &gt; &gt;]’ ; - [2023-05-18T19:40:02.839Z] /usr/include/c++/8/bits/unordered_map.h:141:7: error: use of deleted function ‘std::_Hashtable&lt;_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits&gt;::_Hashtable() [with _Key = ROOT::Internal::RConcurrentHashColl::HashValue; _Value = std::pair&lt;const ROOT::Internal::RConcurrentHashColl::HashValue, std::vector&lt;int&gt; &gt;; _Alloc = std::allocator&lt;std::pair&lt;const ROOT::Internal::RConcurrentHashColl::HashValue, std::vector&lt;int&gt; &gt; &gt;; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to&lt;ROOT::Internal::RConcurrentHashColl::HashValue&gt;; _H1 = std::hash&lt;ROOT::Internal::RConcurrentHashColl::HashValue&gt;; _H2 = std::__detail::_Mod_range_hashing; _Hash = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits&lt;true, false, true&gt;]’ ; - [2023-05-18T19:40:02.839Z] /usr/include/c++/8/bits/hashtable.h:408:7: error: use of deleted function ‘std::__detail::_Hashtable_base&lt;_Key, _Value, _ExtractKey, _Equal, _H1, _H2, _Hash, _Traits&gt;::_Hashtable_base() [with _Key = ROOT::Internal::RConcurrentHashColl::HashValue; _Value = std::pair&lt;const ROOT::Internal::RConcurrentHashColl::HashValue, std::vector&lt;int&gt; &gt;; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to&lt;ROOT::Internal::RConcurrentHashColl::HashValue&gt;; _H1 = std::hash&lt;ROOT::Internal::RConcurrentHashColl::HashValue&gt;; _H2 = s",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12846#issuecomment-1553557302:1495,Hash,HashValue,1495,https://root.cern,https://github.com/root-project/root/pull/12846#issuecomment-1553557302,6,"['Hash', 'hash']","['HashValue', 'hash']"
Security,"Coll.cxx:37:8: error: use of deleted function ‘std::unordered_map&lt;_Key, _Tp, _Hash, _Pred, _Alloc&gt;::unordered_map() [with _Key = ROOT::Internal::RConcurrentHashColl::HashValue; _Tp = std::vector&lt;int&gt;; _Hash = std::hash&lt;ROOT::Internal::RConcurrentHashColl::HashValue&gt;; _Pred = std::equal_to&lt;ROOT::Internal::RConcurrentHashColl::HashValue&gt;; _Alloc = std::allocator&lt;std::pair&lt;const ROOT::Internal::RConcurrentHashColl::HashValue, std::vector&lt;int&gt; &gt; &gt;]’ ; - [2023-05-18T19:50:07.334Z] /usr/include/c++/8/bits/unordered_map.h:141:7: error: use of deleted function ‘std::_Hashtable&lt;_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits&gt;::_Hashtable() [with _Key = ROOT::Internal::RConcurrentHashColl::HashValue; _Value = std::pair&lt;const ROOT::Internal::RConcurrentHashColl::HashValue, std::vector&lt;int&gt; &gt;; _Alloc = std::allocator&lt;std::pair&lt;const ROOT::Internal::RConcurrentHashColl::HashValue, std::vector&lt;int&gt; &gt; &gt;; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to&lt;ROOT::Internal::RConcurrentHashColl::HashValue&gt;; _H1 = std::hash&lt;ROOT::Internal::RConcurrentHashColl::HashValue&gt;; _H2 = std::__detail::_Mod_range_hashing; _Hash = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits&lt;true, false, true&gt;]’ ; - [2023-05-18T19:50:07.334Z] /usr/include/c++/8/bits/hashtable.h:408:7: error: use of deleted function ‘std::__detail::_Hashtable_base&lt;_Key, _Value, _ExtractKey, _Equal, _H1, _H2, _Hash, _Traits&gt;::_Hashtable_base() [with _Key = ROOT::Internal::RConcurrentHashColl::HashValue; _Value = std::pair&lt;const ROOT::Internal::RConcurrentHashColl::HashValue, std::vector&lt;int&gt; &gt;; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to&lt;ROOT::Internal::RConcurrentHashColl::HashValue&gt;; _H1 = std::hash&lt;ROOT::Internal::RConcurrentHashColl::HashValue&gt;; _H2 = s",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12847#issuecomment-1553567486:1495,Hash,HashValue,1495,https://root.cern,https://github.com/root-project/root/pull/12847#issuecomment-1553567486,6,"['Hash', 'hash']","['HashValue', 'hash']"
Security,"Commit a74454ae2d moved `rootcling_stage1` before the other directories, which broke sanitized builds because `core/sanitizer` defines the library `ROOTStaticSanitizerConfig` that `ROOT_EXECUTABLE` links in - if available. Solve this by moving `add_subdirectory(sanitizer)` first in the list.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12128:85,sanitiz,sanitized,85,https://root.cern,https://github.com/root-project/root/pull/12128,3,['sanitiz'],"['sanitized', 'sanitizer']"
Security,"Common.targets(205,5): error MSB4018: at System.IO.__Error.WinIOError(Int32 errorCode, String maybeFullPath) [C:\Users\sftnight\build\release\interpreter\llvm\src\lib\Target\X86\X86CommonTableGen.vcxproj]; C:\Program Files\Microsoft Visual Studio\2022\Community\MSBuild\Microsoft\VC\v170\Microsoft.CppCommon.targets(205,5): error MSB4018: at System.IO.FileStream.Init(String path, FileMode mode, FileAccess access, Int32 rights, Boolean useRights, FileShare share, Int32 bufferSize, FileOptions options, SECURITY_ATTRIBUTES secAttrs, String msgPath, Boolean bFromProxy, Boolean useLongPath, Boolean checkHost) [C:\Users\sftnight\build\release\interpreter\llvm\src\lib\Target\X86\X86CommonTableGen.vcxproj]; C:\Program Files\Microsoft Visual Studio\2022\Community\MSBuild\Microsoft\VC\v170\Microsoft.CppCommon.targets(205,5): error MSB4018: at System.IO.FileStream..ctor(String path, FileMode mode, FileAccess access, FileShare share, Int32 bufferSize, FileOptions options, String msgPath, Boolean bFromProxy, Boolean useLongPath, Boolean checkHost) [C:\Users\sftnight\build\release\interpreter\llvm\src\lib\Target\X86\X86CommonTableGen.vcxproj]; C:\Program Files\Microsoft Visual Studio\2022\Community\MSBuild\Microsoft\VC\v170\Microsoft.CppCommon.targets(205,5): error MSB4018: at System.IO.StreamWriter.CreateFile(String path, Boolean append, Boolean checkHost) [C:\Users\sftnight\build\release\interpreter\llvm\src\lib\Target\X86\X86CommonTableGen.vcxproj]; C:\Program Files\Microsoft Visual Studio\2022\Community\MSBuild\Microsoft\VC\v170\Microsoft.CppCommon.targets(205,5): error MSB4018: at System.IO.StreamWriter..ctor(String path, Boolean append, Encoding encoding, Int32 bufferSize, Boolean checkHost) [C:\Users\sftnight\build\release\interpreter\llvm\src\lib\Target\X86\X86CommonTableGen.vcxproj]; C:\Program Files\Microsoft Visual Studio\2022\Community\MSBuild\Microsoft\VC\v170\Microsoft.CppCommon.targets(205,5): error MSB4018: at System.IO.File.InternalWriteAllText(String path, String c",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10247:1871,access,access,1871,https://root.cern,https://github.com/root-project/root/pull/10247,1,['access'],['access']
Security,"Connection id can be arbitrary unsigned integer; Making problem with lonpoll engine, where id produced as hash value",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9826:106,hash,hash,106,https://root.cern,https://github.com/root-project/root/pull/9826,1,['hash'],['hash']
Security,"Constructing the EventProcessor; [1] Constructing input source of type PoolSource; [2] Calling RootInputFileSequence::initTheFile(); [3] Calling StorageFactory::open(); [4] Calling XrdFile::open(); Exception Message:; Failed to open the file 'root://xrootd-cms.infn.it//store/data/Commissioning2022/Cosmics/ALCARECO/TkAlCosmics0T-PromptReco-v1/000/348/776/00000/96538f53-2088-422c-91a5-841d735a81a8.root'; Additional Info:; [a] Calling RootInputFileSequence::initTheFile(): fail to open the file with name root://cms-xrd-global.cern.ch//eos/cms/store/data/Commissioning2022/Cosmics/ALCARECO/TkAlCosmics0T-PromptReco-v1/000/348/776/00000/96538f53-2088-422c-91a5-841d735a81a8.root; [b] Calling RootInputFileSequence::initTheFile(): fail to open the file with name root://eoscms.cern.ch//eos/cms/store/user/cmsbuild/store/data/Commissioning2022/Cosmics/ALCARECO/TkAlCosmics0T-PromptReco-v1/000/348/776/00000/96538f53-2088-422c-91a5-841d735a81a8.root; [c] Input file root://xrootd-cms.infn.it//store/data/Commissioning2022/Cosmics/ALCARECO/TkAlCosmics0T-PromptReco-v1/000/348/776/00000/96538f53-2088-422c-91a5-841d735a81a8.root could not be opened.; [d] XrdCl::File::Open(name='root://xrootd-cms.infn.it//store/data/Commissioning2022/Cosmics/ALCARECO/TkAlCosmics0T-PromptReco-v1/000/348/776/00000/96538f53-2088-422c-91a5-841d735a81a8.root', flags=0x10, permissions=0660) => error '[ERROR] Server responded with an error: [3010] Unable to give access - user access restricted - unauthorized identity used ; Permission denied; ' (errno=3010, code=400). No additional data servers were found.; [e] Last URL tried: root://eoscms.cern.ch:1094//store/data/Commissioning2022/Cosmics/ALCARECO/TkAlCosmics0T-PromptReco-v1/000/348/776/00000/96538f53-2088-422c-91a5-841d735a81a8.root?tried=&xrdcl.requuid=77efdb8c-ca84-408a-a3eb-5044434acba7; [f] Problematic data server: eoscms.cern.ch:1094; [g] Disabled source: eoscms.cern.ch:1094; ----- End Fatal Exception -------------------------------------------------; ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13429#issuecomment-1686079491:2364,access,access,2364,https://root.cern,https://github.com/root-project/root/issues/13429#issuecomment-1686079491,2,['access'],['access']
Security,"Converted to draft: after this change, using `ntuple_info.C` from https://github.com/jblomer/iotools at the interpreter was no longer able to open the `Events` NanoAOD RNTuple (it succeeded as a compiled gtest however). ```; C++ exception with description ""no RNTuple named 'Events' in file 'test80X_NANO_rntuple.root' (unchecked RResult access!); ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8285#issuecomment-851593253:338,access,access,338,https://root.cern,https://github.com/root-project/root/pull/8285#issuecomment-851593253,1,['access'],['access']
Security,"Correct - and I wanted to start small (`vector`, `string`) and see what roottest has to say about that. I did expect some test failures?! That would guide me what else we should expose. Which makes me wonder whether this works at all - nope, it doesn't. Let me fix that...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11027#issuecomment-1192710542:178,expose,expose,178,https://root.cern,https://github.com/root-project/root/pull/11027#issuecomment-1192710542,2,['expose'],['expose']
Security,"Could not find any duplicate. ### Describe the bug; When starting ROOT on an arm64 machine a symbol-not-found message appears for about 10 times before getting to the prompt.; The message is related to SOFIE:. ```; IncrementalExecutor::executeFunction: symbol '_ZN4TMVA12Experimental5SOFIE8INTERNAL22make_ROperator_ReshapeERKN4onnx9NodeProtoERKNS3_10GraphProtoERSt13unordered_mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEENS1_11ETensorTypeESt4hashISG_ESt8equal_toISG_ESaISt4pairIKSG_SH_EEE' unresolved while linking function '_GLOBAL__sub_I_cling_module_0'!; You are probably missing the definition of TMVA::Experimental::SOFIE::INTERNAL::make_ROperator_Reshape(onnx::NodeProto const&, onnx::GraphProto const&, std::unordered_map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, TMVA::Experimental::SOFIE::ETensorType, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, TMVA::Experimental::SOFIE::ETensorType> > >&); Maybe you need to load the corresponding shared library?; Symbol found in '/cvmfs/sft.cern.ch/lcg/releases/ROOT/6.26.04-22463/aarch64-centos7-gcc11-opt/lib/libROOTTMVASofieParser.so'; did you mean to load it with '.L /cvmfs/sft.cern.ch/lcg/releases/ROOT/6.26.04-22463/aarch64-centos7-gcc11-opt/lib/libROOTTMVASofieParser.so'?; ```. ROOT 6.24/06 works fine. ### Expected behavior; No warning message. ### To Reproduce; Steps to reproduce the behavior:; 1. Login on an ARM amchine with cvmfs, e.g. techlab-arm64-thunderx2-01 ; 2. Source dev4arm; `source /cvmfs/sft.cern.ch/lcg/views/dev4/Wed/aarch64-centos7-gcc11-opt/setup.sh`; 3. Start ROOT, e.g. `root -b -q`. ### Setup; 1. ROOT version: 6.26/04; 2. Operating system: aarch64, centos7; 3. LCG stack. ### Additional context; Affecting ATLAS ",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10877:866,hash,hash,866,https://root.cern,https://github.com/root-project/root/issues/10877,1,['hash'],['hash']
Security,Create SECURITY.md,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5298:7,SECUR,SECURITY,7,https://root.cern,https://github.com/root-project/root/pull/5298,1,['SECUR'],['SECURITY']
Security,"Create` does not work to the same extent as directly templated fields:; ```cpp; // works ; auto ulong_field = RField<unsigned long>(""ulong""); ; EXPECT_STREQ(""std::uint64_t"", ulong_field.GetType().c_str());; // throws runtime exception; auto other_ulong = RFieldBase::Create(""other ulong"", ""unsigned long"").Unwrap();; ```; ```; C++ exception with description ""Field other ulong has unknown type unsigned long (unchecked RResult access!); At:; static ROOT::Experimental::RResult<std::unique_ptr<ROOT::Experimental::Detail::RFieldBase> > ROOT::Experimental::Detail::RFieldBase::Create(const string&, const string&) [/home/max/projects/rootdev/root/tree/ntuple/v7/src/RField.cxx:202]; ```; Typedef / type alias fields are also an issue:; ```cpp; // works; auto str_size_field = RField<std::string::size_type>(""str_size"");; // throws exception; auto other_str_size = RFieldBase::Create(""str_size"", ""std::string::size_type"").Unwrap();; ```; ```; C++ exception with description ""Field str_size has unknown type std::string::size_type (unchecked RResult access!); At:; static ROOT::Experimental::RResult<std::unique_ptr<ROOT::Experimental::Detail::RFieldBase> > ROOT::Experimental::Detail::RFieldBase::Create(const string&, const string&) [/home/max/projects/rootdev/root/tree/ntuple/v7/src/RField.cxx:202]; ```; This has implications for user-defined classes, because `RFieldBase::Create` is used to initialize subfields:; ```cpp; struct CustomStruct {; unsigned long ul;; };; // ... ; auto class_field = RField<CustomStruct>(""custom_struct"");; ```; ```; C++ exception with description ""Field ul has unknown type unsigned long (unchecked RResult access!); At:; static ROOT::Experimental::RResult<std::unique_ptr<ROOT::Experimental::Detail::RFieldBase> > ROOT::Experimental::Detail::RFieldBase::Create(const string&, const string&) [/home/max/projects/rootdev/root/tree/ntuple/v7/src/RField.cxx:202]; ```. ### Additional context; Related issue #7861 ; <!--; Add any other context about the problem here.; -->",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7875:1210,access,access,1210,https://root.cern,https://github.com/root-project/root/issues/7875,2,['access'],['access']
Security,"Cross validation has been integrated through a different PR. Remaining are the Hyper param opt and variable importance.; I refer to @lmoneta for the future plan there. It is my understanding however that if we integrate them we do it through new PR’s, indicating that this PR can be closed. I will make sure to update the PR after discussion with Lorenzo during next week.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/858#issuecomment-408062694:6,validat,validation,6,https://root.cern,https://github.com/root-project/root/pull/858#issuecomment-408062694,1,['validat'],['validation']
Security,Cross-validation and HyperParameterOptimisation in TMVA,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/245:6,validat,validation,6,https://root.cern,https://github.com/root-project/root/pull/245,1,['validat'],['validation']
Security,"Current behavior:. ```; root [0] TFile f(""root://eospublic.cern.ch//eos/root-eos/benchmark/Run2012B_SingleMu.root""); Error in <TFile::TFile>: file /eos/root-eos/benchmark/Run2012B_SingleMu.root does not exist; (TFile &) Name: /eos/root-eos/benchmark/Run2012B_SingleMu.root Title:; ```. Desirable behavior:. ```; root [0] TFile f(""root://eospublic.cern.ch//eos/root-eos/benchmark/Run2012B_SingleMu.root""); Error in <TFile::TFile>: please use TFile::Open to access remote files:; auto f = std::unique_ptr<TFile>{TFile::Open(""root://eospublic.cern.ch//eos/root-eos/benchmark/Run2012B_SingleMu.root"")} ; (TFile &) Name: /eos/root-eos/benchmark/Run2012B_SingleMu.root Title:; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10039:456,access,access,456,https://root.cern,https://github.com/root-project/root/issues/10039,1,['access'],['access']
Security,"Current state:; - the normalized name continues to remove `std::`; - it injects using declarations for the ""most common"" stdlib identifiers; - this PR adds `std::` where ""needed"", to the normalized name, to make identifiers ""compilable"" (in dictionary source). The last point requires to have an authoritative list of ""things in the std namespace"", to prepend `std::` to them. This does not scale - any stdlib implementation might have any non-public identifier that might be needed also for public types, e.g. some libstdc++ have `std::thread::id` as type alias to `std::__thread_id`. Alternatively, this PR could implement a ""if lookup fails, try again with prepending `std::`"". This is an issue for types such as `foo<bar, baz<boo,boz>>` where either any type must be tested for std-ization separately or all possible permutations (`std::foo<bar, baz<boo,boz>>`, `foo<std::bar, baz<boo,boz>>`,`std::foo<std::bar, baz<boo,boz>>`...) must be tried.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11027:72,inject,injects,72,https://root.cern,https://github.com/root-project/root/pull/11027,1,['inject'],['injects']
Security,"Currently if we compile this test we get ld warning messages like this:. ```; ld: direct access in function ... to global weak symbol. This was likely; caused by different translation units being compiled with different; visibility settings.; ```. This seems to be caused by the fact that visibility=hidden is spreading; from the parent directory to the test directory, even though it should; only land in the src/ directory. As CMAKE_CXX_FLAGS is working on a; per subdirectory basis, we just move the code for handling the source; code to the src/ folder, which should contain the visibility=hidden.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/644:89,access,access,89,https://root.cern,https://github.com/root-project/root/pull/644,1,['access'],['access']
Security,"Currently, some sections of TFile::ReadProcessID are only protected; from concurrent access if Internal::IsParTreeProcessingEnabled(); is true. The only entity that enables ParTreeProcessing in ROOT; is TTreeProcessorMT::Process. With this patch, concurrent access to TFile::ReadProcessID is always protected. Rationale: if TTreeProcessorMT::Process needs that protection, everyone needs it. Note that `TParTreeProcessing` is unused after this change, so if you agree the change can go in, I'll add a commit that removes `TParTreeProcessing` from ROOT. If you _don't_ agree the change can go in: why does `TTreeProcessorMT::Process` need this protection but other usecases do not (note that `TParTreeProcessing` is in `ROOT::Internal`, so we do not expect users to activate these locks)?",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5288:85,access,access,85,https://root.cern,https://github.com/root-project/root/pull/5288,2,['access'],['access']
Security,D-FR-Robots.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/UNAMgrid-ca.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/AC-GRID-FR-Robots.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/UNAMgrid-ca.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/UNLPGrid.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/SDG-G2.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/AC-GRID-FR-Robots.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/7a819ef2.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/UNAMgrid-ca.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/QuoVadis-Root-CA2.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/QuoVadis-Root-CA2.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/UNLPGrid.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/QuoVadis-Root-CA2.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/d71343e8.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/QuoVadis-Root-CA2.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/d71343e8.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/d7e8dc79.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/SlovakGrid.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/728fa56d.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/SlovakGrid.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/728fa56d.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/e13e,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8092#issuecomment-840048181:52692,secur,security,52692,https://root.cern,https://github.com/root-project/root/issues/8092#issuecomment-840048181,2,"['certificate', 'secur']","['certificates', 'security']"
Security,"DAiLCJQIjoiV2luMzIiLCJBTiI6Ik1haWwiLCJXVCI6Mn0%3D%7C1000&sdata=h9OXPXSoNf6rog1YhZy1Iuiji7Tq8asNeePutHMw2rs%3D&reserved=0>,O=Grid,C=CA; >>>>>> * start date: Apr 08 16:29:03 2021 GMT; >>>>>> * expire date: May 08 16:29:03 2022 GMT; >>>>>> * common name: dpool46.lcg.triumf.ca <http://dpool46.lcg.triumf.ca/>; >>>>>> * issuer: CN=Grid Canada Certificate Authority,O=Grid,C=CA; >>>>>> * NSS error -8179 (SEC_ERROR_UNKNOWN_ISSUER); >>>>>> * Peer's Certificate issuer is not recognized.; >>>>>> * Closing connection 0; >>>>>> curl: (60) Peer's Certificate issuer is not recognized.; >>>>>> More details here: http://curl.haxx.se/docs/sslcerts.html ; >>>>>> <https://can01.safelinks.protection.outlook.com/?url=http%3A%2F%2Fcurl.haxx.se%2Fdocs%2Fsslcerts.html&data=04%7C01%7Csimonliu%40triumf.ca%7C2bf615c9bb89486eaecd08d91571b94b%7Cc20535109cb34679a2d38f442e03b587%7C1%7C0%7C637564400460996291%7CUnknown%7CTWFpbGZsb3d8eyJWIjoiMC4wLjAwMDAiLCJQIjoiV2luMzIiLCJBTiI6Ik1haWwiLCJXVCI6Mn0%3D%7C1000&sdata=s%2FTzkvNzM41e0GBRqYtbxaUzcM3edlGm0YFY9wV%2BN2M%3D&reserved=0>; >>>>>>; >>>>>> curl performs SSL certificate verification by default, using a ; >>>>>> ""bundle""; >>>>>>  of Certificate Authority (CA) public keys (CA certs). If the default; >>>>>>  bundle file isn't adequate, you can specify an alternate file; >>>>>>  using the --cacert option.; >>>>>> If this HTTPS server uses a certificate signed by a CA represented in; >>>>>>  the bundle, the certificate verification probably failed due to a; >>>>>>  problem with the certificate (it might be expired, or the name might; >>>>>>  not match the domain name in the URL).; >>>>>> If you'd like to turn off curl's verification of the certificate, use; >>>>>>  the -k (or --insecure) option.; >>>>>> ***@***.*** t5]$; >>>>>; >>>>>; >>>>> I am unfamiliar with how to use curl with X509 and everything I ; >>>>> tried so far has not worked. eg; >>>>> *curl*-v ; >>>>> https://webdav.lcg.triumf.ca:2880/atlas/atlaslocalgroupdisk/rucio/user/desilva/a1/a8/myFile.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8092#issuecomment-840016493:5718,certificate,certificate,5718,https://root.cern,https://github.com/root-project/root/issues/8092#issuecomment-840016493,2,"['Certificate', 'certificate']","['Certificate', 'certificate']"
Security,DECREF' in /usr/include/python2.7/object.h:825; /usr/include/python2.7/object.h:774:9: expanded from macro 'Py_DECREF'; /opt/root_src/bindings/pyroot/cppyy/CPyCppyy/src/Converters.cxx:2082:9: 'pyobj' is null; /opt/root_src/bindings/pyroot/cppyy/CPyCppyy/src/Converters.cxx:2082:5: Taking false branch; /opt/root_src/bindings/pyroot/cppyy/CPyCppyy/src/Converters.cxx:2087:16: Calling 'IsPyCArgObject'; /opt/root_src/bindings/pyroot/cppyy/CPyCppyy/src/Converters.cxx:164:10: 'pycarg_type' is null; /opt/root_src/bindings/pyroot/cppyy/CPyCppyy/src/Converters.cxx:164:5: Taking true branch; /opt/root_src/bindings/pyroot/cppyy/CPyCppyy/src/Converters.cxx:165:9: 'ctmod' initialized here; /opt/root_src/bindings/pyroot/cppyy/CPyCppyy/src/Converters.cxx:166:13: Assuming 'ctmod' is null; /opt/root_src/bindings/pyroot/cppyy/CPyCppyy/src/Converters.cxx:166:9: Taking true branch; /opt/root_src/bindings/pyroot/cppyy/CPyCppyy/src/Converters.cxx:176:9: Access to field 'ob_refcnt' results in a dereference of a null pointer (loaded from variable 'ctmod'); /usr/include/python2.7/object.h:774:9: expanded from macro 'Py_DECREF'; /opt/root_src/bindings/pyroot/cppyy/CPyCppyy/src/Converters.cxx:1132:9: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119; /opt/root_src/bindings/pyroot/cppyy/CPyCppyy/src/Converters.cxx:1143:9: Assuming the condition is true; /opt/root_src/bindings/pyroot/cppyy/CPyCppyy/src/Converters.cxx:1143:9: Left side of '&&' is true; /opt/root_src/bindings/pyroot/cppyy/CPyCppyy/src/Converters.cxx:1143:34: Assuming the condition is false; /opt/root_src/bindings/pyroot/cppyy/CPyCppyy/src/Converters.cxx:1143:5: Taking false branch; /opt/root_src/bindings/pyroot/cppyy/CPyCppyy/src/Converters.cxx:1146:25: Call to 'realloc' has an allocation size of 0 bytes; /opt/root_src/bindings/pyroot/cppyy/CPyCppyy/src/Converters.cxx:1201:9: As,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7400#issuecomment-792738257:6090,Access,Access,6090,https://root.cern,https://github.com/root-project/root/issues/7400#issuecomment-792738257,1,['Access'],['Access']
Security,DEFoam.cxx:325; 16: Loop condition is false. Execution continues on line 340 in /opt/root_src/tmva/tmva/src/PDEFoam.cxx:325; 17: Calling 'PDEFoam::InitCells' in /opt/root_src/tmva/tmva/src/PDEFoam.cxx:343; 18: Field 'fCells' is equal to null in /opt/root_src/tmva/tmva/src/PDEFoam.cxx:359; 19: Taking false branch in /opt/root_src/tmva/tmva/src/PDEFoam.cxx:359; 20: Value assigned to field 'fCells' in /opt/root_src/tmva/tmva/src/PDEFoam.cxx:364; 21: Assuming field 'fCells' is null in /opt/root_src/tmva/tmva/src/PDEFoam.cxx:365; 22: Taking true branch in /opt/root_src/tmva/tmva/src/PDEFoam.cxx:365; 23: Assuming 'i' is < field 'fNCells' in /opt/root_src/tmva/tmva/src/PDEFoam.cxx:369; 24: Loop condition is true. Entering loop body in /opt/root_src/tmva/tmva/src/PDEFoam.cxx:369; 25: Array access (via field 'fCells') results in a null pointer dereference in /opt/root_src/tmva/tmva/src/PDEFoam.cxx:370; /opt/root_src/tmva/tmva/src/PDEFoam.cxx:397:11: warning: Array access (via field 'fCells') results in a null pointer dereference [clang-analyzer-core.NullDereference]; 1: Assuming field 'fPseRan' is not equal to null in /opt/root_src/tmva/tmva/src/PDEFoam.cxx:297; 2: Taking false branch in /opt/root_src/tmva/tmva/src/PDEFoam.cxx:297; 3: Assuming field 'fDistr' is not equal to null in /opt/root_src/tmva/tmva/src/PDEFoam.cxx:298; 4: Taking false branch in /opt/root_src/tmva/tmva/src/PDEFoam.cxx:298; 5: Assuming field 'fDim' is not equal to 0 in /opt/root_src/tmva/tmva/src/PDEFoam.cxx:299; 6: Taking false branch in /opt/root_src/tmva/tmva/src/PDEFoam.cxx:299; 7: Field 'fRvec' is not equal to null in /opt/root_src/tmva/tmva/src/PDEFoam.cxx:306; 8: Taking false branch in /opt/root_src/tmva/tmva/src/PDEFoam.cxx:306; 9: Assuming field 'fDim' is <= 0 in /opt/root_src/tmva/tmva/src/PDEFoam.cxx:308; 10: Taking false branch in /opt/root_src/tmva/tmva/src/PDEFoam.cxx:308; 11: Assuming field 'fInhiDiv' is not equal to null in /opt/root_src/tmva/tmva/src/PDEFoam.cxx:314; 12: Taking false br,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7526:96623,access,access,96623,https://root.cern,https://github.com/root-project/root/issues/7526,1,['access'],['access']
Security,"DFInterface.hxx:660:4: error: no template named 'RResultPtr' . And 10 more. ### Warnings:; - /mnt/build/workspace/root-pullrequests-build/root/core/meta/src/TClass.cxx:686:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:5203:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:4757:26: warning: ‘char* strncpy(char*, const char*, size_t)’ output may be truncated copying 10 bytes from a string of length 10 [-Wstringop-truncation] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:490:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing between 2147483648 and 2147483647 bytes at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 4294967295] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:761:21: warning: ‘%lu’ directive writing between 1 and 20 bytes into a region of size between 0 and 8191 [-Wformat-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/proof/proofd/src/XrdProofdProtocol.cxx:527:45: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘class XrdSecEntity’; use assignment or value-initialization instead [-Wclass-memaccess] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TSystem.cxx:1148:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing 1 byte at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 2147483649] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1770:96: warning: cast between incompatible function types from ‘TVirtualPad*& (*)()’ to ‘TGlobalMappedFunction::G",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2232#issuecomment-399775824:2328,access,accessing,2328,https://root.cern,https://github.com/root-project/root/pull/2232#issuecomment-399775824,2,['access'],['accessing']
Security,"Dear @lgray,. Thanks a lot for your input! Let me try to comment on the various parts. > I think optional and union types are very convenient here. Absolutely, I agree. Thank you also for the info about the data validation in coffea. The decision on the keys that need a union type should also be part of this formalization effort. > Decide what term to use instead of ""groups"" (dataset is probably best). I see there are these two schools of thought but I cannot grasp how much of the community leans towards one vs the other. Do you think we should poll the larger audience at some point, for this and probably other questions? One other option could be just accepting both ""datasets"" and ""samples"" as the top-level key in the JSON object. > Cover TTree but plan for RNTuple support (metadata should not care about file formats, your program does). Indeed, this point was more directed towards us developers rather than user-facing. Metadata will definitely be orthogonal to the data format. > Allowing them opens up many possibilities, including mixed modes and joins across rather heterogenous datasets. This is an interesting comment, something that I hadn't put too much thought into. I think that it is much related with the other comment regarding joins. Mixed modes sounds intriguing although I can't see a clear path for its implementation in the I/O layer, rather we may be better off doing this at the analysis tool layer directly. In general, the usecase of reading the output of some ML pipeline during the execution of the analysis is definitely something we want to address. For what concerns this specification, the easy part is just deciding for something more generic than ""treenames"" when specifying these other data formats; the trickier part is deciding how these other input data should be read. See the next comment for more discussion about this. > The more general term for this is a a join, and I think you should use that concept here rather than the precise concept of fri",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11624#issuecomment-1297411993:212,validat,validation,212,https://root.cern,https://github.com/root-project/root/issues/11624#issuecomment-1297411993,2,['validat'],['validation']
Security,"Dear ROOT developers,. this Pull Request tries to address [this issue](https://root-forum.cern.ch/t/using-tfitshdu-to-read-a-table-with-arrays-as-column-elements/37867) I have opened in the ROOT forum. A limitation of the `TFITSHDU` class was its impossibility to read within columns of a FITS table containing a variable-length array. My patch adds such a possibility. I have modified the `Column` and `Cell` `struct`s adding objects necessary to read a variable-length arrays embedded in a cell. The`LoadHDU` function (fundamentally the initialiser of the `TFITSHDU` class) was modified accordingly such that this objects could be assigned. I have modified the functions dealing with printing and reading values from a table such that the occurrence of a column with variable-length arrays embedded can be properly signalled. In order not to interfere with the previous development of data handling I created a function to read within a cell for this specific case: it is called `GetTabVarLengthVectorCell`. I believe it does not make sense to read the entire column in this case (returning an array of variable-length arrays). The user is allowed to access the single cell, when attempting to use any other function (e.g. `GetTabRealVectorColumn`) to read the entire column, a warning is issued pointing him to this specific function. Last I added a tutorial in `tutorials/fitsio/FITS_tutorial8.C` with a test file illustrating the application of this case. I would kindly ask for a review,. Best. Cosimo",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5099:1153,access,access,1153,https://root.cern,https://github.com/root-project/root/pull/5099,1,['access'],['access']
Security,"Declarations without the auto keyword are not part of standard C++. Even though it is a nice feature to have, it requires a patch on top of clang and is one of the hurdles preventing us from using the upstream clang. Implicit auto injection is currently only supported at the prompt (and only in the top-most function-level scope). So it should ideally not break other features. There are a few GitHub and JIRA issues related to this feature that can also be closed if we completely remove it. For the warning messages, I'm reusing one of the existing clang warning message (to not introduce more patches on top of the clang with custom error messages). EDIT:; Glancing through JIRA issues, these are the issues that can be closed (list might not be exhaustive):. https://its.cern.ch/jira/browse/ROOT-10309; https://its.cern.ch/jira/browse/ROOT-10593; https://its.cern.ch/jira/browse/ROOT-10284; https://its.cern.ch/jira/browse/ROOT-8828; https://its.cern.ch/jira/browse/ROOT-8538; https://its.cern.ch/jira/browse/ROOT-7970. # This Pull request:; Requires https://github.com/root-project/roottest/pull/1056 to be merged for tests to pass. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14645:231,inject,injection,231,https://root.cern,https://github.com/root-project/root/pull/14645,1,['inject'],['injection']
Security,"Demonstrates how to access inner fields of a complex collection. In this case, we store an `std::vector<CustomStruct>` and we read `CustomStruct.a` as an `std::vector<float>`. This capability is necessary for efficient collection access in RNTupleDS.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6549:20,access,access,20,https://root.cern,https://github.com/root-project/root/pull/6549,2,['access'],['access']
Security,Disable validation of the diagnostic options when loading the C++ module,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2680:8,validat,validation,8,https://root.cern,https://github.com/root-project/root/pull/2680,1,['validat'],['validation']
Security,"Discussed and checked the problem with @pcanal . The root cause is that `TTree::CopyAddresses` has an implicit assumption that the input and output branches are of the same kind, while in this case we have a `TBranchElement` in input and a simple `TBranch` in output. In particular, `TBranchElement::SetAddress` would apply a correction to the wrong offset returned by `TBranchElement::GetAddress`, but `TBranch::SetAddress` does not. This bug is absolutely terrible: if the input dataset consists of multiple trees, starting from the second tree data members of types that were saved as TBranchElements are written out wrongly by Snapshot. The plan is the following:. 1. add a check in `TTree::CopyAddresses` that input and output branches are of the same kind, print an error otherwise; 2. refactor `Snapshot` so that instead of relying on `TChain::AddClone` and `TTree::CopyAddresses` to update the addresses of the output branches we instead reset the branches manually based on the addresses provided by TTreeReaderValue access -- we'll use the `TNotify` mechanism to reset the branches every time TChain switches input tree",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8295#issuecomment-852277296:1026,access,access,1026,https://root.cern,https://github.com/root-project/root/issues/8295#issuecomment-852277296,2,['access'],['access']
Security,Do you have access to a machine where you can test this?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10402#issuecomment-1122809111:12,access,access,12,https://root.cern,https://github.com/root-project/root/pull/10402#issuecomment-1122809111,1,['access'],['access']
Security,Document RNTuple header crc32 checksum calculation,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11318:30,checksum,checksum,30,https://root.cern,https://github.com/root-project/root/issues/11318,1,['checksum'],['checksum']
Security,"Don't export (expose) the '?__type_info_root_node@@3U__type_info_node@@A', this leads to the following error in some cases:; ```; MSVCRT.lib(tncleanup.obj) : error LNK2005: ""struct __type_info_node __type_info_root_node"" (?__type_info_root_node@@3U__type_info_node@@A) already defined in libCling.lib(libCling.dll); ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7342:14,expose,expose,14,https://root.cern,https://github.com/root-project/root/pull/7342,1,['expose'],['expose']
Security,"During reading C++ definition data for lambda we can access; CXXRecordDecl representing lambda before we finished reading the; definition data. This can happen by reading a captured variable which is; VarDecl, then reading its decl context which is CXXMethodDecl `operator()`,; then trying to merge redeclarable methods and accessing; enclosing CXXRecordDecl. The call stack looks roughly like. VisitCXXRecordDecl; ReadCXXRecordDefinition; VisitVarDecl; VisitCXXMethodDecl; mergeRedeclarable; getPrimaryContextForMerging. If we add fake definition data at this point, later we'll hit the assertion. Assertion failed: (!DD.IsLambda && !MergeDD.IsLambda && ""faked up lambda definition?""), function MergeDefinitionData, file clang/lib/Serialization/ASTReaderDecl.cpp, line 1675. The fix is to assign definition data before reading it. Fixes PR32556. rdar://problem/37461072. Reviewers: rsmith, bruno. Reviewed By: rsmith. Subscribers: cfe-commits, jkorous-apple, aprantl. Differential Revision: https://reviews.llvm.org/D43494. llvm-svn: 328153. cc: @davidlange6",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6212:53,access,access,53,https://root.cern,https://github.com/root-project/root/pull/6212,2,['access'],"['access', 'accessing']"
Security,"E.g. https://github.com/root-project/root/commit/b1d5b97b7ba5435b8af3994820daebb3e4178e75 improves the situation a bit, but in the end we're still left with many unprotected (threading-wise) accesses to both `fIds` *and* its content, i.e. addition / removal of elements might happen asynchronously. There are usages in the wild of direct access to `fIds`, e.g. https://github.com/root-project/root/blob/407cb5816e819271d348dcb08f50330d59c0dd52/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx#L1902-L1903",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6566:191,access,accesses,191,https://root.cern,https://github.com/root-project/root/issues/6566,2,['access'],"['access', 'accesses']"
Security,E.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/seegrid-ca-2013.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/CNIC.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/seegrid-ca-2013.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/b2771d44.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/b2771d44.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/SRCE.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/e2023333.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/NCSA-slcs-2013.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/e2023333.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/2fc6b233.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/AC-GRID-FR-Personnels.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/2fc6b233.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/ff94d436.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/0e635db3.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/8fa17d52.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/0e635db3.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/IGCA2.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/RDIG.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/AC-GRID-FR-Personnels.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/156a0f0f.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/seegrid-ca-2013.signing_policy',MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8092#issuecomment-840048181:43022,secur,security,43022,https://root.cern,https://github.com/root-project/root/issues/8092#issuecomment-840048181,2,"['certificate', 'secur']","['certificates', 'security']"
Security,"EDIT: as discussed, tmate sessions might be a security breach. Let's just disable this feature for now.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13186:46,secur,security,46,https://root.cern,https://github.com/root-project/root/pull/13186,1,['secur'],['security']
Security,EGIS.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/1691b9ba.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/cc5645bd.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/GermanGrid.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/cc5645bd.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/f4cf8fb6.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/4b3f5558.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/GermanGrid.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/4b3f5558.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/GermanGrid.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/QuoVadis-Root-CA3G3.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/QuoVadis-Root-CA3G3.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/87429ba3.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/TRGrid.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/7c27c6a1.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/HellasGrid-CA-2016.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/HellasGrid-CA-2016.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/HellasGrid-CA-2016.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/HellasGrid-CA-2016.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/f4cf8fb6.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/6999cae3.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-securit,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8092#issuecomment-840048181:35828,secur,security,35828,https://root.cern,https://github.com/root-project/root/issues/8092#issuecomment-840048181,2,"['certificate', 'secur']","['certificates', 'security']"
Security,EK.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/MYIFAM.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/TERENAeSciencePersonalCA3.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/dbf09133.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/PK-Grid-2007.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/dbf09133.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/8f016f43.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/TSU-GE.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/8f016f43.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/PKIUNAMgrid.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/TSU-GE.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/PKIUNAMgrid.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/GermanGrid.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/TSU-GE.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/PKIUNAMgrid.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/d0a33f8e.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/d0a33f8e.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/dd4b34ea.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/4b2783ac.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/TSU-GE.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/4b2783ac.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/dd4b34ea.signing_policy',MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8092#issuecomment-840048181:28875,secur,security,28875,https://root.cern,https://github.com/root-project/root/issues/8092#issuecomment-840048181,2,"['certificate', 'secur']","['certificates', 'security']"
Security,ELF header does contain dependency information.; $ objdump -x lib/libMathMore.so | less; ```; Dynamic Section:; PLTGOT 0x0000000000092fe8; PLTRELSZ 0x0000000000005a48; JMPREL 0x000000000002d4a8; PLTREL 0x0000000000000007; RELA 0x0000000000024e98; RELASZ 0x0000000000008610; RELAENT 0x0000000000000018; RELACOUNT 0x000000000000003c; SYMTAB 0x00000000000001c8; SYMENT 0x0000000000000018; STRTAB 0x000000000000ac50; STRSZ 0x0000000000013c98; GNU_HASH 0x000000000001e8e8; HASH 0x00000000000212d0; NEEDED libgsl.so.23; NEEDED libgslcblas.so.0; NEEDED libm.so.6; NEEDED libMathCore.so; NEEDED libImt.so; NEEDED libThread.so; NEEDED libCore.so; NEEDED libstdc++.so.6; NEEDED libgcc_s.so.1; NEEDED libpthread.so.0; NEEDED libc.so.6; SONAME libMathMore.so; ```. NEEDED section is the dependency libraries.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2135#issuecomment-394476683:468,HASH,HASH,468,https://root.cern,https://github.com/root-project/root/pull/2135#issuecomment-394476683,1,['HASH'],['HASH']
Security,EP-2013.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/NERSC-SLCS.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/b93d6240.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/39d30eba.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/b93d6240.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/e7734335.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/30351739.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/39d30eba.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/30351739.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/e7734335.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/61cd35bd.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/IHEP-2013.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/61cd35bd.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/HPCI.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/HPCI.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/ead666c8.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/06769ccd.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/HPCI.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/06769ccd.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/522b8537.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/NorduGrid-2015.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/522b8537.signing_policy' from CURLOPT_CAPA,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8092#issuecomment-840048181:56498,secur,security,56498,https://root.cern,https://github.com/root-project/root/issues/8092#issuecomment-840048181,2,"['certificate', 'secur']","['certificates', 'security']"
Security,EmulatedMapProxy.cxx:96; 10: 'idx' is < 'nElements' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:102; 11: Loop condition is true. Entering loop body in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:102; 12: The value 0 is assigned to 'loop' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:104; 13: Loop condition is true. Entering loop body in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:104; 14: Null pointer value stored to 'addr' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:105; 15: Null pointer value stored to 'helper' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:106; 16: Control jumps to 'case kIsEnum:' at line 110 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:108; 17: Control jumps to 'case kFloat_t:' at line 118 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:111; 18: Forming reference to null pointer in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:118; /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:120:28: warning: Access to field 'flt' results in a dereference of a null pointer (loaded from variable 'helper') [clang-analyzer-core.NullDereference]; 1: Taking true branch in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:240; 2: Assuming field 'fObject' is null in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:243; 3: Taking false branch in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:243; 4: Assuming 'nElements' is > 0 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:246; 5: Taking true branch in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:246; 6: Calling 'TEmulatedMapProxy::ReadMap' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:247; 7: Assuming the condition is false in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:94; 8: Left side of '&&' is false in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:94; 9: Initializing to 0 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:96; 10: 'idx' is < 'nElements' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:102; 11: Loop condition is true. Entering loop body in /opt/root_src/io/io/src/TEmulatedMapPro,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7431:25185,Access,Access,25185,https://root.cern,https://github.com/root-project/root/issues/7431,1,['Access'],['Access']
Security,"Every time when sub-directory items are requested, set it as `gDirectory`; This helps to directly access objects from that sub-directory in command line. Also automatically update canvas drawing if it was modified during command execution. Add newline in command output",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10164:98,access,access,98,https://root.cern,https://github.com/root-project/root/pull/10164,1,['access'],['access']
Security,Exactly. Talking to Philippe we indeed need to decide how to deal with this case of `std::foo` vs `::foo`. We can delay the decision point by renaming `std::Detail` injected by ROOT (#9093).,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8828#issuecomment-939859280:165,inject,injected,165,https://root.cern,https://github.com/root-project/root/issues/8828#issuecomment-939859280,1,['inject'],['injected']
Security,Example failure:. 562/1224 Test #541: tutorial-gl-gltf3 ...................................................***Failed Error regular expression found in output. Regex=[Error in <] 1.36 sec; Processing /builddir/build/BUILD/root-6.26.00/tutorials/gl/gltf3.C...; Error in <TList::Delete>: A list is accessing an object (0x7fffd1c959a0) already deleted (list name = Functions); Error in <TList::Delete>: A list is accessing an object (0x7fffd1c95750) already deleted (list name = Functions). # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10310:295,access,accessing,295,https://root.cern,https://github.com/root-project/root/pull/10310,2,['access'],['accessing']
Security,"Example with TH1F, for reproducibility, but happens for any class accessed via ROOT. >>> class MyClass(ROOT.TH1F):; ... ""My Class""; ... ; Traceback (most recent call last):; File ""<stdin>"", line 1, in <module>; KeyError: 'UpdateBinContent'. The variable with the KeyError is always the variable last in the list of private data members. ; This error appears on lxplus, CentOS Linux 7 (Core), gcc version 7.3.0, CXXFLAGS=-fPIC -g -O2 -std=c++17. This error DOES NOT appear on Ubuntu 20.04.1 LTS, gcc version 9.3.0.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6856:66,access,accessed,66,https://root.cern,https://github.com/root-project/root/issues/6856,1,['access'],['accessed']
Security,"Exception: ""checksum mismatch in RNTuple anchor"" when doing TFile::Get() on RNTuple object",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/16134:12,checksum,checksum,12,https://root.cern,https://github.com/root-project/root/issues/16134,1,['checksum'],['checksum']
Security,Exclude a couple of helper scripts that call sanitized executables. Fixes #10017,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10097:45,sanitiz,sanitized,45,https://root.cern,https://github.com/root-project/root/pull/10097,1,['sanitiz'],['sanitized']
Security,"Expanding cross validation capabilities of TMVA; - Changes default split from using bootstapping to using k-folds with a user-defined splitting criterion.; - Generate ROOT files that can be analysed with TMVA Gui, both per-fold output and aggregate is supported.; - Cross validation in application. Using the user-defined split function, a set of methods generated with CV can be used in the application phase with new data. This is sometimes referred to as cross evaluation.; - Add tutorial for cross evaluation",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1514:16,validat,validation,16,https://root.cern,https://github.com/root-project/root/pull/1514,2,['validat'],['validation']
Security,Expose Cppyy's memory policy symbols in the ROOT facade to collaborate with:; https://github.com/root-project/roottest/pull/357,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4109:0,Expose,Expose,0,https://root.cern,https://github.com/root-project/root/pull/4109,1,['Expose'],['Expose']
Security,Extend GenerateInfoForPair integrity check,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6893:27,integrity,integrity,27,https://root.cern,https://github.com/root-project/root/pull/6893,1,['integrity'],['integrity']
Security,"Extend the RooDataHist tests to also validate the schema evolution; from version 5 and version 6. Version 6 is the current version, so the `dataHistv6_ref.root` reference; file was produced with ROOT master. Version 5 was used in ROOT 6.24,; which was used to produce the `dataHistv5_ref.root` reference file. The version 6 reference file is a little bit smaller than the version 5 file, as the `_realVars` member was removed with version 6. A nice aspect of the version 6 update is also that it's backwards compatible. The `initialize()` function is called in the [custom streamer](https://github.com/root-project/root/blob/v6-24-00-patches/roofit/roofitcore/src/RooDataHist.cxx#L1995) of RooDataHist, so if the `_realVars` member is missing in the ROOT file it will still be initialized. This fixes issue https://github.com/root-project/root/issues/8037.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8090:37,validat,validate,37,https://root.cern,https://github.com/root-project/root/pull/8090,1,['validat'],['validate']
Security,"Extending FindLZ4 with a xxhash needed for LZ4 checksum func. and adding ""pure"" xxhash API in case standalone lz4",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/935:47,checksum,checksum,47,https://root.cern,https://github.com/root-project/root/pull/935,1,['checksum'],['checksum']
Security,Extending FindLZ4.cmake with xxhash includes/library needed for LZ4 checksum functionality,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1059:68,checksum,checksum,68,https://root.cern,https://github.com/root-project/root/pull/1059,1,['checksum'],['checksum']
Security,"F. > There is also a; > ; > ```; > Warning in <TStreamerInfo::BuildCheck>: ; > The StreamerInfo of class RooExponential read from file ./exponentialPdf.root; > has the same version (=1) as the active class but a different checksum.; > You should update the version to ClassDef(RooExponential,2).; > Do not try to write objects with the current class definition,; > the files will not be readable.; > ```; > ; > not sure if related. That's fixed in the monster-PR. Good spot!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5530#issuecomment-623555937:222,checksum,checksum,222,https://root.cern,https://github.com/root-project/root/pull/5530#issuecomment-623555937,1,['checksum'],['checksum']
Security,FCA.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/ef7d3e44.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/84c78b97.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/ef7d3e44.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/530f7122.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/9c979c2b.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/UKeScienceCA-2B.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/9c979c2b.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/62c4a178.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/a603ba9c.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/8dd53007.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/943fd5f3.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/DigiCertGridCA-1G2-Classic-2015.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/DigitalTrustSecureCAG4-runbytheissuer.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/DigiCertGridCA-1G2-Classic-2015.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/DigitalTrustSecureCAG4-runbytheissuer.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/DigiCertGridCA-1G2-Classic-2015.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/d41ec82f.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/b85d64aa.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/598b583e.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/DigiCertGridCA-1G2-C,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8092#issuecomment-840048181:14685,secur,security,14685,https://root.cern,https://github.com/root-project/root/issues/8092#issuecomment-840048181,2,"['certificate', 'secur']","['certificates', 'security']"
Security,Failure to build master branch due to xrootd SHA256 checksum mismatch,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10503:52,checksum,checksum,52,https://root.cern,https://github.com/root-project/root/issues/10503,1,['checksum'],['checksum']
Security,Failures are not related to my changes (authentication failures for xrootd).,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5843#issuecomment-642778629:40,authenticat,authentication,40,https://root.cern,https://github.com/root-project/root/pull/5843#issuecomment-642778629,1,['authenticat'],['authentication']
Security,"Fair enough, Phillippe :) The description does say ""Normally you would use TClass::GetClass(""class"") to get access to a TClass object for a certain class."" In my defense, I didn't write it; it's inherited code. That said, the description doesn't say that it may fail, so I think if the behavior above can't be fixed, the warning language should be made stronger.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8250#issuecomment-857689536:108,access,access,108,https://root.cern,https://github.com/root-project/root/issues/8250#issuecomment-857689536,1,['access'],['access']
Security,Filter doesn't display command line option `-js` and `-nodraw` in the description anymore. Tutorials now use `gROOT->GetTutorialsDir()` to access tutorial files. converttonotebooks now displays an error message that is picked up by jenkins when nbconvert fails.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/209:139,access,access,139,https://root.cern,https://github.com/root-project/root/pull/209,1,['access'],['access']
Security,"Finally the changes in this PR are tested. The `macOS 13` node had XGBoost installed:; ```; Test #1399: tutorial-tmva-tmva101_Training-py ............................ Passed 22.84 sec; Test #1400: tutorial-tmva-tmva102_Testing-py ............................. Passed 4.02 sec; Test #1083: tutorial-tmva-tmva103_Application ............................ Passed 9.33 sec; Test #390: pyunittests-rbdt-xgboost ..................................... Passed 4.93 sec; ```; The `pyunittests-rbdt-xgboost` that had to be disabled before is passing as well. The tutorials were passing before this PR already, because the BDT scores were only plotted and printed, not validated.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15173#issuecomment-2046284808:656,validat,validated,656,https://root.cern,https://github.com/root-project/root/pull/15173#issuecomment-2046284808,1,['validat'],['validated']
Security,First CPU implementation of HashedNets compression algorithm for DNNs,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/220:28,Hash,HashedNets,28,https://root.cern,https://github.com/root-project/root/pull/220,1,['Hash'],['HashedNets']
Security,"First reported on the forum at https://root-forum.cern.ch/t/problem-with-type-conversion-for-lorentz-vector/53639 . Minimal reproducer:. ```cpp; #include <Math/Vector4D.h>; #include <ROOT/RDataFrame.hxx>. float TakeMVector(ROOT::Math::PtEtaPhiMVector &) { return 4.2; }. int main() {; ROOT::RDataFrame df(""Tree"", ""example_file.root"");. df.Define(""unused"", ""L""); // the failure disappears if this is commented out, even if ""unused"" is never used. auto dff4 = df.Define(""x"", TakeMVector, {""L""});; dff4.Max<float>(""x"").GetValue();; }; ```. with the input file at https://root-forum.cern.ch/t/problem-with-type-conversion-for-lorentz-vector/53639/3?u=eguiraud . The program errors out with:. ```; The branch L contains data of type ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<Double32_t> >. It cannot be accessed by a TTreeReaderValue<ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<double> >>; ```. (so TTreeReaderValue cannot read a `LorentzVector<PtEtaPhiM4D<Double32_t>>` as a `LorentzVector<PtEtaPhiM4D<double>>`). The following patch by @Axel-Naumann seems to fix the problem:. ```diff; diff --git a/tree/treeplayer/src/TTreeReaderValue.cxx b/tree/treeplayer/src/TTreeReaderValue.cxx; index 2323cffee4..6d938f1b14 100644; --- a/tree/treeplayer/src/TTreeReaderValue.cxx; +++ b/tree/treeplayer/src/TTreeReaderValue.cxx; @@ -554,7 +554,8 @@ void ROOT::Internal::TTreeReaderValueBase::CreateProxy() {; auto branchActualTypeAsClass = dynamic_cast<TClass*>(branchActualType);; auto inheritance = dictAsClass && branchActualTypeAsClass && branchActualTypeAsClass->InheritsFrom(dictAsClass);. - if (fDict != branchActualType && !inheritance) {; + if (fDict != branchActualType && !inheritance; + && dictAsClass->GetTypeInfo() != branchActualTypeAsClass->GetTypeInfo()) {; TDataType *dictdt = dynamic_cast<TDataType*>(fDict);; TDataType *actualdt = dynamic_cast<TDataType*>(branchActualType);; bool complainAboutMismatch = true;; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12334:806,access,accessed,806,https://root.cern,https://github.com/root-project/root/issues/12334,1,['access'],['accessed']
Security,"Fix #12783. Since ""66dfb08bd7 - [IO] Do not process the streamerinfo record of a file if we read the si already read""; which was extended in scope by ""7cf9d5dc8c - fix hashing of streamer info,"". if a file is opened in update mode and the reading of its `StreamerInfo` record is skip (but; an identical record was already read) *and* some data is stored in the file, the new; `StreamerInfo` record written was missing all the classes in the original record that; were not used during the update. To resolve this we record not only the fact that the record has been read and process; but also its content (via a collectin of uid of the `TStreamerInfo` objects).; Upon skipping the `StreamerInfo` record, we now mark of its `TStreamerInfo` objects has; been used by the file (and thus upon writing the record is complete). This behavior was seen #12783 due an awkward 'create, fill, close, update immediately' cycle; for a couple of files.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12846:168,hash,hashing,168,https://root.cern,https://github.com/root-project/root/pull/12846,2,['hash'],['hashing']
Security,"Fix #12783. Since ""66dfb08bd7 - [IO] Do not process the streamerinfo record of a file if we read the si already read""; which was extended in scope by ""7cf9d5dc8c - fix hashing of streamer info,"". if a file is opened in update mode and the reading of its `StreamerInfo` record is skip (but; an identical record was already read) *and* some data is stored in the file, the new; `StreamerInfo` record written was missing all the classes in the original record that; were not used during the update. To resolve this we record not only the fact that the record has been read and process; but also its content (via a collectin of uid of the `TStreamerInfo` objects).; Upon skipping the `StreamerInfo` record, we now mark of its `TStreamerInfo` objects has; been used by the file (and thus upon writing the record is complete). This behavior was seen #12783 due an awkward 'create, fill, close, update immediately' cycle; for a couple of files.# This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes # . Fix #12783. Since ""66dfb08bd7 - [IO] Do not process the streamerinfo record of a file if we read the si already read""; which was extended in scope by ""7cf9d5dc8c - fix hashing of streamer info,"". if a file is opened in update mode and the reading of its `StreamerInfo` record is skip (but; an identical record was already read) *and* some data is stored in the file, the new; `StreamerInfo` record written was missing all the classes in the original record that; were not used during the update. To resolve this we record not only the fact that the record has been read and process; but also its content (via a collectin of uid of the `TStreamerInfo` objects).; Upon skipping the `StreamerInfo` record, we now mark of its `TStreamerInfo` objects has; been used by the file (and thus upon writing the record is complete). This behavior was seen #12783 due an awkward 'create, fill, close, update immediately' cycle; for",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13842:168,hash,hashing,168,https://root.cern,https://github.com/root-project/root/pull/13842,1,['hash'],['hashing']
Security,"Fix ROOT-9694, GetStreamerInfoList infinite recursion. Commit b6523df introduces the infinite recursion whenever; there was a problem reading the StreamerInfo record and; introduces a useless attempt to read from file in the case; of a class derived from TFile that overrid GetStreamerInfoList. To allow for increase run-time performance and increase thread; scalability the override ability of TFile::GetStreamerInfoList; is replaced by an override of TFile::GetStreamerInfoListImp with; updated return type and arguments. If a class override; TFile::GetStreamerInfoList you will now see a compilation error like:; {code}; /opt/build/root_builds/rootcling.cmake/include/TSQLFile.h:225:19: error: declaration of 'GetStreamerInfoList' overrides a 'final' function; virtual TList *GetStreamerInfoList();; ^; /opt/build/root_builds/rootcling.cmake/include/TFile.h:231:24: note: overridden virtual function is here; virtual TList *GetStreamerInfoList() final; // Note: to override behavior, please override GetStreamerInfoListImpl; ^; {code}. Instead you need to override the protected method:. {code}; InfoListRet GetStreamerInfoListImpl(bool lookupSICache);; {code}. which can be implemented as; {code}; InfoListRet DerivedClass::GetStreamerInfoListImpl(bool /*lookupSICache*/) {; ROOT::Internal::RConcurrentHashColl::HashValue hash;; TList *infolist = nullptr;; //; // Body of the former Derived::GetStreamerInfoList with the; // return statement replaced with something like:. // The second element indicates success or failure of the load.; // (i.e. {nullptr, 0, hash} indicates the list has already been processed; // {nullptr, 1, hash} indicates the list failed to be loaded; return {infolist, 0, hash};; }; {code}. See TFile::GetStreamerInfoListImpl implementation for an example on how to implement the caching.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2725:1316,Hash,HashValue,1316,https://root.cern,https://github.com/root-project/root/pull/2725,5,"['Hash', 'hash']","['HashValue', 'hash']"
Security,"Fix a debug assertion failure `can't dereference value-initialized vector iterator` ; With and empty vector, `vector::begin() == vector::end()` and one cannot dereference end(), [as explained in the standard](https://en.cppreference.com/w/cpp/container/vector/end):; > end() returns an iterator to the element following the last element of the vector. This element acts as a placeholder; attempting to access it results in undefined behavior.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13322:402,access,access,402,https://root.cern,https://github.com/root-project/root/pull/13322,1,['access'],['access']
Security,"Fix a few minor things and pave the way to integrate cutflow reports in TDataFrame. * TDFAction ctor can take a shared_ptr instead of a weak_ptr: TDFAction; can safely assume that the previous node in the chain still exists when it is; being constructed; * fPrevData is now a reference instead of a raw pointer in all classes:; a reference better indicates that we always expect fPrevData to be a valid; node of the chain. In fact, the only case when this condition might not be; met is when the TDataFrameImpl object goes out-of-scope before other nodes; of the chain; we detect this case and throw before trying to access; invalid fPrevData pointers/references.; * use `Long64_t` instead of `int` for all entry variables",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/333:617,access,access,617,https://root.cern,https://github.com/root-project/root/pull/333,1,['access'],['access']
Security,Fix access violation with df017_vecOpsHEP.C on Windows,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10443:4,access,access,4,https://root.cern,https://github.com/root-project/root/pull/10443,1,['access'],['access']
Security,Fix an access violation error when using `fscanf` on Windows 64 bit:; ```; 243: Processing C:/Users/sftnight/git/master/test/stressGraphics.cxx...; 243: **********************************************************************; 243: * Starting Graphics - S T R E S S suite *; 243: **********************************************************************; 243: * Starting Basic Graphics - S T R E S S *; 243: **********************************************************************; 243: CMake Error at C:/Users/sftnight/build/release/RootTestDriver.cmake:227 (message):; 243: error code: Access violation; 243:; 243:; 1/1 Test #243: test-stressgraphics-interpreted ...***Failed 4.33 sec; ```,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9959:7,access,access,7,https://root.cern,https://github.com/root-project/root/pull/9959,2,"['Access', 'access']","['Access', 'access']"
Security,Fix in TEntryList - check fCurrent memeber before access,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5234:50,access,access,50,https://root.cern,https://github.com/root-project/root/pull/5234,1,['access'],['access']
Security,Fix invalid memory access in TRandom3,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14135:19,access,access,19,https://root.cern,https://github.com/root-project/root/pull/14135,1,['access'],['access']
Security,"Fix the following kind of error when building tests (and using rootcling) in parallel on Windows:; ```; C:\Program Files\Microsoft Visual Studio\2022\Community\MSBuild\Microsoft\VC\v170\Microsoft.CppCommon.targets(205,5): error MSB4018: The ""GetOutOfDateItems"" task failed unexpectedly. [C:\Users\sftnight\build\release\interpreter\llvm\src\lib\Target\X86\X86CommonTableGen.vcxproj]; C:\Program Files\Microsoft Visual Studio\2022\Community\MSBuild\Microsoft\VC\v170\Microsoft.CppCommon.targets(205,5): error MSB4018: System.IO.IOException: The process cannot access the file 'C:\Users\sftnight\build\release\interpreter\llvm\src\lib\Target\X86\x64\Release\X86CommonTableGen\X86Commo.12E1F1A7.tlog\CustomBuild.command.1.tlog' because it is being used by another process. [C:\Users\sftnight\build\release\interpreter\llvm\src\lib\Target\X86\X86CommonTableGen.vcxproj]; C:\Program Files\Microsoft Visual Studio\2022\Community\MSBuild\Microsoft\VC\v170\Microsoft.CppCommon.targets(205,5): error MSB4018: at System.IO.__Error.WinIOError(Int32 errorCode, String maybeFullPath) [C:\Users\sftnight\build\release\interpreter\llvm\src\lib\Target\X86\X86CommonTableGen.vcxproj]; C:\Program Files\Microsoft Visual Studio\2022\Community\MSBuild\Microsoft\VC\v170\Microsoft.CppCommon.targets(205,5): error MSB4018: at System.IO.FileStream.Init(String path, FileMode mode, FileAccess access, Int32 rights, Boolean useRights, FileShare share, Int32 bufferSize, FileOptions options, SECURITY_ATTRIBUTES secAttrs, String msgPath, Boolean bFromProxy, Boolean useLongPath, Boolean checkHost) [C:\Users\sftnight\build\release\interpreter\llvm\src\lib\Target\X86\X86CommonTableGen.vcxproj]; C:\Program Files\Microsoft Visual Studio\2022\Community\MSBuild\Microsoft\VC\v170\Microsoft.CppCommon.targets(205,5): error MSB4018: at System.IO.FileStream..ctor(String path, FileMode mode, FileAccess access, FileShare share, Int32 bufferSize, FileOptions options, String msgPath, Boolean bFromProxy, Boolean useLongPath, Boolean c",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10247:559,access,access,559,https://root.cern,https://github.com/root-project/root/pull/10247,1,['access'],['access']
Security,Fix to PR7165 Remove inline access to static member of TGeoManager,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7191:28,access,access,28,https://root.cern,https://github.com/root-project/root/pull/7191,2,['access'],['access']
Security,Fix to avoid redefinition of injected value of macro in test stressTMVA. Visible for C++ module build for Clang 8.0.0:. In file included from <module-includes>:26: ../build/include/TMVA/MethodDNN.h:56:9: warning: 'DNNCPU' macro redefined [-Wmacro-redefined]. #define DNNCPU. While building module 'TMVA' imported from /.../root/test/stressTMVA.cxx:70: In file included from <built-in>:379:; #define DNNCPU 1,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2598:29,inject,injected,29,https://root.cern,https://github.com/root-project/root/pull/2598,1,['inject'],['injected']
Security,Fix to avoid redefinition of injected value of macro in test stressTMVA. Visible for C++ module build for Clang 8.0.0:; ```; In file included from <module-includes>:26: ../build/include/TMVA/MethodDNN.h:56:9: warning: 'DNNCPU' macro redefined [-Wmacro-redefined]. #define DNNCPU. While building module 'TMVA' imported from /.../root/test/stressTMVA.cxx:70: In file included from <built-in>:379:; #define DNNCPU 1; ```,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2582:29,inject,injected,29,https://root.cern,https://github.com/root-project/root/pull/2582,1,['inject'],['injected']
Security,Fix typo in the tmva cross validation evaluation code,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/255:27,validat,validation,27,https://root.cern,https://github.com/root-project/root/pull/255,2,['validat'],['validation']
Security,Fix warning in asimage about redefinition of TObject::Hash(),MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12796:54,Hash,Hash,54,https://root.cern,https://github.com/root-project/root/pull/12796,1,['Hash'],['Hash']
Security,Fix xrootd 5.3.1 sha256 hash for builtins,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9103:24,hash,hash,24,https://root.cern,https://github.com/root-project/root/pull/9103,1,['hash'],['hash']
Security,"Fixed bug in filter, changed how tutorials access files",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/209:43,access,access,43,https://root.cern,https://github.com/root-project/root/pull/209,1,['access'],['access']
Security,Fixes following reproducer in https://sft.its.cern.ch/jira/browse/ROOT-10830 :; ```python; >>> v = cppyy.gbl.std.vector[cppyy.gbl.std.string](); >>> v.push_back('a'); >>> v.push_back('b'); >>> v.push_back('c'); >>> set(v) == set('abc'); True; ```. Hash std::string and str of the same char sequence to the same value. From:; https://bitbucket.org/wlav/cpycppyy/commits/66ad2fca300b4343ce17144b448725fd9e260e21,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7071:248,Hash,Hash,248,https://root.cern,https://github.com/root-project/root/pull/7071,1,['Hash'],['Hash']
Security,"Fixes issue #8284 where TKeys with the same name as the requested RNTuple; would be attempted to be parsed as an RNTuple, leading to internal; parser assert failures later on. e.g.; ```cpp; // actually holds a TTree named ""Events""; auto reader = RNTupleReader::Open(""Events"", ""test80X_NANO.root"");; ```. Internal error before: ; ```; Fatal: nread == nbytes violated at line 1011 of `~/root/tree/ntuple/v7/src/RMiniFile.cxx'; aborting; ```. Exception thrown after: ; ```; C++ exception with description ""no RNTuple named 'Events' in file 'test80X_NANO.root' (unchecked RResult access!); ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8285:576,access,access,576,https://root.cern,https://github.com/root-project/root/pull/8285,1,['access'],['access']
Security,Fixing includes for classic build LZ4 after adding new checksum feature,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/927:55,checksum,checksum,55,https://root.cern,https://github.com/root-project/root/pull/927,1,['checksum'],['checksum']
Security,"For custom classes with dictionaries, store the streamer checksum in the field metadata. The checksum is used to apply read rules that use checksums to identify the source class.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16060:57,checksum,checksum,57,https://root.cern,https://github.com/root-project/root/pull/16060,3,['checksum'],"['checksum', 'checksums']"
Security,"For our reference:; The original reproducer with ROOT 6.20/06 indeed prints bogus values, which highlights two issues:; 1. No error was raised because of mismatched types between the `x,y` arrays and their errors; 2. Accessing out-of-bound elements of the data members of the `TGraphAsymmErrors` object was allowed, e.g. `reproducer.GetErrorXlow(1)`; ```; [vpadulan@lxplus706 ~]$source /cvmfs/sft.cern.ch/lcg/views/LCG_97apython3/x86_64-centos7-gcc9-opt/setup.sh; [vpadulan@lxplus706 ~]$root --version; ROOT Version: 6.20/06; [vpadulan@lxplus706 ~]$cat github-7393-reproducer.py; import numpy as np; import ROOT; n = 1; x = np.array([1]); y = np.array([2]); xerr_hi, xerr_lo = np.array([0.1]), np.array([0.1]); yerr_hi, yerr_lo = np.array([0.2]), np.array([0.2]); reproducer = ROOT.TGraphAsymmErrors(n, x, y, xerr_lo, xerr_hi, yerr_lo, yerr_hi); print(reproducer.GetErrorXlow(1), reproducer.GetErrorXhigh(1), reproducer.GetErrorYlow(1), reproducer.GetErrorYhigh(1)); [vpadulan@lxplus706 ~]$python github-7393-reproducer.py ; 6.465722853820043e+170 0.0 0.0 8.005628501318925e+261; ```. Whereas printing the index `0` elements of the data member arrays reported the correct values for them (although issue number 1 above is still present); ```; [vpadulan@lxplus706 ~]$cat github-7393-reproducer.py; import numpy as np; import ROOT; n = 1; x = np.array([1]); y = np.array([2]); xerr_hi, xerr_lo = np.array([0.1]), np.array([0.1]); yerr_hi, yerr_lo = np.array([0.2]), np.array([0.2]); reproducer = ROOT.TGraphAsymmErrors(n, x, y, xerr_lo, xerr_hi, yerr_lo, yerr_hi); print(reproducer.GetErrorXlow(0), reproducer.GetErrorXhigh(0), reproducer.GetErrorYlow(0), reproducer.GetErrorYhigh(0)); [vpadulan@lxplus706 ~]$python github-7393-reproducer.py ; 0.1 0.1 0.2 0.2; ```. 6.22/00 already shows the correct error raised as @AlkaidCheng confirmed above, although the out-of-bound access is still permitted if one insists a bit; ```; [vpadulan@lxplus706 ~]$source /cvmfs/sft.cern.ch/lcg/views/LCG_98python3/x86_6",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7393#issuecomment-822586476:217,Access,Accessing,217,https://root.cern,https://github.com/root-project/root/issues/7393#issuecomment-822586476,1,['Access'],['Accessing']
Security,"For our users, it's important to fix certain parameters in the likelihood easily with any overhead. So far, this didn't work when using gradients from AD, because the gradients were only produced for the parameters that are floating at the time where the likelihood is created. However, it has no additional runtime overhead in backwards AD mode to simply generate the gradient for **all** parameters, and then filter out the right elements in the the RooMinimizer-related code. This is what is implemented in the second commit of this PR. Some changes in the RooAbsMinimizerFcn were necessary to do this filtering: so far it didn't store any information on all the parameters in order. It only stored two separate lists for floating and constant parameters. The first commit in this PR adds the necessary data members (`_allParams` and `_allParamsInit`) to the RooAbsMinimizerFcn for the filtering of parameters. Furthermore, the previous datamembers that stored the parameters separately are removed to avoid duplication and possible desync of information. On this occasion, the parameter management was completely rewritten to be more concise and robust. This will also help later when we integrate the discrete profiling from CMS combine, where changing the state and filtering of minimization parameters is also relevant. It was validated with the ATLAS and CMS likelihoods from ICHEP 2024 that this PR results in no performance regression, even though we are now generating the gradient for more parameters (roughly up to two times more, because for every floating nuisance parameter there is usually one constant global observable that constrains it).",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16750:1334,validat,validated,1334,https://root.cern,https://github.com/root-project/root/pull/16750,1,['validat'],['validated']
Security,"For reference: v6.24.02 fresh from lxplus:; ```; root [0] TClass::GetClass(""RooRealVar"")->GetStreamerInfo()->ls(); StreamerInfo for class: RooRealVar, version=7, checksum=0xfd173f72; RooAbsRealLValue BASE offset= 0 type= 0 Abstract modifiable real-valued object; double _error offset=776 type= 8 Symmetric error associated with current value; double _asymErrLo offset=784 type= 8 Low side of asymmetric error associated with current value; double _asymErrHi offset=792 type= 8 High side of asymmetric error associated with current value; RooAbsBinning* _binning offset=800 type=64 ; i= 0, RooAbsRealLValue type= 0, offset= 0, len=1, method=0; i= 1, _error type= 28, offset=776, len=3, method=0 [optimized]; i= 2, _binning type= 64, offset=800, len=1, method=0; ```; It's the same as far as I can see. Could it be that checksums in the base are different, and that makes ROOT compare members line by line?; Shouldn't it read in this case:; ```diff; double _asymErrHi offset=792 type= 8 High side of asymmetric error associated with current value; - RooAbsBinning* _binning offset=800 type=64 ; + unique_ptr<RooAbsBinning> _binning offset=800 type=64 ; i= 0, RooAbsRealLValue type= 0, offset= 0, len=1, method=0; ```; to match the v6.24 header?; https://github.com/root-project/root/blob/7d9f6812845f5c07551a5b2d542c21ed8975e18d/roofit/roofitcore/inc/RooRealVar.h#L152-L156",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8791#issuecomment-892675236:162,checksum,checksum,162,https://root.cern,https://github.com/root-project/root/issues/8791#issuecomment-892675236,2,['checksum'],"['checksum', 'checksums']"
Security,"For security reasons this option is off by default. . Only when desired `win.SetUseCurrentDir(true)` should be invoked. ; It happens automatically when ""localapp."" namespace configured as main ui5 panel for the window. Required for `tutorials/webgui/panel` example.; Will be required for local fonts or special apps in eve7.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15867:4,secur,security,4,https://root.cern,https://github.com/root-project/root/pull/15867,1,['secur'],['security']
Security,"For the RDF use case, as long as it's not the default, it probably needs to be (at least) a global setting, since the user doesn't have access to the TFile objects managed by TTreeProcessorMT",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10318#issuecomment-1087862718:136,access,access,136,https://root.cern,https://github.com/root-project/root/pull/10318#issuecomment-1087862718,1,['access'],['access']
Security,"For the `IMultiGenFunction` crossinheritance I see that we inject the`NDim()` method into the dispatched code:. ``` unsigned int NDim() const {; PyObject* iself = (PyObject*)_internal_self;; if (!iself || iself == Py_None) {; PyErr_Warn(PyExc_RuntimeWarning, (char*)""Call attempted on deleted python-side proxy"");; return unsigned int{};; }; ```; using this code block:. https://github.com/root-project/root/blob/0aa2b6b8760b78dff2cffd873f955735fa1b0ef3/bindings/pyroot/cppyy/CPyCppyy/src/Dispatcher.cxx#L41-L51. Cling fails to compile the initialization in `return unsigned int{};` since it is not valid C++. We should also consider `unsigned int` and other multi keyword types that require a function style cast for value initialization (like `return (unsigned int){}`. If I am not wrong, this should just work for all primitives(as zero initialization) and user-defined types(as default initialization). I was able to get this example from the manual to work with this fix. Based on the issue, I was of the opinion we should land this upstream but I see that this is a high priority issue and @wlav is on vacation. . What do you think @guitargeek @dpiparo",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/15315#issuecomment-2275171210:59,inject,inject,59,https://root.cern,https://github.com/root-project/root/issues/15315#issuecomment-2275171210,1,['inject'],['inject']
Security,"For the context, I belong to the team that develops the TRIPOLI-4 Monte-Carlo particle transport code, which uses ROOT as (among other things) a geometry engine. We are not in a terrible hurry (hopefully in a month or two though?), but we would greatly appreciate a new patch release on top of the v6.12 branch. That would largely cut on the amount of validation work that we need to do for our next release. Thanks!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3310#issuecomment-462393996:352,validat,validation,352,https://root.cern,https://github.com/root-project/root/pull/3310#issuecomment-462393996,1,['validat'],['validation']
Security,"For the new RooFit BatchMode, the model pdf had to be ""compiled"" for a; fixed normalization set before being evaluated by the RooFit driver. This step was implemented in a rather hacky way, because it only became; clear gradually how important this step is, as many changes need to be; done to the computation graph before it can be used by the BatchMode. It started by ""unrolling"" the normalization integrals such that they are; separate nodes that can be evaluated by the RooFit driver. Then, it also covered the transformation of every RooProdPdf into a new; object that exposes the full intenal computation graph that is cached by; the RooProdPdf for a given norm set. These two changes where done in separate passes through the compute; graph, and there was also a third pass to figure out dependencies and; normalization sets in the graph, and some more recursive passes the; attach new servers. This all became very compilcated and hard to debug, as the separate; passes through the graph interfered with each other as well. With all the lessons learned, this commit suggests a new more general; way to compile a model for a given normalization set. It is now done in a **single recursive pass through the graph** via the; newly-proposed function; `RooAbsArg::compileForNormSet(RooAbsArg const& normSet, context)`. It's job is to make a clone of the RooAbsArg where the normalization set; is fixed to `normSet`, given some context. Now, the details of unrolling the integrals of a RooAbsPdf and replacing; the RooProdPdfs can be implemented in the overload for this function of; the specific class. There is even an overload for the RooSimultaneous; now, which contains all the logic of making the RooSimultaenous ready; for the NLL creation. There are still some rough edges in the new interface, but it is already; a big step forward that will make debugging much easier because it's now; much less compilcated to understand how the computation graph is set up; by the BatchMode. Also, this m",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12079:574,expose,exposes,574,https://root.cern,https://github.com/root-project/root/pull/12079,1,['expose'],['exposes']
Security,"For the record the following issue is still left:; ```; Issues with 'interpreted' + load-file-first mode. Loading the file creates a TClass for the map. Additional code (eg accessing; the CollectionProxy) might also create a TClass for the pair. When the header file is loaded in the interpreter, unless there is explicit; uses of the map (or pair), there is no decl for the instantiation of thus; the TClass for the map and pair are not refreshed. When the pair or map are instantiated (eg. `gInterpreter->Declare(""pair<...> pl"")`),; the TClass for the pair is informed (via `TCling::UpdateClassInfoWithDecl`; and `TCling::RefreshClassInfo`). We could update `RefreshClassInfo` to refresh the `StreamerInfo` for the pair; but it would also need to also refresh the map's CollectionProxy (size,; hints, etc?) [and there is an arbitrary number because they are thread-local]. So at that point, it might actually be better to recreate the TClass for the; map ... But wait ... there is currently no support for generating a collection proxy for; an interpreted class ... so it is actually an emulated collection proxy ... That proxy does not match the interpreted (nor the compiled) version of the; map ... so there is no good point to match the pair either .... So the solution above are (a tad bit) complex and .... not enough ...; ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10230#issuecomment-1078435016:173,access,accessing,173,https://root.cern,https://github.com/root-project/root/pull/10230#issuecomment-1078435016,1,['access'],['accessing']
Security,"For the record, after discussing, experiments' `LD_LIBRARY_PATH`s will expose about 200M non-weak symbols. I agree that autoloading random libs because of `pair<int,int>` isn't an issue as you only note non-weak symbols from libraries. Sorry for not realizing this before!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2093#issuecomment-393471396:71,expose,expose,71,https://root.cern,https://github.com/root-project/root/pull/2093#issuecomment-393471396,1,['expose'],['expose']
Security,"Forget it: 🦔 [Edit: ouch, not hedgehog but groundhog! You know, groundhog day. Whatever. 😅 ]. * https://savannah.web.cern.ch/HEP_Applications/savroot/bugs/63873.html; * https://savannah.web.cern.ch/HEP_Applications/savroot/bugs/85436.html; * Email conversation between Philippe, Olivier, Enrico (!), me, and rootdev, titled ""TTree::Draw default histogram"", in 2017, where we concluded ""why not""; * We have c9e40d125fc3b27db05ced052856b38a814231d1; * I then changed the default to `TH1D`: 0ad637e2105e0ef248029f6377e5e73323333e00; * The main issue was user code that static-casts `htemp` to `TH1F` : if they then access the `TArrayF` (that's actually a `TArrayD`) then that's very bad. We even had such user code in ROOT: a9570d37277a13f7871ee64e0f522725fc250e1e; * So in d001610754d0d620faac7400027086ea73063b74 I turned the default back to `TH1F`. Hey, what about https://github.com/root-project/root/issues/6671#issuecomment-791443564 ?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6671#issuecomment-791675909:612,access,access,612,https://root.cern,https://github.com/root-project/root/issues/6671#issuecomment-791675909,1,['access'],['access']
Security,"FpbGZsb3d8eyJWIjoiMC4wLjAwMDAiLCJQIjoiV2luMzIiLCJBTiI6Ik1haWwiLCJXVCI6Mn0%3D%7C1000&sdata=PNABpB6eQBLHoIjd3QUDm%2FMdUbyGTv6O%2BkpuRdme%2B3k%3D&reserved=0>,O=Grid,C=CA; >>>> * start date: Apr 08 16:29:03 2021 GMT; >>>> * expire date: May 08 16:29:03 2022 GMT; >>>> * common name: dpool46.lcg.triumf.ca <http://dpool46.lcg.triumf.ca/>; >>>> * issuer: CN=Grid Canada Certificate Authority,O=Grid,C=CA; >>>> * NSS error -8179 (SEC_ERROR_UNKNOWN_ISSUER); >>>> * Peer's Certificate issuer is not recognized.; >>>> * Closing connection 0; >>>> curl: (60) Peer's Certificate issuer is not recognized.; >>>> More details here: http://curl.haxx.se/docs/sslcerts.html ; >>>> <https://can01.safelinks.protection.outlook.com/?url=http%3A%2F%2Fcurl.haxx.se%2Fdocs%2Fsslcerts.html&data=04%7C01%7Cdqing%40triumf.ca%7Cb7cde810efc1452a4eab08d9156d8727%7Cc20535109cb34679a2d38f442e03b587%7C1%7C0%7C637564382428518448%7CUnknown%7CTWFpbGZsb3d8eyJWIjoiMC4wLjAwMDAiLCJQIjoiV2luMzIiLCJBTiI6Ik1haWwiLCJXVCI6Mn0%3D%7C1000&sdata=uIrfnt21mOTnhAWQN7zxmDDm9NhvlwTvp4wDcEZqcgE%3D&reserved=0>; >>>>; >>>> curl performs SSL certificate verification by default, using a ""bundle""; >>>>  of Certificate Authority (CA) public keys (CA certs). If the default; >>>>  bundle file isn't adequate, you can specify an alternate file; >>>>  using the --cacert option.; >>>> If this HTTPS server uses a certificate signed by a CA represented in; >>>>  the bundle, the certificate verification probably failed due to a; >>>>  problem with the certificate (it might be expired, or the name might; >>>>  not match the domain name in the URL).; >>>> If you'd like to turn off curl's verification of the certificate, use; >>>>  the -k (or --insecure) option.; >>>> ***@***.*** t5]$; >>>; >>>; >>> I am unfamiliar with how to use curl with X509 and everything I ; >>> tried so far has not worked. eg; >>> *curl*-v ; >>> https://webdav.lcg.triumf.ca:2880/atlas/atlaslocalgroupdisk/rucio/user/desilva/a1/a8/myFile.1.root ; >>> <https://can01.safelinks.pr",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8092#issuecomment-839989913:5030,certificate,certificate,5030,https://root.cern,https://github.com/root-project/root/issues/8092#issuecomment-839989913,2,"['Certificate', 'certificate']","['Certificate', 'certificate']"
Security,"From @henryiii :. > ROOT can't pass homebrew's audit any more because it is now injecting `-flat_namespace`. Flat namespaces have been deprecated since the move to Intel. I believe this was done due to `-undefined dynamic_lookup` producing a warning - Apple plans to add something to replace this in the future, but it's not the old `-flat_namespace`. See [Homebrew/homebrew-core#114543 (comment)](https://github.com/Homebrew/homebrew-core/pull/114543#issuecomment-1330719444); > Flat namespace makes major changes to the layout, is more deprecated than dynamic_lookup, and isn't supposed to even work in conda-forge. See also https://github.com/pybind/pybind11/pull/4301 .; > `-undefined dynamic_lookup` does silence the linker on missing symbols, that's what it's for. The problem is that the method it uses is deprecated, producing a warning (and already broken in iOS) `-flat_namespace` doesn't just silence the linker, it changes the binary layout for every symbol. You could always just silence the warning `-Wl,-w` or `-Wl,-no_fixup_chains`; this will eventually break, but is less deprecated than `-flat_namespace`.; > Apple's official statement is basically ""live with the warning for now, we'll find a way to not break all CPython extensions eventually"" from what I gather.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11937:47,audit,audit,47,https://root.cern,https://github.com/root-project/root/issues/11937,2,"['audit', 'inject']","['audit', 'injecting']"
Security,From Axel: Short-circuit for TObject-derived classes: they have Streamer() and Hash().,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1837:79,Hash,Hash,79,https://root.cern,https://github.com/root-project/root/pull/1837,1,['Hash'],['Hash']
Security,"From Timur:. When TGQuartz was developed, retina macs did not exist yet and Cocoa; did not provide any API to access scaling-related information.; After they have introduced this API and released retina MacBooks, our GUI; rendering was just fine and worked out of box, our 'pixmap-based' graphics; was fixed by multiplying pixmaps' geometry (by scaling factor) and also setting; the corresponding scaling CTM on the bitmap context. It appears, all these; years we did not know how expensive this scaling transformation is.; As was noticed recently, even a relatively simple poly-line consisting; of 25K segments takes _forever_ to draw - apparently Quartz is working; hard doing hell knows what under the hood (disabling anti-aliasing does not change; anything, for example). This patch is a possible fix, the proper solution would require a serious redesign; in many places (starting from TVirtualX and TCanvas) - for now we simply cancel; the scaling transformation when rendering potentially complex geometry and scale; coordinates manually instead. A macro reproducing this problem on retina display would be:. {; int n = 5000;; double xx[n];; double yy[n];; TRandom r;; for (int i=0; i<n; i++) {; xx[i] = r.Gaus(-1,0.5);; yy[i] = r.Gaus(1,1.5);; }; TGraph *g = new TGraph(n, xx,yy);; g->Draw(""al"");; }",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1177:110,access,access,110,https://root.cern,https://github.com/root-project/root/pull/1177,1,['access'],['access']
Security,"From a user point of view, the text in the ROOT manual now seems sufficiently clear:. - Behaviour for non-TTree objects [1]:. ""By default, existing objects are not replaced when writing new objects with the same name. Instead, a new namecycle is created, denoted by ;2, ;3, etc. When retrieving the object from the file, ROOT will automatically pick the highest namecycle. Some objects, such as histograms, automatically register themselves with the current TDirectory (e.g. the last TFile opened): these objects will appear as OBJ entries, without a namecycle. See also → [Object ownership](https://root.cern/manual/object_ownership). For the particular case of TTree, cycles only store metadata, see [Baskets, clusters and the tree header](https://root.cern/manual/trees/#baskets-clusters-and-the-tree-header)."". - Behaviour for TTree objects [2]:. ""Multiple updates of these headers can often be found in files (treename;1, treename;2 etc, called cycles, see → [Opening and inspecting a ROOT file](https://root.cern/manual/root_files/#opening-and-inspecting-a-root-file)). Only the last one (also accessible as treename) knows about all written baskets."". [1] https://root.cern/manual/root_files/#opening-and-inspecting-a-root-file; [2] https://root.cern/manual/trees/#baskets-clusters-and-the-tree-header",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14584#issuecomment-1943874457:1100,access,accessible,1100,https://root.cern,https://github.com/root-project/root/issues/14584#issuecomment-1943874457,2,['access'],['accessible']
Security,"From the output, it doesn't seem the build failure was caused by my changes. I do not have access to the full log, though. So, if I need to fix something it would be nice if someone with access could provide the full output...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1546#issuecomment-359783500:91,access,access,91,https://root.cern,https://github.com/root-project/root/pull/1546#issuecomment-359783500,2,['access'],['access']
Security,"Fully implement the `Offset(""bin"")` feature also for RooDataSet, both; with CPU/CUDA BatchMode and the legacy tests statistics. This is done now by introducing a new element in the computation graph:; an ""offset pdf"" that is created as a RooHistPdf from the observed data,; and it is used to get the counterterm in each bin. It was validated with the `rf614` tutorial that this binwise offsetting; is inteed fixing the convergense problems that the simple offsetting by; the initial NLL value can't fix. Closes https://github.com/root-project/root/issues/11965.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13665:332,validat,validated,332,https://root.cern,https://github.com/root-project/root/pull/13665,1,['validat'],['validated']
Security,"Functions and classes that are outdated, but will probably never be removed, can be flagged with deprecation warnings at the discretion of the user. This was a request by the experiments during the Sarajevo workshop.; The macros would be used as follows:; ```; class BetterNotUse {; } R__SUGGEST_CLASS(""NewerClass"");; ```; ```; TIterator* createIterator() const; R__SUGGEST_FUNCTION(""begin(), end() or range-based for loops.""); {; return new RooLinkedListIter(makeLegacyIterator());; }; ```; Since this uses class/function attributes, these need to be put *after* the class body and *before* the function body. Defining `R__SUGGEST_FASTER_FUNCTIONS`, the compiler will e.g. issue:; ```; root-src/roofit/roofitcore/src/RooAbsCollection.cxx:725:21: warning: 'fwdIterator' is deprecated:; This function has faster/more secure alternatives:; begin(), end() and range-based for loops. [-Wdeprecated-declarations]; RooFIter iter = fwdIterator() ;; ^; ```; With `R__SUGGEST_FASTER_CLASSES`, one gets:; ```; /home/shageboe/root-dbg/include/RooStats/RooStatsUtils.h:64:7: warning: 'RooLinkedListIter' is deprecated: This class has a faster/more secure alternative: The ROOFIter is faster. [-Wdeprecated-declarations]; RooLinkedListIter it = set->iterator();; ```; PS: Names are totally up for debate.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3100:816,secur,secure,816,https://root.cern,https://github.com/root-project/root/pull/3100,2,['secur'],['secure']
Security,"Fwd decls from rootmap files were injected to ROOT at the startup time.; However with modules we don't need any foward decls as we're preloading; all modules. Our future plan is to remove rootmap files as a whole, but we still need; to support more features (see 2380). So for now we can remove what we; are not using. *edit This patch also contains adding fHasCxxModule as a private member. This improves startup memory by 10 mbytes.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2592:34,inject,injected,34,https://root.cern,https://github.com/root-project/root/pull/2592,1,['inject'],['injected']
Security,G1.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/AC-GRID-FR-Services.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/DCAROOT-G1.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/AC-GRID-FR-Services.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/DCAROOT-G1.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/UNLPGrid.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/AC-GRID-FR-Services.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/20b7db76.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/IHEP-2013.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/NERSC-SLCS.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/NERSC-SLCS.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/DCAROOT-G1.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/NERSC-SLCS.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/IHEP-2013.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/NERSC-SLCS.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/b93d6240.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/39d30eba.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/b93d6240.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/e7734335.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/30351739.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/39d30eba.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/30351739.signing_pol,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8092#issuecomment-840048181:55267,secur,security,55267,https://root.cern,https://github.com/root-project/root/issues/8092#issuecomment-840048181,2,"['certificate', 'secur']","['certificates', 'security']"
Security,GCA2.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/RDIG.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/AC-GRID-FR-Personnels.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/156a0f0f.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/seegrid-ca-2013.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/ff94d436.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/3d5be7bc.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/55994d72.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/94b468c6.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/3d5be7bc.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/94b468c6.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/b1ac0d46.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/RDIG.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/b1ac0d46.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/RDIG.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/SlovakGrid.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/4ce1cf99.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/SiGNET-CA.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/4ce1cf99.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/7a819ef2.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/1e4f9475.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/7b54708e.namespaces' from CURLOPT_CAPATH,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8092#issuecomment-840048181:44632,secur,security,44632,https://root.cern,https://github.com/root-project/root/issues/8092#issuecomment-840048181,2,"['certificate', 'secur']","['certificates', 'security']"
Security,GRID-FR-Personnels.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/2fc6b233.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/ff94d436.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/0e635db3.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/8fa17d52.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/0e635db3.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/IGCA2.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/RDIG.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/AC-GRID-FR-Personnels.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/156a0f0f.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/seegrid-ca-2013.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/ff94d436.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/3d5be7bc.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/55994d72.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/94b468c6.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/3d5be7bc.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/94b468c6.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/b1ac0d46.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/RDIG.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/b1ac0d46.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/RDIG.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/SlovakGrid.crl_url' from ,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8092#issuecomment-840048181:44064,secur,security,44064,https://root.cern,https://github.com/root-project/root/issues/8092#issuecomment-840048181,2,"['certificate', 'secur']","['certificates', 'security']"
Security,"Garbage access warnings and more.; (ROOT master of today, with xrootd off). ```; /opt/root_src/core/base/inc/TStorage.h:119:19: warning: The left operand of '==' is a garbage value [clang-analyzer-core.UndefinedBinaryOperatorResult]; 1: Assuming field 'fList' is non-null in /opt/root_src/core/base/src/TFileCollection.cxx:870; 2: Left side of '||' is false in /opt/root_src/core/base/src/TFileCollection.cxx:870; 3: Assuming the condition is false in /opt/root_src/core/base/src/TFileCollection.cxx:870; 4: Taking false branch in /opt/root_src/core/base/src/TFileCollection.cxx:870; 5: Assuming 'exclude' is non-null in /opt/root_src/core/base/src/TFileCollection.cxx:877; 6: Left side of '&&' is true in /opt/root_src/core/base/src/TFileCollection.cxx:877; 7: Assuming the condition is true in /opt/root_src/core/base/src/TFileCollection.cxx:877; 8: Taking true branch in /opt/root_src/core/base/src/TFileCollection.cxx:877; 9: Calling default constructor for 'TUri' in /opt/root_src/core/base/src/TFileCollection.cxx:880; 10: Calling default constructor for 'TObject' in /opt/root_src/core/base/inc/TUri.h:73; 11: Calling 'TStorage::UpdateIsOnHeap' in /opt/root_src/core/base/inc/TObject.h:245; 12: Calling 'TStorage::FilledByObjectAlloc' in /opt/root_src/core/base/inc/TStorage.h:132; 13: The left operand of '==' is a garbage value in /opt/root_src/core/base/inc/TStorage.h:119; /opt/root_src/core/base/inc/TStorage.h:119:19: warning: The left operand of '==' is a garbage value [clang-analyzer-core.UndefinedBinaryOperatorResult]; 1: Calling default constructor for 'TUri' in /opt/root_src/core/base/src/TUri.cxx:1124; 2: Calling default constructor for 'TObject' in /opt/root_src/core/base/inc/TUri.h:73; 3: Calling 'TStorage::UpdateIsOnHeap' in /opt/root_src/core/base/inc/TObject.h:245; 4: Calling 'TStorage::FilledByObjectAlloc' in /opt/root_src/core/base/inc/TStorage.h:132; 5: The left operand of '==' is a garbage value in /opt/root_src/core/base/inc/TStorage.h:119; /opt/root_src/core/ba",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7412:8,access,access,8,https://root.cern,https://github.com/root-project/root/issues/7412,1,['access'],['access']
Security,GermanGrid.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/TSU-GE.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/PKIUNAMgrid.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/d0a33f8e.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/d0a33f8e.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/dd4b34ea.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/4b2783ac.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/TSU-GE.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/4b2783ac.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/dd4b34ea.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/7f4db168.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/7f4db168.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/089450c2.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/PSC-Myproxy-CA.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/QuoVadis-Root-CA3G3.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/PSC-Myproxy-CA.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/089450c2.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/PSC-Myproxy-CA.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/QuoVadis-Root-CA3G3.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/368bc755.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/PSC-Myproxy-CA.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/114,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8092#issuecomment-840048181:30007,secur,security,30007,https://root.cern,https://github.com/root-project/root/issues/8092#issuecomment-840048181,2,"['certificate', 'secur']","['certificates', 'security']"
Security,"GitHub repacks archives from time to time, which changes the hash. # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12175:61,hash,hash,61,https://root.cern,https://github.com/root-project/root/pull/12175,1,['hash'],['hash']
Security,"GitHub repacks archives from time to time, which changes the hash. (cherry picked from commit 43003424171111fb2d8ec6fd182001c57ed6901a). Backport of https://github.com/root-project/root/pull/12175",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12176:61,hash,hash,61,https://root.cern,https://github.com/root-project/root/pull/12176,1,['hash'],['hash']
Security,"Give more informative member names to avoid confusion (e.g. eveId, elementId, eve_id); Remove redundant member in object3d: eveId and mstrId, which can be accessed ad eve_el.fElementId, and eve_el.fMasterId. This PR is not a design change.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4810:155,access,accessed,155,https://root.cern,https://github.com/root-project/root/pull/4810,1,['access'],['accessed']
Security,"Given the following function declared to ROOT and accessed via a Python proxy:. ```; int foo(int x);; ```. Currently accessing its `func_doc`, which in turn calls `CPPMethod::GetPrototype`, gives:. 'int ::foo(int x)'. The extra set of '::' can be avoided by checking that the function is not declared inside a namespace. Note: this is a check, may be not worthy in the end if we find places that rely on those extra ""::"" being present",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11413:50,access,accessed,50,https://root.cern,https://github.com/root-project/root/pull/11413,2,['access'],"['accessed', 'accessing']"
Security,"Gives an example of how to create a derived dataset with the RNTuple API. As an API change, allows accessing a model's default entry while the entry is building. This is safe as values are only added to the entry and existing values remain untouched.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14604:99,access,accessing,99,https://root.cern,https://github.com/root-project/root/pull/14604,1,['access'],['accessing']
Security,Good hash,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1144:5,hash,hash,5,https://root.cern,https://github.com/root-project/root/pull/1144,1,['hash'],['hash']
Security,"Good idea. I have beefed up an existing unit test to cover the functionality, and added a commit for it. Another commit fixes a possible out-of-bounds access that I noticed on the way.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16750#issuecomment-2441151984:151,access,access,151,https://root.cern,https://github.com/root-project/root/pull/16750#issuecomment-2441151984,1,['access'],['access']
Security,"Good morning,. and thanks for the check! . When I try it on a Linux system where I have access to, the macro crashes. So it occurs not only on OSX but also on Linux. . It would be interesting to know whether the problem can be fixed by installing a later version of ROOT, and if so, if the fix is already implemented in one of the official releases. . The latest version I see on https://root.cern/install/all_releases/ is 6.24/06, so a test with 6.27/01 may or may not be relevant for the community. Best regards,; Michael. prompt> root -b; -------------------------------------------------------------------------; | Welcome to ROOT 6.06/08 http://root.cern.ch |; | (c) 1995-2016, The ROOT Team |; | Built for linuxx8664gcc |; | From ***@***.***, Sep 01 2016, 14:28:05 |; | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |; -------------------------------------------------------------------------. root [0] .x crash.cc ; 4; root [1] .x crash.cc . *** Break *** segmentation violation. ===========================================================; There was a crash.; This is the entire stack trace of all threads:; ===========================================================; #0 0x000000356faac89e in waitpid () from /lib64/libc.so.6; #1 0x000000356fa3e4e9 in do_system () from /lib64/libc.so.6; #2 0x00007fbb22a2912f in TUnixSystem::StackTrace() () from /opt/ROOTv668/lib/root/libCore.so; #3 0x00007fbb22a2b93c in TUnixSystem::DispatchSignals(ESignals) () from /opt/ROOTv668/lib/root/libCore.so; #4 <signal handler called>; #5 0x00007fbb2095648d in clang::CXXRecordDecl::getLambdaCallOperator() const () from /opt/ROOTv668/lib/root/libCling.so; #6 0x00007fbb1ff8d996 in clang::RecursiveASTVisitor<clang::(anonymous namespace)::StaticVarCollector>::TraverseLambdaExpr(clang::LambdaExpr*) () from /opt/ROOTv668/lib/root/libCling.so; #7 0x00007fbb200bdc79 in clang::RecursiveASTVisitor<clang::(anonymous namespace)::StaticVarCollector>::TraverseStmt(clang::Stmt*) () from /opt/ROOTv668/lib",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9850#issuecomment-1034711184:88,access,access,88,https://root.cern,https://github.com/root-project/root/issues/9850#issuecomment-1034711184,1,['access'],['access']
Security,Grid-CA-2016.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/HellasGrid-CA-2016.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/HellasGrid-CA-2016.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/f4cf8fb6.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/6999cae3.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/6999cae3.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/UGRID-G2.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/UGRID-G2.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/UGRID-G2.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/UGRID-G2.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/c53e160f.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/c53e160f.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/8fa17d52.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/368bc755.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/HKU-CA-2.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/c36f6349.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/HKU-CA-2.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/c36f6349.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/HKU-CA-2.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/IGCA2.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/HKU-CA-2.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/a7b21b05.namespaces' from CURLOPT_C,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8092#issuecomment-840048181:37363,secur,security,37363,https://root.cern,https://github.com/root-project/root/issues/8092#issuecomment-840048181,2,"['certificate', 'secur']","['certificates', 'security']"
Security,H; * failed to load '/etc/grid-security/certificates/67707166.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/67707166.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/QuoVadis-Grid-ICA-G2.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/DigiCertGridTrustCA-Classic.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/DigiCertGridTrustCA-Classic.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/MYIFAM.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/PKIUNAMgrid.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/DigiCertGridTrustCA-Classic.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/QuoVadis-Grid-ICA-G2.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/MYIFAM.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/KEK.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/DigiCertGridTrustCA-Classic.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/TERENAeSciencePersonalCA3.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/e91bd360.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/TERENAeSciencePersonalCA3.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/2f2f573f.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/TERENAeSciencePersonalCA3.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/KEK.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/MYIFAM.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/TERENAeSciencePersonalCA3.signing_policy' from CURLOPT_CAPATH; *,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8092#issuecomment-840048181:27129,secur,security,27129,https://root.cern,https://github.com/root-project/root/issues/8092#issuecomment-840048181,2,"['certificate', 'secur']","['certificates', 'security']"
Security,H; * failed to load '/etc/grid-security/certificates/CESNET-CA-4.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/COMODO-RSA-CA.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/UKeScienceCA-2B.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/COMODO-RSA-CA.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/CNRS2-Grid-FR.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/d4c339cb.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/d6325660.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/InCommon-IGTF-Server-CA.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/UKeScienceCA-2B.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/InCommon-IGTF-Server-CA.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/d11f973e.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/82c2b224.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/InCommon-IGTF-Server-CA.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/d11f973e.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/ba240aa8.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/f5f0dfc2.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/4339b4bc.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/3cc00941.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/68aa9d51.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/5168735f.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8092#issuecomment-840048181:11133,secur,security,11133,https://root.cern,https://github.com/root-project/root/issues/8092#issuecomment-840048181,2,"['certificate', 'secur']","['certificates', 'security']"
Security,H; * failed to load '/etc/grid-security/certificates/GEANTeScienceSSLECCCA4.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/GEANTeScienceSSLECCCA4.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/GEANTeScienceSSLECCCA4.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/DigitalTrustSecureCAG3-runbytheissuer.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/DigitalTrustSecureCAG3-runbytheissuer.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/DigitalTrustSecureCAG3-runbytheissuer.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/DigitalTrustSecureCAG3-runbytheissuer.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/18700496.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/5d9ea26d.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/e732ef10.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/DigiCertGridTrustCAG2-Classic.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/617ff41b.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/DigiCertGridTrustCAG2-Classic.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/58b08cb5.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/KEK.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/DigiCertGridTrustCAG2-Classic.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/d33760ec.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/e732ef10.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/2f2f573f.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certifi,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8092#issuecomment-840048181:22839,secur,security,22839,https://root.cern,https://github.com/root-project/root/issues/8092#issuecomment-840048181,2,"['certificate', 'secur']","['certificates', 'security']"
Security,H; * failed to load '/etc/grid-security/certificates/GEANTeScienceSSLECCCA4.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/DigitalTrustSecureCAG3-runbytheissuer.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/DigitalTrustSecureCAG3-runbytheissuer.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/DigitalTrustSecureCAG3-runbytheissuer.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/DigitalTrustSecureCAG3-runbytheissuer.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/18700496.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/5d9ea26d.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/e732ef10.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/DigiCertGridTrustCAG2-Classic.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/617ff41b.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/DigiCertGridTrustCAG2-Classic.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/58b08cb5.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/KEK.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/DigiCertGridTrustCAG2-Classic.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/d33760ec.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/e732ef10.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/2f2f573f.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/DigiCertGridTrustCAG2-Classic.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/18700496.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/cert,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8092#issuecomment-840048181:23045,secur,security,23045,https://root.cern,https://github.com/root-project/root/issues/8092#issuecomment-840048181,2,"['certificate', 'secur']","['certificates', 'security']"
Security,H; * failed to load '/etc/grid-security/certificates/LIPCA.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/LIPCA.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/LIPCA.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/e13e0fcf.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/BYGCA.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/LIPCA.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/064e0aa9.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/be87b272.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/BYGCA.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/be87b272.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/e21dc0c0.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/064e0aa9.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/036b3363.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/BYGCA.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/036b3363.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/126f0acf.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/HPCI.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/126f0acf.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/1f58a078.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/ANSPGrid.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/1f58a078.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/ANSPGrid.info' from CURLOPT_CAPATH; * fa,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8092#issuecomment-840048181:49295,secur,security,49295,https://root.cern,https://github.com/root-project/root/issues/8092#issuecomment-840048181,2,"['certificate', 'secur']","['certificates', 'security']"
Security,H; * failed to load '/etc/grid-security/certificates/QuoVadis-Root-CA3G3.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/87429ba3.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/TRGrid.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/7c27c6a1.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/HellasGrid-CA-2016.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/HellasGrid-CA-2016.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/HellasGrid-CA-2016.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/HellasGrid-CA-2016.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/f4cf8fb6.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/6999cae3.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/6999cae3.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/UGRID-G2.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/UGRID-G2.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/UGRID-G2.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/UGRID-G2.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/c53e160f.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/c53e160f.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/8fa17d52.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/368bc755.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/HKU-CA-2.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/c36f6349.namespaces' from CURLOPT_C,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8092#issuecomment-840048181:36812,secur,security,36812,https://root.cern,https://github.com/root-project/root/issues/8092#issuecomment-840048181,2,"['certificate', 'secur']","['certificates', 'security']"
Security,H; * failed to load '/etc/grid-security/certificates/ef7d3e44.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/530f7122.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/9c979c2b.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/UKeScienceCA-2B.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/9c979c2b.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/62c4a178.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/a603ba9c.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/8dd53007.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/943fd5f3.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/DigiCertGridCA-1G2-Classic-2015.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/DigitalTrustSecureCAG4-runbytheissuer.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/DigiCertGridCA-1G2-Classic-2015.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/DigitalTrustSecureCAG4-runbytheissuer.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/DigiCertGridCA-1G2-Classic-2015.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/d41ec82f.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/b85d64aa.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/598b583e.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/DigiCertGridCA-1G2-Classic-2015.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/a603ba9c.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/82c2b224.signing_policy' from C,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8092#issuecomment-840048181:14893,secur,security,14893,https://root.cern,https://github.com/root-project/root/issues/8092#issuecomment-840048181,2,"['certificate', 'secur']","['certificates', 'security']"
Security,HEF.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/MD-Grid-CA-T.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/072977ca.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/IRAN-GRID-GCG-G2.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/072977ca.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/MD-Grid-CA-T.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/58435df6.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/IRAN-GRID-GCG-G2.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/58435df6.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/IRAN-GRID-GCG-G2.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/NIIF-Root-CA-2.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/MD-Grid-CA-T.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/NIIF-Root-CA-2.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/NIIF-Root-CA-2.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/13ba0088.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/NIIF-Root-CA-2.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/16da7552.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/MD-Grid-CA-T.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/13ba0088.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/NIKHEF.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/IRAN-GRID-GCG-G2.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/cilogon-s,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8092#issuecomment-840048181:65225,secur,security,65225,https://root.cern,https://github.com/root-project/root/issues/8092#issuecomment-840048181,20,"['certificate', 'secur']","['certificates', 'security']"
Security,"HTTPS seems to be supported just fine for this domain, but there's no 301/302 redirect from HTTP, so as-is this is simply enforcing plaintext on everyone who uses CMake to build, which is... not ideal. The use of SHA256 checksums is a 👍, but doesn't nullify every benefit of using HTTPS where available.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1499:220,checksum,checksums,220,https://root.cern,https://github.com/root-project/root/pull/1499,1,['checksum'],['checksums']
Security,"Handle line and fill attribute from individual bins ; Support ""p"" and ""*"" for markers drawing; Switch off color draw optimization. Now JSROOT should be very close to ROOT graphics. Other changes in JSROOT as:; - use localStorage instead of cookies (not exposed to network); - support URL options export when using ""Show in new tab"" menu command",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15000:253,expose,exposed,253,https://root.cern,https://github.com/root-project/root/pull/15000,1,['expose'],['exposed']
Security,"Having this feature on by default seems to allow for some error case to (silently) succeed. For example:; ```; mkdir where_the_data_goes; ...; f = TFile::Open(""the_data_goes_here/filename.root""); // Unintentional misspelling.; ```; In related use case the linux utility `mkdir` offer both to create or not create the necessary intermediary directories but the default is to not create them (i.e. creation is requested explicitly with the option `-p`). In addition ROOT already provided easy access to the directory creation via [TSystem::mkdir](https://root.cern.ch/doc/master/classTSystem.html#a5bd72c8b0e57e0aed8b418adf4650475):; ```; int TSystem::mkdir(const char *name, bool recursive = false);; ```. `std::filesystem` also does via 2 distinct function (one recursive, one not): `create_directories` and `create_directory`. So in your example you could use:; ```; fs::create_directories(fs::path(F).parent_path());; TFile f(F, ""recreate""); f.Close(); ok(F);; ``` . Externally creating the dictionary might be the right thing but at any rate if we want to introduce this feature in `TFile` itself it would need to:; * become optional (i.e. add a new keyword in the option); * be implemented for all the plugins (at least by adding a failure if the creation is requested, the directory is not existing and the creation is not implemented (i.e. the server might not support directory creation). Thanks,; Philippe. PS/Side-note: ROOT Is now-adays build only with C++17 and later.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15141#issuecomment-2070677585:491,access,access,491,https://root.cern,https://github.com/root-project/root/pull/15141#issuecomment-2070677585,1,['access'],['access']
Security,"Hello @Axel-Naumann . Apologies it took me a while to find the time to do it, but this PR #8932 should take care of all cases in TDirectoryFile where the hash list functionality can accelerate upon linear search. Hopefully there are no mistakes due to my limited understanding of the code.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8046#issuecomment-908456999:154,hash,hash,154,https://root.cern,https://github.com/root-project/root/issues/8046#issuecomment-908456999,1,['hash'],['hash']
Security,"Hello @Harshalzzzzzzz ,; basically what the description says: currently, if you construct a `TFile` directly (i.e. not going through the factory function `TFile::Open`) the constructor errors out if some protocol must be used to access the file (e.g. `root://` or `http://`) -- like in the first example in the description. The reason why this does not work is not very important, the point is that `TFile(""root://..."")` fails and the right thing to do instead is `TFile::Open(""root://..."")`. So if the TFile constructor fails with that ""file ... does not exist"" error, _before_ printing that error we want to check whether the filename contains `""://""` and if it does we want to print a _different_ error message that does not say ""file ... does not exist"" but instead it points users to using ""TFile::Open"" instead (as in the issue description). You can use a debugger or grep the source code for the error message text to see where the relevant logic resides.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10039#issuecomment-1091668804:229,access,access,229,https://root.cern,https://github.com/root-project/root/issues/10039#issuecomment-1091668804,1,['access'],['access']
Security,"Hello Bertrand @bellenot; I just checked for my case, indeed ping is not successfull. That means your suggestion would work for my case. I can just imagine that one could setup a firewall in such a way that ping is allowed but a wget or a git clone would be declined. (Ping works on ICMP, wget/git clone usually on TCP). Maybe I am overcautious here, I would recommend to use ""wget"" as test instead of ""ping"". Georg",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8292#issuecomment-865665888:179,firewall,firewall,179,https://root.cern,https://github.com/root-project/root/issues/8292#issuecomment-865665888,1,['firewall'],['firewall']
Security,"Hello,. this is a rather small, but I think very useful addition.; One application of the TMacro class is to store the code that generated a ROOT file in the file itself to be later able to reproduce the analysis.; However, in parallel computing you often execute the same macro several times and at the end merge the resulting files using the TFileMerger or a tool like hadd. Up to now the TMacro class was not mergeable and therefore merging 1000 files would create 1000 cycles of TMacro objects with the exact same content, which makes it hard to browse the ROOT file in a TBrowser for example. Of course I am aware that you cannot actually merge two different macros, but since the name of a TMacro is usually the filename of the macro stored, I cannot think of any valid case in which two TMacro objects with the same name in two files that are supposed to be merged would have different contents. Furthermore, the parameter attribute of the class is described as ""default parameters to execute this macro"" in TMacro::SetParams, so they should also not differ for two instances of the same macro. My implementation of the Merge function for the TMacro class just compares the TMacro objects that are supposed to be merged and issues warnings if there there are differences. The file contents are compared using the checksum of the TMacro object. All the best,; Simon",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4830:1320,checksum,checksum,1320,https://root.cern,https://github.com/root-project/root/pull/4830,1,['checksum'],['checksum']
Security,"Here are the errors I got when following your receipe:; ```; ...; C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:; Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\; Users\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\ClangAttrEmitter.cpp) [C:\Users\bel; lenot\build\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.clang-tblgen.vcxproj]; C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:; Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\; Users\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\ClangASTNodesEmitter.cpp) [C:\Users; \bellenot\build\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.clang-tblgen.vcxproj]; C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:; Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\; Users\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\ClangSACheckersEmitter.cpp) [C:\Use; rs\bellenot\build\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.clang-tblgen.vcxproj]; C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:; Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\; Users\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\ClangCommentCommandInfoEmitter.cpp); [C:\Users\bellenot\build\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.clang-tblgen.vcxp; roj]; C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:; Cannot open include file: 'sanitizer/asan_interface.h': No such fil",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9445#issuecomment-1008835389:204,sanitiz,sanitizer,204,https://root.cern,https://github.com/root-project/root/issues/9445#issuecomment-1008835389,4,['sanitiz'],['sanitizer']
Security,"Here some example (including the PR https://github.com/root-project/root/pull/6572 which prints the actual compiler flags):. ```; -- ROOT Configuration . System Linux-5.8.13-arch1-1; Processor 2 core Intel(R) Core(TM) i7-7600U CPU @ 2.80GHz (x86_64); Build type RelWithDebInfo; Install path /usr/local; Compiler GNU 10.2.0; Compiler flags:; C -Wno-implicit-fallthrough -pipe -Wall -W -pthread -DNDEBUG -O2 -g -DNDEBUG; C++ -std=c++17 -Wno-implicit-fallthrough -Wno-noexcept-type -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread -DNDEBUG -O2 -g -DNDEBUG; Linker flags:; Executable -rdynamic; Module ; Shared -Wl,--no-undefined -Wl,--hash-style=""both""; ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6575#issuecomment-704853627:651,hash,hash-style,651,https://root.cern,https://github.com/root-project/root/issues/6575#issuecomment-704853627,1,['hash'],['hash-style']
Security,"Hey, is there any way for me to view that failure output? I have a cern lightweight account under 0xloem@gmail.com but am denied access to the build output with it.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3442#issuecomment-466717149:129,access,access,129,https://root.cern,https://github.com/root-project/root/pull/3442#issuecomment-466717149,1,['access'],['access']
Security,"Hi - this is an excellent start but I'd like to offer a few considerations given that not everyone uses root files these days. Specifically, friend trees are not a widely accepted concept outside of TTrees and RNtuple. It is, however, easy to abstract away from this so that this metadata specification is more universal. In coffea, we didn't go all the way to formalizing it in a schema since there are many details but you can see the basic validation we do here:; https://github.com/CoffeaTeam/coffea/blob/master/coffea/processor/executor.py#L1353; We allow forms like:; ```; fileset = { ""dataset"" : [""some"", ""list"", ""of"", ""files""], ...}; # and; fileset = { ""dataset"": { ""files"": [""file1"", ""file2"", ...], ""treename"": ""Events"", ""metadata"": { ""stuff"": ""about stuff""}, ...}, { .... } }; ```; depending on user need.; I think optional and union types are very convenient here since not every user will need or want to specify all components of the full schema on each use (but uniformizing the description when needed is very important). . To repeat from above here is the suggested metadata requirements (with annotations).; """"""; This new standard schema should support a few key features of the definition of a dataset:. * Specify groups of several input files, each with associated metadata; * Decide what term to use instead of ""groups"" (dataset is probably best); * Cover TTree but plan for RNTuple support (metadata should not care about file formats, your program does); * Should support friend trees per group *** (see below); * Should support entry ranges per group (why? this makes little operational sense from the POV of an analyst); * No indexed friend trees (at least for now) *** (also); """"""; This specification of requirements mixes things that are describing the data (metadata) and and how to react to it (something in a program, not part of the schema). I believe a clean factorization along these lines is very important to creating a well-adopted schema if you intend to develop a ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11624#issuecomment-1293743624:443,validat,validation,443,https://root.cern,https://github.com/root-project/root/issues/11624#issuecomment-1293743624,2,['validat'],['validation']
Security,"Hi @AlkaidCheng ,. Thanks for reaching out! I am not sure I understand where the problem stands. You are purposely injecting a different namespace at runtime, so I don't see how the package can act in order to prevent the wrong namespace being used. The error is unfortunately not clear as to which call site is provoking the lookup to `ROOT.Math.Internal`. Judging by your short snippet, I can imagine that one place could be [here](https://github.com/root-project/root/blob/a29e81cb1cd217ca2096a44d01fb273e085b4e8b/bindings/experimental/distrdf/python/DistRDF/HeadNode.py#L457), but as you can see the correct full namespace is being called there. Can you give more context as to what is your use case so I can better understand how to help?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/15035#issuecomment-2015329409:115,inject,injecting,115,https://root.cern,https://github.com/root-project/root/issues/15035#issuecomment-2015329409,2,['inject'],['injecting']
Security,"Hi @Axel-Naumann ,; Could be this update also included in the next patch tag? We will need this fix for the new VMC packages tags. The commit hash in the master branch is d90fc155397fd8bf986c03d36cd35f9f1a242b40.; Thank you,",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4459#issuecomment-571074215:142,hash,hash,142,https://root.cern,https://github.com/root-project/root/pull/4459#issuecomment-571074215,1,['hash'],['hash']
Security,"Hi @Axel-Naumann,. This is not really a pull request but I thought it might be a good way to get feedback from you guys and maybe some help improving it. This is not meant for merging, we are fine with an out of tree patch for now, but we would of course be very happy if something like this becomes upstream eventually. This is a very ""hacky"" try to be able to create ROOT files with; deterministic checksum that is not dependent on timestamp or hostname or; anything: Create a file with the same content twice on different; machines should yield the same checksum (assuming they have the same root file format version and same class definitions ...). We cannot really modify the software using these checksums and it's not just ROOT files but also other files in there so a distinction between ""content checksum"" and ""file checksum"" would be rather tricky. That's why we went for the brutal approach. We need this mostly for small files in a well controlled environment:; The file is created in one place at one time and not incrementally over; a long time, no threads. . So we would be fine with a global flag to not store time dependent information in files but it is of course ugly. A slightly less horrific version might be to have a `TDeterministicFile` which behaves like `TFile` with the only difference that it has a zeros for dates/uuids but I don't know the classes well enough to judge if that is feasible.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4083:400,checksum,checksum,400,https://root.cern,https://github.com/root-project/root/pull/4083,5,['checksum'],"['checksum', 'checksums']"
Security,"Hi @Falcort,. As a **quick & dirty** solution it is ok, but we need much more advanced methods to work with ROOT structures. There are many global lists in ROOT, which should be accessed properly via RBrowser. In ROOT6 there is `TObject::Browse(TBrowser*)` method, which is implemented for many sub-classes. We need similar logic, but for arbitrary c++ classes - not only TObject. One possible solution is implemented for THttpServer - it is so called TRootSniffer. It provides methods to scan many different classes without need to implement specialized `Browse()` method in the class itself. . I hope, we can discuss this topic next week",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4468#issuecomment-537567733:178,access,accessed,178,https://root.cern,https://github.com/root-project/root/pull/4468#issuecomment-537567733,1,['access'],['accessed']
Security,"Hi @Harshalzzzzzzz ,; ROOT has a high-level data analysis interface called [RDataFrame](https://root.cern/doc/master/classROOT_1_1RDataFrame.html), you can take a look at the docs and try reading and running some of the tutorials [here](https://root.cern/doc/master/group__tutorial__dataframe.html). `RDataFrame` returns results wrapped in the [RResultPtr](https://root.cern/doc/master/classROOT_1_1RDF_1_1RResultPtr.html) type, through which we implement lazy execution (data processing is triggered when a user accesses the contents of a `RResultPtr`, _not_ when they request the result). RResultPtr has interface and semantics similar to [std::shared_ptr](https://en.cppreference.com/w/cpp/memory/shared_ptr), but currently it's missing a way to release ownership of its contents. `RResultPtr<T>::Release` is a simple method that would mimic the semantics of `std::shared_ptr::release`: it must return a `T*` and empty the `RResultPtr`. What needs to be done concretely:. - [x] add the `RResultPtr::Release` method in RResultPtr.hxx. It should be implemented in terms of `fObjPtr.release()` and it should also set `fActionPtr` and `fLoopManager` to null; - [x] add tests for the feature in `tree/dataframe/test/dataframe_resptr.cxx`, in particular making sure that `Release` and the ResultPtr's move-constructor have consistent behavior; - [x] add logic to the current method `RResultPtr::GetValue` to throw an exception if it's called on a null `RResultPtr`. Thank you in advance for any contribution, and feel free to ask more questions.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7047#issuecomment-771507725:513,access,accesses,513,https://root.cern,https://github.com/root-project/root/issues/7047#issuecomment-771507725,2,['access'],['accesses']
Security,"Hi @ShamrockLee ,; there are no duplicates anymore in the latest master, and I hope I clarified the rest in my reply above. A warning about Redefine: there is one annoyance with `Redefine` that I still have to fix: when you redefine e.g. `TestVar1`, that changes the value that `""TestVar1""` points to, but it does not redefine sub-columns such as `""TestVar1.fBits`. As in general the Redefine'd column could have a different type that does not have the same data members, in the near future redefining a column with sub-columns will disable the sub-columns (i.e. they won't be available as column names after the redefine, but rather you'll have to access the main object and then its data members).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9240#issuecomment-1026583769:649,access,access,649,https://root.cern,https://github.com/root-project/root/issues/9240#issuecomment-1026583769,1,['access'],['access']
Security,"Hi @VanyaBelyaev ,; I ran your reproducer with LCG97apython3(ROOT 6.20/06) and LCG98python3(ROOT 6.22/00).; With the latter it seems that the call to `dill.dumps` is executed but I get a different error with a long stacktrace, I report the main parts:; ```; ...; input_line_38:16:29: error: allocating an object of abstract class type 'TInterpreter'; *ret = new (arena) TInterpreter[nary];; ^; Error in <TClingCallFunc::make_ctor_wrapper>: Failed to compile; ...; Error in <TClingCallFunc::ExecDefaultConstructor>: Called with no wrapper, not implemented!; Error in <TClingClassInfo::New()>: Call of default constructor failed to return an object for class: TInterpreter; Error in <TClass::New>: cannot create object of class TInterpreter; Error in <TBufferFile::ReadObject>: could not create object of class TInterpreter; TBufferFile::WriteObjectAny:0: RuntimeWarning: since TROOT has no public constructor; 	which can be called without argument, objects of this class; 	can not be read with the current library. You will need to; 	add a default constructor before attempting to read it. <class cppyy.gbl.TH1D at 0x560bc237aa20>. Error in atexit._run_exitfuncs:; Traceback (most recent call last):; File ""/home/vpadulan/Programs/rootproject/rootinstall/v6-22-00-patches/lib/ROOT/__init__.py"", line 119, in cleanup; backend.gROOT.EndOfProcessCleanups(); ReferenceError: attempt to access a null-pointer; ```. The line `<class cppyy.gbl.TH1D at 0x560bc237aa20>` is there because I added a print to your reproducer just to check that `dill.loads` is executed. Actually this is the simplest command to reproduce the same stacktrace:. ```; python -c ""import ROOT; import dill; print(type(dill.loads(dill.dumps(ROOT.TH1D()))))""; ```. So it's possible that something in the new pyroot (default since 6.22) fixes the `dill` issue but triggers this other error.; @etejedor any thoughts?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6370#issuecomment-696687077:1381,access,access,1381,https://root.cern,https://github.com/root-project/root/issues/6370#issuecomment-696687077,2,['access'],['access']
Security,"Hi @alusiani, thanks for reporting. We've restored the original xrootd archive on the server, so the hash should again be valid and the build should succeed.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11160#issuecomment-1210639280:101,hash,hash,101,https://root.cern,https://github.com/root-project/root/issues/11160#issuecomment-1210639280,1,['hash'],['hash']
Security,"Hi @couet ,. > so it won't be really useful. Yes. But the size is set during the execution of GUI. > By chance do you have a simple reproducer ?. Simple -- no. But in a scope of elimination of this issue I can provide an access to a private github repository with these codes.; The application itself is not large. Would that work for you?. Best regards,. Andrii",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6344#issuecomment-692118820:221,access,access,221,https://root.cern,https://github.com/root-project/root/issues/6344#issuecomment-692118820,2,['access'],['access']
Security,"Hi @couet ,. the reproducer is the same as in #6447 (Which is closed now, I know). But this time the crash happens later, in the destructor.; ```; ./pad4.exe ; Error in <TList::Clear>: A list is accessing an object (0x2b7f740) already deleted (list name = TList). *** Break *** segmentation violation. ===========================================================; There was a crash (kSigSegmentationViolation).; This is the entire stack trace of all threads:; ===========================================================; gdb.printing.register_pretty_printer(gdb.current_objfile(),; #0 0x00007f9b7558746c in __libc_waitpid (pid=1463649, stat_loc=stat_loc; entry=0x7ffce938d760, options=options; entry=0) at ../sysdeps/unix/sysv/linux/waitpid.c:31; #1 0x00007f9b75504f62 in do_system (line=<optimized out>) at ../sysdeps/posix/system.c:148; #2 0x00007f9b78f9a4bc in TUnixSystem::Exec (this=0x1e1e960, shellcmd=0x2b7f4b0 ""X/etc/gdb-backtrace.sh 1463630 1>&2"") at Projects/ROOT/root/core/unix/src/TUnixSystem.cxx:2120; #3 0x00007f9b78f9ad16 in TUnixSystem::StackTrace (this=0x1e1e960) at Projects/ROOT/root/core/unix/src/TUnixSystem.cxx:2411; #4 0x00007f9b78f9e5f4 in TUnixSystem::DispatchSignals (this=0x1e1e960, sig=kSigSegmentationViolation) at Projects/ROOT/root/core/unix/src/TUnixSystem.cxx:3649; #5 0x00007f9b78f96794 in SigHandler (sig=kSigSegmentationViolation) at Projects/ROOT/root/core/unix/src/TUnixSystem.cxx:407; #6 0x00007f9b78f9e4fc in sighandler (sig=11) at Projects/ROOT/root/core/unix/src/TUnixSystem.cxx:3620; #7 <signal handler called>; #8 0x0000000000000000 in ?? (); #9 0x00007f9b77f28ed4 in TCanvas::Close (this=0x1e9efd0, option=0x7f9b77f92e51 """") at Projects/ROOT/root/graf2d/gpad/src/TCanvas.cxx:782; #10 0x00007f9b77f28bc5 in TCanvas::Destructor (this=0x1e9efd0) at Projects/ROOT/root/graf2d/gpad/src/TCanvas.cxx:697; #11 0x00007f9b77f28969 in TCanvas::~TCanvas (this=0x1e9efd0, __in_chrg=<optimized out>) at Projects/ROOT/root/graf2d/gpad/src/TCanvas.cxx:668; #12 0x00007f9b77",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6537#issuecomment-702879711:195,access,accessing,195,https://root.cern,https://github.com/root-project/root/pull/6537#issuecomment-702879711,1,['access'],['accessing']
Security,"Hi @guitargeek , did you have time to look into this -- or maybe one of the reviewers? I don't have access to a mac, so I can't help troubleshooting these build failures.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10553#issuecomment-1128524502:100,access,access,100,https://root.cern,https://github.com/root-project/root/pull/10553#issuecomment-1128524502,1,['access'],['access']
Security,"Hi @guitargeek ,. Thanks a lot for checking this. I wonder what is the implication of this inconsistency in NLL values though. Does it mean a multi-range fit using RooFit is fundamentally flawed and should not be used?. In our use case, we are trying to obtain the values of the parameters in our background models by fitting to the data sideband. So we are more concerned about the best fit values of the variables in the workspace than the value of the NLL itself. Though from our validation plots, our background model shape obtained from the multi-range fit seems to agree well with the data. My question is then what is the right thing to do if we want to perform a multi-range fit using RooFit? This could potentially have a big impact on the community since a lot of analysis codes/frameworks rely on this multi-range fit method.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11447#issuecomment-1260694385:483,validat,validation,483,https://root.cern,https://github.com/root-project/root/issues/11447#issuecomment-1260694385,1,['validat'],['validation']
Security,"Hi @hahnjo,; I think you need to get a grid proxy with `voms-proxy-init` to access the file. Let me know if that works for you. Sorry for the inconvenience,; Andrea",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13429#issuecomment-1680220019:76,access,access,76,https://root.cern,https://github.com/root-project/root/issues/13429#issuecomment-1680220019,1,['access'],['access']
Security,"Hi @jblomer, the new test `RNTuple.SmallClusters` seems a bit flaky, sometimes [running into timeouts](https://lcgapp-services.cern.ch/root-jenkins/job/root-nightly-master/LABEL=mac13arm,SPEC=cxx17,V=master/3502/testReport/projectroot.tree.ntuple.v7/test/gtest_tree_ntuple_v7_test_ntuple_extended/), sometimes [throwing exceptions](https://lcgapp-services.cern.ch/root-jenkins/job/root-nightly-master/LABEL=mac13arm,SPEC=cxx17,V=master/3500/testReport/junit/projectroot.tree.ntuple.v7/test/gtest_tree_ntuple_v7_test_ntuple_extended/) (both `mac13arm`), and one time [crashing on Linux](https://lcgapp-services.cern.ch/root-jenkins/job/root-nightly-master/LABEL=ROOT-ubuntu2004,SPEC=cxx17,V=master/3501/testReport/junit/projectroot.tree.ntuple.v7/test/gtest_tree_ntuple_v7_test_ntuple_extended/) (how does it get to `llvm::LazyMachineBlockFrequencyInfoPass::ID()` though?). An address-sanitized build doesn't show anything when executing the test, any idea where we could start looking?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12665#issuecomment-1549144907:884,sanitiz,sanitized,884,https://root.cern,https://github.com/root-project/root/pull/12665#issuecomment-1549144907,1,['sanitiz'],['sanitized']
Security,"Hi @ktf , the travis log could be clearer, but it indicates how to run the same command it does:. ```; Running clang-format-3.9 against branch master, with hash 7554be95715898fa2a93528254ce3646764ab3d2; clang-format failed.; To reproduce it locally please run; 	git checkout master; 	git-clang-format --commit 7554be95715898fa2a93528254ce3646764ab3d2 --diff --binary /usr/local/clang-5.0.0/bin/clang-format; ```. This system is not perfect and you might have to adapt hashes/paths to your case, but this is it.; If you do not get any corrections you might somehow be overriding ROOT's clang-format configuration.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1712#issuecomment-371771090:156,hash,hash,156,https://root.cern,https://github.com/root-project/root/pull/1712#issuecomment-371771090,4,['hash'],"['hash', 'hashes']"
Security,"Hi @ktf, as discussed yesterday the test failures are related to an issue in our incremental builds where Clad is not rebuilt after changes to the Clang headers. This leads to very weird symptoms because some ""stale"" functions access memory where they shouldn't and so on. I was hit by this problem already twice and it's tracked in https://github.com/root-project/root/issues/7977, so one would suppose that I remember by now but evidently I didn't... Apologies for the confusion and the delay it caused in integrating this. I've now synchronized the changes to https://github.com/root-project/llvm-project/releases/tag/ROOT-llvm16-20240116-01, moving the header to `clang/include/clang/Basic` as mentioned yesterday to keep the ability to build against a vanilla version of LLVM). @vgvassilev I put the commit only into `ROOT-llvm16`, not `cling-llvm16` because I think it's not that relevant for Cling standalone. Let me know if you disagree and I can of course move it. Some measurements of this change on my machine: for a simple `./bin/root.exe -q`, it reduces the maximum RSS from 217MB to 192MB and for `./bin/root.exe -q -e ""std::vector<int> v"" -e ""return 0;""` from 255MB to 230MB :clap:",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13808#issuecomment-1893308958:227,access,access,227,https://root.cern,https://github.com/root-project/root/pull/13808#issuecomment-1893308958,2,['access'],['access']
Security,"Hi @lmoneta and @hageboeck, thanks for the profiling and the review!. Indeed, the first commit in this PR with the `ifdefs` should be dropped. With the improvements in this PR, I hope we don't have to touch the arena anytime soon again anyway. I will not touch the second commit thought, because it has already been carefully validated by Lorenzo.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7954#issuecomment-824801489:326,validat,validated,326,https://root.cern,https://github.com/root-project/root/pull/7954#issuecomment-824801489,1,['validat'],['validated']
Security,"Hi @oshadura As it is, I think we should squash the PR. The first two commits should be just one, since one adds the files (which makes the hashes and filenames broken), then the other one fixes it. Please merge the commits so that there is not intermediate broken state.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3290#issuecomment-456441589:140,hash,hashes,140,https://root.cern,https://github.com/root-project/root/pull/3290#issuecomment-456441589,1,['hash'],['hashes']
Security,"Hi @pcanal, happy New Year! Sorry I missed your comment just before the holiday break. I have updated the last commit message to not only include the commit hash in `master`, but also the commit title. Is that okay now?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9478#issuecomment-1006440676:157,hash,hash,157,https://root.cern,https://github.com/root-project/root/pull/9478#issuecomment-1006440676,1,['hash'],['hash']
Security,"Hi @sabiha84 ,; a segmentation violation is typically a symptom of a bug in user code that causes the program to access invalid memory regions. Please post on root-forum.cern.ch to receive support with these issues, this is most likely not a bug in ROOT itself.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8453#issuecomment-863049184:113,access,access,113,https://root.cern,https://github.com/root-project/root/issues/8453#issuecomment-863049184,1,['access'],['access']
Security,"Hi @simonmichal,. Jobs are running. For a ""failed"" job at our CERN T0 reading from eos, have a look [here](https://bigpanda.cern.ch//media/filebrowser/607edc99-4061-4618-a697-7a1f9b577b48/panda/tarball_PandaJob_4924768937_CERN-T0/payload.stdout). Let me know if you don't have access, and I'll make a pdf file. see you, RD",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6948#issuecomment-747585165:277,access,access,277,https://root.cern,https://github.com/root-project/root/issues/6948#issuecomment-747585165,1,['access'],['access']
Security,"Hi @swertz,; Thanks a lot for trying it out and for the reproducer! ; The issue is a bit silly and it has to do with how we compute a reasonable default value for the `npartitions` attribute if the user doesn't provide one. The idea, for the moment at least, is to get information about how many cores are available in the distributed cluster to the user application and submit one task per core. In the case of Dask, this is done by accessing the `client.scheduler_info()` dictionary, which in turn contains a `worker` key which value is another dictionary of information about the workers. [The current approach](https://github.com/root-project/root/blob/adf9ea8131ce786f58ff2d9446449f9680063292/bindings/experimental/distrdf/python/DistRDF/Backends/Dask/Backend.py#L45) assumed that if this key was present than it must mean that the Dask client has the information about how many cores are available. Unfortunately, as you just demonstrated, this is not the case. In particular, the `dask-jobqueue` interface has a rather annoying quirk, that is whenever you have already called the code to setup the `cluster` and the `client` objects, nothing is really ""ready to run"" yet. Instead, your Dask application will still be waiting for the batch system (HTCondor in this case) to actually give it resources. This has the side-effect that the dictionary I mentioned above contains the key `workers`, but that is an empty dictionary. You can check this by adding a ; ```python; print(client.scheduler_info()); ```; call after you create your `client` in the application. This effect can be mitigated if you first call `client.wait_for_workers(N_WORKERS)` before calling anything else RDF related. This will supposedly make sure that HTCondor has released resources to the Dask cluster (according to [the docs](http://distributed.dask.org/en/stable/api.html#distributed.Client.wait_for_workers)). With that being said, the `optimize_npartitions` function in the Dask backend should not be sensitive to th",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9429#issuecomment-992489655:434,access,accessing,434,https://root.cern,https://github.com/root-project/root/issues/9429#issuecomment-992489655,1,['access'],['accessing']
Security,"Hi Axel,. Can you try to add `--allow-file-access-from-files` to the command line?; It can be done with the following entry in .rootrc file:. ```; WebGui.ChromeInteractive: $prog $geometry --new-window --allow-file-access-from-files --app='$url' &; ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/16488#issuecomment-2368007393:43,access,access-from-files,43,https://root.cern,https://github.com/root-project/root/issues/16488#issuecomment-2368007393,2,['access'],['access-from-files']
Security,"Hi Axel,. on lxplus, I see a bit more than your output:. ***@***.*** t5]$ curl -v https://webdav.lcg.triumf.ca:2880/atlas/atlaslocalgroupdisk/rucio/user/desilva/a1/a8/myFile.1.root; * About to connect() to webdav.lcg.triumf.ca port 2880 (#0); * Trying 2607:f8f0:660:3::36...; * Connected to webdav.lcg.triumf.ca (2607:f8f0:660:3::36) port 2880 (#0); * Initializing NSS with certpath: sql:/etc/pki/nssdb; * CAfile: /etc/pki/tls/certs/ca-bundle.crt; CApath: none; * Server certificate:; * 	subject: CN=dpool46.lcg.triumf.ca,OU=triumf.ca,O=Grid,C=CA; * 	start date: Apr 08 16:29:03 2021 GMT; * 	expire date: May 08 16:29:03 2022 GMT; * 	common name: dpool46.lcg.triumf.ca; * 	issuer: CN=Grid Canada Certificate Authority,O=Grid,C=CA; * NSS error -8179 (SEC_ERROR_UNKNOWN_ISSUER); * Peer's Certificate issuer is not recognized.; * Closing connection 0; curl: (60) Peer's Certificate issuer is not recognized.; More details here: http://curl.haxx.se/docs/sslcerts.html. curl performs SSL certificate verification by default, using a ""bundle""; of Certificate Authority (CA) public keys (CA certs). If the default; bundle file isn't adequate, you can specify an alternate file; using the --cacert option.; If this HTTPS server uses a certificate signed by a CA represented in; the bundle, the certificate verification probably failed due to a; problem with the certificate (it might be expired, or the name might; not match the domain name in the URL).; If you'd like to turn off curl's verification of the certificate, use; the -k (or --insecure) option.; ***@***.*** t5]$ . regards,; Asoka. > On May 12, 2021, at 1:05 AM, Axel Naumann ***@***.***> wrote:; > ; > ; > As I crosscheck (to see whether it's related to the Davix redirect issue #8155 <https://github.com/root-project/root/issues/8155> ) I tried with curl but I get; > ; > $ curl -v https://webdav.lcg.triumf.ca:2880/atlas/atlaslocalgroupdisk/rucio/user/desilva/a1/a8/myFile.1.root; > * Trying 206.12.9.197:2880...; > * TCP_NODELAY set; > * Tryin",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8092#issuecomment-839939902:471,certificate,certificate,471,https://root.cern,https://github.com/root-project/root/issues/8092#issuecomment-839939902,4,"['Certificate', 'certificate']","['Certificate', 'certificate']"
Security,"Hi Enric, ; Thank you very much! ; Indeed it is a kind of problem; I rely on pickling in my project for two cases:. 1. implicitely, where I use the `parallel python`/`multiprocess`/`multiprocessing`/`pathos` to split the task into subtasks that can be executed in parallel in different processes or even on different nodes. Behind the scene such stuff relies on serialization/deserialization of objects via `pickle` or `dill`; 2. explicitely where I store my data into custom `shelve`-like database, that relies on serialization of objects via pickling. - for (1) I do not know if I can properly inject ""import ROOT"" into the code flow at all vital occurances. ; - for (2) of course I can pre-import `ROOT` for all manipulations with custom database, but it is rather unnatural solution. E.g. opening a (originally `ROOT`-blind) database I need to know that it contains some `ROOT`-objects, and in this case use `import ROOT` before accessing objects from the database. Currently I've added `import ROOT` just in the code of database, but it is not a perfect solution. It is acceptable as kind of a temporary patch, but if possible I'd like to avoid it in the long-term future.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6552#issuecomment-709078495:596,inject,inject,596,https://root.cern,https://github.com/root-project/root/issues/6552#issuecomment-709078495,2,"['access', 'inject']","['accessing', 'inject']"
Security,"Hi Enrico,. with the underlying mechanism now unveiled, could you reproduce the behavior with https://github.com/eguiraud/root/commit/97dbdbb6a1a38d8d4706c4b459ff9a8368eb0769? I'm still wondering why the test you suggested in the ROOT forum in November did not trigger it? Although I tried to build up various other test-cases, unluckily they all worked. I finally found it by running a stripped and compiled version of my anaylsis under gdb. . The root version used is: 6.20/08. In principle I could also test against the current master branch, but my computer at university still runs Debian 9 and I don't have access to the CERN computing infrastructure: --> Building a new ROOT version is always a bit cumbersome. As you seem to have taken over this bug, is this still neeeded?. Philipp",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7143#issuecomment-775111847:613,access,access,613,https://root.cern,https://github.com/root-project/root/issues/7143#issuecomment-775111847,1,['access'],['access']
Security,"Hi Simon,. >>>>>>>> curl -v https://webdav.lcg.triumf.ca:2880/atlas/atlaslocalgroupdisk/rucio/user/desilva/a1/a8/myFile.1.root <https://can01.safelinks.protection.outlook.com/?url=https%3A%2F%2Fwebdav.lcg.triumf.ca%3A2880%2Fatlas%2Fatlaslocalgroupdisk%2Frucio%2Fuser%2Fdesilva%2Fa1%2Fa8%2FmyFile.1.root&data=04%7C01%7Csimonliu%40triumf.ca%7C2bf615c9bb89486eaecd08d91571b94b%7Cc20535109cb34679a2d38f442e03b587%7C1%7C0%7C637564400460976298%7CUnknown%7CTWFpbGZsb3d8eyJWIjoiMC4wLjAwMDAiLCJQIjoiV2luMzIiLCJBTiI6Ik1haWwiLCJXVCI6Mn0%3D%7C1000&sdata=YgqiD9GIPDhABbE6mxc9%2BtWy8Q8red4Pa6zme6lmNgs%3D&reserved=0>; How do I use curl to download on lxplus ?. regards,; Asoka. > On May 12, 2021, at 11:47 AM, Simon Liu ***@***.***> wrote:; > ; > Hi, Asoka; > ; > I'm not sure which exactly problem you are chasing for, as far as I can tell, there is no problem access webdav.lcg.triumf.ca from lxplus, and downloading files from there works fine.; > ; > thanks; > ; > Simon; > ; > On 5/12/2021 11:13 AM, Asoka De Silva wrote:; >> ah ... thanks, I missed that. So ping works from lxplus but I still cannot do a curl to ***@***.***; >> ; >> regards,; >> Asoka; >> ; >>> On May 12, 2021, at 11:11 AM, Di Qing ***@***.*** ***@***.***>> wrote:; >>> ; >>> Asoka,; >>> ; >>> There was a mistake in your ping command, did you see the 'ping' in the middle, so actually it was pinging host ping. ; >>> ; >>> Regards,; >>> ; >>> Di; >>> ; >>> On 2021-05-12 10:43 a.m., Asoka De Silva wrote:; >>>> hmm ... that was really unexpected for me for lxplus ...; >>>> ; >>>> ***@***.*** ~]$ ping -c 10 ping webdav.lcg.triumf.ca <http://webdav.lcg.triumf.ca/>; >>>> PING (137.138.28.175) 56(124) bytes of data.; >>>> ; >>>> --- ping statistics ---; >>>> 10 packets transmitted, 0 received, 100% packet loss, time 8999ms; >>>> ; >>>> ***@***.*** ~]$ ; >>>> ; >>>> Vitaliy, shouldn't we expect that to be accessible from lxplus ?; >>>> ; >>>> regards,; >>>> Asoka; >>>> ; >>>>> On May 12, 2021, at 10:37 AM, Di Qing ***@***.*** ***@***.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8092#issuecomment-840018942:848,access,access,848,https://root.cern,https://github.com/root-project/root/issues/8092#issuecomment-840018942,1,['access'],['access']
Security,"Hi Will!. We try to bring the behavior of the `RooAbsCollection`s closer to the STL containers like [std::vector](https://en.cppreference.com/w/cpp/container/vector). This means that `operator[]` should simply access an element as quickly as possible without any bounds checking for no overhead. That's why it changed from 6.24 to master. Only the `at()` member should do the bounds checking. I still have some work to do here because its behavior is inconsistent with `std::vector` (it returns a `nullptr` if the bounds check fails). So bringing the element-accessing behavior closer to Python behavior would unfortunately bring us further away from the STL behavior, and I would advise against the suggested change. However, I would agree that on the pyROOT side, the `RooAbsCollections` should behave more pythonic and we should absolutely implement a pythonization to support element access from the back with negative indices!. Is that a fair compromise? Did you intend to use the negative indices in C++?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8174#issuecomment-842217657:210,access,access,210,https://root.cern,https://github.com/root-project/root/pull/8174#issuecomment-842217657,6,['access'],"['access', 'accessing']"
Security,"Hi `root-project/root`!. This is a one-off automatically generated pull request from LGTM.com :robot:. You might have heard that we’ve integrated LGTM’s underlying CodeQL analysis engine natively into GitHub. The result is [**GitHub code scanning**](https://docs.github.com/en/code-security/code-scanning/automatically-scanning-your-code-for-vulnerabilities-and-errors/about-code-scanning)!. With LGTM fully integrated into code scanning, we are focused on improving CodeQL within the native GitHub code scanning experience. In order to take advantage of current and future improvements to our analysis capabilities, we suggest you enable code scanning on your repository. Please take a look at our [blog post for more information](https://github.blog/2022-08-15-the-next-step-for-lgtm-com-github-code-scanning/). This pull request enables code scanning by adding an auto-generated [`codeql.yml` workflow file for GitHub Actions](https://docs.github.com/en/code-security/code-scanning/automatically-scanning-your-code-for-vulnerabilities-and-errors/setting-up-code-scanning-for-a-repository#setting-up-code-scanning-manually) to your repository — take a look! We tested it before opening this pull request, so all should be working :heavy_check_mark:. In fact, you might already have seen some alerts appear on this pull request!. Where needed and if possible, we’ve adjusted the configuration to the needs of your particular repository. But of course, you should feel free to tweak it further! Check [this page](https://docs.github.com/en/code-security/code-scanning/automatically-scanning-your-code-for-vulnerabilities-and-errors/configuring-code-scanning#editing-a-code-scanning-workflow) for detailed documentation. Questions? Check out the FAQ below!. ### FAQ; <details>; <summary>Click here to expand the FAQ section</summary>. #### How often will the code scanning analysis run?; By default, code scanning will trigger a scan with the CodeQL engine on the following events:; * On every pull req",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11808:282,secur,security,282,https://root.cern,https://github.com/root-project/root/pull/11808,1,['secur'],['security']
Security,"Hi both,. Somewhat embarassingly, Danilo is correct. I've been occupied heavily with work lately and with this being my third build of ROOT today didn't notice the exact rookie mistake that's been presumed; I'd accidentally put into my build script the hash for 6.26.12 and not 6.26.14 which I intended (and more frustratingly, I'd then added a comment saying #6.26.14). Please disregard this issue. It's correct in the context of 6.26.12 but then the problem was fixed already and 6.26.12 was only ever the latest release for about a day. Thanks for your assistance both, and my apologies for the misfire!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14138#issuecomment-1832490671:253,hash,hash,253,https://root.cern,https://github.com/root-project/root/issues/14138#issuecomment-1832490671,1,['hash'],['hash']
Security,"Hi please check here:; https://root-forum.cern.ch/t/6-24-00-does-not-complile-on-redhat-8-3/45161. details:. Hello,; I’m running into problems compiling root 6.24.00:. $ cmake -Dclad=OFF -DCMAKE_INSTALL_PREFIX=…/root_install …/root-6.24.00; $ cmake --build . – install -j8. …; [ 76%] Linking CXX static library …/…/…/…/lib/libclingInterpreter.a; [ 76%] Built target clingInterpreter; Scanning dependencies of target CLING; [ 76%] Built target CLING; Scanning dependencies of target LLVMRES; [ 76%] Copying LLVM resource and header files; [ 76%] Built target LLVMRES; (stucks…). $ cmake --build . --install; [ 0%] Built target AFTERIMAGE; [ 0%] Built target OPENUI5; [ 0%] Built target LZMA; [ 0%] Performing download step (download, verify and extract) for ‘VDT’; (stucks). seems that vdt uses network access, which I do not have (not mentioned in the docs).; I think I do not need it anyhow…. so again:; $ rm -rf *; $ cmake -Dclad=OFF -Dvdt=OFF -DCMAKE_INSTALL_PREFIX=…/root_install …/root-6.24.00; $ cmake --build . --install; …; [ 79%] Generating G__Thread.cxx, …/…/lib/Thread.pcm; [ 79%] Generating G__forward_listDict.cxx, …/…/lib/libforward_listDict.rootmap; [ 79%] Generating G__vectorDict.cxx, …/…/lib/libvectorDict.rootmap; In file included from input_line_7:21:; /srv/ussapc/home/ussapc/sw/root_build/include/ROOT/TReentrantRWLock.hxx:26:10: fatal error: ‘tbb/enumerable_thread_specific.h’ file not found; #include “tbb/enumerable_thread_specific.h”; ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~; Error: /srv/ussapc/home/ussapc/sw/root_build/core/rootcling_stage1/src/rootcling_stage1: compilation failure (/srv/ussapc/home/ussapc/sw/root_build/lib/libThreaddb2bde6cdd_dictUmbrella.h); gmake[2]: *** [core/thread/CMakeFiles/G__Thread.dir/build.make:109: core/thread/G__Thread.cxx] Error 1; gmake[1]: *** [CMakeFiles/Makefile2:27339: core/thread/CMakeFiles/G__Thread.dir/all] Error 2; gmake[1]: *** Waiting for unfinished jobs…. I found out that tbb is required by imt, so again; $ rm -rf *; $ cmake -D",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8292:802,access,access,802,https://root.cern,https://github.com/root-project/root/issues/8292,1,['access'],['access']
Security,"Hi there,. OK, I think that I have found the culprit, but I don't understand the reasons. The main difference of our current 'minitree production' jobs this round is that we included a build of the MCFM physics generator with the build of our analysis code and we use it while running to calculate physics matrix elements for each event. . So to test this, I rebuilt our analysis code without building MCFM, and of course no longer calculate the matrix elements. I submitted this to the BNL site, and we read the files fine:. H4lAnalRun2 INFO processEvents: try to open file: root://dcgftp.usatlas.bnl.gov:1096//pnfs/usatlas.bnl.gov/BNLT0D1/rucio/mc16_13TeV/84/1f/DAOD_HIGG2D1.23315636._000001.pool.root.1; H4lAnalRun2 INFO processEvents: called TFile Open ; H4lAnalRun2 INFO processEvents - opened file 0 root://dcgftp.usatlas.bnl.gov:1096//pnfs/usatlas.bnl.gov/BNLT0D1/rucio/mc16_13TeV/84/1f/DAOD_HIGG2D1.23315636._000001.pool.root.1; H4lAnalRun2 INFO notifyNewFile: Entering. which as you may remember is the TFile::Open on a file which would use xrootd access. The job continues fine, reading 6 files, as one would expect. Now there is no matrix element calculated before we start reading the events. So it must be that somehow linking in the MCFM libraries causes problems for calling the gethostname. I must admit that I have no idea how/why this would 'interfere', since MCFM is not run at all before the TFile::Open. . So I think that we can let this bug report rest for now. If anyone might have ideas on how to check or fix the MCFM problem, suggestions are welcome. But I no longer think that xrootd has a problem. This is clearly a problem in how we have set up our client code. Thanks all for your time spent on this!. see you, RD",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6948#issuecomment-760749391:1057,access,access,1057,https://root.cern,https://github.com/root-project/root/issues/6948#issuecomment-760749391,2,['access'],['access']
Security,"Hi! I get these warnings when using QtCreator:. ![image](https://github.com/root-project/root/assets/10653970/05a84b87-d2c6-44a0-b556-4a32d097b157). Clang-tidy defaults enable the security analyzer:. ![image](https://github.com/root-project/root/assets/10653970/f9bf48e8-6875-46b4-ab2c-4f264e4937fb). Behind the scenes, it calls something like:. ```; /opt/Qt/Tools/QtCreator/libexec/qtcreator/clang/bin/clang-tidy '-config={}' '-checks=-clang-diagnostic-*' -export-fixes=/tmp/QtCreator-mNGsvX/clangtools-BaPBuq/report-gawkapi.h-jpJtvv /usr/include/gawkapi.h -- -Wno-unknown-pragmas -Wno-unknown-warning-option -Wno-documentation-unknown-command -w -nostdinc -nostdinc++ -std=c++17 -pipe -fsigned-char -pthread -fno-semantic-interposition -fPIC -fno-semantic-interposition -fvisibility-inlines-hidden -ffunction-sections -fdata-sections -g -fvisibility=hidden -fvisibility-inlines-hidden -UNDEBUG -std=c++17 -fno-exceptions -fsyntax-only -m64 --target=x86_64-linux-gnu -x c++ -D_DEBUG -D_GNU_SOURCE -D__STDC_CONSTANT_MACROS -D__STDC_FORMAT_MACROS -D__STDC_LIMIT_MACROS -I/home/user/builds/build-root_src-Desktop-Debug/interpreter/llvm-project/llvm/lib/Support -I/opt/root_src/interpreter/llvm-project/llvm/lib/Support -I/home/user/builds/build-root_src-Desktop-Debug/interpreter/llvm-project/llvm/include -I/opt/root_src/interpreter/llvm-project/llvm/include -isystem /usr/include/c++/11 -isystem /usr/include/x86_64-linux-gnu/c++/11 -isystem /usr/include/c++/11/backward -isystem /usr/local/include -isystem /opt/Qt/Tools/QtCreator/libexec/qtcreator/clang/lib/clang/16/include -isystem /usr/include/x86_64-linux-gnu -isystem /usr/include; ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7422#issuecomment-1740468969:180,secur,security,180,https://root.cern,https://github.com/root-project/root/issues/7422#issuecomment-1740468969,1,['secur'],['security']
Security,"Hi, Asoka. I see, it's curl cmd usage then, -v means verbose but nothing else. You ; may want to add a method for further operation with authention files ; specified. Here is an example, check file existing. curl --verbose -I --head https://webdav.lcg.triumf.ca:2880/atlas/atlaslocalgroupdisk/rucio/user/desilva/a1/a8/myFile.1.root. For your case, it's more like an authencation issue, this is curl SSL ; verification trick, error code 35, here is a way I figured out long time ; ago,specify cacert and capath to verify host. To download a file that needs redirection, use -L. curl --silent --show-error --cacert /tmp/x509up_u501  --connect-timeout 300 --max-time 3600 --capath /etc/grid-security/certificates --cert /tmp/x509up_u501 --key /tmp/x509up_u501 -L https://webdav.lcg.triumf.ca:2880/atlas/atlaslocalgroupdisk/rucio/user/desilva/a1/a8/myFile.1.root  -o /tmp/ddddd-https. Hope it helps. Simon. On 5/12/2021 11:51 AM, Asoka De Silva wrote:; > Hi Simon,; >; >>>>>>>>> |curl -v ; >>>>>>>>> https://webdav.lcg.triumf.ca:2880/atlas/atlaslocalgroupdisk/rucio/user/desilva/a1/a8/myFile.1.root ; >>>>>>>>> <https://can01.safelinks.protection.outlook.com/?url=https%3A%2F%2Fwebdav.lcg.triumf.ca%3A2880%2Fatlas%2Fatlaslocalgroupdisk%2Frucio%2Fuser%2Fdesilva%2Fa1%2Fa8%2FmyFile.1.root&data=04%7C01%7Csimonliu%40triumf.ca%7Ca59fceaddf634d196e5608d91576f34a%7Cc20535109cb34679a2d38f442e03b587%7C1%7C0%7C637564422908647699%7CUnknown%7CTWFpbGZsb3d8eyJWIjoiMC4wLjAwMDAiLCJQIjoiV2luMzIiLCJBTiI6Ik1haWwiLCJXVCI6Mn0%3D%7C1000&sdata=DKbH3DJgHqWR8O0YknLB85pID2Q2zwz0CqqB18vukA4%3D&reserved=0>|; >; > How do I use curl to download on lxplus ?; >; > regards,; > Asoka; >; >> On May 12, 2021, at 11:47 AM, Simon Liu ***@***.*** ; >> ***@***.***>> wrote:; >>; >> Hi, Asoka; >>; >> I'm not sure which exactly problem you are chasing for, as far as I ; >> can tell, there is no problem access webdav.lcg.triumf.ca ; >> <http://webdav.lcg.triumf.ca> from lxplus, and downloading files from ; >> there works fine.; >>; >>",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8092#issuecomment-840043080:688,secur,security,688,https://root.cern,https://github.com/root-project/root/issues/8092#issuecomment-840043080,2,"['certificate', 'secur']","['certificates', 'security']"
Security,"Hi, Asoka. I'm not sure which exactly problem you are chasing for, as far as I can ; tell, there is no problem access webdav.lcg.triumf.ca from lxplus, and ; downloading files from there works fine. thanks. Simon. On 5/12/2021 11:13 AM, Asoka De Silva wrote:; > ah ... thanks, I missed that.  So ping works from lxplus but I still ; > cannot do a curl to ***@***.***; >; > regards,; > Asoka; >; >> On May 12, 2021, at 11:11 AM, Di Qing ***@***.*** ; >> ***@***.***>> wrote:; >>; >> Asoka,; >>; >> There was a mistake in your ping command, did you see the 'ping' in ; >> the middle, so actually it was pinging host ping.; >>; >> Regards,; >>; >> Di; >>; >> On 2021-05-12 10:43 a.m., Asoka De Silva wrote:; >>> hmm ... that was really unexpected for me for lxplus ...; >>>; >>> ***@***.*** ~]$ ping -c 10 ping webdav.lcg.triumf.ca ; >>> <http://webdav.lcg.triumf.ca/>; >>> PING (137.138.28.175) 56(124) bytes of data.; >>>; >>> ---  ping statistics ---; >>> 10 packets transmitted, 0 received, 100% packet loss, time 8999ms; >>>; >>> ***@***.*** ~]$; >>>; >>> Vitaliy, shouldn't we expect that to be accessible from lxplus ?; >>>; >>> regards,; >>> Asoka; >>>; >>>> On May 12, 2021, at 10:37 AM, Di Qing ***@***.*** ; >>>> ***@***.***>> wrote:; >>>>; >>>> Maybe the connections were from commodity network? Are you able to ; >>>> ping webdav.lcg.triumf.ca <http://webdav.lcg.triumf.ca/>?; >>>>; >>>> Thanks,; >>>>; >>>> Di; >>>>; >>>>> On May 12, 2021, at 10:29 AM, Asoka De Silva ***@***.*** ; >>>>> ***@***.***>> wrote:; >>>>>; >>>>> ﻿ Hi Axel,; >>>>>; >>>>> I don't know but I'll add Simon and Di who are the Tier-1 experts ; >>>>> and may have ideas.; >>>>>; >>>>> Simon and Di, Axel has this issue and me a similar one - any ideas ?; >>>>>; >>>>>; >>>>>>; >>>>>>> s I crosscheck (to see whether it's related to the Davix ; >>>>>>> redirect issue #8155 ; >>>>>>> <https://can01.safelinks.protection.outlook.com/?url=https%3A%2F%2Fgithub.com%2Froot-project%2Froot%2Fissues%2F8155&data=04%7C01%7Csimon",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8092#issuecomment-840016493:111,access,access,111,https://root.cern,https://github.com/root-project/root/issues/8092#issuecomment-840016493,1,['access'],['access']
Security,"Hi, Danilo. I missed the inheritance chain comment the first time, although I seriously considered your feedback. My justification for changing the executors in 6.12 is that If we can reduce the damage to user code (e.g. reducing the time a soon to be changed interface is exposed and providing the new one) we should go for it. But I'm not taking a hard stance on this and that's why I opened the PR, to discuss it :)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1312#issuecomment-343753485:273,expose,exposed,273,https://root.cern,https://github.com/root-project/root/pull/1312#issuecomment-343753485,2,['expose'],['exposed']
Security,"Hi, Thank you @ShamrockLee very much for this contribution!; As a general comment, if this implementation is equivalent, just more efficient than the existing one, then we could just replace it. ; If you think both are useful, we could have two internal (protected) functions for the implementation, but expose them in the same interface eventually adding an option.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11949#issuecomment-1361431156:304,expose,expose,304,https://root.cern,https://github.com/root-project/root/pull/11949#issuecomment-1361431156,1,['expose'],['expose']
Security,"Hi,. Amazon has this concept of short-lived credentials via the ""Security Token Service"" (https://aws.amazon.com/documentation/iam/). In addition to generating the usual access and secure keys, the STS also generates a session token that needs to be used. This adds support for this. . I made fToken public instead of a do-nothing getter, but that's a trivial change if you prefer it the other way. (Also I should ask Georgios and friends to add this to davix - I didn't see it from a cursory glance at the code.)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/110:65,Secur,Security,65,https://root.cern,https://github.com/root-project/root/pull/110,3,"['Secur', 'access', 'secur']","['Security', 'access', 'secure']"
Security,"Hi,. I got the error message that TBranch is missing, but it never threw an exception handling, in fact in my case, i even had a cout at the end of the scripts which stated the script has ran fine and I always got that. Meaning, the run was never terminated due to the error....; I really want to help, but i dont know how, i sent the github link of my script, also the data I have used, but you dont have access to them, so pls tell me how can I help you exactly?. Regards,. Shirin",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9366#issuecomment-1006425835:406,access,access,406,https://root.cern,https://github.com/root-project/root/issues/9366#issuecomment-1006425835,1,['access'],['access']
Security,"Hi,. I started to take a look to this issue: the boundary check is not performed by the `TH1` methods that access a bin, e.g., `TH1C h(""h"","""",10,0,10); h.AddBinContent(12312312); ` and it can lead to undefined behavior (there is a piece of memory spoiled by this action). After reading the methods of TH1S, TH1I, TH1F, TH1D that access a bin content I can say:; * Each histogram class derives from the corresponding TArray class, e.g., TH1F derives from TArrayF; * Internally, the access to the bin is done _a la C_, straight to the element of the array , e.g. `fArray[nbin]` ; * The boundary check is already implemented for the methods `TArray::operator()[]` . A potential solution would be to use `TArray::operator()[]`, which actually check the boundary of the array. Another solution could be a simple `if` to check of the boundary without using the `TArray` features. . It is likely that this methods `SetBin*`, `AddBin*` may be called quite often, and such boundary check could have a great impact in performance. Is there experience of such case? @lmoneta , may I ask for your advice on this issue?. Best,; Alvaro",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14575#issuecomment-1940996892:107,access,access,107,https://root.cern,https://github.com/root-project/root/issues/14575#issuecomment-1940996892,6,['access'],['access']
Security,"Hi,. I was testing LCG_100_ATLAS_1 for root and found an issue with webdav access that is failing. I can reproduce it for LCG_100. Here is the recipe:. First, this is the code to test file access:; $ cat read_file.C ; ```; void read_file(){; const char *filename = gSystem->Getenv(""ALRB_TESTING_FILENAME"");; cout << filename << endl; . TFile *tfile = TFile::Open(filename); ; if (tfile == 0 ) {; exit(1);; };; exit(0);; }; ```. test 1: LCG_99 works:; (login to lxplus); ```; mkdir test; cd test; cp /afs/cern.ch/user/d/desilva/public/rootTest/read_file.C ./. ; source /cvmfs/sft.cern.ch/lcg/views/setupViews.sh LCG_99 x86_64-centos7-gcc8-opt; voms-proxy-init -voms atlas; (or export X509_USER_PROXY=/tmp/x509up_u`id -u` if you have a proxy set); export ALRB_TESTING_FILENAME=""davs://webdav.lcg.triumf.ca:2880/atlas/atlaslocalgroupdisk/rucio/user/desilva/a1/a8/myFile.1.root""; root -b './read_file.C'; echo $?; ```. test2: LCG_100 fails:; (login to lxplus); ```; mkdir test; cd test; cp /afs/cern.ch/user/d/desilva/public/rootTest/read_file.C ./. ; source /cvmfs/sft.cern.ch/lcg/views/setupViews.sh LCG_100 x86_64-centos7-gcc8-opt; voms-proxy-init -voms atlas; (or export X509_USER_PROXY=/tmp/x509up_u`id -u` if you have a proxy set); export ALRB_TESTING_FILENAME=""davs://webdav.lcg.triumf.ca:2880/atlas/atlaslocalgroupdisk/rucio/user/desilva/a1/a8/myFile.1.root""; root -b './read_file.C'; echo $?; ```. failing stdout from test2; ```; [desilva@lxplus7107 rootTest]$ source /cvmfs/sft.cern.ch/lcg/views/setupViews.sh LCG_100 x86_64-centos7-gcc8-opt; [desilva@lxplus7107 rootTest]$ export X509_USER_PROXY=/tmp/x509up_u`id -u`; [desilva@lxplus7107 rootTest]$ which root; /cvmfs/sft.cern.ch/lcg/views/LCG_100/x86_64-centos7-gcc8-opt/bin/root; [desilva@lxplus7107 rootTest]$ export ALRB_TESTING_FILENAME=""davs://webdav.lcg.triumf.ca:2880/atlas/atlaslocalgroupdisk/rucio/user/desilva/a1/a8/myFile.1.root""; [desilva@lxplus7107 rootTest]$ root -b './read_file.C'; ---------------------------------------------",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8092:75,access,access,75,https://root.cern,https://github.com/root-project/root/issues/8092,2,['access'],['access']
Security,"Hi,. On Thursday 2015-09-03 10:56, xantares wrote:. > Forgive me but your objections do not seem rock-solid:; > - '""distutils.sysconfig"" is far from robust as claimed' : afaik it; > works very well from 2.6-2.7, 3.1,3.2, 3.3 to 3.4. sure, on Linux. Did you try all main platforms? (And do add at least p2.5,; as that for sure is still in use.). > - ""package as a whole gets split, which risks that one part gets updated; > whereas another doesn't"": how would that be possible for users ? a; > decent package manager should handle that well. A package manager can install wherever it wants and can make its own; adjustment (simply copy over the two files, or put symlinks); this will; affect users building from source. I don't worry about package managers,; only about the latter users. As to 'how': the common case mixing; installations (e.g. from packagers and building from source), versions; (different pythons), system upgrades (that wipe out site-packages), or; simply a user doing 'rm -rf' for only half the installation. Users are; very, very inventive in creating trouble. :P None of that if all of ROOT; is kept in a single directory. So the only upside there seems to be is removing of this teeny-weeny; inconvenience of having to setup PYTHONPATH if you install in /usr/local.; But A) most from-source builders don't do that, they use bin/thisroot.sh,; which sets up PYTHONPATH; and B) installing in /usr/local is not; recommended to begin with, b/c of the same problem with remnants. Debugging a setup problem is very time consuming and frustrating: the; error messages are spurious and only occur on the user's machine to which; I have no access. In sum, I see no upside to speak of, but do see enormous downsides. And; if you really believe otherwise: sign that blood contract. Best regards,. ## Wim. WLavrijsen@lbl.gov -- +1 (510) 486 6411 -- www.lavrijsen.net",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/73#issuecomment-137538771:1653,access,access,1653,https://root.cern,https://github.com/root-project/root/pull/73#issuecomment-137538771,1,['access'],['access']
Security,"Hi,. Thanks for the report. ; ` pick out information from the efficiencies and do other processing on the cutflow information.`; What is missing in the solution offered on the forum? The correct way to programmatically access the information about the cuts has been showcased by @devajithvs and should be enough for all use cases (there is nothing more to access in the CutFlowReport).; Could you elaborate on the use case for which the string is required?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/16138#issuecomment-2258109834:219,access,access,219,https://root.cern,https://github.com/root-project/root/issues/16138#issuecomment-2258109834,2,['access'],['access']
Security,"Hi,. Yes, you can close it. I have seen a strange behaviour when trying to loop over the bin list and trying to access the errors and bin contents through the TH2Poly. However I am too busy to provide a script to reproduce it right now. . Cheers.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8340#issuecomment-861598892:112,access,access,112,https://root.cern,https://github.com/root-project/root/issues/8340#issuecomment-861598892,1,['access'],['access']
Security,"Hi,. very last time and then I give up ... > B) of course, users shouldn't install anything to /usr[/local] without; > using package management. But they do. > but it will simplify packaging too by not having to install an ugly; > script somewhere that sets PYTHONPATH. Ugly scripts that are seldom seen. I care more about humans than computers.; Additionally, the removal scripts can be simpler, as the package manager; knows where it put what, rather than the package stuffing portions in; different places, so I'd say its a wash. > As for the downsides, I think this solution is just simpler (not; > mentioning cleaner), maybe this will get you less bug reports. Straight of the bat, the whole nightly build system would roll over and; all developers that use cmake (not me, luckily) would have to change their; workflow. Why? B/c most of these setups are 1 python installation and; multiple ROOT installations, or different users for both so no access; rights to site packages. Add that packagers for LCG experiments now need; to know that ROOT puts stuff in $ROOTSYS and in $PYTHONHOME and fix what; they pick up from where. For that matter, I think there will be far more; 'ugly scripts' being created here to work around the mess this would add,; that I dare claim that even that argument of yours holds no water. Like I said, this is my last word on it. It's not worth my time if you; refuse to look beyond that one use case. Best regards,. ## Wim. WLavrijsen@lbl.gov -- +1 (510) 486 6411 -- www.lavrijsen.net",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/73#issuecomment-139309263:949,access,access,949,https://root.cern,https://github.com/root-project/root/pull/73#issuecomment-139309263,1,['access'],['access']
Security,"Hi,; I can run with valgrind now. https://bigpanda.cern.ch/job?pandaid=4946556588; ends with; ==2505== by 0x3FD274BC:; XrdCl::File::Open(std::__cxx11::basic_string<char,; std::char_traits<char>, std::allocator<char> > const&,; XrdCl::OpenFlags::Flags, XrdCl::Access::Mode, unsigned short) (in; /cvmfs/atlas.cern.ch/repo/sw/software/21.2/AnalysisBaseExternals/21.2.139/InstallArea/x86_64-centos7-gcc8-opt/lib/libXrdCl.so.2.0.0). but maybe I did not have the right arguments. I tried again with. --trace-children=yes --track-origins=yes --error-limit=no; Should be; https://bigpanda.cern.ch/job?pandaid=4946562660. Cheers,. Rod. On Tue, 12 Jan 2021 at 14:49, Attila Krasznahorkay <notifications@github.com>; wrote:. > In AnalysisBase-21.2.91 we used XRootD 4.8.4.; >; > And @#$% me... How did I not remember this earlier?!? Is this not all about; >; > https://its.cern.ch/jira/browse/ATLASG-1546; >; > [image: Screenshot from 2021-01-12 14-46-12]; > <https://user-images.githubusercontent.com/30694331/104322255-0438b000-54e5-11eb-897e-8d1ae2a125d4.png>; >; > ? I.e. it may not be the XRootD version after all, but the version of; > ROOT... However, if this *is* the case, then AnalysisBase-21.2.140+; > should *not* show the issue anymore. 🤔; >; > —; > You are receiving this because you were mentioned.; > Reply to this email directly, view it on GitHub; > <https://github.com/root-project/root/issues/6948#issuecomment-758666233>,; > or unsubscribe; > <https://github.com/notifications/unsubscribe-auth/ABNFVRURKONZMUE5DXE4EQ3SZRHNVANCNFSM4U2MLUJA>; > .; >. -- ; Tel. +49 89 289 14152",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6948#issuecomment-758872231:259,Access,Access,259,https://root.cern,https://github.com/root-project/root/issues/6948#issuecomment-758872231,1,['Access'],['Access']
Security,"Hi,; It is overloading some network related commands to provide a record of what; users are remote accessing. It creates; https://bigpanda.cern.ch//media/filebrowser/5e40cf5d-179e-4126-ad56-e0bb0173cbd5/panda/tarball_PandaJob_4911855304_CERN/pandatracerlog.txt. 2020-12-04 18:55:07.949713 : INFO connect:; ::2001:1458:301:62:0:0:1094 cmd: runH4lAnalRun2. where IPv6 always rings alarm bells with me. This would be a; node/site,RSE dependence. Cheers,. Rod. On Mon, 14 Dec 2020 at 10:31, Attila Krasznahorkay <notifications@github.com>; wrote:. > Hi Rod,; >; > What does; >; > LD_PRELOAD=/srv/workDir/96340ef3-75b1-46cf-8910-8a2f76b7068c/$LIB/wrapper.so; >; > do? That would be my first suspect. Since $LD_LIBRARY_PATH lists our; > software directories in the correct order, based on just that XRootD; > *should* be found under:; >; > [bash][thor]:~ > ls -l /cvmfs/atlas.cern.ch/repo/sw/software/21.2/AnalysisBaseExternals/21.2.139/InstallArea/x86_64-centos7-gcc8-opt/lib/libXrd*; > lrwxrwxrwx 1 cvmfs cvmfs 19 Sep 10 13:12 /cvmfs/atlas.cern.ch/repo/sw/software/21.2/AnalysisBaseExternals/21.2.139/InstallArea/x86_64-centos7-gcc8-opt/lib/libXrdAppUtils.so -> libXrdAppUtils.so.1; > lrwxrwxrwx 1 cvmfs cvmfs 23 Sep 10 13:12 /cvmfs/atlas.cern.ch/repo/sw/software/21.2/AnalysisBaseExternals/21.2.139/InstallArea/x86_64-centos7-gcc8-opt/lib/libXrdAppUtils.so.1 -> libXrdAppUtils.so.1.0.0; > -rwxr-xr-x 1 cvmfs cvmfs 74512 Sep 10 03:19 /cvmfs/atlas.cern.ch/repo/sw/software/21.2/AnalysisBaseExternals/21.2.139/InstallArea/x86_64-centos7-gcc8-opt/lib/libXrdAppUtils.so.1.0.0; > -rwxr-xr-x <http://atlas.cern.ch/repo/sw/software/21.2/AnalysisBaseExternals/21.2.139/InstallArea/x86_64-centos7-gcc8-opt/lib/libXrdAppUtils.so.1.0.0-rwxr-xr-x> 1 cvmfs cvmfs 18432 Sep 10 03:19 /cvmfs/atlas.cern.ch/repo/sw/software/21.2/AnalysisBaseExternals/21.2.139/InstallArea/x86_64-centos7-gcc8-opt/lib/libXrdBlacklistDecision-4.so; > -rwxr-xr-x <http://atlas.cern.ch/repo/sw/software/21.2/AnalysisBaseExternals/21.2.139/Inst",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6948#issuecomment-744315185:99,access,accessing,99,https://root.cern,https://github.com/root-project/root/issues/6948#issuecomment-744315185,1,['access'],['accessing']
Security,"Hi,; RD thinks this is the relevant part .... ==2505== at 0x4C2D257: __strncmp_sse42 (vg_replace_strmem.c:649); ==2505== by 0x4E36472: connect (in; /srv/workDir/e8d1c011-6cad-4b4c-b0ad-5b9f65b33eb0/lib64/wrapper.so); ==2505== by 0x3F7B62B8: XrdNetConnect::Connect(int, sockaddr const*,; int, int) (in /cvmfs/; atlas.cern.ch/repo/sw/software/21.2/AnalysisBaseExternals/21.2.139/InstallArea/x86_64-centos7-gcc8-opt/lib/libXrdUtils.so.2.0.0; ). /afs/cern.ch/user/w/walkerr/public/valg.log. Cheers,; Rod. On Tue, 12 Jan 2021 at 20:06, Rodney Walker <; rodney.walker@physik.uni-muenchen.de> wrote:. > Hi,; > I can run with valgrind now. https://bigpanda.cern.ch/job?pandaid=4946556588; > ends with; > ==2505== by 0x3FD274BC: XrdCl::File::Open(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, XrdCl::OpenFlags::Flags, XrdCl::Access::Mode, unsigned short) (in /cvmfs/atlas.cern.ch/repo/sw/software/21.2/AnalysisBaseExternals/21.2.139/InstallArea/x86_64-centos7-gcc8-opt/lib/libXrdCl.so.2.0.0); >; > but maybe I did not have the right arguments. I tried again with; >; > --trace-children=yes --track-origins=yes --error-limit=no; > Should be; > https://bigpanda.cern.ch/job?pandaid=4946562660; >; > Cheers,; >; > Rod.; >; >; > On Tue, 12 Jan 2021 at 14:49, Attila Krasznahorkay <; > notifications@github.com> wrote:; >; >> In AnalysisBase-21.2.91 we used XRootD 4.8.4.; >>; >> And @#$% me... How did I not remember this earlier?!? Is this not all; >> about; >>; >> https://its.cern.ch/jira/browse/ATLASG-1546; >>; >> [image: Screenshot from 2021-01-12 14-46-12]; >> <https://user-images.githubusercontent.com/30694331/104322255-0438b000-54e5-11eb-897e-8d1ae2a125d4.png>; >>; >> ? I.e. it may not be the XRootD version after all, but the version of; >> ROOT... However, if this *is* the case, then AnalysisBase-21.2.140+; >> should *not* show the issue anymore. 🤔; >>; >> —; >> You are receiving this because you were mentioned.; >> Reply to this email directly, view it ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6948#issuecomment-759275653:858,Access,Access,858,https://root.cern,https://github.com/root-project/root/issues/6948#issuecomment-759275653,1,['Access'],['Access']
Security,"Hi,; still not working:; It detects a working connection: . t$ cmake -DCMAKE_INSALL_PREFIX=../root-inst-test ../root-check-internet-connection; -- The C compiler identification is GNU 8.3.1; -- The CXX compiler identification is GNU 8.3.1; -- Check for working C compiler: /usr/bin/cc; -- Check for working C compiler: /usr/bin/cc -- works; -- Detecting C compiler ABI info; -- Detecting C compiler ABI info - done; -- Detecting C compile features; -- Detecting C compile features - done; -- Check for working CXX compiler: /usr/bin/c++; -- Check for working CXX compiler: /usr/bin/c++ -- works; -- Detecting CXX compiler ABI info; -- Detecting CXX compiler ABI info - done; -- Detecting CXX compile features; -- Detecting CXX compile features - done; -- Found Git: /usr/bin/git (found version ""2.27.0""); -- Checking internet connectivity...; -- Yes. I'm trying this manually:. $ wget --timeout=10 https://root.cern.ch/files/dummy.txt; --2021-06-24 13:20:37-- https://root.cern.ch/files/dummy.txt; Resolving root.cern.ch (root.cern.ch)... 137.138.18.236, 2001:1458:201:ee::100:6; Connecting to root.cern.ch (root.cern.ch)|137.138.18.236|:443... connected.; Unable to establish SSL connection.; ussapc@warlv0010/~$ echo $?; 4. man of wget says:; EXIT STATUS; Wget may return one of several error codes if it encounters problems. 0 No problems occurred.; 1 Generic error code.; 2 Parse error---for instance, when parsing command-line options, the .wgetrc or .netrc...; 3 File I/O error.; 4 Network failure.; 5 SSL verification failure.; 6 Username/password authentication failure.; 7 Protocol errors.; 8 Server issued an error response. I would recommend STATUS != 0 instead of STATUS=6. As you can see above name resolution is working, but the connection is blocked by the firewall. Georg",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8292#issuecomment-867634208:1546,password,password,1546,https://root.cern,https://github.com/root-project/root/issues/8292#issuecomment-867634208,3,"['authenticat', 'firewall', 'password']","['authentication', 'firewall', 'password']"
Security,"Hi,; thank you very much, that you spend time on this!. I do not understand some things:; * In the Doc the packages that do need internet access are usually named - this does not seem to be correct; * Furthermore, all packages that need internet access should be turned off in installation by default - they are not; * I think it is a difference if a system is cut off from the internet by a firewall, or if a system has no network (maybe that's why cmake does not detect it properly?); * I do not understand why I have to make -Dsuchalognoption to make a simple basic installation. If you can't put out that packages from the default installation and if cmake can't detect that there is not valid connection and if you do not want to make an extra option please: write a chapter in the docs what you have to do in case you want to compile on a local system. Thanks; Georg",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8292#issuecomment-864610580:138,access,access,138,https://root.cern,https://github.com/root-project/root/issues/8292#issuecomment-864610580,6,"['access', 'firewall']","['access', 'firewall']"
Security,"Hm, could it be that we don't release some memory? Just trying with a real world analysis and after a certain number of events I get a crash like this. ```; Processed 130000 entries; terminate called after throwing an instance of 'std::runtime_error'; what(): Error initializing io_uring: Invalid argument; ```. ```; #0 0x00007ffff51a1355 in raise () from /usr/lib/libc.so.6; #1 0x00007ffff518a853 in abort () from /usr/lib/libc.so.6; #2 0x00007ffff554586a in __gnu_cxx::__verbose_terminate_handler () at /build/gcc/src/gcc/libstdc++-v3/libsupc++/vterminate.cc:95; #3 0x00007ffff5551d8a in __cxxabiv1::__terminate (handler=<optimized out>) at /build/gcc/src/gcc/libstdc++-v3/libsupc++/eh_terminate.cc:48; #4 0x00007ffff5551df7 in std::terminate () at /build/gcc/src/gcc/libstdc++-v3/libsupc++/eh_terminate.cc:58; #5 0x00007ffff555209e in __cxxabiv1::__cxa_throw (obj=<optimized out>, tinfo=0x5555555a2800 <typeinfo for std::runtime_error@@GLIBCXX_3.4>, ; dest=0x7ffff5567fd0 <std::runtime_error::~runtime_error()>) at /build/gcc/src/gcc/libstdc++-v3/libsupc++/eh_throw.cc:95; #6 0x00007ffff75c4914 in ROOT::Internal::RIoUring::RIoUring() () from /home/jakob/Documents/CERN/ROOT/ntuple/install-git/lib/libRIO.so; #7 0x00007ffff75c3b01 in ROOT::Internal::RRawFileUnix::ReadVImpl(ROOT::Internal::RRawFile::RIOVec*, unsigned int) () from /home/jakob/Documents/CERN/ROOT/ntuple/install-git/lib/libRIO.so; #8 0x00007ffff75c21cb in ROOT::Internal::RRawFile::ReadV(ROOT::Internal::RRawFile::RIOVec*, unsigned int) () from /home/jakob/Documents/CERN/ROOT/ntuple/install-git/lib/libRIO.so; #9 0x00007ffff5853e72 in ROOT::Experimental::Detail::RPageSourceFile::LoadCluster(unsigned long, std::unordered_set<unsigned long, std::hash<unsigned long>, std::equal_to<unsigned long>, std::allocator<unsigned long> > const&) () from /home/jakob/Documents/CERN/ROOT/ntuple/install-git/lib/libROOTNTuple.so; ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6162#issuecomment-678297228:1716,hash,hash,1716,https://root.cern,https://github.com/root-project/root/pull/6162#issuecomment-678297228,1,['hash'],['hash']
Security,"Hm, the ""finding"" from ASan was #7968 aka Clad built without ASan and setting some memory that the sanitizer afterwards doesn't know about. Both tests, `gtest-math-mathcore-test-CladDerivatorTests` and `gtest-hist-hist-test-TFormulaGradientTests`, still fail in the same way as before, but ASan stays silent so it either can't detect the problem or there's none from the class of errors it checks. Back to the beginning...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7488#issuecomment-824883422:99,sanitiz,sanitizer,99,https://root.cern,https://github.com/root-project/root/pull/7488#issuecomment-824883422,1,['sanitiz'],['sanitizer']
Security,"Hmm that would hint at an ABI issue - and that should be reproducible with `lli`, even though it might need a JIT -> compiled library call to expose the ABI incompatibility. FYI and in case you don't know, you can load a .so into `lli` with `-load=` - that's not what the argument was invented for, but it works like a charm :-)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7090#issuecomment-812148587:142,expose,expose,142,https://root.cern,https://github.com/root-project/root/issues/7090#issuecomment-812148587,1,['expose'],['expose']
Security,"Hmm, I already did what I quoted in my last comment.; Now if I did:; git rebase upstream/master; ->; Applying: cppcheck: fix some reports; Applying: fix warnings for catch; julien@debian:~/projects/root$ git push; Username for 'https://github.com': serval2412; Password for 'https://serval2412@github.com': ; To https://github.com/serval2412/root; ! [rejected] master -> master (non-fast-forward); error: failed to push some refs to 'https://github.com/serval2412/root'; hint: Updates were rejected because the tip of your current branch is behind; hint: its remote counterpart. Integrate the remote changes (e.g.; hint: 'git pull ...') before pushing again.; hint: See the 'Note about fast-forwards' in 'git push --help' for details.; What should I do then?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1435#issuecomment-361205718:261,Password,Password,261,https://root.cern,https://github.com/root-project/root/pull/1435#issuecomment-361205718,1,['Password'],['Password']
Security,"Hmm, strange that the build fails, but the error seems to be not connected to the PR:. > 22:53:26 < HTTP/1.1 401 Authorization Required; > 22:53:26 < Server: GitHub Babel 2.0; > 22:53:26 < Content-Type: text/plain; > 22:53:26 < Content-Length: 21; > 22:53:26 < WWW-Authenticate: Basic realm=""GitHub""; > 22:53:26 < X-Frame-Options: DENY; > 22:53:26 < X-GitHub-Request-Id: F8B0:30DD2:1EF7253:2E3CE06:5C79A9D6; > 22:53:26 < ; > 22:53:26 * Connection #0 to host github.com left intact; > 02:52:59 Cancelling nested steps due to timeout. A few seconds before a similar request succeded. I found this line a few lines before the fail:. > 22:53:26 > GET /Triple-S/roottest.git/info/refs?service=git-upload-pack HTTP/1.1. At this moment I had no fork of roottest, so this might be the reason the request failed. I just added a fork of roottest so hopefully this error will not occur again.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3452#issuecomment-468893912:113,Authoriz,Authorization,113,https://root.cern,https://github.com/root-project/root/pull/3452#issuecomment-468893912,2,"['Authenticat', 'Authoriz']","['Authenticate', 'Authorization']"
Security,"Hmm, why can't I reply to Pere's review?. I have the impression that CMAKE_CXX_STANDARD is a standard way of selecting c++ version (the other being by CMAKE_CXX_EXTENSIONS). As @amadio pointed out this is a bad approach since I didn't find a way to access the resulting flag.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1040#issuecomment-331402395:249,access,access,249,https://root.cern,https://github.com/root-project/root/pull/1040#issuecomment-331402395,1,['access'],['access']
Security,"Hmmh, so you don't want to give me an active directory? :); This could be really useful for accessing large tables per-partes ... or pre-processed parts of geometry, you know ;)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15812#issuecomment-2177179201:92,access,accessing,92,https://root.cern,https://github.com/root-project/root/pull/15812#issuecomment-2177179201,1,['access'],['accessing']
Security,"How crucial is the fix of this - is there a problem (beyond tab completion) that is a consequence of this bug? This seems to be a very uncommon setup for member access; unless I get some good motivation I'm going to flag this as ""low priority"". Let me know!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10535#issuecomment-1128567803:161,access,access,161,https://root.cern,https://github.com/root-project/root/issues/10535#issuecomment-1128567803,1,['access'],['access']
Security,How to access RNTuple in a BulkIO style,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7112:7,access,access,7,https://root.cern,https://github.com/root-project/root/pull/7112,1,['access'],['access']
Security,"Hub](https://github.com/root-project/root/issues?q=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->; TClass members which are typedefs of supported RNTuple types are not being resolved to their true types during serialization, which is causing runtime errors. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->; Define a custom class with, e.g. a typedef'd `std::string` member intended to be serialized using rootcling and `TClass`; ```cpp; class CustomStruct { ; typedef std::string typedef_string;; typedef_string str;; };. auto classField = RField<CustomStruct>(""field"");; ```; Trying to create this field fails at run time:; ```; C++ exception with description ""Field npos has unknown type const string::size_type (unchecked RResult access!); At:; static ROOT::Experimental::RResult<std::unique_ptr<ROOT::Experimental::Detail::RFieldBase> >; ROOT::Experimental::Detail::RFieldBase::Create(const string&, const string&) ; [/home/max/projects/rootdev/root/tree/ntuple/v7/src/RField.cxx:202]; ```; ### Setup; ROOT master; <!--; 1. ROOT version; 2. Operating system; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->. ### Additional context; This is likely resolved by using `GetTrueTypeName` instead of `GetFullTypeName` here (thank you @jblomer):; https://github.com/root-project/root/blob/28f86b343f4ec280937fbbe8ecf64d9582651dcb/tree/ntuple/v7/src/RField.cxx#L550. <!--; Add any other context about the problem here.; -->",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7861:1326,access,access,1326,https://root.cern,https://github.com/root-project/root/issues/7861,1,['access'],['access']
Security,"I adjust code to follow convention we agree:; ```; auto attrs = line.Attrs(); // deep copy; attrs.SetWidth(12); // modify copy ; otherLine.Attrs().Copy(attrs); // copy existing values back (delete existing before) ; yetAnotherLine.Attrs().Copy(attrs); // copy existing values; ```; I also prototype `RColorNew` and how it can be used inside `RAttrLineNew`; See how it is defined:; ```; class RAttrLineNew : public RAttributesVisitor {. RColorNew fColor{this}; ///<! line color, will access container from line attributes. public:; const RColorNew &Color() const { return fColor; }; RColorNew &Color() { return fColor; }; ```; One can use it with the syntax:; ```; auto col = attr.Color();; col.SetRGB(10,20,30);; attr.Color() = col;; ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4352#issuecomment-529947511:483,access,access,483,https://root.cern,https://github.com/root-project/root/pull/4352#issuecomment-529947511,1,['access'],['access']
Security,I agree that it would be best for users to have all functions in one place. Menu access to that place should be good and clear though.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7440#issuecomment-801758247:81,access,access,81,https://root.cern,https://github.com/root-project/root/issues/7440#issuecomment-801758247,2,['access'],['access']
Security,"I also thought that Cppyy was handling the construction via the customization of `tp_call` in class proxies, but it turns out there is an `__init__` method injected in class proxies (which is a `CPPOverload`). So in principle it should be possible to inject a pythonisation such as the one Enrico proposed.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3424#issuecomment-463226835:156,inject,injected,156,https://root.cern,https://github.com/root-project/root/pull/3424#issuecomment-463226835,2,['inject'],"['inject', 'injected']"
Security,"I am leery of removing support for ODBC as it technically allows to have access to any/most database type without having to have a specific plugin for that database. In this one case, I would at least leave it in (deprecated mode) a while longer (at least one more release ; no every body is jumping on the latest release so it might take a while for some people to notice the deprecation .. and yes we could then bring it back but it might (or might not) then need adaptions to newer things (in particular cmake improvements) that would be done easier if it is left in).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3232#issuecomment-453220692:73,access,access,73,https://root.cern,https://github.com/root-project/root/pull/3232#issuecomment-453220692,1,['access'],['access']
Security,"I am not convinced yet by the immediate exception state. For discussion purposes, let's assume the following stack causes an error in `linux_read_from_network`, which is captured in a `RStatus` in `ROOT::ReadFromNetwork()`:; ```; linux_read_from_network(); ROOT::ReadFromNetwork(); ROOT::RNetFile::Read(); ROOT::RNTupleIterator::operator++(); UserCode::modelBackground(); ```. The immediate exception state would allow us to throw an exception in `ROOT::ReadFromNetwork()`. But `ROOT::RNetFile::Read()` might want/need to handle the error state, e.g. by retrying, or by accessing alternative sources. It might even be that a partial read is modeled as an error. This would require `ROOT::ReadFromNetwork()` to force the ""immediate exception"" state to a certain value and reset it later - which is error prone and awkward; it shows that we use a global state that needs local knowledge. If ""immediate exception"" is false and `ROOT::ReadFromNetwork()` captures the error and returns it, same for all subsequent frames but `ROOT::RNTupleIterator::operator++()` (which cannot return a `RStatus`), then only `ROOT::RNTupleIterator::operator++()` will throw. This would shorten the stack trace shown by a potential crash to; ```; ROOT::RNTupleIterator::operator++(); UserCode::modelBackground(); ```; - we would not know the stack trace that actually triggered the exception. We would likely have some info captured in the error message (e.g. ""ROOT::ReadFromNetwork() failed to call linux_read_from_network()""), but we'd miss the connection, i.e. `ROOT::RNetFile::Read()`. One way of handling that is by injecting state:; ```; RStatus ROOT::RNetFile::Read() {; RStatus res(ROOT::ReadFromNetwork());; ...; return R__STATUS_PASSTHROUGH(res); // registers res to have passed through ""ROOT::RNetFile::Read()"" by emplacing a frame string *if* in error state.; ```; That's similar to [`llvm::PrettyStackTraceEntry`](https://llvm.org/doxygen/classllvm_1_1PrettyStackTraceEntry.html), see usage [here](https://githu",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4683#issuecomment-564972730:570,access,accessing,570,https://root.cern,https://github.com/root-project/root/pull/4683#issuecomment-564972730,1,['access'],['accessing']
Security,"I am preparing a PR, but will wait first for https://github.com/root-project/root/pull/9615 to be merged in order to prevent more conflicts. I will hide these functions from doxygen:; HashConsistency, Class, DeclareFileName, DeclareFileLine, Dictionary, ImplFileName, ImplFileLine, IsA, ShowMembers, StreamerNVirtual. They can be easily re-enabled by changing in the Doxyfile:; ENABLED_SECTIONS = HIDDEN_SYMBOLS",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9596#issuecomment-1017263976:184,Hash,HashConsistency,184,https://root.cern,https://github.com/root-project/root/issues/9596#issuecomment-1017263976,1,['Hash'],['HashConsistency']
Security,I appreciate the build option! Though I'm a little concerned that the name of the build option is not self explanatory enough for everyone. Why not `-Daddress-sanitizer` or so to make it very clear?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5066#issuecomment-592428824:159,sanitiz,sanitizer,159,https://root.cern,https://github.com/root-project/root/pull/5066#issuecomment-592428824,2,['sanitiz'],['sanitizer']
Security,I believe it builds the merged result; it passed. Is it possible to access build artifacts from Jenkins? We could add the standalone generation to Jenkins and make source and binary dists for several systems. (In a future PR).,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1680#issuecomment-369352124:68,access,access,68,https://root.cern,https://github.com/root-project/root/pull/1680#issuecomment-369352124,1,['access'],['access']
Security,I can look into this. But I don't have access to an intel mac machine to reproduce this issue.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14598#issuecomment-1929430089:39,access,access,39,https://root.cern,https://github.com/root-project/root/issues/14598#issuecomment-1929430089,1,['access'],['access']
Security,I can't see the failing logs because I must authenticate to CERN SSO so can't help here :-(,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1343#issuecomment-348699356:44,authenticat,authenticate,44,https://root.cern,https://github.com/root-project/root/pull/1343#issuecomment-348699356,1,['authenticat'],['authenticate']
Security,"I cannot tell whether it's better to expose this header to `rootcling` and add it to modules.map, or vice versa... @amadio what's your take? IIUC, before your change, `ROOT/Rconfig.h` wasn't part of the headers passed to `rootcling`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3299#issuecomment-456759722:37,expose,expose,37,https://root.cern,https://github.com/root-project/root/pull/3299#issuecomment-456759722,1,['expose'],['expose']
Security,"I chose to put this issue in a separate PR since there might be a better fix than the one proposed here. The loops that fills the ci1 and c12 vectors are defined as:. for (Int_t i=1; i<=fH1->GetNbinsX();++i) {. while the loop that reads the values back is defined as:. for (Int_t i=0; i<=fH1->GetNbinsX();++i) {. i.e. it has one more iteration (since it starts at 0 instead of 1). So on the last iteration it accesses the vector beyond its last element. This PR just adds a protection and makes sure the out-of-bounds element is not read and replaces it with a zero. While this makes the tests not crash, I am not sure there isn't some other bug here, and that the proper fix is something else. That the code tries to read one more value from the vector than it writes is suspicious.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1639:409,access,accesses,409,https://root.cern,https://github.com/root-project/root/pull/1639,1,['access'],['accesses']
Security,"I collect errors from the Fedora/EPEL build system (a.k.a. koji), which is not very interactive. You can upload a source RPM to build and collect the results. You need to be a member of the ""packager"" group in the Fedora project to use it though, it is not open to everyone. Fedora also has a set of development machines available where, again, members of the ""packager"" group can log in and run mock (i.e. chroot) builds. However, there is currently no s390x test machine available: https://fedoraproject.org/wiki/Test_Machine_Resources_For_Package_Maintainers. [Edit: my previous comment about the lack of disk space was actually referring to the ppc64le test machine, not s390x.]; So, to answer your question, I don't have access to any system I can share. If you have proposed changes or patches I can run tests.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12426#issuecomment-1459863861:726,access,access,726,https://root.cern,https://github.com/root-project/root/issues/12426#issuecomment-1459863861,1,['access'],['access']
Security,"I don't disagree with the feel of hackiness. I'm not a big fan of making other classes friends of `RFieldBase` either because it is a large class. For the connect methods to work from the other end, the page source/sink would need to become a friend, and they are themselves large classes. Less so for the `RNTupleFillContext`. Another option is to have field proxies for the three methods that expose these methods only to certain classes, like; ```; class RCommitClusterProxy {; friend RNTupleFillContext;; static CommitCluster(RFieldBase &field) { field.CommitCluster(); }; };; ```. That similar to the current approach, with a little more code but C++ enforcing who can call the three methods.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14591#issuecomment-1929758520:395,expose,expose,395,https://root.cern,https://github.com/root-project/root/pull/14591#issuecomment-1929758520,1,['expose'],['expose']
Security,I don't have access to a Mac. Maybe @couet can try?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13834#issuecomment-1755651050:13,access,access,13,https://root.cern,https://github.com/root-project/root/issues/13834#issuecomment-1755651050,1,['access'],['access']
Security,"I don't have access to lxplus, unfortunately. I can try to set up the docker container, but my docker knowledge is quite poor. I guess I can take it as an exercise.; I will have time to play with this next week.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12496#issuecomment-1479838534:13,access,access,13,https://root.cern,https://github.com/root-project/root/issues/12496#issuecomment-1479838534,1,['access'],['access']
Security,"I don't think randomizing will increase test coverage. In any case, some tests depend on others, so running them in random order will cause them to fail. For example, in the TBufferMerger tests, one test writes in parallel to a file and a later test checks the data integrity of the file. If the second test is run before the first, it will fail, which is what happened above.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4029#issuecomment-507949722:266,integrity,integrity,266,https://root.cern,https://github.com/root-project/root/pull/4029#issuecomment-507949722,1,['integrity'],['integrity']
Security,I don’t have access to a laptop right now. @hahnjo can you revert?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11571#issuecomment-1280494366:13,access,access,13,https://root.cern,https://github.com/root-project/root/pull/11571#issuecomment-1280494366,1,['access'],['access']
Security,"I find this surprising; it used to affect only lsan when this was implemented. I trust that you verified this, though. The only other thing I can say is that maybe now it's a good idea to verify whether it's possible to switch on leak sanitizer. With llvm 5, this just wasn't possible, and JITted functions also created problems because their memory management escaped asan. That's why the exitcode was hardcoded to 0. Maybe you can switch it on once, and see how much explodes.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10005#issuecomment-1056635066:235,sanitiz,sanitizer,235,https://root.cern,https://github.com/root-project/root/pull/10005#issuecomment-1056635066,1,['sanitiz'],['sanitizer']
Security,"I found how to disable the sanitizer with `__declspec(no_sanitize_address),` but it doesn't prevent `heap-use-after-free` at run-time. So my solution (hack) for the time being is the following:; ```; diff --git a/core/base/src/TObject.cxx b/core/base/src/TObject.cxx; index 1fdabcc2fd..c5358d1f21 100644; --- a/core/base/src/TObject.cxx; +++ b/core/base/src/TObject.cxx; @@ -117,11 +127,15 @@ bool DeleteChangesMemoryImpl(); // can guess this is always the case and we can rely on the changes to fBits made; // by ~TObject to detect use-after-delete error (and print a message rather than; // stop the program with a segmentation fault); +#ifndef __SANITIZE_ADDRESS__; if ( *o_fbits != 0x01000000 ) {; // operator delete tainted the memory, we can not rely on TestBit(kNotDeleted); return true;; }; return false;; +#else; + return true;; +#endif; }; ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9445#issuecomment-2378694443:27,sanitiz,sanitizer,27,https://root.cern,https://github.com/root-project/root/issues/9445#issuecomment-2378694443,1,['sanitiz'],['sanitizer']
Security,"I get a build failure on Ubuntu22.04 when ROOT tries to build FTGL itself. The error comes from lacking a library at the linker stage, viz. `libbrotlicommon.so`. ```; [ 51%] Linking CXX shared library ../../lib/libGraf.so; 	cd /home/graemes/tmp/root-build-nobrotli/graf2d/graf && /usr/bin/cmake -E cmake_link_script CMakeFiles/Graf.dir/link.txt --verbose=1; 	/usr/bin/c++ -fPIC -std=c++17 -Wno-implicit-fallthrough -Wno-noexcept-type -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread -O3 -DNDEBUG -Wl,--no-undefined -Wl,--hash-style=""both"" -shared -Wl,-soname,libGraf.so -o ../../lib/libGraf.so CMakeFiles/Graf.dir/src/TArc.cxx.o CMakeFiles/Graf.dir/src/TArrow.cxx.o CMakeFiles/Graf.dir/src/TAttImage.cxx.o CMakeFiles/Graf.dir/src/TBox.cxx.o CMakeFiles/Graf.dir/src/TCandle.cxx.o CMakeFiles/Graf.dir/src/TCrown.cxx.o CMakeFiles/Graf.dir/src/TCurlyArc.cxx.o CMakeFiles/Graf.dir/src/TCurlyLine.cxx.o CMakeFiles/Graf.dir/src/TCutG.cxx.o CMakeFiles/Graf.dir/src/TDiamond.cxx.o CMakeFiles/Graf.dir/src/TEllipse.cxx.o CMakeFiles/Graf.dir/src/TFrame.cxx.o CMakeFiles/Graf.dir/src/TGaxis.cxx.o CMakeFiles/Graf.dir/src/TGraphPolar.cxx.o CMakeFiles/Graf.dir/src/TGraphPolargram.cxx.o CMakeFiles/Graf.dir/src/TGraphQQ.cxx.o CMakeFiles/Graf.dir/src/TImage.cxx.o CMakeFiles/Graf.dir/src/TLatex.cxx.o CMakeFiles/Graf.dir/src/TLegend.cxx.o CMakeFiles/Graf.dir/src/TLegendEntry.cxx.o CMakeFiles/Graf.dir/src/TLine.cxx.o CMakeFiles/Graf.dir/src/TLink.cxx.o CMakeFiles/Graf.dir/src/TMarker.cxx.o CMakeFiles/Graf.dir/src/TMathText.cxx.o CMakeFiles/Graf.dir/src/TPave.cxx.o CMakeFiles/Graf.dir/src/TPaveLabel.cxx.o CMakeFiles/Graf.dir/src/TPaveStats.cxx.o CMakeFiles/Graf.dir/src/TPaveText.cxx.o CMakeFiles/Graf.dir/src/TPavesText.cxx.o CMakeFiles/Graf.dir/src/TPie.cxx.o CMakeFiles/Graf.dir/src/TPieSlice.cxx.o CMakeFiles/Graf.dir/src/TPoints.cxx.o CMakeFiles/Graf.dir/src/TPolyLine.cxx.o CMakeFiles/Graf.dir/src/TTF.cxx.o CMakeFiles/Graf.dir/src/TText.cxx.o CMakeFiles/Graf.dir/src/TWbox.cxx.o CMakeFi",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11239:540,hash,hash-style,540,https://root.cern,https://github.com/root-project/root/issues/11239,1,['hash'],['hash-style']
Security,I guess it should be copied automatically as ROOT.tag. The Scrip dubbing the doc are here:; https://github.com/root-project/rootspi/tree/master/rdoc; The script copying the doc at the right pace is https://github.com/root-project/rootspi/blob/master/rdoc/synchtml.sh . It copies the folder where the doc was generated in the right place to be accessed fro the web site. ROOT.qch should be like ROOT.tag,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8781#issuecomment-1009857879:343,access,accessed,343,https://root.cern,https://github.com/root-project/root/issues/8781#issuecomment-1009857879,1,['access'],['accessed']
Security,"I had a look ant it seems very nice. About the discrepancy between `REntry::Get` and `RNTupleModel::MakeField`, one may argue that `MakeField` might return a raw pointer too as the memory of the field is owned by the model. OTOH, while it's kind of easy to keep track of the lifetime of an `REntry` (I get it, I use it, I drop it), it seems more difficult to keep track of `RNTupleModel` lifetime, which is bound to the lifetime of `RNTupleWriter`.; Using raw pointers from `MakeField` is fine if we assume that the writer of the code only accesses the fields within the scope of `RNTupleWriter` (but the fields are accessible before the writer is created... more confusing). My personal opinion is that the `CreateEntry` way is the best option for the single thread case too:; - I define a model; - create a writer based on the model; - get the *buffer* (`REntry`) to write to (one per thread, for example, even if I have only one thread); - commit the *buffer* to the writer. In this way I own the `REntry`, but it has a layout in memory that is directly understood by the serialization process without the need of extra copies. We can also think of a way of constructing the writer from an *inlined* model, without the need for repeated calls to `MakeField`. Something like:; ```cpp; auto ntuple = RNTupleWriter::Recreate({; Field<std::uint32_t>(""id""),; Field<std::vector<float>>(""vpx""),; Field<std::vector<float>>(""vpy""),; Field<std::vector<float>>(""vpz""); }, ""NTuple"", kNTupleFileName);. auto entry = ntuple->CreateEntry();; // cache the pointer for faster access in single thread,; // but I could use TLS (or a framework equivalent) for multithreading; auto& vpx = *entry->Get<std::vector<float>>(""vpx"");; for(auto& event: all_events) {; vpx.clear();; vpx.push_back(42.);; ntuple->Fill(entry); // I would prefer ntuple->Write(entry) but it's a matter of taste; }; ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8688#issuecomment-883396155:540,access,accesses,540,https://root.cern,https://github.com/root-project/root/pull/8688#issuecomment-883396155,6,['access'],"['access', 'accesses', 'accessible']"
Security,"I have not yet tried building llvm. Will try later this week. nvc++ has an implementation for std::par which allows seamless execution of both CPUs and NVIDIA GPUs (depending on a compile time flag). This could be a huge win for GPU portability (once other manufactures create the AMD/Intel backends), and allows much simpler user access to GPUs without having to learn CUDA (or hip, dpc++, etc). I was trying to compile some parts of a project with gcc and the bits that use std::par with nvc++, but immediately got some runtime segfaults at startup, so tried to compile the whole thing (including ROOT) with nvc++.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9036#issuecomment-933532217:331,access,access,331,https://root.cern,https://github.com/root-project/root/issues/9036#issuecomment-933532217,2,['access'],['access']
Security,"I hope that now solution is better.; I decide not to change signature of existing static methods like `TGClient::Instance()`, ; but just register globals at the place where real variable can be accessed. The only assumption - `gPtr2Interpreter` remains nullptr. It is now a case. Function was used on Windows with ROOT5; now it is deactivated. If Bertrand @bellenot decides, that it is needed one need to check once again code in TInterpreter.cxx",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3208#issuecomment-458526633:194,access,accessed,194,https://root.cern,https://github.com/root-project/root/pull/3208#issuecomment-458526633,1,['access'],['accessed']
Security,"I just looked in the code while want to add support of TGeoTesselated to JSROOT.; Here is first attempt: https://jsroot.gsi.de/dev/examples.htm#tgeo_tess. Found and fixed issues:; * Fix potential memory access problem in new TGeoFacet; * In assign operator one should release memory before allocating new one; * `fIvert` member was not copied in assign operator; * Eliminate copy constructor and assign operator for TGeoTesselated (not used, default is ok). For several TGeo classes like TGeoPolygon, TGeoPcon, TGeoPgon one should declare assign operator and copy constructor as deleted or really implement them. Otherwise if anybody use them, this will produce memory leak / seg. violation.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4923:203,access,access,203,https://root.cern,https://github.com/root-project/root/pull/4923,1,['access'],['access']
Security,"I left for now the check on the list, actually that list contains now only two items since only `TChain` needs an explicit insertion of pythonizations. According to the behaviour of inheritance of pythonizations, user subclasses of `TTree` will inherit the pythonizations defined by `TTree` as long as they do not redefine the corresponding methods in C++. If that is the case, they can always re-inject such pythonizations if they are interested, similarly to what we do with `TChain`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2799#issuecomment-432211756:397,inject,inject,397,https://root.cern,https://github.com/root-project/root/pull/2799#issuecomment-432211756,1,['inject'],['inject']
Security,"I made first prototype of redrawing `TEfficiency`, `THStack`, `TMultiGraph` objects with different draw options. https://jsroot.gsi.de/dev/examples.htm#tefficiency_docu1. You can access `TEfficiency` context menu either via derived objects `TGraphAssymErrors` or via `?` pad button which allows to access context menu of any drawn objects.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/15851#issuecomment-2188891034:179,access,access,179,https://root.cern,https://github.com/root-project/root/issues/15851#issuecomment-2188891034,2,['access'],['access']
Security,"I may be missing something but I seem to be unable to compile ROOT 6.28/04 with c++14. I use. ```; cmake ../root/root-6.28.04/ -DCMAKE_CXX_VERSION=14; ```. And get the following confirmation at the end of the cmake output. ```; System Linux-3.10.0-1160.88.1.el7.x86_64; Processor 36 core Intel(R) Xeon(R) CPU E5-2695 v4 @ 2.10GHz (x86_64); Build type Release; Compiler GNU 6.3.0; Compiler flags:; C -pipe -Wall -W -pthread -O3 -DNDEBUG; C++ -std=c++14 -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread -O3 -DNDEBUG; Linker flags:; Executable -rdynamic; Module; Shared -Wl,--no-undefined -Wl,--hash-style=""both""; ```; As far as I can tell, gcc6.3.0 should have full c++14 capability. However, eventually I get the following errors:. ```; Consolidate compiler generated dependencies of target Dictgen; Consolidate compiler generated dependencies of target ClingUtils; Consolidate compiler generated dependencies of target MetaCling; [ 78%] Built target ClingUtils; [ 78%] Built target Dictgen; Consolidate compiler generated dependencies of target rootcling_stage1; [ 78%] Built target rootcling_stage1; [ 78%] Built target MetaCling; [ 78%] Generating G__Core.cxx, ../lib/Core.pcm; [ 78%] Linking CXX shared library ../../../lib/libCling.so; /home/root-build/etc/cling/std.modulemap:462:12: error: header 'bits/invoke.h' not found; header ""bits/invoke.h""; ^; input_line_1:1:10: note: submodule of top-level module 'std' implicitly imported here; #include <new>; ^; Warning in cling::IncrementalParser::CheckABICompatibility():; Failed to extract C++ standard library version.; While building module 'Core':; While building module 'Cling_Runtime' imported from input_line_2:1:; While building module 'Cling_Runtime_Extra' imported from /home/root-build/etc/cling/Interpreter/RuntimeUniverse.h:27:; /home/root-build/etc/cling/std.modulemap:462:12: error: header 'bits/invoke.h' not found; header ""bits/invoke.h""; ^; /home/root-build/etc/cling/Interpreter/DynamicExprInfo.h:13:10: note: ",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13453:611,hash,hash-style,611,https://root.cern,https://github.com/root-project/root/issues/13453,1,['hash'],['hash-style']
Security,"I merge your PR, next two days I will be out of Internet access",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4613#issuecomment-551638875:57,access,access,57,https://root.cern,https://github.com/root-project/root/pull/4613#issuecomment-551638875,1,['access'],['access']
Security,"I noticed that RooArgList doesn't handle the case where idx is negative. But also thought it would be nice to add support for use of negative numbers to access the list from the back, so it behaves like a python list in this respect. I noticed that there is nice operator[] behavior in 6.24 (uses at and throws exception) but this isn't in master???",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8174:153,access,access,153,https://root.cern,https://github.com/root-project/root/pull/8174,1,['access'],['access']
Security,"I realized we were missing a test for accessing a view out of bounds, so I added one.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16789:38,access,accessing,38,https://root.cern,https://github.com/root-project/root/pull/16789,1,['access'],['accessing']
Security,"I still get an error:; ```; /Users/couet/git/zevis/ZevLib/src/ZCanvas.cxx:361:17: error: member access into incomplete type 'TCanvasImp'; fCanvasImp->GetWindowGeometry(fWindowTopX, fWindowTopY,; ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6344#issuecomment-693357268:96,access,access,96,https://root.cern,https://github.com/root-project/root/issues/6344#issuecomment-693357268,1,['access'],['access']
Security,"I strongly favour a quick integration of this PR but, @pcanal before integrating I think there are other steps besides the suggested doc + tutorials + tests. For example a double check by @amadio about the CMake code to find arrow and arrow itself in our externals and/or inclusion of arrow in the built-ins (needs discussion). ; @ktf, the tutorials for this TDS should go in https://github.com/root-project/root/tree/master/tutorials/dataframe . You can punch in the C++ and Python version of the example you'd like to propose: ROOT will pick them up as tests for the CI and the doc machinery will put them on the web https://root.cern/doc/master/group__tutorial__tdataframe.html accessible also as rendered notebooks and notebooks runable in [SWAN](https://swan.cern.ch).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1712#issuecomment-371738541:681,access,accessible,681,https://root.cern,https://github.com/root-project/root/pull/1712#issuecomment-371738541,1,['access'],['accessible']
Security,I think as @hahnjo is running as non-cms user so he might not have rights to access this file. I am looking how I can make /eos/cms/store/user/cmsbuild readable by all CERN users,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13429#issuecomment-1686312844:77,access,access,77,https://root.cern,https://github.com/root-project/root/issues/13429#issuecomment-1686312844,1,['access'],['access']
Security,"I think in ROOT we call things that do N -> N ""Map"" and things that do N -> void ""Foreach"". TExecutor should expose a `Foreach`, I am not sure why it does not (e.g. `TSequentialExecutor` and `TThreadExecutor` have it).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7872#issuecomment-819539491:109,expose,expose,109,https://root.cern,https://github.com/root-project/root/issues/7872#issuecomment-819539491,1,['expose'],['expose']
Security,"I think it's a good point not to have too many nobs for turning on and off parallelism. How about we expose the `SetTaskScheduler()` interface from `RNTupleReader` and `RNTupleWriter`. So you'd either use all of IMT, or you explicitly diverge in RNTuple by providing your own task scheduler.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8334#issuecomment-856888414:101,expose,expose,101,https://root.cern,https://github.com/root-project/root/pull/8334#issuecomment-856888414,1,['expose'],['expose']
Security,"I think the 'hack' is fine and appropriate since one of the thing we can do after this testing is check for double deletes! So when the sanitizer is on, it does not really hurt to mark this feature as disabled.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9445#issuecomment-2379301175:136,sanitiz,sanitizer,136,https://root.cern,https://github.com/root-project/root/issues/9445#issuecomment-2379301175,1,['sanitiz'],['sanitizer']
Security,"I think the argument for removing `IsAvailable` is that it doesn't really have a good use case. You can't use it to check if calls to the `RIoUring` constructor will succeed. It's only exposed if the `uring` feature flag is turned on, which nominally means that `io_uring` should be there. Client code can implement it themselves without access to `RIoUring` internals, because it's just a static bool checking whether the constructor threw.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7942#issuecomment-824241534:185,expose,exposed,185,https://root.cern,https://github.com/root-project/root/pull/7942#issuecomment-824241534,2,"['access', 'expose']","['access', 'exposed']"
Security,I think the underlying problem is that `SetEntriesRange` does not have enough input validation. We could (and should) error out at the point `SetEntriesRange` is called if `start > nEntries`.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10774#issuecomment-1157948335:84,validat,validation,84,https://root.cern,https://github.com/root-project/root/issues/10774#issuecomment-1157948335,1,['validat'],['validation']
Security,"I think we gain by having in 6.28 to expose this to the users. This will fix issues happening with fits using the `G` option (external gradient) and in addition, will give us more feedback on using an external Hessian computation. This will be certainly useful. ; In addition, the PR, improves significantly the Minuit2/Fumili algorithm, especially for the case of binned likelihood fit. I think also this is worth having in 6.28.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11755#issuecomment-1357810874:37,expose,expose,37,https://root.cern,https://github.com/root-project/root/pull/11755#issuecomment-1357810874,2,['expose'],['expose']
Security,"I thought it was a TBrowser vs RBrowser problem. If it's an invalid memory access it should be easy to check where it happens and what's the stacktrace, maybe it's a bug in the tutorial? what's the stacktrace?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10436#issuecomment-1106121685:75,access,access,75,https://root.cern,https://github.com/root-project/root/pull/10436#issuecomment-1106121685,1,['access'],['access']
Security,"I thought of moving it from a static class member (what it was before) to a object member.; Normally this would be better, but then there may be problems when reading files in GDML:; what should be the proper default there, a TGeoManager is the result of reading a GDML file....; However, having the static in an inline accessor is probably a mistake. Should I submit a PR ; with a proper function ?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7165#issuecomment-777639801:320,access,accessor,320,https://root.cern,https://github.com/root-project/root/pull/7165#issuecomment-777639801,1,['access'],['accessor']
Security,"I tried with the reported case and the debugger on gdb and indeed k=5 is accessed, but I have no clue why it's not crashing",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15316#issuecomment-2075650681:73,access,accessed,73,https://root.cern,https://github.com/root-project/root/pull/15316#issuecomment-2075650681,1,['access'],['accessed']
Security,"I understand where `PySequence_Check` is coming from (there is e.g. a standard Python `iterator` that will try indexing an object from 0 with integers), but for C++ bound containers (or C++ objects in general), the right question to ask is whether they implement the iterator protocol. E.g. an `std::list` is a sequence and can be iterated over, but not through indexing, as it's not random-access. For `std::map` the same issues exist as for Python, but of course with no special-case exception made in `PySequence_Check` and `std::map<int, T>` is a particular hot mess. Then there's the fact that `operator[](T)` can be redefined in both C++ and Python to mean whatever ... Note that an iterator protocol check would be for `hasattr(obj, '__iter__')` and not `iter(obj)`, as the latter would succeed b/c of that index-based `iterator` mentioned. I'm not really convinced by the `is_sequence()` method proposed, as it would currently fail for this:; ```; import cppyy. cppyy.cppdef(""""""\; struct MyStruct {};; MyStruct* fff = nullptr;; """"""). def is_sequence(obj):; try:; obj[0]; return True; except TypeError as e:; print(e); return False. print(is_sequence(cppyy.gbl.fff)); ```; which prints `True` as all data members are presumed both `*` and `[]`. This should perhaps also be extended to function return types, but returning arrays that way seems to be much less common in practice. Or at least, I've never had that request. Regardless, the problem remains that C++ is simply ambiguous here and I even think it would be fair to assume that `obj[0]` is only every done if `obj` is in fact an array. (Currently not the case, but why not.). Maybe `__getitem__` can be refined to only appear after lookup through `__getattr__`, i.e. to make it fully instance-specific. The result might be confusing as it would still have to be permissive to cover all cases. However, if the check for `__getitem__` is then performed on the class, instead of on the object, it would give you the old behavior back. (I ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/15161#issuecomment-2057616934:391,access,access,391,https://root.cern,https://github.com/root-project/root/issues/15161#issuecomment-2057616934,2,['access'],['access']
Security,"I wonder why CMake doesn't notice ""no network access""; this sounds like a good feature for it to have... I'd propose we do not offer builtins that require network access if we detect that no network is present, along the lines of https://stackoverflow.com/questions/62214621/how-to-check-for-internet-connection-with-cmake-automatically-prevent-fails-if. If you then do `-Dfail-on-missing=On -Dimt` and builtin-tbb gets turned off, and no system tbb is found, you'd get a nice error message. I find this more helpful than adding another config option. Is that an acceptable approach?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8292#issuecomment-863178474:46,access,access,46,https://root.cern,https://github.com/root-project/root/issues/8292#issuecomment-863178474,2,['access'],['access']
Security,"I would like to complement all the comments made to this nice improvements with a few thoughts from a different perspective.; It's true that CompileMacro has threading issues at the moment. We see this for example when during an RDF distributed execution HTCondor workers (""pilot processes"") are spawned and subsequent tasks that need to compile macros/code cells are executed by them. However, if I understand correctly, we could avoid completely all code interpretation (which can be thread unsafe and memory consuming) after the first compilation of the macro/code cell. This could be achieved if we had in place a thread safe mechanism to recognise the code to be compiled, and, if already compiled within the same process, not compiled again, e.g. some hashing, instead of the current time stamp check (not like ccache, but somehow being inspired by it). Then a worker would behave as follows:; - first task: compile macro and load library; - second task: hash macro code, and, if already compiled, no-op; - ...; - n-th task: hash macro code, and, if already compiled, no-op; This would have the advantage of being manageable from the thread-safety point of view and consume just the memory necessary to interpret the macro once.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13655#issuecomment-1762173995:758,hash,hashing,758,https://root.cern,https://github.com/root-project/root/pull/13655#issuecomment-1762173995,3,['hash'],"['hash', 'hashing']"
Security,I would not use `gStyle` as initializer in header files.; In some special cases header files may be accessed without loading appropriate library - and then gStyle can be also not initialized. ; I would prefer to move such members initialization into `TRatioPlot` constructor.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15893#issuecomment-2182562596:100,access,accessed,100,https://root.cern,https://github.com/root-project/root/pull/15893#issuecomment-2182562596,1,['access'],['accessed']
Security,"I'd like to test that issue #9020 is triggered also on our Fedora34 node, to validate #9065",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9066:77,validat,validate,77,https://root.cern,https://github.com/root-project/root/pull/9066,1,['validat'],['validate']
Security,"I'll try this out, thank you! I see a [restricted project](https://reviews.llvm.org/herald/transcript/1682123/) has been added to the review: if you can access it, does it say anything relevant?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10861#issuecomment-1398518681:153,access,access,153,https://root.cern,https://github.com/root-project/root/issues/10861#issuecomment-1398518681,1,['access'],['access']
Security,"I'm in the process of redoing parts of this patch: it fails to provide the proper access rules, as it takes them from the FunctionDecl. If the using in the derived class changes the access, then that is lost. Further, templates need their own sets of using and that requires changes in Cling's LookupHelper, as well as in ROOT. (This is all needed for proper shared_ptr support on Windows.)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3640#issuecomment-481263585:82,access,access,82,https://root.cern,https://github.com/root-project/root/pull/3640#issuecomment-481263585,2,['access'],['access']
Security,I'm not authorized ... can you please do it?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11180#issuecomment-1217674046:8,authoriz,authorized,8,https://root.cern,https://github.com/root-project/root/pull/11180#issuecomment-1217674046,1,['authoriz'],['authorized']
Security,"I'm probably missing an easy explanation: Why do we need a user-accessible `RField<ClusterSize_t>` at all? On reading, I would expect to use `RNTupleCardinality`, no?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16644#issuecomment-2402755542:64,access,accessible,64,https://root.cern,https://github.com/root-project/root/pull/16644#issuecomment-2402755542,1,['access'],['accessible']
Security,I'm seeing the following on macOS:; ```; [ 69%] Linking CXX executable src/rootcling_stage1; ld: warning: direct access in function 'clang::RecursiveASTVisitor<cling::AutoFixer>::TraverseTemplateTemplateParmDecl(clang::TemplateTemplateParmDecl*)' from file '../../interpreter/llvm/src/lib/libclingInterpreter.a(AutoSynthesizer.cpp.o)' to global weak symbol 'guard variable for clang::TemplateTemplateParmDecl::getDefaultArgument() const::NoneLoc' from file '../dictgen/CMakeFiles/Dictgen.dir/src/DictSelectionReader.cxx.o' means the weak symbol cannot be overridden at runtime. This was likely caused by different translation units being compiled with different visibility settings.; ld: warning: direct access in function 'clang::RecursiveASTVisitor<cling::AutoFixer>::TraverseTemplateTemplateParmDecl(clang::TemplateTemplateParmDecl*)' from file '../../interpreter/llvm/src/lib/libclingInterpreter.a(AutoSynthesizer.cpp.o)' to global weak symbol 'clang::TemplateTemplateParmDecl::getDefaultArgument() const::NoneLoc' from file '../dictgen/CMakeFiles/Dictgen.dir/src/DictSelectionReader.cxx.o' means the weak symbol cannot be overridden at runtime. This was likely caused by different translation units being compiled with different visibility settings.; ld: warning: direct access in function 'clang::RecursiveASTVisitor<cling::AutoFixer>::TraverseTemplateTemplateParmDecl(clang::TemplateTemplateParmDecl*)' from file '../../interpreter/llvm/src/lib/libclingInterpreter.a(AutoSynthesizer.cpp.o)' to global weak symbol 'clang::TemplateTemplateParmDecl::getDefaultArgument() const::NoneLoc' from file '../dictgen/CMakeFiles/Dictgen.dir/src/DictSelectionReader.cxx.o' means the weak symbol cannot be overridden at runtime. This was likely caused by different translation units being compiled with different visibility settings.; ld: warning: direct access in function 'clang::RecursiveASTVisitor<cling::AutoFixer>::TraverseTemplateTemplateParmDecl(clang::TemplateTemplateParmDecl*)' from file '../../in,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12156#issuecomment-1512021455:113,access,access,113,https://root.cern,https://github.com/root-project/root/issues/12156#issuecomment-1512021455,2,['access'],['access']
Security,"I've pushed a fix for the issue to this branch: https://github.com/stwunsch/root/tree/impl_array_interface_2. You can solve the problem by adding the `property` in `ROOT.py` and not in the `Pythonize.cxx`. Then, you can bind the falsely bound method with the `NULL` object to a property through a proxy function without python trying to access the `NULL` object. Not the nicest solution though...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1777#issuecomment-378980409:337,access,access,337,https://root.cern,https://github.com/root-project/root/pull/1777#issuecomment-378980409,1,['access'],['access']
Security,IFAM.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/TERENAeSciencePersonalCA3.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/dbf09133.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/PK-Grid-2007.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/dbf09133.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/8f016f43.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/TSU-GE.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/8f016f43.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/PKIUNAMgrid.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/TSU-GE.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/PKIUNAMgrid.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/GermanGrid.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/TSU-GE.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/PKIUNAMgrid.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/d0a33f8e.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/d0a33f8e.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/dd4b34ea.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/4b2783ac.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/TSU-GE.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/4b2783ac.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/dd4b34ea.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/7f4db168.namespaces,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8092#issuecomment-840048181:28970,secur,security,28970,https://root.cern,https://github.com/root-project/root/issues/8092#issuecomment-840048181,2,"['certificate', 'secur']","['certificates', 'security']"
Security,"IIUC the patch is not a fix, it's to expose the problem even without using asan. I guess we need to update `TClassEdit::STLArgs` to support RVec, we forgot when moving it to the collection proxy mechanism.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7903#issuecomment-821325393:37,expose,expose,37,https://root.cern,https://github.com/root-project/root/issues/7903#issuecomment-821325393,1,['expose'],['expose']
Security,"ISSUER); >>> * Peer's Certificate issuer is not recognized.; >>> * Closing connection 0; >>> curl: (60) Peer's Certificate issuer is not recognized.; >>> More details here: http://curl.haxx.se/docs/sslcerts.html <https://can01.safelinks.protection.outlook.com/?url=http%3A%2F%2Fcurl.haxx.se%2Fdocs%2Fsslcerts.html&data=04%7C01%7Cdqing%40triumf.ca%7C96f8066e53054f808afe08d9156b7b02%7Cc20535109cb34679a2d38f442e03b587%7C1%7C0%7C637564373643147501%7CUnknown%7CTWFpbGZsb3d8eyJWIjoiMC4wLjAwMDAiLCJQIjoiV2luMzIiLCJBTiI6Ik1haWwiLCJXVCI6Mn0%3D%7C1000&sdata=NTi7%2BFO82QY6dKBp1en9fAODpFl%2FzZ0cHCZ3DsJzOIM%3D&reserved=0>; >>> ; >>> curl performs SSL certificate verification by default, using a ""bundle""; >>> of Certificate Authority (CA) public keys (CA certs). If the default; >>> bundle file isn't adequate, you can specify an alternate file; >>> using the --cacert option.; >>> If this HTTPS server uses a certificate signed by a CA represented in; >>> the bundle, the certificate verification probably failed due to a; >>> problem with the certificate (it might be expired, or the name might; >>> not match the domain name in the URL).; >>> If you'd like to turn off curl's verification of the certificate, use; >>> the -k (or --insecure) option.; >>> ***@***.*** t5]$ ; >> ; >> ; >> I am unfamiliar with how to use curl with X509 and everything I tried so far has not worked. eg; >> curl -v https://webdav.lcg.triumf.ca:2880/atlas/atlaslocalgroupdisk/rucio/user/desilva/a1/a8/myFile.1.root <https://can01.safelinks.protection.outlook.com/?url=https%3A%2F%2Fwebdav.lcg.triumf.ca%3A2880%2Fatlas%2Fatlaslocalgroupdisk%2Frucio%2Fuser%2Fdesilva%2Fa1%2Fa8%2FmyFile.1.root&data=04%7C01%7Cdqing%40triumf.ca%7C96f8066e53054f808afe08d9156b7b02%7Cc20535109cb34679a2d38f442e03b587%7C1%7C0%7C637564373643157499%7CUnknown%7CTWFpbGZsb3d8eyJWIjoiMC4wLjAwMDAiLCJQIjoiV2luMzIiLCJBTiI6Ik1haWwiLCJXVCI6Mn0%3D%7C1000&sdata=56%2Fzdx8AYUMDio2HJ6lKgj%2BEhDVoS5nYEh69aXHYZS8%3D&reserved=0> --key ~/.globus/userkey.pem --cert ~/",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8092#issuecomment-839972447:4832,certificate,certificate,4832,https://root.cern,https://github.com/root-project/root/issues/8092#issuecomment-839972447,3,['certificate'],['certificate']
Security,Identifiers containing a double underscore are reserved in C++. We have to do this now because we kind of expose `__rdf` to RDataSource; implementations via the (unreleased) `#var` aliasing mechanism.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8754:106,expose,expose,106,https://root.cern,https://github.com/root-project/root/pull/8754,1,['expose'],['expose']
Security,"If I have understood well, the issue is that now the Functor class passed to the RooMinimizer/Fitter contains a pointer to the RooMinimizerFcn that can disappear. I think the problem is that we expose the Fitter class in the RooMinimizer and it is a static pointer. The Fitter returns a cloned copy of the FCN (the functor) and it can be alive when the RooMinimizer and RooMinimizerFcn are gone. A possible solution is to change the RooMinimizer to use just the ROOT::Math::Minimizer and do not expose the functor to the user. I think this can be fixed later",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12348#issuecomment-1440115911:194,expose,expose,194,https://root.cern,https://github.com/root-project/root/pull/12348#issuecomment-1440115911,2,['expose'],['expose']
Security,"If a TTree contains. a branch ""v"" with a leaf ""a"", created with t.Branch(""v"", &a, ""a/I""); a branch ""w"" containing a split struct that has a datamember ""v"" with a datamember ""a"". constructing TTreeReaderValue<int>(r, ""v.a"") attaches the reader to ""w.v.a"" instead of ""v.a"". Note that in this scenario there is no way to access ""v.a"", because constructing TTreeReaderValue<int>(r, ""v"") attaches to ""w.v""",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2645:318,access,access,318,https://root.cern,https://github.com/root-project/root/pull/2645,1,['access'],['access']
Security,"If specified, enforce unique key every time client connect to; web window. Once key used, it is not possible to use it again for reconnect.; If one wants to connect to window again, one should; call RWebWindow::Show() method again. Now parameter is off, but once tested - will be enabled by default.; This should significantly increase security for web applications. Fix problem with random seed for key generation . Add warning when browser on remote node is started - by checking DISPLAY variable",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11213:336,secur,security,336,https://root.cern,https://github.com/root-project/root/pull/11213,1,['secur'],['security']
Security,"If the file is access in parallel (which it is when IMT is on, for example for GetEntry) then that section **needs** to be protected otherwise you have a list that is being read and written to at the same time. [What I meant to add is that it is plausible that for the TFile use of R__RWLOCK_ACQUIRE_READ/Write, one could consider replacing the```if (ROOT::Internal::IsParTreeProcessingEnabled()``` which ```if (this->TestBit(kEnableMultiThreadAccess))``` ... maybe).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5288#issuecomment-608547004:15,access,access,15,https://root.cern,https://github.com/root-project/root/pull/5288#issuecomment-608547004,1,['access'],['access']
Security,"If the method `__str__` is already defined on the C++ side, don't inject; the cling based pretty printing. Related to ROOT-10967. @etejedor You see any performance implications with the check added below? Do we trigger lookups with the `dir(...)`? Just to be sure :)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6119:66,inject,inject,66,https://root.cern,https://github.com/root-project/root/pull/6119,1,['inject'],['inject']
Security,"If widget URL includes sensitive information,; one just put it into local file and start browser with such local HTML file. ; Internally its will redirect to normal http server. This is most easy way to hide secret information from the system.; Exactly this method used by Jupyter. . Now it possible to enforce unique key (single-time-token) authentication for web widgets.; In such case URL to connect web widgets always has include `?key=` parameter - which generated new every time; new URL string is requested. Attempt to connect with same key twice will fail. To support such functionality, `GetWindowUrl()` add to all web-based widgets to let use such capability also; from `RBrowser` which integrate all existing widgets together. In addition to that jupyter does, ROOT adds secret session key (after `#` symbol), which remains only on client side.; This session key together with connection key are used to create ~~MD5~~ HMAC/SHA256 checksum, which is sends to server instead as connection request. While connection request may be retried many times, new request will get new number and therefore new ~~MD5~~ HMAC checksum. Once connection is accepted - same key cannot be use for new connection, but still will be used for ~~MD5~~ HMAC packets signs. To solve main-in-the-middle problem, each data packet is signed with ~~md5~~ HMAC checksum. Each packet includes sequence counter, which also protected by ~~md5~~ HMAC checksum. Therefore even if anybody gain control over http traffic between; client and server, it only be able to observe traffic but will not be able manipulate it - as long as secret session; key is not gained by other means. Also re-submitting same packets will not be possible - while packet with; already used counter will not be accepted. HTTP sniffing can only catch connection request and try to use it faster than normal client.; But even if connection gained by sniffer - it will not be able use it. To use connection, each packet ; should be signed by ~~md5~~ H",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14136:342,authenticat,authentication,342,https://root.cern,https://github.com/root-project/root/pull/14136,2,"['authenticat', 'checksum']","['authentication', 'checksum']"
Security,"If you add components where each component only depends on a subset of the union set of the observables, the RooAddPdf should understand that the component is uniform in the missing observables. This is validated in a new unit test for both the getVal() interface and evaluation with the RooFit::Evaluator. To make this work, the projection integrals are evaluated for no specific normalization set in `RooAddPdf::computeBatch()` the supplementary normalization terms are already included in `RooAddPdf::compileForNormSet()` and they should not be double counted. This commit also makes the RooAddPdf tests less verbose by using more the RooWorkspace.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13538:203,validat,validated,203,https://root.cern,https://github.com/root-project/root/pull/13538,1,['validat'],['validated']
Security,"Ik1haWwiLCJXVCI6Mn0%3D%7C1000&sdata=56%2Fzdx8AYUMDio2HJ6lKgj%2BEhDVoS5nYEh69aXHYZS8%3D&reserved=0> --key ~/.globus/userkey.pem --cert ~/.globus/usercert.pem; >> or; >> curl -v https://webdav.lcg.triumf.ca:2880/atlas/atlaslocalgroupdisk/rucio/user/desilva/a1/a8/myFile.1.root <https://can01.safelinks.protection.outlook.com/?url=https%3A%2F%2Fwebdav.lcg.triumf.ca%3A2880%2Fatlas%2Fatlaslocalgroupdisk%2Frucio%2Fuser%2Fdesilva%2Fa1%2Fa8%2FmyFile.1.root&data=04%7C01%7Cdqing%40triumf.ca%7C96f8066e53054f808afe08d9156b7b02%7Cc20535109cb34679a2d38f442e03b587%7C1%7C0%7C637564373643157499%7CUnknown%7CTWFpbGZsb3d8eyJWIjoiMC4wLjAwMDAiLCJQIjoiV2luMzIiLCJBTiI6Ik1haWwiLCJXVCI6Mn0%3D%7C1000&sdata=56%2Fzdx8AYUMDio2HJ6lKgj%2BEhDVoS5nYEh69aXHYZS8%3D&reserved=0> --key ~/.globus/userkey.pem --cert ~/.globus/usercert.pem --capath /etc/grid-security/certificates; >> ; >> ; >> regards,; >> Asoka; >> ; >>> On May 12, 2021, at 10:18 AM, Axel Naumann ***@***.*** ***@***.***>> wrote:; >>> ; >>> ; >>> Right - without authentication I cannot see what's happening. If this is due to a redirect it would be a dupe of #8155 <https://can01.safelinks.protection.outlook.com/?url=https%3A%2F%2Fgithub.com%2Froot-project%2Froot%2Fissues%2F8155&data=04%7C01%7Cdqing%40triumf.ca%7C96f8066e53054f808afe08d9156b7b02%7Cc20535109cb34679a2d38f442e03b587%7C1%7C0%7C637564373643367382%7CUnknown%7CTWFpbGZsb3d8eyJWIjoiMC4wLjAwMDAiLCJQIjoiV2luMzIiLCJBTiI6Ik1haWwiLCJXVCI6Mn0%3D%7C1000&sdata=Sks%2FDd3rFaTWUbAotHxdTG7EQfZWLHeVrkmSb4E5PhU%3D&reserved=0> - if not then it's different :-) But I don't know how to tell whether it's a redirect. Do you?; >>> ; >>> If not let's get #8155 <https://can01.safelinks.protection.outlook.com/?url=https%3A%2F%2Fgithub.com%2Froot-project%2Froot%2Fissues%2F8155&data=04%7C01%7Cdqing%40triumf.ca%7C96f8066e53054f808afe08d9156b7b02%7Cc20535109cb34679a2d38f442e03b587%7C1%7C0%7C637564373643377374%7CUnknown%7CTWFpbGZsb3d8eyJWIjoiMC4wLjAwMDAiLCJQIjoiV2luMzIiLCJBTiI6Ik1haWwiLCJXVCI6Mn0%3D%7C1000&sdata=Z2X",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8092#issuecomment-839972447:6795,authenticat,authentication,6795,https://root.cern,https://github.com/root-project/root/issues/8092#issuecomment-839972447,1,['authenticat'],['authentication']
Security,"Implements the following two improvements to views and iteration of view values. - Make the type of iteration explicit: over the events, over the values of a collection within an event, or over all the values of a field, which for a nested field can be more or less than the number of entries. - `RNTupleView` now uses automatically a field's `Map()` zero-copy access method, if such a method exists for the the field; replaces the template specializations of `RNTupleView`",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5015:361,access,access,361,https://root.cern,https://github.com/root-project/root/pull/5015,1,['access'],['access']
Security,Implements writing page checksums and checksum verification on read.; Page checksums are written on `SealPage()`. They are verified on `LoadSealedPage()` and on `UnsealPage()`. Note that the page size stored in locators does not change. Pages flagged as having a checksum are serialized with additional trailing 8 bytes.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15921:24,checksum,checksums,24,https://root.cern,https://github.com/root-project/root/pull/15921,4,['checksum'],"['checksum', 'checksums']"
Security,"Improve class design around `RAttrBase` classes. ; Introduce `RAttrValue<typename T>` template class to access single value from attributes.; Use it in all attributes classes and existing drawable classes. ; Let specify in single place type, string name and default value for each attribute. Add following draw options for `RH1`:; * `Error()`; * `Text()`; * `Marker()`; * `Bar()`; * `Line()`; * `Lego()`. Add `Arrow()` draw option for `RH2`. Fix problem with 3D drawings - objects which position related to frame (which is not visible in 3D) now positioned and moved correctly after pad resize. Provide draw options overview macros: `draw_rh1.cxx` (see attached image), `draw_rh2.cxx`, `draw_rh3.cxx`. ![draw_rh1](https://user-images.githubusercontent.com/4936580/85689202-b7b98e80-b6d2-11ea-82fe-2a3b33fa0b37.png)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5926:104,access,access,104,https://root.cern,https://github.com/root-project/root/pull/5926,1,['access'],['access']
Security,"In 6.26, just don't use the RooSimultaneous and build your NLL as a sum of per-channel NLLs instead, using RooAddition. This is what I also do in the updated cross-check for the simultaneous fit in this PR #11455 ( see the `testRooSimultaneous` file). In 6.24 or older, you would have to further all all these multi-range normalization correction integrals to the RooAddition, like I introduced it under the hood in #7719. But I would not advice doing this unless you carefully validate that you implemented the math correctly. Then, I also have a little hack for you that would work in all ROOT versions: the whole problem **does not affect extended fits**, as explained in this tutorial from ROOT 6.24: https://root.cern.ch/doc/v624/rf204b__extendedLikelihood__rangedFit_8C.html. So even if you don't care about doing an extended fit, by making your PDF an extended one and then ignoring the normalization parameter you're all set. If you already do an extended fit, you also don't have to worry at all about the multi-ranged fits,even with the RooSimultaneous.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11447#issuecomment-1263377786:478,validat,validate,478,https://root.cern,https://github.com/root-project/root/issues/11447#issuecomment-1263377786,1,['validat'],['validate']
Security,"In `RooLinkedList::find()`, the `operator[]` of `unordered_map` was used; to look up elements. However, this has the side effect that if the; elment for the key doesn't exists, it is implicitly created and; instantiated with `nullptr`! Now the desaster continues: new elements; are added in `RooLinkedList::Add()` via `unordered_map::insert()`.; But `insert()` method doesn't do anything if an item already exists!. This means that if you look up an element in a `RooLinkedList` that is; long enough to use the hash tables, and this element is not found,; adding this element to the list then will not succeed. It's surprising that this problem was uncovered only now, thanks to; @cburgard who provided a reproducer.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10158:511,hash,hash,511,https://root.cern,https://github.com/root-project/root/pull/10158,1,['hash'],['hash']
Security,"In `RooProdPdf::getConstraints()`, the full computation graph was; traversed two or three times for each component pdf, depending on the; code branch. There were calls to `pdf->dependsOnValue()` and; `pdf->getParameters(&observables)`, but both are very expensive for; large computation graphs because they check if any of the observables is; in the server list of any RooAbsArg in the graph. It is much cheaper to call `pdf->getParameters(nullptr)` to get all; value server variables of a pdf, and then use `overlaps` to check if the; pdf depends on observables or constrained parameters. To get then the set of actual parameters, it is suggested to use; `tmp.remove(observables)`, which is is cheap for RooArgSets because of; the hash-assisted find by name. This commit speeds up the `createNLL()` call for the ATLAS Higgs; combination workspace by 30 %. Here one can see the flamegraphs for createNLL in the ATLAS Higgs combination fit [before this commit](https://rembserj.web.cern.ch/rembserj/flamegraphs/perf_before_11015.svg) and [after](https://rembserj.web.cern.ch/rembserj/flamegraphs/perf_after_11015.svg).",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11015:732,hash,hash-assisted,732,https://root.cern,https://github.com/root-project/root/pull/11015,1,['hash'],['hash-assisted']
Security,In case of exception in JavaScript painting code show warning sign and let easily see associated log message. Before some printout was done in browser console which is not easily accessible by users.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16424:179,access,accessible,179,https://root.cern,https://github.com/root-project/root/pull/16424,1,['access'],['accessible']
Security,"In clang a transient file is a header file which is stored in the pch/pcm file. If this file does not exist, clang creates a virtual file of the unzipped stored file. However, if the file exists it compares the size of the file on disk and the size of the transent file. If the two sizes are different it does not complain (as validation is off) but it triggers an assert in when constructing and outdated clang::InputFile. The implementation disallows a overridden or transient file to be out of date. This patch extends the DisableValidation abilities to span not only for timestamps but we avoid checking the file sizes if the file is on the disk. And, instead we just create a virtual file of the file that we already have. This patch should fix a relocation issue for cmssw and some of the reported LCG issues. cc: @oshadura, @davidlange6, @smuzaffar, @emanca, @zygoloid",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4480:327,validat,validation,327,https://root.cern,https://github.com/root-project/root/pull/4480,1,['validat'],['validation']
Security,"In ecd98632, the class version of the `RooAbsArg` class was incremented. As explained in #8791, there are sometimes warnings in the IO of derived classes if their version number is not increased as well. Increasing the class version of RooRealVar indeed fixes this warning that one gets right now when reading old workspaces:. ```; Warning in <TStreamerInfo::BuildCheck>:; The StreamerInfo of class RooRealVar read from file toyws/WS-VHbb-STXS_mu_toy_new.root; has the same version (=8) as the active class but a different checksum.; You should update the version to ClassDef(RooRealVar,9).; Do not try to write objects with the current class definition,; the files will not be readable. Warning in <TStreamerInfo::CompareContent>: The following data member of; the on-file layout version 8 of class 'RooRealVar' differs from; the in-memory layout version 8:; RooAbsBinning _binning; //; vs; unique_ptr<RooAbsBinning,default_delete<RooAbsBinning> > _binning;; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12114:523,checksum,checksum,523,https://root.cern,https://github.com/root-project/root/pull/12114,1,['checksum'],['checksum']
Security,"In https://github.com/root-project/root/pull/11604, many redundancies in the RooMinimizer design became apparent,; and this PR aims to avoid them. The following changes are made:. * The signature of `RooAbsMinimizerFcn::Synchronize()` is changed to not; take a `bool optConst` argument anymore. Ths is because the value of; the argument that was passed by the RooMinimizer instance was always a; member of the `RooAbsMinimizerFcn` anyway. * Change type of `RooMinimizer::Config::verbose` to `bool`, because; `setVerbose()` also takes a `bool` flag. * Give `RooAbsMinimizerFcn` access to the RooMinimizer configuration; such that configuration data does not need to be duplicated. A separate commit in this PR formats the code of the `RooMinimizerFcn`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11695:577,access,access,577,https://root.cern,https://github.com/root-project/root/pull/11695,1,['access'],['access']
Security,"In https://github.com/root-project/root/pull/5283/files#diff-731544d47414211363492c1443589e15L132 is there any reason why there is no `property |= kIsArray;` ? (It is there in similar blocks like in TClingDataMemberInfo.cxx of this PR - https://github.com/root-project/root/pull/5283/files#diff-cb40dcc7a52ad261ee66558b009a961cL446 and also in the files I refactored in PR #5243 ). . If I add that line to the block, then I get a checksum mismatch on a streamer (if I am interpreting the roottest error logs correctly) - ; ```; --- Using ROOT from /home/reik/root/root-build; --- root/io/double32/template32.ref	2019-12-28 12:45:09.779147688 +0530; +++ root/io/double32/template32.clog	2020-04-03 10:44:03.968974661 +0530; @@ -32,7 +32,7 @@; OBJ: TRealData	v2.regdouble	Description of persistent data members : 0 at: [deleted from log]; The following should be a Double32_t: Double32_t; ; -StreamerInfo for class: m02<Double32_t>, checksum=0x8610c861; +StreamerInfo for class: m02<Double32_t>, checksum=0x4dcf66a2; map2<Double32_t,Double32_t,alloc<pair<Double32_t,Double32_t> > > BASE offset= [deleted from log] type= 0 ; int fN offset= [deleted from log] type= 6 ; vector<Double32_t> ff1 offset= [deleted from log] type=300 ,stl=1, ctype=9, ; make[1]: *** [Makefile:84: template32] Error 1; At least 1 tests have failed:; --- FAILING TEST: make -C . template32; make: *** [/home/reik/root/roottest//scripts/Rules.mk:15: summary] Error 1; ```; Maybe the error logs can be fixed by changing the reference file here - https://github.com/root-project/roottest/blob/master/root/io/double32/template32.ref . But I think since the checksum is not matching, the streamers are also changing and perhaps that is not behaviour we want. . @pcanal Can you help please?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5283#issuecomment-608263039:430,checksum,checksum,430,https://root.cern,https://github.com/root-project/root/pull/5283#issuecomment-608263039,4,['checksum'],['checksum']
Security,"In most drawables and aggregations provide public access to the attributes.; One can directly assign value to such member like:; ```cpp; line->line.style = 12;; text->text.font.face = ""Arial"";; ```; And one always can check if attribute `Has()` value or `Clear()` it like:; ```cpp; if (!line->line.style.Has()) // do somthing;; text->text.font.face.Clear();; ```; Introduce several new aggregations like `RAttrAxisTitle`, `RAttrAxisLabels`, `RAttrAxisTicks`, `RAttrFont` to let provide syntax:; ```; frame->x.labels.font.size = 12;; frame->y.ticks.color = RColor::kRed;; ```; Sometime assign operator defined in aggregation to let assign value to whole aggregation like:; ```; frame->x.labels.font = 11;; ```; This will assign ROOT font type 11 to `RAttrFont` which is `face = ""Courier New""; style = ""oblique""; weight = ""bold"";`. Adjust all tests and tutorials. Waiting for fixing cling error https://github.com/root-project/root/issues/8547 - all python tests should fail now",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8566:50,access,access,50,https://root.cern,https://github.com/root-project/root/pull/8566,1,['access'],['access']
Security,"In old versions of RooFormula, one could mutate the internal formula; object from the outside. This was unsafe. Therefore, the visibility of; formula() was reduced.; It can, however, be beneficial to have at least read access. Therefore,; a const overload of the function was provided to give users access.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6250:219,access,access,219,https://root.cern,https://github.com/root-project/root/pull/6250,2,['access'],['access']
Security,In particular. - Add support for 8 bit unsigned integer; - Add support for directly accessing a class member with a view,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4273:84,access,accessing,84,https://root.cern,https://github.com/root-project/root/pull/4273,1,['access'],['accessing']
Security,"In preparation of adding page checksums, it makes sense to enable `LoadSealedPage()` support with DAOS and the caging option (caging: storage of multiple pages in a single object). Even though the implementation is not very performant, it will later allow to streamline the test for checksum verification.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15892:30,checksum,checksums,30,https://root.cern,https://github.com/root-project/root/pull/15892,2,['checksum'],"['checksum', 'checksums']"
Security,In preparation of adding page checksums. The `GetSize()` getter will later be split in `GetPayloadSize()` (page size without checksum) and `GetTotalPageSize()` (page size with checksum).,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15884:30,checksum,checksums,30,https://root.cern,https://github.com/root-project/root/pull/15884,3,['checksum'],"['checksum', 'checksums']"
Security,"In preparation of adding support for incremental loading page locations, the descriptor access in the page source needs to be locked. Currently, the descriptor is an immutable data structure. When page locations can be mapped in and out dynamically during the lifetime of an ntuple, the descriptor actually does change from time to time. This patch sets replaces direct descriptor access in the page source by a guarded access with a r/w lock. Read-only access is guarded by a shared lock, write access guarded by an exclusive lock. A follow-up PR will change the page source API such that `Attach()` does not load any page locations but another call will be needed to load the page locations of a given cluster range or event range.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10185:88,access,access,88,https://root.cern,https://github.com/root-project/root/pull/10185,5,['access'],['access']
Security,"In previous allmodules&autoloading patch, we used callback from; DeserializationListener to get Decl and loaded corresponding libraries.; It worked, but the performance was bad because ROOT was loading; excessive libraries. In this patch, we use TCling::LazyFunctionCreatorAutoloadForModule. This; function gets callback when ""mangled_name"" was not found in loaded; libraries thus we have to the load corresponding library and lookup; again. I used unordered_map to store mangled identifier and library pair. I'm; doing an optimization by hashing mangled name and storing library not by; name but by uint8 and hold uint8-name information in another vector.; Also tried std::map but unorderd_map was more performant. There are; better hash table like:; https://probablydance.com/2018/05/28/a-new-fast-hash-table-in-response-to-googles-new-fast-hash-table/; we can try to use them if this part gets crucial. With this patch:; ```; Processing tutorials/hsimple.C...; hsimple : Real Time = 0.04 seconds Cpu Time = 0.03 seconds; (TFile *) 0x562b37a14fe0; Processing /home/yuka/CERN/ROOT/memory.C...; cpu time = 0.362307 seconds; sys time = 0.039741 seconds; res memory = 278.215 Mbytes; vir memory = 448.973 Mbytes; ```. W/o this patch:; ```; Processing tutorials/hsimple.C...; hsimple : Real Time = 0.08 seconds Cpu Time = 0.07 seconds; (TFile *) 0x5563018a1d30; Processing /home/yuka/CERN/ROOT/memory.C...; cpu time = 1.524314 seconds; sys time = 0.157075 seconds; res memory = 546.867 Mbytes; vir memory = 895.184 Mbytes; ```. So it improves time by 4x times and memory by 2x.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2093:539,hash,hashing,539,https://root.cern,https://github.com/root-project/root/pull/2093,3,['hash'],"['hash', 'hash-table-in-response-to-googles-new-fast-hash-table', 'hashing']"
Security,In setups where we have debug symbols in a separate library the .gnu.hash section appears invalid. Clients can strip the debug symbols into a separate library by:. objcopy --only-keep-debug libA.so libA.so.dbg; objcopy --strip-debug libA.so; objcopy --add-gnu-debuglink=libA.so.dbg libA.so. This should fix an issue reported by ATLAS when migrating to ROOT v6.20. cc: @krasznaa (I do not seem to find Scott's and Reiner's github handles).,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5398:69,hash,hash,69,https://root.cern,https://github.com/root-project/root/pull/5398,1,['hash'],['hash']
Security,In setups where we have debug symbols in a separate library the .gnu.hash; section appears invalid. Clients can strip the debug symbols into a separate; library by:. objcopy --only-keep-debug libA.so libA.so.dbg; objcopy --strip-debug libA.so; objcopy --add-gnu-debuglink=libA.so.dbg libA.so. This should fix an issue reported by ATLAS when migrating to ROOT v6.20.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5444:69,hash,hash,69,https://root.cern,https://github.com/root-project/root/pull/5444,1,['hash'],['hash']
Security,"In some node where ROOT was using lagacy compiler, they didn't compile; shared library with a linker flag --hash-style=gnu. So libraries didn't; have .gnu.hash section. We need to search symbols for these libraries,; too.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2203:108,hash,hash-style,108,https://root.cern,https://github.com/root-project/root/pull/2203,2,['hash'],"['hash', 'hash-style']"
Security,"In such mode only requests for websocket-handlers are allowed.; And if connection token is configured, such connection only; can be established by providing the token. Increases security of THttpServer used for webgui widgets in public networks. Provide default THttpServer page for WS-only mode that one sees list of active widgets",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7122:178,secur,security,178,https://root.cern,https://github.com/root-project/root/pull/7122,1,['secur'],['security']
Security,"In the 6.30 dev cycle, I made a mistake when refactoring the HistFactory code in 3c68044c257:. https://github.com/root-project/root/commit/3c68044c257e9ee7207e23e7cceb69d7eda596e9#diff-42ea09980f1ed2bacde4381f212c35d78be6ddedccf746953dc99d6455525d8aL1801-L1804. The robust way to skip overflow bins in 2D and 3D was replaced with something that only worked in 1D. Thanks to Veronica for reporting this on the ROOT forum!. https://root-forum.cern.ch/t/discrepancy-in-2d-histfactory-fit-results-between-root-versions-6-28-06-vs-nightlies-with-beeston-barlow-method-activated. I validated now that the fit results with the reproducer on the forum are the same with 6.28 and 6.30. To be backported to the 6.30 branch.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14185:576,validat,validated,576,https://root.cern,https://github.com/root-project/root/pull/14185,1,['validat'],['validated']
Security,"In the C++ case, usually the friend is access though the main tree rather than on its own. eg; ```; t2->SetBranchAddress(""t1.id"", &var);; ```; but in python the following does not (yet) work:; ```; print(t2.id, t2.t1.id); ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8549#issuecomment-869991560:39,access,access,39,https://root.cern,https://github.com/root-project/root/issues/8549#issuecomment-869991560,1,['access'],['access']
Security,"In the ROOT 6.26 development cycle, the RooProdPdf was partially rewritten in moden C++ with less manual memory allocation to improve performance (PR #7907). In that PR, a unit test that verifies the RooProdPdf can correctly deal with factorizing PDFs was implemented. However, that test used an arbitrary PDF where the correct factorization was checked in a rather crude way: check by hashing the content of the RooProdPdf cache element for a given normalization set that said PR doesn't change any behavior (the reference hash was hardcoded in the unit test). This commit suggests a better alternative for the unit test, checking for a multidimensional product pdf of factorizing uniform pdfs that the pdf values for differenc normalization sets is as expected. This should cover the same functionality and is less fragile and implementation dependend than hashing the cache elements. This closes GitHub issue #12430, as the rewritten test is not affected anymore by the problem reported in that issue. The commit also removed the `RooProdPdf::writeCacheToStream()` function that was an implementation detail of the old unit test.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12447:386,hash,hashing,386,https://root.cern,https://github.com/root-project/root/pull/12447,3,['hash'],"['hash', 'hashing']"
Security,"In the case of the storage location, this change turns an assert; failure into an exception:. Before:; ```; Fatal: fileStream violated at line 1145 of `ntuple/v7/src/RMiniFile.cxx'; ```. After:; ```; C++ exception with description ""empty storage location""; ```. For the RNTuple name, the empty string only caused issues when added to; a TFile (but that's enough to ban it):. ```cpp; std::string path = ""some_file.root""; auto file = TFile::Open(path.c_str(), ""RECREATE"");; {; auto model = RNTupleModel::Create();; auto fieldPt = model->MakeField<float>(""pt"", 42.0);; auto ntuple = RNTupleWriter::Append(std::move(model), """", *file);; ntuple->Fill();; }; file->Close();; delete file;. // throws; auto ntuple = RNTupleReader::Open("""", path);; ```; ```; C++ exception with description ""no RNTuple named '' in file 'test_ntuple_empty_filename.root' (unchecked RResult access!); ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8511:863,access,access,863,https://root.cern,https://github.com/root-project/root/pull/8511,1,['access'],['access']
Security,"In the jitted version of the `Vary` transformation a node is allocated on the heap and its address is passed down to the function `JitVariationHelper`, which is also responsible for deleting the allocated memory. In case a mismatch in the return type of the jitted function given to the Vary call is detected, we throw an error to inform the user they should return an RVec for the Vary to properly work. This means that the call to JitVariationHelper does not happen, thus the memory of the node is not deallocated. This commit corrects that behaviour by properly deleting the pointer before throwing the exception. Thanks to the address sanitizer:; ```; Direct leak of 16 byte(s) in 1 object(s) allocated from:; #0 0x7f28c78d9e28 in operator new(unsigned long) (/lib64/libasan.so.8+0xd9e28) (BuildId: 2b657470ea196ba4342e3bd8a3cc138b1e200599); #1 0xb711e0 in std::shared_ptr<ROOT::Detail::RDF::RNodeBase>* ROOT::Internal::RDF::MakeSharedOnHeap<ROOT::Detail::RDF::RNodeBase>(std::shared_ptr<ROOT::Detail::RDF::RNodeBase> const&) /home/vpadulan/Programs/rootproject/rootbuild/master-a73f11dfc5-testing-asan/include/ROOT/RDF/InterfaceUtils.hxx:370; #2 0xb843a8 in ROOT::RDF::RInterface<ROOT::Detail::RDF::RLoopManager, void>::JittedVaryImpl(std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&, std::basic_string_view<char, std::char_traits<char> >, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&, std::basic_string_view<char, std::char_traits<char> >, bool) /home/vpadulan/Programs/rootproject/rootbuild/master-a73f11dfc5-testing-asan/include/ROOT/RDF/RInterface.hxx:3108; ```. # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally; - [ ] updated the docs (if necessary",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15477:639,sanitiz,sanitizer,639,https://root.cern,https://github.com/root-project/root/pull/15477,1,['sanitiz'],['sanitizer']
Security,"In the original implementation of the RooBatchCompute library, the; evaluation was done multi-threaded in implicit multi-threading was; enabled in ROOT with `ROOT::EnableImplicitMT()`. This commit removes this feature now, because it was never really; validated, overlapped with other parallelization capabilities of RooFit,; and keeping it will have many unforeseen consequences on users now that; the new CPU evaluation backend is the default in RooFit. See also:; https://github.com/cms-sw/cmsdist/pull/9047",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14909:252,validat,validated,252,https://root.cern,https://github.com/root-project/root/pull/14909,1,['validat'],['validated']
Security,"In this forum post, the point was made that; `RooWorkspace::getSnapshot()` should not print an error if a snapshot; with the passed name is not found. https://root-forum.cern.ch/t/roofit-check-if-snapshot-exist-without-showing-objecthandling-error. Just like in the other `RooWorkspace` access functions, like `arg()`,; `pdf()`, or `function()`, users expect to use `getSnapshot()` also to; query if a snapshot exists and check if the returned value is `nullptr`.; So there should be no error printed in `getSnapshot()` itself. If it is; actually an error for th caller that no snapshot has been found, an; error or exception should be raised by the caller. A second commit in this PR applies some general code modernization to `RooWorkspace.cxx`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11584:287,access,access,287,https://root.cern,https://github.com/root-project/root/pull/11584,1,['access'],['access']
Security,"In v6-30 we no longer record the kIsOnHeap and kNotDeleted, however older version of ROOT do not yet set them properly when reading. This leads to spurrious error message like:. ```; Error in <TList::Clear>: A list is accessing an object (0x2d77b50) already deleted (list name = TList); ```. But also failure in some case where action is not taken because the object is incorrect thought to be already deleted.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12845:218,access,accessing,218,https://root.cern,https://github.com/root-project/root/pull/12845,1,['access'],['accessing']
Security,"Indeed, if you have a RooArgList, and two elements with the same name, you might remove the first one from the hash map. The find function will now report that there's no element by that name if the hash map is active. If it's inactive, it will report the element. It's something we have to think about. @guitargeek ; This is anyway a bit shaky, since it will only ever find the first element by that name if you ask for this in a list with duplicates. It doesn't seem to be a big issue in RF so far, as nobody seems to use the hash map with ArgLists and duplicates, but it might lead to surprises. _Originally posted by @hageboeck in https://github.com/root-project/root/pull/9419#discussion_r767570121_",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9425:111,hash,hash,111,https://root.cern,https://github.com/root-project/root/issues/9425,3,['hash'],['hash']
Security,"Independently but somewhat related, we may want to store past profiles for branch accesses etc; that's best done inside a dedicated config folder as you suggest here. I.e.: 👍",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10148#issuecomment-1070538914:82,access,accesses,82,https://root.cern,https://github.com/root-project/root/issues/10148#issuecomment-1070538914,1,['access'],['accesses']
Security,"Inject the ""_tls_array"" constant (0x2C) symbol to avoid unresolved symbol er…",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1804:0,Inject,Inject,0,https://root.cern,https://github.com/root-project/root/pull/1804,1,['Inject'],['Inject']
Security,Injecting class span inside the std namespace is asking for problem,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13042:0,Inject,Injecting,0,https://root.cern,https://github.com/root-project/root/issues/13042,1,['Inject'],['Injecting']
Security,Inline and access optimizations for TLorentzVector and TVector3,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/165:11,access,access,11,https://root.cern,https://github.com/root-project/root/pull/165,2,['access'],['access']
Security,Installation without internet access,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8424:30,access,access,30,https://root.cern,https://github.com/root-project/root/issues/8424,1,['access'],['access']
Security,"Instead of N passes of `RooAbsCollection::remove(RooAbsArg)`, do single pass over the `_list` and use `contains`.; That algorithm is much faster when the collection to remove is large and therefore has the hash-assisted find.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9419:206,hash,hash-assisted,206,https://root.cern,https://github.com/root-project/root/pull/9419,1,['hash'],['hash-assisted']
Security,Instead of exposing `TF1FunctorPointer` and `TMethodCall` you can also outline all constructors and the destructor of `TF1`. Given that construction and destructions isn't a hot call that would be my preferred solution - especially as it also avoids having to expose `TF1FunctorPointer` to the dictionary. Did / can you try that?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7035#issuecomment-762122876:260,expose,expose,260,https://root.cern,https://github.com/root-project/root/pull/7035#issuecomment-762122876,1,['expose'],['expose']
Security,Introduce `RWebWindowsManager::SetLoopbackMode()` to let change binding to loopback device . Do not expose current directory via webgui http server. Do not provide list of window on default webpage. Do not allow to reconnect to RBrowser,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14189:100,expose,expose,100,https://root.cern,https://github.com/root-project/root/pull/14189,1,['expose'],['expose']
Security,"Introduce the new `RooAbsPdf::createExpectedEvents()` method to; explicitly create an object that represents the expected number of; events. Like this, the expected number of events is fully exposed in the; computation graph, just like the integrals. This makes adding support of RooFit codegen+AD for extended fits; trivial, and also optimizes the BatchMode because the RooFitDriver can; de-duplicate integrals that appear both in the regular evaluation path; and `RooAbsPdf::expectedEvents()`. Now that a function that represents the expected events is; part of the computation graph, using it in the RooFit code generation; for the NLL is straight forward.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12998:191,expose,exposed,191,https://root.cern,https://github.com/root-project/root/pull/12998,1,['expose'],['exposed']
Security,"Introduces a new option to the DNN, ValidationSize, which can be used to split the training data into two parts, one for training and one for validation.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/968:36,Validat,ValidationSize,36,https://root.cern,https://github.com/root-project/root/pull/968,2,"['Validat', 'validat']","['ValidationSize', 'validation']"
Security,"Introducing the intermediate class RFloatField<T> that is inherited by RField<float> and RField<double> which exposes the SetHalfPrecision(), SetTruncated() and SetQuantized() methods for both classes. This also adds the previously-missing but advertised `double -> Real16` mapping and the `double -> Real32Trunc` mapping. ## Checklist:. - [x] tested changes locally; - [x] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16546:110,expose,exposes,110,https://root.cern,https://github.com/root-project/root/pull/16546,1,['expose'],['exposes']
Security,"Is mangling supposed to address those characters too? Maybe there is something simple which could be done for names of objects in ROOT, for example keeping only letters and numbers and postponing the hash of the name? In the end we need this for autogenerated code, but maybe I am wrong.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15377#issuecomment-2084946546:200,hash,hash,200,https://root.cern,https://github.com/root-project/root/pull/15377#issuecomment-2084946546,2,['hash'],['hash']
Security,Is support of old rootmaps needed? It is not sufficient to have name-> library mapping in ROOT6 as forward declarations need to be injected in the interpreter in order to trigger the hook we exploit to autoload(parse).,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1581#issuecomment-362593369:131,inject,injected,131,https://root.cern,https://github.com/root-project/root/pull/1581#issuecomment-362593369,1,['inject'],['injected']
Security,"It also fails (for me) on v6.16 patch branch. And Indeed, I do not expect it to work. `Merge` is not part of the `TObject` interface and thus the wrapper need to access the function from the outside at the level of the class (yes, we could find the first base where it is declared public but I don't recall that we implemented this).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14963#issuecomment-2018350309:162,access,access,162,https://root.cern,https://github.com/root-project/root/issues/14963#issuecomment-2018350309,1,['access'],['access']
Security,"It crashes with an access violation, so disable it on Windows (32 and 64 bit)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10436:19,access,access,19,https://root.cern,https://github.com/root-project/root/pull/10436,1,['access'],['access']
Security,"It fails when doing the `property(method)` call, so in `PyObject_CallObject(property_class, arglist)`. In case the method is bound, the underlying code does explicitely access the `self` object, which throws an `Bad argument to internal function` error in python if it's `NULL` (super cryptic!). Regarding the second question, I've to check.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1777#issuecomment-380154325:169,access,access,169,https://root.cern,https://github.com/root-project/root/pull/1777#issuecomment-380154325,1,['access'],['access']
Security,It is not ABI compatible per se but for your purpose it is sufficiently so. The code in cling/llvm is only used/access from libCling which should only be accessed through the TIntepre ter interface (i.e. no user code should need to be rebuild).,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7657#issuecomment-811290392:112,access,access,112,https://root.cern,https://github.com/root-project/root/issues/7657#issuecomment-811290392,2,['access'],"['access', 'accessed']"
Security,"It is on by default, but it does have a (small) cost. Moreover, you could imagine situations where it is not needed, e.g. if users decide that file-level checksums / content hashes do the job or if the underlying medium does the checksumming (e.g. S3 md5sums).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15921#issuecomment-2190001044:154,checksum,checksums,154,https://root.cern,https://github.com/root-project/root/pull/15921#issuecomment-2190001044,3,"['checksum', 'hash']","['checksumming', 'checksums', 'hashes']"
Security,It is really simple to check what gets linked in with a debugger if you have the setup done already. If I can get ssh access to a node somewhere I can do that.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12156#issuecomment-1665604004:118,access,access,118,https://root.cern,https://github.com/root-project/root/issues/12156#issuecomment-1665604004,2,['access'],['access']
Security,"It looks like `#define -compilerI/usr/lib/gcc/x86_64-pc-linux-gnu/12.2.1/include/g++-v12 1` is generated due to broken parsing somewhere... Here is the summary of the configuration and the full CMake configuration line:. ```; -- ROOT Configuration . System Linux-5.18.5-gentoo; Processor 16 core AMD Ryzen 9 3950X 16-Core Processor (x86_64); Build type Debug; Install path /usr/lib/root/6.26; Compiler GNU 12.2.1; Compiler flags:; C -march=native -O2 -pipe -g -fno-omit-frame-pointer -Wno-implicit-fallthrough -pipe -Wall -W -pthread ; C++ -march=native -O2 -pipe -g -fno-omit-frame-pointer -std=c++17 -Wno-implicit-fallthrough -Wno-noexcept-type -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread ; Linker flags:; Executable -Wl,-O1 -Wl,--as-needed -rdynamic; Module -Wl,-O1 -Wl,--as-needed; Shared -Wl,-O1 -Wl,--as-needed -Wl,--no-undefined -Wl,--hash-style=""both"". -- Enabled support for: asimage builtin_clang builtin_cling builtin_llvm builtin_openui5 dataframe davix exceptions fftw3 fitsio fortran gdml gsl_shared gviz http fcgi imt mathmore mlp minuit2 mpi mysql odbc opengl oracle pgsql pyroot pythia6 pythia8 qt5web roofit webgui root7 shadowpw shared soversion sqlite ssl tmva tmva-cpu tmva-pymva spectrum unuran uring vc vdt x11 xml xrootd; ```. ```; cmake -C /var/tmp/portage/sci-physics/root-6.26.06/work/root-6.26.06_build/gentoo_common_config.cmake -G Unix Makefiles -DCMAKE_INSTALL_PREFIX=/usr -DCMAKE_C_COMPILER=gcc-12.2.1 -DCMAKE_CXX_COMPILER=g++-12.2.1 -DCMAKE_CUDA_HOST_COMPILER=g++-12.2.1 -DCMAKE_C_FLAGS=-march=native -O2 -pipe -g -fno-omit-frame-pointer -DCMAKE_CXX_FLAGS=-march=native -O2 -pipe -g -fno-omit-frame-pointer -DCMAKE_CXX_STANDARD=17 -DPYTHON_EXECUTABLE=/usr/bin/python3.11 -DCMAKE_INSTALL_PREFIX=/usr/lib/root/6.26 -DCMAKE_INSTALL_MANDIR=/usr/lib/root/6.26/share/man -DCMAKE_INSTALL_LIBDIR=lib -DDEFAULT_SYSROOT= -DCLING_BUILD_PLUGINS=OFF -Dasserts=OFF -Ddev=OFF -Dexceptions=ON -Dfail-on-missing=ON -Dgnuinstall=OFF -Dshared=ON -Dsoversion=ON -D",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11381:866,hash,hash-style,866,https://root.cern,https://github.com/root-project/root/issues/11381,1,['hash'],['hash-style']
Security,"It may make sense to register such include paths as ""private"" and adjust the interface of `gSystem->GetIncludePath` (cc:pcanal). In principle we do not need this injected include path when runtime_cxxmodules are on and we might just drop that part from dictionary generation. There might be some code out there that was relying on this gray area include path. I'd defer that to @Axel-Naumann.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7108#issuecomment-769975888:162,inject,injected,162,https://root.cern,https://github.com/root-project/root/issues/7108#issuecomment-769975888,1,['inject'],['injected']
Security,It says: ; `Jenkins CI build — Build failed `; but I cannot access the details concerning build error. Let me know if something else is needed from my side.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11588#issuecomment-1305374640:60,access,access,60,https://root.cern,https://github.com/root-project/root/pull/11588#issuecomment-1305374640,1,['access'],['access']
Security,It seems clear that the two name `RNTupleUnownedView` and `RNTupleOwnedView` are too ambiguous (no way to know who the subject of the '[un]owned' is (Is the the user or the system that owns (or not)). Furthermore I am confused by the question itself. A `view` is typically a 'small' object that does not own what it gives access to (e.g. `std::string_view` or its cousin `std::span`). So is `view` even the right term? Completely related can you remind me what information we are trying to pass to the user with the 2 distinct names (what do they need to do differently)?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16363#issuecomment-2327424850:322,access,access,322,https://root.cern,https://github.com/root-project/root/pull/16363#issuecomment-2327424850,2,['access'],['access']
Security,"It seems that VecCore is a wrapper over Vc, however ROOT uses Vc in the context; of VecCore but also standalone. Adapt CMake to only try to load the Vc module when the Vc option is on as VecCore; might have not exposed Vc... This change improves root-project/root@f2ac9b349f",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9572:211,expose,exposed,211,https://root.cern,https://github.com/root-project/root/pull/9572,1,['expose'],['exposed']
Security,"It seems to me that the test projectroot.roottest.root.io.double32.roottest_root_io_double32_make fails just because its reference file needs to be updated now. At least I don't see any critical problem with that test.; The test projectroot.roottest.root.tree.cache.roottest_root_tree_cache_TooSmall failed once too, but on my local machine it is working. Unfortunately I can no longer access the build logs with my CERN account. Most probably because it was converted to a ""Lightweight Account"" so I am unable to investigate this further.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9008#issuecomment-921518889:386,access,access,386,https://root.cern,https://github.com/root-project/root/pull/9008#issuecomment-921518889,1,['access'],['access']
Security,It was validated locally that the test now also passes with the CUDA backend.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14817#issuecomment-1962819219:7,validat,validated,7,https://root.cern,https://github.com/root-project/root/pull/14817#issuecomment-1962819219,1,['validat'],['validated']
Security,It was validated with the unbinned benchmarks in `rootbench` that the; implementation is correct.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12161:7,validat,validated,7,https://root.cern,https://github.com/root-project/root/pull/12161,1,['validat'],['validated']
Security,"It would be great if the `F.ModuleName` could be printed out when this assert fires. https://github.com/root-project/root/blob/dfbe5ae4f74a197182feb28b2b9052b73e7a3f45/interpreter/llvm/src/tools/clang/lib/Serialization/ASTReader.cpp#L4018. Would make it much easier to understand that one has to for example `export ROOT_INCLUDE_PATH=${VC_HOME}/include` because the Vc module was not found, instead of guessing about what is happening from this. ```; genconf: /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/interpreter/llvm/src/tools/clang/lib/Serialization/ASTReader.cpp:4018: clang::ASTReader::ASTReadResult clang::ASTReader::ReadModuleMapFileBlock(clang::ASTReader::RecordData&, clang::ASTReader::ModuleFile&, const ModuleFile*, unsigned int): Assertion `M && M->Name == F.ModuleName && ""found module with different name""' failed.; --; /bin/sh: line 1: 158369 Aborted                 (core dumped) ../run /build/jenkins/workspace/lcg_nightly_pipeline/build/frameworks/Gaudi-master/src/Gaudi-master-build/GaudiKernel/genconf --configurable-module=GaudiKernel.Proxy --configurable-default-name=Configurable.DefaultName --configurable-algorithm=ConfigurableAlgorithm --configurable-algtool=ConfigurableAlgTool --configurable-auditor=ConfigurableAuditor --configurable-service=ConfigurableService -o genConfDir/GaudiKernel -p GaudiKernel -i /build/jenkins/workspace/lcg_nightly_pipeline/build/frameworks/Gaudi-master/src/Gaudi-master-build/GaudiKernel/libtest_CustomFactory.so. ```. Root version: This is ROOT master",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12138:1263,audit,auditor,1263,https://root.cern,https://github.com/root-project/root/issues/12138,1,['audit'],['auditor']
Security,"It's on my local computer, but I can give you access to a VM (tomorrow); ```; C:\Users\bellenot>root -l; root [0] gClingOpts->AllowRedefinition = 0;; root [1] double z = 1234;; root [2] z = 1; (double) 1.0000000; root [3] z; (double) 1234.0000; root [4]; ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9809#issuecomment-1039313725:46,access,access,46,https://root.cern,https://github.com/root-project/root/issues/9809#issuecomment-1039313725,1,['access'],['access']
Security,"Jupyter may be configured to be served on different base url's, so we cannot assume that is accessible in `/`. This is the case, for example, when it's used together with JupyterHub (like SWAN), where the base url is `/user/_username_/`.; This PR fixes the way jsROOT is loaded in order to take that into account. . For that, I've removed `/static/`, which forced the absolute url to the file, and let requireJs apply its own configuration (which takes the base url into account). For Jupyterlab, I also load requireJs with the base url. In case requireJs is not available (maybe it will be possible to install Jupyterlab without Jupyter Notebooks in the future?), it falls back to a cdn to load it.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4652:92,access,accessible,92,https://root.cern,https://github.com/root-project/root/pull/4652,1,['access'],['accessible']
Security,KISTIv3.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/KISTIv3.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/ead666c8.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/77637f58.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/SDG-G2.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/SDG-G2.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/c1e29225.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/c1e29225.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/2f2e0e6e.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/2f2e0e6e.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/NorduGrid-2015.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/NorduGrid-2015.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/NorduGrid-2015.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/a3e2dbca.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/NIKHEF.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/a3e2dbca.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/f8598272.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/16054abd.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/2418a3f3.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/16054abd.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/a2dbd20c.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/f8598272.signing_policy' from CURLOPT_CAPA,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8092#issuecomment-840048181:59265,secur,security,59265,https://root.cern,https://github.com/root-project/root/issues/8092#issuecomment-840048181,2,"['certificate', 'secur']","['certificates', 'security']"
Security,KIUNAMgrid.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/GermanGrid.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/TSU-GE.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/PKIUNAMgrid.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/d0a33f8e.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/d0a33f8e.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/dd4b34ea.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/4b2783ac.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/TSU-GE.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/4b2783ac.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/dd4b34ea.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/7f4db168.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/7f4db168.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/089450c2.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/PSC-Myproxy-CA.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/QuoVadis-Root-CA3G3.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/PSC-Myproxy-CA.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/089450c2.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/PSC-Myproxy-CA.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/QuoVadis-Root-CA3G3.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/368bc755.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/PSC-Myproxy,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8092#issuecomment-840048181:29915,secur,security,29915,https://root.cern,https://github.com/root-project/root/issues/8092#issuecomment-840048181,2,"['certificate', 'secur']","['certificates', 'security']"
Security,"KernelTrivial.cxx:80:30: warning: Called C++ object pointer is null [clang-analyzer-core.CallAndMessage]; 1: Assuming 'foam' is equal to NULL in /opt/root_src/tmva/tmva/src/PDEFoamKernelTrivial.cxx:77; 2: Taking true branch in /opt/root_src/tmva/tmva/src/PDEFoamKernelTrivial.cxx:77; 3: Called C++ object pointer is null in /opt/root_src/tmva/tmva/src/PDEFoamKernelTrivial.cxx:80; /opt/root_src/tmva/tmva/src/PDF.cxx:267:8: warning: Called C++ object pointer is null [clang-analyzer-core.CallAndMessage]; 1: Passing value via 1st parameter 'hist' in /opt/root_src/tmva/tmva/src/PDF.cxx:188; 2: Calling 'PDF::BuildPDF' in /opt/root_src/tmva/tmva/src/PDF.cxx:188; 3: Assuming 'hist' is equal to NULL in /opt/root_src/tmva/tmva/src/PDF.cxx:264; 4: Taking true branch in /opt/root_src/tmva/tmva/src/PDF.cxx:264; 5: Called C++ object pointer is null in /opt/root_src/tmva/tmva/src/PDF.cxx:267; /opt/root_src/tmva/tmva/src/Reader.cxx:384:32: warning: Access to field 'fDataSetManager' results in a dereference of a null pointer (loaded from variable 'methCat') [clang-analyzer-core.NullDereference]; 1: Assuming the condition is false in /opt/root_src/tmva/tmva/src/Reader.cxx:371; 2: Taking false branch in /opt/root_src/tmva/tmva/src/Reader.cxx:371; 3: Calling 'Reader::BookMVA' in /opt/root_src/tmva/tmva/src/Reader.cxx:378; 4: 'im' initialized here in /opt/root_src/tmva/tmva/src/Reader.cxx:395; 5: 'method' initialized here in /opt/root_src/tmva/tmva/src/Reader.cxx:398; 6: Assuming 'method' is not equal to null in /opt/root_src/tmva/tmva/src/Reader.cxx:400; 7: Taking false branch in /opt/root_src/tmva/tmva/src/Reader.cxx:400; 8: Assuming the condition is false in /opt/root_src/tmva/tmva/src/Reader.cxx:402; 9: Taking false branch in /opt/root_src/tmva/tmva/src/Reader.cxx:402; 10: Returning pointer (loaded from 'method'), which participates in a condition later in /opt/root_src/tmva/tmva/src/Reader.cxx:424; 11: Returning pointer (loaded from 'method') in /opt/root_src/tmva/tmva/src/Reader.cxx",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7526:109986,Access,Access,109986,https://root.cern,https://github.com/root-project/root/issues/7526,1,['Access'],['Access']
Security,"LGTM!; My only doubt here is if we will ever want `RVec`s to be used from Python, or we will just expose them as NumPy arrays, but it certainly does not hurt to have this tutorial.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2332#issuecomment-405875481:98,expose,expose,98,https://root.cern,https://github.com/root-project/root/pull/2332#issuecomment-405875481,1,['expose'],['expose']
Security,LOPT_CAPATH; * failed to load '/etc/grid-security/certificates/1db3b27f.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/PK-Grid-2007.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/1db3b27f.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/d33760ec.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/TERENA-eScience-SSL-CA-3.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/KEK.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/TERENA-eScience-SSL-CA-3.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/633dc6a4.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/TERENA-eScience-SSL-CA-3.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/QuoVadis-Grid-ICA-G2.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/58b08cb5.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/TERENA-eScience-SSL-CA-3.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/f5ead794.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/e523eeaa.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/PK-Grid-2007.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/e523eeaa.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/38f7145f.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/PK-Grid-2007.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/38f7145f.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/617ff41b.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/677,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8092#issuecomment-840048181:25180,secur,security,25180,https://root.cern,https://github.com/root-project/root/issues/8092#issuecomment-840048181,2,"['certificate', 'secur']","['certificates', 'security']"
Security,LOPT_CAPATH; * failed to load '/etc/grid-security/certificates/2f2f573f.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/DigiCertGridTrustCAG2-Classic.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/18700496.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/bd43b60c.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/f5ead794.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/1db3b27f.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/PK-Grid-2007.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/1db3b27f.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/d33760ec.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/TERENA-eScience-SSL-CA-3.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/KEK.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/TERENA-eScience-SSL-CA-3.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/633dc6a4.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/TERENA-eScience-SSL-CA-3.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/QuoVadis-Grid-ICA-G2.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/58b08cb5.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/TERENA-eScience-SSL-CA-3.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/f5ead794.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/e523eeaa.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/PK-Grid-2007.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-securit,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8092#issuecomment-840048181:24689,secur,security,24689,https://root.cern,https://github.com/root-project/root/issues/8092#issuecomment-840048181,2,"['certificate', 'secur']","['certificates', 'security']"
Security,LOPT_CAPATH; * failed to load '/etc/grid-security/certificates/727146a8.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/b1159c4c.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/b1159c4c.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/727146a8.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/04f60c28.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/b4278411.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/04f60c28.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/CESNET-CA-Root.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/USERTrustECCCertificationAuthority.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/7ed47087.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/USERTrustECCCertificationAuthority.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/DigiCertGridRootCA-Root.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/USERTrustECCCertificationAuthority.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/CESNET-CA-Root.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/DigiCertGridRootCA-Root.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/USERTrustECCCertificationAuthority.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/98ef0ee5.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/CNRS2.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/f30dd6ad.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/b4278411.signing_policy' from CURLOPT_CAPATH; *,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8092#issuecomment-840048181:3022,secur,security,3022,https://root.cern,https://github.com/root-project/root/issues/8092#issuecomment-840048181,2,"['certificate', 'secur']","['certificates', 'security']"
Security,LOPT_CAPATH; * failed to load '/etc/grid-security/certificates/CESNET-CA-Root.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/CNRS2-Projets.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/DigiCertAssuredIDRootCA-Root.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/CESNET-CA-Root.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/DigiCertAssuredIDRootCA-Root.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/727146a8.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/b1159c4c.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/b1159c4c.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/727146a8.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/04f60c28.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/b4278411.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/04f60c28.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/CESNET-CA-Root.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/USERTrustECCCertificationAuthority.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/7ed47087.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/USERTrustECCCertificationAuthority.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/DigiCertGridRootCA-Root.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/USERTrustECCCertificationAuthority.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/CESNET-CA-Root.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/DigiCertGridRootCA-Root.info' from,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8092#issuecomment-840048181:2529,secur,security,2529,https://root.cern,https://github.com/root-project/root/issues/8092#issuecomment-840048181,2,"['certificate', 'secur']","['certificates', 'security']"
Security,LOPT_CAPATH; * failed to load '/etc/grid-security/certificates/CNRS2-Projets.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/DigiCertAssuredIDRootCA-Root.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/CESNET-CA-Root.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/DigiCertAssuredIDRootCA-Root.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/727146a8.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/b1159c4c.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/b1159c4c.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/727146a8.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/04f60c28.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/b4278411.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/04f60c28.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/CESNET-CA-Root.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/USERTrustECCCertificationAuthority.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/7ed47087.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/USERTrustECCCertificationAuthority.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/DigiCertGridRootCA-Root.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/USERTrustECCCertificationAuthority.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/CESNET-CA-Root.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/DigiCertGridRootCA-Root.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/USERTrustECCCertification,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8092#issuecomment-840048181:2621,secur,security,2621,https://root.cern,https://github.com/root-project/root/issues/8092#issuecomment-840048181,2,"['certificate', 'secur']","['certificates', 'security']"
Security,"LVMSupport.a(CommandLine.cpp.o)' to global weak symbol 'llvm::object_creator&lt;llvm::cl::SubCommand&gt;::call()' from file 'core/dictgen/CMakeFiles/Dictgen.dir/src/rootcling_impl.cxx.o' means the weak symbol cannot be overridden at runtime. This was likely caused by different translation units being compiled with different visibility settings. ; - [2021-05-21T12:52:16.778Z] ld: warning: direct access in function '(anonymous namespace)::CommandLineParser::addOption(llvm::cl::Option*, bool)' from file 'interpreter/llvm/src/lib/libLLVMSupport.a(CommandLine.cpp.o)' to global weak symbol 'llvm::object_deleter&lt;llvm::cl::SubCommand&gt;::call(void*)' from file 'core/dictgen/CMakeFiles/Dictgen.dir/src/rootcling_impl.cxx.o' means the weak symbol cannot be overridden at runtime. This was likely caused by different translation units being compiled with different visibility settings. ; - [2021-05-21T12:52:16.778Z] ld: warning: direct access in function '(anonymous namespace)::CommandLineParser::addOption(llvm::cl::Option*, bool)' from file 'interpreter/llvm/src/lib/libLLVMSupport.a(CommandLine.cpp.o)' to global weak symbol 'llvm::object_creator&lt;llvm::cl::SubCommand&gt;::call()' from file 'core/dictgen/CMakeFiles/Dictgen.dir/src/rootcling_impl.cxx.o' means the weak symbol cannot be overridden at runtime. This was likely caused by different translation units being compiled with different visibility settings. ; - [2021-05-21T12:52:16.778Z] ld: warning: direct access in function 'llvm::cl::Option::removeArgument()' from file 'interpreter/llvm/src/lib/libLLVMSupport.a(CommandLine.cpp.o)' to global weak symbol 'llvm::object_deleter&lt;llvm::cl::SubCommand&gt;::call(void*)' from file 'core/dictgen/CMakeFiles/Dictgen.dir/src/rootcling_impl.cxx.o' means the weak symbol cannot be overridden at runtime. This was likely caused by different translation units being compiled with different visibility settings. ; - [2021-05-21T12:52:16.778Z] ld: warning: direct access in function 'llvm::c",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8204#issuecomment-845962649:1892,access,access,1892,https://root.cern,https://github.com/root-project/root/pull/8204#issuecomment-845962649,1,['access'],['access']
Security,"LVMSupport.a(CommandLine.cpp.o)' to global weak symbol 'llvm::object_creator&lt;llvm::cl::SubCommand&gt;::call()' from file 'core/dictgen/CMakeFiles/Dictgen.dir/src/rootcling_impl.cxx.o' means the weak symbol cannot be overridden at runtime. This was likely caused by different translation units being compiled with different visibility settings. ; - [2021-05-21T13:10:36.449Z] ld: warning: direct access in function '(anonymous namespace)::CommandLineParser::addOption(llvm::cl::Option*, bool)' from file 'interpreter/llvm/src/lib/libLLVMSupport.a(CommandLine.cpp.o)' to global weak symbol 'llvm::object_deleter&lt;llvm::cl::SubCommand&gt;::call(void*)' from file 'core/dictgen/CMakeFiles/Dictgen.dir/src/rootcling_impl.cxx.o' means the weak symbol cannot be overridden at runtime. This was likely caused by different translation units being compiled with different visibility settings. ; - [2021-05-21T13:10:36.449Z] ld: warning: direct access in function '(anonymous namespace)::CommandLineParser::addOption(llvm::cl::Option*, bool)' from file 'interpreter/llvm/src/lib/libLLVMSupport.a(CommandLine.cpp.o)' to global weak symbol 'llvm::object_creator&lt;llvm::cl::SubCommand&gt;::call()' from file 'core/dictgen/CMakeFiles/Dictgen.dir/src/rootcling_impl.cxx.o' means the weak symbol cannot be overridden at runtime. This was likely caused by different translation units being compiled with different visibility settings. ; - [2021-05-21T13:10:36.449Z] ld: warning: direct access in function 'llvm::cl::Option::removeArgument()' from file 'interpreter/llvm/src/lib/libLLVMSupport.a(CommandLine.cpp.o)' to global weak symbol 'llvm::object_deleter&lt;llvm::cl::SubCommand&gt;::call(void*)' from file 'core/dictgen/CMakeFiles/Dictgen.dir/src/rootcling_impl.cxx.o' means the weak symbol cannot be overridden at runtime. This was likely caused by different translation units being compiled with different visibility settings. ; - [2021-05-21T13:10:36.449Z] ld: warning: direct access in function 'llvm::c",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8204#issuecomment-845970841:1894,access,access,1894,https://root.cern,https://github.com/root-project/root/pull/8204#issuecomment-845970841,1,['access'],['access']
Security,"LZMA by default creates very large hash tables for its dictionaries, e.g., at compression level 4, the hash table is 4Mi 4 byte entries, 16 MiB total. The hash table has to be zeroed before use so it is allocated via calloc(), which means all the pages have to be allocated, mapped and written. ROOT baskets are often much smaller than the default LZMA dictionaries; for small baskets, the large dictionary has very little compression benefit, while zeroing the hash table can be more expensive than the actual compression operation. Since R__zipLZMA() is actually being used to compress a buffer of known size, not a stream, we can use the size of the buffer to estimate an appropriate size for the dictionary. This PR uses a slightly more advanced part of the LZMA API to set the dictionary size to 1/4 the size of the input buffer, if that is smaller than the default size from the selected preset compression level. In tests with CMS data, this results in less than 1% increase in the output size and (in one test job) a 25% reduction in job total run time, with LZMA compression time reduced by 80% (all of that time that was being spent in memset() zeroing the hash table). I also tested this with the ""Event"" test program with Brian's changes from #59. With the same test parameters as Brian (""./Event 4000 6 99 1 1000 2""), I get. ZLIB level-6: 14.4 MB/s; Original LZMA level-6: 2.3 MB/s; Modified LZMA level-6: 3.0 MB/s. With 100 tracks per event (and hence smaller baskets) the improvement is from 2.2 MB/s to 3.9 MB/s. This change should be fully transparent and backwards compatible.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/194:35,hash,hash,35,https://root.cern,https://github.com/root-project/root/pull/194,5,['hash'],['hash']
Security,Lack of size validation in ZSTD compression,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9334:13,validat,validation,13,https://root.cern,https://github.com/root-project/root/issues/9334,1,['validat'],['validation']
Security,"Launching the Python tutorials from the 'tutorials/launcher.py' module injected; the `__main__` namespace in the tutorial itself. In general it is not a problem,; but it can sometimes hide errors like the one fixed by; https://github.com/root-project/root/pull/10177 . Using a rootlogon file serves; the same purpose and the tutorials can thus be launched by simply calling; 'python tutorialname.py'.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10207:71,inject,injected,71,https://root.cern,https://github.com/root-project/root/pull/10207,1,['inject'],['injected']
Security,"Let configure different parameter in the THttpServer and in the threads layout to minimize as much as possible; round-trip packet time. After all tunings round-trip time can be reduced from 30ms to 1.4ms. . Introduce `tutorials/webgui/ping/` example, which demonstrate and let test all possible tuning parameters independently. Once code adjusted to headless mode, one potentially can include it into stress tests during ROOT nightly/PR builds.; It is very simple, but powerful test of JSROOT/THttpServer/RWebWindow code integrity. Thanks to @osschar and @alja for initial idea.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7777:521,integrity,integrity,521,https://root.cern,https://github.com/root-project/root/pull/7777,1,['integrity'],['integrity']
Security,Let test webgui integrity; - if THttpServer work properly; - if JSROOT loads on client side; - if communication runs between server and clients,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7901:16,integrity,integrity,16,https://root.cern,https://github.com/root-project/root/pull/7901,1,['integrity'],['integrity']
Security,"Link to compilation error:; https://epsft-jenkins.cern.ch/view/ROOT%20Nightly/job/root-nightly-master/1977/LABEL=mac1012,SPEC=noimt/parsed_console/. The error is due to a bug in clang3.5, reproducible in isolation:; https://godbolt.org/z/jtYXv6. The workaround is to avoid specifying the template parameters of a; template base class -- the full type is injected in the derived class; anyway (thanks Axel!).",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3098:354,inject,injected,354,https://root.cern,https://github.com/root-project/root/pull/3098,1,['inject'],['injected']
Security,"Linux64bit+3.10-2.17-e28-p3915-prof/lib/libCling.so.6.28.06); ==201374== by 0xF345DBD2: clang::Parser::TryAnnotateCXXScopeToken(bool) (in /cvmfs/mu2e.opensciencegrid.org/artexternals/root/v6_28_06b/Linux64bit+3.10-2.17-e28-p3915-prof/lib/libCling.so.6.28.06); ==201374== by 0xF2A57896: cling::LookupHelper::findScope(llvm::StringRef, cling::LookupHelper::DiagSetting, clang::Type const**, bool) const (in /cvmfs/mu2e.opensciencegrid.org/artexternals/root/v6_28_06b/Linux64bit+3.10-2.17-e28-p3915-prof/lib/libCling.so.6.28.06); ==201374== by 0xF29824CD: GetClassSharedLibsForModule (TCling.cxx:6957); ==201374== by 0xF29824CD: TCling::GetClassSharedLibs(char const*) (TCling.cxx:7061); ==201374== by 0xF2965186: TCling::ShallowAutoLoadImpl(char const*) (TCling.cxx:6119); ==201374== by 0xF2983220: TCling::DeepAutoLoadImpl(char const*, std::unordered_set<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >&, bool) (TCling.cxx:6172); ==201374== by 0xF2983743: TCling::AutoLoad(char const*, bool) (TCling.cxx:6284); ==201374== by 0xF29838A5: TCling::AutoLoad(std::type_info const&, bool) (TCling.cxx:6103); ==201374== by 0x14EB2D47: TClass::GetClass(std::type_info const&, bool, bool, unsigned long, unsigned long) (TClass.cxx:3316); ==201374== by 0x139AA957: GetClass (TClass.h:628); ==201374== by 0x139AA957: GetClassHelper<std::tuple<char const*> > (TClass.h:644); ==201374== by 0x139AA957: GetClass<std::tuple<char const*> > (TClass.h:654); ==201374== by 0x139AA957: long TPluginHandler::ExecPluginImpl<char const*>(char const* const&) (TPluginManager.h:175); ==201374== by 0x139A9B5C: ExecPlugin<char const*> (TPluginManager.h:218); ==201374== by 0x139A9B5C: ROOT::Math::Factory:",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14199:1871,hash,hash,1871,https://root.cern,https://github.com/root-project/root/issues/14199,1,['hash'],['hash']
Security,Lock access to global functions list,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/31:5,access,access,5,https://root.cern,https://github.com/root-project/root/pull/31,1,['access'],['access']
Security,"Looking e.g. at https://github.com/root-project/root/blob/master/tree/ntuple/v7/src/RField.cxx there are some places where a `R__ASSERT` is desirable (validation of input parameters, erroring out in certain edge cases), but in others I think we use it for ensuring that no bugs are present, in which case `assert` would be more appropriate. I did not see places where the checks are so expensive that the difference might matter in terms of performance, but it might be better to establish clear usage patterns before that happens :)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10618:151,validat,validation,151,https://root.cern,https://github.com/root-project/root/issues/10618,1,['validat'],['validation']
Security,"Looking into this, isn't the problem rather that we don't expose collections necessarily as `RVec` columns in RNTupleDS but instead we use the collection type that was used to originally store them (such as `std::vector`)? If a field of type `RVec<T>` is created, we are actually not using `RVectorField` but an [RVec specialization](https://github.com/root-project/root/blob/master/tree/ntuple/v7/inc/ROOT/RField.hxx#L967), for which we unfortunately don't have a type-erased version yet. Put in another way, why should [the `RVec` cast](https://github.com/root-project/root/pull/6336/files#diff-36fd7a2e2d24a398e279578a4a3705c8R109) of the ""jets"" column work if it is in fact an `std::vector<float>`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6347#issuecomment-692337428:58,expose,expose,58,https://root.cern,https://github.com/root-project/root/issues/6347#issuecomment-692337428,1,['expose'],['expose']
Security,"Looks good from my point of view, I'll let Jakob have the final say. One point we should clarify at some point (but doesn't need to block this PR) is how subfield access plays with writing: It intuitively makes sense for reading as you can just have the same value multiple times in memory. But I guess we only want to take the top-level fields from the entry for writing? Should we forbid creating a (parallel) writer passing a model with registered subfields?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16693#issuecomment-2443511035:163,access,access,163,https://root.cern,https://github.com/root-project/root/pull/16693#issuecomment-2443511035,2,['access'],['access']
Security,"MVA::DNN::VGeneralLayer&lt;TMVA::DNN::TCpu&lt;float&gt; &gt;::Matrix_t&)’ . ### Warnings:; - /mnt/build/workspace/root-pullrequests-build/root/core/meta/src/TClass.cxx:686:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:5203:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:4757:26: warning: ‘char* strncpy(char*, const char*, size_t)’ output may be truncated copying 10 bytes from a string of length 10 [-Wstringop-truncation] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:490:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing between 2147483648 and 2147483647 bytes at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 4294967295] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:761:21: warning: ‘%lu’ directive writing between 1 and 20 bytes into a region of size between 0 and 8191 [-Wformat-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/proof/proofd/src/XrdProofdProtocol.cxx:527:45: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘class XrdSecEntity’; use assignment or value-initialization instead [-Wclass-memaccess] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TSystem.cxx:1148:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing 1 byte at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 2147483649] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1770:96: warning: cast between incompatible function types from ‘TVirtualPad*& (*)()’ to ‘TGlobalMappedFunction::G",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2219#issuecomment-411905157:1236,access,accessing,1236,https://root.cern,https://github.com/root-project/root/pull/2219#issuecomment-411905157,2,['access'],['accessing']
Security,Make FileAndIndex class ordered and hashable,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8637:36,hash,hashable,36,https://root.cern,https://github.com/root-project/root/pull/8637,1,['hash'],['hashable']
Security,Make TTreeReaderArray's iterator random access,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1259:40,access,access,40,https://root.cern,https://github.com/root-project/root/pull/1259,1,['access'],['access']
Security,"MakeUnique.hxx:28:30: error: invalid use of array with unspecified bounds . ### Warnings:; - /mnt/build/workspace/root-pullrequests-build/root/core/meta/src/TClass.cxx:686:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:5203:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:4757:26: warning: ‘char* strncpy(char*, const char*, size_t)’ output may be truncated copying 10 bytes from a string of length 10 [-Wstringop-truncation] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:490:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing between 2147483648 and 2147483647 bytes at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 4294967295] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:761:21: warning: ‘%lu’ directive writing between 1 and 20 bytes into a region of size between 0 and 8191 [-Wformat-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/proof/proofd/src/XrdProofdProtocol.cxx:527:45: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘class XrdSecEntity’; use assignment or value-initialization instead [-Wclass-memaccess] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TSystem.cxx:1148:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing 1 byte at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 2147483649] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1770:96: warning: cast between incompatible function types from ‘TVirtualPad*& (*)()’ to ‘TGlobalMappedFunction::G",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2246#issuecomment-409925477:1079,access,accessing,1079,https://root.cern,https://github.com/root-project/root/pull/2246#issuecomment-409925477,4,['access'],['accessing']
Security,"Making the issue more concrete, what would certainly be nice would be to:. - have a nice string representation for RDF nodes and results; - be able to access method docs from the Python prompt. Having nice printouts for the types of RDF _methods_ in PyROOT seems low priority.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9023#issuecomment-929054578:151,access,access,151,https://root.cern,https://github.com/root-project/root/issues/9023#issuecomment-929054578,1,['access'],['access']
Security,Many thanks Simon. That worked. . Axel:. ***@***.*** ~]$ curl -v --show-error --cacert /tmp/x509up_u`id -u` --connect-timeout 300 --max-time 3600 --capath /etc/grid-security/certificates --cert /tmp/x509up_u`id -u` --key /tmp/x509up_u`id -u` -L https://webdav.lcg.triumf.ca:2880/atlas/atlaslocalgroupdisk/rucio/user/desilva/a1/a8/myFile.1.root -o /dev/null; % Total % Received % Xferd Average Speed Time Time Time Current; Dload Upload Total Spent Left Speed; 0 0 0 0 0 0 0 0 --:--:-- --:--:-- --:--:-- 0* About to connect() to webdav.lcg.triumf.ca port 2880 (#0); * Trying 2607:f8f0:660:3::40...; * Connected to webdav.lcg.triumf.ca (2607:f8f0:660:3::40) port 2880 (#0); * Initializing NSS with certpath: sql:/etc/pki/nssdb; * failed to load '/etc/grid-security/certificates/7022e3c4.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/69105f4f.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/CERN-Root-2.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/69105f4f.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/DigiCertGridRootCA-Root.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/DigiCertAssuredIDRootCA-Root.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/edca0fc0.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/DigiCertAssuredIDRootCA-Root.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/CESNET-CA-Root.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/CNRS2-Projets.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/DigiCertAssuredIDRootCA-Root.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/CESNET-CA-Root.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/DigiCertAssuredIDRootCA-Root.signi,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8092#issuecomment-840048181:165,secur,security,165,https://root.cern,https://github.com/root-project/root/issues/8092#issuecomment-840048181,8,"['certificate', 'secur']","['certificates', 'security']"
Security,"May 08 16:29:03 2022 GMT; > * 	common name: dpool46.lcg.triumf.ca <http://dpool46.lcg.triumf.ca/>; > * 	issuer: CN=Grid Canada Certificate Authority,O=Grid,C=CA; > * NSS error -8179 (SEC_ERROR_UNKNOWN_ISSUER); > * Peer's Certificate issuer is not recognized.; > * Closing connection 0; > curl: (60) Peer's Certificate issuer is not recognized.; > More details here: http://curl.haxx.se/docs/sslcerts.html <http://curl.haxx.se/docs/sslcerts.html>; > ; > curl performs SSL certificate verification by default, using a ""bundle""; > of Certificate Authority (CA) public keys (CA certs). If the default; > bundle file isn't adequate, you can specify an alternate file; > using the --cacert option.; > If this HTTPS server uses a certificate signed by a CA represented in; > the bundle, the certificate verification probably failed due to a; > problem with the certificate (it might be expired, or the name might; > not match the domain name in the URL).; > If you'd like to turn off curl's verification of the certificate, use; > the -k (or --insecure) option.; > ***@***.*** t5]$ . I am unfamiliar with how to use curl with X509 and everything I tried so far has not worked. eg; curl -v https://webdav.lcg.triumf.ca:2880/atlas/atlaslocalgroupdisk/rucio/user/desilva/a1/a8/myFile.1.root --key ~/.globus/userkey.pem --cert ~/.globus/usercert.pem; or; curl -v https://webdav.lcg.triumf.ca:2880/atlas/atlaslocalgroupdisk/rucio/user/desilva/a1/a8/myFile.1.root --key ~/.globus/userkey.pem --cert ~/.globus/usercert.pem --capath /etc/grid-security/certificates. regards,; Asoka. > On May 12, 2021, at 10:18 AM, Axel Naumann ***@***.***> wrote:; > ; > ; > Right - without authentication I cannot see what's happening. If this is due to a redirect it would be a dupe of #8155 <https://github.com/root-project/root/issues/8155> - if not then it's different :-) But I don't know how to tell whether it's a redirect. Do you?; > ; > If not let's get #8155 <https://github.com/root-project/root/issues/8155> fixed and t",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8092#issuecomment-839961058:2560,certificate,certificate,2560,https://root.cern,https://github.com/root-project/root/issues/8092#issuecomment-839961058,1,['certificate'],['certificate']
Security,Maybe Visual Studio has something like https://clang.llvm.org/docs/SanitizerSpecialCaseList.html,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9445#issuecomment-2378021801:67,Sanitiz,SanitizerSpecialCaseList,67,https://root.cern,https://github.com/root-project/root/issues/9445#issuecomment-2378021801,1,['Sanitiz'],['SanitizerSpecialCaseList']
Security,"Maybe it is better to have a unique method to scale and translate, i.e. passing to coefficient c1 and c2 and do c1*y+c2, and by default c2=0. This would avoid adding more functions to all the TGRaph objects.; On the other hand it is easy to operate to the TGraph content, since the underlined vectors are exposed and the user can easily modify them.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8143#issuecomment-946816815:305,expose,exposed,305,https://root.cern,https://github.com/root-project/root/pull/8143#issuecomment-946816815,1,['expose'],['exposed']
Security,Maybe this helps: https://ca.cern.ch/cafiles/certificates/windows.aspx?redir=0&ca=grid,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/15896#issuecomment-2213984988:45,certificate,certificates,45,https://root.cern,https://github.com/root-project/root/issues/15896#issuecomment-2213984988,1,['certificate'],['certificates']
Security,"Measurements by @sciaba show that, at high thread counts, RDF multi-thread event loops on remote data suffer a scaling breakdown because of some throttling mechanisms in xrootd. Working around the throttling is possible, but it's unclear whether it's the right thing:tm: to do in all cases. Namely: ; - setting XRD_PARALLELEVTLOOP as in https://github.com/root-project/root/issues/7709; - faking different clients for each thread or each file, e.g. by using URLs like `root://client1@eoscms.cern.ch//eos/myfile.root`, works around connection multiplexing. The degradation is severe enough that I labeled it a bug (preliminary benchmarks showed a speed-up of more than one order of magnitude for high thread counts in the same application with/without the workarounds above).; Multi-process event loops such as those of distributed RDF should not be affected. A link to the exact findings can be added to this issue when they are public, for now this is a reminder that there is a problem to be looked at. EDIT:; For completeness, [this other PR](https://github.com/root-project/root/pull/11631) by @bendavid addresses orthogonal thread contention issues in remote file access with ROOT.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12621:1169,access,access,1169,https://root.cern,https://github.com/root-project/root/issues/12621,1,['access'],['access']
Security,"Merge the `RooIntegrator1D` class with its slight variations: `RooIntegrator2D`, `RooSegmentedIntegrator1D`, and `RooSegmentedIntegrator2D`. To reflect the fact that it can now be used for the n-dimenstional case, it is renamed to `RooRombergIntegrator`. This greatly reduces boilerplate code to implement the different numeric integration methods (more detail in the PR description).; It will also make porting the numerical integration with the Romberg method to the GPU much easier. The changes were validated with the following script:; ```c++; // runNumIntValidation.C. #include <RooFormulaVar.h>; #include <RooNumIntConfig.h>; #include <RooRealVar.h>. void testIntegrationMethod(int ndim, std::string const &label); {; RooRealVar x{""x"", ""x"", 0, 10};; RooRealVar y{""y"", ""y"", 0, 10};. std::string funcName = std::string(""func"") + label;; RooFormulaVar func{funcName.c_str(), ""x*std::sqrt(x) + y*std::sqrt(y) + x*y"", {x, y}};. std::cout << label << "":"" << std::endl;. RooNumIntConfig cfg(*func.getIntegratorConfig());. if (ndim == 2) {; cfg.method2D().setLabel(label.c_str());; }; if (ndim == 1) {; cfg.method1D().setLabel(label.c_str());; }. RooArgSet iset{x};; if (ndim > 1); iset.add(y);; std::unique_ptr<RooAbsReal> integ{func.createIntegral(iset, RooFit::NumIntConfig(cfg))};; double val = integ->getVal();; std::cout << std::setprecision(15) << val << std::endl;. std::cout << std::endl;; }. void runNumIntValidation(); {; RooHelpers::LocalChangeMsgLevel changeMsgLvl(RooFit::WARNING);. std::vector<std::string> methods1d{""RooIntegrator1D"", ""RooSegmentedIntegrator1D""};; std::vector<std::string> methods2d{""RooAdaptiveIntegratorND"", ""RooIntegrator2D"", ""RooSegmentedIntegrator2D""};. for (auto const &label : methods1d) {; testIntegrationMethod(1, label);; }. for (auto const &label : methods2d) {; testIntegrationMethod(2, label);; }; }; ```. The output with this PR is the same as with ROOT master:; ```; RooIntegrator1D:; 488.294986988088. RooSegmentedIntegrator1D:; 488.294680086881. RooAda",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13384:503,validat,validated,503,https://root.cern,https://github.com/root-project/root/pull/13384,1,['validat'],['validated']
Security,"Might work for `Streamer()`, won't work for `Hash()`. Maybe we can sneak this into `GenerateInitInstance` - TBD.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1837#issuecomment-380087868:45,Hash,Hash,45,https://root.cern,https://github.com/root-project/root/pull/1837#issuecomment-380087868,1,['Hash'],['Hash']
Security,"More differential:. It seems that `root.exe -l -b -e 'gSystem->AccessPathName(""KKKKK"",kFileExists)'` works and `root.exe -l -b -e 'gSystem->AccessPathName("""",kFileExists)'` does not. . The LLVM IR diff:. ```diff ; diff -u working.ir broken.ir ; --- working.ir	2021-11-30 00:17:51.000000000 +0200; +++ broken.ir	2021-11-30 00:18:01.000000000 +0200; @@ -30,7 +30,7 @@; ; @_ZN5cling7runtime6gClingE = external local_unnamed_addr global %""class.cling::Interpreter.0""*, align 8; @gSystem = external local_unnamed_addr global %class.TSystem*, align 8; -@.str = dso_local unnamed_addr constant [6 x i8] c""KKKKK\00"", align 1; +@.str = dso_local unnamed_addr constant [1 x i8] zeroinitializer, align 1; ; define dso_local void @_ZN11__cling_N5015__cling_Un1Qu30EPv(i8*) local_unnamed_addr #0 {; %2 = load i8*, i8** bitcast (%""class.cling::Interpreter.0""** @_ZN5cling7runtime6gClingE to i8**), align 8, !tbaa !2; @@ -39,9 +39,9 @@; %5 = load i1 (%class.TSystem*, i8*, i32)**, i1 (%class.TSystem*, i8*, i32)*** %4, align 8, !tbaa !6; %6 = getelementptr inbounds i1 (%class.TSystem*, i8*, i32)*, i1 (%class.TSystem*, i8*, i32)** %5, i64 135; %7 = load i1 (%class.TSystem*, i8*, i32)*, i1 (%class.TSystem*, i8*, i32)** %6, align 8; - %8 = tail call zeroext i1 %7(%class.TSystem* %3, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str, i64 0, i64 0), i32 zeroext 0); + %8 = tail call zeroext i1 %7(%class.TSystem* %3, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str, i64 0, i64 0), i32 zeroext 0); %9 = zext i1 %8 to i64; - tail call void @_ZN5cling7runtime8internal15setValueNoAllocEPvS2_S2_cy(i8* %2, i8* %0, i8* nonnull inttoptr (i64 283833264 to i8*), i8 signext 1, i64 %9); + tail call void @_ZN5cling7runtime8internal15setValueNoAllocEPvS2_S2_cy(i8* %2, i8* %0, i8* nonnull inttoptr (i64 283832976 to i8*), i8 signext 1, i64 %9); ret void; }; ; @@ -65,4 +65,4 @@; !5 = !{!""Simple C++ TBAA""}; !6 = !{!7, !7, i64 0}; !7 = !{!""vtable pointer"", !5, i64 0}; -$8 = void; +$10 = void; ```. Please ignore thi",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8072#issuecomment-982075814:63,Access,AccessPathName,63,https://root.cern,https://github.com/root-project/root/issues/8072#issuecomment-982075814,2,['Access'],['AccessPathName']
Security,"More puzzling, here are two consecutive runs without changing anything (using `expandedUrl`):; ```bash; lcgapp-centos8-physical amadio $ cat test.C; #include ""TFile.h"". void test(const char* filename, const char* options); {; auto f = TFile::Open(filename, options);; }. int main(int argc, char **argv); {; test(argv[1], argv[2]);; }. $ cat ~/.rootrc && strace ./test test.root 2>&1 | grep ""test.root""; TFile.CrossProtocolRedirects: yes; execve(""./test"", [""./test"", ""test.root""], 0x7fffd10a02b8 /* 49 vars */) = 0; getxattr(""test.root"", ""eos.url.xroot"", NULL, 0) = 54; getxattr(""test.root"", ""eos.url.xroot"", ""root://eoshome-a.cern.ch//eos/us""..., 54) = 54; access(""/eos/home-a/amadio/test.root"", F_OK) = 0; access(""/eos/home-a/amadio/test.root"", R_OK) = 0; openat(AT_FDCWD, ""/eos/home-a/amadio/test.root"", O_RDONLY) = 11; lstat(""/eos/home-a/amadio/test.root"", {st_mode=S_IFREG|0644, st_size=2244449133, ...}) = 0; lstat(""/eos/home-a/amadio/test.root"", {st_mode=S_IFREG|0644, st_size=2244449133, ...}) = 0. $ cat ~/.rootrc && strace ./test test.root 2>&1 | grep ""test.root""; TFile.CrossProtocolRedirects: yes; execve(""./test"", [""./test"", ""test.root""], 0x7fff277b6488 /* 49 vars */) = 0; getxattr(""test.root"", ""eos.url.xroot"", NULL, 0) = 53; getxattr(""test.root"", ""eos.url.xroot"", ""root://eoshome-a.cern.ch//eos/us""..., 53) = 53; ```; So better keep the code where it is, as I never observe this sort of thing in that case.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11644#issuecomment-1311586177:657,access,access,657,https://root.cern,https://github.com/root-project/root/pull/11644#issuecomment-1311586177,2,['access'],['access']
Security,"Mulltiprocessing of Hyper Parameter Optimisation, Cross Validation and Variable Importance",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/858:56,Validat,Validation,56,https://root.cern,https://github.com/root-project/root/pull/858,1,['Validat'],['Validation']
Security,"MultiTF1Templ<T>::HasParameterHessian(); from BasicFCNL::HasHessian; from ROOT::Fit::Fitter::DoInitMinimizer; ```. Note: The tutorials seems unrelated to Clad. ### Reproducer. disabled and run `ctest -R tutorial-fit-exampleFit3D`. With clad disabled, we get:; ```; Command: ""/Applications/CMake.app/Contents/bin/cmake"" ""-DCMD=/Users/pcanal/root_working/builds/master-pr/bin/root.exe^-b^-l^-q^/Users/pcanal/root_working/code/master/tutorials/fit/exampleFit3D.C"" ""-DSYS=/Users/pcanal/root_working/bu; ilds/master-pr"" ""-DENV=PATH=/Users/pcanal/root_working/builds/master-pr/bin::/Library/Frameworks/Python.framework/Versions/3.9/bin:/Library/Frameworks/Python.framework/Versions/3.9/bin:/Library/Frameworks/Python.framework/Versions/3; .8/bin:/Users/pcanal/bin:/usr/local/bin:/System/Cryptexes/App/usr/bin:/usr/bin:/bin:/usr/sbin:/sbin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/local/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstra; p/usr/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/appleinternal/bin:/Library/Apple/usr/bin:/opt/podman/bin#DYLD_LIBRARY_PATH=/Users/pcanal/root_working/builds/master-pr/lib:#ROOTSYS=/Users/pcanal/root_working; /builds/master-pr#PYTHONPATH=/Users/pcanal/root_working/builds/master-pr/lib:"" ""-P"" ""/Users/pcanal/root_working/builds/master-pr/RootTestDriver.cmake""; Directory: /Users/pcanal/root_working/builds/master-pr/runtutorials; ""tutorial-fit-exampleFit3D"" start time: Mar 28 16:08 CDT; Output:; ----------------------------------------------------------. Processing /Users/pcanal/root_working/code/master/tutorials/fit/exampleFit3D.C...; In file included from input_line_38:1:; /opt/build/root_builds/master-pr/include/Math/CladDerivator.h:25:10: fatal error: 'plugins/include/clad/Differentiator/Differentiator.h' file not found; #include <plugins/include/clad/Differentiator/Differentiator.h>; ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~; input_line_39:4:1: error: use of undeclared identifier ",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/15091:1854,secur,security,1854,https://root.cern,https://github.com/root-project/root/issues/15091,1,['secur'],['security']
Security,"Muons.root"", F_OK) = 0; access(""/eos/home-a/amadio/Run2012BC_DoubleMuParked_Muons.root"", R_OK) = 0; openat(AT_FDCWD, ""/eos/home-a/amadio/Run2012BC_DoubleMuParked_Muons.root"", O_RDONLY) = 4; lstat(""/eos/home-a/amadio/Run2012BC_DoubleMuParked_Muons.root"", {st_mode=S_IFREG|0644, st_size=2244449133, ...}) = 0; lstat(""/eos/home-a/amadio/Run2012BC_DoubleMuParked_Muons.root"", {st_mode=S_IFREG|0644, st_size=2244449133, ...}) = 0; access(""/eos/home-a/amadio/Run2012BC_DoubleMuParked_Muons.root"", F_OK) = 0; access(""/eos/home-a/amadio/Run2012BC_DoubleMuParked_Muons.root"", R_OK) = 0; openat(AT_FDCWD, ""/eos/home-a/amadio/Run2012BC_DoubleMuParked_Muons.root"", O_RDONLY) = 5; lstat(""/eos/home-a/amadio/Run2012BC_DoubleMuParked_Muons.root"", {st_mode=S_IFREG|0644, st_size=2244449133, ...}) = 0; lstat(""/eos/home-a/amadio/Run2012BC_DoubleMuParked_Muons.root"", {st_mode=S_IFREG|0644, st_size=2244449133, ...}) = 0; access(""/eos/home-a/amadio/Run2012BC_DoubleMuParked_Muons.root"", F_OK) = 0; access(""/eos/home-a/amadio/Run2012BC_DoubleMuParked_Muons.root"", R_OK) = 0; openat(AT_FDCWD, ""/eos/home-a/amadio/Run2012BC_DoubleMuParked_Muons.root"", O_RDONLY) = 5; lstat(""/eos/home-a/amadio/Run2012BC_DoubleMuParked_Muons.root"", {st_mode=S_IFREG|0644, st_size=2244449133, ...}) = 0; lstat(""/eos/home-a/amadio/Run2012BC_DoubleMuParked_Muons.root"", {st_mode=S_IFREG|0644, st_size=2244449133, ...}) = 0; write(1, ""Muons with opposite charge: pass""..., 97Muons with opposite charge: pass=24067843 all=31104343 -- eff=77.38 % cumulative eff=39.11 %; ```; one with the redirection enabled:; ```bash; $ strace ./dimuon Run2012BC_DoubleMuParked_Muons.root 2>&1 | grep Muons; execve(""./dimuon"", [""./dimuon"", ""Run2012BC_DoubleMuParked_Muons.r""...], 0x7ffe7c400bd8 /* 49 vars */) = 0; getxattr(""Run2012BC_DoubleMuParked_Muons.root"", ""eos.url.xroot"", NULL, 0) = 79; getxattr(""Run2012BC_DoubleMuParked_Muons.root"", ""eos.url.xroot"", ""root://eoshome-a.cern.ch//eos/us""..., 79) = 79; getxattr(""Run2012BC_DoubleMuParked_Muons.root"", ""eo",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11644#issuecomment-1311572434:1443,access,access,1443,https://root.cern,https://github.com/root-project/root/pull/11644#issuecomment-1311572434,1,['access'],['access']
Security,"My personal preference is to store std::string instead of a hash, as it's simpler and hashing anyway doesn't give us any improvement in performance. About transaction, I'm testing something like what I asked but it gives me an error like this which seems very cryptic to me, have you ever seen this error before?; https://gist.github.com/yamaguchi1024/b137f5313dfca23abbe890a5c4440a7d",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2434#issuecomment-411910183:60,hash,hash,60,https://root.cern,https://github.com/root-project/root/pull/2434#issuecomment-411910183,4,['hash'],"['hash', 'hashing']"
Security,"My two cents: I guess the question is whether there are other developers than Max that assume `R__ASSERT` also gets compiled in release builds, and I guess the safe option is to assume there are. Personally I would be ok with a `R__DEBUG_ASSERT` (+ an audit of `R__ASSERT` usages in RDF & co., + a big banner in R__ASSERT's docs). Note that there are other places like `math` where usages of `R__ASSERT` might warrant an audit, they might happen in hot code paths:. ```; roofit/roofitmore/src/RooNonCentralChiSquare.cxx:1; roofit/roofitcore/src/RooHistFunc.cxx:1; roofit/roofitmore/src/RooLegendre.cxx:3; roofit/roofit/src/RooCrystalBall.cxx:2; roofit/roofit/src/RooArgusBG.cxx:1; roofit/roofit/src/RooParamHistFunc.cxx:1; roofit/roofit/src/RooKeysPdf.cxx:2; roofit/roofit/src/RooCBShape.cxx:2; roofit/roofit/src/RooGaussModel.cxx:6; roofit/roofit/src/RooParametricStepFunction.cxx:2; roofit/roofit/src/RooDecay.cxx:1; roofit/roofit/src/RooLognormal.cxx:2; roofit/roofit/src/RooBernstein.cxx:2; roofit/roofit/src/RooBDecay.cxx:1; roofit/roofit/src/RooPolynomial.cxx:2; roofit/roofit/src/RooGamma.cxx:2; roofit/roofit/src/RooNDKeysPdf.cxx:6; roofit/roofit/src/RooPoisson.cxx:2; roofit/roofit/src/RooGExpModel.cxx:4; roofit/roofitcore/src/RooHistPdf.cxx:1; roofit/roofitcore/src/RooRealSumPdf.cxx:2; roofit/roofitcore/src/RooTruthModel.cxx:5; roofit/roofitcore/src/RooEfficiency.cxx:1; roofit/roofitcore/src/RooPolyVar.cxx:2; roofit/histfactory/src/HistoToWorkspaceFactoryFast.cxx:2; roofit/histfactory/src/FlexibleInterpVar.cxx:11; gui/fitpanel/src/TFitEditor.cxx:1; hist/hist/test/test_THBinIterator.cxx:1; hist/hist/src/THistRange.cxx:1; hist/hist/src/TH1Merger.cxx:5; hist/hist/inc/THistRange.h:4; hist/hist/src/TF1.cxx:2; hist/hist/src/TProfile2D.cxx:4; hist/hist/src/TFormula_v5.cxx:1; hist/hist/src/TH3.cxx:5; hist/hist/inc/TNDArray.h:3; hist/hist/src/TH1.cxx:5; hist/hist/src/TProfileHelper.h:2; hist/hist/src/HFitImpl.cxx:5; hist/hist/src/TPrincipal.cxx:1; hist/hist/src/TProfile3D.cxx:4; hist/",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8587#issuecomment-872791223:252,audit,audit,252,https://root.cern,https://github.com/root-project/root/pull/8587#issuecomment-872791223,2,['audit'],['audit']
Security,Myproxy-CA.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/089450c2.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/PSC-Myproxy-CA.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/QuoVadis-Root-CA3G3.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/368bc755.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/PSC-Myproxy-CA.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/1149214e.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/1149214e.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/87429ba3.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/30ffc224.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/295adc19.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/30ffc224.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/TRGrid.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/DFN-GridGermany-Root.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/295adc19.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/DFN-GridGermany-Root.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/6f071272.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/DFN-GridGermany-Root.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/REUNA-ca.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/6f071272.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/DFN-GridGermany-Root.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certifica,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8092#issuecomment-840048181:31431,secur,security,31431,https://root.cern,https://github.com/root-project/root/issues/8092#issuecomment-840048181,2,"['certificate', 'secur']","['certificates', 'security']"
Security,NAMgrid-ca.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/AC-GRID-FR-Robots.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/UNAMgrid-ca.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/UNLPGrid.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/SDG-G2.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/AC-GRID-FR-Robots.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/7a819ef2.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/UNAMgrid-ca.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/QuoVadis-Root-CA2.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/QuoVadis-Root-CA2.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/UNLPGrid.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/QuoVadis-Root-CA2.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/d71343e8.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/QuoVadis-Root-CA2.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/d71343e8.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/d7e8dc79.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/SlovakGrid.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/728fa56d.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/SlovakGrid.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/728fa56d.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/e13e0fcf.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/e2,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8092#issuecomment-840048181:52784,secur,security,52784,https://root.cern,https://github.com/root-project/root/issues/8092#issuecomment-840048181,2,"['certificate', 'secur']","['certificates', 'security']"
Security,NCSA-slcs-2013.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/e2023333.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/2fc6b233.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/AC-GRID-FR-Personnels.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/2fc6b233.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/ff94d436.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/0e635db3.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/8fa17d52.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/0e635db3.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/IGCA2.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/RDIG.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/AC-GRID-FR-Personnels.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/156a0f0f.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/seegrid-ca-2013.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/ff94d436.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/3d5be7bc.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/55994d72.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/94b468c6.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/3d5be7bc.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/94b468c6.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/b1ac0d46.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/RDIG.name,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8092#issuecomment-840048181:43760,secur,security,43760,https://root.cern,https://github.com/root-project/root/issues/8092#issuecomment-840048181,2,"['certificate', 'secur']","['certificates', 'security']"
Security,"No need to be sorry for being correct :). So, I've put the following comment at the beginning of the `if(isChain)` section:. ```cpp; // Note that each TChainElement returned by chain.GetListOfFiles has a name; // equal to the tree name of this TChain and a title equal to the filename.; // Accessing the information like this ensures that we get the correct; // filenames and treenames if the treename is given as part of the filename; // via chain.AddFile(file.root/myTree) and as well if the tree name is given; // in the constructor via TChain(myTree) and a file is added later by chain.AddFile(file.root).; ```. @bluehood Do you think this is explicit enough?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4879#issuecomment-582304344:290,Access,Accessing,290,https://root.cern,https://github.com/root-project/root/pull/4879#issuecomment-582304344,1,['Access'],['Accessing']
Security,"No, this is fully standard Debian Unstable without anything CERN specific. And as far as I can tell, the problem is not that `krb5` and `gsi` but that XRootD should gracefully continue other authentication methods - or none at all, it's `eospublic` after all.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12231#issuecomment-1420336958:191,authenticat,authentication,191,https://root.cern,https://github.com/root-project/root/issues/12231#issuecomment-1420336958,1,['authenticat'],['authentication']
Security,"Nope, that's for the grid, not for code signing. See https://ca.cern.ch/ca/certificates/CodeSigning.aspx",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/15896#issuecomment-2214007608:75,certificate,certificates,75,https://root.cern,https://github.com/root-project/root/issues/15896#issuecomment-2214007608,1,['certificate'],['certificates']
Security,"Not expose ROOT/RConfig.h to rootcling, but to add the header to ROOT_Config pcm.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3299:4,expose,expose,4,https://root.cern,https://github.com/root-project/root/pull/3299,1,['expose'],['expose']
Security,Not fixed here:; ```; [ 69%] Linking CXX executable src/rootcling_stage1; ld: warning: direct access in function 'clang::RecursiveASTVisitor<cling::AutoFixer>::TraverseTemplateTemplateParmDecl(clang::TemplateTemplateParmDecl*)' from file '../../interpreter/llvm/src/lib/libclingInterpreter.a(AutoSynthesizer.cpp.o)' to global weak symbol 'guard variable for clang::TemplateTemplateParmDecl::getDefaultArgument() const::NoneLoc' from file '../dictgen/CMakeFiles/Dictgen.dir/src/DictSelectionReader.cxx.o' means the weak symbol cannot be overridden at runtime. This was likely caused by different translation units being compiled with different visibility settings.; ld: warning: direct access in function 'clang::RecursiveASTVisitor<cling::AutoFixer>::TraverseTemplateTemplateParmDecl(clang::TemplateTemplateParmDecl*)' from file '../../interpreter/llvm/src/lib/libclingInterpreter.a(AutoSynthesizer.cpp.o)' to global weak symbol 'clang::TemplateTemplateParmDecl::getDefaultArgument() const::NoneLoc' from file '../dictgen/CMakeFiles/Dictgen.dir/src/DictSelectionReader.cxx.o' means the weak symbol cannot be overridden at runtime. This was likely caused by different translation units being compiled with different visibility settings.; ld: warning: direct access in function 'clang::RecursiveASTVisitor<cling::AutoFixer>::TraverseTemplateTemplateParmDecl(clang::TemplateTemplateParmDecl*)' from file '../../interpreter/llvm/src/lib/libclingInterpreter.a(AutoSynthesizer.cpp.o)' to global weak symbol 'clang::TemplateTemplateParmDecl::getDefaultArgument() const::NoneLoc' from file '../dictgen/CMakeFiles/Dictgen.dir/src/DictSelectionReader.cxx.o' means the weak symbol cannot be overridden at runtime. This was likely caused by different translation units being compiled with different visibility settings.; ld: warning: direct access in function 'clang::RecursiveASTVisitor<cling::AutoFixer>::TraverseTemplateTemplateParmDecl(clang::TemplateTemplateParmDecl*)' from file '../../interpreter/llvm/src/,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12156#issuecomment-1674125810:94,access,access,94,https://root.cern,https://github.com/root-project/root/issues/12156#issuecomment-1674125810,2,['access'],['access']
Security,"Not sure, maybe try a double dollar sign: https://til.hashrocket.com/posts/k3kjqxtppx-escape-dollar-sign-on-makefiles https://stackoverflow.com/questions/29584348/escaping-dollar-sign-in-cmake; Thanks",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8781#issuecomment-1018442971:54,hash,hashrocket,54,https://root.cern,https://github.com/root-project/root/issues/8781#issuecomment-1018442971,1,['hash'],['hashrocket']
Security,"Note from the JIRA tickets:. Summary of discussion related to this ticket and https://github.com/root-project/root/issues/9543. In the issue #9543, the unusual situation is the combination of:. * there is (intentionally) no dictionary for `std::map<int,std::vector<int>>`; * consequently we use an ""emulated collection proxy"" for that collection; * there is (unintentional due to external config) interpreter information/ClassInfo for `std::map<int,std::vector<int>>`. The crux of the issue #9543 is:. * TClass::fSizeof info prefers the information from the CollectionProxy; * TStreamerInfo::fSize is set to the value of TClass::fSizeOf; * TClass:New prefers the constructor from the interpreter; * TStreamerInfo::New was using TClass::New for that case; * On the failing platform, the `sizeof(std::map<int,std::vector<int>>)` is larger than the size of the emulated collection. Since the I/O and TStreamerInfo uses the TCollection proxy and all of TStreamerInfo needs to prefer the information from the collection proxy (including the 'sizeof'). To fix #9543 the solution is for; * TStremearInfo::New to prefer/use TCollectionProxy::New over TClass::New (i.e. the interpreted constructor in this particular case). Since we can access the emulated collection through the CollectionProxy, it makes sense to have `TClass` to be a way to access/use the interpreted instance. In order to be consistent (`TClass:New` already prefers the interpreted information), TClass::fSizeOf should be set the sizeof the interpreted instance. In addition to the patch mentioned at https://sft.its.cern.ch/jira/browse/ROOT-8273?focusedCommentId=76181&page=com.atlassian.jira.plugin.system.issuetabpanels%3Acomment-tabpanel#comment-76181,; we also need the following changes:. * TClass::SetClassInfo needs to update `TClass::fSizeof` when a (new) ClassInfo is set.; * TStreamerInfo::fSize needs to prefer the value of `TCollectionProxy::SizeOf()` over the value of `TClass::fSizeof`",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9543#issuecomment-1013280108:1228,access,access,1228,https://root.cern,https://github.com/root-project/root/issues/9543#issuecomment-1013280108,2,['access'],['access']
Security,"Note that the original implementation is detailed in the documentation:; ```; /// and if not found; /// a direct try of libname will be made (in case it contained an; /// absolute path).; ```; Can you verify (by code inspection) if ```gSystem->DynamicPathName``` now return true for absolute path (even if it is not in the dynamic path)? . If so, I guess the function can indeed be simplified but the documentation needs to revise accordingly. The new code add 'GetPathInfo' and 'AccessPathName' calls to the path where DynamicPathName returned a positive answer. Can you verify that those check are not already done in DynamicPathName? (The previous implementation seemed to have assumed it was, it may still or may no longer be the case, we need to check).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2167#issuecomment-395495317:480,Access,AccessPathName,480,https://root.cern,https://github.com/root-project/root/pull/2167#issuecomment-395495317,1,['Access'],['AccessPathName']
Security,"Now I start understanding problem with cernbox http server.; It returns wrong http response header on multi-range request.; Therefore ROOT not able to recognize it and either fail or fall-back to single http requests - ; which is VERY slow method due to 1.5s latency per single request. Here is example of ""normal"" response on multipart http request:; ```; curl -ik https://root.cern/js/files/hsimple.root -H ""Range: bytes=0-15,1000-1015"" --output - (15.06. 11:15:48) !11391 ; HTTP/1.1 206 Partial Content; Date: Thu, 15 Jun 2023 09:16:57 GMT; Server: Apache/2.4.41 (Ubuntu); X-Frame-Options: SAMEORIGIN; Last-Modified: Thu, 04 Jul 2013 08:21:05 GMT; ETag: ""6521f-4e0ab42683e40""; Accept-Ranges: bytes; Content-Length: 177; Cache-Control: max-age=1800; Expires: Thu, 15 Jun 2023 09:46:57 GMT; Content-Security-Policy: frame-ancestors 'self';; Strict-Transport-Security: max-age=15768000; Access-Control-Allow-Origin: *; Access-Control-Allow-Headers: range; Access-Control-Expose-Headers: content-range,content-length,content-type,accept-ranges; Access-Control-Allow-Methods: HEAD,GET; Content-Type: multipart/byteranges; boundary=61c842e35204a0c7. --61c842e35204a0c7; Content-range: bytes 0-15/414239. root�mdR; --61c842e35204a0c7; Content-range: bytes 1000-1015/414239. 1ZGqP��; --61c842e35204a0c7--; ```. And here is result from cernbox:; ```; curl -ik https://cernbox.cern.ch/remote.php/dav/public-files/1Cy1HIf03Ca76Dm/test_ntuples_200123.root -H ""Range: bytes=0-15,1000-1015"" --output - (15.06. 11:15:25) !11380 ; HTTP/1.1 206 Partial Content; Access-Control-Allow-Origin: *; Content-Disposition: attachment; filename=""test_ntuples_200123.root""; Content-Length: 389; Content-Range: ; Content-Security-Policy: default-src 'none';; Content-Type: application/octet-stream; Date: Thu, 15 Jun 2023 09:15:48 GMT; Etag: ""329762575417868288:9d274a18""; Last-Modified: Wed, 24 May 2023 12:22:19 +0000; Oc-Etag: ""329762575417868288:9d274a18""; Oc-Fileid: eoshome-t!103034857; Server: nginx/1.20.1; Strict-Tran",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13018#issuecomment-1592696000:800,Secur,Security-Policy,800,https://root.cern,https://github.com/root-project/root/issues/13018#issuecomment-1592696000,6,"['Access', 'Secur']","['Access-Control-Allow-Headers', 'Access-Control-Allow-Methods', 'Access-Control-Allow-Origin', 'Access-Control-Expose-Headers', 'Security', 'Security-Policy']"
Security,"Now ZeroMQ has a hash mismatch. This is getting annoying, I'm merging this without passing Ubuntu 20.04.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12074#issuecomment-1409221542:17,hash,hash,17,https://root.cern,https://github.com/root-project/root/pull/12074#issuecomment-1409221542,1,['hash'],['hash']
Security,"Now for each attribute three methods should be used:; 1. const Getter; 2. non-const Setter; 3. Access by reference. ```; const RAttrText &GetAttrText() const { return fAttrText; }; CustomAttrs &SetAttrText(const RAttrText &txt) { fAttrText = txt; return *this; }; RAttrText &AttrText() { return fAttrText; }; ```. Such set of methods allow to clearly separate const and non-const; access. And when setter is used, chain of methods can be called. Add several new tests.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4523:95,Access,Access,95,https://root.cern,https://github.com/root-project/root/pull/4523,2,"['Access', 'access']","['Access', 'access']"
Security,Now one RDF is used instead of a number of individual ones; and users can see what a dataset specification file looks like; and how to access the metadata information.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12929:135,access,access,135,https://root.cern,https://github.com/root-project/root/pull/12929,1,['access'],['access']
Security,"Now that we have an efficient hash-assisted `find` mechanism to find by name, it can be used in `RooArgSet` to optimize `containsInstance` (as we are certain there is only one parameter with a given name). This reduces the writing of large workspaces to file (such as ATLAS Higgs combination) by a significant factor (not precisely measured, but at least 5).",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9417:30,hash,hash-assisted,30,https://root.cern,https://github.com/root-project/root/pull/9417,1,['hash'],['hash-assisted']
Security,"Ntup->Print(""NUD_total_ADC*""); ******************************************************************************; *Tree :DmpMCEvtNtup: DAMPE MC Event nTuple Tree *; *Entries : 30000 : Total = 42024515 bytes File Size = 5331016 *; * : : Tree compression factor = 7.90 *; ******************************************************************************; *Br 0 :NUD_total_ADC : nud_total_adc/D *; *Entries : 30000 : Total Size= 241261 bytes File Size = 7509 *; *Baskets : 8 : Basket Size= 32000 bytes Compression= 32.06 *; *............................................................................*; ```. ```; DmpMCEvtNtup->Draw(""NUD_total_ADC""); ```; works, while; ```; root [13] TTreeReader r(DmpMCEvtNtup);; root [14] TTreeReaderValue<double> rv(r, ""NUD_total_ADC"");; root [15] r.Next(); Error in <TTreeReaderValueBase::GetBranchDataType()>: The branch NUD_total_ADC was created using a leaf list and cannot be represented as a C++ type. Please access one of its siblings using a TTreeReaderArray:; Error in <TTreeReaderValueBase::GetBranchDataType()>: NUD_total_ADC.nud_total_adc; Error in <TTreeReaderValueBase::CreateProxy()>: The branch NUD_total_ADC contains data of type {UNDETERMINED TYPE}, which does not have a dictionary.; (bool) false; ```. does not. `TTreeReader` instead requires the full leaf name:. ```; root [1] TTreeReader r(DmpMCEvtNtup);; root [2] TTreeReaderValue<double> rv(r, ""NUD_total_ADC.nud_total_adc"");; root [3] r.Next(); (bool) true; root [4] *rv; (double) -999.00000; ```. ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->. `TTreeReader` should support the same set of ""valid branch names"" that `TTree::Draw` supports. ### Setup; <!--; 1. ROOT version; 2. Operating system; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->. Reproduced with 6.22/02 and master@4ea4d8943 . ### Additional context; <!--; Add any other context about the problem here.; -->. This looks similar to ht",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6881:1588,access,access,1588,https://root.cern,https://github.com/root-project/root/issues/6881,1,['access'],['access']
Security,NullDeref check changed from injection of if(stmt) to a runtime call.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/112:29,inject,injection,29,https://root.cern,https://github.com/root-project/root/pull/112,1,['inject'],['injection']
Security,O wait - I think I understand that there is *also* a different issue: `unique_ptr` cannot delete an object of a non-public type. In that case forget my comment - including TMethodCall is not that relevant. ~~But why do we need to expose `TF1FunctorPointer` to the dictionary?~~ understood!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7035#issuecomment-762124737:230,expose,expose,230,https://root.cern,https://github.com/root-project/root/pull/7035#issuecomment-762124737,1,['expose'],['expose']
Security,"O, and can you include the git commit hash and architecture? The commit you can get from gROOT. I don't know where to get the architecture from the top of my head, but check where ROOT prints the banner (TRint.cxx), it shows it, too. Thanks!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2564#issuecomment-422287102:38,hash,hash,38,https://root.cern,https://github.com/root-project/root/pull/2564#issuecomment-422287102,1,['hash'],['hash']
Security,"OK I think this is problematic for the above (technical) issues that need to be solved before this can be merged (symbols leaking *in* and out), and for sustainability reasons, such as ""your"" zmq library having security issues - who will be aware of this and update our copy?. If someone proposes your addition to upstream zmq, once its integrated, and possibly slightly adjusted as part of the integration, who will sort out the differences, and how to we keep ""old zmq + extension"" *and* ""new zmq"" working?. IMO the right steps are:; 1. get your extension into zmq; 2. *then* we integrate your PR where we require a minimal zmq version which offers your new functions. We can then use zmq as regular ""builtin"", i.e. we take the system one if it's new enough, else people can use the official package that we pull ""into"" ROOT.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8385#issuecomment-870477797:211,secur,security,211,https://root.cern,https://github.com/root-project/root/pull/8385#issuecomment-870477797,1,['secur'],['security']
Security,"OK for adjusting the test to not use `Declare()`, but the current behavior of this PR renders the tab completion close to useless. Can we somehow expose to TTabCom the identifiers available to the GMI?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5094#issuecomment-640384639:146,expose,expose,146,https://root.cern,https://github.com/root-project/root/pull/5094#issuecomment-640384639,1,['expose'],['expose']
Security,OK thanks. But then the right check is *not just* to see whether the process has exported LLVM symbols (that's the test removed in this PR) because that isn't an issue if libCling's llvm is built correctly. But to check whether libCling's symbols are exposed *and* there are llvm symbols in the process. Again - just don't do that if it hurts :-),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4736#issuecomment-572104184:251,expose,exposed,251,https://root.cern,https://github.com/root-project/root/pull/4736#issuecomment-572104184,1,['expose'],['exposed']
Security,"OK, interactively, this is what I do:. cd /afs/cern.ch/work/s/schaffer/public/work-21.xAOD.RD_devRel21_prod25_2/build; setupATLAS; lsetup ""asetup 21.2.139,AnalysisBase""; source ../build/x86_64-centos7-gcc8-opt/setup.sh; ../run (or to any directory which you can write in); runH4lAnalRun2 -i root://eosatlas.cern.ch:1094//eos/atlas/atlasdatadisk/rucio/mc16_13TeV/85/26/DAOD_HIGG2D1.21658940._000001.pool.root.1 -d mc16_13TeV.345706.Sherpa_222_NNPDF30NNLO_ggllll_130M4l.deriv.DAOD_HIGG2D1.e6213_s3126_r9364_p4191 -e 5000. -e 5000 is just to read 5k events. This is reading an input file, what we call a derived AOD, and writes out a root file with simple trees. the setupATLAS is defined by:. export ATLAS_LOCAL_ROOT_BASE=/cvmfs/atlas.cern.ch/repo/ATLASLocalRootBase; alias setupATLAS='source ${ATLAS_LOCAL_ROOT_BASE}/user/atlasLocalSetup.sh'. But you'll need 'atlas' access, I presume. This is built with:. cmake ../source; make -jxx <as you like>. Not sure if this helps...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6948#issuecomment-757827313:866,access,access,866,https://root.cern,https://github.com/root-project/root/issues/6948#issuecomment-757827313,2,['access'],['access']
Security,"OK, thanks for the feedback. The certificate used to sign the binaries is the official CERN one. I'll check with IT but I doubt they will purchase any Windows approved certificate... Isn't the CERN certificate good enough for you?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/15896#issuecomment-2213801755:33,certificate,certificate,33,https://root.cern,https://github.com/root-project/root/issues/15896#issuecomment-2213801755,6,['certificate'],['certificate']
Security,OOT-G1.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/NERSC-SLCS.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/IHEP-2013.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/NERSC-SLCS.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/b93d6240.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/39d30eba.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/b93d6240.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/e7734335.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/30351739.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/39d30eba.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/30351739.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/e7734335.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/61cd35bd.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/IHEP-2013.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/61cd35bd.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/HPCI.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/HPCI.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/ead666c8.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/06769ccd.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/HPCI.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/06769ccd.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/522b8537.namespaces' from CURLOPT_CAPATH; * f,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8092#issuecomment-840048181:56310,secur,security,56310,https://root.cern,https://github.com/root-project/root/issues/8092#issuecomment-840048181,2,"['certificate', 'secur']","['certificates', 'security']"
Security,OPT_CAPATH; * failed to load '/etc/grid-security/certificates/62c4a178.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/KENETCA-ICA-2015.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/CESNET-CA-4.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/7f23888f.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/7f23888f.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/CERN-GridCA.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/DigitalTrustIGTFCA.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/DigitalTrustIGTFCA.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/ffc3d59b.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/DigitalTrustIGTFCA.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/84c78b97.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/8dd53007.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/DigitalTrustIGTFCA.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/ef7d3e44.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/84c78b97.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/ef7d3e44.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/530f7122.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/9c979c2b.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/UKeScienceCA-2B.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/9c979c2b.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/62c4a178.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8092#issuecomment-840048181:13447,secur,security,13447,https://root.cern,https://github.com/root-project/root/issues/8092#issuecomment-840048181,2,"['certificate', 'secur']","['certificates', 'security']"
Security,OPT_CAPATH; * failed to load '/etc/grid-security/certificates/82c2b224.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/InCommon-IGTF-Server-CA.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/d11f973e.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/ba240aa8.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/f5f0dfc2.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/4339b4bc.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/3cc00941.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/68aa9d51.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/5168735f.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/KENETCA-ICA-2015.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/CERN-GridCA.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/KENETCA-ICA-2015.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/CERN-GridCA.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/62c4a178.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/KENETCA-ICA-2015.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/CESNET-CA-4.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/7f23888f.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/7f23888f.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/CERN-GridCA.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/DigitalTrustIGTFCA.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/DigitalTru,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8092#issuecomment-840048181:12197,secur,security,12197,https://root.cern,https://github.com/root-project/root/issues/8092#issuecomment-840048181,2,"['certificate', 'secur']","['certificates', 'security']"
Security,OPT_CAPATH; * failed to load '/etc/grid-security/certificates/DigitalTrustSecureCAG3-runbytheissuer.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/DigitalTrustSecureCAG3-runbytheissuer.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/DigitalTrustSecureCAG3-runbytheissuer.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/DigitalTrustSecureCAG3-runbytheissuer.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/18700496.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/5d9ea26d.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/e732ef10.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/DigiCertGridTrustCAG2-Classic.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/617ff41b.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/DigiCertGridTrustCAG2-Classic.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/58b08cb5.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/KEK.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/DigiCertGridTrustCAG2-Classic.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/d33760ec.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/e732ef10.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/2f2f573f.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/DigiCertGridTrustCAG2-Classic.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/18700496.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/bd43b60c.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certifica,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8092#issuecomment-840048181:23137,secur,security,23137,https://root.cern,https://github.com/root-project/root/issues/8092#issuecomment-840048181,2,"['certificate', 'secur']","['certificates', 'security']"
Security,OPT_CAPATH; * failed to load '/etc/grid-security/certificates/KENETCA-ICA-2015.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/CESNET-CA-4.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/7f23888f.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/7f23888f.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/CERN-GridCA.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/DigitalTrustIGTFCA.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/DigitalTrustIGTFCA.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/ffc3d59b.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/DigitalTrustIGTFCA.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/84c78b97.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/8dd53007.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/DigitalTrustIGTFCA.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/ef7d3e44.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/84c78b97.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/ef7d3e44.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/530f7122.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/9c979c2b.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/UKeScienceCA-2B.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/9c979c2b.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/62c4a178.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/a603b,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8092#issuecomment-840048181:13539,secur,security,13539,https://root.cern,https://github.com/root-project/root/issues/8092#issuecomment-840048181,2,"['certificate', 'secur']","['certificates', 'security']"
Security,OPT_CAPATH; * failed to load '/etc/grid-security/certificates/KENETROOTCA.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/COMODO-RSA-CA.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/CESNET-CA-4.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/COMODO-RSA-CA.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/UKeScienceCA-2B.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/COMODO-RSA-CA.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/CNRS2-Grid-FR.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/d4c339cb.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/d6325660.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/InCommon-IGTF-Server-CA.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/UKeScienceCA-2B.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/InCommon-IGTF-Server-CA.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/d11f973e.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/82c2b224.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/InCommon-IGTF-Server-CA.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/d11f973e.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/ba240aa8.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/f5f0dfc2.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/4339b4bc.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/3cc00941.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/ce,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8092#issuecomment-840048181:10929,secur,security,10929,https://root.cern,https://github.com/root-project/root/issues/8092#issuecomment-840048181,2,"['certificate', 'secur']","['certificates', 'security']"
Security,OT-G1.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/AC-GRID-FR-Services.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/DCAROOT-G1.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/UNLPGrid.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/AC-GRID-FR-Services.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/20b7db76.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/IHEP-2013.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/NERSC-SLCS.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/NERSC-SLCS.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/DCAROOT-G1.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/NERSC-SLCS.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/IHEP-2013.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/NERSC-SLCS.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/b93d6240.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/39d30eba.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/b93d6240.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/e7734335.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/30351739.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/39d30eba.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/30351739.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/e7734335.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/61cd35bd.namespac,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8092#issuecomment-840048181:55459,secur,security,55459,https://root.cern,https://github.com/root-project/root/issues/8092#issuecomment-840048181,2,"['certificate', 'secur']","['certificates', 'security']"
Security,"Oh ok, so `Clone` only copies the metadata and is expected to yield broken trees as the data stays behind in a different file that the cloned tree does not know how to access. I find this confusing and error-prone, but if it is things working as intended then nothing to do here.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9757#issuecomment-1196884915:168,access,access,168,https://root.cern,https://github.com/root-project/root/issues/9757#issuecomment-1196884915,1,['access'],['access']
Security,"Ok I see now that this PR already addresses some of my comments in #7314 :smile: . Still:; - I would not change the convention for the naming of the test files. Just `classname_testedfunctionality.py`, without the `test_` prefix.; - It could be a good moment to add Doxygen documentation to the Roofit classes. Example for [TTree](https://github.com/root-project/root/blob/master/bindings/pyroot/pythonizations/python/ROOT/pythonization/_ttree.py#L11-L131).; - To be discussed the reorganization with just one pythonizor function in `__init__.py`. A priori it is not bad since the modularity is preserved with one separate Python module and class per C++ class to be pythonized, but the way the pythonizations are injected can be a bit limiting (e.g. what happens if you want to add a pythonization in C++, or preserve the original class method you are replacing).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7753#issuecomment-820251767:714,inject,injected,714,https://root.cern,https://github.com/root-project/root/pull/7753#issuecomment-820251767,1,['inject'],['injected']
Security,"Ok but I'm not sure this solution is applicable in all cases. In our particular case we have a single xrootd server accessing files on a single raid array with a small number of ssds, so multiple daemons doesn't really make sense, and I think that at least an optional client side workaround would be useful.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12621#issuecomment-1926470506:116,access,accessing,116,https://root.cern,https://github.com/root-project/root/issues/12621#issuecomment-1926470506,1,['access'],['accessing']
Security,"Ok you can always construct something that fails, but the relevance is still debatable if nobody injects into `std::Detail`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8828#issuecomment-2372395169:97,inject,injects,97,https://root.cern,https://github.com/root-project/root/issues/8828#issuecomment-2372395169,1,['inject'],['injects']
Security,"Okay, so if I understand correctly, `TUnixSystem::AccessPathName` is called from interpreted code from `hsimple.C`? If the `const char *` passed from there is not accessible, it could also be some code being wrongly generated or wrongly relocated. @vgvassilev could you figure out which of the three calls it is in `hsimple.C`? I would *guess* the third one on line 56 because `getFile` defaults to `0`, but that one is just passing a `"".""` which is really hard to get wrong...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8072#issuecomment-981410306:50,Access,AccessPathName,50,https://root.cern,https://github.com/root-project/root/issues/8072#issuecomment-981410306,2,"['Access', 'access']","['AccessPathName', 'accessible']"
Security,"Okay, very good! Just FYI, the pythonizations are implemented in these ""mirror classes"" that I declared here:; https://github.com/root-project/root/tree/21fbd344e60a849622991a92d3230681e257c3b9/bindings/pyroot/pythonizations/python/ROOT/pythonization/_roofit. Every function that is defined in a mirror class is then bound to the actual RooFit class, with the original cppyy function name changed to have an underscore prefix. I have already a PR open with some more pythonizations of RooAbsCollection: https://github.com/root-project/root/pull/8179. I can just add one more commit with the element access. But in general, I'm not working too much on these pythonizations because we will most likely get a Google summer of code student for that project! So if you have any further nice ideas for RooFit pythonizations, feel free to write them down in [this issue](https://github.com/root-project/root/issues/7217) and I will what can be implemented with the student.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8174#issuecomment-842226228:599,access,access,599,https://root.cern,https://github.com/root-project/root/pull/8174#issuecomment-842226228,1,['access'],['access']
Security,"On Windows, the M_PI constants are hidden inside #define _USE_MATH_DEFINES; guard. If this macro is not defined at the start of the program, some; other header file might include math.h and the header is suppressed; forever. Therefore, this commit moves #define _USE_MATH_DEFINES to the start of; the file and also custom defines M_PI as it is not exposed on building; Modules with Windows. @vgvassilev",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6309:348,expose,exposed,348,https://root.cern,https://github.com/root-project/root/pull/6309,1,['expose'],['exposed']
Security,"Once tested with the previous push to master, this backports the fix for ROOT-9025: a memory leak when accessing a branch of a TTree in Python, that branch being of type array.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1555:103,access,accessing,103,https://root.cern,https://github.com/root-project/root/pull/1555,1,['access'],['accessing']
Security,One can construct relatively complex structures of elements for using them in RBrowser; Like adding different items to top-level - home directory or top file directory. Provide support of ROOT collections and TFolder. ; Access top ROOT folder (and all sub-folders); Access already opened files. Now data structures approximately that I want to see in RBrowser!,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4638:220,Access,Access,220,https://root.cern,https://github.com/root-project/root/pull/4638,2,['Access'],['Access']
Security,"One cannot run tutorial without ""davix"" plugin.; But even after I enable it - it crashes with following messages:; ```; terminate called after throwing an instance of 'ROOT::Experimental::RException'; what(): expected RNTuple named 'GlobalTempData' but instead found '' in file 'GlobalLandTemperaturesByCity.root' (unchecked RResult access!); At:; ROOT::Experimental::RResult<ROOT::Experimental::RNTuple> ROOT::Experimental::Internal::RMiniFileReader::GetNTupleBare(std::string_view) [/home/linev/git/webgui/tree/ntuple/v7/src/RMiniFile.cxx:996]; ```; May be @jblomer can comment?. Regarding `RCanvas` - there are two instances of them.; Why one need to call `Update/Modify` only for first one?. Again, it is only demonstration of very special functionality, should not be present in this tutorial.; If tutorial does not work, I will have to fix such drawing by other means.; For instance, in current master subpads in RCanvas are broken - but I will fix it very soon",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6808#issuecomment-745146481:333,access,access,333,https://root.cern,https://github.com/root-project/root/pull/6808#issuecomment-745146481,1,['access'],['access']
Security,"One issue with the term `Streamer` is that it covers both the automatically/implicitly generated `""Streamer""` (the transformation implementation via the `TStreamerInfo`) and the custom/hand-written `Streamer` functions (for which the `Checksum` is irrevelant).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16060#issuecomment-2239396751:235,Checksum,Checksum,235,https://root.cern,https://github.com/root-project/root/pull/16060#issuecomment-2239396751,1,['Checksum'],['Checksum']
Security,"One last challenge though. Since this is hash based, different StreamerInfo Sets will/can have the same hash value, what is the behavior (and what can we do about it) if the user ends up reading 2 such files in the same process?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2121#issuecomment-393885148:41,hash,hash,41,https://root.cern,https://github.com/root-project/root/pull/2121#issuecomment-393885148,2,['hash'],['hash']
Security,"One more thought in order to progress more quickly: perhaps it makes sense to split the PR in two: first part that temporarily turns off things, second part that improves connection handling etc. > Disable --web option of TApplication. Only `--web=off` is allowed. Show warning that option is disabled. Only direct `gROOT->SetWebDisplay()` call is possible.; > ; > Ignore ""WebGui.Display"" rootrc parameter. It is equivalent of --web argument. Show warning.; > ; > If rootrc parameters ""Browser.Name"" and ""Canvas.Name"" contain web-based widgets - ignore them, show warning and create normal widgets. Only if `gROOT->SetWebDisplay()` was called before - allow to use web widgets as before. Perhaps the above could be the first PR. > Introduce `RWebWindowsManager::SetLoopbackMode()` to let change binding to loopback device.; > ; > Do not expose current directory via webgui http server; > ; > Do not allow to reconnect to RBrowser. And this could be a second PR.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14189#issuecomment-1849701173:837,expose,expose,837,https://root.cern,https://github.com/root-project/root/pull/14189#issuecomment-1849701173,1,['expose'],['expose']
Security,"One of the main difficulties to start developing in CMSSW (and this is common to other fwks) is the jeargon permeating all corners of the software, for example ""Handle"" means really little while ""pointer"" is something which can be accessed with ""->"". . We have signs on the forum of user not even noticing/caring enough what type the return value of action was (this is a success) *and* have a huge amount of code still to develop to implement our long term vision of ROOT. I support being pragmatic before anything else :)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1855#issuecomment-381113386:231,access,accessed,231,https://root.cern,https://github.com/root-project/root/pull/1855#issuecomment-381113386,1,['access'],['accessed']
Security,"One option is to add a pythonization to your vector class to use the `__getitem__` of `std::vector`. Something like this:; ```python; import cppyy. cppyy.cppdef(r""""""; template <typename TYPE>; struct vec : public std::vector<TYPE> {; vec<TYPE>& operator()(int ){return *this;}; };. using my_tmp = vec<double>;; """"""). def pythonizor(klass, name):; if name.startswith('vec<double>'):; klass.__getitem__ = cppyy.gbl.std.vector('double').__getitem__. cppyy.py.add_pythonization(pythonizor). b = cppyy.gbl.my_tmp(); b.emplace_back(); print(b[0]); ```. It would need to be generalized to that the template parameter is parsed (here I just show the example for double). Note that the pythonizations are injected lazily: only when your class is actually used for the first time, the injection will happen. More info here:; https://cppyy.readthedocs.io/en/latest/pythonizations.html#python-callbacks",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7179#issuecomment-778279150:696,inject,injected,696,https://root.cern,https://github.com/root-project/root/issues/7179#issuecomment-778279150,2,['inject'],"['injected', 'injection']"
Security,One thing that would be helpful to understand the scope is the 2 stack traces of the 2 threads accessing the same pointer.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6511#issuecomment-701547648:95,access,accessing,95,https://root.cern,https://github.com/root-project/root/pull/6511#issuecomment-701547648,1,['access'],['accessing']
Security,Optimize TPrincipal::AddRow function since it is reported that is causing a significative time in CMS reconstruction. . Move divisions outside loop and use directly access to internal TVector and TMatrix elements.; In case data are not stored in the class the gain in the loop that is adding the row has been measured to be a factor of 10 for a data of 100 dimension and 100000 points,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6630:165,access,access,165,https://root.cern,https://github.com/root-project/root/pull/6630,1,['access'],['access']
Security,"Options: SAMEORIGIN; Last-Modified: Thu, 04 Jul 2013 08:21:05 GMT; ETag: ""6521f-4e0ab42683e40""; Accept-Ranges: bytes; Content-Length: 177; Cache-Control: max-age=1800; Expires: Thu, 15 Jun 2023 09:46:57 GMT; Content-Security-Policy: frame-ancestors 'self';; Strict-Transport-Security: max-age=15768000; Access-Control-Allow-Origin: *; Access-Control-Allow-Headers: range; Access-Control-Expose-Headers: content-range,content-length,content-type,accept-ranges; Access-Control-Allow-Methods: HEAD,GET; Content-Type: multipart/byteranges; boundary=61c842e35204a0c7. --61c842e35204a0c7; Content-range: bytes 0-15/414239. root�mdR; --61c842e35204a0c7; Content-range: bytes 1000-1015/414239. 1ZGqP��; --61c842e35204a0c7--; ```. And here is result from cernbox:; ```; curl -ik https://cernbox.cern.ch/remote.php/dav/public-files/1Cy1HIf03Ca76Dm/test_ntuples_200123.root -H ""Range: bytes=0-15,1000-1015"" --output - (15.06. 11:15:25) !11380 ; HTTP/1.1 206 Partial Content; Access-Control-Allow-Origin: *; Content-Disposition: attachment; filename=""test_ntuples_200123.root""; Content-Length: 389; Content-Range: ; Content-Security-Policy: default-src 'none';; Content-Type: application/octet-stream; Date: Thu, 15 Jun 2023 09:15:48 GMT; Etag: ""329762575417868288:9d274a18""; Last-Modified: Wed, 24 May 2023 12:22:19 +0000; Oc-Etag: ""329762575417868288:9d274a18""; Oc-Fileid: eoshome-t!103034857; Server: nginx/1.20.1; Strict-Transport-Security: max-age=63072000; Vary: Origin; X-Content-Type-Options: nosniff; X-Download-Options: noopen; X-Frame-Options: SAMEORIGIN; X-Permitted-Cross-Domain-Policies: none; X-Robots-Tag: none; X-Xss-Protection: 1; mode=block. --1941f188e1f15cbc8af2c2ce8ba24411209981093834f193e96822568cbb; Content-Range: bytes 0-15/4667337; Content-Type: application/octet-stream. root��dG7�; --1941f188e1f15cbc8af2c2ce8ba24411209981093834f193e96822568cbb; Content-Range: bytes 1000-1015/4667337; Content-Type: application/octet-stream. .�J.�f6��M�����m; --1941f188e1f15cbc8af2c2ce8ba244112099",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13018#issuecomment-1592696000:1548,Access,Access-Control-Allow-Origin,1548,https://root.cern,https://github.com/root-project/root/issues/13018#issuecomment-1592696000,1,['Access'],['Access-Control-Allow-Origin']
Security,Otherwise we end up trying to access a Defined column that does not; exist. This fixes #7058.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7060:30,access,access,30,https://root.cern,https://github.com/root-project/root/pull/7060,1,['access'],['access']
Security,Out-of-bounds vector access in roofit test,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/15730:21,access,access,21,https://root.cern,https://github.com/root-project/root/issues/15730,1,['access'],['access']
Security,PATH; * failed to load '/etc/grid-security/certificates/633dc6a4.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/TERENA-eScience-SSL-CA-3.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/QuoVadis-Grid-ICA-G2.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/58b08cb5.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/TERENA-eScience-SSL-CA-3.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/f5ead794.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/e523eeaa.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/PK-Grid-2007.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/e523eeaa.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/38f7145f.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/PK-Grid-2007.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/38f7145f.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/617ff41b.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/67707166.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/67707166.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/QuoVadis-Grid-ICA-G2.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/DigiCertGridTrustCA-Classic.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/DigiCertGridTrustCA-Classic.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/MYIFAM.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/PKIUNAMgrid.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8092#issuecomment-840048181:25854,secur,security,25854,https://root.cern,https://github.com/root-project/root/issues/8092#issuecomment-840048181,2,"['certificate', 'secur']","['certificates', 'security']"
Security,PATH; * failed to load '/etc/grid-security/certificates/e9cc934f.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/GEANTeSciencePersonalECCCA4.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/GEANTeScienceSSLCA4.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/c141eb07.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/e9cc934f.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/c141eb07.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/d9343743.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/3e0d64db.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/3e0d64db.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/b85d64aa.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/DigitalTrustAssuredCAG4-runbytheissuer.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/DigitalTrustAssuredCAG4-runbytheissuer.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/5249c1ef.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/DigitalTrustAssuredCAG4-runbytheissuer.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/DigitalTrustSecureCAG4-runbytheissuer.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/5d9ea26d.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/DigitalTrustAssuredCAG4-runbytheissuer.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/b167aa9e.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/be44c37d.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8092#issuecomment-840048181:18997,secur,security,18997,https://root.cern,https://github.com/root-project/root/issues/8092#issuecomment-840048181,2,"['certificate', 'secur']","['certificates', 'security']"
Security,"PS: The underlying problem may be that both a const and non-const access to the reference should be available. I haven't looked into this particular problem as much as you have, I'm just warning you about the things that seem problematic to me with the current approach.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1677#issuecomment-384983455:66,access,access,66,https://root.cern,https://github.com/root-project/root/pull/1677#issuecomment-384983455,1,['access'],['access']
Security,PT_CAPATH; * failed to load '/etc/grid-security/certificates/DigiCertGridTrustCAG2-Classic.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/58b08cb5.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/KEK.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/DigiCertGridTrustCAG2-Classic.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/d33760ec.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/e732ef10.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/2f2f573f.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/DigiCertGridTrustCAG2-Classic.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/18700496.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/bd43b60c.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/f5ead794.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/1db3b27f.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/PK-Grid-2007.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/1db3b27f.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/d33760ec.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/TERENA-eScience-SSL-CA-3.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/KEK.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/TERENA-eScience-SSL-CA-3.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/633dc6a4.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/TERENA-eScience-SSL-CA-3.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificat,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8092#issuecomment-840048181:24115,secur,security,24115,https://root.cern,https://github.com/root-project/root/issues/8092#issuecomment-840048181,2,"['certificate', 'secur']","['certificates', 'security']"
Security,PT_CAPATH; * failed to load '/etc/grid-security/certificates/DigiCertGridTrustCAG2-Classic.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/d33760ec.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/e732ef10.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/2f2f573f.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/DigiCertGridTrustCAG2-Classic.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/18700496.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/bd43b60c.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/f5ead794.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/1db3b27f.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/PK-Grid-2007.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/1db3b27f.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/d33760ec.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/TERENA-eScience-SSL-CA-3.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/KEK.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/TERENA-eScience-SSL-CA-3.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/633dc6a4.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/TERENA-eScience-SSL-CA-3.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/QuoVadis-Grid-ICA-G2.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/58b08cb5.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/TERENA-eScience-SSL-CA-3.signing_policy' from CURLOPT_CAPATH; * failed to load '/,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8092#issuecomment-840048181:24392,secur,security,24392,https://root.cern,https://github.com/root-project/root/issues/8092#issuecomment-840048181,2,"['certificate', 'secur']","['certificates', 'security']"
Security,PT_CAPATH; * failed to load '/etc/grid-security/certificates/DigiCertGridTrustCAG2-Classic.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/18700496.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/bd43b60c.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/f5ead794.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/1db3b27f.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/PK-Grid-2007.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/1db3b27f.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/d33760ec.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/TERENA-eScience-SSL-CA-3.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/KEK.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/TERENA-eScience-SSL-CA-3.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/633dc6a4.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/TERENA-eScience-SSL-CA-3.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/QuoVadis-Grid-ICA-G2.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/58b08cb5.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/TERENA-eScience-SSL-CA-3.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/f5ead794.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/e523eeaa.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/PK-Grid-2007.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/e523eeaa.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-securi,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8092#issuecomment-840048181:24773,secur,security,24773,https://root.cern,https://github.com/root-project/root/issues/8092#issuecomment-840048181,2,"['certificate', 'secur']","['certificates', 'security']"
Security,PT_CAPATH; * failed to load '/etc/grid-security/certificates/DigitalTrustAssuredCAG4-runbytheissuer.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/DigitalTrustAssuredCAG4-runbytheissuer.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/5249c1ef.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/DigitalTrustAssuredCAG4-runbytheissuer.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/DigitalTrustSecureCAG4-runbytheissuer.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/5d9ea26d.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/DigitalTrustAssuredCAG4-runbytheissuer.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/b167aa9e.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/be44c37d.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/5249c1ef.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/be44c37d.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/b167aa9e.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/5e9e302b.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/MYIFAM.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/5e9e302b.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/GEANTeSciencePersonalECCCA4.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/GEANTeSciencePersonalCA4.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/GEANTeSciencePersonalCA4.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/GEANTeSciencePersonalECCCA4.signing_policy' from CURLOPT_CAPATH; * failed to load '/e,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8092#issuecomment-840048181:19973,secur,security,19973,https://root.cern,https://github.com/root-project/root/issues/8092#issuecomment-840048181,2,"['certificate', 'secur']","['certificates', 'security']"
Security,PT_CAPATH; * failed to load '/etc/grid-security/certificates/c7a717ce.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/c7a717ce.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/GEANTeScienceSSLECCCA4.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/8a21c0da.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/a883462e.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/8a21c0da.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/a883462e.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/GEANTeScienceSSLCA4.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/GEANTeScienceSSLCA4.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/GEANTeSciencePersonalECCCA4.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/GEANTeScienceSSLCA4.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/e9cc934f.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/GEANTeSciencePersonalECCCA4.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/GEANTeScienceSSLCA4.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/c141eb07.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/e9cc934f.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/c141eb07.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/d9343743.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/3e0d64db.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/3e0d64db.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certific,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8092#issuecomment-840048181:17926,secur,security,17926,https://root.cern,https://github.com/root-project/root/issues/8092#issuecomment-840048181,2,"['certificate', 'secur']","['certificates', 'security']"
Security,"Parts of this were accessed through redefining private/protected as public; which, besides of being a nasty hack, does not work with gcc-5. TColor had a static bool member fgInitDone that is now a local static in InitializeColors(). I just added a bool argument force=kFALSE as this was a minimal change. If desired, I can do the following:; . Split InitializeColors() into initial part that does the check is-init-done and the actual initialization code that is private.; . Introduce new static function InitializeColorsForce() that skips the check.; This way the interface to InitializeColors() will not change.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/99:19,access,accessed,19,https://root.cern,https://github.com/root-project/root/pull/99,1,['access'],['accessed']
Security,"Perhaps [this](https://stackoverflow.com/questions/10161609/class-property-using-python-c-api) could help us get rid of the `null` problem. That example constructs a property differently, by creating an object of a certain type `P`, and type `P` has its attribute `tp_descr_get` set. In our case, `tp_descr_get` would point to the function that `AddArrayInterface` receives. With this solution, we would not need to call `PyObject_CallObject(property_class, arglist)` and thus we should not have the `null` issue. This technique is implemented throughout PyROOT several times (e.g. to get the value of a data member of a C++ object accessed from Python). If this does not work either we could go for the implementation in Python that you proposed, although this would contribute to make `ROOT.py` even fatter.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1777#issuecomment-380430617:632,access,accessed,632,https://root.cern,https://github.com/root-project/root/pull/1777#issuecomment-380430617,1,['access'],['accessed']
Security,"Personally I avoid merging parameters, the GNU/getopts standards might allow it, but I personally think it's a source of confusion for new users. Regardless I'll do it, but @lmoneta has mentioned on the forums that he might be making a seperate PR swapping the protocol from HTTP to HTTPS, since this actually seems to be what the redirect is doing to begin with. Incidentally every instance of curl in this PR does seem to be using http. Alternative he proposed `data = TFile.Open('http://root.cern.ch/files/tmva_class_example.root')`. Personally I think the best approach would be to use both, since it ensures the security guarantees of HTTPS whilst also proactively fixing any potential redirects in the future just on the off chance. Would you like me to handle HTTPS in this PR?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7725#issuecomment-809361845:617,secur,security,617,https://root.cern,https://github.com/root-project/root/pull/7725#issuecomment-809361845,1,['secur'],['security']
Security,"Please address my ""RDF laziness"" comment before merging, we should teach users to book all operations before any of the results is accessed.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6808#issuecomment-745164887:131,access,accessed,131,https://root.cern,https://github.com/root-project/root/pull/6808#issuecomment-745164887,1,['access'],['accessed']
Security,"Please note that the line ""cherry picked from commit"" isn't useful / even confusing because the original commit already got amended and even if not, either rebasing or squashing to ""merge"" would change the commit hash. (In general I would argue that commits should always be picked from `master` to the release branches to guarantee that fixes are never forgotten, but that's another discussion...)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11845#issuecomment-1339758981:213,hash,hash,213,https://root.cern,https://github.com/root-project/root/pull/11845#issuecomment-1339758981,1,['hash'],['hash']
Security,"Possible reason for the problem, in Cling (also Clang) some headers are included automatically at startup to simplify the operation. In the case of CUDA, the order of the headers is really important because CUDA has to annotate the `stl` functions to be available on CPU and GPU (e.g. `int std::abs(int n)` -> `__device__ __host__ std::abs(int n))`. If the order is not correct, various things can happen (no GPU version available, redefinition errors, error messages that have nothing to do with the actual problem ...). A good starting point for bug hunting is to compare the startup process of vanilla cling and ROOT cling.; * A good starting point for Cling the is the function [`CIFactory::createCIImpl()`](https://github.com/root-project/root/blob/de3514c2a88f653584108d2be64e28f50a2b29da/interpreter/cling/lib/Interpreter/CIFactory.cpp#L1214); * In ROOT, some extra headers are injected (before?) in the [TCling](https://github.com/root-project/root/blob/a56901942dfefa6e7e2e7df397a60c9d1cda31a0/core/metacling/src/TCling.cxx#L1327) class",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7518#issuecomment-808738232:885,inject,injected,885,https://root.cern,https://github.com/root-project/root/issues/7518#issuecomment-808738232,2,['inject'],['injected']
Security,"Pressing ctrl-r when no ~/.root_hist file is present or possibly; when it contains 0 lines used to cause a segfault. The culprit; if an out-of-bound access in History::GetLine, as the case in which; the history has zero entries was not taken into account. With this patch, Histoy::GetLine returns an empty string instead.; This fixes ROOT-10917.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6006:149,access,access,149,https://root.cern,https://github.com/root-project/root/pull/6006,1,['access'],['access']
Security,"Pressing ctrl-r when no ~/.root_hist file is present or possibly; when it contains 0 lines used to cause a segfault. The culprit; if an out-of-bound access in History::GetLine, as the case in which; the history has zero entries was not taken into account. With this patch, Histoy::GetLine returns an empty string instead.; This fixes ROOT-10917. Co-authored-by: Axel Naumann <Axel.Naumann@cern.ch>",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6098:149,access,access,149,https://root.cern,https://github.com/root-project/root/pull/6098,1,['access'],['access']
Security,Prevent Access of deleted object during hadd tear down,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9021:8,Access,Access,8,https://root.cern,https://github.com/root-project/root/pull/9021,1,['Access'],['Access']
Security,Prevent access violation when executing the df017_vecOpsHEP.C tutorial with ROOT built in release mode. To be reviewed when updating Visual Studio or LLVM,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10443:8,access,access,8,https://root.cern,https://github.com/root-project/root/pull/10443,1,['access'],['access']
Security,Print variable importances for each fold when using Cross Validation,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7092:58,Validat,Validation,58,https://root.cern,https://github.com/root-project/root/issues/7092,1,['Validat'],['Validation']
Security,"Progress (@oshadura ). When doing the request ""does that file exist (and do I need to follow a redirect) in; ```; #0 Davix::NEONRequest::negotiateRequest (this=0x555557146380, err=0x7fffffff90d0); at $ROOTSYS/builtins/davix/DAVIX-prefix/src/DAVIX/src/neon/neonrequest.cpp:425; ```; with; ```; (gdb) p *_req; $42 = {; method = 0x55555822e440 ""HEAD"",; uri = 0x55555822e460 ""/iml-wg/tmvatutorials/master/inputdata.root"",; headers = 0x55555822e420,; ```; v6.22 has:; ```; $44 = {; data = 0x555557bb6180 ""User-Agent: ROOT/6.22/09 TDavixFile/0.2.0 davix/0.7.5 neon/0.0.29\r\nKeep-Alive: \r\nConnection: Keep-Alive\r\nTE: trailers\r\nHost: raw.githubusercontent.com\r\n"",; ```; while v6.24 has:; ```; (gdb) p *_req->headers; $48 = {; data = 0x555556bfa160 ""User-Agent: ROOT/6.24/01 TDavixFile/0.2.0 davix/0.7.5 neon/0.0.29\r\nKeep-Alive: \r\nConnection: Keep-Alive\r\nTE: trailers\r\nHost: raw.githubusercontent.com\r\nAuthorization: Bearer \r\n"",; ```; I.e. adding `Authorization: Bearer` seems to break this. I can reproduce this with. ```; curl -v -H 'Authorization: Bearer' https://raw.githubusercontent.com/iml-wg/tmvatutorials/master/inputdata.root; ```; giving 404, while not passing `-H` makes the redirect work. That's it from my side, more news from @oshadura after vCHEP!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8155#issuecomment-843327087:960,Authoriz,Authorization,960,https://root.cern,https://github.com/root-project/root/issues/8155#issuecomment-843327087,2,['Authoriz'],['Authorization']
Security,Protect access to TROOT::GetListOfGlobalFunctions in TFormula,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/117:8,access,access,8,https://root.cern,https://github.com/root-project/root/pull/117,1,['access'],['access']
Security,Protect against out-of-bounds access,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1639:30,access,access,30,https://root.cern,https://github.com/root-project/root/pull/1639,1,['access'],['access']
Security,Protect concurrent access to gROOT->GetListOfFiles(),MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/38:19,access,access,19,https://root.cern,https://github.com/root-project/root/pull/38,2,['access'],['access']
Security,Protect global list of functions from concurrent access,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/24:49,access,access,49,https://root.cern,https://github.com/root-project/root/pull/24,1,['access'],['access']
Security,Protect multi-thread access to TSystem::fHelper.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5126:21,access,access,21,https://root.cern,https://github.com/root-project/root/pull/5126,2,['access'],['access']
Security,Protection in TGDMLWrite for optical surfaces for nodes not connected to the geometry hierarchy. Added few accessors for material properties,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3781:107,access,accessors,107,https://root.cern,https://github.com/root-project/root/pull/3781,1,['access'],['accessors']
Security,"Provide access to whether the enum is a scoped enum through TEnum::Property().; Add an interface to determine the underlying type of an enum, as EDataType.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4031:8,access,access,8,https://root.cern,https://github.com/root-project/root/pull/4031,1,['access'],['access']
Security,Provide public access to `RAttrValue<T>` members,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8566:15,access,access,15,https://root.cern,https://github.com/root-project/root/pull/8566,1,['access'],['access']
Security,"Provides support for both 32bit and 64bit cardinality fields. This has no implication on the width of the on-disk offsets but the cardinality field width (32bit or 64bit) is for the width of the collection sizes that are computed from the offsets. For converted TTree files with leaf count arrays, 32bit widths cardinality fields must be used because the count leaf is 32bit. This makes sure that the (projected) leaf count field in the RNTuple (e.g., `nJets`) can be accessed with the same type than the TTree branch, e.g. in RDataFrame.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12815:468,access,accessed,468,https://root.cern,https://github.com/root-project/root/pull/12815,1,['access'],['accessed']
Security,"Pull request #11731 introduced internal support for per field post-read callbacks. This follow-up pull request registers a callback for each `#pragma read` rule on user-defined classes.; Currently, `#pragma read` rules referencing non-transient members as a `target` are intentionally disallowed -- a warning is logged in that case. Only target class version is checked, i.e. checksum is ignored. Raw read rules are not (and will likely not be) supported, as they take a `TBuffer &`. ## Changes or fixes:; - Introduce `RFieldBase::AddReadCallbacksFromIORules()`. This function registers a post-read callback for each of the given `ROOT::TSchemaRule`s.; - `RFieldBase::ConnectPageSource()`: cache C++ type version as stored in the RNTupleDescriptor. This information can be accessed via `GetOnDiskTypeVersion()`.; `RFieldBase::RegisterReadCallbacks()` is called as part of `ConnectPageSource()`. This function can be overridden; in particular, derived classes can make use of the on-disk type version to enable/disable read rules.; - RClassField: register a post-read callback for each of the custom I/O rules associated with the target class version.; - I/O customization rules referencing non-transient members are ignored for now. Such rules shall trigger a warning, e.g.; ```; 210: Warning in <[ROOT.NTuple] Warning /home/jalopezg/CERN/repos/root/tree/ntuple/v7/src/RField.cxx:931 in ; ROOT::Experimental::RClassField::RClassField(std::string_view, std::string_view, TClass*)::<lambda(const ; ROOT::TSchemaRule*)>>: ignoring I/O customization rule with non-transient member: a; ```. ## Checklist:; - [X] tested changes locally; - [X] updated the docs (if necessary). This PR partially takes care of #10019.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11944:376,checksum,checksum,376,https://root.cern,https://github.com/root-project/root/pull/11944,2,"['access', 'checksum']","['accessed', 'checksum']"
Security,"Quoting @pcanal:. > I am a bit lost ... Do we understand the reason for the thread unsafety? What data is there a race condition on? [Note for example that gPad is thread-local and in-itself not a cause for problem (unless several threads have their gPad pointing to the same pad). > One thing that would be helpful to understand the scope is the 2 stack traces of the 2 threads accessing the same pointer. Since you @andriish also found a workaround for your problem, it would be better to only change the code in ROOT once we understand exactly what the problem on the ROOT side is and how it is solved by this change (or another change). Therefore I'll close this PR here, but please feel free to engage with us again either here on GitHub or on the ROOT forum if you have practical problems again! Thanks",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6511#issuecomment-1808094349:379,access,accessing,379,https://root.cern,https://github.com/root-project/root/pull/6511#issuecomment-1808094349,1,['access'],['accessing']
Security,R-Robots.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/UNAMgrid-ca.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/UNLPGrid.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/SDG-G2.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/AC-GRID-FR-Robots.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/7a819ef2.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/UNAMgrid-ca.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/QuoVadis-Root-CA2.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/QuoVadis-Root-CA2.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/UNLPGrid.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/QuoVadis-Root-CA2.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/d71343e8.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/QuoVadis-Root-CA2.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/d71343e8.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/d7e8dc79.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/SlovakGrid.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/728fa56d.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/SlovakGrid.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/728fa56d.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/e13e0fcf.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/e21dc0c0.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/87,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8092#issuecomment-840048181:52885,secur,security,52885,https://root.cern,https://github.com/root-project/root/issues/8092#issuecomment-840048181,2,"['certificate', 'secur']","['certificates', 'security']"
Security,R-Services.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/20b7db76.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/IHEP-2013.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/NERSC-SLCS.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/NERSC-SLCS.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/DCAROOT-G1.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/NERSC-SLCS.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/IHEP-2013.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/NERSC-SLCS.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/b93d6240.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/39d30eba.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/b93d6240.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/e7734335.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/30351739.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/39d30eba.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/30351739.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/e7734335.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/61cd35bd.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/IHEP-2013.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/61cd35bd.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/HPCI.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/HPCI.namespaces' from CURLOPT_CAPAT,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8092#issuecomment-840048181:55838,secur,security,55838,https://root.cern,https://github.com/root-project/root/issues/8092#issuecomment-840048181,2,"['certificate', 'secur']","['certificates', 'security']"
Security,"RConcurrentHashColl::HashValue, std::vector&lt;int&gt; &gt;; _Alloc = std::allocator&lt;std::pair&lt;const ROOT::Internal::RConcurrentHashColl::HashValue, std::vector&lt;int&gt; &gt; &gt;; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to&lt;ROOT::Internal::RConcurrentHashColl::HashValue&gt;; _H1 = std::hash&lt;ROOT::Internal::RConcurrentHashColl::HashValue&gt;; _H2 = std::__detail::_Mod_range_hashing; _Hash = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits&lt;true, false, true&gt;]’ ; - [2023-05-18T18:12:58.149Z] /usr/include/c++/9/bits/hashtable.h:438:7: error: use of deleted function ‘std::__detail::_Hashtable_base&lt;_Key, _Value, _ExtractKey, _Equal, _H1, _H2, _Hash, _Traits&gt;::_Hashtable_base() [with _Key = ROOT::Internal::RConcurrentHashColl::HashValue; _Value = std::pair&lt;const ROOT::Internal::RConcurrentHashColl::HashValue, std::vector&lt;int&gt; &gt;; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to&lt;ROOT::Internal::RConcurrentHashColl::HashValue&gt;; _H1 = std::hash&lt;ROOT::Internal::RConcurrentHashColl::HashValue&gt;; _H2 = std::__detail::_Mod_range_hashing; _Hash = std::__detail::_Default_ranged_hash; _Traits = std::__detail::_Hashtable_traits&lt;true, false, true&gt;]’ ; - [2023-05-18T18:12:58.149Z] /usr/include/c++/9/bits/hashtable_policy.h:1822:5: error: use of deleted function ‘std::__detail::_Hash_code_base&lt;_Key, _Value, _ExtractKey, _H1, _H2, std::__detail::_Default_ranged_hash, true&gt;::_Hash_code_base() [with _Key = ROOT::Internal::RConcurrentHashColl::HashValue; _Value = std::pair&lt;const ROOT::Internal::RConcurrentHashColl::HashValue, std::vector&lt;int&gt; &gt;; _ExtractKey = std::__detail::_Select1st; _H1 = std::hash&lt;ROOT::Internal::RConcurrentHashColl::HashValue&gt;; _H2 = std::__detail::_Mod_range_hashing]’ ; - [2023-05-18T18:12:58.149Z] /usr/include/c++/9/bits/hashtable_policy.h:1373:7: error: use of deleted func",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12846#issuecomment-1553437110:2525,Hash,HashValue,2525,https://root.cern,https://github.com/root-project/root/pull/12846#issuecomment-1553437110,5,"['Hash', 'hash']","['HashValue', 'hash']"
Security,"RConcurrentHashColl::HashValue, std::vector&lt;int&gt; &gt;; _Alloc = std::allocator&lt;std::pair&lt;const ROOT::Internal::RConcurrentHashColl::HashValue, std::vector&lt;int&gt; &gt; &gt;; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to&lt;ROOT::Internal::RConcurrentHashColl::HashValue&gt;; _H1 = std::hash&lt;ROOT::Internal::RConcurrentHashColl::HashValue&gt;; _H2 = std::__detail::_Mod_range_hashing; _Hash = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits&lt;true, false, true&gt;]’ ; - [2023-05-18T18:15:30.152Z] /usr/include/c++/8/bits/hashtable.h:413:7: error: use of deleted function ‘std::__detail::_Hashtable_base&lt;_Key, _Value, _ExtractKey, _Equal, _H1, _H2, _Hash, _Traits&gt;::_Hashtable_base() [with _Key = ROOT::Internal::RConcurrentHashColl::HashValue; _Value = std::pair&lt;const ROOT::Internal::RConcurrentHashColl::HashValue, std::vector&lt;int&gt; &gt;; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to&lt;ROOT::Internal::RConcurrentHashColl::HashValue&gt;; _H1 = std::hash&lt;ROOT::Internal::RConcurrentHashColl::HashValue&gt;; _H2 = std::__detail::_Mod_range_hashing; _Hash = std::__detail::_Default_ranged_hash; _Traits = std::__detail::_Hashtable_traits&lt;true, false, true&gt;]’ ; - [2023-05-18T18:15:30.152Z] /usr/include/c++/8/bits/hashtable_policy.h:1824:5: error: use of deleted function ‘std::__detail::_Hash_code_base&lt;_Key, _Value, _ExtractKey, _H1, _H2, std::__detail::_Default_ranged_hash, true&gt;::_Hash_code_base() [with _Key = ROOT::Internal::RConcurrentHashColl::HashValue; _Value = std::pair&lt;const ROOT::Internal::RConcurrentHashColl::HashValue, std::vector&lt;int&gt; &gt;; _ExtractKey = std::__detail::_Select1st; _H1 = std::hash&lt;ROOT::Internal::RConcurrentHashColl::HashValue&gt;; _H2 = std::__detail::_Mod_range_hashing]’ ; - [2023-05-18T18:15:30.152Z] /usr/include/c++/8/bits/hashtable_policy.h:1379:7: error: use of deleted func",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12847#issuecomment-1553441066:2579,Hash,HashValue,2579,https://root.cern,https://github.com/root-project/root/pull/12847#issuecomment-1553441066,5,"['Hash', 'hash']","['HashValue', 'hash']"
Security,"RConcurrentHashColl::HashValue, std::vector&lt;int&gt; &gt;; _Alloc = std::allocator&lt;std::pair&lt;const ROOT::Internal::RConcurrentHashColl::HashValue, std::vector&lt;int&gt; &gt; &gt;; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to&lt;ROOT::Internal::RConcurrentHashColl::HashValue&gt;; _H1 = std::hash&lt;ROOT::Internal::RConcurrentHashColl::HashValue&gt;; _H2 = std::__detail::_Mod_range_hashing; _Hash = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits&lt;true, false, true&gt;]’ ; - [2023-05-18T18:15:37.088Z] /usr/include/c++/9/bits/hashtable.h:438:7: error: use of deleted function ‘std::__detail::_Hashtable_base&lt;_Key, _Value, _ExtractKey, _Equal, _H1, _H2, _Hash, _Traits&gt;::_Hashtable_base() [with _Key = ROOT::Internal::RConcurrentHashColl::HashValue; _Value = std::pair&lt;const ROOT::Internal::RConcurrentHashColl::HashValue, std::vector&lt;int&gt; &gt;; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to&lt;ROOT::Internal::RConcurrentHashColl::HashValue&gt;; _H1 = std::hash&lt;ROOT::Internal::RConcurrentHashColl::HashValue&gt;; _H2 = std::__detail::_Mod_range_hashing; _Hash = std::__detail::_Default_ranged_hash; _Traits = std::__detail::_Hashtable_traits&lt;true, false, true&gt;]’ ; - [2023-05-18T18:15:37.088Z] /usr/include/c++/9/bits/hashtable_policy.h:1822:5: error: use of deleted function ‘std::__detail::_Hash_code_base&lt;_Key, _Value, _ExtractKey, _H1, _H2, std::__detail::_Default_ranged_hash, true&gt;::_Hash_code_base() [with _Key = ROOT::Internal::RConcurrentHashColl::HashValue; _Value = std::pair&lt;const ROOT::Internal::RConcurrentHashColl::HashValue, std::vector&lt;int&gt; &gt;; _ExtractKey = std::__detail::_Select1st; _H1 = std::hash&lt;ROOT::Internal::RConcurrentHashColl::HashValue&gt;; _H2 = std::__detail::_Mod_range_hashing]’ ; - [2023-05-18T18:15:37.088Z] /usr/include/c++/9/bits/hashtable_policy.h:1373:7: error: use of deleted func",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12847#issuecomment-1553440181:2525,Hash,HashValue,2525,https://root.cern,https://github.com/root-project/root/pull/12847#issuecomment-1553440181,5,"['Hash', 'hash']","['HashValue', 'hash']"
Security,"RConcurrentHashColl::HashValue, std::vector&lt;int&gt; &gt;; _Alloc = std::allocator&lt;std::pair&lt;const ROOT::Internal::RConcurrentHashColl::HashValue, std::vector&lt;int&gt; &gt; &gt;; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to&lt;ROOT::Internal::RConcurrentHashColl::HashValue&gt;; _H1 = std::hash&lt;ROOT::Internal::RConcurrentHashColl::HashValue&gt;; _H2 = std::__detail::_Mod_range_hashing; _Hash = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits&lt;true, false, true&gt;]’ ; - [2023-05-18T18:18:09.069Z] /usr/include/c++/8/bits/hashtable.h:408:7: error: use of deleted function ‘std::__detail::_Hashtable_base&lt;_Key, _Value, _ExtractKey, _Equal, _H1, _H2, _Hash, _Traits&gt;::_Hashtable_base() [with _Key = ROOT::Internal::RConcurrentHashColl::HashValue; _Value = std::pair&lt;const ROOT::Internal::RConcurrentHashColl::HashValue, std::vector&lt;int&gt; &gt;; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to&lt;ROOT::Internal::RConcurrentHashColl::HashValue&gt;; _H1 = std::hash&lt;ROOT::Internal::RConcurrentHashColl::HashValue&gt;; _H2 = std::__detail::_Mod_range_hashing; _Hash = std::__detail::_Default_ranged_hash; _Traits = std::__detail::_Hashtable_traits&lt;true, false, true&gt;]’ ; - [2023-05-18T18:18:09.069Z] /usr/include/c++/8/bits/hashtable_policy.h:1832:5: error: use of deleted function ‘std::__detail::_Hash_code_base&lt;_Key, _Value, _ExtractKey, _H1, _H2, std::__detail::_Default_ranged_hash, true&gt;::_Hash_code_base() [with _Key = ROOT::Internal::RConcurrentHashColl::HashValue; _Value = std::pair&lt;const ROOT::Internal::RConcurrentHashColl::HashValue, std::vector&lt;int&gt; &gt;; _ExtractKey = std::__detail::_Select1st; _H1 = std::hash&lt;ROOT::Internal::RConcurrentHashColl::HashValue&gt;; _H2 = std::__detail::_Mod_range_hashing]’ ; - [2023-05-18T18:18:09.069Z] /usr/include/c++/8/bits/hashtable_policy.h:1383:7: error: use of deleted func",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12846#issuecomment-1553443733:2411,Hash,HashValue,2411,https://root.cern,https://github.com/root-project/root/pull/12846#issuecomment-1553443733,5,"['Hash', 'hash']","['HashValue', 'hash']"
Security,"RConcurrentHashColl::HashValue, std::vector&lt;int&gt; &gt;; _Alloc = std::allocator&lt;std::pair&lt;const ROOT::Internal::RConcurrentHashColl::HashValue, std::vector&lt;int&gt; &gt; &gt;; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to&lt;ROOT::Internal::RConcurrentHashColl::HashValue&gt;; _H1 = std::hash&lt;ROOT::Internal::RConcurrentHashColl::HashValue&gt;; _H2 = std::__detail::_Mod_range_hashing; _Hash = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits&lt;true, false, true&gt;]’ ; - [2023-05-18T18:23:23.216Z] /usr/include/c++/8/bits/hashtable.h:413:7: error: use of deleted function ‘std::__detail::_Hashtable_base&lt;_Key, _Value, _ExtractKey, _Equal, _H1, _H2, _Hash, _Traits&gt;::_Hashtable_base() [with _Key = ROOT::Internal::RConcurrentHashColl::HashValue; _Value = std::pair&lt;const ROOT::Internal::RConcurrentHashColl::HashValue, std::vector&lt;int&gt; &gt;; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to&lt;ROOT::Internal::RConcurrentHashColl::HashValue&gt;; _H1 = std::hash&lt;ROOT::Internal::RConcurrentHashColl::HashValue&gt;; _H2 = std::__detail::_Mod_range_hashing; _Hash = std::__detail::_Default_ranged_hash; _Traits = std::__detail::_Hashtable_traits&lt;true, false, true&gt;]’ ; - [2023-05-18T18:23:23.216Z] /usr/include/c++/8/bits/hashtable_policy.h:1824:5: error: use of deleted function ‘std::__detail::_Hash_code_base&lt;_Key, _Value, _ExtractKey, _H1, _H2, std::__detail::_Default_ranged_hash, true&gt;::_Hash_code_base() [with _Key = ROOT::Internal::RConcurrentHashColl::HashValue; _Value = std::pair&lt;const ROOT::Internal::RConcurrentHashColl::HashValue, std::vector&lt;int&gt; &gt;; _ExtractKey = std::__detail::_Select1st; _H1 = std::hash&lt;ROOT::Internal::RConcurrentHashColl::HashValue&gt;; _H2 = std::__detail::_Mod_range_hashing]’ ; - [2023-05-18T18:23:23.216Z] /usr/include/c++/8/bits/hashtable_policy.h:1379:7: error: use of deleted func",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12846#issuecomment-1553447609:2696,Hash,HashValue,2696,https://root.cern,https://github.com/root-project/root/pull/12846#issuecomment-1553447609,5,"['Hash', 'hash']","['HashValue', 'hash']"
Security,"RConcurrentHashColl::HashValue, std::vector&lt;int&gt; &gt;; _Alloc = std::allocator&lt;std::pair&lt;const ROOT::Internal::RConcurrentHashColl::HashValue, std::vector&lt;int&gt; &gt; &gt;; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to&lt;ROOT::Internal::RConcurrentHashColl::HashValue&gt;; _H1 = std::hash&lt;ROOT::Internal::RConcurrentHashColl::HashValue&gt;; _H2 = std::__detail::_Mod_range_hashing; _Hash = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits&lt;true, false, true&gt;]’ ; - [2023-05-18T18:28:25.630Z] /usr/include/c++/8/bits/hashtable.h:408:7: error: use of deleted function ‘std::__detail::_Hashtable_base&lt;_Key, _Value, _ExtractKey, _Equal, _H1, _H2, _Hash, _Traits&gt;::_Hashtable_base() [with _Key = ROOT::Internal::RConcurrentHashColl::HashValue; _Value = std::pair&lt;const ROOT::Internal::RConcurrentHashColl::HashValue, std::vector&lt;int&gt; &gt;; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to&lt;ROOT::Internal::RConcurrentHashColl::HashValue&gt;; _H1 = std::hash&lt;ROOT::Internal::RConcurrentHashColl::HashValue&gt;; _H2 = std::__detail::_Mod_range_hashing; _Hash = std::__detail::_Default_ranged_hash; _Traits = std::__detail::_Hashtable_traits&lt;true, false, true&gt;]’ ; - [2023-05-18T18:28:25.630Z] /usr/include/c++/8/bits/hashtable_policy.h:1832:5: error: use of deleted function ‘std::__detail::_Hash_code_base&lt;_Key, _Value, _ExtractKey, _H1, _H2, std::__detail::_Default_ranged_hash, true&gt;::_Hash_code_base() [with _Key = ROOT::Internal::RConcurrentHashColl::HashValue; _Value = std::pair&lt;const ROOT::Internal::RConcurrentHashColl::HashValue, std::vector&lt;int&gt; &gt;; _ExtractKey = std::__detail::_Select1st; _H1 = std::hash&lt;ROOT::Internal::RConcurrentHashColl::HashValue&gt;; _H2 = std::__detail::_Mod_range_hashing]’ ; - [2023-05-18T18:28:25.630Z] /usr/include/c++/8/bits/hashtable_policy.h:1383:7: error: use of deleted func",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12847#issuecomment-1553458918:2411,Hash,HashValue,2411,https://root.cern,https://github.com/root-project/root/pull/12847#issuecomment-1553458918,5,"['Hash', 'hash']","['HashValue', 'hash']"
Security,"RConcurrentHashColl::HashValue, std::vector&lt;int&gt; &gt;; _Alloc = std::allocator&lt;std::pair&lt;const ROOT::Internal::RConcurrentHashColl::HashValue, std::vector&lt;int&gt; &gt; &gt;; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to&lt;ROOT::Internal::RConcurrentHashColl::HashValue&gt;; _H1 = std::hash&lt;ROOT::Internal::RConcurrentHashColl::HashValue&gt;; _H2 = std::__detail::_Mod_range_hashing; _Hash = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits&lt;true, false, true&gt;]’ ; - [2023-05-18T18:49:04.198Z] /usr/include/c++/9/bits/hashtable.h:438:7: error: use of deleted function ‘std::__detail::_Hashtable_base&lt;_Key, _Value, _ExtractKey, _Equal, _H1, _H2, _Hash, _Traits&gt;::_Hashtable_base() [with _Key = ROOT::Internal::RConcurrentHashColl::HashValue; _Value = std::pair&lt;const ROOT::Internal::RConcurrentHashColl::HashValue, std::vector&lt;int&gt; &gt;; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to&lt;ROOT::Internal::RConcurrentHashColl::HashValue&gt;; _H1 = std::hash&lt;ROOT::Internal::RConcurrentHashColl::HashValue&gt;; _H2 = std::__detail::_Mod_range_hashing; _Hash = std::__detail::_Default_ranged_hash; _Traits = std::__detail::_Hashtable_traits&lt;true, false, true&gt;]’ ; - [2023-05-18T18:49:04.198Z] /usr/include/c++/9/bits/hashtable_policy.h:1822:5: error: use of deleted function ‘std::__detail::_Hash_code_base&lt;_Key, _Value, _ExtractKey, _H1, _H2, std::__detail::_Default_ranged_hash, true&gt;::_Hash_code_base() [with _Key = ROOT::Internal::RConcurrentHashColl::HashValue; _Value = std::pair&lt;const ROOT::Internal::RConcurrentHashColl::HashValue, std::vector&lt;int&gt; &gt;; _ExtractKey = std::__detail::_Select1st; _H1 = std::hash&lt;ROOT::Internal::RConcurrentHashColl::HashValue&gt;; _H2 = std::__detail::_Mod_range_hashing]’ ; - [2023-05-18T18:49:04.198Z] /usr/include/c++/9/bits/hashtable_policy.h:1373:7: error: use of deleted func",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12846#issuecomment-1553486787:2525,Hash,HashValue,2525,https://root.cern,https://github.com/root-project/root/pull/12846#issuecomment-1553486787,5,"['Hash', 'hash']","['HashValue', 'hash']"
Security,"RConcurrentHashColl::HashValue, std::vector&lt;int&gt; &gt;; _Alloc = std::allocator&lt;std::pair&lt;const ROOT::Internal::RConcurrentHashColl::HashValue, std::vector&lt;int&gt; &gt; &gt;; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to&lt;ROOT::Internal::RConcurrentHashColl::HashValue&gt;; _H1 = std::hash&lt;ROOT::Internal::RConcurrentHashColl::HashValue&gt;; _H2 = std::__detail::_Mod_range_hashing; _Hash = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits&lt;true, false, true&gt;]’ ; - [2023-05-18T18:49:54.137Z] /usr/include/c++/8/bits/hashtable.h:413:7: error: use of deleted function ‘std::__detail::_Hashtable_base&lt;_Key, _Value, _ExtractKey, _Equal, _H1, _H2, _Hash, _Traits&gt;::_Hashtable_base() [with _Key = ROOT::Internal::RConcurrentHashColl::HashValue; _Value = std::pair&lt;const ROOT::Internal::RConcurrentHashColl::HashValue, std::vector&lt;int&gt; &gt;; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to&lt;ROOT::Internal::RConcurrentHashColl::HashValue&gt;; _H1 = std::hash&lt;ROOT::Internal::RConcurrentHashColl::HashValue&gt;; _H2 = std::__detail::_Mod_range_hashing; _Hash = std::__detail::_Default_ranged_hash; _Traits = std::__detail::_Hashtable_traits&lt;true, false, true&gt;]’ ; - [2023-05-18T18:49:54.137Z] /usr/include/c++/8/bits/hashtable_policy.h:1824:5: error: use of deleted function ‘std::__detail::_Hash_code_base&lt;_Key, _Value, _ExtractKey, _H1, _H2, std::__detail::_Default_ranged_hash, true&gt;::_Hash_code_base() [with _Key = ROOT::Internal::RConcurrentHashColl::HashValue; _Value = std::pair&lt;const ROOT::Internal::RConcurrentHashColl::HashValue, std::vector&lt;int&gt; &gt;; _ExtractKey = std::__detail::_Select1st; _H1 = std::hash&lt;ROOT::Internal::RConcurrentHashColl::HashValue&gt;; _H2 = std::__detail::_Mod_range_hashing]’ ; - [2023-05-18T18:49:54.137Z] /usr/include/c++/8/bits/hashtable_policy.h:1379:7: error: use of deleted func",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12846#issuecomment-1553488642:2579,Hash,HashValue,2579,https://root.cern,https://github.com/root-project/root/pull/12846#issuecomment-1553488642,5,"['Hash', 'hash']","['HashValue', 'hash']"
Security,"RConcurrentHashColl::HashValue, std::vector&lt;int&gt; &gt;; _Alloc = std::allocator&lt;std::pair&lt;const ROOT::Internal::RConcurrentHashColl::HashValue, std::vector&lt;int&gt; &gt; &gt;; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to&lt;ROOT::Internal::RConcurrentHashColl::HashValue&gt;; _H1 = std::hash&lt;ROOT::Internal::RConcurrentHashColl::HashValue&gt;; _H2 = std::__detail::_Mod_range_hashing; _Hash = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits&lt;true, false, true&gt;]’ ; - [2023-05-18T18:53:17.121Z] /usr/include/c++/9/bits/hashtable.h:438:7: error: use of deleted function ‘std::__detail::_Hashtable_base&lt;_Key, _Value, _ExtractKey, _Equal, _H1, _H2, _Hash, _Traits&gt;::_Hashtable_base() [with _Key = ROOT::Internal::RConcurrentHashColl::HashValue; _Value = std::pair&lt;const ROOT::Internal::RConcurrentHashColl::HashValue, std::vector&lt;int&gt; &gt;; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to&lt;ROOT::Internal::RConcurrentHashColl::HashValue&gt;; _H1 = std::hash&lt;ROOT::Internal::RConcurrentHashColl::HashValue&gt;; _H2 = std::__detail::_Mod_range_hashing; _Hash = std::__detail::_Default_ranged_hash; _Traits = std::__detail::_Hashtable_traits&lt;true, false, true&gt;]’ ; - [2023-05-18T18:53:17.121Z] /usr/include/c++/9/bits/hashtable_policy.h:1822:5: error: use of deleted function ‘std::__detail::_Hash_code_base&lt;_Key, _Value, _ExtractKey, _H1, _H2, std::__detail::_Default_ranged_hash, true&gt;::_Hash_code_base() [with _Key = ROOT::Internal::RConcurrentHashColl::HashValue; _Value = std::pair&lt;const ROOT::Internal::RConcurrentHashColl::HashValue, std::vector&lt;int&gt; &gt;; _ExtractKey = std::__detail::_Select1st; _H1 = std::hash&lt;ROOT::Internal::RConcurrentHashColl::HashValue&gt;; _H2 = std::__detail::_Mod_range_hashing]’ ; - [2023-05-18T18:53:17.121Z] /usr/include/c++/9/bits/hashtable_policy.h:1373:7: error: use of deleted func",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12847#issuecomment-1553491495:2525,Hash,HashValue,2525,https://root.cern,https://github.com/root-project/root/pull/12847#issuecomment-1553491495,5,"['Hash', 'hash']","['HashValue', 'hash']"
Security,"RConcurrentHashColl::HashValue, std::vector&lt;int&gt; &gt;; _Alloc = std::allocator&lt;std::pair&lt;const ROOT::Internal::RConcurrentHashColl::HashValue, std::vector&lt;int&gt; &gt; &gt;; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to&lt;ROOT::Internal::RConcurrentHashColl::HashValue&gt;; _H1 = std::hash&lt;ROOT::Internal::RConcurrentHashColl::HashValue&gt;; _H2 = std::__detail::_Mod_range_hashing; _Hash = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits&lt;true, false, true&gt;]’ ; - [2023-05-18T18:56:29.934Z] /usr/include/c++/8/bits/hashtable.h:413:7: error: use of deleted function ‘std::__detail::_Hashtable_base&lt;_Key, _Value, _ExtractKey, _Equal, _H1, _H2, _Hash, _Traits&gt;::_Hashtable_base() [with _Key = ROOT::Internal::RConcurrentHashColl::HashValue; _Value = std::pair&lt;const ROOT::Internal::RConcurrentHashColl::HashValue, std::vector&lt;int&gt; &gt;; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to&lt;ROOT::Internal::RConcurrentHashColl::HashValue&gt;; _H1 = std::hash&lt;ROOT::Internal::RConcurrentHashColl::HashValue&gt;; _H2 = std::__detail::_Mod_range_hashing; _Hash = std::__detail::_Default_ranged_hash; _Traits = std::__detail::_Hashtable_traits&lt;true, false, true&gt;]’ ; - [2023-05-18T18:56:29.934Z] /usr/include/c++/8/bits/hashtable_policy.h:1824:5: error: use of deleted function ‘std::__detail::_Hash_code_base&lt;_Key, _Value, _ExtractKey, _H1, _H2, std::__detail::_Default_ranged_hash, true&gt;::_Hash_code_base() [with _Key = ROOT::Internal::RConcurrentHashColl::HashValue; _Value = std::pair&lt;const ROOT::Internal::RConcurrentHashColl::HashValue, std::vector&lt;int&gt; &gt;; _ExtractKey = std::__detail::_Select1st; _H1 = std::hash&lt;ROOT::Internal::RConcurrentHashColl::HashValue&gt;; _H2 = std::__detail::_Mod_range_hashing]’ ; - [2023-05-18T18:56:29.934Z] /usr/include/c++/8/bits/hashtable_policy.h:1379:7: error: use of deleted func",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12847#issuecomment-1553499782:2579,Hash,HashValue,2579,https://root.cern,https://github.com/root-project/root/pull/12847#issuecomment-1553499782,5,"['Hash', 'hash']","['HashValue', 'hash']"
Security,"RConcurrentHashColl::HashValue, std::vector&lt;int&gt; &gt;; _Alloc = std::allocator&lt;std::pair&lt;const ROOT::Internal::RConcurrentHashColl::HashValue, std::vector&lt;int&gt; &gt; &gt;; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to&lt;ROOT::Internal::RConcurrentHashColl::HashValue&gt;; _H1 = std::hash&lt;ROOT::Internal::RConcurrentHashColl::HashValue&gt;; _H2 = std::__detail::_Mod_range_hashing; _Hash = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits&lt;true, false, true&gt;]’ ; - [2023-05-18T19:40:02.839Z] /usr/include/c++/8/bits/hashtable.h:408:7: error: use of deleted function ‘std::__detail::_Hashtable_base&lt;_Key, _Value, _ExtractKey, _Equal, _H1, _H2, _Hash, _Traits&gt;::_Hashtable_base() [with _Key = ROOT::Internal::RConcurrentHashColl::HashValue; _Value = std::pair&lt;const ROOT::Internal::RConcurrentHashColl::HashValue, std::vector&lt;int&gt; &gt;; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to&lt;ROOT::Internal::RConcurrentHashColl::HashValue&gt;; _H1 = std::hash&lt;ROOT::Internal::RConcurrentHashColl::HashValue&gt;; _H2 = std::__detail::_Mod_range_hashing; _Hash = std::__detail::_Default_ranged_hash; _Traits = std::__detail::_Hashtable_traits&lt;true, false, true&gt;]’ ; - [2023-05-18T19:40:02.840Z] /usr/include/c++/8/bits/hashtable_policy.h:1832:5: error: use of deleted function ‘std::__detail::_Hash_code_base&lt;_Key, _Value, _ExtractKey, _H1, _H2, std::__detail::_Default_ranged_hash, true&gt;::_Hash_code_base() [with _Key = ROOT::Internal::RConcurrentHashColl::HashValue; _Value = std::pair&lt;const ROOT::Internal::RConcurrentHashColl::HashValue, std::vector&lt;int&gt; &gt;; _ExtractKey = std::__detail::_Select1st; _H1 = std::hash&lt;ROOT::Internal::RConcurrentHashColl::HashValue&gt;; _H2 = std::__detail::_Mod_range_hashing]’ ; - [2023-05-18T19:40:02.840Z] /usr/include/c++/8/bits/hashtable_policy.h:1383:7: error: use of deleted func",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12846#issuecomment-1553557302:2411,Hash,HashValue,2411,https://root.cern,https://github.com/root-project/root/pull/12846#issuecomment-1553557302,5,"['Hash', 'hash']","['HashValue', 'hash']"
Security,"RConcurrentHashColl::HashValue, std::vector&lt;int&gt; &gt;; _Alloc = std::allocator&lt;std::pair&lt;const ROOT::Internal::RConcurrentHashColl::HashValue, std::vector&lt;int&gt; &gt; &gt;; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to&lt;ROOT::Internal::RConcurrentHashColl::HashValue&gt;; _H1 = std::hash&lt;ROOT::Internal::RConcurrentHashColl::HashValue&gt;; _H2 = std::__detail::_Mod_range_hashing; _Hash = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits&lt;true, false, true&gt;]’ ; - [2023-05-18T19:50:07.334Z] /usr/include/c++/8/bits/hashtable.h:408:7: error: use of deleted function ‘std::__detail::_Hashtable_base&lt;_Key, _Value, _ExtractKey, _Equal, _H1, _H2, _Hash, _Traits&gt;::_Hashtable_base() [with _Key = ROOT::Internal::RConcurrentHashColl::HashValue; _Value = std::pair&lt;const ROOT::Internal::RConcurrentHashColl::HashValue, std::vector&lt;int&gt; &gt;; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_to&lt;ROOT::Internal::RConcurrentHashColl::HashValue&gt;; _H1 = std::hash&lt;ROOT::Internal::RConcurrentHashColl::HashValue&gt;; _H2 = std::__detail::_Mod_range_hashing; _Hash = std::__detail::_Default_ranged_hash; _Traits = std::__detail::_Hashtable_traits&lt;true, false, true&gt;]’ ; - [2023-05-18T19:50:07.334Z] /usr/include/c++/8/bits/hashtable_policy.h:1832:5: error: use of deleted function ‘std::__detail::_Hash_code_base&lt;_Key, _Value, _ExtractKey, _H1, _H2, std::__detail::_Default_ranged_hash, true&gt;::_Hash_code_base() [with _Key = ROOT::Internal::RConcurrentHashColl::HashValue; _Value = std::pair&lt;const ROOT::Internal::RConcurrentHashColl::HashValue, std::vector&lt;int&gt; &gt;; _ExtractKey = std::__detail::_Select1st; _H1 = std::hash&lt;ROOT::Internal::RConcurrentHashColl::HashValue&gt;; _H2 = std::__detail::_Mod_range_hashing]’ ; - [2023-05-18T19:50:07.334Z] /usr/include/c++/8/bits/hashtable_policy.h:1383:7: error: use of deleted func",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12847#issuecomment-1553567486:2411,Hash,HashValue,2411,https://root.cern,https://github.com/root-project/root/pull/12847#issuecomment-1553567486,5,"['Hash', 'hash']","['HashValue', 'hash']"
Security,RENAeSciencePersonalCA3.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/dbf09133.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/PK-Grid-2007.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/dbf09133.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/8f016f43.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/TSU-GE.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/8f016f43.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/PKIUNAMgrid.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/TSU-GE.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/PKIUNAMgrid.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/GermanGrid.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/TSU-GE.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/PKIUNAMgrid.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/d0a33f8e.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/d0a33f8e.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/dd4b34ea.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/4b2783ac.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/TSU-GE.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/4b2783ac.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/dd4b34ea.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/7f4db168.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/7f4db168.signing_poli,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8092#issuecomment-840048181:29068,secur,security,29068,https://root.cern,https://github.com/root-project/root/issues/8092#issuecomment-840048181,2,"['certificate', 'secur']","['certificates', 'security']"
Security,REve: Implement scene subscription and add accessable view navigation,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12383:43,access,accessable,43,https://root.cern,https://github.com/root-project/root/pull/12383,1,['access'],['accessable']
Security,"RField support for user-defined classes that behave as collections of elements. These classes specify a ""collection proxy"" that provides access to the elements in the collection.; A legacy collection proxy is provided in the form of an instance of a class derived from `TVirtualCollectionProxy`. The collection proxy for a class is typically set during initialization, usually using `TClass::CopyCollectionProxy()` or similar. In this pull request, we introduce support for legacy collection proxies derived from the `TVirtualCollectionProxy` class, although in later stages, RNTuple might provide this functionality through an interface different interface. At a bare minimum, the user is required to provide an implementation for the following functions in `TVirtualCollectionProxy`:; - `HasPointers()`, `GetProperties()`, `GetValueClass()`, `GetType()`, `Sizeof()`: for general information about the collection and its value type.; - `Sizeof()`, `At()`, `Clear()`, and `Insert()`: for element access; - `PushProxy()`, `PopProxy()`: for selecting the target object. A usage example can be seen [here](https://github.com/root-project/root/pull/11525/files#diff-81832cd72f5d9af1508fd153abdf63b6406256248f1d1440f966e82e628da141). ## Changes or fixes:; - Added class `RCollectionClassField`, representing a field of a user-defined class that behaves as a collection that is compliant with the `TVirtualCollectionProxy` interface.; Given that the `RField<T>` primary template definition (that used if no specialization matches) uses `RClassField` to store members of a class, we rely on an additional helper type (`IsCollectionProxy<T>`) to annotate that a particular class has an associated collection proxy (see example below).; ```c++; // Alternatively, this can be specified via a member type in the user-defined class; see the documentation; template <>; struct IsCollectionProxy<ProxiedCollection> : std::true_type {};. auto model = RNTupleModel::Create();; auto fieldKlass = model->MakeField<MyCl",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11525:1025,access,access,1025,https://root.cern,https://github.com/root-project/root/pull/11525,1,['access'],['access']
Security,"RFieldBase::Create(""fieldname"", ""classame"") in ROOT 6.24.0 returns an error when the class contains an anonymous enum. ; To reproduce execute a ROOT macro EmumTest.C containing:; ```; class ContainsEnum { public: enum { EnumField1, EnumField2 }; }; ; void EnumTest() { ; try { auto field = ROOT::Experimental::Detail::RFieldBase::Create(""HasEnum"", ""ContainsEnum"").Unwrap(); ; } catch(const std::exception& exc) { ; std::cout << ""ERROR: "" << exc.what() << std::endl; ; } ; }; ``` ; ```root [0] ; Processing EnumTest.C...; ERROR: Field EnumField1 has unknown type ContainsEnum::(anonymous) (unchecked RResult access!); At:; static ROOT::Experimental::RResult<std::unique_ptr<ROOT::Experimental::Detail::RFieldBase> > ROOT::Experimental::Detail::RFieldBase::Create(const string&, const string&) [/build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-v6.24.00/src/ROOT/v6.24.00/tree/ntuple/v7/src/RField.cxx:225]; ```; Marcin",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8901:607,access,access,607,https://root.cern,https://github.com/root-project/root/issues/8901,1,['access'],['access']
Security,RLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/GEANTeScienceSSLCA4.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/e9cc934f.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/GEANTeSciencePersonalECCCA4.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/GEANTeScienceSSLCA4.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/c141eb07.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/e9cc934f.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/c141eb07.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/d9343743.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/3e0d64db.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/3e0d64db.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/b85d64aa.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/DigitalTrustAssuredCAG4-runbytheissuer.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/DigitalTrustAssuredCAG4-runbytheissuer.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/5249c1ef.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/DigitalTrustAssuredCAG4-runbytheissuer.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/DigitalTrustSecureCAG4-runbytheissuer.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/5d9ea26d.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/DigitalTrustAssuredCAG4-runbytheissuer.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/b167aa9e.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-sec,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8092#issuecomment-840048181:18901,secur,security,18901,https://root.cern,https://github.com/root-project/root/issues/8092#issuecomment-840048181,2,"['certificate', 'secur']","['certificates', 'security']"
Security,RLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/f30dd6ad.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/b4278411.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/f30dd6ad.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/CNRS2.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/35105088.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/35105088.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/KENETROOTCA.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/USERTrustRSACertificationAuthority.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/CNRS2.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/USERTrustRSACertificationAuthority.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/DigiCertGridRootCA-Root.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/USERTrustRSACertificationAuthority.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/edca0fc0.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/2436bbb8.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/d58bb4bc.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/USERTrustRSACertificationAuthority.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/fc5a8f99.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/c2a48ab6.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/fc5a8f99.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/23c77840.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-s,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8092#issuecomment-840048181:4822,secur,security,4822,https://root.cern,https://github.com/root-project/root/issues/8092#issuecomment-840048181,2,"['certificate', 'secur']","['certificates', 'security']"
Security,ROOT 6.24.00 in LCG_100 fails webdav authentication,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8092:37,authenticat,authentication,37,https://root.cern,https://github.com/root-project/root/issues/8092,1,['authenticat'],['authentication']
Security,"ROOT can't autoparse classes inside namespaces with the rootmap; system (as the loading callbacks don't correctly land where; they are supposed to land with our injected namespaces). As this; turns out to be a feature of some kind, let's preload TMVA/TreePlayer; to fix all failing tests that are related to this feature/bug with; modules enabled.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1355:161,inject,injected,161,https://root.cern,https://github.com/root-project/root/pull/1355,1,['inject'],['injected']
Security,"ROOT can't autoparse classes inside namespaces with the rootmap; system (as the loading callbacks don't correctly land where; they are supposed to land with our injected namespaces). As this; turns out to be a feature of some kind, let's preload; TMVA/TreePlayer/Graf to fix all failing tests that are related; to this feature/bug with modules enabled. This commit can be dropped if we solve on of those problems:. 1. figure out how to fix this bug in the rootmap-based loading; without regressin in performance. 2. replace the rootmap system with something else like attaching; all C++ modules on startup. Note that we already do something like this in normal ROOT by; including these packages into the PCH which also makes those; decls available in the normal clang lookup. This PR depends on #1394",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1396:161,inject,injected,161,https://root.cern,https://github.com/root-project/root/pull/1396,1,['inject'],['injected']
Security,ROOT does not work when launched from non-accessible folder,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12409:42,access,accessible,42,https://root.cern,https://github.com/root-project/root/issues/12409,1,['access'],['accessible']
Security,"ROOT injects forward declarations of entities as trampolines to resolve the full definitions and load the corresponding library. This allows the ROOT users to 'just' type a name and the interpreter will resolve its definition and dlopen the library describing it. There is a well-known (not well understood until now) limitation with this system: we cannot load entities in namespaces. Namely, if we type `ROOT::TDF::TDataFrame;` the system won't be able to resolve it. This is because we enable the system to load only the contents of namespaces from the forward declarations. For example,; ```cpp; // rootmap file; namespace ROOT{ namespace Experimental { class TDataFrame; } } // #1. // real code; namespace ROOT{ namespace Experimental { class TDataFrame {}; } } // #2. [root] ROOT::Experimental::TDataFrame d; // #3; ```; `#1` is piped at root/interpreter start up; we find the DeclContext and flag it. `#3` triggers a lookup and `#includes #2`. The problem is that we do not issue a lookup in `#2`. The effect is that we practically cannot autoload entities from namespaces. Turning it 'just' on breaks performance and starts loading irrelevant libraries. This is because clang eagerly deserializes template specialization declarations for the decl context in question when computing linkage information in CodeGen. All heavy lifting is done in [D41416](https://reviews.llvm.org/D41416) and landed in e51a2b9de4. It enables finer-grained template specialization deserialization removing the effect of loading irrelevant libraries. The performance impact will be seen shortly after we land this PR.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1547:5,inject,injects,5,https://root.cern,https://github.com/root-project/root/pull/1547,1,['inject'],['injects']
Security,ROOT-5076: Support random access compression,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/152:26,access,access,26,https://root.cern,https://github.com/root-project/root/pull/152,1,['access'],['access']
Security,ROOT-8985 TMVA DNN validation set,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/968:19,validat,validation,19,https://root.cern,https://github.com/root-project/root/pull/968,1,['validat'],['validation']
Security,RSC-SLCS.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/IHEP-2013.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/NERSC-SLCS.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/b93d6240.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/39d30eba.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/b93d6240.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/e7734335.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/30351739.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/39d30eba.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/30351739.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/e7734335.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/61cd35bd.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/IHEP-2013.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/61cd35bd.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/HPCI.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/HPCI.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/ead666c8.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/06769ccd.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/HPCI.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/06769ccd.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/522b8537.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/NorduGrid-2015.signing_policy' from CURLOPT_CAPAT,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8092#issuecomment-840048181:56406,secur,security,56406,https://root.cern,https://github.com/root-project/root/issues/8092#issuecomment-840048181,2,"['certificate', 'secur']","['certificates', 'security']"
Security,"Rationale; ---------. We create a number of small root files to serve as conditions data. The; algorithm tells the framework to save the data to be valid for a given interval of; time. To de-duplicate files we use the md5 checksum: same checksum, same; content, so no new file needed. Technically we create the file as a; temporary file, calculate the checksum and use a directory structure; similar to git objects: if no file with the checksum as name exists,; rename, otherwise just use the existing name. For this to work we need the md5 checksum independent of the name of the; TFile. And since we rename the file anyway it really doesn't matter what; TFile thinks its name is. Implementation; --------------. This tries to be the minimal change to the current feature of; reproducible files (thanks again): We piggyback on the same flag but if; the flag also has a value instead of jut being present we use it as the; name to put in the file.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5549:222,checksum,checksum,222,https://root.cern,https://github.com/root-project/root/pull/5549,5,['checksum'],['checksum']
Security,"Rebase PR #1396. Original PR comment:; ""ROOT can't autoparse classes inside namespaces with the rootmap; system (as the loading callbacks don't correctly land where; they are supposed to land with our injected namespaces). As this; turns out to be a feature of some kind, let's preload; TMVA/TreePlayer/Graf to fix all failing tests that are related; to this feature/bug with modules enabled. This commit can be dropped if we solve on of those problems:. figure out how to fix this bug in the rootmap-based loading; without regressin in performance. replace the rootmap system with something else like attaching; all C++ modules on startup. Note that we already do something like this in normal ROOT by; including these packages into the PCH which also makes those; decls available in the normal clang lookup.""",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1697:201,inject,injected,201,https://root.cern,https://github.com/root-project/root/pull/1697,1,['inject'],['injected']
Security,"Rebased to fix conflicts, the last 3 commits are the only new ones. A type `RVecN` has been introduced which exposes the small buffer size as a template parameters, and `RVec` inherits publicly from it fixing the small buffer size to a reasonable value. For now all mathematical operators and helper functions still deal with `RVec`, simply switching everything to taking _and returning_ `RVecN` instead is a breaking change.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7502#issuecomment-869834863:109,expose,exposes,109,https://root.cern,https://github.com/root-project/root/pull/7502#issuecomment-869834863,2,['expose'],['exposes']
Security,"Recently, the overload of `RooAbsData::createHistogram` that takes; integer bin numbers instead of command arguments was deprecated because; its default behavior was inconsistent with the command argument; overload. However, that overload with bin numbers had the advantage that it; accepted the variable names in a comma-separated string, which was often; more convenient than passing the variables by RooFit object references. To preserve this convenience even when the bin integer overload is; removed, a new overload is introduced that also takes strings for; variable names but this time uses RooFit command arguments. A further improvement is made for PyROOT. There was no reason to have these overloads not in `RooAbsData`: no; functionality specific to RooDataSet is used. By moving all `createHistogram` overloads to the RooAbsDataBase class,; we make all overloads accessible to PyROOT also via instances. In the second commit, the RooFit Python tutorials were also code formatted with `black --line-length=120`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10456:875,access,accessible,875,https://root.cern,https://github.com/root-project/root/pull/10456,1,['access'],['accessible']
Security,"Redirect calls to:; * TGaxis::SetMaxDigits(); * TGaxis::GetMaxDigits(); * TGaxis::SetExponentOffset(). Let use these configurations also in TWebCanvas, which has access to; gStyle object. Small adjustment in TStyle class. Implement all these attributes in JSROOT",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12513:162,access,access,162,https://root.cern,https://github.com/root-project/root/pull/12513,1,['access'],['access']
Security,Refactor ParamHistFunc treatment to support both MC stat (BB-lite); and user-defined ShapeSys. Validated on ATLAS VHbb workspace,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9683:95,Validat,Validated,95,https://root.cern,https://github.com/root-project/root/pull/9683,1,['Validat'],['Validated']
Security,Refactored LoadCoreModules that it now prints a warning if a module isn't found. Also fixes some nullptr-derefs from the old code where we accessed pointers before checking if they're null.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1394:139,access,accessed,139,https://root.cern,https://github.com/root-project/root/pull/1394,1,['access'],['accessed']
Security,"Reformulation of https://github.com/root-project/root/pull/12480. ---. Both `Foo<double>` and `Foo<Double32_t>` have the same typeid.; Before this commit, TClass::GetClass(typeid(Foo)) would return; whatever was registered last. This is not ""stable""; it depends on which; branch is accessed first, or which TClass::GetClass call happens first, or; which library is loaded first. Make this more reporducible by consistently preferring types will less; Double32_t / Float16_t occurrences in the typename. While at this, only remove a TClass from the typeid=>TClass map if it; really is the value for the typename. ---. This PR fixes #12509",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15599:282,access,accessed,282,https://root.cern,https://github.com/root-project/root/pull/15599,1,['access'],['accessed']
Security,Remove dangerous thread-unsafe accessors of RHistConcurrentFiller,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4708:31,access,accessors,31,https://root.cern,https://github.com/root-project/root/pull/4708,1,['access'],['accessors']
Security,"Removed the false comment and moved the `unique_ptr` declaration above `TextInputHolder`, in case `TextInputHolder::~TextInputHolder()` still access it (in the future). However, I am thinking about enhancing CLI completion support of cling. Such as tab completion. Currently cling only prints completion suggestion but does not complete the input buffer for the user when only single unambiguous completion exists. Also the completion does not recognize meta command like `.x`, `.L` so it does not try to complete its arguments (paths). And the path does not expand `~` to home dir.; @Axel-Naumann , do you think it is a good idea for cling to adopt `llvm::LineEditor` ? (https://llvm.org/doxygen/classllvm_1_1LineEditor.html) ; Or building cling's own readline/libedit wrapper? ; `core/textinput/src/textinput/doc/textinput.txt` states that `textinput` is created to avoid depending on readline/libedit in year 2011.; Is it still true today 2022? cling highly depends on llvm now so it should be fine to adopt `llvm::LineEditor` (created in 2013. `textinput` predates it).; I have a prototype cling with the above enhanced completion support based on libedit but I will only create PR if cling (and all root components currently using `textinput` ) are open to such changes and dependency. I can refactor to use `llvm::LineEditor` instead. It is not too hard since the latter is also a libedit wrapper.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11274#issuecomment-1232115062:142,access,access,142,https://root.cern,https://github.com/root-project/root/pull/11274#issuecomment-1232115062,1,['access'],['access']
Security,Removes MarkovChain interfaces that are one-time used in `MCMCInterval` . Now obtain the reduced markov chain data (also as Hist ) by calling `reduce` on the RooDataSet (which can be directly accessed through `MarkovChain::GetAsConstDataSet`). . Updates all `reduce` and `reduceEng`methods to const across `RooAbsData` and other RooFit classes with overrides.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16334:192,access,accessed,192,https://root.cern,https://github.com/root-project/root/pull/16334,1,['access'],['accessed']
Security,Removing the 6.28 milestone because it should be already fixed in ROOT 6.28. This issue is only left open because the validation of the fix is still pending,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8984#issuecomment-1405276236:118,validat,validation,118,https://root.cern,https://github.com/root-project/root/issues/8984#issuecomment-1405276236,1,['validat'],['validation']
Security,"Removing the special casing leads to this:; ```; execve(""./df"", [""./df"", ""Run2012BC_DoubleMuParked_Muons.r""...], 0x7ffd482bdf58 /* 49 vars */) = 0; getxattr(""file:Run2012BC_DoubleMuParked_Muons.root"", ""eos.url.xroot"", NULL, 0) = -1 ENOENT (No such file or directory); access(""/eos/home-a/amadio/Run2012BC_DoubleMuParked_Muons.root"", F_OK) = 0; access(""/eos/home-a/amadio/Run2012BC_DoubleMuParked_Muons.root"", R_OK) = 0; openat(AT_FDCWD, ""/eos/home-a/amadio/Run2012BC_DoubleMuParked_Muons.root"", O_RDONLY) = 4; ...; ```; So that breaks the redirection, since now `file:` gets added somewhere... :disappointed:",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11644#issuecomment-1297305764:268,access,access,268,https://root.cern,https://github.com/root-project/root/pull/11644#issuecomment-1297305764,2,['access'],['access']
Security,"Reported in https://root-forum.cern.ch/t/pullhist-only-uses-upper-range/48582. When plotting a pdf in 2 separate ranges, 2 RooCurve objects are created with the same name .; When using pullHist or whatever function of RooPlot accessing the RooCurve by its name, only the last of the two curve can be retrieved. ; Since RooPlot has no way to access its list of containing objects, apart than given the name, only the RooCurve with the upper range will be used. . Example code from Forum post:; ```Python; import ROOT as r. ws = r.RooWorkspace(""workspace""); x = ws.factory(""x[-10, 10]""); x.setRange(""lo"", -10, -5); x.setRange(""hi"", 5, 10); pdf = ws.factory(""Gaussian::pdf(x, m1[0], s1[3])""); ds = pdf.generate(r.RooArgSet(x), 1000). fr = x.frame(); ds.plotOn(fr); pdf.plotOn(fr, r.RooFit.Range(""lo,hi"")); pull = fr.pullHist(). c = r.TCanvas(); fr2 = x.frame(); fr2.addPlotable(pull, ""P""); fr2.Draw(); ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9741:226,access,accessing,226,https://root.cern,https://github.com/root-project/root/issues/9741,2,['access'],"['access', 'accessing']"
Security,"Reproducer:. ```; [eguiraud@lxplus727 ~]$ source /cvmfs/sft.cern.ch/lcg/views/LCG_98python3/x86_64-centos7-gcc8-opt/setup.sh; [eguiraud@lxplus727 ~]$ python; Python 3.7.6 (default, Aug 12 2020, 09:46:40) ; [GCC 8.3.0] on linux; Type ""help"", ""copyright"", ""credits"" or ""license"" for more information.; >>> from ROOT import TMVA; >>> from ROOT import TFile; Error in <RootX11ErrorHandler>: BadAccess (attempt to access private resource denied) (XID: 418, XREQ: 18); ```. This error is not printed with other LCG releases, e.g. LCG_99.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7162:409,access,access,409,https://root.cern,https://github.com/root-project/root/issues/7162,1,['access'],['access']
Security,"Reproducer:. ```cpp; #include <Math/Vector3D.h>; #include <ROOT/RDataFrame.hxx>; #include <vector>; #include <TClass.h>. int main() {; {; TFile f(""f.root"", ""recreate"");; TTree t(""t"", ""t"");; ROOT::Math::XYZVector x(1, 2, 3);; std::vector<ROOT::Math::XYZVector> y{ROOT::Math::XYZVector(4,5,6)};; t.Branch(""x"", &x);; // original line:; // t.Branch(""y"", &y); // commenting this line ""fixes"" the problem!; // Actual trigger:; auto c = TClass::GetClass(""std::vector<ROOT::Math::XYZVector>""); // commenting this line ""fixes"" the problem!; t.Fill();; t.Write();; }. TFile f(""f.root"");; TTreeReader r(""t"", &f);; TTreeReaderValue<ROOT::Math::XYZVector> rx(r, ""x"");; r.Next();; *rx;; }; ```; yields:. ```; Error in <TTreeReaderValueBase::CreateProxy()>: The branch x contains data of type ROOT::Math::DisplacementVector3D<ROOT::Math::Cartesian3D<Double32_t>,ROOT::Math::DefaultCoordinateSystemTag>. It cannot be accessed by a TTreeReaderValue<ROOT::Math::DisplacementVector3D<ROOT::Math::Cartesian3D<double>,ROOT::Math::DefaultCoordinateSystemTag>>; Error in <TTreeReaderValue::Get()>: Value reader not properly initialized, did you call TTreeReader::Set(Next)Entry() or TTreeReader::Next()?; ```. Interestingly, if branch `""y""` is not written out, then branch `""x""` can be read correctly.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10423:901,access,accessed,901,https://root.cern,https://github.com/root-project/root/issues/10423,1,['access'],['accessed']
Security,"Restrict the GitHub token permissions only to the required ones; this way, even if the attackers will succeed in compromising your workflow, they won’t be able to do much. - Included permissions for the action. https://github.com/ossf/scorecard/blob/main/docs/checks.md#token-permissions. https://docs.github.com/en/actions/using-workflows/workflow-syntax-for-github-actions#permissions. https://docs.github.com/en/actions/using-jobs/assigning-permissions-to-jobs. [Keeping your GitHub Actions and workflows secure Part 1: Preventing pwn requests](https://securitylab.github.com/research/github-actions-preventing-pwn-requests/). Signed-off-by: naveen <172697+naveensrinivasan@users.noreply.github.com>",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10781:87,attack,attackers,87,https://root.cern,https://github.com/root-project/root/pull/10781,3,"['attack', 'secur']","['attackers', 'secure', 'securitylab']"
Security,"Revert ""Use preprocessor macro __ROOTCLING__ instead of __CINT__ in linkdef""; ; This reverts commit 915d488afd46a8e8199484ab77861bb47d8bac09.; ; The replacement prevented the recording of the data member documentation; strings for the content of the library and thus was breaking the I/O, in; particular transientness, for thoses classes, eg TTreePerfStats.; (See below for an example).; ; This seems to be due to the fact that we need/must not add __ROOTCLING__; during the parsing that will be recorded in the the pch, see in; core/dictgen/src/rootcling_impl.cxx line 4334:; ; // We do not want __ROOTCLING__ in the pch!; if (!onepcm) {; clingArgs.push_back(""-D__ROOTCLING__"");; ; So, at least for now, we need to keep using __CINT__ for the LinkDef.h; of the libraries included in the PCH.; ; See:; ; root [0] TClass::GetClass(""TTreePerfStats"")->GetStreamerInfo()->ls(); ; StreamerInfo for class: TTreePerfStats, version=7, checksum=0x1f86d003; TVirtualPerfStats BASE offset= 0 type= 0 ABC for collecting PROOF statistics; int fTreeCacheSize offset= 16 type= 3 TTreeCache buffer size; int fNleaves offset= 20 type= 3 Number of leaves in the tree; ; vs; ; root [0] TClass::GetClass(""TTreePerfStats"")->GetStreamerInfo()->ls(); ; StreamerInfo for class: TTreePerfStats, version=6, checksum=0x84181ab4; TVirtualPerfStats BASE offset= 0 type= 0 ABC for collecting PROOF statistics; int fTreeCacheSize offset= 16 type= 3; int fNleaves offset= 20 type= 3",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1978:927,checksum,checksum,927,https://root.cern,https://github.com/root-project/root/pull/1978,2,['checksum'],['checksum']
Security,"Revert ""[cmake] Update xrootd hash after a new version of the xrootd …",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11164:30,hash,hash,30,https://root.cern,https://github.com/root-project/root/pull/11164,1,['hash'],['hash']
Security,"Revert D153003 ""[clang] Fix ODR hashing of template template parameters""",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14777:32,hash,hashing,32,https://root.cern,https://github.com/root-project/root/pull/14777,1,['hash'],['hashing']
Security,"Right - without authentication I cannot see what's happening. *If* this is due to a redirect it would be a dupe of https://github.com/root-project/root/issues/8155 - if not then it's different :-) But I don't know how to tell whether it's a redirect. Do you?. If not let's get https://github.com/root-project/root/issues/8155 fixed and then we re-visit this one: either it's fixed, too, or we need to call in help from the Davix (?) folks.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8092#issuecomment-839953723:16,authenticat,authentication,16,https://root.cern,https://github.com/root-project/root/issues/8092#issuecomment-839953723,1,['authenticat'],['authentication']
Security,"Right now we only generate modulemaps for the ROOT libraries which; are exposed to the user. But we also have generate dictionary; calls for dictionaries that are not exposed to the user and should; only be private (such as TBench, TMathCoreUnitDict etc.). Right now we fail when compiling root on those dictionaries as we; don't have a modulemap for those dictionaries and we don't generate; one. This will also break tests that use the generate dictionary; call as those also don't have a modulemap now. This patch reuses the existing CMake code for generating modulemaps; and also uses it in those cases to provide a dictionary that; rootcling can use to generate a C++ module.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1091:72,expose,exposed,72,https://root.cern,https://github.com/root-project/root/pull/1091,2,['expose'],['exposed']
Security,"Right, I think I found the cause of this. [From the LLVM documentation](https://www.llvm.org/docs/CommandLine.html#exploiting-external-storage):. > Several of the LLVM libraries define static cl::opt instances that will automatically be included in any program that links with that library. This is a feature. However, sometimes it is necessary to know the value of the command line option outside of the library. In these cases the library does or should provide an external storage location that is accessible to users of the library. And, indeed, with this snippet:; ```c++; auto& opts_ = llvm::cl::getRegisteredOptions();; auto it = opts_.find(""W"");; if (it != opts_.end()) {; auto* opt = it->second;; std::cout << ""W: "" << opt->HelpStr.str() << std::endl;; }; else {; std::cout << ""W: notfound"" << std::endl;; }; ```; I got `W: Alias for --no-warn`, i.e. the option is one of those predefined ones. It's quite interesting that this does not happen in the vanilla ROOT case, if I understand the section correctly these should be always defined?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12156#issuecomment-1660585115:501,access,accessible,501,https://root.cern,https://github.com/root-project/root/issues/12156#issuecomment-1660585115,1,['access'],['accessible']
Security,"Right, this is a ""regression"" (not sure yet where) going from Clang 12 to Clang 13, ie a vanilla build of Clang 12 works and a vanilla build of Clang 13 crashes, with varying degrees of spectacular crashes. Instead of auditing all code in RooFit, I'm going to `git-bisect` LLVM/Clang instead and see if that's a problem in our code or a miscompilation.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9547#issuecomment-1010901255:218,audit,auditing,218,https://root.cern,https://github.com/root-project/root/issues/9547#issuecomment-1010901255,1,['audit'],['auditing']
Security,"Right, you need a server that is so upset about a ""useless"" `Authorization: Bearer` header that it responds with 404 :-)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8155#issuecomment-843859307:61,Authoriz,Authorization,61,https://root.cern,https://github.com/root-project/root/issues/8155#issuecomment-843859307,1,['Authoriz'],['Authorization']
Security,"RooArgSets could not be constructed from STL collections and initialiser; lists. This fixes this shortcoming. The same holds for adding multiple; elements from a collection.; Further, operator[] was overloaded to react both to index and name; access.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3976:243,access,access,243,https://root.cern,https://github.com/root-project/root/pull/3976,1,['access'],['access']
Security,"RooDataSets can be written to ASCII files. However, the output stream is not exposed to the user, i.e., the user cannot modify e.g. the precision. By exposing the stream to the user, the data set can be written to any ostream with user-defined stream modifiers. The rf102 tutorial has been updated accordingly, input/output tests have been added.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3083:77,expose,exposed,77,https://root.cern,https://github.com/root-project/root/pull/3083,1,['expose'],['exposed']
Security,"RooFit categories were using the class `RooCatType (: public TObject)`; instead of an integer to represent category states. It contains an integer; and a char[256], which can store a part of the category name.; This prevents fast batch access, and increases the overhead for data storage; and data loading. From now on, categories are represented as integers.; Every state index also has a state name attached, but instead of storing; it in each row of the dataset, the mapping from state index to; state name is now stored in the category class. **For reviewers**:; Although there is a lot of noise, that's mostly getting rid of unnecessary classes. The user-facing interfaces are stable (to be proven by the fact that all the rest of RooFit still compiles, and that tutorials run).; This is the chance to modernise/improve the `RooCategory` interface. It would be nice if you could specifically look at `RooCategory.h`, maybe in conjunction with the modernised tutorial on how they can be used in the future:; https://github.com/hageboeck/root/blob/cleanupCategories/tutorials/roofit/rf404_categories.C. More details what happened:; - Replace RooCatType by an integer.; - Replace names saved in each instance of RooCatType by a map in; RooAbsCategory that maps state numbers to strings. This saves 64 bytes; + the size of TObject for each event, and makes loading strings in each; event unnecessary.; - Convert RooVectorDataStore from saving RooCatType to integers of; category states.; - With this, also reduce the amount of unnecessary members in RooVectorDataStore. - Provide new interfaces for categories to work without RooCatType.; - Prevent clearing of shapeDirty in RooAbsCategory::evaluate(), since; derived category classes might need to recompute their shapes if one; of their input categories change.; - Add function to define multiple category states at once with; initialiser lists. - Mark legacy interfaces exposing RooCatType as deprecated in doxygen.; - Stop including RooCatType wh",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5219:236,access,access,236,https://root.cern,https://github.com/root-project/root/pull/5219,1,['access'],['access']
Security,Rootcling's stage2 mode calls gDriverConfig->fTCling__GetInterpreter() to; get the TCling's instance of the cling interpreter. This in turn might; need to initialize TCling. Our modules setup preloads a modulemap but not the overlays preventing; system modules such as libc and stl to be loaded. This criples rootcling; and whenever it #includes a header file we get an error that we included; a module from ROOT which depends on modules stl but it is not accessible; through the module map.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1395:456,access,accessible,456,https://root.cern,https://github.com/root-project/root/pull/1395,1,['access'],['accessible']
Security,"Running. ```cpp; // repro.C; void repro() {; TMVA::Experimental::RBDT<> bdt(""Bc2TauNu_BDT"", ""doesnotexist.root"");; }; ```; as. ```; root -l -b -q repro.C; ```; yields:; ```; Error in <TFile::TFile>: file /tmp/doesnotexist.root does not exist. *** Break *** segmentation violation; ```. RBDT should probably protect nullptr accesses or similar and throw an exception or return an error rather than crashing.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9316:323,access,accesses,323,https://root.cern,https://github.com/root-project/root/issues/9316,1,['access'],['accesses']
Security,SHA-256 Hash Mismatch for xrootd,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10578:8,Hash,Hash,8,https://root.cern,https://github.com/root-project/root/issues/10578,1,['Hash'],['Hash']
Security,"STReader.cpp#L3489) in clang. However fixing this would be very hard and might need to rework the source location management. That will be probably a good thing for clang since it is a bit inefficient how. We might be able to use some sort of binary tree to model them.; > ; > ; > I heard you talked this before. It looks interesting. And similar to above, I feel it will be more interesting to merge/re-use the source locations. Did you meet the problem of duplicated declarations?; > ; > ; > For example, in C++20 modules, it is common:; > ; > ; > ```; > // A.cppm; > module;; > #include <iostream>; > export module A;; > ...; > ; > // B.cppm; > module;; > #include <iostream>; > export module A;; > ...; > ; > // C.cpp; > import A;; > import B;; > ```; > ; > ; > ; > ; > ; > Did you have similar cases?. If the question is if we have multiple duplication due to textual inclusion of header files we have almost none. We have worked very very hard to modularize things bottom up, including libc, libstdc++, libxml, boost, etc. > ; > ; > > In fact the other issue might be easier to fix and less intrusive. That is, the way we load types eagerly [here](https://github.com/llvm/llvm-project/blob/5bf142749e2ee1f7d60e728bf7ac4262e1c22da0/clang/lib/Serialization/ASTReader.cpp#L3216).; > ; > ; > I am not sure how feasible it is to load types eagerly. Since many types are constructed in ASTContext locally (e.g., some types for CXXRecords). And I am sure how can we load types before deserialize the decls.; > . It feels feasible to me, since there is no need of any of these types unless they were needed. We could possibly store their hash and offset and deserialize them on demand. Pretty much the same as what @zygoloid suggested long ago with the template specializations. . > ; > I just feel it may easier to track by putting things together : ) It doesn't matter nor hurry. I can open these issue reports. It would take me some time to put sufficient information to make them actionable though.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13000#issuecomment-1617552329:2417,hash,hash,2417,https://root.cern,https://github.com/root-project/root/issues/13000#issuecomment-1617552329,1,['hash'],['hash']
Security,ScienceCA-2B.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/9c979c2b.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/62c4a178.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/a603ba9c.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/8dd53007.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/943fd5f3.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/DigiCertGridCA-1G2-Classic-2015.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/DigitalTrustSecureCAG4-runbytheissuer.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/DigiCertGridCA-1G2-Classic-2015.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/DigitalTrustSecureCAG4-runbytheissuer.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/DigiCertGridCA-1G2-Classic-2015.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/d41ec82f.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/b85d64aa.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/598b583e.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/DigiCertGridCA-1G2-Classic-2015.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/a603ba9c.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/82c2b224.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/d41ec82f.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/DigiCertGridCA-1-Classic.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/bd43b60c.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-secur,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8092#issuecomment-840048181:15235,secur,security,15235,https://root.cern,https://github.com/root-project/root/issues/8092#issuecomment-840048181,2,"['certificate', 'secur']","['certificates', 'security']"
Security,Security,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13663:0,Secur,Security,0,https://root.cern,https://github.com/root-project/root/pull/13663,1,['Secur'],['Security']
Security,See also https://chris.beams.io/posts/git-commit for the usual conventions around git commit messages. To play nice with `git --oneline` or other ways to visualize git logs it should look something like this:. ```; [DF] Use FromSpec in df106_HiggstoFourLeptons.py tutorial. Now one RDF is used instead of a number of individual ones; and users can see what a dataset specification file looks like; and how to access the metadata information.; ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12929#issuecomment-1573963050:409,access,access,409,https://root.cern,https://github.com/root-project/root/pull/12929#issuecomment-1573963050,1,['access'],['access']
Security,"See the linked PR for a hack to fix the issue. Looking at the issue in a debug build, I could find out that cppyy is the culprit. The issue is that if you import ROOT in another process (and the import happens in a previously pickled function), then cppyy is not there and some random INCREF on the cppyy module segfaults because of accessing a nullptr. It's to be discussed how to fix this properly since the implicit contracts done by pickle are not clear to me.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6765#issuecomment-730306449:333,access,accessing,333,https://root.cern,https://github.com/root-project/root/issues/6765#issuecomment-730306449,2,['access'],['accessing']
Security,"Seems to be, cling/llvm9 have problems to parse OCCI headers. ; With enabled oracle hsimple.C crashes making some message about accessing libOracle module; In any case such form is preferable for plugins",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7465:128,access,accessing,128,https://root.cern,https://github.com/root-project/root/pull/7465,1,['access'],['accessing']
Security,"Seems to be, cling/llvm9 have problems to parse OCCI headers.; If oracle plugin enabled, root crashes when running hsimple.C.; Looking in back-trace, one can identify that it crashes by accessing or rebuilding libOracle module.; Most simple way to resolve issue - remove OCCI includes from `TOracle...` header files.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7497:186,access,accessing,186,https://root.cern,https://github.com/root-project/root/issues/7497,1,['access'],['accessing']
Security,"Seems to be, you have https problem on my jsroot.gsi.de website.; Can you just open it: https://jsroot.gsi.de ?; May be, you have wrong certificate - try same URL from other machine.; I cannot exclude, that there are problems on my side.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3235#issuecomment-454218340:136,certificate,certificate,136,https://root.cern,https://github.com/root-project/root/pull/3235#issuecomment-454218340,1,['certificate'],['certificate']
Security,Separate in method DL the training data in pure training and validation which is used to ; stop the iterative optimisation process. . Similar split should also be done now in PyKeras,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2844:61,validat,validation,61,https://root.cern,https://github.com/root-project/root/pull/2844,1,['validat'],['validation']
Security,"Several of us were surprised to discover that calling `TTree::FlushBaskets()` does not actually create a new event cluster in terms of the TTree metadata -- even though it effectively creates an event cluster in terms of the physical disk layout!. There may be cases where the user has special knowledge of the file where using the internally-calculated auto-flush intervals result in poor choices; CMS's NanoAOD is one such case. However, when CMS switched to calling `FlushBaskets` explicitly and disabling `AutoFlush`, this triggered unexpected behavior in `RDataFrame` as the file did not appear to have any proper event clusters. This change causes the `FlushBaskets` method to create an explicit event cluster. As we used the old behavior in some ROOT unit tests, the prior behavior is now accessible through a flag passed to the method. Fixes: ROOT-9442",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2412:796,access,accessible,796,https://root.cern,https://github.com/root-project/root/pull/2412,1,['access'],['accessible']
Security,"Side note for the record, the original valgrind report and crash happens in the case where the `vector<EnumType>` is itself held in a vector (of `CalArray`) held into an object (`CalDet`). . I have a workaround that solves the problem for the case in the minimal reproducer which resolves around setting a read rule for the vector of enums:; ```; template <typename E>; void LoadEnumCollection(/* const */ std::vector<E> &onfile, std::vector<E> &enums); {; constexpr size_t delta = sizeof(int)/sizeof(E);; const size_t nvalues = onfile.size() / delta;; onfile.resize(nvalues);; std::swap(onfile, enums);; };; ```; ```; #pragma read sourceClass=""Event"" checksums=""[0xa2558fd6]"" targetClass=""Event"" source=""std::vector<PadFlags> mFlags"" target=""mFlags"" code=""{ LoadEnumCollection(onfile.mFlags, mFlags); }""; ```; However it does not work yet for the actual/original problem :(. (In the minimal reproducer the size of the container is double what it should be has no over-write/crash, while in the original the container ends up with the right size but with an over-write and thus crash).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/16312#issuecomment-2334773138:652,checksum,checksums,652,https://root.cern,https://github.com/root-project/root/issues/16312#issuecomment-2334773138,1,['checksum'],['checksums']
Security,Similar functionality can be accessed through the RRecordField (untyped records) and RVectorField::CreateUntyped() (untyped collections). Fixes #14642,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16585:29,access,accessed,29,https://root.cern,https://github.com/root-project/root/pull/16585,1,['access'],['accessed']
Security,"Since 79a669bb1cd0ccd8bcaeb6c8f6b09c5ced761ac7, the mechanism that cleans up other thread's `gDirectory` when a file is deleted by the current thread is **disabled** leading to many problems, including the issues seen in https://github.com/cms-sw/cmssw/issues/40290 (`TContext` accessing/using a delete objects).",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11907:278,access,accessing,278,https://root.cern,https://github.com/root-project/root/issues/11907,1,['access'],['accessing']
Security,"Since ROOT 6.22 is the second latest ROOT version that CMS uses in production, I need to make it compile again in order to do some validations. This means some PyROOT fixes need to be backported to make it compile again with newer Python versions:. * https://github.com/root-project/root/pull/10734; * https://github.com/root-project/root/pull/6994; * https://github.com/root-project/root/pull/7022; * https://github.com/root-project/root/pull/7961; * https://github.com/root-project/root/pull/8036; * https://github.com/root-project/root/pull/8257; * https://github.com/root-project/root/pull/10047",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14294:131,validat,validations,131,https://root.cern,https://github.com/root-project/root/pull/14294,1,['validat'],['validations']
Security,"Since commit 9030460858 (""[ntuple] add xxhash3 checksum handling to anchor""), we require xxHash 0.8 while Ubuntu 20.04 only has version 0.7.3 in its package repositories.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14338:47,checksum,checksum,47,https://root.cern,https://github.com/root-project/root/pull/14338,1,['checksum'],['checksum']
Security,"Since i understand that my case is special, since we are doing redirections to local ip addresses via haproxy. i have alternative to use `root://` to access same file, it think we can close it.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14429#issuecomment-1914169980:150,access,access,150,https://root.cern,https://github.com/root-project/root/issues/14429#issuecomment-1914169980,1,['access'],['access']
Security,"Since merging implies the intention of creating a single file at the end, I recommend disabling the mechanism to change files by setting the max `TTree` size to the maximum possible size. This mechanism cannot be controlled from within `TBufferMerger` since it doesn't have access to the objects that are being merged, so I think that it will be difficult to find a solution that doesn't involve changing `TTree` as well (i.e. like adding a `ChangeFile` method to `TBufferMerger` and calling that from `TTree::ChangeFile` if necessary. That shouldn't change the file the `TTree` is associated with, but the output file used by `TBufferMerger` to have the expected effect). Note, however, that as a complication you may have multiple threads writing to different trees each attached to a different `TBufferMergerFile` switching files at different times as they reach their size limit and that may trigger several small files to appear in the end if they reach their limit around the same time and try to change files `nthreads` number of times... Another complication is what happens to other kinds of objects (like histograms), as they may now be split among several output files rather than being in one merged output file. Disabling the mechanism sounds like the better option to me.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6523#issuecomment-704279031:274,access,access,274,https://root.cern,https://github.com/root-project/root/issues/6523#issuecomment-704279031,1,['access'],['access']
Security,Since root-project/root@10a0dec we do not expose flags from the build system; directly to rootcling. We use that opportunity to simplify the setup while; preparing rootcling for the new argument parser.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4269:42,expose,expose,42,https://root.cern,https://github.com/root-project/root/pull/4269,1,['expose'],['expose']
Security,"Since the distributed RDataFrame feature is experimental let's give it access to more modern features of the Python language. 3.7 seems a good compromise between maturity (released in October 2018) and features (typing, dataclasses). **NOTE**:; I'm uncertain about whether giving a message at configure time that DistRDF is active in the build process. I have put a simple message for now, could be changed or removed. Let me know your opinions",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9060:71,access,access,71,https://root.cern,https://github.com/root-project/root/pull/9060,1,['access'],['access']
Security,"Since the errors are true and valid, shouldn't we keep them? Or make them more clear as in `you are trying to access a system-protected file"" or something similar?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14865#issuecomment-1973061065:110,access,access,110,https://root.cern,https://github.com/root-project/root/pull/14865#issuecomment-1973061065,2,['access'],['access']
Security,"Since the upgrade to LLVM 13, at least two tests are failing because of broken interactions with multiple interpreters:; * `CodeUnloading/AtExit.C` does not find the symbol `gChild`.; * `MultipleInterpreters/MultipleInterpreters.C` cannot find the symbol `_ZN5cling7runtime6gClingE` / `cling::runtime::gCling` during `ChildInterp.echo()` (the first usage to construct `cling::Interpreter ChildInterp(*gCling, 1, argV);` seems fine). Based on this, one might theorize that the child interpreter doesn't have access to symbols declared in its parent (not sure how this worked before).",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12455:507,access,access,507,https://root.cern,https://github.com/root-project/root/issues/12455,1,['access'],['access']
Security,"Small update. When working with the cross validation manual, I came across these inconveniences.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1694:42,validat,validation,42,https://root.cern,https://github.com/root-project/root/pull/1694,1,['validat'],['validation']
Security,"So I finally managed to get back to this and try a few things and as a result in my tests I managed to go from 82 MB of overhead to 62 MB. See https://github.com/root-project/root/pull/13641 for the actual code. While there is still a few things to cleanup, I think what I have is fairly general and quite self contained change, so I would appreciate feedback and if people like it, instructions on how to proceed to make sure this ends up upstream. The solution is based on a newly introduced `PagedVector<T>` which allows registering callbacks which get invoked whenever the associated range is accessed the first time. At such point, the range is actually allocated and each element of the range is passed to the callback. Initially I developed a mechanism to be general enough to do complex initialisations of the elements, however I later realised this is not actually needed. In order to optimise the issue with the large vectors `TypesLoaded` and `DeclsLoaded` one only needs to have something which does the default construction of their elements for ranges which are small enough to avoid to large upfront allocations. The code which is currently there in root / clang is already smart enough to lazily initialise only the elements which are actually needed, so the whole issue is to find a good tradeoff between number of ranges and sparse enough ones. A few caveats:. - `PagedVector` is a bad name, I agree. Suggestions are welcome.; - At the moment the implementation allows generic callbacks for ranges, however as I said we only need default initialisation. Removing such flexibility should buy another 1 MB from my test.; - In case `DeclID*` and `QualType` can default to all 0, one could probably achieve the same result in a more elegant way using calloc / realloc.; - There are probably other vectors which can be optimised in the same way, in particular IdentifiersLoaded as already mentioned by @vgvassilev. Comments?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13000#issuecomment-1715921216:597,access,accessed,597,https://root.cern,https://github.com/root-project/root/issues/13000#issuecomment-1715921216,2,['access'],['accessed']
Security,"So far, the `ParamHistFunc` BatchMode implementation was still; sub-uptimal because it used the non-vectorized interface of the; RooDataHist. Using the new `RooAbsBinning::binNumbers()` function too look up; multiple bin indices at once, the implementaiton can be improved and; sped. In the three-dimensional many-bin case, the new implementation is a bit; more than three times faster than the old one. This should benefit; HistFactory fits with many bins. A new `testParamHistFunc` unit test was also introduced to validate the; results of a ParamHistFunc both with and without the batch mode,; comparing to manually computed reference results.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11170:517,validat,validate,517,https://root.cern,https://github.com/root-project/root/pull/11170,1,['validat'],['validate']
Security,"So here are the changes that I needed to make from the comments of the last pull request and some other changes:; 1) I've added the name for a enum constant because I realised when declaring kMyConstant = 42 that I didn't save the name.; 2) I've added some checks in the TCling to see if the TEnum and TEnumConstants are actually created, because when I run the test:; // MyEnumComment; enum EMyEnum {; kMyEnumConstant = 42 // enumConstantComment; };. int assertTEnum(); {. ```; if (!(TEnum*)gROOT->GetListOfEnums()->FindObject(""EMyEnum"")) {; Error (""TEnum"", ""Constructor of TEnum failure."");; return -1;; ```. }; It does return and Error. I tried that on the root[0] promp as well and the address of GetListOfEnum is not NULL(because the HashTable is created), but the address of FindObject is 0x0. ; Now I don't get the Errors of TEnum and TEnumConstant are not created..I wanted to check whether they are added to the fEnums and fGlobals, but Add() for TCollection is a void function. My best guess is that they are not added to the lists, maybe you can see why...",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2:739,Hash,HashTable,739,https://root.cern,https://github.com/root-project/root/pull/2,1,['Hash'],['HashTable']
Security,"So here's the main snippet:; ```cpp; root [0] auto c= ROOT::Experimental::RNTupleImporter::Create(""./0A0C246F-D01B-6F4D-85E6-3A75C27C5197.root"", ""Events"", ""./output1.root"").Unwrap(); Warning in <TClass::Init>: no dictionary for class edm::Hash<1> is available; Warning in <TClass::Init>: no dictionary for class edm::ProcessHistory is available; Warning in <TClass::Init>: no dictionary for class edm::ProcessConfiguration is available; Warning in <TClass::Init>: no dictionary for class edm::ParameterSetBlob is available; Warning in <TClass::Init>: no dictionary for class pair<edm::Hash<1>,edm::ParameterSetBlob> is available; (std::unique_ptr<ROOT::Experimental::RNTupleImporter, std::default_delete<ROOT::Experimental::RNTupleImporter> > &) std::unique_ptr -> 0x56027a07a9f0; root [1] auto options = c->GetWriteOptions();; root [2] options.SetCompression(0);; root [3] c->SetWriteOptions(options);; root [4] c->SetMaxEntries(200000);; root [5] c->Import().ThrowOnError();; ```. with cell `[2]` having the following variations:. - `output1.root` - `options.SetCompression(0);`; - `output2.root` - nothing; - `output3.root` - `options.SetCompression(ROOT::RCompressionSetting::EAlgorithm::kUndefined, 0);`; - `output4.root` - `options.SetCompression(ROOT::RCompressionSetting::EAlgorithm::kZLIB, 0);`. and here's the output result:; ```bash; Apptainer> ls -al output*; -rw-r--r-- 1 jiling atlas-af 2999999997 Apr 6 11:46 output1.root; -rw-r--r-- 1 jiling atlas-af 392899138 Apr 6 11:48 output2.root; -rw-r--r-- 1 jiling atlas-af 1336596889 Apr 6 11:56 output3.root; -rw-r--r-- 1 jiling atlas-af 1336152687 Apr 6 12:00 output4.root; ```. so it looks like the first one is the real uncompressed?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12606#issuecomment-1499362551:239,Hash,Hash,239,https://root.cern,https://github.com/root-project/root/issues/12606#issuecomment-1499362551,2,['Hash'],['Hash']
Security,"So unfortunately, I have no way to check with the nightly (apart if I would change/redevelop a new program). The reason is that the workspace used in my example includes RooTwoSidedCBShape, which is unknown to root, so one needs to switch on first a tool that allows to access to RooTwoSidedCBShape. Such tools are not available with recent root versions.; So I just trust that it works but can't check. If so, maybe you may put as ""resolved"". With root 6.29.01, this gives :. [escalier@lxplus745 /afs/cern.ch/work/e/escalier/public/ForOthers/ProblemMemory] root -b -q ""Minimum.C+()"" |tee log_6.29.01; ------------------------------------------------------------------; | Welcome to ROOT 6.29/01 https://root.cern |; | (c) 1995-2022, The ROOT Team; conception: R. Brun, F. Rademakers |; | Built for linuxx8664gcc on Jan 27 2023, 00:37:00 |; | From heads/master@v6-29-01-357-g4ef94f4 |; | With g++ (GCC) 11.3.0 |; | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |; ------------------------------------------------------------------. Processing Minimum.C+()...; Info in <TUnixSystem::ACLiC>: creating shared library /afs/cern.ch/work/e/escalier/public/ForOthers/ProblemMemory/./Minimum_C.so. Survey Memory, beginning of program; res memory=481.965 Mbytes; vir memory=760.32 Mbytes; Warning in <TClass::Init>: no dictionary for class RooTwoSidedCBShape is available; Survey Memory, after open file; Error in <TBufferFile::ReadObject>: trying to read an emulated class (RooTwoSidedCBShape) to store in a compiled pointer (TObject); Error in <TBufferFile::ReadObject>: trying to read an emulated class (RooTwoSidedCBShape) to store in a compiled pointer (TObject); Error in <TBufferFile::ReadObject>: trying to read an emulated class (RooTwoSidedCBShape) to store in a compiled pointer (TObject); Error in <TBufferFile::ReadObject>: trying to read an emulated class (RooTwoSidedCBShape) to store in a compiled pointer (TObject); Error in <TBufferFile::ReadObject>: trying to read an emula",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8984#issuecomment-1406408841:270,access,access,270,https://root.cern,https://github.com/root-project/root/issues/8984#issuecomment-1406408841,1,['access'],['access']
Security,Some builds might not be able to access files at root://eospublic.cern.ch,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4956:33,access,access,33,https://root.cern,https://github.com/root-project/root/pull/4956,1,['access'],['access']
Security,"Some garbage access warnings, null dereferencing, and buffer bounding warnings by Clang:; (ROOT master of today, with xrootd off); ```; /opt/root_src/build/rmkdepend/cppsetup.c:150:4: warning: Call to function 'sprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'sprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11 in /opt/root_src/build/rmkdepend/cppsetup.c:150; /opt/root_src/build/rmkdepend/cppsetup.c:180:4: warning: Call to function 'strncpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'strncpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'strncpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'strncpy_s' in case of C11 in /opt/root_src/build/rmkdepend/cppsetup.c:180; /opt/root_src/build/rmkdepend/include.c:158:4: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]; 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments s",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7410:13,access,access,13,https://root.cern,https://github.com/root-project/root/issues/7410,5,"['access', 'secur']","['access', 'security']"
Security,"Some libraries are layered can depend on other libraries on a private paths. That is, libA can depend on libB which is neither on the LD_LIBRARY_PATH nor on a known system path. The posix linker injects ""variables"" such as @rpath which is expanded at link time to resolve the libraries on a relative path. Prior to this patch, cling's Dyld-based symbol resolution could not trace down such cases causing failures in symbol resolution when a symbol is only defined in libB (a private library). This patch implements the basic posix linker substitutions allowing cling's Dyld-based symbol resolution implementation to follow more closely the linker rules. ## Performance. |platform|test|master|PRv1|PRv2| mem master|mem PRv2|; |:--------|:---|:---------:|:-----------:|:-----------:|:-----------:|:-----------:|; |ubu20|roottest-python-pythonizations|6.5|6.55|6.65|342076|347168|; |ubu20|roottest-cling|112.8|114.53|181.26|411048|416036|; |ubu20|roottest-python|148.5|136.26|144.72|394292|397120|; |ubu20|roottest-root-hist|16.78|17.35|15.45|465156|235084|; |ubu20|roottest-root-math|28.28|27.89|27.40|424072|371256|; |ubu20|roottest-root-tree|462.84|510.59|465.79|796512|797992|; |ubu20|roottest-root-treeformula|117.53|129.16|114.44|261184|260168|; |ubu20|root-io-stdarray|66.90|67.89|65.71|263424|255120|; |ubu20|roottest-root-treeformula|117.55|129.10|; |osx 10.15|roottest-python-pythonizations|17.25|16.06|; |osx 10.15|roottest-cling|346.06|343.46|; |osx 10.15|roottest-root-hist|36.06|36.22|; |osx 10.15|roottest-root-math|49.78|52.42|; |osx 10.15|root-io-stdarray|119.32|118.73|. That PR should reduce the number of `stat` calls improving #7774. Kudos Alexander Penev (@alexander-penev).",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6969:195,inject,injects,195,https://root.cern,https://github.com/root-project/root/pull/6969,1,['inject'],['injects']
Security,"Some platforms have problems (rightfully so!) in finding symbols; from libCling.so, which is dlopened with RTLD_LOCAL. libCling should; me made available to RuntimeDyld, but priority should be given to; the main binary, i.e. the ""traditional"" symbol resolution. This is; achieved by injecting libCling as a symbol source into the; DynLibManager *after* the initialization of cling::Interpreter. This fixes e.g. ROOT-10499, by resolving to the process's `cout`,; not the ""copy"" in libCling.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6108:283,inject,injecting,283,https://root.cern,https://github.com/root-project/root/pull/6108,1,['inject'],['injecting']
Security,"Some platforms respect RTLD_LOCAL: symbols from libraries loaded with; this flag cannot be resolved by dlsym through the process. They should; instead be exposed to the JIT by calling ExposeHiddenSharedLibrarySymbols().; But then the JIT needs to actually make use of these libraries from; symbol resolution. That is done by setting SearchOrder to SO_LoadedLast, as; nicely documented in that flag. Fixes ROOT not finding libCling symbols on some platforms, e.g. CentOS7,; Ubuntu 16 and 18.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6126:154,expose,exposed,154,https://root.cern,https://github.com/root-project/root/pull/6126,2,"['Expose', 'expose']","['ExposeHiddenSharedLibrarySymbols', 'exposed']"
Security,"Some updates:. > Unfortunately I do not have access to such a system but if you can build with `-DLLVM_BUILD_TYPE=Debug` the function `isSharedLibrary` [here](https://github.com/root-project/root/blob/d75ee349cb75d743d41e99cca97d5ef230f9207e/interpreter/cling/lib/Interpreter/DynamicLibraryManager.cpp#L248) should return `true` for `branchoverwrite`. > ; > If that is the case then there might be a problem with the Elf representation (or ACLiC is missing some compiler/linker flag). ```1: libFullPath = {static npos = 18446744073709551615, Data = 0x5555579a44b0 ""/build_root/roottest/root/dataframe/test_snapshot_manytasks"", Length = 59}; (gdb) p Error; $6 = {_M_value = 0, _M_cat = 0x7ffff7917180 <(anonymous namespace)::system_category_instance>}; (gdb) list; 260	 file_magic Magic;; 261	 const std::error_code Error = identify_magic(libFullPath, Magic);; 262	 if (exists); 263	 *exists = !Error;; 264	; 265	 return !Error &&; 266	#ifdef __APPLE__; 267	 (Magic == file_magic::macho_fixed_virtual_memory_shared_lib; 268	 || Magic == file_magic::macho_dynamically_linked_shared_lib; 269	 || Magic == file_magic::macho_dynamically_linked_shared_lib_stub; (gdb) p Magic; $7 = {V = llvm::file_magic::elf_shared_object}; ```. There is nothing wrong with the implementation per se. For some reason the system compiles the `test_snapshot_manytasks` executable with a file magic which corresponds to a shared object. Although, bash correctly recognizes the right kind:; ```file $ROOTSYS/lib/libCore.so; /build_root/lib/libCore.so: ELF 64-bit LSB shared object, x86-64, version 1 (GNU/Linux), dynamically linked, BuildID[sha1]=e29464343a374abe0b0e4149350d4a57f8383b3a, with debug_info, not stripped; [root@39b36d564292 dataframe]# file -i /build_root/roottest/root/dataframe/test_snapshot_manytasks; /build_root/roottest/root/dataframe/test_snapshot_manytasks: application/x-pie-executable; charset=binary```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7366#issuecomment-863174792:45,access,access,45,https://root.cern,https://github.com/root-project/root/issues/7366#issuecomment-863174792,1,['access'],['access']
Security,Something funny is happening with the payload injected in cling. All but one test pass. I am debugging.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3033#issuecomment-441320544:46,inject,injected,46,https://root.cern,https://github.com/root-project/root/pull/3033#issuecomment-441320544,1,['inject'],['injected']
Security,Spent Left Speed; 0 0 0 0 0 0 0 0 --:--:-- --:--:-- --:--:-- 0* About to connect() to webdav.lcg.triumf.ca port 2880 (#0); * Trying 2607:f8f0:660:3::40...; * Connected to webdav.lcg.triumf.ca (2607:f8f0:660:3::40) port 2880 (#0); * Initializing NSS with certpath: sql:/etc/pki/nssdb; * failed to load '/etc/grid-security/certificates/7022e3c4.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/69105f4f.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/CERN-Root-2.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/69105f4f.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/DigiCertGridRootCA-Root.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/DigiCertAssuredIDRootCA-Root.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/edca0fc0.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/DigiCertAssuredIDRootCA-Root.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/CESNET-CA-Root.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/CNRS2-Projets.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/DigiCertAssuredIDRootCA-Root.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/CESNET-CA-Root.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/DigiCertAssuredIDRootCA-Root.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/727146a8.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/b1159c4c.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/b1159c4c.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/727146a8.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-secur,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8092#issuecomment-840048181:1449,secur,security,1449,https://root.cern,https://github.com/root-project/root/issues/8092#issuecomment-840048181,2,"['certificate', 'secur']","['certificates', 'security']"
Security,"Splitting `G__Core` is disallowed by modules: interdependent PCMs cannot be built, we would have to build only one. But that build would need all headers and `LinkDef.h` files exposed to have I/O annotations - which brings us back to a non-split `G__Core`. New PR without splitting `G__Core` is coming up...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3371#issuecomment-461469874:176,expose,exposed,176,https://root.cern,https://github.com/root-project/root/pull/3371#issuecomment-461469874,1,['expose'],['exposed']
Security,"Spun off from [discussion](https://github.com/root-project/root/pull/5934/commits/6f3ec9372b011536fc314eef0835508a07d2513b#r448782416) on #5934, this PR lets us wrap move-only types in `RResult`. We add a new method `Unwrap()` to obtain the inner type by value. The caller takes ownership of the inner type, and for move-only types the `RResult` is left in an unspecified state. I decided against adding safeguards against double-moves for now because it would result in false-positive messages for types without move specializations (e.g. `return std::move(42)`). Instead, we should make clear through documentation and examples that `Unwrap()` consumes the `RResult`. . The existing const-ref access method `Get()` has been renamed `Inspect()` following Mozilla's `RResult`-like type [here](https://searchfox.org/mozilla-central/source/mfbt/Result.h#90-91). `Get()` has caused some confusion in code review and we've been looking for alternative names. . Example: ; ```cpp; auto TestMoveOnly = []() -> RResult<std::unique_ptr<int>> {; return std::make_unique<int>(1);; };; auto res = TestMoveOnly();. // Using Inspect to make a copy won't compile; // auto copy_inner = res.Inspect();. // This will compile, but we only have read-only access; const auto& copy_inner = res.Inspect();; EXPECT_EQ(1, *copy_inner);. // Instead, Unwrap is required to get ownership of the move-only type; auto move_inner = res.Unwrap();; EXPECT_EQ(1, *move_inner);; move_inner.reset();; move_inner = std::make_unique<int>(2);; EXPECT_EQ(2, *move_inner);; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5985:695,access,access,695,https://root.cern,https://github.com/root-project/root/pull/5985,2,['access'],['access']
Security,"Starting from the `debian:sid` Docker image, create the following environment:; ```; apt update && apt dist-upgrade; apt install cmake gcc g++ git libxrootd-client-dev ninja-build python3; ```; Then clone `root.git` and configure + build with; ```; cmake -G Ninja -DCMAKE_BUILD_TYPE=Release -Dx11=OFF ../root/; ninja; ```; Afterwards try executing `./bin/root.exe tutorials/dataframe/df103_NanoAODHiggsAnalysis.C`. It will hang and setting `XRD_LOGLEVEL=Debug` reveals:; ```; [2023-02-06 12:00:28.136048 +0000][Debug ][XRootDTransport ] [eospublic.cern.ch:1094.0] Sending authentication data; [2023-02-06 12:00:28.137346 +0000][Debug ][XRootDTransport ] [eospublic.cern.ch:1094.0] Trying to authenticate using krb5; [2023-02-06 12:00:28.137406 +0000][Debug ][XRootDTransport ] [eospublic.cern.ch:1094.0] Cannot get credentials for protocol krb5: Seckrb5: No or invalid credentials; No credentials cache found (p=xrootd/eospublic.cern.ch@CERN.CH).; [2023-02-06 12:00:28.137968 +0000][Debug ][XRootDTransport ] [eospublic.cern.ch:1094.0] Trying to authenticate using gsi; [2023-02-06 12:00:32.761097 +0000][Debug ][XRootDTransport ] [eospublic.cern.ch:1094.0] Cannot get credentials for protocol gsi: Secgsi: ErrParseBuffer: unknown CA: cannot verify server certificate: kXGS_init; ```. Instead, installing the `xrootd-client` package and running; ```; xrdcp root://eospublic.cern.ch//eos/root-eos/cms_opendata_2012_nanoaod_skimmed/SMHiggsToZZTo4L.root .; ```; works just fine - the `Debug` log shows that it proceeds with `Trying to authenticate using uni` (after `Cannot get credentials for protocol gsi` was also signaled kind of immediately).",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12231:572,authenticat,authentication,572,https://root.cern,https://github.com/root-project/root/issues/12231,5,"['authenticat', 'certificate']","['authenticate', 'authentication', 'certificate']"
Security,"Still needs a check whether injecting `RTLD_DEFAULT` is needed at all, or whether `ExposeHiddenSharedLibrarySymbols` and calls can be removed completely.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6108#issuecomment-667885089:28,inject,injecting,28,https://root.cern,https://github.com/root-project/root/pull/6108#issuecomment-667885089,2,"['Expose', 'inject']","['ExposeHiddenSharedLibrarySymbols', 'injecting']"
Security,"Still no luck, even when adding ; ```; set INCLUDE=""C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\Llvm\lib\clang\12.0.0\include"";%INCLUDE%; ```; I still have the following error:; ```; C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:; Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory; ```; I'll investigate more. And BTW, I see that:; > `set _LINK_= /InferASanLibs /incremental:no /debug`. and then; > `cmake --build . --config Release`. So you compile in release mode and link in debug mode? Really?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9445#issuecomment-1021315592:348,sanitiz,sanitizer,348,https://root.cern,https://github.com/root-project/root/issues/9445#issuecomment-1021315592,1,['sanitiz'],['sanitizer']
Security,Still there; with debug information I get some more details where the memory is accessed:; ```; #0 0x7f7e52abdcb2 in TTree::GetNotify() const /home/jhahnfel/ROOT/src/tree/tree/inc/TTree.h:499:55; #1 0x7f7e52abdcb2 in void TNotifyLinkBase::RemoveLink<TTree>(TTree&) /home/jhahnfel/ROOT/src/core/base/inc/TNotifyLink.h:72:20; #2 0x7f7e52abdcb2 in TTreeReader::~TTreeReader() /home/jhahnfel/ROOT/src/tree/treeplayer/src/TTreeReader.cxx:252:15; #3 0x382084 in BulkApiVariableTest_stdRead_Test::TestBody() /home/jhahnfel/ROOT/src/tree/tree/test/BulkApiVarLength.cxx:135:1; ```. Would be good if somebody could take a look here...,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10096#issuecomment-1214891002:80,access,accessed,80,https://root.cern,https://github.com/root-project/root/issues/10096#issuecomment-1214891002,1,['access'],['accessed']
Security,Store internal RDataFrame in distributed mode and expose GetColumnNames,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11816:50,expose,expose,50,https://root.cern,https://github.com/root-project/root/pull/11816,1,['expose'],['expose']
Security,Stratified Splitting Functionality Added in Cross Validation in TMVA,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2557:50,Validat,Validation,50,https://root.cern,https://github.com/root-project/root/pull/2557,1,['Validat'],['Validation']
Security,"Such as discussed on mattermost: I've switched to a plain cmake option so that the flag does not get exposed as feature by `root-config`. However, this has the downside that (without additional boilerplate logic) the asserts are always on for `CMAKE_BUILD_TYPE=Debug` and `dev=ON`, no matter what you specify for `asserts`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6560#issuecomment-704331072:101,expose,exposed,101,https://root.cern,https://github.com/root-project/root/pull/6560#issuecomment-704331072,1,['expose'],['exposed']
Security,"Sure, I'm not saying it's impossible, just that the potentially obvious approach to pass the hash as `base_ref` doesn't work. A `git reset ${ github.sha }` might work, to be tested how it interacts with the rest of the system.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14061#issuecomment-1813958485:93,hash,hash,93,https://root.cern,https://github.com/root-project/root/issues/14061#issuecomment-1813958485,1,['hash'],['hash']
Security,"Sure, they can be squashed. I myself don't have merging authorization, though.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8530#issuecomment-868966125:56,authoriz,authorization,56,https://root.cern,https://github.com/root-project/root/pull/8530#issuecomment-868966125,1,['authoriz'],['authorization']
Security,Switch on hash-assisted finding workspaces with 50 or more datasets. Note on the arbitrary 200 elements:; The list will double its size of the initial 200 elements are not enough.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5740:10,hash,hash-assisted,10,https://root.cern,https://github.com/root-project/root/pull/5740,1,['hash'],['hash-assisted']
Security,"Synopsis of the original error report:. Description. I had thought that our `art v3_09_01` based art passed all of our validation tests but I missed a single histogram that failed. I discovered it yesterday. I traced it back to the following. We have a file. `/pnfs/mu2e/scratch/users/brownd/workflow/default/outstage/44170899/00/00000/dig.brownd.CeEndpointMix.MDC2020b.001201_00000000.art`. It was written by `art v3_06_03`. One of the data products is of type `std::vector<StepPointMC>`, where `StepPointMC` is a class in our code base. The class contains 4 data members of type `CLHEP::Hep3Vector`:. https://github.com/Mu2e/Offline/blob/da4772bcb99f7b42bd401c3b15d56a211124553a/MCDataProducts/inc/StepPointMC.hh#L209. The `art::InputTag` is `""compressDigiMCs:virtualdetector""` . When I write a small job using `art v3_09_01` to read this data product and print out it's data members, all 4 of the `Hep3Vector` are `(0,0,0)`. When I run the same job using `art v3_06_03` all of the printout is correct. Remember that between `art v3_06_03` and `art v3_09_01` there was a schema change in `CLHEP::Hep3Vector`. You already fixed one bug related to that. I will prepare a stripped down example and add it to this issue. To reproduce. Unwind the following tar file on a machine that sees `/pnfs/mu2e and /cvmfs/mu2e.opensciencegrid.org`; ```; tar xzf /mu2e/app/users/kutschke/Bugs/Hep3Vector/artv3_09.tar.gz ; cd artv3_09; source /cvmfs/mu2e.opensciencegrid.org/setupmu2e-art.sh; source setup.sh; scons -j 8; mu2e -c bug.fcl; ```; This prints most of the content of the the `StepPointMCs`. The bug is that the 4 `Hep3Vectors` are **all zero**. It's OK that the non-ionizing and visual energy depositions are zero; this data product captures steps in a virtual detector embedded inside a volume with a vacuum of `10^{-4} torr`. This uses the deprecated Mu2e ""Satellite release"" system to build on top of the Offline tag v10_00_00 on /cvmfs/mu2e.opensciencegrid.org/Offline/v10_00_00/SLF7/prof/Offline .",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8428#issuecomment-875583779:119,validat,validation,119,https://root.cern,https://github.com/root-project/root/issues/8428#issuecomment-875583779,1,['validat'],['validation']
Security,"Systems with older versions of glibc do not have modern functions to get cryptographically secure random numbers. Introduce a fallback to using `/dev/urandom` in such cases. A notable example is the conda-build environment which is based on Centos7 where the glibc version is 2.17. This change is *required* to fix the conda build, so it must be backported to 6.32",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15417:91,secur,secure,91,https://root.cern,https://github.com/root-project/root/pull/15417,1,['secur'],['secure']
Security,TBB exposed in public includes of Thread library,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8022:4,expose,exposed,4,https://root.cern,https://github.com/root-project/root/issues/8022,1,['expose'],['exposed']
Security,"TFile::Open(), HTTP basic authentication and DaviX",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9072:26,authenticat,authentication,26,https://root.cern,https://github.com/root-project/root/issues/9072,1,['authenticat'],['authentication']
Security,"TFormula indirectly accesses gROOT->fGlobalFunctions. Therefore to safely call different TFormula on different threads, access to the global function list must be serialized.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/31:20,access,accesses,20,https://root.cern,https://github.com/root-project/root/pull/31,2,['access'],"['access', 'accesses']"
Security,TH; * failed to load '/etc/grid-security/certificates/MARGI.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/LIPCA.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/LIPCA.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/LIPCA.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/e13e0fcf.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/BYGCA.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/LIPCA.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/064e0aa9.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/be87b272.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/BYGCA.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/be87b272.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/e21dc0c0.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/064e0aa9.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/036b3363.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/BYGCA.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/036b3363.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/126f0acf.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/HPCI.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/126f0acf.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/1f58a078.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/ANSPGrid.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/1f58a078.signing_policy' from CURLOPT_CAPA,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8092#issuecomment-840048181:49203,secur,security,49203,https://root.cern,https://github.com/root-project/root/issues/8092#issuecomment-840048181,2,"['certificate', 'secur']","['certificates', 'security']"
Security,TH; * failed to load '/etc/grid-security/certificates/PK-Grid-2007.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/1db3b27f.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/d33760ec.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/TERENA-eScience-SSL-CA-3.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/KEK.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/TERENA-eScience-SSL-CA-3.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/633dc6a4.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/TERENA-eScience-SSL-CA-3.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/QuoVadis-Grid-ICA-G2.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/58b08cb5.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/TERENA-eScience-SSL-CA-3.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/f5ead794.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/e523eeaa.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/PK-Grid-2007.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/e523eeaa.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/38f7145f.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/PK-Grid-2007.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/38f7145f.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/617ff41b.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/67707166.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/67707166.si,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8092#issuecomment-840048181:25276,secur,security,25276,https://root.cern,https://github.com/root-project/root/issues/8092#issuecomment-840048181,2,"['certificate', 'secur']","['certificates', 'security']"
Security,TIv3.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/ead666c8.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/77637f58.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/SDG-G2.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/SDG-G2.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/c1e29225.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/c1e29225.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/2f2e0e6e.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/2f2e0e6e.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/NorduGrid-2015.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/NorduGrid-2015.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/NorduGrid-2015.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/a3e2dbca.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/NIKHEF.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/a3e2dbca.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/f8598272.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/16054abd.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/2418a3f3.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/16054abd.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/a2dbd20c.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/f8598272.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/7ca9677b.namespaces' from CURLOPT_CAPAT,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8092#issuecomment-840048181:59357,secur,security,59357,https://root.cern,https://github.com/root-project/root/issues/8092#issuecomment-840048181,2,"['certificate', 'secur']","['certificates', 'security']"
Security,"TKDTree&lt;int, float&gt; const*)' from file 'math/mathcore/CMakeFiles/G__MathCore.dir/G__MathCore.cxx.o' to global weak symbol 'typeinfo for TKDTree&lt;int, float&gt;' from file 'math/mathcore/CMakeFiles/MathCore.dir/src/TKDTree.cxx.o' means the weak symbol cannot be overridden at runtime. This was likely caused by different translation units being compiled with different visibility settings. ; - [2023-05-05T13:09:43.221Z] ld: warning: direct access in function 'ROOT::GenerateInitInstanceLocal(TKDTree&lt;int, float&gt; const*)' from file 'math/mathcore/CMakeFiles/G__MathCore.dir/G__MathCore.cxx.o' to global weak symbol 'typeinfo for TKDTree&lt;int, float&gt;' from file 'math/mathcore/CMakeFiles/MathCore.dir/src/TKDTree.cxx.o' means the weak symbol cannot be overridden at runtime. This was likely caused by different translation units being compiled with different visibility settings. ; - [2023-05-05T13:09:52.576Z] ld: warning: direct access in function 'ROOT::GenerateInitInstanceLocal(TMatrixTBase&lt;float&gt; const*)' from file 'math/matrix/CMakeFiles/G__Matrix.dir/G__Matrix.cxx.o' to global weak symbol 'typeinfo for TMatrixTBase&lt;float&gt;' from file 'math/matrix/CMakeFiles/Matrix.dir/src/TMatrixTBase.cxx.o' means the weak symbol cannot be overridden at runtime. This was likely caused by different translation units being compiled with different visibility settings. ; - [2023-05-05T13:09:52.576Z] ld: warning: direct access in function 'ROOT::GenerateInitInstanceLocal(TMatrixTBase&lt;float&gt; const*)' from file 'math/matrix/CMakeFiles/G__Matrix.dir/G__Matrix.cxx.o' to global weak symbol 'typeinfo for TMatrixTBase&lt;float&gt;' from file 'math/matrix/CMakeFiles/Matrix.dir/src/TMatrixTBase.cxx.o' means the weak symbol cannot be overridden at runtime. This was likely caused by different translation units being compiled with different visibility settings. ; - [2023-05-05T13:09:52.576Z] ld: warning: direct access in function 'ROOT::GenerateInitInstanceLocal(TMatrixTBas",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12238#issuecomment-1536272242:2307,access,access,2307,https://root.cern,https://github.com/root-project/root/pull/12238#issuecomment-1536272242,1,['access'],['access']
Security,"TKDTree&lt;int, float&gt; const*)' from file 'math/mathcore/CMakeFiles/G__MathCore.dir/G__MathCore.cxx.o' to global weak symbol 'typeinfo for TKDTree&lt;int, float&gt;' from file 'math/mathcore/CMakeFiles/MathCore.dir/src/TKDTree.cxx.o' means the weak symbol cannot be overridden at runtime. This was likely caused by different translation units being compiled with different visibility settings. ; - [2023-05-24T07:15:50.535Z] ld: warning: direct access in function 'ROOT::GenerateInitInstanceLocal(TKDTree&lt;int, float&gt; const*)' from file 'math/mathcore/CMakeFiles/G__MathCore.dir/G__MathCore.cxx.o' to global weak symbol 'typeinfo for TKDTree&lt;int, float&gt;' from file 'math/mathcore/CMakeFiles/MathCore.dir/src/TKDTree.cxx.o' means the weak symbol cannot be overridden at runtime. This was likely caused by different translation units being compiled with different visibility settings. ; - [2023-05-24T07:16:00.071Z] ld: warning: direct access in function 'ROOT::GenerateInitInstanceLocal(TMatrixTBase&lt;float&gt; const*)' from file 'math/matrix/CMakeFiles/G__Matrix.dir/G__Matrix.cxx.o' to global weak symbol 'typeinfo for TMatrixTBase&lt;float&gt;' from file 'math/matrix/CMakeFiles/Matrix.dir/src/TMatrixTBase.cxx.o' means the weak symbol cannot be overridden at runtime. This was likely caused by different translation units being compiled with different visibility settings. ; - [2023-05-24T07:16:00.071Z] ld: warning: direct access in function 'ROOT::GenerateInitInstanceLocal(TMatrixTBase&lt;float&gt; const*)' from file 'math/matrix/CMakeFiles/G__Matrix.dir/G__Matrix.cxx.o' to global weak symbol 'typeinfo for TMatrixTBase&lt;float&gt;' from file 'math/matrix/CMakeFiles/Matrix.dir/src/TMatrixTBase.cxx.o' means the weak symbol cannot be overridden at runtime. This was likely caused by different translation units being compiled with different visibility settings. ; - [2023-05-24T07:16:00.071Z] ld: warning: direct access in function 'ROOT::GenerateInitInstanceLocal(TMatrixTBas",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12864#issuecomment-1560656733:2307,access,access,2307,https://root.cern,https://github.com/root-project/root/pull/12864#issuecomment-1560656733,1,['access'],['access']
Security,"TKDTree&lt;int, float&gt; const*)' from file 'math/mathcore/CMakeFiles/G__MathCore.dir/G__MathCore.cxx.o' to global weak symbol 'typeinfo for TKDTree&lt;int, float&gt;' from file 'math/mathcore/CMakeFiles/MathCore.dir/src/TKDTree.cxx.o' means the weak symbol cannot be overridden at runtime. This was likely caused by different translation units being compiled with different visibility settings. ; - [2023-05-24T08:37:44.958Z] ld: warning: direct access in function 'ROOT::GenerateInitInstanceLocal(TKDTree&lt;int, float&gt; const*)' from file 'math/mathcore/CMakeFiles/G__MathCore.dir/G__MathCore.cxx.o' to global weak symbol 'typeinfo for TKDTree&lt;int, float&gt;' from file 'math/mathcore/CMakeFiles/MathCore.dir/src/TKDTree.cxx.o' means the weak symbol cannot be overridden at runtime. This was likely caused by different translation units being compiled with different visibility settings. ; - [2023-05-24T08:37:54.558Z] ld: warning: direct access in function 'ROOT::GenerateInitInstanceLocal(TMatrixTBase&lt;float&gt; const*)' from file 'math/matrix/CMakeFiles/G__Matrix.dir/G__Matrix.cxx.o' to global weak symbol 'typeinfo for TMatrixTBase&lt;float&gt;' from file 'math/matrix/CMakeFiles/Matrix.dir/src/TMatrixTBase.cxx.o' means the weak symbol cannot be overridden at runtime. This was likely caused by different translation units being compiled with different visibility settings. ; - [2023-05-24T08:37:54.558Z] ld: warning: direct access in function 'ROOT::GenerateInitInstanceLocal(TMatrixTBase&lt;float&gt; const*)' from file 'math/matrix/CMakeFiles/G__Matrix.dir/G__Matrix.cxx.o' to global weak symbol 'typeinfo for TMatrixTBase&lt;float&gt;' from file 'math/matrix/CMakeFiles/Matrix.dir/src/TMatrixTBase.cxx.o' means the weak symbol cannot be overridden at runtime. This was likely caused by different translation units being compiled with different visibility settings. ; - [2023-05-24T08:37:54.558Z] ld: warning: direct access in function 'ROOT::GenerateInitInstanceLocal(TMatrixTBas",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12864#issuecomment-1560787612:2307,access,access,2307,https://root.cern,https://github.com/root-project/root/pull/12864#issuecomment-1560787612,1,['access'],['access']
Security,"TKDTree&lt;int, float&gt; const*)' from file 'math/mathcore/CMakeFiles/G__MathCore.dir/G__MathCore.cxx.o' to global weak symbol 'typeinfo for TKDTree&lt;int, float&gt;' from file 'math/mathcore/CMakeFiles/MathCore.dir/src/TKDTree.cxx.o' means the weak symbol cannot be overridden at runtime. This was likely caused by different translation units being compiled with different visibility settings. ; - [2023-06-15T05:49:37.347Z] ld: warning: direct access in function 'ROOT::GenerateInitInstanceLocal(TKDTree&lt;int, float&gt; const*)' from file 'math/mathcore/CMakeFiles/G__MathCore.dir/G__MathCore.cxx.o' to global weak symbol 'typeinfo for TKDTree&lt;int, float&gt;' from file 'math/mathcore/CMakeFiles/MathCore.dir/src/TKDTree.cxx.o' means the weak symbol cannot be overridden at runtime. This was likely caused by different translation units being compiled with different visibility settings. ; - [2023-06-15T05:49:47.357Z] ld: warning: direct access in function 'ROOT::GenerateInitInstanceLocal(TMatrixTBase&lt;float&gt; const*)' from file 'math/matrix/CMakeFiles/G__Matrix.dir/G__Matrix.cxx.o' to global weak symbol 'typeinfo for TMatrixTBase&lt;float&gt;' from file 'math/matrix/CMakeFiles/Matrix.dir/src/TMatrixTBase.cxx.o' means the weak symbol cannot be overridden at runtime. This was likely caused by different translation units being compiled with different visibility settings. ; - [2023-06-15T05:49:47.357Z] ld: warning: direct access in function 'ROOT::GenerateInitInstanceLocal(TMatrixTBase&lt;float&gt; const*)' from file 'math/matrix/CMakeFiles/G__Matrix.dir/G__Matrix.cxx.o' to global weak symbol 'typeinfo for TMatrixTBase&lt;float&gt;' from file 'math/matrix/CMakeFiles/Matrix.dir/src/TMatrixTBase.cxx.o' means the weak symbol cannot be overridden at runtime. This was likely caused by different translation units being compiled with different visibility settings. ; - [2023-06-15T05:49:47.357Z] ld: warning: direct access in function 'ROOT::GenerateInitInstanceLocal(TMatrixTBas",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12062#issuecomment-1592464351:2307,access,access,2307,https://root.cern,https://github.com/root-project/root/pull/12062#issuecomment-1592464351,1,['access'],['access']
Security,"TKDTree&lt;int, float&gt; const*)' from file 'math/mathcore/CMakeFiles/G__MathCore.dir/G__MathCore.cxx.o' to global weak symbol 'typeinfo for TKDTree&lt;int, float&gt;' from file 'math/mathcore/CMakeFiles/MathCore.dir/src/TKDTree.cxx.o' means the weak symbol cannot be overridden at runtime. This was likely caused by different translation units being compiled with different visibility settings. ; - [2023-06-15T07:06:09.529Z] ld: warning: direct access in function 'ROOT::GenerateInitInstanceLocal(TKDTree&lt;int, float&gt; const*)' from file 'math/mathcore/CMakeFiles/G__MathCore.dir/G__MathCore.cxx.o' to global weak symbol 'typeinfo for TKDTree&lt;int, float&gt;' from file 'math/mathcore/CMakeFiles/MathCore.dir/src/TKDTree.cxx.o' means the weak symbol cannot be overridden at runtime. This was likely caused by different translation units being compiled with different visibility settings. ; - [2023-06-15T07:06:19.331Z] ld: warning: direct access in function 'ROOT::GenerateInitInstanceLocal(TMatrixTBase&lt;float&gt; const*)' from file 'math/matrix/CMakeFiles/G__Matrix.dir/G__Matrix.cxx.o' to global weak symbol 'typeinfo for TMatrixTBase&lt;float&gt;' from file 'math/matrix/CMakeFiles/Matrix.dir/src/TMatrixTBase.cxx.o' means the weak symbol cannot be overridden at runtime. This was likely caused by different translation units being compiled with different visibility settings. ; - [2023-06-15T07:06:19.331Z] ld: warning: direct access in function 'ROOT::GenerateInitInstanceLocal(TMatrixTBase&lt;float&gt; const*)' from file 'math/matrix/CMakeFiles/G__Matrix.dir/G__Matrix.cxx.o' to global weak symbol 'typeinfo for TMatrixTBase&lt;float&gt;' from file 'math/matrix/CMakeFiles/Matrix.dir/src/TMatrixTBase.cxx.o' means the weak symbol cannot be overridden at runtime. This was likely caused by different translation units being compiled with different visibility settings. ; - [2023-06-15T07:06:19.331Z] ld: warning: direct access in function 'ROOT::GenerateInitInstanceLocal(TMatrixTBas",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12238#issuecomment-1592568988:2307,access,access,2307,https://root.cern,https://github.com/root-project/root/pull/12238#issuecomment-1592568988,1,['access'],['access']
Security,"TKDTree&lt;int, float&gt; const*)' from file 'math/mathcore/CMakeFiles/G__MathCore.dir/G__MathCore.cxx.o' to global weak symbol 'typeinfo for TKDTree&lt;int, float&gt;' from file 'math/mathcore/CMakeFiles/MathCore.dir/src/TKDTree.cxx.o' means the weak symbol cannot be overridden at runtime. This was likely caused by different translation units being compiled with different visibility settings. ; - [2023-06-16T11:17:10.710Z] ld: warning: direct access in function 'ROOT::GenerateInitInstanceLocal(TKDTree&lt;int, float&gt; const*)' from file 'math/mathcore/CMakeFiles/G__MathCore.dir/G__MathCore.cxx.o' to global weak symbol 'typeinfo for TKDTree&lt;int, float&gt;' from file 'math/mathcore/CMakeFiles/MathCore.dir/src/TKDTree.cxx.o' means the weak symbol cannot be overridden at runtime. This was likely caused by different translation units being compiled with different visibility settings. ; - [2023-06-16T11:17:43.964Z] ld: warning: direct access in function 'ROOT::GenerateInitInstanceLocal(TMatrixTBase&lt;float&gt; const*)' from file 'math/matrix/CMakeFiles/G__Matrix.dir/G__Matrix.cxx.o' to global weak symbol 'typeinfo for TMatrixTBase&lt;float&gt;' from file 'math/matrix/CMakeFiles/Matrix.dir/src/TMatrixTBase.cxx.o' means the weak symbol cannot be overridden at runtime. This was likely caused by different translation units being compiled with different visibility settings. ; - [2023-06-16T11:17:43.964Z] ld: warning: direct access in function 'ROOT::GenerateInitInstanceLocal(TMatrixTBase&lt;float&gt; const*)' from file 'math/matrix/CMakeFiles/G__Matrix.dir/G__Matrix.cxx.o' to global weak symbol 'typeinfo for TMatrixTBase&lt;float&gt;' from file 'math/matrix/CMakeFiles/Matrix.dir/src/TMatrixTBase.cxx.o' means the weak symbol cannot be overridden at runtime. This was likely caused by different translation units being compiled with different visibility settings. ; - [2023-06-16T11:17:43.964Z] ld: warning: direct access in function 'ROOT::GenerateInitInstanceLocal(TMatrixTBas",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12238#issuecomment-1594562137:2307,access,access,2307,https://root.cern,https://github.com/root-project/root/pull/12238#issuecomment-1594562137,1,['access'],['access']
Security,"TKDTree&lt;int, float&gt; const*)' from file 'math/mathcore/CMakeFiles/G__MathCore.dir/G__MathCore.cxx.o' to global weak symbol 'typeinfo for TKDTree&lt;int, float&gt;' from file 'math/mathcore/CMakeFiles/MathCore.dir/src/TKDTree.cxx.o' means the weak symbol cannot be overridden at runtime. This was likely caused by different translation units being compiled with different visibility settings. ; - [2023-06-20T05:25:06.418Z] ld: warning: direct access in function 'ROOT::GenerateInitInstanceLocal(TKDTree&lt;int, float&gt; const*)' from file 'math/mathcore/CMakeFiles/G__MathCore.dir/G__MathCore.cxx.o' to global weak symbol 'typeinfo for TKDTree&lt;int, float&gt;' from file 'math/mathcore/CMakeFiles/MathCore.dir/src/TKDTree.cxx.o' means the weak symbol cannot be overridden at runtime. This was likely caused by different translation units being compiled with different visibility settings. ; - [2023-06-20T05:25:39.268Z] ld: warning: direct access in function 'ROOT::GenerateInitInstanceLocal(TMatrixTBase&lt;float&gt; const*)' from file 'math/matrix/CMakeFiles/G__Matrix.dir/G__Matrix.cxx.o' to global weak symbol 'typeinfo for TMatrixTBase&lt;float&gt;' from file 'math/matrix/CMakeFiles/Matrix.dir/src/TMatrixTBase.cxx.o' means the weak symbol cannot be overridden at runtime. This was likely caused by different translation units being compiled with different visibility settings. ; - [2023-06-20T05:25:39.268Z] ld: warning: direct access in function 'ROOT::GenerateInitInstanceLocal(TMatrixTBase&lt;float&gt; const*)' from file 'math/matrix/CMakeFiles/G__Matrix.dir/G__Matrix.cxx.o' to global weak symbol 'typeinfo for TMatrixTBase&lt;float&gt;' from file 'math/matrix/CMakeFiles/Matrix.dir/src/TMatrixTBase.cxx.o' means the weak symbol cannot be overridden at runtime. This was likely caused by different translation units being compiled with different visibility settings. ; - [2023-06-20T05:25:39.268Z] ld: warning: direct access in function 'ROOT::GenerateInitInstanceLocal(TMatrixTBas",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13046#issuecomment-1598165512:2307,access,access,2307,https://root.cern,https://github.com/root-project/root/pull/13046#issuecomment-1598165512,1,['access'],['access']
Security,"TKDTree&lt;int, float&gt; const*)' from file 'math/mathcore/CMakeFiles/G__MathCore.dir/G__MathCore.cxx.o' to global weak symbol 'typeinfo for TKDTree&lt;int, float&gt;' from file 'math/mathcore/CMakeFiles/MathCore.dir/src/TKDTree.cxx.o' means the weak symbol cannot be overridden at runtime. This was likely caused by different translation units being compiled with different visibility settings. ; - [2023-07-01T09:00:47.933Z] ld: warning: direct access in function 'ROOT::GenerateInitInstanceLocal(TKDTree&lt;int, float&gt; const*)' from file 'math/mathcore/CMakeFiles/G__MathCore.dir/G__MathCore.cxx.o' to global weak symbol 'typeinfo for TKDTree&lt;int, float&gt;' from file 'math/mathcore/CMakeFiles/MathCore.dir/src/TKDTree.cxx.o' means the weak symbol cannot be overridden at runtime. This was likely caused by different translation units being compiled with different visibility settings. ; - [2023-07-01T09:00:58.022Z] ld: warning: direct access in function 'ROOT::GenerateInitInstanceLocal(TMatrixTBase&lt;float&gt; const*)' from file 'math/matrix/CMakeFiles/G__Matrix.dir/G__Matrix.cxx.o' to global weak symbol 'typeinfo for TMatrixTBase&lt;float&gt;' from file 'math/matrix/CMakeFiles/Matrix.dir/src/TMatrixTBase.cxx.o' means the weak symbol cannot be overridden at runtime. This was likely caused by different translation units being compiled with different visibility settings. ; - [2023-07-01T09:00:58.022Z] ld: warning: direct access in function 'ROOT::GenerateInitInstanceLocal(TMatrixTBase&lt;float&gt; const*)' from file 'math/matrix/CMakeFiles/G__Matrix.dir/G__Matrix.cxx.o' to global weak symbol 'typeinfo for TMatrixTBase&lt;float&gt;' from file 'math/matrix/CMakeFiles/Matrix.dir/src/TMatrixTBase.cxx.o' means the weak symbol cannot be overridden at runtime. This was likely caused by different translation units being compiled with different visibility settings. ; - [2023-07-01T09:00:58.022Z] ld: warning: direct access in function 'ROOT::GenerateInitInstanceLocal(TMatrixTBas",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13139#issuecomment-1615776009:2307,access,access,2307,https://root.cern,https://github.com/root-project/root/pull/13139#issuecomment-1615776009,1,['access'],['access']
Security,"TKDTree&lt;int, float&gt; const*)' from file 'math/mathcore/CMakeFiles/G__MathCore.dir/G__MathCore.cxx.o' to global weak symbol 'typeinfo for TKDTree&lt;int, float&gt;' from file 'math/mathcore/CMakeFiles/MathCore.dir/src/TKDTree.cxx.o' means the weak symbol cannot be overridden at runtime. This was likely caused by different translation units being compiled with different visibility settings. ; - [2023-07-03T12:52:21.831Z] ld: warning: direct access in function 'ROOT::GenerateInitInstanceLocal(TKDTree&lt;int, float&gt; const*)' from file 'math/mathcore/CMakeFiles/G__MathCore.dir/G__MathCore.cxx.o' to global weak symbol 'typeinfo for TKDTree&lt;int, float&gt;' from file 'math/mathcore/CMakeFiles/MathCore.dir/src/TKDTree.cxx.o' means the weak symbol cannot be overridden at runtime. This was likely caused by different translation units being compiled with different visibility settings. ; - [2023-07-03T12:52:31.604Z] ld: warning: direct access in function 'ROOT::GenerateInitInstanceLocal(TMatrixTBase&lt;float&gt; const*)' from file 'math/matrix/CMakeFiles/G__Matrix.dir/G__Matrix.cxx.o' to global weak symbol 'typeinfo for TMatrixTBase&lt;float&gt;' from file 'math/matrix/CMakeFiles/Matrix.dir/src/TMatrixTBase.cxx.o' means the weak symbol cannot be overridden at runtime. This was likely caused by different translation units being compiled with different visibility settings. ; - [2023-07-03T12:52:31.604Z] ld: warning: direct access in function 'ROOT::GenerateInitInstanceLocal(TMatrixTBase&lt;float&gt; const*)' from file 'math/matrix/CMakeFiles/G__Matrix.dir/G__Matrix.cxx.o' to global weak symbol 'typeinfo for TMatrixTBase&lt;float&gt;' from file 'math/matrix/CMakeFiles/Matrix.dir/src/TMatrixTBase.cxx.o' means the weak symbol cannot be overridden at runtime. This was likely caused by different translation units being compiled with different visibility settings. ; - [2023-07-03T12:52:31.604Z] ld: warning: direct access in function 'ROOT::GenerateInitInstanceLocal(TMatrixTBas",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13139#issuecomment-1618264564:2307,access,access,2307,https://root.cern,https://github.com/root-project/root/pull/13139#issuecomment-1618264564,1,['access'],['access']
Security,"TMath.cxx:3201:44: error: ‘x’ was not declared in this scope . And 30 more. ### Warnings:; - /mnt/build/workspace/root-pullrequests-build/root/core/meta/src/TClass.cxx:686:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:5203:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:4757:26: warning: ‘char* strncpy(char*, const char*, size_t)’ output may be truncated copying 10 bytes from a string of length 10 [-Wstringop-truncation] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:490:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing between 2147483648 and 2147483647 bytes at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 4294967295] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:761:21: warning: ‘%lu’ directive writing between 1 and 20 bytes into a region of size between 0 and 8191 [-Wformat-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/proof/proofd/src/XrdProofdProtocol.cxx:527:45: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘class XrdSecEntity’; use assignment or value-initialization instead [-Wclass-memaccess] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TSystem.cxx:1148:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing 1 byte at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 2147483649] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1770:96: warning: cast between incompatible function types from ‘TVirtualPad*& (*)()’ to ‘TGlobalMappedFunction::G",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2236#issuecomment-400583007:2483,access,accessing,2483,https://root.cern,https://github.com/root-project/root/pull/2236#issuecomment-400583007,2,['access'],['accessing']
Security,TMatrixTBase&lt;double&gt;' from file 'math/matrix/CMakeFiles/Matrix.dir/src/TMatrixTBase.cxx.o' means the weak symbol cannot be overridden at runtime. This was likely caused by different translation units being compiled with different visibility settings. ; - [2023-05-24T07:16:00.071Z] ld: warning: direct access in function 'ROOT::GenerateInitInstanceLocal(TMatrixTBase&lt;double&gt; const*)' from file 'math/matrix/CMakeFiles/G__Matrix.dir/G__Matrix.cxx.o' to global weak symbol 'typeinfo for TMatrixTBase&lt;double&gt;' from file 'math/matrix/CMakeFiles/Matrix.dir/src/TMatrixTBase.cxx.o' means the weak symbol cannot be overridden at runtime. This was likely caused by different translation units being compiled with different visibility settings. ; - [2023-05-24T07:16:00.071Z] ld: warning: direct access in function 'ROOT::GenerateInitInstanceLocal(TVectorT&lt;float&gt; const*)' from file 'math/matrix/CMakeFiles/G__Matrix.dir/G__Matrix.cxx.o' to global weak symbol 'typeinfo for TVectorT&lt;float&gt;' from file 'math/matrix/CMakeFiles/Matrix.dir/src/TVectorT.cxx.o' means the weak symbol cannot be overridden at runtime. This was likely caused by different translation units being compiled with different visibility settings. ; - [2023-05-24T07:16:00.071Z] ld: warning: direct access in function 'ROOT::GenerateInitInstanceLocal(TVectorT&lt;float&gt; const*)' from file 'math/matrix/CMakeFiles/G__Matrix.dir/G__Matrix.cxx.o' to global weak symbol 'typeinfo for TVectorT&lt;float&gt;' from file 'math/matrix/CMakeFiles/Matrix.dir/src/TVectorT.cxx.o' means the weak symbol cannot be overridden at runtime. This was likely caused by different translation units being compiled with different visibility settings. . And 126 more. ### Failing tests:; - [projectroot.tree.ntuple.v7.test.gtest_tree_ntuple_v7_test_ntuple_extended](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/175198/testReport/projectroot.tree.ntuple.v7/test/gtest_tree_ntuple_v7_test_ntuple_extended/),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12864#issuecomment-1560656733:4774,access,access,4774,https://root.cern,https://github.com/root-project/root/pull/12864#issuecomment-1560656733,1,['access'],['access']
Security,TMatrixTBase&lt;double&gt;' from file 'math/matrix/CMakeFiles/Matrix.dir/src/TMatrixTBase.cxx.o' means the weak symbol cannot be overridden at runtime. This was likely caused by different translation units being compiled with different visibility settings. ; - [2023-05-24T08:37:54.558Z] ld: warning: direct access in function 'ROOT::GenerateInitInstanceLocal(TMatrixTBase&lt;double&gt; const*)' from file 'math/matrix/CMakeFiles/G__Matrix.dir/G__Matrix.cxx.o' to global weak symbol 'typeinfo for TMatrixTBase&lt;double&gt;' from file 'math/matrix/CMakeFiles/Matrix.dir/src/TMatrixTBase.cxx.o' means the weak symbol cannot be overridden at runtime. This was likely caused by different translation units being compiled with different visibility settings. ; - [2023-05-24T08:37:54.558Z] ld: warning: direct access in function 'ROOT::GenerateInitInstanceLocal(TVectorT&lt;float&gt; const*)' from file 'math/matrix/CMakeFiles/G__Matrix.dir/G__Matrix.cxx.o' to global weak symbol 'typeinfo for TVectorT&lt;float&gt;' from file 'math/matrix/CMakeFiles/Matrix.dir/src/TVectorT.cxx.o' means the weak symbol cannot be overridden at runtime. This was likely caused by different translation units being compiled with different visibility settings. ; - [2023-05-24T08:37:54.558Z] ld: warning: direct access in function 'ROOT::GenerateInitInstanceLocal(TVectorT&lt;float&gt; const*)' from file 'math/matrix/CMakeFiles/G__Matrix.dir/G__Matrix.cxx.o' to global weak symbol 'typeinfo for TVectorT&lt;float&gt;' from file 'math/matrix/CMakeFiles/Matrix.dir/src/TVectorT.cxx.o' means the weak symbol cannot be overridden at runtime. This was likely caused by different translation units being compiled with different visibility settings. . And 126 more. ### Failing tests:; - [projectroot.tree.ntuple.v7.test.gtest_tree_ntuple_v7_test_ntuple_extended](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/175204/testReport/projectroot.tree.ntuple.v7/test/gtest_tree_ntuple_v7_test_ntuple_extended/),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12864#issuecomment-1560787612:4774,access,access,4774,https://root.cern,https://github.com/root-project/root/pull/12864#issuecomment-1560787612,1,['access'],['access']
Security,TMatrixTBase&lt;double&gt;' from file 'math/matrix/CMakeFiles/Matrix.dir/src/TMatrixTBase.cxx.o' means the weak symbol cannot be overridden at runtime. This was likely caused by different translation units being compiled with different visibility settings. ; - [2023-06-15T07:06:19.331Z] ld: warning: direct access in function 'ROOT::GenerateInitInstanceLocal(TMatrixTBase&lt;double&gt; const*)' from file 'math/matrix/CMakeFiles/G__Matrix.dir/G__Matrix.cxx.o' to global weak symbol 'typeinfo for TMatrixTBase&lt;double&gt;' from file 'math/matrix/CMakeFiles/Matrix.dir/src/TMatrixTBase.cxx.o' means the weak symbol cannot be overridden at runtime. This was likely caused by different translation units being compiled with different visibility settings. ; - [2023-06-15T07:06:19.331Z] ld: warning: direct access in function 'ROOT::GenerateInitInstanceLocal(TVectorT&lt;float&gt; const*)' from file 'math/matrix/CMakeFiles/G__Matrix.dir/G__Matrix.cxx.o' to global weak symbol 'typeinfo for TVectorT&lt;float&gt;' from file 'math/matrix/CMakeFiles/Matrix.dir/src/TVectorT.cxx.o' means the weak symbol cannot be overridden at runtime. This was likely caused by different translation units being compiled with different visibility settings. ; - [2023-06-15T07:06:19.331Z] ld: warning: direct access in function 'ROOT::GenerateInitInstanceLocal(TVectorT&lt;float&gt; const*)' from file 'math/matrix/CMakeFiles/G__Matrix.dir/G__Matrix.cxx.o' to global weak symbol 'typeinfo for TVectorT&lt;float&gt;' from file 'math/matrix/CMakeFiles/Matrix.dir/src/TVectorT.cxx.o' means the weak symbol cannot be overridden at runtime. This was likely caused by different translation units being compiled with different visibility settings. . And 126 more. ### Failing tests:; - [projectroot.tree.ntuple.v7.test.gtest_tree_ntuple_v7_test_ntuple_extended](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/177181/testReport/projectroot.tree.ntuple.v7/test/gtest_tree_ntuple_v7_test_ntuple_extended/),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12238#issuecomment-1592568988:4774,access,access,4774,https://root.cern,https://github.com/root-project/root/pull/12238#issuecomment-1592568988,1,['access'],['access']
Security,"TMemFile.cxx:182:38: error: ‘mustRegister’ was not declared in this scope . ### Warnings:; - /mnt/build/workspace/root-pullrequests-build/root/core/meta/src/TClass.cxx:686:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:5203:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:4757:26: warning: ‘char* strncpy(char*, const char*, size_t)’ output may be truncated copying 10 bytes from a string of length 10 [-Wstringop-truncation] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:490:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing between 2147483648 and 2147483647 bytes at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 4294967295] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:761:21: warning: ‘%lu’ directive writing between 1 and 20 bytes into a region of size between 0 and 8191 [-Wformat-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/proof/proofd/src/XrdProofdProtocol.cxx:527:45: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘class XrdSecEntity’; use assignment or value-initialization instead [-Wclass-memaccess] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TSystem.cxx:1148:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing 1 byte at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 2147483649] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1770:96: warning: cast between incompatible function types from ‘TVirtualPad*& (*)()’ to ‘TGlobalMappedFunction::G",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2248#issuecomment-400272955:1391,access,accessing,1391,https://root.cern,https://github.com/root-project/root/pull/2248#issuecomment-400272955,2,['access'],['accessing']
Security,TMessage: do not access not-allocated buffer ROOT-10340,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4551:17,access,access,17,https://root.cern,https://github.com/root-project/root/pull/4551,1,['access'],['access']
Security,"TNamedBranchProxy did not implement a Hash method.; Therefore when adding TNamedBranchProxy instances to the THashList dedicated to their bookkeping in TTreeReader TObject::Hash was used.; Unfortunately when trying to find the TNamedBranchProxies, their name was used and the hash was built differently by THashList (based on the name).; In order to fix this the following steps were taken.; - THashList was replaced by an unordered_map with names as keys and unique_ptr<TNamedBranchProxy> as values. The unique_ptr is used to automatically manage ownership.; - The methods of TTreeReader were adapted to use this new container as well as the code in TTreeReaderValue and TTreeReaderArray. A real usecase from CMS where the mass of the W boson is studied shows a significant speedup (30%).; The code uses TDataFrame and several nodes are created which read from the same branch in an input tree which holds weights in a collection.; This configuration stressed the performance degradation pattern fixed by this commit as it triggered multiple times the deserialisation of the ""weights branch"". Thanks to Elisabetta Manca and Lorenzo Bianchini for providing the bug report and initial reproducer. These changes will need to be backported at least to ROOT 6.12",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1768:38,Hash,Hash,38,https://root.cern,https://github.com/root-project/root/pull/1768,3,"['Hash', 'hash']","['Hash', 'hash']"
Security,"TTask exposes fTasks through (non-const) GetListOfTasks, so the invariant ""fTasks only contains pointers to TTask"" can not be enforced. ; This makes ; ``` while((task=(TTask*)next())) {```; an unsafe type cast. dynamic_cast should be used instead to avoid undefined behavior. . Generally, any C-style casts (or static_casts) should be avoided unless there is encapsulation to enforce an adequate invariant. ; C++ is a strongly typed language where type errors have to be caught at compile time because they will not lead to graceful failure at runtime.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11663:6,expose,exposes,6,https://root.cern,https://github.com/root-project/root/issues/11663,1,['expose'],['exposes']
Security,"TThreadedObject currently has a fixed amount of available slots,; the number of which can be set at construction time. This makes; it impossible to use TThreadedObject inside TBB tasks safely, because; TBB can potentially swap out worker threads for different threads at; runtime, resulting in TThreadedObject counting more thread ID's than; slots, and therefore in out-of-bound accesses to its contents. With this patch, TThreadedObject just appends a new slot when needed,; so it nevers runs out.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5464:379,access,accesses,379,https://root.cern,https://github.com/root-project/root/pull/5464,1,['access'],['accesses']
Security,TVectorT::Allocate' in /opt/root_src/math/matrix/src/TVectorT.cxx:339; 27: Returning from 'TVectorT::ResizeTo' in /opt/root_src/math/matrix/src/TVectorT.cxx:1049; 28: Null pointer passed to 1st parameter expecting 'nonnull' in /opt/root_src/math/matrix/src/TVectorT.cxx:1051; /opt/root_src/math/minuit/src/TFitter.cxx:164:10: warning: Value stored to 'igrad' is never read [clang-analyzer-deadcode.DeadStores]; 1: Value stored to 'igrad' is never read in /opt/root_src/math/minuit/src/TFitter.cxx:164; /opt/root_src/math/minuit/src/TFitter.cxx:182:7: warning: Value stored to 'igrad' is never read [clang-analyzer-deadcode.DeadStores]; 1: Value stored to 'igrad' is never read in /opt/root_src/math/minuit/src/TFitter.cxx:182; /opt/root_src/math/minuit/src/TFitter.cxx:483:4: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]; 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/math/minuit/src/TFitter.cxx:483; /opt/root_src/math/minuit/src/TLinearFitter.cxx:1375:7: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]; 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/math/minuit/src/TLinearFitter.cxx:1375; /opt/root_src/math/minuit/src/TLinearFitter.cxx:2152:10: warning: Value stored to 'chi2' is never read [clang-analyze,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7458:158013,secur,security,158013,https://root.cern,https://github.com/root-project/root/issues/7458,1,['secur'],['security']
Security,"TYPE=Release -S rootsrc -B rootbuild/BUILD_NAME -DCMAKE_INSTALL_DIR=rootinstall/INSTALL_NAME; ```. TLDR: The situation w.r.t. #14277 is ~~seemingly unchanged.~~. EDIT: Probably we also want to compare the changes of this patch against ROOT master **before** the two hotfixes regarding the missing symbols were introduced. I will do that and provide a followup comment. ## Baseline: [master@fbd6abb](https://github.com/root-project/root/commit/fbd6abb371e8611a16648983eedf095e425bebd4). ### Import time; Taken after a few runs, hot caches. ```; $: time python -c ""import ROOT"". real	0m0.791s; user	0m0.592s; sys	0m0.203s; ```. ### strace file stats. ```; strace -e file python -c 'import ROOT' 2>&1 | awk -v FS='""' '{ print $1 }' | sort | uniq -c; 206 access(; 2 chdir(; 1 execve(; 1 +++ exited with 0 +++; 181 getcwd(; 2 newfstatat(0, ; 2 newfstatat(1, ; 2 newfstatat(2, ; 532 newfstatat(3, ; 29 newfstatat(4, ; 10123 newfstatat(AT_FDCWD, ; 546 openat(AT_FDCWD, ; 843 readlink(; 1 --- SIGCHLD {si_signo=SIGCHLD, si_code=CLD_EXITED, si_pid=130118, si_uid=1000, si_status=0, si_utime=0, si_stime=0} ---; 1 --- SIGCHLD {si_signo=SIGCHLD, si_code=CLD_EXITED, si_pid=130120, si_uid=1000, si_status=0, si_utime=0, si_stime=0} ---; 1 --- SIGCHLD {si_signo=SIGCHLD, si_code=CLD_EXITED, si_pid=130124, si_uid=1000, si_status=0, si_utime=0, si_stime=0} ---; ```. ### openat stats with the two symbols related to #14277 . ```; strace -z -f -o openat.log -e trace=open,openat python3 -c 'import ROOT;print(ROOT.gErrorIgnoreLevel);print(ROOT.kError)'; -1; 3000; grep openat openat.log | sed 's|.*, ""||;s|"".*||' | sort | uniq | wc -l; 338; ```. ## After this patch. ### Import time; Taken after a few runs, hot caches. ```; time python -c ""import ROOT"". real	0m0.792s; user	0m0.600s; sys	0m0.197s; ```. ### strace file stats. ```; strace -e file python -c 'import ROOT' 2>&1 | awk -v FS='""' '{ print $1 }' | sort | uniq -c; 206 access(; 2 chdir(; 1 execve(; 1 +++ exited with 0 +++; 181 getcwd(; 2 newfstatat(0, ; ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14287#issuecomment-1866067873:884,access,access,884,https://root.cern,https://github.com/root-project/root/pull/14287#issuecomment-1866067873,1,['access'],['access']
Security,T_CAPATH; * failed to load '/etc/grid-security/certificates/78351451.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/7022e3c4.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/CNRS2-Projets.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/CNRS2-Projets.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/CNRS2-Projets.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/7ed47087.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/98ef0ee5.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/UKeScienceRoot-2007.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/UKeScienceRoot-2007.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/UKeScienceRoot-2007.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/UKeScienceRoot-2007.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/2436bbb8.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/DigitalTrustPrivateRootCAG4.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/DigitalTrustPrivateRootCAG4.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/DigitalTrustPrivateRootCAG4.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/DigitalTrustPrivateRootCAG4.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/585d9326.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/d58bb4bc.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/585d9326.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/23c77840.signing_policy' from CURLOPT_CAPAT,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8092#issuecomment-840048181:8194,secur,security,8194,https://root.cern,https://github.com/root-project/root/issues/8092#issuecomment-840048181,2,"['certificate', 'secur']","['certificates', 'security']"
Security,T_CAPATH; * failed to load '/etc/grid-security/certificates/AC-GRID-FR-Robots.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/7a819ef2.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/UNAMgrid-ca.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/QuoVadis-Root-CA2.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/QuoVadis-Root-CA2.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/UNLPGrid.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/QuoVadis-Root-CA2.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/d71343e8.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/QuoVadis-Root-CA2.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/d71343e8.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/d7e8dc79.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/SlovakGrid.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/728fa56d.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/SlovakGrid.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/728fa56d.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/e13e0fcf.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/e21dc0c0.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/87250dfa.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/14e86c33.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/87250dfa.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/5e02f50a.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8092#issuecomment-840048181:53178,secur,security,53178,https://root.cern,https://github.com/root-project/root/issues/8092#issuecomment-840048181,2,"['certificate', 'secur']","['certificates', 'security']"
Security,T_CAPATH; * failed to load '/etc/grid-security/certificates/GermanGrid.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/4b3f5558.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/GermanGrid.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/QuoVadis-Root-CA3G3.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/QuoVadis-Root-CA3G3.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/87429ba3.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/TRGrid.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/7c27c6a1.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/HellasGrid-CA-2016.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/HellasGrid-CA-2016.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/HellasGrid-CA-2016.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/HellasGrid-CA-2016.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/f4cf8fb6.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/6999cae3.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/6999cae3.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/UGRID-G2.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/UGRID-G2.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/UGRID-G2.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/UGRID-G2.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/c53e160f.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/c53e160f.signing_policy',MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8092#issuecomment-840048181:36416,secur,security,36416,https://root.cern,https://github.com/root-project/root/issues/8092#issuecomment-840048181,2,"['certificate', 'secur']","['certificates', 'security']"
Security,T_CAPATH; * failed to load '/etc/grid-security/certificates/InCommon-IGTF-Server-CA.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/d11f973e.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/ba240aa8.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/f5f0dfc2.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/4339b4bc.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/3cc00941.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/68aa9d51.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/5168735f.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/KENETCA-ICA-2015.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/CERN-GridCA.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/KENETCA-ICA-2015.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/CERN-GridCA.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/62c4a178.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/KENETCA-ICA-2015.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/CESNET-CA-4.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/7f23888f.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/7f23888f.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/CERN-GridCA.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/DigitalTrustIGTFCA.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/DigitalTrustIGTFCA.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/ffc3d59b.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8092#issuecomment-840048181:12289,secur,security,12289,https://root.cern,https://github.com/root-project/root/issues/8092#issuecomment-840048181,2,"['certificate', 'secur']","['certificates', 'security']"
Security,T_CAPATH; * failed to load '/etc/grid-security/certificates/PK-Grid-2007.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/38f7145f.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/617ff41b.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/67707166.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/67707166.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/QuoVadis-Grid-ICA-G2.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/DigiCertGridTrustCA-Classic.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/DigiCertGridTrustCA-Classic.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/MYIFAM.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/PKIUNAMgrid.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/DigiCertGridTrustCA-Classic.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/QuoVadis-Grid-ICA-G2.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/MYIFAM.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/KEK.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/DigiCertGridTrustCA-Classic.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/TERENAeSciencePersonalCA3.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/e91bd360.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/TERENAeSciencePersonalCA3.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/2f2f573f.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/TERENAeSciencePersonalCA3.namespaces' from CURLOPT_CAPATH; * f,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8092#issuecomment-840048181:26820,secur,security,26820,https://root.cern,https://github.com/root-project/root/issues/8092#issuecomment-840048181,2,"['certificate', 'secur']","['certificates', 'security']"
Security,T_CAPATH; * failed to load '/etc/grid-security/certificates/UKeScienceCA-2B.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/InCommon-IGTF-Server-CA.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/d11f973e.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/82c2b224.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/InCommon-IGTF-Server-CA.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/d11f973e.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/ba240aa8.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/f5f0dfc2.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/4339b4bc.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/3cc00941.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/68aa9d51.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/5168735f.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/KENETCA-ICA-2015.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/CERN-GridCA.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/KENETCA-ICA-2015.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/CERN-GridCA.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/62c4a178.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/KENETCA-ICA-2015.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/CESNET-CA-4.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/7f23888f.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/7f23888f.s,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8092#issuecomment-840048181:11908,secur,security,11908,https://root.cern,https://github.com/root-project/root/issues/8092#issuecomment-840048181,2,"['certificate', 'secur']","['certificates', 'security']"
Security,T_CAPATH; * failed to load '/etc/grid-security/certificates/e523eeaa.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/38f7145f.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/PK-Grid-2007.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/38f7145f.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/617ff41b.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/67707166.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/67707166.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/QuoVadis-Grid-ICA-G2.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/DigiCertGridTrustCA-Classic.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/DigiCertGridTrustCA-Classic.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/MYIFAM.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/PKIUNAMgrid.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/DigiCertGridTrustCA-Classic.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/QuoVadis-Grid-ICA-G2.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/MYIFAM.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/KEK.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/DigiCertGridTrustCA-Classic.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/TERENAeSciencePersonalCA3.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/e91bd360.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/TERENAeSciencePersonalCA3.info' from CURLOPT_CAPATH; * failed to load '/e,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8092#issuecomment-840048181:26641,secur,security,26641,https://root.cern,https://github.com/root-project/root/issues/8092#issuecomment-840048181,2,"['certificate', 'secur']","['certificates', 'security']"
Security,T_CAPATH; * failed to load '/etc/grid-security/certificates/e732ef10.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/DigiCertGridTrustCAG2-Classic.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/617ff41b.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/DigiCertGridTrustCAG2-Classic.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/58b08cb5.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/KEK.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/DigiCertGridTrustCAG2-Classic.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/d33760ec.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/e732ef10.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/2f2f573f.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/DigiCertGridTrustCAG2-Classic.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/18700496.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/bd43b60c.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/f5ead794.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/1db3b27f.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/PK-Grid-2007.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/1db3b27f.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/d33760ec.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/TERENA-eScience-SSL-CA-3.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/KEK.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/TERENA-,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8092#issuecomment-840048181:23806,secur,security,23806,https://root.cern,https://github.com/root-project/root/issues/8092#issuecomment-840048181,2,"['certificate', 'secur']","['certificates', 'security']"
Security,Taking false branch in /opt/root_src/tree/tree/src/TFriendElement.cxx:187; 22: Called C++ object pointer is null in /opt/root_src/tree/tree/src/TFriendElement.cxx:192; /opt/root_src/tree/tree/src/TLeaf.cxx:237:4: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]; 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/tree/tree/src/TLeaf.cxx:237; /opt/root_src/tree/tree/src/TLeaf.cxx:270:7: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]; 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/tree/tree/src/TLeaf.cxx:270; /opt/root_src/tree/tree/src/TLeaf.cxx:272:7: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]; 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/tree/tree/src/TLeaf.cxx:272; /opt/root_src/tree/tree/src/TLeafObject.cxx:94:4: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory ,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7429:69658,secur,security,69658,https://root.cern,https://github.com/root-project/root/issues/7429,1,['secur'],['security']
Security,"Tests has been augmented and refactored to avoid code duplication. There's one issue that I'm not sure how to solve: random access iterators are required to support the forms `it + n` as well as `n + it` (where `n` in our case is of type `std::ptrdiff_t`. The second form requires the definition of a free-standing `operator+`, which I implemented this way:. ```c++; template <typename T>; auto operator+(std::ptrdiff_t n, const typename TTreeReaderArray<T>::iterator &it); -> decltype(it + n); {; return it + n;; }; ```. Problem: in the definition above `T` cannot be deduced from the dependent type `iterator`, so this overload is never considered. Any idea how to work around this?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1259#issuecomment-343112197:124,access,access,124,https://root.cern,https://github.com/root-project/root/pull/1259#issuecomment-343112197,1,['access'],['access']
Security,Thank you Philippe. ; Nice to know that the container as gDirectory is using RW locks. Are also other lists accessible by gROOT using similar locks ?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6493#issuecomment-700744534:108,access,accessible,108,https://root.cern,https://github.com/root-project/root/pull/6493#issuecomment-700744534,1,['access'],['accessible']
Security,"Thank you for the report @cozzyd , I'll see how I can fix the `SetBranchAddress` pythonization. Another option you have is not to use `SetBranchAddress`, but just iterate on the tree and access the branch as an attribute like this:; ```python; import ROOT. ROOT.gSystem.Load(""libmwe.so""). f = ROOT.TFile(""out.root"");; t = f.Get(""tree"");. for entry in t:; ev = entry.event; print(ev.iev); print(ev.bar); print(ev.foo[0]); print(ev.foo[1]); ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6468#issuecomment-702608832:187,access,access,187,https://root.cern,https://github.com/root-project/root/issues/6468#issuecomment-702608832,1,['access'],['access']
Security,"Thank you very much for this, this is obviously much nicer than our horrible solution and highly appreciated. I cannot judge everything since I'm not familiar enough with these details. One thing different to our hack which I don't see here is the name of the file. We set `fName` to a hardcoded constant (empty didn't work) so that we're not dependent on the name of the file on creation. (for example I can create a file with `mkstemp()`, write and then rename and I will get the same checksum as writing directly to the final name). At the very least it would be necessary to be able to construct the file with the same name in different directories and still obtain the checksum but I would prefer if the filename doesn't have any affect on the checksum. . I would be fine if I can set the name after creating the file but it looks to me that the first key with the file metadata is written right in the beginning and a later change might not have the desired effect?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4253#issuecomment-524211456:487,checksum,checksum,487,https://root.cern,https://github.com/root-project/root/pull/4253#issuecomment-524211456,3,['checksum'],['checksum']
Security,"Thanks - sorry, I missed this is `dash`. IIUC luckily Ubuntu switched away from `dash` as default shell... I don't think there's much we can do here as `dash` really does not give access to the sourced filename. I'd rather invest time in rendering thisroot.sh unneeded for the general use case. @Raistmer a possible workaround would be to move to a different shell (e.g. `bash`), or so start bash and then - inside the bash shell - source `thisroot.sh` and continue your work within `bash`. Let me know if you're okay with me closing this issue as I don't see how we can address this with `dash`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10298#issuecomment-1088366852:180,access,access,180,https://root.cern,https://github.com/root-project/root/issues/10298#issuecomment-1088366852,1,['access'],['access']
Security,"Thanks @etejedor . It also looks like once I GetEntry once, I can access t.event (which lets me do random access easily enough by getting the Entry I want). Either way, it would be good to fix this for the benefit of keeping old code working.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6468#issuecomment-704016480:66,access,access,66,https://root.cern,https://github.com/root-project/root/issues/6468#issuecomment-704016480,2,['access'],['access']
Security,Thanks @pcanal for addressing the issue from https://root-forum.cern.ch/t/copying-trefs-and-accessing-tref-data-from-multiple-threads/29417/10. This indeed greatly improves the situation:. With your patch:. ```; $ ./root-test 1; Using 1 thread(s).; Run finished in 5.17034ms; $ ./root-test 2; Using 2 thread(s).; Run finished in 5.21786ms; $ ./root-test 4; Using 4 thread(s).; Run finished in 9.2026ms; $ ./root-test 8; Using 8 thread(s).; Run finished in 21.4157ms; $ ./root-test 16; Using 16 thread(s).; Run finished in 36.0558ms; $ ./root-test 32; Using 32 thread(s).; Run finished in 73.1081ms; ```. Without your patch:. ```; $ ./root-test 1; Using 1 thread(s).; Run finished in 11.3427ms; $ ./root-test 2; Using 2 thread(s).; Run finished in 89.8777ms; $ ./root-test 4; Using 4 thread(s).; Run finished in 419.919ms; $ ./root-test 8; Using 8 thread(s).; Run finished in 2541.3ms; $ ./root-test 16; Using 16 thread(s).; Run finished in 7807.43ms; ```. @Tmplt Could you confirm that this also resolves the issue in our framework?. @pcanal Assuming this would be merged - in which ROOT version would this fix land? Would it be possible to backport it to a currently released stable version via its `-patches` branch?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2381#issuecomment-408667428:92,access,accessing-tref-data-from-multiple-threads,92,https://root.cern,https://github.com/root-project/root/pull/2381#issuecomment-408667428,1,['access'],['accessing-tref-data-from-multiple-threads']
Security,Thanks Jonas! We might have to call some ROOT clean-up routine that is usually called by the ROOT-injected exit handler to make sure TFiles are closed correctly and similar. @pcanal might know if there is a simple way to do that.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7075#issuecomment-764675439:98,inject,injected,98,https://root.cern,https://github.com/root-project/root/pull/7075#issuecomment-764675439,2,['inject'],['injected']
Security,"Thanks a lot @wlav! . > That will give you different answers depending on whether the sequence has 0 or N elements, though. That's correct. Currently, we'll tag a sequence with 0 elements as not a sequence but the idea in this context is that if there are no elements there is nothing interesting to pythonize so we basically skip that object. > But there are plenty more worrisome things in that code. :). :no_mouth: :grinning:. > Can probably also expose it as a `CPyCppyy::Sequence_Check` in the API. I think this would be the best/ most robust approach. Then we can replace the ad-hoc check we currently do w/ that.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/15161#issuecomment-2061616984:450,expose,expose,450,https://root.cern,https://github.com/root-project/root/issues/15161#issuecomment-2061616984,1,['expose'],['expose']
Security,"Thanks for being willing to help here - I do understand the pain... We have thousands and thousands of user C++ files (macros) that rely on ROOT's `using namespace std`. We have that since the birth of ROOT, and we intentionally implemented it again for cling / ROOT6. We can do ""The Right Thing"" and annoy the hell out of the vast majority of our users, or have those people who are annoyed by this (and thus by definition have some expertise in coding) work around this ""feature"" of ROOT. Both are bad options, but IMHO the first is worse. As I said, we're considering replacing it with a bunch of `using std::cout` etc - but that might not help you, if `std::any` is part of the list. ROOT's `using namespace std` is even required for some (at least old) files to be read, so its suppression has more consequences than just at the prompt. We don't have a feature to ""dump cling input"" - because much of cling's input is actually synthetic AST, and code that gets unloaded again, or code that is injected without proper code context, e.g. `std::vector<MyClass>` might be looked up by some part of cling, the I/O, or PyROOT, and that's not valid code by itself, yet has very visible effects on cling, triggering instantiation etc. If you have an idea of how to approximate this let me know!. I'm looking forward to seeing a reproducer of the actual problem - if all fails, just tell me how to reproduce it within LHCb's software stack, as far as I can use it not being a member of LHCb.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8370#issuecomment-858748476:998,inject,injected,998,https://root.cern,https://github.com/root-project/root/issues/8370#issuecomment-858748476,1,['inject'],['injected']
Security,"Thanks for pointing out the question regarding checksumming compressed or uncompressed data. I considered it an error in the text but missed to explicitly mention it. My main reason to checksum compressed data is that we can verify data integrity without decompressing the data. A small benefit is that we need to checksum fewer bytes. I think that checksumming of the underlying storage layer will be hard to reuse in a meaningful way because most likely the checksummed byte ranges do not align with RNTuple structures (page, page group or similar). So what the underlying storage layer does is fine, and maybe the user decides that the storage layer is so reliable that one can skip application-level checksums altogether but I think that is as far as it goes. An advantage of checksumming uncompressed data is that they are stable when different encodings or compression algorithms are applied. I'm not sure though if we can exploit that anywhere.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15921#issuecomment-2193948400:47,checksum,checksumming,47,https://root.cern,https://github.com/root-project/root/pull/15921#issuecomment-2193948400,8,"['checksum', 'integrity']","['checksum', 'checksummed', 'checksumming', 'checksums', 'integrity']"
Security,"Thanks for the response. The reason I've noticed this PR is because in my instance it appears that it aborted CMake due lack of Java in the build environment. I don't believe the `fail-on-missing` option is turned on (although my CMake knowledge isn't excellent, so perhaps I'm being naive here), so at least in the current HEAD it appears to me to be a mandatory component. If you'd like, you can take a look at the build log here, ; https://github.com/MrCarroll/root-snap/runs/2059798478?check_suite_focus=true#step:3:3399. I've no technical reason against including Java in the snap to enable this functionality, but I don't believe it's functionality the users of the snap would likely expect it to have, it's primarily targetted to users who aren't likely to have access to a cluster to use. You can treat the snap as effectively being an instance of Ubuntu 20.04; if you'd like I can try see if I have the same problem in the normal Ubuntu environment to see if it reproduces there. Otherwise I'll likely pass the explicit flag to turn this off in my instance if it does appear to be a problem specific to the snap build. Thanks again!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7406#issuecomment-793527779:769,access,access,769,https://root.cern,https://github.com/root-project/root/pull/7406#issuecomment-793527779,1,['access'],['access']
Security,"Thanks for the suggestions! Very good points :). We have to take into account that the operation should be close to ""zero-cost"", like `GetColumnNames()` and friends. So the total number of entries, size in memory, ... is potentially costly (?). Regarding friends: I'd see them just as part of the dataset. Friend or not, the column is accessible. Or is there any special quirk of friends that we should consider?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7561#issuecomment-801351957:335,access,accessible,335,https://root.cern,https://github.com/root-project/root/issues/7561#issuecomment-801351957,1,['access'],['accessible']
Security,"Thanks for the validation, @asciandr!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8579#issuecomment-872989297:15,validat,validation,15,https://root.cern,https://github.com/root-project/root/pull/8579#issuecomment-872989297,1,['validat'],['validation']
Security,"Thanks for this attempt. There are a few issues remaining and those of course will have to be understood. On top of those, I would like to ask, if possible, to check that there is no lookup triggered by the new name discovering routine: we want to avoid slowdowns+memory allocations due to unwanted accesses to the interpreter.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14676#issuecomment-1943375264:299,access,accesses,299,https://root.cern,https://github.com/root-project/root/pull/14676#issuecomment-1943375264,1,['access'],['accesses']
Security,"Thanks to @cwiel for pointing out the issue. I've refactored the code and reduced code duplication massively. The bug is fixed by writing a pointer unequal zero in the array interface since numpy does not take this as exception. Actually, it does not matter at all what is written in the `""data""` field of the array interface since it is never accessed. Edit: Added a backport for experimental pyroot.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3535:344,access,accessed,344,https://root.cern,https://github.com/root-project/root/pull/3535,1,['access'],['accessed']
Security,"Thanks, @egpbos and @jspaaks ! Validation succeeds now. > suggest to add a GitHub Actions workflow. AFAICT we need this to be integrated with our release workflow. Once that's a GH Action we can also migrate the `CITATION.cff` generation and validation there. I *think* it's fairly hard to break the file given that it's generated by a script; I also dislike the pile of dependencies of `cffconvert` for a simple thing like validation, IMO it's too heavy to add it to the script producing `CITATION.cff`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8626#issuecomment-876311455:31,Validat,Validation,31,https://root.cern,https://github.com/root-project/root/pull/8626#issuecomment-876311455,5,"['Validat', 'validat']","['Validation', 'validation']"
Security,"Thanks, @ellert! The warning should not be ignored because it indicates an unexpected behavior in uring on that platform. It could be either a bug in uring or it may be an issue in how we use uring that is not triggered on other platforms. Which kernel version are you using? Would it be possible for me to get access to the node?. If you'd like to proceed with green unit tests, you can disable uring support at compile time with `cmake -During=off`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10303#issuecomment-1117087754:311,access,access,311,https://root.cern,https://github.com/root-project/root/pull/10303#issuecomment-1117087754,1,['access'],['access']
Security,"Thanks, @pikacic ! From this and your discussion with @oshadura our current understanding is that we can release v6.24/00 without a mechanism to force a specific architecture for the RooFit computation libraries. It is so far unclear to me whether LCG will be able to provide what you are hoping to see (a pinning of the architecture at configuration time) without preventing this 10x acceleration from being accessible for instance to ATLAS physicists. Until this is decided we will provide a mechanism to pin the architecture through an environment variable.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7361#issuecomment-793557386:409,access,accessible,409,https://root.cern,https://github.com/root-project/root/issues/7361#issuecomment-793557386,1,['access'],['accessible']
Security,"Thanks, better! Still, I'd like to hear your counterargument on:. > Instead, the forward header should be reserved for the specialists, and documentation should point to Vector4D.h. It's fine if this header repeats the typedefs, and those in Vector4Dfwd.h are hidden from Doxygen. In the end, Doxygen's search should get me to the header that I need to #include, as a user, to access PtEtaPhiMVector, and it should be obvious how to see PtEtaPhiMVector's members.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8051#issuecomment-844229365:377,access,access,377,https://root.cern,https://github.com/root-project/root/issues/8051#issuecomment-844229365,1,['access'],['access']
Security,"Thanks, it doesn't really matter for RTensor.; I had to set custom strides to access the elements of the tensor in NCHW format. But permuting the indices or reshaping the data does the trick, I think you can close this PR.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7204#issuecomment-780211856:78,access,access,78,https://root.cern,https://github.com/root-project/root/pull/7204#issuecomment-780211856,1,['access'],['access']
Security,"Thanks. Yes, but the main goal was for this function to be accessible from the context menu of any TH2 rather than via external tools.; See also: https://root-forum.cern.ch/t/th2-x-y-projection-interactive-viewer/26335 where the tutorials you mention were discussed by one user",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12566#issuecomment-1488035386:59,access,accessible,59,https://root.cern,https://github.com/root-project/root/pull/12566#issuecomment-1488035386,1,['access'],['accessible']
Security,"That breakpoint indeed never trips, but it's definitely injecting null ptr checks from somewhere:; (see the presence of ```cling_runtime_internal_throwIfInvalidPointer ()``` in the stack trace). And also confirmed that my real use case runs much slower (boost histogram template instantiations from pyroot). ```python; import ROOT; ROOT.gInterpreter.ProcessLine("".O3""). import time. ROOT.gInterpreter.Declare(""""""; template <typename T>; double templateTest() {; double *d = nullptr;; return *d;; }; """"""). print(""sleep""); time.sleep(5); # I stop here manually and insert the breakpoint; print(""instantiating template""). ROOT.templateTest[""double""](); ```. ```; (wmassdevrolling) [bendavid@lxplus8s10 wmassdev]$ python testnullptr.py ; sleep; instantiating template. Thread 2 (Thread 0x7f23282e3640 (LWP 13939) ""python""):; #0 0x00007f2343ecc8ca in __futex_abstimed_wait_common64 () from /usr/lib/libpthread.so.0; #1 0x00007f2343ec6574 in pthread_cond_timedwait. GLIBC_2.3.2 () from /usr/lib/libpthread.so.0; #2 0x00007f23441ba0d3 in ?? () from /usr/lib/libpython3.10.so.1.0; #3 0x00007f23441d85a2 in PyEval_RestoreThread () from /usr/lib/libpython3.10.so.1.0; #4 0x00007f23442f7cfd in ?? () from /usr/lib/libpython3.10.so.1.0; #5 0x00007f23441e8b23 in ?? () from /usr/lib/libpython3.10.so.1.0; #6 0x00007f23441de55f in _PyEval_EvalFrameDefault () from /usr/lib/libpython3.10.so.1.0; #7 0x00007f23441e9538 in _PyFunction_Vectorcall () from /usr/lib/libpython3.10.so.1.0; #8 0x00007f23441dc328 in _PyEval_EvalFrameDefault () from /usr/lib/libpython3.10.so.1.0; #9 0x00007f23441e9538 in _PyFunction_Vectorcall () from /usr/lib/libpython3.10.so.1.0; #10 0x00007f23441d9ca5 in _PyEval_EvalFrameDefault () from /usr/lib/libpython3.10.so.1.0; #11 0x00007f23441e9538 in _PyFunction_Vectorcall () from /usr/lib/libpython3.10.so.1.0; #12 0x00007f23441d9ca5 in _PyEval_EvalFrameDefault () from /usr/lib/libpython3.10.so.1.0; #13 0x00007f23441f4cc5 in ?? () from /usr/lib/libpython3.10.so.1.0; #14 0x00007f23442da4f",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9112#issuecomment-1011105337:56,inject,injecting,56,https://root.cern,https://github.com/root-project/root/issues/9112#issuecomment-1011105337,1,['inject'],['injecting']
Security,"That command gives me errors:; ```; $ voms-proxy-init; No credentials found!; ```; outside of Singularity and inside:; ```; Singularity> voms-proxy-init; Unable to find user certificate or key: /afs/cern.ch/user/j/jhahnfel/.globus/usercred.p12; ```. Note that I'm not a CMS member, so maybe I'm missing some permissions?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13429#issuecomment-1680227618:174,certificate,certificate,174,https://root.cern,https://github.com/root-project/root/issues/13429#issuecomment-1680227618,1,['certificate'],['certificate']
Security,"That is the reduced version:. ```c++; cat ../root/tutorials/hsimple.C . #include <TFile.h>; #include <TNtuple.h>; #include <TH2.h>; #include <TProfile.h>; #include <TCanvas.h>; #include <TFrame.h>; #include <TROOT.h>; #include <TSystem.h>; #include <TRandom3.h>; #include <TBenchmark.h>; #include <TInterpreter.h>. TFile *hsimple(Int_t getFile=0); {; if (!gSystem->AccessPathName("""",kFileExists)) {; }; return 0;; }; ```. I got it down to `root.exe -l -b -e 'gSystem->AccessPathName("""",kFileExists)'`. and we get:. ```; ROOT_INCLUDE_PATH=/scratch/cmsbuild/vvasilev/rootobj/include/ root.exe -l -b -q tutorials/hsimple.C ; Disabling gnu++: clang has no __float128 support on this target!; Parse symbols:; emitSection SectionID: 0 Name: .data obj addr: 0x1002151e4f8 new addr: 0x3fff8d1d0000 DataSize: 16 StubBufSize: 0 Allocate: 16; 	Type: 1 Name: _ZN5cling7runtime10gClingOptsE SID: 0 Offset: 0x8 flags: 66; 	Type: 1 Name: _ZN5cling7runtime6gClingE SID: 0 Offset: (nil) flags: 66; emitSection SectionID: 1 Name: .text obj addr: 0x1002151e440 new addr: 0x3fff8d1f0000 DataSize: 180 StubBufSize: 176 Allocate: 356; 	Type: 4 Name: at_quick_exit SID: 1 Offset: 0x68 flags: 66; 	Type: 4 Name: atexit SID: 1 Offset: 0x8 flags: 66; Parse relocations:; 	SectionID: 1; 		RelType: 44 Addend: -8 TargetName: .TOC.; 		SectionID: 1 Offset: 0; 		RelType: 10 Addend: 0 TargetName: __cxa_atexit; 		SectionID: 1 Offset: 48; Create a new stub function; 		RelType: 44 Addend: -8 TargetName: .TOC.; 		SectionID: 1 Offset: 96; 		RelType: 10 Addend: 0 TargetName: __cxa_atexit; 		SectionID: 1 Offset: 144; Stub function found; ----- Contents of section .data before relocations -----; 0x00003fff8d1d0000: b0 46 b9 20 00 01 00 00 44 48 b9 20 00 01 00 00; ----- Contents of section .text before relocations -----; 0x00003fff8d1f0000: 00 00 00 00 00 00 00 00 f8 ff 4c e8 14 62 42 7c; 0x00003fff8d1f0010: a6 02 08 7c 10 00 01 f8 e1 ff 21 f8 00 01 80 38; 0x00003fff8d1f0020: c6 07 84 78 b9 20 84 64 b0 46 85 60 00 00 80 38; 0x00",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8072#issuecomment-981977924:365,Access,AccessPathName,365,https://root.cern,https://github.com/root-project/root/issues/8072#issuecomment-981977924,2,['Access'],['AccessPathName']
Security,That looks correct diagnosis. Can we extend the lifetime of `clang::ExternalASTSource::Deserializing::~Deserializing` eg register a deserialization upon say `findScope` and then delay the odr hash checks after things were fully deserialized?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12062#issuecomment-1403392351:192,hash,hash,192,https://root.cern,https://github.com/root-project/root/pull/12062#issuecomment-1403392351,1,['hash'],['hash']
Security,"That's a lot of data :); In my experience many, many false positives come from helgrind not understanding ROOT::TSpinMutex and TBB concurrency. I still have no idea what the cause of the crash could be, sorry. EDIT: Imho you really need to dig deeper and try to understand what `TContext::~TContext` is doing exactly that is invalid. Is it accessing an already-deleted gDirectory? Is gDirectory sane in all threads during execution? Are multiple threads deleting the same TContext/TDirectory? And so forth.; ROOT's implicit ownership management together with globals and thread locals that are set and reset under your feet makes multi-threading hard. I spent days on problems like these. At the moment I still don't see enough evidence to pinpoint a culprit though.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1073#issuecomment-333610699:340,access,accessing,340,https://root.cern,https://github.com/root-project/root/pull/1073#issuecomment-333610699,1,['access'],['accessing']
Security,"That's great! Yes indeed the main purpose of the new test was to check that unknown arguments are kept by default and accessible to you. The case where unknown arguments are not accepted already calls `Terminate()` internally and we check that by looking at what's printed in `stderr`. The other case that needed calling `app.Run` then injecting something like `.q` it's unfeasible right now, but I take your confirmation that everything works well as a green light to close this issue. Thanks again for reporting and all your help, I will also make sure to backport the fixes so that you can benefit from them already in the next patch release :smile:",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10090#issuecomment-1068891196:118,access,accessible,118,https://root.cern,https://github.com/root-project/root/issues/10090#issuecomment-1068891196,2,"['access', 'inject']","['accessible', 'injecting']"
Security,That's intentional: we don't want to rebuild libCore because the git hash changes. The only way out would be to have `TROOT::GetGitCommit()` read a text file rather than rebuilding anything. I'll leave this open; this sounds like a useful improvement!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11287#issuecomment-1238281775:69,hash,hash,69,https://root.cern,https://github.com/root-project/root/issues/11287#issuecomment-1238281775,1,['hash'],['hash']
Security,"That's interesting. I thought some of objective-C syntax was too modern for some outdated version of macOS you're testing on, but it's ... 10.15 and C++17. Since I do not have an access to the build logs, please let me know what was wrong, I'll provide a fix.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5291#issuecomment-609371360:179,access,access,179,https://root.cern,https://github.com/root-project/root/pull/5291#issuecomment-609371360,1,['access'],['access']
Security,"That's super interesting! Many thanks for the report. I think some, but probably not all of it we can fix ""blindly"". Would it be possible to get interactive access to your big endian machine?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12426#issuecomment-1458091942:157,access,access,157,https://root.cern,https://github.com/root-project/root/issues/12426#issuecomment-1458091942,1,['access'],['access']
Security,"The ""typed object"" was never exposed to users.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3829#issuecomment-493478104:29,expose,exposed,29,https://root.cern,https://github.com/root-project/root/pull/3829#issuecomment-493478104,1,['expose'],['exposed']
Security,"The AddressSanitizer also loads the LeakSanitizer flags and even though the documentation suggests that `exitcode` can be set per sanitizer, this doesn't appear to be the case and our tests exit with code 0 after the AddressSanitizer found a problem. After this change, around 100 tests will fail due to several issues.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10005:130,sanitiz,sanitizer,130,https://root.cern,https://github.com/root-project/root/pull/10005,1,['sanitiz'],['sanitizer']
Security,"The Aggregate method was calling CheckAndFillDSColumns with an index sequence; of length 2 rather than 1 (the aggregator lambda does take 2 arguments,; but only the second corresponds to an RDF column). This resulted in; a harmless out of bounds access in a vector<bool>: two bits were checked; rather than one, but because of bit-packing the capacity of a vector<bool>; is always a multiple of 8 so this never resulted in access to invalid; memory (and because of zero-initialization, the out-of-bounds values always; happened to read to the harmless, ""correct"" value, `false`).",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6214:246,access,access,246,https://root.cern,https://github.com/root-project/root/pull/6214,2,['access'],['access']
Security,"The FileAndIndex class needs to be ordered and hashable because in `get_clustered_ranges` objects of this class are stored in a set and sorted to find, per each partition of the distributed RDataFrame, what files need to be considered.; Python classes get `__eq__` and `__hash__` methods by default, but not the ordering ones. Without this commit, `filelist` members of the `TreeRange` objects resulting from `get_clustered_ranges` would just be a 1:1 copy of the filenames that each cluster in the chain of that partition belongs to.; For example, given a tree with ten thousand entries and ten clusters split in two partitions, one would get:. Partition 0; Range of entries [0, 5000]; Filelist of the partition ['tree10000entries10clusters.root', 'tree10000entries10clusters.root', 'tree10000entries10clusters.root', 'tree10000entries10clusters.root', 'tree10000entries10clusters.root']. Partition 1; Range of entries [5000, 10000]; Filelist of the partition ['tree10000entries10clusters.root', 'tree10000entries10clusters.root', 'tree10000entries10clusters.root', 'tree10000entries10clusters.root', 'tree10000entries10clusters.root']. So effectively we would be sending ranges with one filename per cluster in the range, which would lead to wrong reads.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8637:47,hash,hashable,47,https://root.cern,https://github.com/root-project/root/pull/8637,1,['hash'],['hashable']
Security,"The LoopManager now tracks the actions that have already run. This commit is needed by the Graph drawing PR. This can't be directly tested as the LM is not exposed. To test it I used the following code, not commited. RInterface has a Test() method that just call GetAllActions() on the RLoopManager. ```; TEST_P(RDFSimpleTests, Action); {; RDataFrame rd1(8);; EXPECT_EQ(rd1.Test().size(), 0);; auto a1 = rd1.StdDev<ULong64_t>(""tdfentry_"");; EXPECT_EQ(rd1.Test().size(), 1);; auto a2 = rd1.Mean<>(""tdfentry_"");; EXPECT_EQ(rd1.Test().size(), 2);; auto a3 = rd1.Count();. EXPECT_EQ(rd1.Test().size(), 3);; *a1;; EXPECT_EQ(rd1.Test().size(), 3);; {; auto a4 = rd1.StdDev<ULong64_t>(""tdfentry_"");; EXPECT_EQ(rd1.Test().size(), 4);; }; EXPECT_EQ(rd1.Test().size(), 3);; {; auto a4 = rd1.StdDev<ULong64_t>(""tdfentry_"");; EXPECT_EQ(rd1.Test().size(), 4);; *a4;; }; EXPECT_EQ(rd1.Test().size(), 3);; }; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2470:156,expose,exposed,156,https://root.cern,https://github.com/root-project/root/pull/2470,1,['expose'],['exposed']
Security,"The RooMinimizer interface does not allow for changing the number of points on a likelihood contour.; By promoting this parameter to a default argument, this is now accessible to the user.; Doxygen was updated accordingly.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3327:165,access,accessible,165,https://root.cern,https://github.com/root-project/root/pull/3327,1,['access'],['accessible']
Security,"The TFile objects need to be closed before the ROOT files can be; deleted. Otherwise, we get errors such as these on Windows 10:. ```; Traceback (most recent call last):; File ""C:/build/night/LABEL/windows10/SPEC/default/V/master/root/tutorials/pyroot/pyroot006_tcontext_context_manager.py"", line 56, in <module>; os.remove(""pyroot006_file_{}.root"".format(i)); PermissionError: [WinError 32] The process cannot access the file because it is being used by another process: 'pyroot006_file_1.root'; CMake Error at C:/build/night/LABEL/windows10/SPEC/default/V/master/build/RootTestDriver.cmake:227 (message):; error code: 1; ```. https://lcgapp-services.cern.ch/root-jenkins/view/ROOT%20Nightly/job/root-nightly-master/LABEL=windows10,SPEC=default,V=master/lastBuild/testReport/projectroot/runtutorials/tutorial_pyroot_pyroot006_tcontext_context_manager_py/",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10378:411,access,access,411,https://root.cern,https://github.com/root-project/root/pull/10378,1,['access'],['access']
Security,"The TRandom3 generator was observed to fail; a very simple test on the SetSeed/GetSeed interface:. ```; gRandom->SetSeed(11);; auto a = gRandom->GetSeed();; gRandom->SetSeed(12);; auto b = gRandom->GetSeed();; assert(a != b);; ```. Indeed a `GetSeed()` following any `SetSeed(seed)` call always returns the magic number 624. This is because in the current implementation. `GetSeed() { return fMT[fCount624]; }`. we access memory location `fMT[624]` which does not exist in fMT ... and so the value of fCount624 is returned, which happens to be `624`. This commit fixes this bug by imposing an index range between 0 and 623.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14135:415,access,access,415,https://root.cern,https://github.com/root-project/root/pull/14135,1,['access'],['access']
Security,"The TestData target is currently declared ALL, which means it is always executed during the build.; However, the data it downloads is only used for running the stressProof test, so if this test is not run the downloaded data files are not needed. By removing the TestData target from ALL and making it a requirement of the test-stressproof target instead, the files are only downloaded if they are needed. Disabling the stressProof test now also disables the download of the data files. This is important when building in an environment without network access.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/402:553,access,access,553,https://root.cern,https://github.com/root-project/root/pull/402,1,['access'],['access']
Security,"The _miss cache_, implemented in this pull request, implements an optimization when the TTreeCache fails to work. The miss cache will keep track of any branch that has been accessed; when there is a TTC miss, it automatically fetches the current basket for all active branches. This should have a worst case read size equal to the size of the file's cluster size, but potentially a significant savings in the number of IO operations. The latter is extremely useful if we're doing IO on high-latency links. This optimization works well for the ""trigger pattern,"" where the user may examine a number of branches and, when the event contents for those branches passes a particular filter, reads out the remaining branches. If there are 100 additional branches, this would do all reads in a single network round-trip as opposed to 100 round trips. The approach has served us well in CMS and been utilized as a layer on top of ROOT for about 3 years. Unfortunately, we must iterate through a set of branches and find the correct basket. This is not necessarily a cheap CPU operation and may be too expensive if the underlying filesystem is SSD-based. Hence, we turn this optimization off by default.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/240:173,access,accessed,173,https://root.cern,https://github.com/root-project/root/pull/240,1,['access'],['accessed']
Security,The `.ref` file in roottest now depends on the presence of `root7`... I'll see how to inject this knowledge in roottest,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13090#issuecomment-1665296956:86,inject,inject,86,https://root.cern,https://github.com/root-project/root/pull/13090#issuecomment-1665296956,1,['inject'],['inject']
Security,"The `RooAbsPdf::_normSet` member should be not used, because it can; happen in many situations that the RooArgSet it points to gets out of; scope and then you get a crash. There were several cases reported on the; forum where this happened with a RooAddPdf recently, becaues with ROOT; 6.26 some logic of the RooAddPdf got changed to better deal with empty; normalization sets. This commit avoids using `_normSet` by overriding `getValV` in RooAddPdf; directly, instead of `evaluate()`. This way, it has access to the actual; normalization set that is passed to the call to `getVal()`. For the batch mode, we now pass `nullptr` to; `RooAddPdf::getNormAndCache()` instead of `_normSet`. In this case it; falls back to using `_copyOfLastNormSet`, which is guaranteed to still; be valid because it's a unique_ptr owned by the RooAddPdf itself. Needs to be backported to ROOT 6.26.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10550:504,access,access,504,https://root.cern,https://github.com/root-project/root/pull/10550,1,['access'],['access']
Security,The `SealPage()` signature is already rather large and it will grow more with page checksums. So I felt it's time to turn the parameters into a config struct.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15894:83,checksum,checksums,83,https://root.cern,https://github.com/root-project/root/pull/15894,1,['checksum'],['checksums']
Security,"The `TestGauss` unit tests in roottest are failing with Jonas' ROOT; build (gcc 10 on Arch Linux). The failure was tracked down to a; `nullptr` dereferencing in when accessing `RunContext::spans`. The origin of the `nullptr` is in `RooVectorDataStore::getBatches`,; where the `unordered_map` with pointers to the variables is filled via; `unordered_map::emplace`. For some reason, the key becomes a nullptr; *right after emplacing* ([link to code](https://github.com/root-project/root/blob/https://github.com/root-project/root/blob/9296e5ed912b3010456fa4b50db77f2c4c97a09a/roofit/roofitcore/src/RooVectorDataStore.cxx#L1345/roofit/roofitcore/src/RooVectorDataStore.cxx#L1345)). For some other reason, wrapping the `RooAbsReal const*` pointer in a; struct that is used as the key for `RunContext::spans` solves the; problem. This is implemented in this commit. This PR is more of a draft PR for now, because before merging I would really like to understand what's going on.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8590:166,access,accessing,166,https://root.cern,https://github.com/root-project/root/pull/8590,1,['access'],['accessing']
Security,"The `df103_NanoAODHiggsAnalysis` tutorial, already available in C++, has been converted to PyROOT. In this tutorial, many functions are called as arguments to nodes in the RDataFrame computational graph. In Python, these could be either written as multiline strings and then exposed to the C++ interpeter one by one with `gInterpreter.Processline()`, or put all together in one C++ header which is then declared to the interpreter via `gInterpreter.Declare()`. This second approach has been pursued, thus there are two files making up the Python version of the tutorial: one `.h` file for the header and one `.py` file for the analysis itself.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4019:275,expose,exposed,275,https://root.cern,https://github.com/root-project/root/pull/4019,1,['expose'],['exposed']
Security,The access to the static class member TGeoManager::fgDefaultUnits in an inline function causes problem.; This PR moves the access to this class member to the compiled code.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7191:4,access,access,4,https://root.cern,https://github.com/root-project/root/pull/7191,4,['access'],['access']
Security,"The backport action does not mesh well with our repository. As seen in:; ```; Warning: Your repository allows merge commits and rebase merging.; However, Backport only supports rebased and merged pull requests with a single commit and squashed and merged pull requests.; ```; and then later; ```; /usr/bin/git push --set-upstream origin backport-15408-to-v6-32-00-patches; remote: error: GH006: Protected branch update failed for refs/heads/backport-15408-to-v6-32-00-patches. ; remote: error: This branch must not contain merge commits. You're not authorized to push to this branch. Visit https://docs.github.com/repositories/configuring-branches-and-merges-in-your-repository/managing-protected-branches/about-protected-branches for more information. ; To https://github.com/root-project/root.git; ! [remote rejected] backport-15408-to-v6-32-00-patches -> backport-15408-to-v6-32-00-patches (protected branch hook declined); error: failed to push some refs to 'https://github.com/root-project/root.git'; Error: Error: The process '/usr/bin/git' failed with exit code 1; ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15388#issuecomment-2101271804:549,authoriz,authorized,549,https://root.cern,https://github.com/root-project/root/pull/15388#issuecomment-2101271804,1,['authoriz'],['authorized']
Security,The bogus XML designation causes the file to fail XML diagnostic tests. Test description:; Check that XML files included in the RPM payload are well-formed. ======================================== Test Output ========================================. xml:; ----. Result: VERIFY; 1) /usr/share/doc/root/tutorials/xml/person.dtd is not a well-formed XML file in root-tutorial on noarch. Waiver Authorization: Anyone. Details:; Extra content at the end of the document. Suggested Remedy:; Correct the reported errors in the XML document,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11646:393,Authoriz,Authorization,393,https://root.cern,https://github.com/root-project/root/pull/11646,1,['Authoriz'],['Authorization']
Security,"The checksum should apriori not be changing as a consequence of refactoring (so the refactoring and the behavior change (if it is warranted) should be separate commits. . If/when the checksum changes, we need to understand **exactly** why and verify that this is because the information in more precise/better than before (and not because of a bug .. eg. in the failing example I don't see (looking superficially) any array being involved). Note that a checksum change is a big deal and means that one would also need to update TStreamerInfo to allow a class with the same version number with 2 different checksums. Otherwise the users would need to upgrade all the version numbers of their classes (that are affected).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5283#issuecomment-608589697:4,checksum,checksum,4,https://root.cern,https://github.com/root-project/root/pull/5283#issuecomment-608589697,4,['checksum'],"['checksum', 'checksums']"
Security,"The compiler invokations run by ACLiC were not updated in case of a build with address sanitizer options enabled. This resulted in spurious warnings of the sort:. ```; $: root -q -l -b test.C+. Processing test.C+...; Info in <TUnixSystem::ACLiC>: creating shared library /tmp/./test_C.so; /usr/bin/ld: /lib64/libasan.so.8: warning: the use of `tmpnam' is dangerous, better use `mkstemp'; /usr/bin/ld: /lib64/libasan.so.8: warning: the use of `tempnam' is dangerous, better use `mkstemp'; /usr/bin/ld: /lib64/libasan.so.8: warning: the use of `tmpnam_r' is dangerous, better use `mkstemp'; /usr/bin/ld: /lib64/libasan.so.8: warning: the use of `tmpnam' is dangerous, better use `mkstemp'; /usr/bin/ld: /lib64/libasan.so.8: warning: the use of `tempnam' is dangerous, better use `mkstemp'; /usr/bin/ld: /lib64/libasan.so.8: warning: the use of `tmpnam_r' is dangerous, better use `mkstemp'; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15840:87,sanitiz,sanitizer,87,https://root.cern,https://github.com/root-project/root/pull/15840,1,['sanitiz'],['sanitizer']
Security,"The current API forces the user to copy the entire fColumnRanges map and do a map lookup if they want to iterate the column ranges. With this change, one can simply access the underlying map directly, avoiding extra work in most cases. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16022:165,access,access,165,https://root.cern,https://github.com/root-project/root/pull/16022,1,['access'],['access']
Security,"The custom hash table implementation RooHashTable is only used in; RooLinkedList for a transient data member. By using std::unordered_map; instead, RooHashTable gets obsolete and could be deprecated.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7818:11,hash,hash,11,https://root.cern,https://github.com/root-project/root/pull/7818,1,['hash'],['hash']
Security,"The dependency is not hidden in this case, it's wanted. How could I check integrity of a file in a separate test than the one that creates the file otherwise? One needs to depend on the other. The other failed tests are probably similar. I think it's fine to add the randomization on a case-by-case basis. I don't think that just having tests that depend on one another is bad per se, only if the dependency is not intentional.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4029#issuecomment-508014052:74,integrity,integrity,74,https://root.cern,https://github.com/root-project/root/pull/4029#issuecomment-508014052,1,['integrity'],['integrity']
Security,"The failure in `test_snapshot_manytasks` is due to the following issue, introduced by this PR (and the previous failure in `test_snapshot` on 32 and 64 bit might be due to the same issue:. At the beginning of a task a new input TChain replaced the old input; TChain for that _thread_ in TTreeProcessorMT, causing a destruction of; the previous _thread-local_ TTree.; At the same time, the initialization of a new task _in a different; thread_ could delete the output TTree of a multi-thread Snapshot; action, which was listed in the fClones of the input TTree.; ; This race caused the input ~TTree to access an output tree just; after its deletion, in TTree::CopyAddresses.; ; The root cause of this issue is that TTreeProcessorMT uses thread-local; variables while RDataFrame uses processing slots which threads can; exchange between themselves. I see two options to solve this:; 1. we introduce a `FinalizeTask` method in all `RDataFrame` action helpers, and we use it in `SnapshotHelperMT` to delete the output trees when we are sure that the input tree is still in scope. This is quite easy.; 2. we have `TTreeProcessorMT` delete its thread-local `TChain`s at the end of one task, not at the beginning of the next task in that thread. @etejedor @dpiparo what do you think?; I know @amadio would be happy if we introduced a `FinalizeTask` method in symmetry with the `InitTask` that we already have",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2197#issuecomment-398737985:601,access,access,601,https://root.cern,https://github.com/root-project/root/pull/2197#issuecomment-398737985,1,['access'],['access']
Security,"The failure is unrelated:; ```; Error in <DavixOpen>: can not open file ""https://root.cern/files/tmva101.root"" with davix: Failure (Neon): Server certificate verification failed: issuer is not trusted after 3 attempts (6); ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4583#issuecomment-547444966:146,certificate,certificate,146,https://root.cern,https://github.com/root-project/root/pull/4583#issuecomment-547444966,1,['certificate'],['certificate']
Security,"The feature test __cpp_lib_three_way_comparison is for library support of the three-way comparison. libc++ doesn't expose this yet, presumably because the operator has not been added yet for all classes. However, some classes already use it, which requires us to implement the operator as discussed in https://github.com/root-project/root/pull/12525. (cherry picked from commit b85231d2ad62645f0fe7291a64284f61bb8a83c2)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12803:115,expose,expose,115,https://root.cern,https://github.com/root-project/root/pull/12803,1,['expose'],['expose']
Security,"The feature test `__cpp_lib_three_way_comparison` is for library support of the three-way comparison. libc++ doesn't expose this yet, presumably because the operator has not been added yet for all classes. However, some classes already use it, which requires us to implement the operator as discussed in https://github.com/root-project/root/pull/12525.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12792:117,expose,expose,117,https://root.cern,https://github.com/root-project/root/pull/12792,1,['expose'],['expose']
Security,"The field range of a view is determined on construction. If the field is empty (no columns), the field range remains undefined. Currently, in this case the creation of the view fails. Change this to instead only fail on the attempt to actually access the field range (as opposed to, e.g., iterate over the entry range of the empty field). Backport of #16832 . Fixes #16826",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16833:244,access,access,244,https://root.cern,https://github.com/root-project/root/pull/16833,1,['access'],['access']
Security,"The field range of a view is determined on construction. If the field is empty (no columns), the field range remains undefined. Currently, in this case the creation of the view fails. Change this to instead only fail on the attempt to actually access the field range (as opposed to, e.g., iterate over the entry range of the empty field). Fixes #16826 . @amete FYI",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16832:244,access,access,244,https://root.cern,https://github.com/root-project/root/pull/16832,1,['access'],['access']
Security,"The file has arrived on lcgpackages, with the following name and unchanged hash:; ```; $ sha256sum xrootd-5.4.3.tar.gz; 56a29c88232f2f384e151b148fcaaa8d8db5c5fdc4615193978c8f4f3a99663c xrootd-5.4.3.tar.gz; ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10725#issuecomment-1152061176:75,hash,hash,75,https://root.cern,https://github.com/root-project/root/pull/10725#issuecomment-1152061176,1,['hash'],['hash']
Security,"The following test works on my machine with the latest ROOT master; ```cpp; #include <TFile.h>; #include <TChain.h>. #include <iostream>; #include <memory>. constexpr auto netFile = ""root://eospublic.cern.ch//eos//root-eos//h1//dstarmb.root"";. void testWithFile(); {; std::unique_ptr<TFile> f{TFile::Open(netFile)};; f->ls();; }. void testWithChain(); {; TChain c{""h42""};; c.Add(netFile);; std::cout << ""Number of entries in the chain: "" << c.GetEntries() << ""\n"";; }. void testWithChainLocalName(); {; TChain c;; std::string fullpath{netFile};; fullpath += ""?#h42"";; c.Add(fullpath.c_str());; std::cout << ""Number of entries in the chain: "" << c.GetEntries() << ""\n"";; }. int main(); {; testWithFile();; testWithChain();; testWithChainLocalName();; }; ```. With output; ```; ./repro.out; TNetXNGFile**		root://eospublic.cern.ch//eos/root-eos/h1/dstarmb.root	HBOOK file: dstarmb.hbook converted to ROOT; TNetXNGFile*		root://eospublic.cern.ch//eos/root-eos/h1/dstarmb.root	HBOOK file: dstarmb.hbook converted to ROOT; KEY: TTree	h42;1	dstar; Number of entries in the chain: 21920; Number of entries in the chain: 21920; ```. I could not have access to the same file (under LHCb EOS), but I used another public EOS file and it should be equivalent. I will try to build an older version of ROOT and see if the problem was present at the time with the same file.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7159#issuecomment-1941574958:1142,access,access,1142,https://root.cern,https://github.com/root-project/root/issues/7159#issuecomment-1941574958,1,['access'],['access']
Security,"The functionality of Cache is all there. The only issue remaining is caching a cached TDF (let's call this latter ""A"") without destroying the cache of the cached (meaning ""A""). This is a side effect of the optimisation in place to deliver data with zero-copies to transformations and actions requesting it. As for testing, checking the caching works with IMT on needs to be done. The extra mile would consist in checking statically that T does not have a copy constructor and react. How to react is not completely clear to me yet. There are two ways perhaps to solve this problem: 1. Act on the container, keeping in mind that the containers which form the cache must support random access for MT execution. 2. Act on the contained type, wrapping objects in some way.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1056#issuecomment-332682497:683,access,access,683,https://root.cern,https://github.com/root-project/root/pull/1056#issuecomment-332682497,2,['access'],['access']
Security,"The functionality to fit pulls in the RooMCStudy with a Gaussian is; widely used, and it's not good that it uses a RooGenericPdf because of; the numeric integration. Probably the RooGaussian was not used because unlike the RooMCStudy, the; RooGaussian is not in RooFitCore and using it would result in a circular; dependency. This commit suggests a way to use the RooGaussian anyway, via the; RooWorkspace factory interface. The PR also includes a second commit that gets rid of manual memory management in the `RooMCStudy` class, which also affects the friend class `RooAbsMCStudyModule` that accesses some protected members of the RooMCStudy.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11777:594,access,accesses,594,https://root.cern,https://github.com/root-project/root/pull/11777,1,['access'],['accesses']
Security,"The global module index represents an efficient on-disk hash table which stores identifier->module mapping. Every time clang finds a unknown identifier we are informed and we can load the corresponding module on demand. This way we can provide minimal set of loaded modules. Currently, we see that for hsimple.C only the half of the modules are loaded. This can be further improved because we currently load all modules which have an identifier, that is when looking for (for example TPad) we will load all modules which have the identifier TPad, including modules which contain only a forward declaration of it.; ; Kudos Arpitha Raghunandan (@arpi-r)!. We still need some performance measurements but the preliminary results are promising. Performance; ===. Methodology; ---. We have a forwarding root.exe which essentially calls /usr/bin/time -v root.exe $@. We have processed and stored this information in csv files. We have run in three modes:; 1) root master without modules (modulesoff); 2) root master with modules (moduleson); 3) root master with this PR with modules (gmi). Run on `Ubuntu 18.10 on Intel® Core™ i5-8250U CPU @ 1.60GHz × 8`. Results Interpretation; ---; A general comparison between 2) and 3) show that this PR makes ROOT about 3% faster and 25% more memory efficient. A general comparison between 1) and 3) shows that modules are still less efficient in a few cases which is expected because the PR loads more modules than it should. This will be addressed in subsequent PRs. A good trend is that some test already show that 3) is better than 1). The raw data could be found [here](https://docs.google.com/spreadsheets/d/12tZ_tmenR7fytcZpigfLOarNq1tIqPubTXWWMwz8lJg/edit#gid=1476035460). [work was done by Arpitha Raghunandan (@arpi-r)]. Depends on #4005.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4016:56,hash,hash,56,https://root.cern,https://github.com/root-project/root/pull/4016,1,['hash'],['hash']
Security,"The goal of the class is to be an (almost) drop in replacement for SmallVector and std::vector when those are presized and filled later, as it happens in SourceManager and ASTReader. By doing so, sparsely accessed PagedVector can profit from reduced memory footprint. Co-authored-by: Jonas Hahnfeld <jonas.hahnfeld@cern.ch>. (cherry picked from commit 9c7bac05ea52cea6757f083fec8e2b794f8b79d6, backport of https://github.com/root-project/root/pull/13808)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14411:205,access,accessed,205,https://root.cern,https://github.com/root-project/root/pull/14411,1,['access'],['accessed']
Security,The hash was wrong and there was a typo in the filename in the lcg repo. Now retrying.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2966#issuecomment-438794759:4,hash,hash,4,https://root.cern,https://github.com/root-project/root/pull/2966#issuecomment-438794759,1,['hash'],['hash']
Security,"The idea is to have an identifier that describes the used dataset (name of the TTree or similar), make this info accessible as public API and also add it to `Describe`. See the discussion here:. https://github.com/root-project/root/issues/7561#issuecomment-817629082. https://github.com/root-project/root/issues/7561#issuecomment-817717882. Remember to make the identifier returned by this API subject to change because it's for interactive use and not to be parsed automatically.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7829:113,access,accessible,113,https://root.cern,https://github.com/root-project/root/issues/7829,1,['access'],['accessible']
Security,"The idea is to have an identifier that describes the used datasource (or TTree or simple DF), make this info accessible as public API and also add it to `Describe`. See the discussion here:. https://github.com/root-project/root/issues/7561#issuecomment-817629082. https://github.com/root-project/root/issues/7561#issuecomment-817717882. Remember to make the identifier returned by this API subject to change because it's for interactive use and not to be parsed automatically.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7828:109,access,accessible,109,https://root.cern,https://github.com/root-project/root/issues/7828,1,['access'],['accessible']
Security,"The idea was to have an executable that is linked statically against ROOT and other dependencies so that it can be used as the legacy version of a certain software package which is being retired in favour of new software. For example in order to run it using a gitlab runner for various cross-checks without the need to install root from source (multiple times even, for every testing stage) or ship it together with huge CentOS images. For the gitlab this just seems to be almost unfeasible, even with existing root docker containers from the docker hub. I understand that if ROOT was never meant to be used in this way, there just won't be resources to dedicate to this. So I will probably have to find a way to access such an exectuable from somewhere else while running those tests or run them offline. Nevertheless, having the `BUILD_SHARED_LIBS` flag available now can be misleading, that point stands on its own of course",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8448#issuecomment-865043312:714,access,access,714,https://root.cern,https://github.com/root-project/root/issues/8448#issuecomment-865043312,1,['access'],['access']
Security,"The inner logic is the same as TEntryList::Enter(entry, treepointer); but we assume that `entry` is always a local entry, corresponding to; the treename and filename passed as argument. This is useful e.g. in RDataFrame where we can tell an output TEntryList the tree and file name, but the actual TTree pointer is not accessible.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10186:319,access,accessible,319,https://root.cern,https://github.com/root-project/root/pull/10186,1,['access'],['accessible']
Security,"The interfaces of `RooPoisson` and `RooDataSet` are extended to support some of the new developments in other PRs:. * getters for `x` and `mean` of RooPoisson (needed by https://github.com/root-project/root/pull/8944); * `RooDataSet::weightVar()` to access weight variable if set (needed by https://github.com/root-project/root/pull/8944, https://github.com/root-project/root/pull/9004)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9337:250,access,access,250,https://root.cern,https://github.com/root-project/root/pull/9337,1,['access'],['access']
Security,"The issue is initially reported and discussed on the ROOT forum [here](https://root-forum.cern.ch/t/rdataframe-tree-friends-branches-with-identical-variable-name-but-different-types/42701/4). ### Describe the bug. RDataFrame has two tree friends.; Both tree friends have a branch with identical name.; Type of a branch in the 1st friend tree: XYZVector; Type of a branch in the 2nd friend tree: vector\<XYZTVector>. 1st friend tree is attached to RDataFrame before 2nd friend tree.; Access of 2nd friend tree branch results in error due to unexpected type of the branch assumed by RDataFrame as shown in the stand alone example bellow. ### To Reproduce. Run this stand alone example:. ```; import ROOT. vectors = '''; #include ""Math/Vector3D.h""; #include ""Math/Vector4D.h""; #include ""TFile.h""; #include ""TTree.h""; #include <vector>; using namespace ROOT::Math;; using namespace ROOT::VecOps;. RVec <double> getArrZ(const RVec<XYZTVector>& vec){; auto getItemZ = [](const XYZTVector& item) { return item.Z(); };; return Map(vec, getItemZ);; }. '''. ROOT.gInterpreter.Declare(vectors). if __name__ == ""__main__"":; ROOT.RDataFrame(1).Define(""vec"", ""XYZVector(10, 10, 10)"").Snapshot(""Particle"", ""f1.root""); ROOT.RDataFrame(1).Define(""vec"", ""XYZVector(20, 20, 20)"").Snapshot(""Cluster"", ""f2.root""); ROOT.RDataFrame(1).Define(""vec"", ""std::vector<XYZTVector>{XYZTVector(30, 30, 30, 30)}"").Snapshot(""Vertex"", ""f3.root""). ch1 = ROOT.TChain(""Particle""); ch1.Add(""f1.root""); ch2 = ROOT.TChain(""Cluster""); ch2.Add(""f2.root""); ch3 = ROOT.TChain(""Vertex""); ch3.Add(""f3.root""). ch1.AddFriend(ch2, ""cluster""); ch1.AddFriend(ch3, ""vertex""). df = ROOT.RDataFrame(ch1); print(df.Define(""particle_z"", ""vec.Z()"").Histo1D(""particle_z"").GetMean()); print(df.Define(""cluster_z"", ""cluster.vec.Z()"").Histo1D(""cluster_z"").GetMean()); print(df.Define(""vertex_z"", ""getArrZ(vertex.vec)"").Histo1D(""vertex_z"").GetMean()); ```. which results in the error on 3rd print. Full output:. ```; 10.0; 20.0; input_line_99:2:142: error: no matc",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6944:483,Access,Access,483,https://root.cern,https://github.com/root-project/root/issues/6944,1,['Access'],['Access']
Security,"The jupyter notebook test fails because of:; ```; [NbConvertApp] ERROR | Permissions assignment failed for secure file: '/tmp/tmpnbhpku44.json'. Got '0o655' instead of '0o0600'.; ```; This issue is mentioned at https://github.com/jupyter/notebook/issues/5058. For me setting `JUPYTER_RUNTIME_DIR` did not work (it did not change the location of the file). The problem was ""solved"" by setting:; ```; JUPYTER_ALLOW_INSECURE_WRITES=true; ```; at the price of seeing this message:; ```; WARNING: Insecure writes have been enabled via environment variable 'JUPYTER_ALLOW_INSECURE_WRITES'! If this is not intended, remove the variable or set its value to 'False'.; ```. This is possibly due to my docker (well I mean `podman`) to be configured to use the ""overlay"" driver. List of test:; ```; 1564 - roottest-python-JupyROOT-importROOT_notebook (Failed); 1565 - roottest-python-JupyROOT-simpleCppMagic_notebook (Failed); 1566 - roottest-python-JupyROOT-thread_local_notebook (Failed); 1567 - roottest-python-JupyROOT-ROOT_kernel_notebook (Failed); 1568 - roottest-python-JupyROOT-tpython_notebook (Failed); ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/16242#issuecomment-2292474568:107,secur,secure,107,https://root.cern,https://github.com/root-project/root/issues/16242#issuecomment-2292474568,1,['secur'],['secure']
Security,"The last commit adds the dependencies for the TMVA GNN unit tests to the docker images via the `requirements.txt`. However, this will only have a delayed effect until the images are re-built. Therefore, we can't validate for now that the tests actually work. Once the missing packages make it into the CI images, a PR should be opened to revert this commit. Backport of https://github.com/root-project/root/pull/15512.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15583:212,validat,validate,212,https://root.cern,https://github.com/root-project/root/pull/15583,2,['validat'],['validate']
Security,"The latest PR integrates the layer as `ROOT.RDF.Experimental.Distributed`. A user can type; ```; import ROOT; RDataFrame = ROOT.RDF.Experimental.Distributed.Spark.RDataFrame; df = RDataFrame(""mytree"",""myfile.root""); ```; To get an RDataFrame that can run its computation graph distributedly on a Spark cluster. A generic implementation of the injection of python modules into ROOT or its namespaces will be done in another PR",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7139#issuecomment-778289815:343,inject,injection,343,https://root.cern,https://github.com/root-project/root/pull/7139#issuecomment-778289815,1,['inject'],['injection']
Security,"The latest linked PR attempts to fix the second part of this issue. A new test is added to check that the unknown arguments are kept and accessible. As for test 3 described above, I'm not sure how to implement it (i.e. how to call `app.Run` and then stop the application programmatically without user input).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10090#issuecomment-1066552773:137,access,accessible,137,https://root.cern,https://github.com/root-project/root/issues/10090#issuecomment-1066552773,1,['access'],['accessible']
Security,"The lexical structure of formal languages involves characters that are not allowed in identifiers and are not whitespace, but that have some special lexical significance other than being literal characters (such as in string literals) or ignored (such as in comments). Examples of characters with syntactic use include:. - decimal marks in numeric literals; - arithmetic operators, such as +, -, *, /; - parentheses and other brackets; - characters in comment delimiters, such as #, /*, --, or ⍝; - quotation marks delimiting strings; - characters such as \ introducing escape sequences. It is useful to bound the set of characters with syntactic use. This makes it possible to build tools that handle source code, but do not validate it, such as syntax highlighters, in a forward-compatible way. The main question here is what to do when a string contains characters with syntactic use. To document it?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14404#issuecomment-1943706176:726,validat,validate,726,https://root.cern,https://github.com/root-project/root/issues/14404#issuecomment-1943706176,1,['validat'],['validate']
Security,"The line. https://root.cern.ch/root/html606/TH1_8cxx_source.html#l00728. is thread ""safe"" because the container used is itself looking the access see:. https://github.com/root-project/root/blob/e0e721efc69b9b106a7b251caa94555ad195d945/core/base/src/TDirectory.cxx#L241. and because gDirectory is thread local. Of course, since TH1::AddDirectoryStatus() is global state, by definition the behavior can be affected by other threads. Humm actually, there *is* a problem. In order that code to really be thread safe `TH1::fgAddDirectory` needs to be an `std::atomic`",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6493#issuecomment-700736790:139,access,access,139,https://root.cern,https://github.com/root-project/root/pull/6493#issuecomment-700736790,1,['access'],['access']
Security,"The link **Getting started with Root** redirects to [this page](https://root.cern/getting-started) which is no longer accessible, it should redirect [here](https://root.cern/get_started).",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6976:118,access,accessible,118,https://root.cern,https://github.com/root-project/root/pull/6976,1,['access'],['accessible']
Security,The list returned from TROOT::GetListOfFunctions needs to be protected; from concurrent access to allow use of TFormulas on different; threads.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/24:88,access,access,88,https://root.cern,https://github.com/root-project/root/pull/24,1,['access'],['access']
Security,The logic for summing over histogram bins in different ranges used in; RooHistPdf is also implemented in RooParamHistFunc. This means the; range is now considered when computing integrals of RooParamHistFunc. RooParamHistFunc allows you to scale the counts in each bin with a; parameter. The interface of RooDataHist::sum was extended with a; function parameter to inject the logic of scaling the bin weight; depending on the bin index. This commit partly fixes issue #7182. We still need to implement the; range feature in RooHistFunc.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7198:365,inject,inject,365,https://root.cern,https://github.com/root-project/root/pull/7198,1,['inject'],['inject']
Security,"The logic from RooAbsArg is copied into RooAbsData. This allows to use the hash-map functionality of RooLinkedList; for RooAbsData objects, as the namePtr mechanism allows to track; renaming and therefore avoids false negatives that result in; linear scans of the collection. In turn, this improves significantly the run-time of large workspace; imports (x2 to x4), which were dominated by embeddedData() calls.; This patch is based on the JSON tool use-case, but presumably will; significantly also improve other heavy uses of workspace import, such; as Higgs combination workspaces manipulation workflows. The cost of one additional pointer per RooAbsData object seems a low; price to pay.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9684:75,hash,hash-map,75,https://root.cern,https://github.com/root-project/root/pull/9684,1,['hash'],['hash-map']
Security,"The maximum unsigned int value was used for an integer resulting in a negative integer value and this was causing a bug when accessing the numfold parameter in the CvSplit expression formula.; The bug is present when the parameter ""NumFold"" is not used in the SPlit expression.; See https://root-forum.cern.ch/t/tmva-crossvalidation-crashes-on-destructor-pyroot/51195",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11267:125,access,accessing,125,https://root.cern,https://github.com/root-project/root/pull/11267,1,['access'],['accessing']
Security,"The new internal class is TReentrantRWLock access externally via the abstract interface TVirtualRWMutex. The next steps after this is to start using by:; 1) Replace gROOTMutex by a TRWMutexImp; 2) Add R__READLOCKGUARD; 3) Add a TListWithRWLock and THashListWithRWLock; 4) Use those in TROOT; 5) Remove current external locks for those ROOT lists (in particular the ListOfFiles); 6) Update all RecursiveRemove implementation (in particular TCling::RecursiveRemove, without update it destroys scalability) to make use of the Read/Write lock.; 7) Introduce scalability test on RecursiveRemove",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/676:43,access,access,43,https://root.cern,https://github.com/root-project/root/pull/676,1,['access'],['access']
Security,The newly added `std::set` test exposed a new issue: `std::set` is not working in windows PyROOT.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14669#issuecomment-1943317846:32,expose,exposed,32,https://root.cern,https://github.com/root-project/root/pull/14669#issuecomment-1943317846,1,['expose'],['exposed']
Security,"The newly integrated cross validation has suffered two seemingly random failures. Reported [here](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/15871/testReport/projectroot.tmva.tmva.test/crossvalidation/TMVA_CrossValidation_Serialise/) and [here](https://epsft-jenkins.cern.ch/job/root-incremental-master-noimt/BUILDTYPE=Debug,COMPILER=gcc49,LABEL=centos7/1803/testReport/projectroot.tmva.tmva.test/crossvalidation/TMVA_CrossValidation_Serialise/). The root cause is still not properly understood, but this patch addresses two issues discovered by valgrind and which may be related.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1568:27,validat,validation,27,https://root.cern,https://github.com/root-project/root/pull/1568,1,['validat'],['validation']
Security,"The officially supported way to build LLVM/Clang as a shared library is via the LLVM_BUILD_LLVM_DYLIB and LLVM_LINK_LLVM_DYLIB CMake options (see: https://llvm.org/docs/BuildingADistribution.html). When built this way, the whole of Clang API is exposed as a shared library (libclang-cpp.so). * CMakeLists.txt: Query if we're in shared mode via llvm-config, and register the result as LLVM_LIB_IS_SHARED.; [LLVM_LIB_IS_SHARED] <target_link_libraries>: Use the PUBLIC interface of the LLVM shared library.; * lib/Interpreter/CMakeLists.txt [LLVM_LIB_IS_SHARED]: When defined, replace the individual Clang components by clang-cpp.; * lib/MetaProcessor/CMakeLists.txt: Likewise.; * lib/Utils/CMakeLists.txt: Likewise.; * tools/Jupyter/CMakeLists.txt: Likewise.; * tools/driver/CMakeLists.txt: Likewise.; * tools/libcling/CMakeLists.txt: Likewise. Fixes: <https://github.com/root-project/cling/issues/430>. - [x ] tested changes locally; -> Yes, using the Guix packages for building cling. This PR fixes https://github.com/root-project/cling/issues/430",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15563:245,expose,exposed,245,https://root.cern,https://github.com/root-project/root/pull/15563,1,['expose'],['exposed']
Security,"The operations done by the LookupHelper are costly in both memory and; performance. Almost every operation requires memory allocation and parsing; of often non-trivial C++ code. Unfortunately, the LookupHelper is used very intensively by rootcling and; ROOT. The callers usually do not use any caching mechanisms and redo the; expensive operations over and over even though the answer is known to be; the same as before. For instance, building the dictionary of shows:. ```; MathCore:; Cached entries: 217; Total parse requests: 54051; Cache hits: 53834; TreePlayer:; Cached entries: 183; Total parse requests: 57697; Cache hits: 57514; ```. This patch introduces the first set of caching functionality. In; particular, each LookupHelper::find* function allocates a memory buffer; which is then stored in the clang::SourceManager. We hash the buffer; content and keep a mapping between a hash and FileID and next time we; encounter the same content we do not allocate a new FileID but reuse the; old one. We see decrease in memory footprint by 7% for non-cxxmodules ROOT. For cxxmodules we see significant reduction of the pcm sizes (by half); which translates into rss improvements:. ```; master before:; cpu time = 0.291462 seconds; sys time = 0.064409 seconds; res memory = 345.816 Mbytes; vir memory = 573.508 Mbytes; master after:; cpu time = 0.235828 seconds; sys time = 0.098327 seconds; res memory = 260.012 Mbytes; vir memory = 377.945 Mbytes; ```. Patch by Yuka Takahashi and me.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2483:834,hash,hash,834,https://root.cern,https://github.com/root-project/root/pull/2483,2,['hash'],['hash']
Security,"The order in which declarations are removed makes a difference, e.g. `MaybeRemoveDeclFromModule()` may require access to type information to make up the mangled name. Thus, we segregate declarations to be removed in `TagDecl`s (i.e., struct / union / class / enum) and other declarations. Removal of `TagDecl`s is deferred until all the other declarations have been processed. Declarations in each group are iterated in reverse order. ## Checklist:; - [x] tested changes locally; - [x] updated the docs (if necessary). This PR fixes #12457.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12853:111,access,access,111,https://root.cern,https://github.com/root-project/root/pull/12853,1,['access'],['access']
Security,"The order in which declarations are removed makes a difference, e.g. `MaybeRemoveDeclFromModule()` may require access to type information to make up the mangled name. Thus, we segregate declarations to be removed in `TagDecl`s (i.e., struct / union / class / enum) and other declarations. Removal of `TagDecl`s is deferred until all the other declarations have been processed. Declarations in each group are iterated in reverse order. This PR is a backport of https://github.com/root-project/root/pull/12853 to v6.28. ## Checklist:; - [x] tested changes locally; - [x] updated the docs (if necessary). This PR fixes #12457.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12854:111,access,access,111,https://root.cern,https://github.com/root-project/root/pull/12854,1,['access'],['access']
Security,"The original issue is with some python tutorial failing on macOS nodes due to; ```; <TNetXNGFile::Open>: [FATAL] Auth failed; ```; Which in turn is due to a failure in loading some xrootd security libraries, among which; ```; [Error ][Utility ] Unable to pre-load libXrdSecpwd.so: Plugin unable to load libXrdSecpwd-4.so; dlopen(libXrdSecpwd-4.so, 256): image not found; ```. This happens because the library depends on other libraries (`libXrdCrypto`, `libXrdUtils`) and cannot find them since the `@rpath` palceholder is not substituted with the correct path to the libraries directory at runtime.; While this is true for the xrootd libraries in `build/lib`, it's not for the ones in `build/XROOTD-prefix/../src` which have the `LC_RPATH` variable set. The difference can be shown with `otool -l`; ```; $ otool -l build/lib/libXrdSecpwd-4.so > libXrdSecpwd_buildlib.txt; $ otool -l build/XROOTD-prefix/src/XROOTD-build/src/libXrdSecpwd-4.so > libXrdSecpwd_xrootdprefixlib.txt; $ diff libXrdSecpwd_buildlib.txt libXrdSecpwd_xrootdprefixlib.txt; < build/lib/libXrdSecpwd-4.so:; ---; > build/XROOTD-prefix/src/XROOTD-build/src/libXrdSecpwd-4.so:; 307a308,311; > cmd LC_RPATH; > cmdsize 80; > path /Users/sftnight/vpadulan/build/XROOTD-prefix/src/XROOTD-build/src (offset 12); > Load command 14; 312c316; < Load command 14; ---; ```. This `LC_RPATH` variable is set for our own libraries, e.g. `libHtml.so`; ```; $ otool -l build/lib/libHtml.so; [...]; Load command 15; cmd LC_RPATH; cmdsize 80; path /Users/sftnight/vpadulan/build/lib (offset 12); ```; But for some reason this information is lost after building `builtin_xrootd` (probably while installing the libraries from the prefix to the install directory). A way to solve this is by manually adding the `CMAKE_INSTALL_RPATH` option to the `cmake` invokation of `builtin_xrootd` as is done in this PR. The result is:; ```; $ otool -l build/lib/libXrdSecpwd-4.so; [...]; Load command 15; cmd LC_RPATH; cmdsize 80; path /Users/sftnight/vpadulan/bui",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6128:188,secur,security,188,https://root.cern,https://github.com/root-project/root/pull/6128,1,['secur'],['security']
Security,"The patch is straight-forward, but it is a shame that this requires new overloads in all inherited classes. I don't have a less intrusive alternative, but... Ideally, `MnApplication` should hold a smart pointer to `ModularFunctionMinimizer`, which is initialized with a concrete instance by each derived class. The method `Minimizer()` wouldn't be virtual and overloaded in each derived class. There could just be two normal methods in `MnApplication` for const and non-const access to the internal smart pointer. The `MnApplication` would get a modified constructor that accepts the raw pointer of `ModularFunctionMinimizer` created in each derived class. This would rid us of superfluous overloads, but would require even more line changes, because all constructors in all derived classes would have to be modified. So after all, the straight-forward solution is better.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1946#issuecomment-385909893:476,access,access,476,https://root.cern,https://github.com/root-project/root/pull/1946#issuecomment-385909893,1,['access'],['access']
Security,"The pr includes the implementation of a profiling mechanism for DistRDF.; When the feature is activated, profiling data is collected in each distributed node and merged to produce a visualization (i.e. flamegraph) on the client side. Activation of the feature is done using the ClingProfile ctx manager, accessed from ROOT.RDF.Experimental.Distributed module.; Usage example (dimuon analysis):. ```python; RDataFrame = ROOT.RDF.Experimental.Distributed.Dask.RDataFrame; ClingProfile = ROOT.RDF.Experimental.Distributed.ClingProfile; ...; df = RDataFrame(""Events"", files, npartitions=npartitions, daskclient=client); with ClingProfile(df, filename=""flamegraph.svg""):; df = df.Filter(""nMuon == 2"", ""Events with exactly two muons""); ...; h.GetValue(); ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11214:304,access,accessed,304,https://root.cern,https://github.com/root-project/root/pull/11214,1,['access'],['accessed']
Security,"The preprocessor defines enabled by the `march=native` flag are made part of the string of options to be hashed to create the artifact tarball names, therewith avoiding incompatible binaries. Moreover, the special builds preserve their overrides also for nightly builds.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15839:105,hash,hashed,105,https://root.cern,https://github.com/root-project/root/pull/15839,1,['hash'],['hashed']
Security,"The problem is that RDF tries to open the file to check that it's valid. The logic for the file opening is at https://github.com/root-project/root/blob/962009b8c2057199c2229c3ef9938ac4d315d10a/tree/dataframe/src/RLoopManager.cxx#L1133 . In particular, because of the presence of the `?` token, the string is parsed as a glob. Now in many cases that would be harmless albeit a tiny overhead (it would just return the same file name to open), but in this particular case it triggers a faulty behaviour. The glob parsing attempts at traversing the remote xrootd directory (see [here](https://github.com/root-project/root/blob/962009b8c2057199c2229c3ef9938ac4d315d10a/tree/tree/src/InternalTreeUtils.cxx#L471)), but since the permission is just for the single file with the token and not for the entire directory, it leads to the `user access restricted` error you post above. Now, I believe the most sane course of action would be to refine the logic that checks whether the input file name is a glob. I could simply add a check for the `xrd.wantprot` token, but probably we want to have a more authoritative list of all the tokens that should make the file name not be parsed as a glob. This probably includes not only xrootd tokens but also anything https-related. Or we could adopt a different strategy for glob detection altogether. Thoughts @dpiparo @pcanal ?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/16475#issuecomment-2365248206:832,access,access,832,https://root.cern,https://github.com/root-project/root/issues/16475#issuecomment-2365248206,2,['access'],['access']
Security,The problem seems to be in the calculation of disc at line 151; https://root.cern/doc/master/complex__quartic_8h_source.html#l00151. If I uncomment these following lines; ```; // more numerical problems with this calculation of disc; // double CR2 = 729 * rcub * rcub;; // double CQ3 = 2916 * qcub * qcub * qcub;; // disc = (CR2 - CQ3) / 2125764.0;; ```. it seems top provide the correct result in your example. ; It would be nice to have more test points to validate the code,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6900#issuecomment-737326594:459,validat,validate,459,https://root.cern,https://github.com/root-project/root/issues/6900#issuecomment-737326594,1,['validat'],['validate']
Security,"The proposed root --web does not help, I am getting as before; Authorization required, but no authorization protocol specified; when using the snap. I am not sure but it looks as if there is missing just one line in the snap.yaml.It is located in /snap/root-framework/current/meta/snap.yaml after installation. Instead of. > plugs:; > home: null; > network: null; > opengl: null; > x11: null; > desktop: null; > desktop-legacy: null; > removable-media: null; > shared-memory:; > private: true; > layout:. you probably have to add ; > wayland:null. in the plugs section when building the snap. But I am not sure, as I dont build snaps myself.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/15723#issuecomment-2146760092:63,Authoriz,Authorization,63,https://root.cern,https://github.com/root-project/root/issues/15723#issuecomment-2146760092,2,"['Authoriz', 'authoriz']","['Authorization', 'authorization']"
Security,"The python failure are due xrootd authentication problem. The root-meta-tclass, root-io-buffer and root-io-transient test were not run due to a build system issue (probably due to a ROOT rebuild triggered by ctest because of the ar timestamp bug)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6062#issuecomment-672318996:34,authenticat,authentication,34,https://root.cern,https://github.com/root-project/root/pull/6062#issuecomment-672318996,1,['authenticat'],['authentication']
Security,"The pythonisation proposed in this PR injects a `__setitem__` implementation into `TClonesArray` that customizes the setting of an item. The `__setitem__` pythonization that `TClonesArray` inherits from `TSeqCollection` does not apply in this case and a redefinition is required. The reason is `TClonesArray `sets objects by constructing them in-place, which is impossible to support as the Python object given as value must exist a priori. It can, however, be memcpy'd and stolen, which is the approach used in this redefinition. This is also the reason why this pythonisation needs to be implemented in C++.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3423:38,inject,injects,38,https://root.cern,https://github.com/root-project/root/pull/3423,1,['inject'],['injects']
Security,The pythonization RDataFrame.AsNumpy looks for the attribute; RDataFrameAsNumpy_ in the ROOT module and raises an attribute error if not found.; This error can not be triggered if ROOT is imported but is raised if; RDataFrame is accessed through cppyy.gbl. This PR implements a; protection for this skipping the pythonization if the pythonizer; function is not found in the ROOT module.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4362:229,access,accessed,229,https://root.cern,https://github.com/root-project/root/pull/4362,1,['access'],['accessed']
Security,"The replacements removes the -Werror option for externals, which is intended.; However, it also replaces e.g. -Werror=format-security with =format-security, which results in compilation failures due to the unknown option =format-security.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5902:125,secur,security,125,https://root.cern,https://github.com/root-project/root/pull/5902,3,['secur'],['security']
Security,The system integrity protection (SIP) on osx blocks 'dangerous' env variables when spawning a new process. The MetaProcessor command `.!` which calls the shell does not propagate (DY)LD_LIBRARY_PATH variables which prevents cling from finding the modules. This patch introduces a new env variable CLING_PREBUILT_MODULE_PATH which contains the prebuilt modules' location where cling should look for modules. Patch by Alexander Penev (@alexander-penev)!,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4516:11,integrity,integrity,11,https://root.cern,https://github.com/root-project/root/pull/4516,1,['integrity'],['integrity']
Security,The test fails (access violation) on Windows 64 built in RelWithDebInfo mode when running with `ctest` (i.e. it runs fine from the command prompt). So let's disable it on win64 for the time being.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10127:16,access,access,16,https://root.cern,https://github.com/root-project/root/pull/10127,1,['access'],['access']
Security,The test previously build an expression with 4096 occurrences of the 'x' variable. This was causing a segfault with the address sanitizer that is independent of RDataFrame and tracked at; https://github.com/root-project/root/issues/15818. Shorten the test expression to 100 occurences of 'x' which still represents a realistically long one-line expression and better decouples the clang-related asan issue from the rest of the RDataFrame testing infrastructure.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15824:128,sanitiz,sanitizer,128,https://root.cern,https://github.com/root-project/root/pull/15824,1,['sanitiz'],['sanitizer']
Security,"The two classes inheriting from RooAbsCollection, namely RooArgList and; RooArgSet are by default non-owning collections. This means they should; not be initialized with temporary objects, otherwise they contain; invalid pointers right after construction. To avoid that this can ever happen, the universal reference mechanism is; used to statically check for temporaries, such that your code doesn't; even compile if you try to construct a RooArgList or RooArgSet from; temporaries. This fixes https://github.com/root-project/root/issues/8052. Some C++ code to validate that the `static_assert` works:; ```C++; #include ""RooRealVar.h""; #include ""RooArgList.h""; #include ""RooArgSet.h""; #include ""RooUniform.h"". void test() {. RooRealVar x(""x"", ""x"", 0, 0, 10);; RooRealVar y(""y"", ""y"", 0, 0, 10);. RooUniform u1(""u1"", ""u1"", x);; RooUniform u2(""u2"", ""u2"", y);. // this should work; RooArgSet (u1, u2);; RooArgList(u1, u2);. // all of these combinations should cause compiler errors; ///RooArgSet (RooUniform(""u1"", ""u1"", x), u2 );; //RooArgSet (u1, RooUniform(""u2"", ""u2"", y));; //RooArgSet (RooUniform(""u1"", ""u1"", x), RooUniform(""u2"", ""u2"", y));; //RooArgList(RooUniform(""u1"", ""u1"", x), u2 );; //RooArgList(u1, RooUniform(""u2"", ""u2"", y));; //RooArgList(RooUniform(""u1"", ""u1"", x), RooUniform(""u2"", ""u2"", y));. }; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8065:561,validat,validate,561,https://root.cern,https://github.com/root-project/root/pull/8065,1,['validat'],['validate']
Security,"The use case in question is like this:; For reasons of cross-validation, it has become a customary technique within ATLAS (and probably other collaborations as well) to construct a ""Hybrid Dataset"", that is equal to the real data in the control regions, but only contains asimov data in the signal region (""partically unblinded""). If you want to have both the Hybrid Dataset and the Dataset in the same workspace to reduce the bookkeeping and turnaround time of the unblinding procedure (first only look at hybrid data, and if the fit to hybrid data looks okay, also look at real data), the most convenient way to do this would be to include it from the get-go using this feature, rather than having to somehow construct or import it down the line when the workspace already exists, or to maintain two completely different workspaces that have the same model and only different datasets.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10538#issuecomment-1122140490:61,validat,validation,61,https://root.cern,https://github.com/root-project/root/issues/10538#issuecomment-1122140490,1,['validat'],['validation']
Security,"The warnings were raised by TThreadExecutor trying to be smart when chunking, overriding user specified number of chunks to avoid accessing uninitialized positions of the results vector. This is annoying f.e. when Fitting, with several calls to Map() with the same ""conflictive when chunking"" data.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1028:130,access,accessing,130,https://root.cern,https://github.com/root-project/root/pull/1028,1,['access'],['accessing']
Security,"Then the difference is that `AddToClass` calls:; ```cpp; method = MethodProxy_New( label, pyfunc );; ```; and that is fine even when pyfunc is a method bound to a null object in Py3, but for `AddProperty`, the line:; ```cpp; PyObject *property_obj = PyObject_CallObject(property_class, arglist);; ```; accesses the null object and crashes.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1777#issuecomment-380159214:302,access,accesses,302,https://root.cern,https://github.com/root-project/root/pull/1777#issuecomment-380159214,1,['access'],['accesses']
Security,"There are two parts to this:; - for this PR to be correctly validated we need to have tested a setup where the build directory is not available anymore at runtime. Does CMS test this, @smuzaffar @vgvassilev ?; - we should have a dedicated test for this in ROOT (as standalone cling doesn't use modules). Do we?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10633#issuecomment-1139421018:60,validat,validated,60,https://root.cern,https://github.com/root-project/root/pull/10633#issuecomment-1139421018,1,['validat'],['validated']
Security,There are two types of helper functions in PyROOT: those that are used from the pythonizors in Python and those that are used from the C++ implementation of the pythonizations. Only the former are exposed in the interface of the PyROOT extension module. This PR adds the necessary documentation to explain this.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2953:197,expose,exposed,197,https://root.cern,https://github.com/root-project/root/pull/2953,1,['expose'],['exposed']
Security,"There is a ugly workaround to check for network:; ```; execute_process(; COMMAND ping www.github.com -n 2 -w 1000; RESULT_VARIABLE NO_CONNECTION; ); ```; And then use `NO_CONNECTION` like for example:; ```; if(builtin_tbb); if(NO_CONNECTION EQUAL 1); if(fail-on-missing); message(FATAL_ERROR ""No internet connection. Please check your connection, or either disable the 'builtin_tbb' option or the 'fail-on-missing' to automatically disable options requiring internet access""); else(); message(STATUS ""No internet connection, disabling 'builtin_tbb' option""); set(builtin_tbb OFF CACHE BOOL ""Disabled because there no internet connection"" FORCE); set(imt OFF CACHE BOOL ""Disabled because 'builtin_tbb' was set but there no internet connection"" FORCE); endif(); else(); ...; ```; I quickly tried and the principle works, but I'll need time to make it working properly and that will complexify (again) CMake",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8292#issuecomment-864912549:467,access,access,467,https://root.cern,https://github.com/root-project/root/issues/8292#issuecomment-864912549,1,['access'],['access']
Security,"There is also a. ```; Warning in <TStreamerInfo::BuildCheck>: ; The StreamerInfo of class RooExponential read from file ./exponentialPdf.root; has the same version (=1) as the active class but a different checksum.; You should update the version to ClassDef(RooExponential,2).; Do not try to write objects with the current class definition,; the files will not be readable.; ```. not sure if related",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5530#issuecomment-623525016:205,checksum,checksum,205,https://root.cern,https://github.com/root-project/root/pull/5530#issuecomment-623525016,1,['checksum'],['checksum']
Security,There is build problem on mac11 nodes:; ```; FAILED: core/thread/G__Thread.cxx lib/Thread.pcm ; /Users/sftnight/build/workspace/root-pullrequests-build/build/include/ROOT/TReentrantRWLock.hxx:26:10: fatal error: 'tbb/enumerable_thread_specific.h' file not found; ```; https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/115867/console. It is because of that PR: https://github.com/root-project/root/pull/7260. It exposes TBB to public includes - via ROOT/TReentrantRWLock.hxx file. First of all one should specify that `Thread` library depend on `TBB` builtins - thats easy. But also one should export `TBB_INCLUDE_DIRS` and `TBB_CXXFLAGS` as INTERFACE (not PRIVATE) properties of `Thread` library. Do we want this?,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8022:434,expose,exposes,434,https://root.cern,https://github.com/root-project/root/issues/8022,1,['expose'],['exposes']
Security,"There seems to be a problem in TNetXNGFile when accessing archive members directly, the file size corresponds to the whole archive instead of the archive member. Because of that, there is mismatch of how much data ROOT requests from XRootD, and how much XRootD client returns, so the transfer fails. With TXNetFile, the GetSize() method is implemented in TFile, while TNetXNGFile overrides it. The code in this PR is adding the same functionality from TFile::GetSize() to TNetXNGFile::GetSize().",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5039:48,access,accessing,48,https://root.cern,https://github.com/root-project/root/pull/5039,1,['access'],['accessing']
Security,"There was a segmentation fault in the RooFit batch mode with; multithreading that happened when there were too many threads for the; number of events to be calculated. This caused a `std::size_t` underflow in this line:; ```C++; // roofit/batchcompute/src/RooBatchCompute.cxx; batches.setNEvents(nEvents - idx * batches.getNEvents());; ```; And then the computation tried to access entries that were out of; bounds. This commit adds one more line to reset the number of threads to how; many are needed. Like this we avoid the underflow and also spawing; unnecessary threads. This PR also changes which stressRooFit tests are declared as longtest,; such that the BatchMode tests are also run in the CI and we can avoid; problems like this in the future. Before, the interpreted tests were not declared as longtests, and the; compiled versions were not. This is now flipped, such that the compiled; BatchMode CPU and CUDA tests are also run without `longtest`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10754:375,access,access,375,https://root.cern,https://github.com/root-project/root/pull/10754,1,['access'],['access']
Security,"There was an infinite loop on the arm platform when running TMVAMulticlass.root. When compiling with the -ffast-math flag, sometimes a nan would be generated in the GA part of the cut optimisation. @dpiparo @martinmine Hopefully this resolves your issue. Tried it on the build machine I was given access to and it works there now. We in the TMVA team still need to revisit this part at some point, but for now I think this should be ok.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/450:297,access,access,297,https://root.cern,https://github.com/root-project/root/pull/450,1,['access'],['access']
Security,"These 3 small patches I am using for ROOT + Intel QuickAssist Technology (QAT). QAT provides HW-accelerated (de)compression and crypto (incl. hashing). For easy integration Intel provides zlib-shim and openssl-shim, support the most common interfaces (but not everything). Note, that QAT also has software fallback mechanism. More details are available in the commit messages.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/523:142,hash,hashing,142,https://root.cern,https://github.com/root-project/root/pull/523,1,['hash'],['hashing']
Security,"These are four bugfixes for RooFit, and an extension of schema evolution conversion rules. @pcanal, please review the following:; https://github.com/root-project/root/commit/4922063626badad3934edb5965aced6ea678c7c3. > [core] Allow hex numbers for checksums in schema rules.; > ; > When streamer infos are printed, checksums appear in hex. When rules are; > parsed, hex values were not accepted, though. This allows both hex and; > decimal checksums in conversion rules. Is this useful? If not, the checksum in one of the bugfixes has to be converted to decimal.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4677:247,checksum,checksums,247,https://root.cern,https://github.com/root-project/root/pull/4677,4,['checksum'],"['checksum', 'checksums']"
Security,"These are real failures, I cannot reproduce the crash but valgrind sees the access-after-delete, work in progress",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6995#issuecomment-756031491:76,access,access-after-delete,76,https://root.cern,https://github.com/root-project/root/pull/6995#issuecomment-756031491,1,['access'],['access-after-delete']
Security,These changes backport the commits that add numba support in cppyy master to PyROOT. It currently supports passing objects to C++ functions and returning builtin types from the functions inside numba JIT'ed code. It also supports accessing data members and methods from class types. The [tests added](https://github.com/sudo-panda/roottest/compare/502450f83a346aa1267fc4f48b6d749fa6038611..numba) can also be used to understand the support that is provided through this PR. ## Checklist:. - [ ] Pass all python tests in `roottest` (1 test failing - `roottest-python-memory-memory`); - [ ] Add numba test to `roottest`,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11096:230,access,accessing,230,https://root.cern,https://github.com/root-project/root/pull/11096,1,['access'],['accessing']
Security,"These changes test and provide the functionality to access quantities called ""mybranch.mysubbranch""",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1701:52,access,access,52,https://root.cern,https://github.com/root-project/root/pull/1701,1,['access'],['access']
Security,"These differences were not there when last time we updated to v6.24 branch commit b802a6b (see https://github.com/cms-sw/cmsdist/pull/6730#issuecomment-799704333 and https://cmssdt.cern.ch/SDT/jenkins-artifacts/baseLineComparisons/CMSSW_11_3_X_2021-03-14-2300+963134/41710/validateJR.html ). . It could be that some of latest cmssw changes might have caused these differences, I am re-running the tests based on latest cmssw release now",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7718#issuecomment-811685526:273,validat,validateJR,273,https://root.cern,https://github.com/root-project/root/issues/7718#issuecomment-811685526,1,['validat'],['validateJR']
Security,These files are available in the source tree. By trying these local copies before trying the remote copies it is possible to run the tests without network access.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/403:155,access,access,155,https://root.cern,https://github.com/root-project/root/pull/403,1,['access'],['access']
Security,"This PR adds (a first version of) the `RNTupleIndex`, which is an in-memory structure that maps RNTuple field values (or combinations thereof) to an entry index in the RNTuple for which the index was built. Currently, the index only resides in memory and thus has to be (re)build each time. `RNTupleIndex` will be used by the `RNTupleProcessor` to enable dataset joins and will be as transparent as possible to users. Currently, no public interface is foreseen. At this point, no persistification is foreseen, but this might be added in the future. The implementation of the `RNTupleIndex` in this PR is hash-based. An implementation that is vector-based (but with the same interface) will also be considered. The idea is to benchmark and evaluate both implementations (and potentially more). Based on the results we can decide which one to actually use (or alternatively make multiple implementations available if they show clear tradeoffs in different use cases).",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15116:604,hash,hash-based,604,https://root.cern,https://github.com/root-project/root/pull/15116,1,['hash'],['hash-based']
Security,"This PR adds `RooGradMinimizerFcn`, an alternative to `RooMinimizerFcn` that calculates gradient itself outside of Minuit during minimization. To be able to use `RooGradMinimizerFcn`, `RooMinimizer` had to be refactored to be able to use `RooAbsMinimizerFcn` instead of the concrete RooMinimizerFcn class. To accomodate this change, several other changes had to be made:; - `_optConst` and `_func` members were removed, since these are now managed by the `*MinimizerFcn`.; - This means also things like function name and title, but also optimization switches, were moved to `RooAbsMinimizerFcn` as well.; - Functions `getMultiGenFcn`, `fitterFcn` and `fitFcn` were added which are used in several places as convenience functions to access the concrete `RooAbsMinimizerFcn` object with its proper type. The concrete type matters, for instance, when passing the class to the derivator, because a gradient enabled `*MinimizerFcn` needs to take different overloads than the classic function-value-only `RooMinimizerFcn`. A `FcnMode` enum class was added for this disambiguation as well.; - Construction of a `RooMinimizer` can be done the same as always when using a classic `RooMinimizerFcn`. However, to activate `RooGradMinimizerFcn`, a new create function can be used with the proper type as template parameter. In a later PR, this pattern will be extended with another gradient-enabled `RooAbsMinimizerFcn` instantiation that will also include multi-processing implementations. Since we had to refactor construction, we took the opportunity to also put default parameters in the header declaration, instead of in the constructor initializer lists. Finally, this PR changes the default minimizer from Minuit to Minuit2. **Note that this may require some discussion.** We already briefly touched upon this in a Zoom meeting, but haven't thoroughly mapped out consequences yet. The reason for the switch is that the derivator scheme used in `RooGradMinimizerFcn` replicates that of Minuit2, so comparing",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8596:732,access,access,732,https://root.cern,https://github.com/root-project/root/pull/8596,1,['access'],['access']
Security,This PR adds a message viewing accessible through top left menu.; At the moment the view content is browser console messages and a checkbox to enable/disable debug mode. There are also minor changes in log messages and additional try/catch blocks.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7270:31,access,accessible,31,https://root.cern,https://github.com/root-project/root/pull/7270,1,['access'],['accessible']
Security,This PR adds a simple metric (`nPagesCommitted`) to `RPageSinkFile` which is newly accessible through `RNTupleWriter`. The implementation mirrors `RNTupleReader`. I refactored the `RPageSinkFile` constructors to delegate metrics initialization to a new private constructor as in `RNTupleReader`. There are definitely many other metrics to be added.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7235:83,access,accessible,83,https://root.cern,https://github.com/root-project/root/pull/7235,1,['access'],['accessible']
Security,"This PR adds a support for passing along the IO feature flags in the merger and allows access from the command-line for `hadd`. Additionally, makes the `TIOFeatures` a serialized member of `TTree` and `TBranch`, allowing them to behave as expected when cloned.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1217:87,access,access,87,https://root.cern,https://github.com/root-project/root/pull/1217,1,['access'],['access']
Security,This PR adds some meaningful error message printing when a pythonization fails to be injected.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9729:85,inject,injected,85,https://root.cern,https://github.com/root-project/root/pull/9729,1,['inject'],['injected']
Security,"This PR adds support for LZ4 in the ""classic"" configure/Makefile build, adding near-parity to the `cmake`-based build. The exception is `win32` -- `core/lz4/Module.mk` will need to be heavily tackled by someone with a Windows background (I do not have access to a Windows-based host). @pcanal - note that this reverts the commit disabling LZ4 for the `cmake`-based build.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/593:252,access,access,252,https://root.cern,https://github.com/root-project/root/pull/593,1,['access'],['access']
Security,"This PR adds the possibility to register subfields to an RNTuple model for direct access to the values of these fields in entries belonging to the model. Registerging subfields in a collection is not permitted as of this PR, but will be added at a later point, borrowing from the implementation of `RNTupleDS`. This functionality will be used in the `RNTupleProcessor`, which provides an iterator over an `REntry`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16693:82,access,access,82,https://root.cern,https://github.com/root-project/root/pull/16693,1,['access'],['access']
Security,"This PR adds the possibility to specify which fields should be read by the `RNTupleProcessor` by passing an `RNTupleModel` to its constructor. The processor will create and own an `REntry` based on this, but it will use the pointers from the model's default entry to hold the field values during iteration. This way, the pointers returned by `RNTupleModel::MakeField` can be used in the processor iteration to access the values being read. Passing a model is optional; if not provided, one will be created from the descriptor of the first specified RNTuple. A follow-up PR will add the possibility to change the model after the processor has been created (useful when the set of fields to read cannot be decided at compile-time). ## Checklist:. - [x] tested changes locally; - [x] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15985:410,access,access,410,https://root.cern,https://github.com/root-project/root/pull/15985,1,['access'],['access']
Security,"This PR adds two sets of pythonizations to `TSeqCollection` and its subclasses:; - Injection of item access methods (`__getitem__`, `__setitem__`, `__delitem__`), both for integer indices and slices.; - Injection of Python-list-like methods (`insert`, `pop`, `reverse`, `sort`, `index`). The PR also includes the corresponding unit tests.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3387:83,Inject,Injection,83,https://root.cern,https://github.com/root-project/root/pull/3387,3,"['Inject', 'access']","['Injection', 'access']"
Security,"This PR completes the fix provided for ROOT-8935 with another fix for ROOT-10279, by preventing; the injection of the constants of a scoped enum into the scope of the enum. The bug surfaced as a result of modifying `PropertyProxy::Set` to fix ROOT-9835. There is still a pending issue identified while testing the fixes above: when a scoped enum belongs to the global namespace, once we do a lookup of that scoped enum its constants are added to the global space too and can be accessed as `ROOT.constant_name`, which is wrong. A subsequent PR will fix this issue.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4246:101,inject,injection,101,https://root.cern,https://github.com/root-project/root/pull/4246,2,"['access', 'inject']","['accessed', 'injection']"
Security,"This PR does a few things; 1) Extends the RDF Fill functionality to support arbitrary types and number of columns and an arbitrary mix of individual objects and containers with variadic templates. Note that this will likely result in slower code being generated in case of compiling/jitting without optimization. 2) Adds a HistoND function to RDF to fill a THnD with arbitrary number of dimensions. The main issue here was actually that THnT does not have a publicly accessible copy constructor or assignment operator, which are needed for use with RDF. I didn't have the patience to implement this by hand for all the classes in the inheritance chain, so the relevant classes have been migrated from C-style arrays to std::vector such that default copy (and move) constructors and assignment operators can be automatically generated. 3) Appropriate constructors have been added to allow THnT to be used with variable binning.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7499:467,access,accessible,467,https://root.cern,https://github.com/root-project/root/pull/7499,1,['access'],['accessible']
Security,"This PR enhances the Max Pooling Layer in the following ways:. 1. **Increased test coverage.** Tests have been added for the backwards propagation, covering the cases where `depth > 1`, as well as overlapping receptive fields. The testing suite was also refactored using templates to eliminate code duplication. 2. **Bug Fix**. The newly added tests exposed a bug in the `Reference` implementation of back-propagation, in the case of overlapping receptive fields. The bug is resolved. 3. **CUDA implementation.** The GPU version is now fully functional in both forward and backward propagation.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2175:350,expose,exposed,350,https://root.cern,https://github.com/root-project/root/pull/2175,1,['expose'],['exposed']
Security,"This PR fixes ; - #15919; ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary). clingwrapper tries to lookup the `ClassInfo` of `TViewPubFunctions` in meta which is not public. The return type of `GetListOfAllPublicMethods` should be a `TList` but the public `ClassDefInlineOverride` here:. https://github.com/root-project/root/blob/a038a2f345f41392ce86e07b0683d1740dc9b07c/core/meta/src/TViewPubFunctions.h#L78-L82. and this usage:. https://github.com/root-project/root/blob/a038a2f345f41392ce86e07b0683d1740dc9b07c/core/meta/src/TClass.cxx#L3845-L3849. exposes the type as `TViewPubFunctions`. This causes the observed offset calculation between `TList` and `TViewPubFunctions` in `Cppyy::GetBaseOffset`:; https://github.com/root-project/root/blob/a038a2f345f41392ce86e07b0683d1740dc9b07c/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx#L1443-L1457. which then fails, producing the warning. Running a check on the type:. ```python; import ROOT; print(""Type:"", ROOT.TObject.Class().GetListOfAllPublicMethods().IsA().GetName())""; ```. Gives:; ```; Warning: failed offset calculation between TList and TViewPubFunctions; Type: TViewPubFunctions; ```. No longer performing this override in `TViewPubFunction.h` fixes the type back to `TList` and the call to `GetBaseOffset` no longer happens:. ```python; print(""Type:"", ROOT.TObject.Class().GetListOfAllPublicMethods().IsA().GetName()); ```; and the warning disappears:. ```; Type: TList; ```. This fix also required an update in the reference file in roottest : https://github.com/root-project/roottest/pull/1159",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16177:585,expose,exposes,585,https://root.cern,https://github.com/root-project/root/pull/16177,1,['expose'],['exposes']
Security,This PR fixes [ROOT-9219](https://sft.its.cern.ch/jira/browse/ROOT-9219) and optimises and streamlines the access to columns.; A test was of course added.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1558:107,access,access,107,https://root.cern,https://github.com/root-project/root/pull/1558,1,['access'],['access']
Security,"This PR has been rebased and simplified to leverage the changes introduced by #11828. Accessing single pages that are remotely caged is now unsupported unless page buffering is enabled as a source option (which is by default the case). More details in the updated PR description. The change precludes storing the cage sizes in metadata or upper-bounding it in `RPageSourceDaos`, though it constrains that the entire page-group is requested and fetched - as the allocated buffer size for a cage depends on the sum of all the compressed sizes stored in the individual locators of requested pages belonging to that cage.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11466#issuecomment-1359215581:86,Access,Accessing,86,https://root.cern,https://github.com/root-project/root/pull/11466#issuecomment-1359215581,1,['Access'],['Accessing']
Security,"This PR includes fix to the pyroot iterator issue.; It also includes new method for accessing covariance calculations between nodes, as well as new ways of accessing binned data content of a dataset",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15301:84,access,accessing,84,https://root.cern,https://github.com/root-project/root/pull/15301,2,['access'],['accessing']
Security,This PR includes two sets of pythonisations for `TObject`:; - Injection of `__contains__` to support 'obj1 in obj2` syntax; https://sft.its.cern.ch/jira/browse/ROOT-9968; - Addition of comparison operators; https://sft.its.cern.ch/jira/browse/ROOT-9969,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3445:62,Inject,Injection,62,https://root.cern,https://github.com/root-project/root/pull/3445,1,['Inject'],['Injection']
Security,"This PR introduces a few changes to old PyROOT and new PyROOT for forward and backward compatibility reasons, respectively. Old PyROOT:; - Issue a deprecation warning when the conversion None -> null pointer happens; - Add forward compatible names for `AsCObject` (`as_cobject`) and `BindObject` (`bind_object`); - Make nullptr accessible as cppyy.nullptr; - Make pythonization functions accessible via cppyy.py ; - Issue a deprecation warning when using `buffer.SetSize`, and add `buffer.reshape` to be forward compatible; - Add a few attribute names for proxies (objects, classes, callables) that forward compatible with new PyROOT. New PyROOT; - Add `MakeNullPointer(klass)` as `bind_object(0,klass)`; - Provide `BindObject` and `AsCObject`. Related test PR:; https://github.com/root-project/roottest/pull/425",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4661:328,access,accessible,328,https://root.cern,https://github.com/root-project/root/pull/4661,2,['access'],['accessible']
Security,"This PR is a reload of #1896 . All the work of @amadio is there + 2 workarounds for 2 problems:; 1) On Ubuntu 16, gcc 54, interpreted macros and prompt cannot autoload TVec<(unsigned) long long>. The autoload key is there, the autoload can be triggered e.g. with TClass::GetClass but somehow through interpreted code this does not work. The workaround consists in not declaring the TVec<long long> extern, therewith leaving it in the pch and have it working (the library by definition is not needed at the price of using that class w/o the optimisations of the compiled library in interpreted code). 2) Windows. MVCC has issues digesting all the templates. Since 6.14 is the first ROOT6 version working with Windows and performance through data paralellism made accessible by VecOps is not a top priority, the extern templates have been removed alltogether with a preprocessor statement.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1945#issuecomment-385142341:762,access,accessible,762,https://root.cern,https://github.com/root-project/root/pull/1945#issuecomment-385142341,1,['access'],['accessible']
Security,"This PR is the third part of a split and clean-up of #8294, as suggested by @guitargeek. In this PR, we introduce the RooFit::MultiProcess package. RooFit::MultiProcess is a task-based parallelization framework that will be used to parallelize gradients in RooFit/Minuit2 fits. It uses forked processes for parallelization, as opposed to threads. We chose this approach because A) the existing RooRealMPFE parallelization framework already made use of forks as well, so we had something to build on and B) it was at the time deemed infeasible to check the entire RooFit code for thread-safety. Moreover, we use MultiProcess to parallelize gradients -- i.e. the tasks to be executed in parallel are partial derivatives -- and these are sufficiently large tasks that communication in between tasks is not a big concern in the big fits that we aimed to parallelize. The communication between processes is done using ZeroMQ, accessed through convenience functions in RooFitZMQ introduced in #8385. Notes:; - This PR branch is forked off of the branch in #8385, so until that is merged first, I may do some rebasing in this branch, so please be aware of that if you want to check this branch out locally.; - test_Job still fails, it has to be updated to the latest communication framework. With that in mind, this PR is ready for review.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8412:921,access,accessed,921,https://root.cern,https://github.com/root-project/root/pull/8412,1,['access'],['accessed']
Security,"This PR makes sure that member function templates are added to the dictionary of class proxies, so that they are found when the user is trying to access them. For instance:. ```python; import ROOT. ROOT.gInterpreter.Declare(""""""; struct TestClass {; template<class T> void templatedMember(const T& value) { }; };; """"""). t = ROOT.TestClass(); t.templatedMember('int')(1); ```; The example also works if there are non-templated overloads and the user tries to instantiate the templated one, thanks to https://github.com/root-project/root/pull/3226. The re-injection of the pythonization of `GetObject` in `TDirectoryFile` is now necessary because, as a result of these changes, `GetObject` will be added to the dictionary of `TDirectoryFile` as a `TemplateProxy`. If we want the pythonization to prevail, we need to inject it (it will replace the `TemplateProxy`, just like in `TDirectory`). `TFile` will inherit that pythonization too, so we keep the current behaviour and all tests green. An extension of the PyROOT tests for templates is coming in another PR.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3237:146,access,access,146,https://root.cern,https://github.com/root-project/root/pull/3237,3,"['access', 'inject']","['access', 'inject', 'injection']"
Security,"This PR propagates the disconnect action from TFileCacheRead to TFilePrefetch. This is needed to restore TFilePrefetch compatibility with the CMS use of kDoNotDisconnect to swap TTreeCaches. CMS frequently swaps TTree caches with code like. filePtr_->SetCacheRead(cache, nullptr , TFile::kDoNotDisconnect);; branch->GetEntry(entryNumber);; filePtr_->SetCacheRead(nullptr, nullptr , TFile::kDoNotDisconnect);. This is done partially for ownership reasons and partially because CMS uses multiple TTreeCaches for different use cases (one cache for frequently read branches, a second for less frequently accessed branches, and potentially one or two more specialized use cases). kDoNotDisconnect tells the TFile that this cache may later be reconnected to the TFile, so it should not disconnect the cache from the file. TFile propagates the flag to TFileCacheRead, but TFileCacheRead does not propagate it to TFilePrefetch. If pre-fetching is enabled, TFilePrefetch clears its cached blocks due to this commit:. https://github.com/root-project/root/commit/4290bf4942285b754b2edb7bffd122bcf36c979d. which added clearing of the read and pending prefetch lists when SetFile() is called. This violates the assumptions made by TTreeCache in the kDoNotDisconnect case, leading to a deadlock where `TTreeCache::ReadBufferPrefetch` waits forever on a buffer that has been cleared from the prefetched and pending lists. This patch propagates the kDisconnect/kDoNotDisconnect action flag to `TFilePrefetch::SetFile`, only clearing the fetched and pending lists in the kDisconnect case. (The same end could be accomplished more simply by just not calling TFilePrefetch::SetFile() for the kDoNotDisconnect case; propagating the action seems more correct to me, but it is a matter of taste.)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1769:600,access,accessed,600,https://root.cern,https://github.com/root-project/root/pull/1769,1,['access'],['accessed']
Security,"This PR provides the first steps to the `RNTupleProcessor`, which is envisioned as an interface for reading vertically and horizontally composed RNTuples (i.e., chains and friends), and combinations thereof. The interface provides an iterator which gives access to the `REntry` containing the field values of the current entry index, as well as some additional bookkeeping information. At this point, only vertically composed RNTuples (i.e., chains) are supported. Horizontal compositions in the form of (unaligned) friends and the ability to combine vertical and horizontal compositions will be addressed in a future PR.; Other additions that will be accounted for in one or more follow-up PRs include:; - The possibility for users to provide their own entries/value pointers to the processor.; - The possibility for users to specify the `RNTupleModel` used to construct the processor entry.; - An extension to this involves the ability to specify multiple models, together with the ability to ""enable"" certain models while iterating. This would enable the possibility to read from certain fields conditionally, e.g. after a cut. ## Checklist:. - [x] tested changes locally; - [x] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15084:255,access,access,255,https://root.cern,https://github.com/root-project/root/pull/15084,1,['access'],['access']
Security,This PR re-exposed the field type of an `RNTupleView` which otherwise must be matched out from the template signature (e.g. via `boost::mp11::mp_first).,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12142:11,expose,exposed,11,https://root.cern,https://github.com/root-project/root/pull/12142,1,['expose'],['exposed']
Security,"This PR reactivates and fixes the test for RooGradMinimizerFcn (introduced in #8596). The first commit provides a way for external gradient calculators to use previous gradient information (gradient itself, second derivatives, step size) to calculate the next gradient values. Simultaneously, it allows the external calculator to pass back (via the same arrays to keep the redesign as minimal as possible, in anticipation of planned dedicated Hessian support) the second derivative and step sizes, so they can also be reused in the next gradient calculation. All of this reuse was already going on in Numerical2PGradientCalculator, but external gradient calculators had no access to this data, because the FCNGradAdaptor and IMultiGradFunction had no support for passing it back and forth. The commit also implements use of this mechanism in ExternalInternalGradientCalculator and in RooGradMinimizerFcn. The second commit reactivates the (already existing) test, and fixes it, because it turned out it had a small remaining bug. The bug was fixed by removing an unused parameter from `NumericalGradient::SetInitialGradient`, so that was two birds with one stone.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8694:673,access,access,673,https://root.cern,https://github.com/root-project/root/pull/8694,1,['access'],['access']
Security,This Pull request fixes an array access overflow then the interpolation order used in the RooDataHist is >= 10.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9984:33,access,access,33,https://root.cern,https://github.com/root-project/root/pull/9984,1,['access'],['access']
Security,"This Pull request introduces wrappers to obfuscate backend-specific implementation details, distancing the storage layer functionality in `RPageStorageDaos` from the concrete backend in `RDaos` and `libdaos`. . ## Changes or fixes:. - Wraps the dictionary that groups page requests by their co-locality keys (a type previously aliased as `MultiObjectRWOperation_t`) into a new wrapper class `MultiObjectRWOperation`. The class manages the insertion of new request akeys and associated IOVs into the dictionary and exposes `begin` and `end` iterators for it.; - Moves `RDaosKey` to the header file and aliases the concrete types of `DistributionKey_t` and `AttributeKey_t`, used by other structures in the backend.; - Introduce wrapper structure `RDaosIov` to obfuscate the libdaos-specific `d_iov_t` structure and `d_iov_set()` call from the storage layer for object stores.; - Hide DAOS error code resolution function (`d_errstr`) in `GetDaosError()`.; - Directly use existing `RDaosObject::ObjClassId` wrapper structure around the default metadata class definition in the storage layer. ## Checklist:. - [x] tested changes locally + DAOS `delphi` node; - [x] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12109:514,expose,exposes,514,https://root.cern,https://github.com/root-project/root/pull/12109,1,['expose'],['exposes']
Security,This allows us to access the `llvm::orc::LLJIT` similar to the `getExecutionEngine` interface in clang-repl which is required for the functioning of libInterOp starting from LLVM 16. cc: @vgvassilev @devajithvs,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16537:18,access,access,18,https://root.cern,https://github.com/root-project/root/pull/16537,1,['access'],['access']
Security,This allows us to inject -DGSL_LIBRARY etc for relwase builds.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3214:18,inject,inject,18,https://root.cern,https://github.com/root-project/root/pull/3214,1,['inject'],['inject']
Security,"This avoids the remaining uses of the global write lock in typical RDataFrame event loops. There are two parts to this. 1) A bug fix in the hashing of streamer info when opening files. (The hash was including the TKey timestamp and therefore ended up being unique even for files with identical streamer info). 2) Since TTreeProcessorMT can carefully manage its TChains and corresponding TFile and TTree objects, global lists/cleanup and thread safety features can be bypassed or disabled. Together these changes are enough to almost completely eliminate the use of the global write lock in typical event loops. The only remaining using is the calls from ```TFile``` to ```TProcessUUID::AddUUID``` and ```TProcessUUID::RemoveUUID``` There are still several remaining places where the global read lock is taken, and these still have some cost in light of the remaining global write lock usage. These changes have the biggest impact when analyzing a large number of files. A test case is below. Produce the test dataset:; ```cpp; #include ""TFile.h""; #include ""TTree.h""; #include ""TString.h""; #include <thread>. void testwrite() {. const unsigned int nfiles = 4000;; const unsigned int nentries = 1000*1000;. float outval = 1.;. for (unsigned int ifile = 0; ifile < nfiles; ++ifile) {; TFile *fout = TFile::Open(TString::Format(""test_%i.root"", ifile), ""RECREATE"");; TTree *tree = new TTree(""tree"", """");; tree->Branch(""outval"", &outval);; for (unsigned int ientry = 0; ientry < nentries; ++ientry) {; tree->Fill();; }; tree->Write();; fout->Close();. // make sure that each key has a distinct timestamp to maximally; // provoke different hashes for streamer info in each file; std::this_thread::sleep_for(1100ms);; }. }; ```. Test event loop:; ```python; import ROOT; ROOT.gInterpreter.ProcessLine("".O3""); ROOT.ROOT.EnableImplicitMT(). chain = ROOT.TChain(""tree""); chain.Add(""test_*.root""). d = ROOT.ROOT.RDataFrame(chain); res = d.Sum(""outval""). resval = res.GetValue(); print(resval); ```. With 256 threa",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9486:140,hash,hashing,140,https://root.cern,https://github.com/root-project/root/pull/9486,2,['hash'],"['hash', 'hashing']"
Security,"This bug report is the result of the initial report at https://root-forum.cern.ch/t/crashes-when-reading-a-ttree-with-a-friend. Initially a tree t2 has a friend t1, and both are stored to a TFile, t2 with t1 stored as a friend. When opening both t2 and t1 from the file, then calling TFile::Close(), there is a crash. Most likely it is a matter of deletion order, where a tree already deleted is deleted again due to ""friendliness"". . Please find attached C++ and PyROOT scripts that reproduce the bug. The bug can be worked around by calling t2.RemoveFriend(t1) before calling TFile::Close(). Fixing this bug is important in a PyROOT workflow, where the branches values are accessible as attributes of the TTree. In such a case t2.GetEntry(x) also gets an entry in t1. If t1 is read from the file, both t1 and t2 branches values are available through their attributes - the most convenient way to access them in PyROOT. This behaviour does not exist in C++, thus I suspect in C++ hardly anyone opens both t1 and t2 and encounter this bug. Encountered on ROOT 6.24.00 compiled from sources on Fedora 34.; [test_friends.zip](https://github.com/root-project/root/files/6725477/test_friends.zip)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8549:675,access,accessible,675,https://root.cern,https://github.com/root-project/root/issues/8549,2,['access'],"['access', 'accessible']"
Security,"This code should be removed asap, and, if the functionality needed, an alternative found. The time needed to `import ROOT` shall be reduced to the minimum possible, as the one to start `root`. Invoking a command can increase significantly the time needed to import ROOT, especially if the distribution is accessed through cached file systems such as CVMFS.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13799#issuecomment-1746138442:305,access,accessed,305,https://root.cern,https://github.com/root-project/root/pull/13799#issuecomment-1746138442,1,['access'],['accessed']
Security,"This commit includes fix to the pyroot iterator issue. It also includes new method for accessing covariance calculations between nodes, as well as new ways of accessing binned data content of a dataset. Backport of #15301.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15341:87,access,accessing,87,https://root.cern,https://github.com/root-project/root/pull/15341,2,['access'],['accessing']
Security,"This commit introduces a new layer on top of RDataFrame to enable distributed computations. It is a port of the previously known PyRDF python package, that includes all changes discussed recently in the team. The python package, inside bindings/experimental/distrdf, is dynamically injected into the ROOT.RDF namespace. TODO:; 1. Figure out a better approach to injection, currently the following happens:; ```; >>> import ROOT # ok; >>> import ROOT.RDF # ok; >>> from ROOT import RDF # ok; >>> from ROOT.RDF import Distributed # ok; >>> Distributed; <module 'DistRDF' from '/home/vpadulan/Programs/rootproject/rootinstall/branchdev/lib/DistRDF/__init__.py'>; >>> import ROOT.RDF.Distributed; Traceback (most recent call last):; File ""<stdin>"", line 1, in <module>; File ""/home/vpadulan/Programs/rootproject/rootinstall/branchdev/lib/ROOT/_facade.py"", line 121, in _importhook; return _orig_ihook(name, *args, **kwds); ModuleNotFoundError: No module named 'ROOT.RDF'; 'ROOT' is not a package; >>> from ROOT.RDF.Distributed import Spark; Traceback (most recent call last):; File ""<stdin>"", line 1, in <module>; File ""/home/vpadulan/Programs/rootproject/rootinstall/branchdev/lib/ROOT/_facade.py"", line 121, in _importhook; return _orig_ihook(name, *args, **kwds); ModuleNotFoundError: No module named 'ROOT.RDF.Distributed'; 'ROOT.RDF' is not a package; ```; 2. Remove `DistRDF` from the available modules in a python session, e.g. this should not be possible (I believe); ```; >>> import DistRDF; >>> DistRDF; <module 'DistRDF' from '/home/vpadulan/Programs/rootproject/rootinstall/branchdev/lib/DistRDF/__init__.py'>; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7139:282,inject,injected,282,https://root.cern,https://github.com/root-project/root/pull/7139,2,['inject'],"['injected', 'injection']"
Security,This extends the aforementioned ranges of integral-like values to model random access ranges. The unit tests have been extended to cover the new functionality.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12140:79,access,access,79,https://root.cern,https://github.com/root-project/root/pull/12140,1,['access'],['access']
Security,"This fixes #10131. The core issue is that TDataMember::Init and TStreamerInfo::GenerateInfoForPair were not consistent. TDataMember::Init was ignoring the underlying type of an enum while the newer TStreamerInfo::GenerateInfoForPair was taking it in consideration. In the reported case, it meant that some of the pair's TStreamerInfo recorded the type as being 'signed intwhile other was recording the type asunsigned int`. In addition the whole infrastructure assumed (but only in ""some/most"" places) that the TStreamerInfo for a std::pair could never change and the infrastructure was also inconsistent on knowing whether the schema layout for std::pair is version of non-versioned. NOTE: The last commit is might cause the user classes to require a version incrementing when using enums ... (i.e. this commit might be removed) ... it was indeed removing ... in addition changing the stored type of the enum changes the schema layout but does not (sometimes?) change (yet?) the checksum so it leads to incorrect reading of data ....",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10132:980,checksum,checksum,980,https://root.cern,https://github.com/root-project/root/pull/10132,4,['checksum'],['checksum']
Security,"This fixes #11907. Inadvertently a previous commit (79a669b) disabled the ability to cleanup the thread local gDirectory in other; threads when the TFile they pointed to is deleted. Also fix a set of rare race conditions:. Fix race condition between RegisterContext and gDirectory cleanup. Description of the race conditions:. (1) thread one create TFile, gDirectory now points to that file.; (2) thread two delete TFile, the destructor calls CleanTargets which has 4 distinct phase; (a) take the TFile spin lock and update all the TContext that points to the file; (b) still hold the spin lock, clean the other thread's directory.; (c) deal with the TContext that were being destructed at the same time; (d) update the local gDirectory. If between (2)(a) and (2)(b), thread (1) starts the creation of a TContext, and; is held at the start of RegisterContext after thread 2 release the spin lock,; thread 1 might awaken only after the TFile object has been deleted and thus; RegisterContext would access delete memory. If during the destruction of the TFile by thread 2, thread (1) starts the; creation of a TContext, but is suspended right before the start of RegisterContext,; when it comes back it will use deleted memory to try to acquire the spin lock.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11908:997,access,access,997,https://root.cern,https://github.com/root-project/root/pull/11908,4,['access'],['access']
Security,"This fixes the JIRA ticket ROOT-4188:; https://sft.its.cern.ch/jira/browse/ROOT-4188. The solution to the problem was already written in the linked JIRA ticket by @lmoneta. This fix can be validated with this macro:; ```c++; void repro(); {; RooRealVar x{""x"", """", 0.0005, 0.001};; RooRealVar gamma{""gamma"", """", 0.5};; RooRealVar beta{""beta"", """", 2};; RooRealVar mu{""mu"", """", 0};. RooGamma pdf{""pdf"", """", x, gamma, beta, mu};. std::unique_ptr<RooDataSet> data{pdf.generate(x, 1000000)};. auto frame = x.frame(RooFit::Title(""RooGamma(x, 0.5, 2, 0)""));. TCanvas c1;. data->plotOn(frame);; pdf.plotOn(frame);; frame->Draw();. c1.SaveAs(""plot.png"");; }; ```. Result before this PR:; ![plot](https://user-images.githubusercontent.com/6578603/234061105-3fff0cc9-d040-4b55-93bd-20a34f48da55.png). And with this PR:; ![plot_new](https://user-images.githubusercontent.com/6578603/234061143-66e64f5c-eb81-489d-8ccd-c0e2a188dbff.png)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12702:189,validat,validated,189,https://root.cern,https://github.com/root-project/root/pull/12702,1,['validat'],['validated']
Security,"This fixes the OS X warnings like this one:. ld: warning: direct access in function 'XXX' from file; 'libLLVMScalarOpts.a(NewGVN.cpp.o)' to global weak; symbol 'llvm::ReverseIterate<bool>::value' from file; 'interpreter/llvm/src/lib/libclingUtils.a(AST.cpp.o)'; means the weak symbol cannot be overridden; at runtime. This was likely caused by different translation; units being compiled with different visibility settings. I assume it's a compiler bug and it maybe fixes itself in LLVM 6.0; as this is quite recently introduced code, so let's go with the; most conservative fix and just disable this validation layer in LLVM; (that we don't use from what I can see).",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/845:65,access,access,65,https://root.cern,https://github.com/root-project/root/pull/845,2,"['access', 'validat']","['access', 'validation']"
Security,"This fixes the error ""TorchScript requires source access in order to carry out compilation, make sure original .py files are available""; it can not be executed with exec in python. Best ; Omar",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6934:50,access,access,50,https://root.cern,https://github.com/root-project/root/pull/6934,1,['access'],['access']
Security,"This fixes tonights nightlies with the error `Error in <DavixOpen>: can not open file ""https://root.cern/files/tmva101.root"" with davix: Failure (Neon): Server certificate verification failed: issuer is not trusted after 3 attempts (6)`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4589:160,certificate,certificate,160,https://root.cern,https://github.com/root-project/root/pull/4589,1,['certificate'],['certificate']
Security,"This fixes warnings such as these:; ```; IncrementalExecutor::executeFunction: symbol '_ZN4TMVA12Experimental5SOFIE8INTERNAL19make_ROperator_SeluERKN4onnx9NodeProtoERKNS3_10GraphProtoERSt13unordered_mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEENS1_11ETensorTypeESt4hashISG_ESt8equal_toISG_ESaISt4pairIKSG_SH_EEE' unresolved while linking function '_GLOBAL__sub_I_cling_module_0'!; You are probably missing the definition of TMVA::Experimental::SOFIE::INTERNAL::make_ROperator_Selu(onnx::NodeProto const&, onnx::GraphProto const&, std::unordered_map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, TMVA::Experimental::SOFIE::ETensorType, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, TMVA::Experimental::SOFIE::ETensorType> > >&); Maybe you need to load the corresponding shared library?; ```; # This Pull request:. ## Changes or fixes:. Move private declarations away from the public header file. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10145:686,hash,hash,686,https://root.cern,https://github.com/root-project/root/pull/10145,1,['hash'],['hash']
Security,"This implements the `RDataFrame` pythonization `AsNumpy`, which reads out the dataframe as a collection of numpy arrays. Here's an example how it looks like:. ```python; df = ROOT.RDataFrame(""Events"", ""root://eospublic.cern.ch//eos/root-eos/cms_opendata_2012_nanoaod/Run2012B_DoubleMuParked.root"") \; .Filter(""All(Muon_pt>30)"", ""Only events with muons that have pt larger 30GeV""); npy = df.AsNumpy(columns=[""nMuon"", ""PV_npvs""]). print(""Number of events selected: {}"".format(npy[""PV_npvs""].size)); print(""Average number of primary vertices per event: {:.2f}"".format(numpy.mean(npy[""PV_npvs""]))); print(""Average number of muons per event: {:.2f}"".format(numpy.mean(npy[""nMuon""]))); ```; ```; Number of events selected: 2846996; Average number of primary vertices per event: 16.03; Average number of muons per event: 1.29; ```. In addition to reading fundamental types, we support reading out any type of C++ object in the file being returned as a numpy array of Python objects wrapped by PyROOT. ```python; ROOT.gInterpreter.Declare(""""""; // Inject the C++ class CustomObject in the C++ runtime.; class CustomObject {; public:; int x = 42;; };; // Create a function that returns such an object. This is called to fill the dataframe.; CustomObject fill_object() { return CustomObject(); }; """"""). df = ROOT.RDataFrame(4).Define(""custom_object"", ""fill_object()""); npy = df.AsNumpy(); print(npy); ```; ```; {'custom_object': array([<ROOT.CustomObject object at 0x64d8d50>,; <ROOT.CustomObject object at 0x79bd140>,; <ROOT.CustomObject object at 0x743f440>,; <ROOT.CustomObject object at 0x7359710>], dtype=object)}; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3107:1039,Inject,Inject,1039,https://root.cern,https://github.com/root-project/root/pull/3107,1,['Inject'],['Inject']
Security,This integrates the work of @mohammaduzair9 on stratified splitting for cross validation. Superseeds PR #2557.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2914:78,validat,validation,78,https://root.cern,https://github.com/root-project/root/pull/2914,1,['validat'],['validation']
Security,"This is ROOT6 support for [CMA-ES](https://www.lri.fr/~hansen/cmaesintro.html), a state-of-the-art black box stochastic minimizer. The implementation uses [libcmaes](https://github.com/beniz/libcmaes), a novel high performance C++11 (with Python bindings) library for blackbox optimization. The new minimizer yields better results than Minuit2 for most problems, though for an higher computation cost on average. See below for links to relevant benchmarks backing up these claims. This implementation is on behalf of [Inria Saclay Research group TAO](http://www.inria.fr/en/teams/tao), [Laboratoire de l'Accelerateur Lineaire, group AppStat](http://appstat.lal.in2p3.fr/) and [University Paris-Sud LRI](https://www.lri.fr/index_en.php?lang=EN). ===Features===; - Seamless replacement for Minuit, Minuit2 and Fumili; - Seamless support for RooFit; - Relying on libcmaes allows for best performances known for CMA-ES + access to several flavors of the original algorithm, yielding best results with a trade off for computational cost, as needed; - Compilation support for both Autotools and CMake; - Included tutorial files, tests, and a special benchmark vs Minuit2. ===Documentation===; - Main documentation for building and using the new minimizer is here: https://github.com/beniz/libcmaes/wiki/using-CMA-ES-in-CERN's-ROOT. ===Performances===; - On-par with Minuit2 on low dimensional problems (< 10-D), consistently beats Minuit2 in higher dimension, leading to better fits. These claims are backed by two benchmarks and two experiments on real world data (we are still waiting from some results from usage at CERN); - Benchmark CMA-ES vs Minuit on [BBOB](http://coco.gforge.inria.fr/doku.php?id=bbob-2013) available here: https://drive.google.com/open?id=0B3J1vWYhta9ibktXc2JLRUExUTA&authuser=0; - In-ROOT benchmark vs Minuit2 on low-dimensional problems, results available here: https://drive.google.com/open?id=0B3J1vWYhta9iTmR0T0hnN21lSGM&authuser=0; - Beats out Minuit2 up to 98% of the time o",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/40:917,access,access,917,https://root.cern,https://github.com/root-project/root/pull/40,1,['access'],['access']
Security,"This is a new feature to support random access compression. For details, please take a look at this link:; https://sft.its.cern.ch/jira/browse/ROOT-5076",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/152:40,access,access,40,https://root.cern,https://github.com/root-project/root/pull/152,1,['access'],['access']
Security,"This is a partial, but long-overdue modernisation of RooDataHist. Instead of accessing members in array or vectors, it was using the convoluted logic of:; - I need the event weight of event `i`.; - So I have to load the coordinates(!) of `i` by calling `get(i)`.; - This has the side effect of writing the weight that belongs to `i` into the mutable member `_curWgt` or similar.; - To retrieve the weight, I can now call `weight()`. This obviously creates problems and might be slow, so the overwriting of such internal buffers was removed to a large extent. Many things can now be retrieved by index (`weight(i)` for example), and many functions don't have side effects, any more. Further:; - Remove lots of unnecessary mutable members from RooDataHist/RooVectorDataStore.; - Remove side effects from many of RooDataHist's functions.; - Implement getters that don't rely on setting the active bin.; ""h.get(binNumber); h.weight() --> h.weight(binNumber)"" etc.; - Remove useless members such as _curWeight. Those are replaced by; a lookup in the weight vectors.; - Implement retrieval of bin coordinates and weights in batches.; - Sort functions that rely on the presence of side effects into a; deprecated section for doxygen.; - Fix docstrings of many functions.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6718:77,access,accessing,77,https://root.cern,https://github.com/root-project/root/pull/6718,1,['access'],['accessing']
Security,"This is a port of the cppyy patch which enables accessing lambdas in PyROOT. The patch: https://bitbucket.org/wlav/cppyy-backend/src/master/cling/patches/lambda.diff. Reproducer:; ```python; import cppyy; cppyy.cppdef(""auto l = []{cout << 100 << endl;};""); cppyy.gbl.l(); ```; Related Jira issue: https://sft.its.cern.ch/jira/browse/ROOT-7704. The PR is for now mainly meant as a proof of concept and to identify the missing feature in ROOT meta to get this working. Edit:. Here an updated link to the diff:. https://bitbucket.org/wlav/cppyy-backend/src/clingwrapper-1.12.0/cling/patches/lambda.diff",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5541:48,access,accessing,48,https://root.cern,https://github.com/root-project/root/pull/5541,1,['access'],['accessing']
Security,"This is a pull request for the development of PyTorch Interface in TMVA leveraging the PyMVA module. Feel free to comment and share feedback. I'm also maintaining a [blog](https://anirudhdagar.github.io/gsoc/) for updating my progress and sharing some insights about my project. # Progress. ## Header; - [x] Add Initial Structure for MethodPyTorch header file. ## Class MethodPyTorch; - [x] Implement the basic outline of the MethodPyTorch Class.; - [x] Implement the DeclareOptions methods.; - [x] Implement ProcessOptions methods.; - [x] Implement SetupTorchModel method.; - [x] Implement train methods. (Done); - [x] Implement simple basic structure for training; - [x] Add ability to load code from users; - [x] Convert numpy based dataloaders in TMVA to PyTorch dataloaders; - [x] Use default (optional optimizer SGD); - [x] Add savebest model; - [x] Add scheduler; - [x] Implement Validation; - [x] Add model prediction function loading ability; - [x] Implement user code ability; - [x] Implement helper function. ## Tests; - [x] Add testPyTorchClassification.C; - [x] Add generatePyTorchModelClassification.py; - [x] Load, Train model and test all the parameter arguments; - [x] Verify response after model prediction function is added.; - [x] Add testPyTorchMulticlass.C; - [x] Add generatePyTorchModelMulticlass.py; - [x] Load, Train model and test all the parameter arguments; - [x] Verify response after model prediction function is added.; - [x] Add testPyTorchRegression.C; - [x] Add generatePyTorchModelRegression.py; - [x] Load, Train model and test all the parameter arguments; - [x] Verify response after model prediction function is added. ## GPU; - [x] Make GPU Compatible (Require GPU for testing). ## Tutorials; These are implemented in #6273. ## Documentation; - [x] Improve docs",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5757:887,Validat,Validation,887,https://root.cern,https://github.com/root-project/root/pull/5757,1,['Validat'],['Validation']
Security,"This is a reproducer (segfaults frequently but not always):. ```cpp; #include <ROOT/TTreeProcessorMT.hxx>; #include <TROOT.h>; #include <TTreeReader.h>; #include <TTreeReaderArray.h>. void workload(TTreeReader &r) {; TTreeReaderArray<double> ra(r, ""truthCaloPt"");; while (r.Next()); ra.GetSize();; }. int main() {; ROOT::EnableImplicitMT(2);; ROOT::TTreeProcessorMT mt({""f1.root"", ""f2.root"", ""f3.root"", ""f4.root"", ""f5.root""}, ""t"");; mt.Process(workload);; }; ```. With these files: [files.zip](https://github.com/root-project/root/files/8451196/files.zip). The problem seems to be at the level of TGenCollectionProxy: multiple threads end up sharing the same TGenCollectionProxy objects, which is not thread safe (e.g. because of https://github.com/root-project/root/blob/bce5777b8f479212babb7a8af5485d9a6bbd251e/io/io/src/TEmulatedCollectionProxy.cxx#L84-L85). In principle, however, as we use different TChains/TTreeReaders in each thread, they should also access different TGenCollectionProxy instances. Example backtraces at the point of crash (this is one of several failure modes, but it's the one where the problem is clear -- both threads, at frame 0, are accessing the same TGenCollectionProxy instance):. ```; >>> thread apply all bt 10. Thread 2 (Thread 0x7fffdc0e2640 (LWP 312745) ""repro_ttreeproc""):; #0 0x00007ffff767d973 in TGenCollectionProxy::PopProxy (this=0x7fffd4016090) at ../io/io/src/TGenCollectionProxy.cxx:1333; #1 0x00007ffff7d57a15 in TVirtualCollectionProxy::TPushPop::~TPushPop (this=0x7fffdc0dad20, __in_chrg=<optimized out>) at ../core/cont/inc/TVirtualCollectionProxy.h:65; #2 0x00007ffff76274b1 in TEmulatedCollectionProxy::Destructor (this=0x7fffd4016090, p=0x7fffd40156e0, dtorOnly=false) at ../io/io/src/TEmulatedCollectionProxy.cxx:87; #3 0x00007ffff7d4f8c2 in TClass::Destructor (this=0x7fffd40152c0, obj=0x7fffd40156e0, dtorOnly=false) at ../core/meta/src/TClass.cxx:5417; #4 0x00007ffff676afdb in TBranchElement::ReleaseObject (this=0x7fffd4017590) at ../tree/t",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10357:959,access,access,959,https://root.cern,https://github.com/root-project/root/issues/10357,1,['access'],['access']
Security,"This is a small MR for the addition of a few extra public accessor methods for some parts of the root browser classes. These classes are using in the new, experiment, RooBrowser. Having public access to these data members will help with the future development of that feature, and I hope the methods added will be acceptable. . Please Note: Will need pulling into the 6.28 branch!",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12064:58,access,accessor,58,https://root.cern,https://github.com/root-project/root/pull/12064,2,['access'],"['access', 'accessor']"
Security,"This is actually still buggy and we now have a use case where not having it brings down the storage of some site, due to the excessive number of IOPS per server (50 IOPS, 720 concurrent accesses to 3 storage servers for a total of 0.2PB of data being read). Enabling this would allow us to reduce the IOPS by a factor ~5. The actual error that we get by enabling it is:. ```; [1923904:internal-dpl-aod-reader]: Fatal: fExtraBasket == nullptr && ""fExtraBasket should have been set to nullptr by GetFreshBasket"" violated at line 1679 of `/local/workspace/DailyBuilds/DailyO2Physics-slc9/daily-tags.nRQdop69vk/SOURCES/ROOT/v6-32-06-alice1/v6-32-06-alice1/tree/tree/src/TBranch.cxx'; [1923904:internal-dpl-aod-reader]: aborting; ```. I can provide some file which has the issue, if needed. This becomes rather urgent for us now.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8962#issuecomment-2393067291:186,access,accesses,186,https://root.cern,https://github.com/root-project/root/issues/8962#issuecomment-2393067291,1,['access'],['accesses']
Security,"This is also the case for the upper y axis, and x axes. . It seems to be related to the distinction between ; a) fLowYaxis, fUpYaxis members, and ; b) the axes returned by GetLowerRefYaxis(), GetUpperRefYaxis() functions. . The number of division in the drawn axes are taken from the former which can be accessed by GetLowYaxis() and GetUpYaxis() functions, i.e. `rp1->GetLowYaxis()->SetNdivisions(2)`. There is nothing at the moment to sync the number of divisions for the two sets of axes (a and b), though I suppose this is possible?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9172#issuecomment-964536012:304,access,accessed,304,https://root.cern,https://github.com/root-project/root/issues/9172#issuecomment-964536012,1,['access'],['accessed']
Security,This is an implementation of HashedNets (https://arxiv.org/pdf/1504.04788.pdf) in ROOT. It is built over the existing implementation of DNNs in TMVA and supports multithreading.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/220:29,Hash,HashedNets,29,https://root.cern,https://github.com/root-project/root/pull/220,1,['Hash'],['HashedNets']
Security,"This is an update to PR #40 that includes:; - a rebase with all CMA-ES commits at the tip of master (as of 04/17/2017); - a set of small fixes as requested by @vgvassilev . As a reminder, this PR fetches, builds and wraps https://github.com/beniz/libcmaes/ with ROOT. This PR builds ROOT with CMA-ES support and I've been able to run some of the tests, indicating that it is working fine. **Issues**; However, some caveats remain, on which help is required, at the moment. - [ ] `build/include/libcmaes/cmaes.h` and `build/include/Eigen` are not properly passed to the compiler at build time. I cannot find how to do it properly. At the moment I am using symlinks as a temporary hack (see how to build below). - [ ] To access the inner option of the CMA-ES Minimizer, I was using code similar to; ```C++; ROOT::Math::IOptions &opts = ROOT::Math::MinimizerOptions::Default(fitter);; opts.SetIntValue(""lambda"",lambda);; ```; Code above now appears to fail with errors such as:; ```; root [0] .L tutorials/fit/cmaesFitBench.C++g; Info in <TUnixSystem::ACLiC>: creating shared library /home/beniz/research/siminole/dev/tmp/root/build/./tutorials/fit/cmaesFitBench_C.so; In file included from input_line_11:9:; ././tutorials/fit/cmaesFitBench.C:58:16: error: no type named 'IOptions' in namespace 'ROOT::Math'; ROOT::Math::IOptions *opts = ROOT::Math::MinimizerOptions::Default(fitter);; ~~~~~~~~~~~~^; ././tutorials/fit/cmaesFitBench.C:58:45: error: no member named 'MinimizerOptions' in namespace 'ROOT::Math'; ROOT::Math::IOptions *opts = ROOT::Math::MinimizerOptions::Default(fitter);; ~~~~~~~~~~~~^; Error in <ACLiC>: Dictionary generation failed!; ```; Help is needed to fix the above. **How to build**; ```; cd build; cmake ../ -Dminuit2=on -Dtesting=on -Dlibcmaes=on; make; ```; The build will fail because of the header issue mentioned above, so do:; ```; cd include; ln -s eigen3/Eigen .; ln -s eigen3/unsupported .; cd ..; make; ```; You can then use the newly built ROOT and test that CMA-ES is",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/507:719,access,access,719,https://root.cern,https://github.com/root-project/root/pull/507,1,['access'],['access']
Security,"This is based on @dpiparo 's work to parallelize `GetEntry`. The basic idea is, when we are flushing all active branches, we do each branch in parallel. We have to maintain mutual exclusion when interacting with the `TTree` or `TFile`, but we can parallelize the compression of the baskets (which is a significant amount of CPU time). Note the least satisfactory part of this work is having to use a mutex to access the byte-counters in `TTree`; this is because these fields are serialized and `std::atomic<>` is not serializable. Any hints as to how to get around this?. Setting `MainEvent.cxx` in the `test` sub-directory to use this (with LZMA as the compression algorithm), I get:. ```; RealTime=76.340815 seconds, CpuTime=131.770000 seconds; ```. @pcanal @Dr15Jones - this spun off from our discussion about CMSSW efficiency. It's really easy to parallelize `FlushBaskets` using a `tbb::task_group` that I later wait for. However, continuation-style programming is difficult here because `FlushBaskets` is called from deep callstacks. Further, there's a lot of state in the basket itself we'd need to unravel. Looking at stack traces for the sample `Event` program, the next most advantageous place to parallelize compression is here:. ```; #11 0x00007f00743e80fe in R__zipMultipleAlgorithm ; #12 0x00007f00729aec25 in TBasket::WriteBuffer ; #13 0x00007f00729b53f3 in TBranch::WriteBasket ; #14 0x00007f00729b5c95 in TBranch::Fill ; #15 0x00007f00729cb630 in TBranchElement::Fill; #16 0x00007f00729cb418 in TBranchElement::Fill ; #17 0x00007f00729cb418 in TBranchElement::Fill ; #18 0x00007f0072a063f3 in TTree::Fill; ```. The idea would be to make `WriteBuffer` kick off a separate task, but block `TBranch::Fill` (and a handful of other functions, such as anything that can change the branch's `TFile`) from being called until the `WriteBuffer` task was completed. Harder than this approach, but not impossible.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/277:409,access,access,409,https://root.cern,https://github.com/root-project/root/pull/277,1,['access'],['access']
Security,This is because they did that ; https://github.com/root-project/root/blob/05c2b9ef3ff35b9023eb7b9e20db412f5f8dd89b/core/foundation/inc/ROOT/span.hxx#L153. IE inject in the std namespace they own span implementation which is just asking for trouble,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13032#issuecomment-1595198646:158,inject,inject,158,https://root.cern,https://github.com/root-project/root/issues/13032#issuecomment-1595198646,1,['inject'],['inject']
Security,"This is first step to make Web GUI code running in multiple threads.; There are many threads introduced and many communication patterns are supported. 1. Provide special thread, which handle all http requests of THttpServer.; This thread serves JavaScript/HTML files and redirects websocket requests to recipients.; Try to reduce access to global ROOT structures from that thread - only list of classes for the moment is used. Potentially many THttpServer instances with such thread can run fully independent. 2. Let run websocket handlers (THttpWSHandler) in separate threads. ; Requires correct locking of shared resources. 3. Support special threads for sending data via websocket from server to clients. ; When many clients are connected to the same TWebWindow, slowest client can ; break down performance. With use of such specialized thread problem can be solved. 4. Implement all necessary locks and protections to use many TWebWindows in different user threads. ; Provide TWebWindow::Run(double) method, which allows to run window code in any user thread. . Introduce tutorials/v7/draw_mt.cxx macro, which shows how three RCanvas instances can run; in three independent thread and regularly updated. Of course, default behavior should work - all functionality runs in main thread. ; Means THttpServer requests processing, websockets processing, RCanvas handling - ; everything runs in main application thread. Simple, but not scalable. This is very preliminary code , I still plan to change/extend some API.; Any comments comments are welcome",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2487:330,access,access,330,https://root.cern,https://github.com/root-project/root/pull/2487,1,['access'],['access']
Security,"This is great news! I'll stop making code changes to the PR now, so we keep the validated state. I'll just need to update a few more times for the commit history and bookkeeping of patches.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14507#issuecomment-2002034945:80,validat,validated,80,https://root.cern,https://github.com/root-project/root/pull/14507#issuecomment-2002034945,1,['validat'],['validated']
Security,This is needed so that the new RooBrowser doesn't need to access the private collision grid of the TPad. These additional options allow the placement of the box with choice of priority over directions as well as option to place within the margins of the pad. . Wanted for 6.28 release too!,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12066:58,access,access,58,https://root.cern,https://github.com/root-project/root/pull/12066,1,['access'],['access']
Security,This is required to inject SOFIE's inference functions into RDataFrame's event loops.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9241:20,inject,inject,20,https://root.cern,https://github.com/root-project/root/issues/9241,1,['inject'],['inject']
Security,"This is special drawable, which I used as playground for new functionality. `RHistStatBox` class is drawable, which hold reference to histogram and can calculate statistic in range, selected in the `RFrame` on the client side. If there are several clients (several web browsers with shown canvas) each client will be able to select zoomed range individually and get right statistic. If necessary, several `RHistStatBox` for different histograms can be shown on the RCanvas - even if only one histogram is displayed. `RHistStatBox` object instance is not send to client as simple `RText` or `RLine`. Instead - only css attributes (fill, line, text colors etc) are send. This is necessary, while otherwise histogram will be send - and it can be huge. . Special `RDrawableRequest` / `RDrawableReply` classes are introduced. They allow to submit any kind of request to selected drawable from the client. Now it is universal method to access C++ functionality from JavaScript. It is replacement to `gROOT->ProcessLine()` which was used up to now. . Dedicated `RStatBoxRequest` class used to get statbox lines every time when zooming is changed. Via `friend class` relation it can access private methods in `RHistStatBox`. This is solution for methods which should remain protected from user. For the future. `RHistStatBox` can be generalized - one can extract `RStatBox` base class and use it to implement statbox for `RGraph`, `RProfile` or any other classes where it make sense. Here is actual screenshot:; ![Canvas](https://user-images.githubusercontent.com/4936580/79573534-181ec500-80bf-11ea-9326-659b06fcbdf2.png)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5379:930,access,access,930,https://root.cern,https://github.com/root-project/root/pull/5379,2,['access'],['access']
Security,"This is spinning off the commits from #15616 that don't depend on a new Clad release, so we can merge and validate the development in the nightlies early.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16007:106,validat,validate,106,https://root.cern,https://github.com/root-project/root/pull/16007,1,['validat'],['validate']
Security,"This is the first attempt for merging the bulk IO APIs (hidden inside the `ROOT::Internal` namespace). The initial goal here is to start getting reviewer attention and feedback. The bulk IO APIs aim to provide as fast access as possible in the case where the user is using relatively simple datatypes and the objects can be deserialized ""non-destructively"" (i.e., in-place in the existing memory buffers). For example - primitives and lists of primitives are supported; anything needing references are not. Despite the fact many of ROOT's very useful deserialization features are not supported, the limited feature set covers a range of analysis use cases. In particular, the current version of CMS's proposed NanoAOD format can be read solely via bulk APIs. Where the bulk IO APIs are applicable, we see an order-magnitude improvement in event rates for some use cases (including CMS NanoAOD). The speedup becomes more noticeable as the data read from the event is smaller (meaning the traditional ROOT IO overheads are larger). Somewhere in the neighborhood of 5KB objects read per event is the point where bulk IO APIs should be noticeably faster. This PR provides three interfaces:; - A raw, low-level interface. The user can invoke the bulk IO APIs directly and get a buffer of primitive types, serialized or deserialized. It is not envisioned this is used by users, but by API writers.; - A `TTreeReader`-like interface, `TTreeReaderFast`. This is meant to be used by users; it utilizes the low-level interface to retrieve the serialized buffer and templated code will inline the deserializing as part of iterating through the tree. The speed here is gained by the fact only a single pass in memory is needed to deserialize *and* apply user code, rather than two.; - The intent is that this interface can be extended in the future and used by `TDataFrame`, provided we can make `TDataFrame` sufficiently fast.; - A Python-based `numpy` export interface. This exposes the (possibly serialized) me",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/943:218,access,access,218,https://root.cern,https://github.com/root-project/root/pull/943,1,['access'],['access']
Security,"This is the second attempt for merging the bulk IO APIs (hidden inside the ROOT::Internal namespace); original version was in #943; this is a large rebase and update (particularly, removing the buffer sharing between the ROOT and the user). The initial goal here is to get another round of @pcanal attention and feedback. The bulk IO APIs aim to provide as fast access as possible in the case where the user is using relatively simple datatypes and the objects can be deserialized ""non-destructively"" (i.e., in-place in the existing memory buffers). For example - primitives and lists of primitives are supported; anything needing references are not. Despite the fact many of ROOT's very useful deserialization features are not supported, the limited feature set covers a range of analysis use cases. In particular, the current version of CMS's proposed NanoAOD format can be read solely via bulk APIs. Where the bulk IO APIs are applicable, we see an order-magnitude improvement in event rates for some use cases (including CMS NanoAOD). The speedup becomes more noticeable as the data read from the event is smaller (meaning the traditional ROOT IO overheads are larger). Somewhere in the neighborhood of 5KB objects read per event is the point where bulk IO APIs should be noticeably faster. This PR provides three interfaces:. * A raw, low-level interface. The user can invoke the bulk IO APIs directly and get a buffer of primitive types, serialized or deserialized. It is not envisioned this is used by users, but by API writers.; * A TTreeReader-like interface, TTreeReaderFast. This is meant to be used by users; it utilizes the low-level interface to retrieve the serialized buffer and templated code will inline the deserializing as part of iterating through the tree. The speed here is gained by the fact only a single pass in memory is needed to deserialize and apply user code, rather than two.; * The intent is that this interface can be extended in the future and used by TDataFrame, pr",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2519:362,access,access,362,https://root.cern,https://github.com/root-project/root/pull/2519,1,['access'],['access']
Security,"This is to make the RooArgSet payload accessible via; RooCmdConfig::decodeObjOnTheFly, which is used [in one of the RooNLLVar; constructors](https://github.com/root-project/root/blob/master/roofit/roofitcore/src/RooNLLVar.cxx#L97). This fixes Jira issue [ROOT-6895](https://sft.its.cern.ch/jira/browse/ROOT-6895).",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8299:38,access,accessible,38,https://root.cern,https://github.com/root-project/root/pull/8299,1,['access'],['accessible']
Security,"This is very first attempt to make ROOT I/O conform RDrawable classes with attributes.; Means objects which are managed with `shared_ptr` duplicated by direct pointer, which is used only for I/O (see `RDrawableAttributes::fContIO` member in RDrawingAttr.hxx file). Attributes stored in `std::unordered_map<std::string, std::unique_ptr<Value_t>>` class. `Value_t` has several sub-classes. It potentially can be replaced by `std::variant<bool,int,double,std::string>` once we had it full support for I/O (especially for JSON). Special ""Visitor"" class can access or modify attributes. ""Visitor"" should be base class for all kind of LineAttr, FillAttr, ... classes. Visitor can has list of default values which first: specify name and kind of existing fields, and provide defaults which can be applied to the object. RStyleNew class is set blocks of attributes with selector rule (like in vanila CSS). For the moment selector not really implemented - just simple type of class match. I/O same as for attributes, therefore RStyleNew can be transported to client in same way as attributes. In JSON attributes storage looks like:; ```; ""fAttr"" : {; ""_typename"" : ""ROOT::Experimental::RDrawableAttributes"",; ""fContIO"" : {; ""_typename"" : ""ROOT::Experimental::RDrawableAttributes::Record_t"",; ""user_class"" : """",; ""map"" : {; ""_typename"": ""unordered_map<string,ROOT::Experimental::RDrawableAttributes::Value_t*>"", ; ""line_width"": {; ""_typename"" : ""ROOT::Experimental::RDrawableAttributes::DoubleValue_t"",; ""v"" : 2; }; }; }; }; ```; I can easily exclude ""_typename"" already now. ; Also one can implement compressions rule for `DoubleValue_t` class - store only ""v"" data member that finally we should get:; ```; ""line_width"": 2; ```; New DrawableAttributes class can be use in `RPadLength` implementation.; It has three components: ""fUser"", ""fPixel"", ""fNormal"". These components can be created only when really specified. This solves problem of **undefined** state for user-coordinate part.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4352:553,access,access,553,https://root.cern,https://github.com/root-project/root/pull/4352,1,['access'],['access']
Security,"This makes it possible to create a pre-downloaded cache before running the tests, so that it is possible to run the tests in an environment without network access.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/404:156,access,access,156,https://root.cern,https://github.com/root-project/root/pull/404,1,['access'],['access']
Security,"This method can be called instead of `Fill` if the `RNTupleWriter` or `RNTupleFillContext` should not commit the cluster automatically. Instead the calling code must check `ShouldCommitCluster()` and call it explicitly if necessary. FYI @makortel this should be the interface that we were discussing some time ago, and should also allow to append multiple RNTuples into a single `TFile` using parallel writing: The framework must only call `FillNoCommit` and manually synchronize access to the underlying `TFile` while explicitly invoking `CommitCluster`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15239:480,access,access,480,https://root.cern,https://github.com/root-project/root/pull/15239,1,['access'],['access']
Security,"This patch already landed in https://reviews.llvm.org/rL336660 in Clang. This was biting us to enable runtime modules in CMSSW. Detailed desciption:; https://bugs.llvm.org/show_bug.cgi?id=37878. lookupModule was falling back to loadSubdirectoryModuleMaps when it couldn't; find ModuleName in (proper) search paths. This was causing iteration over all; files in the search path subdirectories for example ""/usr/include/foobar"" in; bugzilla case. Users don't expect Clang to load modulemaps in subdirectories implicitly, and; also the disk access is not cheap. if (AllowExtraModuleMapSearch) true with ObjC with @import ModuleName.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2307:538,access,access,538,https://root.cern,https://github.com/root-project/root/pull/2307,1,['access'],['access']
Security,"This patch consolidates the symbol resolution facilities throughout TCling into; a new singleton class Dyld part of the cling's DynamicLibraryManager. The new dyld is responsible for:; * Symlink resolution -- it implements a memory efficient representation of; the full path to shared objects allowing search at constant time O(1). This; also fixes issues when resolving symbols from OSX where the system libraries; contain multiple levels of symlinks.; * Bloom filter optimization -- it uses a stohastic data structure which gives; a definitive answer if a symbol is not in the set. The implementation checks; the .gnu.hash section in ELF which is the GNU implementation of a bloom; filter and uses it. If the symbol is not in the bloom filter, the; implementation builds its own and uses it. The measured performance of the; bloom filter is 30% speed up for 2mb more memory. The custom bloom filter on; top of the .gnu.hash filter gives 1-2% better performance.; The advantage for the custom bloom filter is that it works on all; implementations which do not support .gnu.hash (windows and osx). It is also; customizable if we want to further reduce the false positive rates; (currently at p=2%).; * Hash table optimization -- we build a hash table which contains all symbols; for a given library. This allows us to avoid the fallback symbol iteration; if multiple symbols from the same library are requested. The hash table; optimization targets to optimize the case where the bloom filter tells us; the symbol is *maybe* in the library. Patch by Alexander Penev (@alexander-penev) and me!. Performance Report; ===. |platform|test|PCH-time|Module-time|Module-PR-time|; |:--------|:---|:---------:|:-----------:|:---------------|; |osx 10.14|roottest-python-pythonizations|22,82|26,89|20,08|; |osx 10.14| roottest-cling| 589,67|452,97|307,34|; |osx 10.14| roottest-python| 377,69|475,78|311,5|; |osx 10.14| roottest-root-hist| 60,59|90,98|49,65|; |osx 10.14| roottest-root-math| 106,18|140,41|73,96|",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4717:620,hash,hash,620,https://root.cern,https://github.com/root-project/root/pull/4717,2,['hash'],['hash']
Security,This prevents the vector to be reallocated if the size exceeds the capacity of; the vector causing invalid pointer accesses. Fixes ROOT-7749.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3658:115,access,accesses,115,https://root.cern,https://github.com/root-project/root/pull/3658,1,['access'],['accesses']
Security,This prevents the vector to be reallocated if the size exceeds the capacity of; the vector causing invalid pointer accesses. Fixes ROOT-7749. Backport requested https://sft.its.cern.ch/jira/browse/ROOT-10080,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3726:115,access,accesses,115,https://root.cern,https://github.com/root-project/root/pull/3726,2,['access'],['accesses']
Security,This prevents the vector to be reallocated if the size exceeds the capacity of; the vector causing invalid pointer accesses. Fixes ROOT-7749. Backport requested in https://sft.its.cern.ch/jira/browse/ROOT-10080,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3728:115,access,accesses,115,https://root.cern,https://github.com/root-project/root/pull/3728,1,['access'],['accesses']
Security,"This pull request **introduces 1 alert** and **fixes 7** when merging 7ea0b6a77133cca849ba61d0fbb3eb99bbaafb5f into ff86c30992658502ade3da82620fcd6640255874 - [view on LGTM.com](https://lgtm.com/projects/g/root-project/root/rev/pr-beca6c3c4322c0b9188d324b720df8fe2c745852). **new alerts:**. * 1 for Access to let\-bound variable in temporal dead zone. **fixed alerts:**. * 5 for Unused variable, import, function or class; * 1 for Implicit operand conversion; * 1 for Variable not declared before use",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10250#issuecomment-1080754034:299,Access,Access,299,https://root.cern,https://github.com/root-project/root/pull/10250#issuecomment-1080754034,1,['Access'],['Access']
Security,"This pull request **introduces 38 alerts** and **fixes 3** when merging b3936c7b478bb23ee18e6ae028947299636e0071 into 73c33bc5b0a7c7aa667ac638a3b7b797d4bf668f - [view on LGTM.com](https://lgtm.com/projects/g/root-project/root/rev/pr-df951291318d1ddfc4e73567c0c0c0464e6617fd). **new alerts:**. * 9 for Variable not declared before use; * 9 for Unused variable, import, function or class; * 5 for DOM text reinterpreted as HTML; * 4 for Superfluous trailing arguments; * 3 for Client\-side cross\-site scripting; * 2 for Useless conditional; * 2 for Property access on null or undefined; * 2 for Unneeded defensive code; * 2 for Invocation of non\-function. **fixed alerts:**. * 3 for DOM text reinterpreted as HTML",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10236#issuecomment-1078895409:557,access,access,557,https://root.cern,https://github.com/root-project/root/pull/10236#issuecomment-1078895409,1,['access'],['access']
Security,This pull request **introduces 52 alerts** and **fixes 4** when merging 82136dfb29c3098b0382c33d1059f06012679a6d into f2caa8670c86ea4d18a5fefe78677f75b50ddf63 - [view on LGTM.com](https://lgtm.com/projects/g/root-project/root/rev/pr-7b375105f48eaf562f296bf9e6fe2cf58bcfcd11). **new alerts:**. * 52 for Expression has no effect. **fixed alerts:**. * 2 for Property access on null or undefined; * 2 for Invocation of non\-function,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11210#issuecomment-1219396854:364,access,access,364,https://root.cern,https://github.com/root-project/root/pull/11210#issuecomment-1219396854,1,['access'],['access']
Security,"This pull request generalizes the `RDaos` backend to support multiple attribute keys per read-write operation, grouping requested blobs by their corresponding <object id, distribution key> pairs - defined as a struct `RDaosContainer::ROidDkeyPair(daos_obj_id_t, DistributionKey_t)`. . ## Changes or fixes:. - `RDaosObject::FetchUpdateArgs`, which prepares the arguments for requests to `daos_obj_fetch` or `daos_obj_update`. Now supports multiple attribute keys, I/O operation descriptors and I/O vectors, to send in one RW call to distributed storage.; - `RDaosContainer::RWOperation`, which interfaces between `RPageStorageDaos` and `RDaosObject`, supports multiple attribute keys and I/O vectors. ; - `RPageSourceDaos::LoadClusters` collects requested pages in an `unordered_map<ROidDkeyPair, RWOperation, ROidDkeyPair::Hash>` by their corresponding object IDs and distribution keys (currently, OID: unique page number and Dkey: const, so this PR should have no real effect on performance or results); - `RDaosContainer::VectorReadWrite` and its wrappers `WriteV`, `ReadV` now take an `unordered_map<ROidDkeyPair. RWOperation, ROidDkeyPair::Hash>` instead of `vector<RWOperation>`. This should allow for multiple requests spread throughout the container to be sent out in once call, each of which fetching or updating several blobs at once.; - `RDaosContainer::VectorReadWrite` implementation has been moved to `RDaos.cxx` file, de-templating the function argument (which is always expected to be either a `RDaosObject::Fetch` or a `::Update` non-static method). ## Checklist:. - [x] tested changes locally; - [x] updated the docs (if necessary). This PR fixes #",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10860:823,Hash,Hash,823,https://root.cern,https://github.com/root-project/root/pull/10860,2,['Hash'],['Hash']
Security,"This pull request introduces RField support for user-defined classes that behave as collections of elements. These classes specify a ""collection proxy"" that provides access to the elements in the collection.; A legacy collection proxy is provided in the form of an instance of a class derived from `TVirtualCollectionProxy`. The collection proxy for a class is typically set during initialization, usually using `TClass::CopyCollectionProxy()` or similar. In this pull request, we introduce support for legacy collection proxies derived from the `TVirtualCollectionProxy` class, although in later stages, RNTuple might provide this functionality through an interface different interface. At a bare minimum, the user is required to provide an implementation for the following functions in `TVirtualCollectionProxy`:; - `HasPointers()`, `GetProperties()`, `GetValueClass()`, `GetType()`, `Sizeof()`: for general information about the collection and its value type.; - `Sizeof()`, `At()`, `Clear()`, and `Insert()`: for element access; - `PushProxy()`, `PopProxy()`: for selecting the target object. A usage example can be seen [here](https://github.com/root-project/root/pull/11525/files#diff-81832cd72f5d9af1508fd153abdf63b6406256248f1d1440f966e82e628da141). ## Changes or fixes:; - Added class `RCollectionClassField`, representing a field of a user-defined class that behaves as a collection that is compliant with the `TVirtualCollectionProxy` interface.; Given that the `RField<T>` primary template definition (that used if no specialization matches) uses `RClassField` to store members of a class, we rely on an additional helper type (`IsCollectionProxy<T>`) to annotate that a particular class has an associated collection proxy (see example below).; ```c++; // Alternatively, this can be specified via a member type in the user-defined class; see the documentation; template <>; struct IsCollectionProxy<ProxiedCollection> : std::true_type {};. auto model = RNTupleModel::Create();; auto fieldK",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11525:166,access,access,166,https://root.cern,https://github.com/root-project/root/pull/11525,1,['access'],['access']
Security,"This pull request introduces ntuple management at the DAOS container level, extending support for more than one ntuple to populate a container. ## Changes or fixes:; - Support for up to 2\^32 - 1 ntuples in a DAOS container, by assigning an index to a previously-unused portion of the DAOS Object ID address space. The index thus induces a subspace dedicated for all objects belonging to a given ntuple. The zeroth space (index `0`) is reserved for any container-wide metadata objects that may need to be stored in the future.; - `ROOT::Experimental::Detail::RDaosContainerNTupleLocator` is a structure that concentrates the functionality for locating and retrieving stored metadata from an ntuple by its name.; - The structure hashes the name into a well-distributed 32-bit index. Collisions are expressly forbidden to simplify implementation; a different ntuple name must be provided to the sink upon creation if an ntuple stored in the container with another name happens to have the same hash (index).; - The sink (in `RPageSinkDaos` ctor) uses the locator to assign an index for a new ntuple, which may fail if the name's resulting hash collides with some other ntuple present unless the name matches. Overwriting (""recreating"") an existing ntuple is allowed in this context.; - The source (in `RPageSourceDaos::AttachImpl()`) locates the ntuple by the name to validate that it is indeed present in storage (otherwise, an exception is thrown). The objects that are read for this validation are reused as part of the ntuple metadata deserialization procedure when attaching. ; - Unit test coverage is provided for the following cases: write and read from different ntuples in a container; and attempt to open an ntuple that was not stored there. ## Checklist:. - [x] tested changes locally + cluster on single client with libdaos 2.2.0; - [x] updated the docs (if necessary). This PR fixes #10958",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11480:728,hash,hashes,728,https://root.cern,https://github.com/root-project/root/pull/11480,5,"['hash', 'validat']","['hash', 'hashes', 'validate', 'validation']"
Security,This pull request replaces a variable's type from `size_t` to `uint64_t` to avoid warnings on 32-bit platforms. The variable is the output of a hashing function and undergoes shifting by 32 bits as the seeding step of a hash combination between the two-halves of a 64-bit value. The change has no functional impact. It prevents the following compilation warning in 32-bit systems:. ```; In file included from /path/to/src/RPageStorageDaos.cxx:29:; /path/to/src/tree/ntuple/v7/inc/ROOT/RPageStorageDaos.hxx: In static member function ‘static ROOT::Experimental::Detail::ntuple_index_t ROOT::Experimental::Detail::RDaosContainerNTupleLocator::Hash(const string&)’:; /path/to/src/tree/ntuple/v7/inc/ROOT/RPageStorageDaos.hxx:120:43: warning: right shift count >= width of type [-Wshift-count-overflow]; 120 | auto seed = static_cast<uint32_t>(h >> 32);; ```. ## Checklist:. - [x] tested changes locally,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12473:144,hash,hashing,144,https://root.cern,https://github.com/root-project/root/pull/12473,3,"['Hash', 'hash']","['Hash', 'hash', 'hashing']"
Security,"This pull request replaces the implementation of `InputValidator::validate()` by simpler, more maintainable code that also fixes JIRA issue [ROOT-9202](https://sft.its.cern.ch/jira/browse/ROOT-9202). The previous implementation was unable to properly handle line continuation after ',' or '\\'. Specifically, it skipped over non-punctuation tokens, entering continuation mode even if ',' or '\' were not the last tokens in the input, e.g.; ```; int a, b; ```; or; ```; int a \ b; ```; caused cling to request more input, where it shouldn't. ## Changes or fixes:; - MetaLexer:; - Return `/*` and `*/` as independent tokens.; - Added `ReadToEndOfLine()` function (consume input until '\r', '\n', or EOF).; - Added `MetaLexer::RAII` that saves the current lexing position and restores it on destruction.; - Remove unused `LexPunctuatorAndAdvance()`.; - Rewrite of `InputValidator::validate()`. ## Checklist:; - [X] tested changes locally. Fixes [ROOT-9202](https://sft.its.cern.ch/jira/browse/ROOT-9202).",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8771:66,validat,validate,66,https://root.cern,https://github.com/root-project/root/pull/8771,2,['validat'],['validate']
Security,"This pull request sets up GitHub code scanning for this repository. Once the scans have completed and the checks have passed, the analysis results for this pull request branch will appear on [this overview](/root-project/root/security/code-scanning?query=pr%3A13007+tool%3ASonarCloud+is%3Aopen). Once you merge this pull request, the 'Security' tab will show more code scanning analysis results (for example, for the default branch). Depending on your configuration and choice of analysis tool, future pull requests will be annotated with code scanning analysis results. For more information about GitHub code scanning, check out [the documentation](https://docs.github.com/en/code-security/code-scanning/automatically-scanning-your-code-for-vulnerabilities-and-errors/about-code-scanning).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13007#issuecomment-1589877841:226,secur,security,226,https://root.cern,https://github.com/root-project/root/pull/13007#issuecomment-1589877841,3,"['Secur', 'secur']","['Security', 'security']"
Security,"This replaces the homegrown MnRefCountedPointer with std::shared_ptr. Using standard components is better, of course, and clang's address sanitizer has reported issues with MnRefCountedPointer, another reason to do this. I removed obsolete implementations of copy constructors, copy assignment operators and destructors from the affected classes, that just implemented the default behaviour. The patch currently looks very complicated, because I used the new clang-formatted style, but will become much more easy to read when #6917 is accepted.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6918:138,sanitiz,sanitizer,138,https://root.cern,https://github.com/root-project/root/pull/6918,1,['sanitiz'],['sanitizer']
Security,"This results in more modular code that is also safer: the `ROOT::Fit::Fitter` has no access to the RooAbsMinimizerFcn anymore, only to the member that is a lightweight adapter. This means the `RooAbsMinimizerFcn` also doesn't get cloned unexpectedly, so we don't need extra checks in the RooMinimizer to account for that!",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12348:85,access,access,85,https://root.cern,https://github.com/root-project/root/pull/12348,1,['access'],['access']
Security,"This reverts commit b327dd8fd159494666842607708140c429fa4055.; This should fix the following error:; ```; Error in <TPServerSocket::Authenticate>: can't find SrvAuthenticate; ```; as reported on the forum: [Getting ""can't find SrvAuthenticate"" in authserver.C](https://root-forum.cern.ch/t/getting-cant-find-srvauthenticate-in-authserver-c/54469)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14149:132,Authenticat,Authenticate,132,https://root.cern,https://github.com/root-project/root/pull/14149,1,['Authenticat'],['Authenticate']
Security,"This set of patches makes THDFSFile work again. ; It also enables CMake build and allows linking against libhdfs3 (experimental native HDFS client implementation). Kind of major change: HDFS URLs are now absolute instead of relative as it was before. I.e. one have to use ""hdfs:///user/username/dir1/file2.root"" notation to access file in the home directory. ; This makes HDFS URLs somewhat standard in the sense that they could be used interchangeably between ROOT and Hadoop API and command-line utilities.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/94:324,access,access,324,https://root.cern,https://github.com/root-project/root/pull/94,1,['access'],['access']
Security,"This should be now final. In the new commit, I use `validatedColumns[0/1]` without converting them to string.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9770#issuecomment-1026932370:52,validat,validatedColumns,52,https://root.cern,https://github.com/root-project/root/pull/9770#issuecomment-1026932370,1,['validat'],['validatedColumns']
Security,This should fix failures in `test_readTotemNtuple` that started happening after the switch from `Calc` to `ProcessLine` (the access to the zero-length ReaderArrays was caught by `ProcessLine`'s instrumentation).,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1938:125,access,access,125,https://root.cern,https://github.com/root-project/root/pull/1938,1,['access'],['access']
Security,"This should fix the recent test failures seen in `gtest-tree-treeplayer-test-treetreeplayertestUnit`. Full lldb stack traces at https://codimd.web.cern.ch/s/QKEMHg5H1. # PR description. The test was dynamically allocating the array data members of the `Data` struct, but never deallocating them. This commit polishes the `Data` struct definition and ensures proper management of the data members. The previous way of writing data to the TTree was leading to a bad memory access in the ReadBasicPointer inlined function in TStreamerInfoReadBuffer.cxx while reading the `double*` array. In particular, the issue arises when accessing and then deallocating the array at the current index provided by the `TCompInfo` object. ```; Target 0: (repro.out) stopped.; (lldb); Process 13498 stopped; * thread #1, queue = 'com.apple.main-thread', stop reason = step in; frame #0: 0x00000001044cf140 libRIO.so`int TStreamerInfo::ReadBuffer<char**>(this=<unavailable>, b=<unavailable>, arr=<unavailable>, compinfo=<unavailable>, first=<unavailable>, last=<unavailable>, narr=<unavailable>, eoffset=<unavailable>, arrayMode=0) at TStreamerInfoReadBuffer.cxx:923:65 [opt]; 920 	 case TStreamerInfo::kOffsetP + TStreamerInfo::kLong: ReadBasicPointer(Long_t); continue;; 921 	 case TStreamerInfo::kOffsetP + TStreamerInfo::kLong64: ReadBasicPointer(Long64_t); continue;; 922 	 case TStreamerInfo::kOffsetP + TStreamerInfo::kFloat: ReadBasicPointer(Float_t); continue;; -> 923 	 case TStreamerInfo::kOffsetP + TStreamerInfo::kDouble: ReadBasicPointer(Double_t); continue;; 924 	 case TStreamerInfo::kOffsetP + TStreamerInfo::kUChar: ReadBasicPointer(UChar_t); continue;; 925 	 case TStreamerInfo::kOffsetP + TStreamerInfo::kUShort: ReadBasicPointer(UShort_t); continue;; 926 	 case TStreamerInfo::kOffsetP + TStreamerInfo::kUInt: ReadBasicPointer(UInt_t); continue;; Target 0: (repro.out) stopped.; (lldb); Process 13498 stopped; * thread #1, queue = 'com.apple.main-thread', stop reason = step in; frame #0: 0x000000010",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16501:471,access,access,471,https://root.cern,https://github.com/root-project/root/pull/16501,2,['access'],"['access', 'accessing']"
Security,"This solves ROOT-9535. During the cloning process the TPaveStats (as part of fFunctions) is cloned and its member fParent point to the TH1 being; cloned. Since that TH1 was not part of the I/O transaction this leads the cloned TPaveStats parent to point to yet another; copy of the TH1. In the case of ROOT-9535, that copy held stale pointer to object that were removed and deleted in a subsequent; call to Reset. The exact order. Create a TH1 h1 containing a TPaveStats s1 and a TPaletteAxis p1.; Then Clone h1 into h2 which now contains TPaveStats s2 and a TPalettesAxis p2. Since s1.fParent was also cloned s2.fParent points to another histogram h3.; h3.fFunctions contains a pointer to s2 and to p2 since they were streamed during; the same I/O operation (the Clone via TBuffer of fFunctions). When h2 is Reset, it deletes p2 and remove it from h2.fFunctions,; however (since it is not even supposed to exist) h3 is not informed and; keep a (stale) pointer to p2. The Reset, however, keeps the TPaveStats; as is. Then during the cloning of h2, p2 is traversed and thus h3 is traversed; and thus the (stale) pointer to p2 is accessed.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5597:1128,access,accessed,1128,https://root.cern,https://github.com/root-project/root/pull/5597,2,['access'],['accessed']
Security,"This sounds good to me, yes this is purely for the pythonization, if there's a dedicated place where that is coded up then yes supporting it there (with an exception if trying to access invalid index) would be great! Atm it's very user un-friendly that ROOT crashes if we access an index out of range in pyROOT",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8174#issuecomment-842219474:179,access,access,179,https://root.cern,https://github.com/root-project/root/pull/8174#issuecomment-842219474,2,['access'],['access']
Security,This the upstream version of a patch to ROOT meta that exposes the `isAggregate()` class property from Cling. The current `master` branch of CPyCppyy relies on this property. Originally implemented in this commit by @wlav:; https://github.com/wlav/cppyy-backend/commit/fe1c0f114800ab45b8136fa74ade3a71c137e86f. This PR is part of the larger effort to sync `CPyCppyy`:; https://github.com/root-project/root/pull/14507,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14596:55,expose,exposes,55,https://root.cern,https://github.com/root-project/root/pull/14596,1,['expose'],['exposes']
Security,"This version of the PR is the result of some thinking and two test implementations, one with locks and one relying on TThreadedObject. Both solutions seem heavy and have impacts on runtime. The proposed changes, on the other hand, preserve the existing behaviour and allow thread safe access to the db, documenting well the properties of the TDatabasePDG component.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13541#issuecomment-1698804361:285,access,access,285,https://root.cern,https://github.com/root-project/root/pull/13541#issuecomment-1698804361,1,['access'],['access']
Security,"This was causing roottest-root-core-execStatusBitsCheck failure. TEmulatedTuple is injected to AST by creating virtual file called; `input_line_<number>`. This is the same way as we inject ""ClassDef(name,; id)"" and we need to `undef __ROOTCLING__` in that case (because it's not; ROOTCLING)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2112:83,inject,injected,83,https://root.cern,https://github.com/root-project/root/pull/2112,2,['inject'],"['inject', 'injected']"
Security,"This was first reported at: https://cdcvs.fnal.gov/redmine/issues/25615; with the error:; ```; Fatal Root Error: TBranchElement::InitializeOffsets; Could not find the real data member 'fOutputNames' when constructing the branch '4anab::MVADescriptions_emtrkmichelid_emtrkmichel_Reco1.obj' [Likely an internal error, please report to the developers].; ROOT severity: 6000; ```; during the creation of a branch. With a class like:; ```; class mystrarray {; public:; string fDataTag; ///< offset= 0 type=300 ,stl=365, ctype=365, Tag of the reco data products (art::InputTag format); string fOutputInstance; ///< offset= 32 type=300 ,stl=365, ctype=365, Instance name of the feature vector collection; string fOutputNames[4]; ///< offset= 64 type=320 ,stl=365, ctype=365, Feature vector entries names/meaning. static short Class_Version() { return 10; }; };; ```; creating any split branch containing this kind of object (or collection there of) will work fine. But if a file containing the `StreamerInfo` for `mystrarray` version 10 before loading the library containing its dictionary then the `StreamerInfo` from the file (since it has the same checksum has the one that would come from the dictionary info) is used. However, instead of; ```; root [1] TClass::GetClass(""mystrarray"")->GetStreamerInfo()->GetElement(2)->GetFullName(); (const char *) ""fOutputNames[4]""; ```; it produces:; ```; root [1] TClass::GetClass(""mystrarray"")->GetStreamerInfo()->GetElement(2)->GetFullName(); (const char *) ""fOutputNames""; ```; Which does not match the expectation of `TBranchElement::InitializeOffsets`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8033:1144,checksum,checksum,1144,https://root.cern,https://github.com/root-project/root/issues/8033,1,['checksum'],['checksum']
Security,"Those 2 classes may or may not be the only 2 that have this kind of pattern in the wild, so it might be interesting to solve the underlying issue which is likely to be that `BindCppObject` is trying to bind to a type which has no interpreter info. So a fix could be to have either `CPyCppyy::BindCppObject` or `Cppyy::GetActualClass` to check for the presence of interpreter info before attempting to automatically bind to the ""actual class/type"". (In theory this should be done by testing `TClass::HasInterpreterInfo` but in this case it is returning an incorrect information and thus we have to use `TClass::GetClassInfo`). The change in behavior is that after this modification, `PyROOT/Cppyy` would no longer warn if the actual return type is inadvertently missing its interpreter info. However semantically this seems to be the right behavior, for example in our cases we would:; * have no warning; * PyROOT will report the type of the pointer as `TList`; * Usage of the meta routines (`IsA` and co.) would still give accurate information (access to the `TClass` for `TViewPubFunctions`); * Interfaces to the objects are the same as the one available from the equivalent C++ code (I.e. `TList`) (unless the user does an explicit dynamic_cast to the underlying type). * In other cases (for user provided functions and classes) where the interpreter information from the underlying class is missing by mistake (bad/broken configuration of the user code/libraries), the error/warning reporting about the missing interpreter info will be delayed until the user actually want to access the underlying class.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16177#issuecomment-2271797820:1045,access,access,1045,https://root.cern,https://github.com/root-project/root/pull/16177#issuecomment-2271797820,2,['access'],['access']
Security,"Three questions from my side (may be naive because I didn't spend a lot of time to fully digest the CI setup):; 1. Having the secrets stored as a file on the runners means we commit to self-hosted machines? GitHub hosted runners won't have the necessary setup.; 2. The workflow run ""would still have to be approved by a maintainer."" - how does this work? https://securitylab.github.com/research/github-actions-preventing-pwn-requests/ discusses a label; as far as I understand approval on GitHub itself is limited to first-time contributions. So everybody ""external"" who got one benign PR accepted, can afterwards run potentially malicious code without approval, no?; 3. ""A safer alternative is not allowing pull request jobs to upload artifacts at all but then we can't run tests in a separate job. It would also cause builds to take more time on average because the object storage will be less populated."" What is the currently intended use case for this? I would have assumed that we don't want to use PR builds to feed back into incremental builds anyhow, we always want to start from a ""known good"" state, ie `master`, no?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12201#issuecomment-1413319178:363,secur,securitylab,363,https://root.cern,https://github.com/root-project/root/pull/12201#issuecomment-1413319178,1,['secur'],['securitylab']
Security,Tmva cross validation,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1514:11,validat,validation,11,https://root.cern,https://github.com/root-project/root/pull/1514,1,['validat'],['validation']
Security,"To be saved as root files and later read again as rdf and saved as snapshot shouldnt be so time taking for a root programmer.; I really want to help but I don't know how, since you don't have access to the data I have used.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9366#issuecomment-1005637919:192,access,access,192,https://root.cern,https://github.com/root-project/root/issues/9366#issuecomment-1005637919,1,['access'],['access']
Security,"To correctly manage build artifacts, make the compiler name part of the string to be hashed.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15866:85,hash,hashed,85,https://root.cern,https://github.com/root-project/root/pull/15866,1,['hash'],['hashed']
Security,"To inspect the variables we need debug symbols, they need to come from the same build because gdb is validating the crc.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6948#issuecomment-760449531:101,validat,validating,101,https://root.cern,https://github.com/root-project/root/issues/6948#issuecomment-760449531,1,['validat'],['validating']
Security,"To reproduce, download http://ccdb-test.cern.ch:8080/download/d64bd450-1619-11ec-a9d5-200114580202 and open it in TBrowser. Works on ubuntu, but on mac I get:. ```; root [2] Error in <TBufferFile::ReadVersion>: Could not find the StreamerInfo with a checksum of 0xdc6299b4 for the class ""array<Long64_t,1>"" in /Users/ktf/Downloads/array<Long64_t,1>_1631706076679.root.; Error in <TBufferFile::CheckByteCount>: object of class array<Long64_t,1> read too few bytes: 6 instead of 14; ```. when clicking on `ccdb_object;1`. Both ROOT 6.24.02 and 6.24.06 seem to be affected.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9001:250,checksum,checksum,250,https://root.cern,https://github.com/root-project/root/issues/9001,1,['checksum'],['checksum']
Security,"To understand why it's not trying, the build configuration is important. For instance, the unix authentication plugin won't be built if `XRDCL_LIB_ONLY` is true, which the builtin XRootD might be setting internally. I don't think this is a bug in XRootD, just a misconfiguration on the ROOT side. When I try from my machine, it goes via Kerberos authentication when I have a ticket.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12231#issuecomment-1420383260:96,authenticat,authentication,96,https://root.cern,https://github.com/root-project/root/issues/12231#issuecomment-1420383260,2,['authenticat'],['authentication']
Security,"To understand why this is failing, and barring a stand-alone reproducer, I need a build of ROOT with `-DCMAKE_BUILD_TYPE=Debug -DLLVM_BUILD_TYPE=Debug` that I can ""inject"" into this environment. Do you think you could convince your build setup to provide me with one? Or do I need to hack that in myself?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12758#issuecomment-1536252367:164,inject,inject,164,https://root.cern,https://github.com/root-project/root/issues/12758#issuecomment-1536252367,1,['inject'],['inject']
Security,"Today I read User's Guide and spotted many mistakes I noticed when reading it for the first time 15 years ago. I thought that now is the time for me to act and to finally fix them.; I'm not a native speaker, so I don't insist on all of them (I still doubt the usage of articles when I write this small report). If it's really easier for you, the next time I can try to make a push release with the corrections. The good thing that I noted is that there are some fixes in the recent html pages compared to the pdf User's Guide of 2018, so I refer to this page when I cite the mistakes:; https://root.cern/root/htmldoc/guides/users-guide/Trees.html. 14.3; is the use the TTree::Show method; \- to use; 14.4; the branches and the leaves, is TTree::Print.; \- no need for a comma; 14.6; boxes"".; \- no need for the quote.; witch is marked; \- which is marked; exposed expression; \- I think that would sound better as ""set expression"" or another adjective.; Below them there are two text widgets; \- possible, but I think 'there' is redundant here.; for specifying; \- to specify; \-\- I think this text should be checked by a native speaker for articles and other issues.; When the “Rec” box is checked, the Draw and Scan commands; \- no need for quotes around Rec (or add them around Draw and Scan); 14.7; This picture shows the TTree class:; \- should be rewritten with a reference to the picture. On the pdf manual the picture is on a separate page, away from this line!; 14.7.3; save all branch buffers every n byte.; \- bytes.; 14.7.4; When a TTree is memory resident, you set it up so that it retains retain only the last few entries.; \- retains; For example, this can be very useful for monitoring purpose.; \- just for monitoring, remove 'purpose'. Maybe rewrite this phrase.; 14.7.6; The function TTree::GetUserInfo() allows adding any object defined by a user to the tree that is not depending on the entry number.; \- allows to add to the tree any user\-defined object that doesn't depend on.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7284:856,expose,exposed,856,https://root.cern,https://github.com/root-project/root/issues/7284,1,['expose'],['exposed']
Security,"True` as optional argument. ```python; @ROOT.DeclareCppCallable([""float""], ""float"", numba_only=True); def f(x); return 2.0 * x; ```. In addition, you can set a `verbose` flag to let PyROOT tell you if the decorator falls back to the generic implementation. ```python; @ROOT.DeclareCppCallable([""float""], ""string"", verbose=True); def f(x); return ROOT.std.string(str(x)). ROOT.CppCallable.f(x); # 1) Throws Python warning:; # /home/stefan/foo.py:5: RuntimeWarning: Failed to compile Python callable using numba. Fall back to generic implementation.; # @ROOT.DeclareCppCallable([""float""], ""string"", verbose=True); # 2) Falls back to generic impl and prints ""42"" (as string); ```. **DEPRECATED:**. I've cleaned up and improved the feature. Here's the basic workflow now:. ```python; @ROOT.DeclareCallable([""float""], ""float""); def f(x); return 2.0 * x. # General use-cases; ROOT.ROOT.f(21) # Returns 42; ROOT.gInterpreter.ProcessLine(""cout << ROOT::f(21.0) << endl;"") # Prints 42.0. # Inject callable into dataframe; df = ROOT.ROOT.RDataFrame(10).Define(""x"", ""rdfentry__"").Define(""ROOT::f(x)""); ```. The `DeclareCallable` dispatches between numba and the generic implementation. It tries to compile the thingy with numba (falls through silently) and otherwise tries the generic implementation (fails noisily).; However, you can force using the generic implementation or numba by using the decorators `DeclareGenericCallable` and `DeclareNumbaCallable`. The interface is exactly the same than for the general `DeclareCallable` decorator. In addition, you can now give the wrapped function a custom name:. ```python; @ROOT.DeclareCallable([""float""], ""float"", ""my_name""); def f(x):; return 2.0 * x. ROOT.ROOT.my_name(21) # Returns 42; ```. **DEPRECATED:**. Add workflow to invoke Python callables from C++. The mechanism builds with cling a C++ wrapper class around Python callables and publishs them to the user. See following example for the basic mechanism. ```python; import ROOT. # Because C++ is strong",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3488:1742,Inject,Inject,1742,https://root.cern,https://github.com/root-project/root/pull/3488,1,['Inject'],['Inject']
Security,TrustAssuredCAG3-runbytheissuer.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/DigitalTrustAssuredCAG3-runbytheissuer.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/GEANTeScienceSSLECCCA4.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/GEANTeScienceSSLECCCA4.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/GEANTeScienceSSLECCCA4.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/DigitalTrustSecureCAG3-runbytheissuer.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/DigitalTrustSecureCAG3-runbytheissuer.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/DigitalTrustSecureCAG3-runbytheissuer.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/DigitalTrustSecureCAG3-runbytheissuer.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/18700496.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/5d9ea26d.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/e732ef10.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/DigiCertGridTrustCAG2-Classic.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/617ff41b.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/DigiCertGridTrustCAG2-Classic.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/58b08cb5.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/KEK.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/DigiCertGridTrustCAG2-Classic.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/d33760ec.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/cer,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8092#issuecomment-840048181:22651,secur,security,22651,https://root.cern,https://github.com/root-project/root/issues/8092#issuecomment-840048181,2,"['certificate', 'secur']","['certificates', 'security']"
Security,"Try searching through a vector instead of the Hashlist, making use of a list of elements to skip, then escaping the loop",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1801:46,Hash,Hashlist,46,https://root.cern,https://github.com/root-project/root/pull/1801,1,['Hash'],['Hashlist']
Security,UNAMgrid.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/d0a33f8e.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/d0a33f8e.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/dd4b34ea.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/4b2783ac.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/TSU-GE.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/4b2783ac.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/dd4b34ea.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/7f4db168.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/7f4db168.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/089450c2.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/PSC-Myproxy-CA.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/QuoVadis-Root-CA3G3.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/PSC-Myproxy-CA.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/089450c2.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/PSC-Myproxy-CA.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/QuoVadis-Root-CA3G3.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/368bc755.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/PSC-Myproxy-CA.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/1149214e.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/1149214e.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/87429b,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8092#issuecomment-840048181:30195,secur,security,30195,https://root.cern,https://github.com/root-project/root/issues/8092#issuecomment-840048181,2,"['certificate', 'secur']","['certificates', 'security']"
Security,URLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/156a0f0f.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/QuoVadis-Root-CA2G3.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/QuoVadis-Root-CA2G3.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/24c3ccde.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/37a553c6.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/24c3ccde.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/3f638905.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/UNAMgrid-ca.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/AC-GRID-FR-Robots.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/UNAMgrid-ca.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/AC-GRID-FR-Robots.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/UNAMgrid-ca.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/UNLPGrid.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/SDG-G2.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/AC-GRID-FR-Robots.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/7a819ef2.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/UNAMgrid-ca.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/QuoVadis-Root-CA2.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/QuoVadis-Root-CA2.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/UNLPGrid.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/QuoVadis-Root-CA2.namespac,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8092#issuecomment-840048181:51839,secur,security,51839,https://root.cern,https://github.com/root-project/root/issues/8092#issuecomment-840048181,2,"['certificate', 'secur']","['certificates', 'security']"
Security,URLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/617ff41b.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/DigiCertGridTrustCAG2-Classic.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/58b08cb5.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/KEK.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/DigiCertGridTrustCAG2-Classic.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/d33760ec.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/e732ef10.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/2f2f573f.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/DigiCertGridTrustCAG2-Classic.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/18700496.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/bd43b60c.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/f5ead794.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/1db3b27f.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/PK-Grid-2007.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/1db3b27f.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/d33760ec.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/TERENA-eScience-SSL-CA-3.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/KEK.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/TERENA-eScience-SSL-CA-3.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/633dc6a4.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/TERENA-eS,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8092#issuecomment-840048181:24019,secur,security,24019,https://root.cern,https://github.com/root-project/root/issues/8092#issuecomment-840048181,2,"['certificate', 'secur']","['certificates', 'security']"
Security,URLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/ANSPGrid.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/20b7db76.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/156a0f0f.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/QuoVadis-Root-CA2G3.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/QuoVadis-Root-CA2G3.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/24c3ccde.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/37a553c6.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/24c3ccde.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/3f638905.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/UNAMgrid-ca.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/AC-GRID-FR-Robots.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/UNAMgrid-ca.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/AC-GRID-FR-Robots.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/UNAMgrid-ca.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/UNLPGrid.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/SDG-G2.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/AC-GRID-FR-Robots.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/7a819ef2.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/UNAMgrid-ca.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/QuoVadis-Root-CA2.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/QuoVadis-Root-CA2.info' ,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8092#issuecomment-840048181:51652,secur,security,51652,https://root.cern,https://github.com/root-project/root/issues/8092#issuecomment-840048181,2,"['certificate', 'secur']","['certificates', 'security']"
Security,URLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/CERN-Root-2.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/78351451.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/7022e3c4.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/CNRS2-Projets.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/CNRS2-Projets.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/CNRS2-Projets.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/7ed47087.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/98ef0ee5.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/UKeScienceRoot-2007.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/UKeScienceRoot-2007.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/UKeScienceRoot-2007.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/UKeScienceRoot-2007.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/2436bbb8.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/DigitalTrustPrivateRootCAG4.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/DigitalTrustPrivateRootCAG4.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/DigitalTrustPrivateRootCAG4.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/DigitalTrustPrivateRootCAG4.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/585d9326.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/d58bb4bc.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/585d9326.signing_policy' from CURLOPT_C,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8092#issuecomment-840048181:8091,secur,security,8091,https://root.cern,https://github.com/root-project/root/issues/8092#issuecomment-840048181,2,"['certificate', 'secur']","['certificates', 'security']"
Security,URLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/GEANTeSciencePersonalECCCA4.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/GEANTeSciencePersonalCA4.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/GEANTeSciencePersonalCA4.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/GEANTeSciencePersonalECCCA4.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/GEANTeSciencePersonalCA4.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/GEANTeSciencePersonalCA4.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/943fd5f3.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/d9343743.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/DigitalTrustAssuredCAG3-runbytheissuer.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/DigitalTrustAssuredCAG3-runbytheissuer.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/DigitalTrustAssuredCAG3-runbytheissuer.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/DigitalTrustAssuredCAG3-runbytheissuer.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/GEANTeScienceSSLECCCA4.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/GEANTeScienceSSLECCCA4.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/GEANTeScienceSSLECCCA4.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/DigitalTrustSecureCAG3-runbytheissuer.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/DigitalTrustSecureCAG3-runbytheissuer.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/DigitalTrustSecureCAG3-runbytheissuer.namespaces' from CURLOPT_C,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8092#issuecomment-840048181:21489,secur,security,21489,https://root.cern,https://github.com/root-project/root/issues/8092#issuecomment-840048181,2,"['certificate', 'secur']","['certificates', 'security']"
Security,"Uhm what also doesn't work is the following:. ```python; >>> import ROOT; >>> x = ROOT.RVec['float'](); Traceback (most recent call last):; File ""<stdin>"", line 1, in <module>; File ""/work/wunsch/root_rvec/build_root/lib/ROOT/_facade.py"", line 222, in _getattr; return getattr(self, name); File ""/work/wunsch/root_rvec/build_root/lib/ROOT/_facade.py"", line 192, in _fallback_getattr; raise AttributeError(""Failed to get attribute {} from ROOT"".format(name)); AttributeError: Failed to get attribute RVec from ROOT; ```. But we don't have any test coverage because all tests were written before we made `RVec` accessible from the `ROOT` namespace. I'm going to fix that!. Edit: It's a long standing issue, see #7687 or #5361 or https://sft.its.cern.ch/jira/browse/ROOT-10688.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7502#issuecomment-806621688:609,access,accessible,609,https://root.cern,https://github.com/root-project/root/pull/7502#issuecomment-806621688,1,['access'],['accessible']
Security,Uncomment some different code that is used to compute the discriminat of the; resolvent cubic equation used to find the roots of a quartic equation. ; This different code seems to be better numerically. . This fixes #6900. Add tests for quartic equations to validate code.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6908:258,validat,validate,258,https://root.cern,https://github.com/root-project/root/pull/6908,1,['validat'],['validate']
Security,Unfortunately I do not have access to such a system but if you can build with `-DLLVM_BUILD_TYPE=Debug` the function `isSharedLibrary` [here](https://github.com/root-project/root/blob/d75ee349cb75d743d41e99cca97d5ef230f9207e/interpreter/cling/lib/Interpreter/DynamicLibraryManager.cpp#L248) should return `true` for `branchoverwrite`. If that is the case then there might be a problem with the Elf representation (or ACLiC is missing some compiler/linker flag).,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7366#issuecomment-850565404:28,access,access,28,https://root.cern,https://github.com/root-project/root/issues/7366#issuecomment-850565404,1,['access'],['access']
Security,"Unfortunately it still doesn't work for me, neither setting `SITECONFIG_PATH` nor installing a grid certificate (as explained in comment that was meanwhile deleted?) and then running `voms-proxy-init` :cry: is there a way to reproduce the problem without requiring that file?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13429#issuecomment-1683956727:100,certificate,certificate,100,https://root.cern,https://github.com/root-project/root/issues/13429#issuecomment-1683956727,1,['certificate'],['certificate']
Security,"Unfortunately, coming back to this, I'm not sure this change (in its final form) is sufficient: The comment in `~RPageStorage` says that tasks may hold a reference to `this`, which is an instance of a derived subclass (as `RPageStorage` is abstract; and so are `RPageSink` and `RPageSource`). However, once control flow makes it to `~RPageStorage`, the subclass has already been destructed, including its member fields (if my recollection of C++ destructor chains in the presence of inheritance serves well), so we have a race with any task that may try to access one of them. As a concrete case, the summary mentions `RPageSinkBuf::CommitPageImpl()` where the tasks access `fBufferedColumns`. If one of the tasks is only started after `~RPageStorage` calls `WaitForAllTasks`, it will read from an already destructed `std::vector`, which would explain one of the failure modes I still see in CI runs. That said, I'm not an expert in the RNTuple design and cannot assess how this could be solved in the best way.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12824#issuecomment-1564337823:557,access,access,557,https://root.cern,https://github.com/root-project/root/pull/12824#issuecomment-1564337823,2,['access'],['access']
Security,"Until now, in the case where `VecCore` is enabled, only `BinData::fData` was padded to protect vectorized loops against memory access errors. This commit adds the same padding in the case `VecCore` is enabled to all coordinate, data and error vectors of `FitData` family; in particular:; * `FitData::fCoords[i]` (for every `i`); * `BinData::fCoordErrors[i]` (for every `i`); * `BinData::fData`, `BinData::fDataError`; * `BinData::fDataErrorHigh`; * `BinData::fDataErrorLow`; * `BinData::fBinEdge[i]` (for every `i`)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/896:127,access,access,127,https://root.cern,https://github.com/root-project/root/pull/896,1,['access'],['access']
Security,"Up to now comments were ignored:; ```; ClassDefOverride(name,version) // class comments; ```. Also fix error of accessing transient memory. Solves some test errors in #9932 . And should fix #9900.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9934:112,access,accessing,112,https://root.cern,https://github.com/root-project/root/pull/9934,1,['access'],['accessing']
Security,Update the checksum for xrootd-5.4.2.tar.gz (fixes #10503),MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10505:11,checksum,checksum,11,https://root.cern,https://github.com/root-project/root/pull/10505,2,['checksum'],['checksum']
Security,Usability. The drawing options are the more common entity to be accessed. I will add a DrawAndGetDrawable in a future revision.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1130#issuecomment-334249130:64,access,accessed,64,https://root.cern,https://github.com/root-project/root/pull/1130#issuecomment-334249130,1,['access'],['accessed']
Security,Use Read/Write lock where relevant. Cache the last result of TProcessID::IsValid and TProcessID::GetProcessWithUID as; most often the same PID will be used for most of the process lifetime. This addresses: https://root-forum.cern.ch/t/copying-trefs-and-accessing-tref-data-from-multiple-threads/29417,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2391:253,access,accessing-tref-data-from-multiple-threads,253,https://root.cern,https://github.com/root-project/root/pull/2391,1,['access'],['accessing-tref-data-from-multiple-threads']
Security,Use a lock to protect access to collection from TROOT::GetListOfClean…,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/576:22,access,access,22,https://root.cern,https://github.com/root-project/root/pull/576,1,['access'],['access']
Security,Use file cache when accessing remote files during testing,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/404:20,access,accessing,20,https://root.cern,https://github.com/root-project/root/pull/404,1,['access'],['accessing']
Security,"Use larger vectors and access them more sparsely if needed (e.g.; threads now access one every 16 elements in hot std::vector<int>; on systems where a cache line is 64 bytes). In some edge cases in which the analysis workload is light and/or many; threads (48, 64) are involved, this patch reduces runtimes by factors.; The increase in memory usage should be little relative to the memory; required e.g. by jitting or by per-thread histograms.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8007:23,access,access,23,https://root.cern,https://github.com/root-project/root/pull/8007,2,['access'],['access']
Security,Use the gROOTMutex to protect access to possible concurrent accesses; to gROOT->GetListOfFiles().,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/45:30,access,access,30,https://root.cern,https://github.com/root-project/root/pull/45,2,['access'],"['access', 'accesses']"
Security,Use the gRootMutex to protect access to possible concurrent accesses; to gROOT->GetListOfFiles().,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/38:30,access,access,30,https://root.cern,https://github.com/root-project/root/pull/38,2,['access'],"['access', 'accesses']"
Security,Use the std::atomic load() method to access its content,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1098:37,access,access,37,https://root.cern,https://github.com/root-project/root/pull/1098,1,['access'],['access']
Security,"Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:; Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\; Users\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\ClangDiagnosticsEmitter.cpp) [C:\Us; ers\bellenot\build\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.clang-tblgen.vcxproj]; C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:; Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\; Users\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\ClangOpenCLBuiltinEmitter.cpp) [C:\; Users\bellenot\build\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.clang-tblgen.vcxproj]; C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:; Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\; Users\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\ClangOptionDocEmitter.cpp) [C:\User; s\bellenot\build\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.clang-tblgen.vcxproj]; C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:; Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\; Users\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\ClangDataCollectorsEmitter.cpp) [C:; \Users\bellenot\build\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.clang-tblgen.vcxproj]; C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:; Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\; Users\bellenot\git\m",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9445#issuecomment-1008835389:3271,sanitiz,sanitizer,3271,https://root.cern,https://github.com/root-project/root/issues/9445#issuecomment-1008835389,1,['sanitiz'],['sanitizer']
Security,Using higher-level wrapper of OpenSSL SHA1 hash function in civetweb,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10380:43,hash,hash,43,https://root.cern,https://github.com/root-project/root/pull/10380,1,['hash'],['hash']
Security,Vadis-Root-CA3G3.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/368bc755.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/PSC-Myproxy-CA.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/1149214e.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/1149214e.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/87429ba3.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/30ffc224.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/295adc19.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/30ffc224.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/TRGrid.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/DFN-GridGermany-Root.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/295adc19.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/DFN-GridGermany-Root.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/6f071272.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/DFN-GridGermany-Root.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/REUNA-ca.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/6f071272.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/DFN-GridGermany-Root.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/TRGrid.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/e18bfb83.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/18bc5b05.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/REUNA-ca.info',MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8092#issuecomment-840048181:31715,secur,security,31715,https://root.cern,https://github.com/root-project/root/issues/8092#issuecomment-840048181,2,"['certificate', 'secur']","['certificates', 'security']"
Security,"Very good point @pcanal. So, with the patch, opening the same file 5k time 1s. W/o the patch 5.6s. So it is better also in the single threaded case. I think the reason is that it is much less work even if we go through the hashing.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2121#issuecomment-393874952:223,hash,hashing,223,https://root.cern,https://github.com/root-project/root/pull/2121#issuecomment-393874952,1,['hash'],['hashing']
Security,"Very nice investigation. Thanks!. For completeness sake, it should be noted that to be used in THashList search by name, TNamedBranchProxy should have either inherited from TNamed or overload TObject::Hash. > A real usecase from CMS where the mass of the W boson is studied shows a significant speedup (30%). I assume the gain comes mostly from not reading the branch twice rather than a significant speed difference between THashList and unordered_map. Thanks,; Philippe.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1768#issuecomment-374673900:201,Hash,Hash,201,https://root.cern,https://github.com/root-project/root/pull/1768#issuecomment-374673900,1,['Hash'],['Hash']
Security,WE-119 in /opt/root_src/net/http/civetweb/civetweb.c:18899; 3: expanded from macro 'strcat0' in /opt/root_src/net/http/civetweb/civetweb.c:18868; /opt/root_src/net/http/civetweb/civetweb.c:18914:4: warning: Call to function 'strcat' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcat'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]; 1: expanded from macro 'strcat0' in /opt/root_src/net/http/civetweb/civetweb.c:18868; 2: Call to function 'strcat' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcat'. CWE-119 in /opt/root_src/net/http/civetweb/civetweb.c:18914; 3: expanded from macro 'strcat0' in /opt/root_src/net/http/civetweb/civetweb.c:18868; /opt/root_src/net/http/civetweb/civetweb.c:18969:3: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:18969; /opt/root_src/net/http/civetweb/civetweb.c:18984:4: warning: Call to function 'strcat' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcat'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]; 1: expanded from macro 'strcat0' in /opt/root_src/net/http/civetweb/civetweb.c:18868; 2: Call to function 'strcat' is insecure as it d,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7528:75582,secur,security,75582,https://root.cern,https://github.com/root-project/root/issues/7528,1,['secur'],['security']
Security,"W_11_3_ROOT6_X_2021-01-24-2300/external/slc7_amd64_gcc900/lib/libCling.so; #17 0x00002b8fcf5ec950 in clang::Parser::ParseExternalDeclaration(clang::Parser::ParsedAttributesWithRange&, clang::ParsingDeclSpec*) () from /cvmfs/cms-ib.cern.ch/week1/slc7_amd64_gcc900/cms/cmssw-patch/CMSSW_11_3_ROOT6_X_2021-01-24-2300/external/slc7_amd64_gcc900/lib/libCling.so; #18 0x00002b8fcf57b004 in clang::Parser::ParseLinkage(clang::ParsingDeclSpec&, unsigned int) () from /cvmfs/cms-ib.cern.ch/week1/slc7_amd64_gcc900/cms/cmssw-patch/CMSSW_11_3_ROOT6_X_2021-01-24-2300/external/slc7_amd64_gcc900/lib/libCling.so; #19 0x00002b8fcf5e611e in clang::Parser::ParseDeclOrFunctionDefInternal(clang::Parser::ParsedAttributesWithRange&, clang::ParsingDeclSpec&, clang::AccessSpecifier) () from /cvmfs/cms-ib.cern.ch/week1/slc7_amd64_gcc900/cms/cmssw-patch/CMSSW_11_3_ROOT6_X_2021-01-24-2300/external/slc7_amd64_gcc900/lib/libCling.so; #20 0x00002b8fcf5e64b1 in clang::Parser::ParseDeclarationOrFunctionDefinition(clang::Parser::ParsedAttributesWithRange&, clang::ParsingDeclSpec*, clang::AccessSpecifier) [clone .part.0] () from /cvmfs/cms-ib.cern.ch/week1/slc7_amd64_gcc900/cms/cmssw-patch/CMSSW_11_3_ROOT6_X_2021-01-24-2300/external/slc7_amd64_gcc900/lib/libCling.so; #21 0x00002b8fcf5ecf42 in clang::Parser::ParseExternalDeclaration(clang::Parser::ParsedAttributesWithRange&, clang::ParsingDeclSpec*) () from /cvmfs/cms-ib.cern.ch/week1/slc7_amd64_gcc900/cms/cmssw-patch/CMSSW_11_3_ROOT6_X_2021-01-24-2300/external/slc7_amd64_gcc900/lib/libCling.so; #22 0x00002b8fcf5ed399 in clang::Parser::ParseTopLevelDecl(clang::OpaquePtr<clang::DeclGroupRef>&) () from /cvmfs/cms-ib.cern.ch/week1/slc7_amd64_gcc900/cms/cmssw-patch/CMSSW_11_3_ROOT6_X_2021-01-24-2300/external/slc7_amd64_gcc900/lib/libCling.so; #23 0x00002b8fcef7c0e6 in cling::IncrementalParser::ParseInternal(llvm::StringRef) () from /cvmfs/cms-ib.cern.ch/week1/slc7_amd64_gcc900/cms/cmssw-patch/CMSSW_11_3_ROOT6_X_2021-01-24-2300/external/slc7_amd64_gcc900/lib/li",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7093:8388,Access,AccessSpecifier,8388,https://root.cern,https://github.com/root-project/root/issues/7093,1,['Access'],['AccessSpecifier']
Security,"Wdeprecated-copy] ; - [2023-03-03T11:38:17.551Z] /Users/sftnight/build/jenkins/workspace/root-pullrequests-build/root/interpreter/cling/include/cling/MetaProcessor/MetaLexer.h:60:5: warning: definition of implicit copy assignment operator for 'Token' is deprecated because it has a user-declared copy constructor [-Wdeprecated-copy] ; - [2023-03-03T11:45:17.562Z] /Users/sftnight/build/jenkins/workspace/root-pullrequests-build/root/core/base/src/TDirectory.cxx:1292:7: warning: 'sprintf' is deprecated: This function is provided for compatibility reasons only. Due to security concerns inherent in the design of sprintf(3), it is highly recommended that you use snprintf(3) instead. [-Wdeprecated-declarations] ; - [2023-03-03T11:45:22.389Z] /Users/sftnight/build/jenkins/workspace/root-pullrequests-build/root/core/base/src/TTimeStamp.cxx:289:7: warning: 'sprintf' is deprecated: This function is provided for compatibility reasons only. Due to security concerns inherent in the design of sprintf(3), it is highly recommended that you use snprintf(3) instead. [-Wdeprecated-declarations] ; - [2023-03-03T11:45:22.389Z] /Users/sftnight/build/jenkins/workspace/root-pullrequests-build/root/core/base/src/TTimeStamp.cxx:335:4: warning: 'sprintf' is deprecated: This function is provided for compatibility reasons only. Due to security concerns inherent in the design of sprintf(3), it is highly recommended that you use snprintf(3) instead. [-Wdeprecated-declarations] ; - [2023-03-03T11:45:22.390Z] /Users/sftnight/build/jenkins/workspace/root-pullrequests-build/root/core/base/src/TUri.cxx:827:10: warning: 'sprintf' is deprecated: This function is provided for compatibility reasons only. Due to security concerns inherent in the design of sprintf(3), it is highly recommended that you use snprintf(3) instead. [-Wdeprecated-declarations] ; - [2023-03-03T11:45:22.953Z] /Users/sftnight/build/jenkins/workspace/root-pullrequests-build/root/core/base/src/TUrl.cxx:199:10: warning: 'sprintf' is deprec",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12417#issuecomment-1453453200:1501,secur,security,1501,https://root.cern,https://github.com/root-project/root/pull/12417#issuecomment-1453453200,1,['secur'],['security']
Security,"Wdeprecated-copy] ; - [2023-04-03T17:25:35.781Z] /Users/sftnight/build/jenkins/workspace/root-pullrequests-build/root/interpreter/cling/include/cling/MetaProcessor/MetaLexer.h:60:5: warning: definition of implicit copy assignment operator for 'Token' is deprecated because it has a user-declared copy constructor [-Wdeprecated-copy] ; - [2023-04-03T17:37:16.467Z] /Users/sftnight/build/jenkins/workspace/root-pullrequests-build/root/core/base/src/TDirectory.cxx:1292:7: warning: 'sprintf' is deprecated: This function is provided for compatibility reasons only. Due to security concerns inherent in the design of sprintf(3), it is highly recommended that you use snprintf(3) instead. [-Wdeprecated-declarations] ; - [2023-04-03T17:37:23.135Z] /Users/sftnight/build/jenkins/workspace/root-pullrequests-build/root/core/base/src/TTimeStamp.cxx:289:7: warning: 'sprintf' is deprecated: This function is provided for compatibility reasons only. Due to security concerns inherent in the design of sprintf(3), it is highly recommended that you use snprintf(3) instead. [-Wdeprecated-declarations] ; - [2023-04-03T17:37:23.135Z] /Users/sftnight/build/jenkins/workspace/root-pullrequests-build/root/core/base/src/TTimeStamp.cxx:335:4: warning: 'sprintf' is deprecated: This function is provided for compatibility reasons only. Due to security concerns inherent in the design of sprintf(3), it is highly recommended that you use snprintf(3) instead. [-Wdeprecated-declarations] ; - [2023-04-03T17:37:23.401Z] /Users/sftnight/build/jenkins/workspace/root-pullrequests-build/root/core/base/src/TUri.cxx:827:10: warning: 'sprintf' is deprecated: This function is provided for compatibility reasons only. Due to security concerns inherent in the design of sprintf(3), it is highly recommended that you use snprintf(3) instead. [-Wdeprecated-declarations] ; - [2023-04-03T17:37:23.931Z] /Users/sftnight/build/jenkins/workspace/root-pullrequests-build/root/core/base/src/TUrl.cxx:199:10: warning: 'sprintf' is deprec",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12604#issuecomment-1494767891:1501,secur,security,1501,https://root.cern,https://github.com/root-project/root/pull/12604#issuecomment-1494767891,1,['secur'],['security']
Security,"Wdeprecated-copy] ; - [2023-04-21T21:32:43.935Z] /Users/sftnight/build/jenkins/workspace/root-pullrequests-build/root/interpreter/cling/include/cling/MetaProcessor/MetaLexer.h:60:5: warning: definition of implicit copy assignment operator for 'Token' is deprecated because it has a user-declared copy constructor [-Wdeprecated-copy] ; - [2023-04-21T21:35:07.684Z] /Users/sftnight/build/jenkins/workspace/root-pullrequests-build/root/core/base/src/TDirectory.cxx:1292:7: warning: 'sprintf' is deprecated: This function is provided for compatibility reasons only. Due to security concerns inherent in the design of sprintf(3), it is highly recommended that you use snprintf(3) instead. [-Wdeprecated-declarations] ; - [2023-04-21T21:35:13.018Z] /Users/sftnight/build/jenkins/workspace/root-pullrequests-build/root/core/base/src/TTimeStamp.cxx:289:7: warning: 'sprintf' is deprecated: This function is provided for compatibility reasons only. Due to security concerns inherent in the design of sprintf(3), it is highly recommended that you use snprintf(3) instead. [-Wdeprecated-declarations] ; - [2023-04-21T21:35:13.018Z] /Users/sftnight/build/jenkins/workspace/root-pullrequests-build/root/core/base/src/TTimeStamp.cxx:335:4: warning: 'sprintf' is deprecated: This function is provided for compatibility reasons only. Due to security concerns inherent in the design of sprintf(3), it is highly recommended that you use snprintf(3) instead. [-Wdeprecated-declarations] ; - [2023-04-21T21:35:13.275Z] /Users/sftnight/build/jenkins/workspace/root-pullrequests-build/root/core/base/src/TUri.cxx:827:10: warning: 'sprintf' is deprecated: This function is provided for compatibility reasons only. Due to security concerns inherent in the design of sprintf(3), it is highly recommended that you use snprintf(3) instead. [-Wdeprecated-declarations] ; - [2023-04-21T21:35:13.275Z] /Users/sftnight/build/jenkins/workspace/root-pullrequests-build/root/core/base/src/TUrl.cxx:199:10: warning: 'sprintf' is deprec",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12604#issuecomment-1518381673:1501,secur,security,1501,https://root.cern,https://github.com/root-project/root/pull/12604#issuecomment-1518381673,1,['secur'],['security']
Security,"Wdeprecated-copy] ; - [2023-05-23T16:17:54.987Z] /Users/sftnight/build/jenkins/workspace/root-pullrequests-build/root/interpreter/cling/include/cling/MetaProcessor/MetaLexer.h:60:5: warning: definition of implicit copy assignment operator for 'Token' is deprecated because it has a user-declared copy constructor [-Wdeprecated-copy] ; - [2023-05-23T16:22:05.012Z] /Users/sftnight/build/jenkins/workspace/root-pullrequests-build/root/core/base/src/TDirectory.cxx:1292:7: warning: 'sprintf' is deprecated: This function is provided for compatibility reasons only. Due to security concerns inherent in the design of sprintf(3), it is highly recommended that you use snprintf(3) instead. [-Wdeprecated-declarations] ; - [2023-05-23T16:22:10.140Z] /Users/sftnight/build/jenkins/workspace/root-pullrequests-build/root/core/base/src/TTimeStamp.cxx:289:7: warning: 'sprintf' is deprecated: This function is provided for compatibility reasons only. Due to security concerns inherent in the design of sprintf(3), it is highly recommended that you use snprintf(3) instead. [-Wdeprecated-declarations] ; - [2023-05-23T16:22:10.140Z] /Users/sftnight/build/jenkins/workspace/root-pullrequests-build/root/core/base/src/TTimeStamp.cxx:335:4: warning: 'sprintf' is deprecated: This function is provided for compatibility reasons only. Due to security concerns inherent in the design of sprintf(3), it is highly recommended that you use snprintf(3) instead. [-Wdeprecated-declarations] ; - [2023-05-23T16:22:10.140Z] /Users/sftnight/build/jenkins/workspace/root-pullrequests-build/root/core/base/src/TUri.cxx:827:10: warning: 'sprintf' is deprecated: This function is provided for compatibility reasons only. Due to security concerns inherent in the design of sprintf(3), it is highly recommended that you use snprintf(3) instead. [-Wdeprecated-declarations] ; - [2023-05-23T16:22:10.398Z] /Users/sftnight/build/jenkins/workspace/root-pullrequests-build/root/core/base/src/TUrl.cxx:199:10: warning: 'sprintf' is deprec",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12867#issuecomment-1559792084:2084,secur,security,2084,https://root.cern,https://github.com/root-project/root/pull/12867#issuecomment-1559792084,1,['secur'],['security']
Security,"We are still discussing the names. The current proposal is:; ```; using TFilePtr = std::unique_ptr<TFile>;. /// Open a file with `name` for reading.; ///; /// \note: Synchronizes multi-threaded accesses through locks.; static TFilePtr OpenForRead(std::string_view name, const Options_t &opts = Options_t());. /// Open an existing file with `name` for reading and writing. If a file with; /// that name does not exist, an invalid RFilePtr will be returned.; ///; /// \note: Synchronizes multi-threaded accesses through locks.; static TFilePtr OpenForUpdate(std::string_view name, const Options_t &opts = Options_t());. /// Open a file with `name` for reading and writing. Fail (return an invalid; /// `RFilePtr`) if a file with this name already exists.; ///; /// \note: Synchronizes multi-threaded accesses through locks.; static TFilePtr Create(std::string_view name, const Options_t &opts = Options_t());. /// Open a file with `name` for reading and writing. If a file with this name; /// already exists, delete it and create a new one. Else simply create a new file.; ///; /// \note: Synchronizes multi-threaded accesses through locks.; static TFilePtr Recreate(std::string_view name, const Options_t &opts = Options_t());; ```. In the meantime, you should indeed start getting familiar with the testing infrastructure. See io/io/test for some examples.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14017#issuecomment-1821818413:194,access,accesses,194,https://root.cern,https://github.com/root-project/root/pull/14017#issuecomment-1821818413,8,['access'],['accesses']
Security,"We can not access the original ticket. What is the actual hardware that was being accessed? What is mounted as a local -appearing file system or was it being accessed via a remote protocols (i.e the file name were prefixed with root://...). In first approximation, I don't how we could detect your use case? If you were able to set `ulimit` locally to whatever limit fit your need, hadd would automatically adjust.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11276#issuecomment-1239603727:11,access,access,11,https://root.cern,https://github.com/root-project/root/issues/11276#issuecomment-1239603727,3,['access'],"['access', 'accessed']"
Security,"We cannot use `https` as some of the tools we use (Davix) don't have access to the system CA store on macOS for now - we first need to check whether it has arrived now, and then we need to upgrade them. So let's stick with just `-L` for now!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7725#issuecomment-809520433:69,access,access,69,https://root.cern,https://github.com/root-project/root/pull/7725#issuecomment-809520433,1,['access'],['access']
Security,"We get races if all threads access the same TEntryList reference.; This reverts commit f0556c0b49c4229b8c690dbc39ff5deda44be1e5,; and adds a comment so we remember in the future.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2988:28,access,access,28,https://root.cern,https://github.com/root-project/root/pull/2988,1,['access'],['access']
Security,"We had symbols exposed, which in turn meant symbols were resolved by the dynamic loader,; which in turn meant another libllvm.so could interfere with those of cling. By hiding these; symbols, all symbols are self-contained and not external symbols leak into libCling.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4689:15,expose,exposed,15,https://root.cern,https://github.com/root-project/root/pull/4689,1,['expose'],['exposed']
Security,"We have identified in previous meetings (see [here](https://indico.cern.ch/event/945804/) and [here](https://indico.cern.ch/event/956672/)) that a typical HEP analysis benefits from a `Define` version, which evaluates only once per ""dataset"". The identifier of a ""dataset"" is not yet clear. An example scenario is given below (event weights per sample, typical for simulated datasets):. ```cpp; // Construct RDF; RDataFrame df(tree, files);. // Declare computations; auto get_scale = [](const Identifier_t& dataset); {; // dataset = filename.root/treename; if (dataset.contains(""Data"")) return 1.0;; else if (dataset.contains(""DY"")) return 0.9;; else if (dataset.contains(""WJets"")) return 1.1;; else throw std::runtime_error(""Unknown dataset"");; };; auto h = df.DefinePerSample(""weight"", get_scale); .Histo1D(""nMuon"", ""weight"");. // Access result; h->Draw();; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6745:833,Access,Access,833,https://root.cern,https://github.com/root-project/root/issues/6745,1,['Access'],['Access']
Security,"We have to avoid using the CPyCppyy internals in the ROOT pythonization; libray. Otherwise, the ROOT pythonizations will break when updating to the; new CPyCppyy, where the internals have changed a lot. This commit makes sure the internals are not used where it can easily; avoided by using the public CPyCppyy API, or using the C Python API; directly instead of some private compatibility macros defined in; CPyCppyy (that were necessary in the past to support both Python 2 and; 3). Furthermore, the private sources of `CPyCppyy` are now not publically; exposed anymore at the CMake level. This means that we are now forced to; include them via relative paths in the ROOT repository. This makes is; much easier to spot remaining usage of the internal headers (it is quite; hard to tell otherwise that `Utility.h` is a private header from; CPyCppyy). Better exposing this should help in the discussion about how; the get rid of the remaining usage of private headers.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14414:556,expose,exposed,556,https://root.cern,https://github.com/root-project/root/pull/14414,1,['expose'],['exposed']
Security,"We merged https://github.com/root-project/root/pull/13273 this morning. In order to move forward, we need to; * [ ] rebase on current `master`; * [ ] get a list of exact upstream commit hashes that we can apply to https://github.com/root-project/llvm-project/; * [ ] get a CMSSW test on PowerPC64 (the above test is for `x86`!)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13850#issuecomment-1849638185:186,hash,hashes,186,https://root.cern,https://github.com/root-project/root/pull/13850#issuecomment-1849638185,1,['hash'],['hashes']
Security,"We need to also update the short help:; ```; epsft-53 root $ rootcling --help; Usage: rootcling [-v][-v0-4] [-f] [out.cxx] [opts] file1.h[+][-][!] file2.h[+][-][!] ...[LinkDef.h]; Only one verbose flag is authorized (one of -v, -v0, -v1, -v2, -v3, -v4); and must be before the -f flags; For more extensive help type: rootcling -h; ```; The last line should now be `For more extensive help type: rootcling --help`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3280#issuecomment-455485189:205,authoriz,authorized,205,https://root.cern,https://github.com/root-project/root/pull/3280#issuecomment-455485189,1,['authoriz'],['authorized']
Security,"We need to disable the validation of PCM files because rootcling; serializes what it sees. For instance, we even serialize in the PCM; file some temporary lookup buffers and the contents of the module maps. We disable the PCH validation but that is not sufficient for PCM. The; TCling code `fInterpreter->getCI()->getPreprocessorOpts().DisablePCHValidation = true`; is not enough because we rely more on the clang driver to setup correctly; our modules-aware interpreter. This patch just uses the correct flag when setting up cling. A proper fix to this issue is thoroughly described in RE-0003 (rootcling; refactor proposal).",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1345:23,validat,validation,23,https://root.cern,https://github.com/root-project/root/pull/1345,2,['validat'],['validation']
Security,"We saw builtin-xrootd as an internal library, not exposed to the users, and as ROOT doesn't need the Python bindings we have disabled them. I'd still prefer that if you need something from xrootd that ROOT doesn't use / need that you built xrootd yourself, and make that build available to ROOT.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9967#issuecomment-1055299855:50,expose,exposed,50,https://root.cern,https://github.com/root-project/root/issues/9967#issuecomment-1055299855,1,['expose'],['exposed']
Security,"We see authentication issues with the builtin client, see https://cern.service-now.com/service-portal?id=ticket&table=incident&sys_id=8cfde578db0d50d0006fd9f9f49619e7&view=sp; The hope is that recent xrootd changes might solve those.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5874:7,authenticat,authentication,7,https://root.cern,https://github.com/root-project/root/pull/5874,1,['authenticat'],['authentication']
Security,"We see the assert ""Specialization is already registered as lazy"" triggered; due to a hash collision of two sets of template arguments: the arguments; are different but the hash happens to be identical. Be more specific when; claiming that the specialization was already registered as lazy, by not; only comparing the hash, but also the template arguments we found under; that hash key (""structurallyEquals"" is good enough here). Fixes macOS builds with assertions enabled:; $ root.exe -l -b tutorials/multicore/mp001_fillHistos.C; where these two specializations have the same hash:. ClassTemplateSpecializationDecl 0x1019a3478 </Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/type_traits:1364:1, col:113> col:50 imported in std.type_traits hidden <undeserialized declarations> struct remove_reference definition; |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init; | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr; | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param; | |-MoveConstructor exists simple trivial needs_implicit; | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param; | |-MoveAssignment exists simple trivial needs_implicit; | `-Destructor simple irrelevant trivial needs_implicit; `-TemplateArgument type '(lambda at /Users/axel/build/root/master/deb/include/nlohmann/json.hpp:17411:24)'. while looking for the argument. RecordType 0x1038b8be0 'class (lambda at /Users/axel/build/root/master/deb/tutorials/multicore/mp001_fillHistos.C:23:20)'. # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9248:85,hash,hash,85,https://root.cern,https://github.com/root-project/root/pull/9248,5,['hash'],['hash']
Security,"We should always give the most performant version to users (even those who pick up a ROOT build with `-march=...`). For experts we need to have a way to select a certain computational library, but I'm convinced that this should not be at configure time - again, to ensure that users get exposed to the most performant version.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7415#issuecomment-793953700:287,expose,exposed,287,https://root.cern,https://github.com/root-project/root/pull/7415#issuecomment-793953700,1,['expose'],['exposed']
Security,"We will use this helper function for variations too, let's put it in a more generally accessible place.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9234:86,access,accessible,86,https://root.cern,https://github.com/root-project/root/pull/9234,1,['access'],['accessible']
Security,"Well, it mostly just exposes a bug more visible (the lack of codegen when loading code with `LoadModule`) which causes more tests to fail. And fixing codegen problems isn't very straightforward :)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1394#issuecomment-361362564:21,expose,exposes,21,https://root.cern,https://github.com/root-project/root/pull/1394#issuecomment-361362564,1,['expose'],['exposes']
Security,"What is the use case for this PR ? ; I am not sure it is a good idea to expose the internal RNG state. It is well known that Mersenne-Twister has several defects, in particular to suffer from states where several zeros are present. ; This PR will allow users to create states which can produce bogus random numbers. . Lorenzo",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3718#issuecomment-490366637:72,expose,expose,72,https://root.cern,https://github.com/root-project/root/pull/3718#issuecomment-490366637,1,['expose'],['expose']
Security,"What version of OpenSSL is being used, is it the builtin one? Have you installed the CERN SSL certificates? (note `ErrParseBuffer: unknown CA: cannot verify server certificate` in the error message). Do you have a user grid certificate setup? Is Kerberos actually installed? Do you have an active Kerberos ticket while running the test?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12231#issuecomment-1420328372:94,certificate,certificates,94,https://root.cern,https://github.com/root-project/root/issues/12231#issuecomment-1420328372,3,['certificate'],"['certificate', 'certificates']"
Security,What would be the advantage of using `pybind11` to expose the ROOT classes to a python prompt instead of `pyroot`? (or did I misunderstand you request).,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14427#issuecomment-1911045351:51,expose,expose,51,https://root.cern,https://github.com/root-project/root/issues/14427#issuecomment-1911045351,1,['expose'],['expose']
Security,"When TGraph2D points are almost aligned, the computation of the plot limits did not work for example like the one exposed here:; https://root-forum.cern.ch/t/issue-related-to-contour-plots-with-tgraph2d/50153. a reproducer is:; ```; void Contour(){; double x[20] = {300, 400, 500, 600, 700, 800, 900, 1000, 1100, 1200, 1300, 1400, 1500, 1600, 1700, 1800, 1900, 2000, 300, 400};; double y[20] = {1.00e-07, 2.00e-07, 3.00e-07, 4.00e-07, 5.00e-07, 5.00e-07, 6.00e-07, 7.00e-07, 8.00e-07, 9.00e-07, 5.00e-07, 9.10e-07, 9.20e-07, 9.30e-07, 9.40e-07, 9.50e-07, 9.60e-07, 9.70e-07, 1.00e-06, 2.00e-06};; double z[20] = {17.7646, 15.2535, 17.7124, 9.47505, 9.16325, 8.72872, 6.42959, 3.16349, 5.01813, 4.37426, 3.21201, 3.60176, 1.77229, 1.80264, 1.38047, 0.816474, 0.801699, 0.385277, 16.3985, 16.0283};; auto g = new TGraph2D(""contour"",""contour"",20,x,y,z);; g->Draw(""cont4 z"");; }; ```. This PR also allows to define properly the 2D histogram. In the past old interpolator was used by SetHistogram(). Now the default is the new one.; ```; void Contour(){; double x[20] = {300, 400, 500, 600, 700, 800, 900, 1000, 1100, 1200, 1300, 1400, 1500, 1600, 1700, 1800, 1900, 2000, 300, 400};; double y[20] = {1.00e-07, 2.00e-07, 3.00e-07, 4.00e-07, 5.00e-07, 5.00e-07, 6.00e-07, 7.00e-07, 8.00e-07, 9.00e-07, 5.00e-07, 9.10e-07, 9.20e-07, 9.30e-07, 9.40e-07, 9.50e-07, 9.60e-07, 9.70e-07, 1.00e-06, 2.00e-06};; double z[20] = {17.7646, 15.2535, 17.7124, 9.47505, 9.16325, 8.72872, 6.42959, 3.16349, 5.01813, 4.37426, 3.21201, 3.60176, 1.77229, 1.80264, 1.38047, 0.816474, 0.801699, 0.385277, 16.3985, 16.0283};; auto g = new TGraph2D(""contour"",""contour"",20,x,y,z);; auto h = new TH2D(""h"",""h"",40,200,3000,40,1.00e-07,1.00e-06);; g->SetHistogram(h);; g->Draw(""cont4 z"");; }. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10677:114,expose,exposed,114,https://root.cern,https://github.com/root-project/root/pull/10677,1,['expose'],['exposed']
Security,When adding a weighted profile to a non weighted one there was a bug in handling the w2 data structure. Sumw2 is needed to be called before accessing the corresponding array (TProfile::GetB2()).; This fixes ROOT-10153,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7113:140,access,accessing,140,https://root.cern,https://github.com/root-project/root/pull/7113,1,['access'],['accessing']
Security,When building latest ROOT (6.28.02) with latest Protobuf 22.4 tmva/sofie_parsers build fails during linking step with errors of the type:; ```; x86_64-unknown-linux-gnu/bin/ld: ... undefined reference to `absl::lts_20230125::log_internal::LogMessage::OstreamView::~OstreamView()...; x86_64-unknown-linux-gnu/bin/ld: ... undefined reference to `absl::lts_20230125::Mutex::~Mutex()'; x86_64-unknown-linux-gnu/bin/ld: ... undefined reference to `utf8_range::IsStructurallyValid(...; ```; The problem seems to be caused by adding new dependency of Protobuf on Abseil in Protobuf 22.x (https://protobuf.dev/news/2022-08-03/). To make the code build I needed to:; Add in file `cmake/modules/SearchInstalledSoftware.cmake` after line ; ```; find_package(Protobuf); ```; lines (probably this should be dependent on version of Protobuf); ```; find_package(absl REQUIRED); find_package(utf8_range REQUIRED); ```; In file `tmva/sofie_parsers/CMakeLists.txt` add inside linking after line; ```; ${Protobuf_LIBRARIES}; ```; lines; ```; absl::str_format_internal; absl::log_internal_message; absl::hash; absl::flat_hash_set; absl::log_internal_check_op; utf8_range::utf8_validity; ```,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12770:1084,hash,hash,1084,https://root.cern,https://github.com/root-project/root/issues/12770,1,['hash'],['hash']
Security,"When building root from source, I encountered an error that the SHA-256 hash in root_build/builtins/xrootd/XROOTD-prefix/src/XROOTD-stamp/download-XROOTD.cmake does not match the hash of the latest (5.4.2) version of the downloaded file. Most likely the hardcoded hash in this file needs to be updated.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10578:72,hash,hash,72,https://root.cern,https://github.com/root-project/root/issues/10578,3,['hash'],['hash']
Security,When building with a macOS SDK before 12.0 and running with 12.0+ the validation of private modulemaps fails due to a change in layout. This change disables the check when DisablePCHValidation is active. (cherry picked from commit 85c757ad962e609779dcf8171e37cf70f611d238). Backport of PR #10555,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10669:70,validat,validation,70,https://root.cern,https://github.com/root-project/root/pull/10669,1,['validat'],['validation']
Security,"When chunking and fitting the right amount of elements per chunk you; may end up with empty chunks at the end. This chunks will still consist; of N elements per chunk, but they will not be initialized. Accessing; them was a problem. Solved by reducing the number of chunks (not; allowing empty chunks)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/811:202,Access,Accessing,202,https://root.cern,https://github.com/root-project/root/pull/811,1,['Access'],['Accessing']
Security,"When doing I/O of RVec objects, TClassEdit::STLArgs was accessing; an element one after the end of a static array. asan rightly complains. This commit fixes #7903,; which contains more details. This PR is a backport of #7920",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7924:56,access,accessing,56,https://root.cern,https://github.com/root-project/root/pull/7924,1,['access'],['accessing']
Security,"When doing I/O of RVec objects, TClassEdit::STLArgs was accessing; an element one after the end of a static array. asan rightly complains. This commit fixes https://github.com/root-project/root/issues/7903,; which contains more details.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7920:56,access,accessing,56,https://root.cern,https://github.com/root-project/root/pull/7920,1,['access'],['accessing']
Security,"When generating the GQt module in rootcling, we hit the assertions; in forceAppend assertions about ""Duplicates?!"" with this declaration:. ```; CXXRecordDecl 0x55555643fae8 </usr/include/qt4/QtCore/qglobal.h:1658:1, line:1794:1> line:1658:21 in GQt.TGQt.h hidden class QSysInfo definition; |-also in GQt.TQtClientWidget.h; |-CXXRecordDecl 0x55555643fc30 <col:1, col:21> col:21 in GQt.TGQt.h hidden implicit class QSysInfo; |-AccessSpecDecl 0x55555643fce8 <line:1659:1, col:7> col:1 in GQt.TGQt.h public; |-EnumDecl 0x55555643fd18 <line:1660:5, line:1662:5> line:1660:10 in GQt.TGQt.h hidden Sizes; | `-EnumConstantDecl 0x55555643fe98 <line:1661:9, col:38> col:9 in GQt.TGQt.h hidden WordSize 'enum QSysInfo::Sizes'; | `-ImplicitCastExpr 0x55555643fee0 <col:20, col:38> 'unsigned int' <IntegralCast>; | `-ParenExpr 0x55555643fe70 <col:20, col:38> 'unsigned long'; | `-BinaryOperator 0x55555643fe48 <col:21, col:37> 'unsigned long' '<<'; | |-UnaryExprOrTypeTraitExpr 0x55555643fe08 <col:21, col:34> 'unsigned long' sizeof 'void *'; | `-IntegerLiteral 0x55555643fe28 <col:37> 'int' 3; `-EnumDecl 0x55555643ff00 <line:1672:5, line:1685:5> line:1672:10 in GQt.TGQt.h hidden Endian; |-EnumConstantDecl 0x55555643ffd8 <line:1673:9> col:9 in GQt.TGQt.h hidden referenced BigEndian 'enum QSysInfo::Endian'; |-EnumConstantDecl 0x555556440028 <line:1674:9> col:9 in GQt.TGQt.h hidden referenced LittleEndian 'enum QSysInfo::Endian'; `-EnumConstantDecl 0x5555564400a0 <line:1681:11, col:23> col:11 in GQt.TGQt.h hidden ByteOrder 'enum QSysInfo::Endian'; `-ImplicitCastExpr 0x5555564400e8 <col:23> 'unsigned int' <IntegralCast>; `-DeclRefExpr 0x555556440070 <col:23> 'int' EnumConstant 0x555556440028 'LittleEndian' 'enum QSysInfo::Endian'; ```. The reason for this is that we have QSysInfo both in the TQtClientWidget; and TGQt submodules and our current translation (which is supposed to; parse all header in the module) sees them both in one transaction. As we also don't recognize that this decl is from a modu",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1236:425,Access,AccessSpecDecl,425,https://root.cern,https://github.com/root-project/root/pull/1236,1,['Access'],['AccessSpecDecl']
Security,"When injecting symbols, do not rely on the last Module:",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7506:5,inject,injecting,5,https://root.cern,https://github.com/root-project/root/pull/7506,2,['inject'],['injecting']
Security,"When installing ROOT 6.24 with a package manager, CMake will try to modify `/usr` directly even when the installation is supposed to happen to a staging area beforehand. We need to change the link creation to respect DESTDIR such that installations like `env DESTDIR=${PWD}/test-install cmake --build . --target install` doesn't try to modify any system directories.; Here is a sandbox violation report from Portage:; ```; * --------------------------- ACCESS VIOLATION SUMMARY ---------------------------; * LOG FILE: ""/var/tmp/portage/sci-physics/root-6.24.00/temp/sandbox.log""; * ; VERSION 1.0; FORMAT: F - Function called; FORMAT: S - Access Status; FORMAT: P - Path as passed to function; FORMAT: A - Absolute Path (not canonical); FORMAT: R - Canonical Path; FORMAT: C - Command Line. F: symlink; S: deny; P: /usr/lib/python3.8/site-packages/libcppyy_backend3_8.so; A: /usr/lib/python3.8/site-packages/libcppyy_backend3_8.so; R: /usr/lib/python3.8/site-packages/libcppyy_backend3_8.so; C: /usr/bin/cmake -E create_symlink /usr/lib64/root-6.24/libcppyy_backend3_8.so /usr/lib/python3.8/site-packages/libcppyy_backend3_8.so . F: symlink; S: deny; P: /usr/lib/python3.8/site-packages/libcppyy3_8.so; A: /usr/lib/python3.8/site-packages/libcppyy3_8.so; R: /usr/lib/python3.8/site-packages/libcppyy3_8.so; C: /usr/bin/cmake -E create_symlink /usr/lib64/root-6.24/libcppyy3_8.so /usr/lib/python3.8/site-packages/libcppyy3_8.so ; * --------------------------------------------------------------------------------; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7964:453,ACCESS,ACCESS,453,https://root.cern,https://github.com/root-project/root/issues/7964,2,"['ACCESS', 'Access']","['ACCESS', 'Access']"
Security,"When noting that a TStreamerInfo set has already been processed, we; must do it in 3 separates steps:; - check it was seen before; - read and process the set; - record that the set as been seen. The previous situation:; - check and record that the set as been seen; - read and process the set; led to a race condition if a second thread was checking the same; set before the second step was completed (in which case the; second thread was believing that the set was process and looking; for the result of the process (one of the StreamerInfo) but could; not find it. We extend RConcurrentHashColl to have 2 new operations; - standalone Hash calculation; - standalone Find of hash; - standalone Insert of hash.; and we use it to split the check and the recording as described; previously. (this is an addendum to 95bf468438)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2710:636,Hash,Hash,636,https://root.cern,https://github.com/root-project/root/pull/2710,6,"['Hash', 'hash']","['Hash', 'hash']"
Security,"When opening files reconstructed with the SHiP framework, trying to open the second cycle of the cbmsim tree results in a segmentation violation and (depending on ROOT version? not always) the following error:. `Error in <TBufferFile::CheckByteCount>: object of class TClonesArray read too few bytes: 66 instead of 7071`. A small reproducer file:. https://cernbox.cern.ch/s/MSDo7DAuFOuUlMc. Tried with ROOT versions 6.26/06, 6.26/02, from the SHiP software stack and from conda, both using `rootbrowse` and `root`. I assume ROOT doesn't like how this file is created. Accessing all branches using (py)ROOT seems to work fine.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12537:568,Access,Accessing,568,https://root.cern,https://github.com/root-project/root/issues/12537,1,['Access'],['Accessing']
Security,"When plotting a pdf in 2 separate ranges, 2 RooCurve objects are created with the same name . When using pullHist or whatever function of RooPlot accessing the RooCurve by its name, only the last of the two curve can be retrieved. Since RooPlot has no way to access its list of containing objects, apart than given the name, only the RooCurve with the upper range will be used. Code to reproduce the problem:. ```Python; import ROOT as r. ws = r.RooWorkspace(""workspace""); x = ws.factory(""x[-10, 10]""); x.setRange(""lo"", -10, -5); x.setRange(""hi"", 5, 10); pdf = ws.factory(""Gaussian::pdf(x, m1[0], s1[3])""); ds = pdf.generate(r.RooArgSet(x), 1000). fr = x.frame(); ds.plotOn(fr); pdf.plotOn(fr, r.RooFit.Range(""lo,hi"")); pull = fr.pullHist(). c = r.TCanvas(); fr2 = x.frame(); fr2.addPlotable(pull, ""P""); fr2.Draw(); ```. This commit suggests to fix the issue by also considering the ranges of all the other curves that have the same name as the first curve that was found. Closes #9741.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11419:146,access,accessing,146,https://root.cern,https://github.com/root-project/root/pull/11419,2,['access'],"['access', 'accessing']"
Security,"When registering a new specialization, we cannot assert that the; specialization is new, as in: has not been registered as a loadable; specialization before, at least not based on the ODRHash. The ODRHash is not unique for different types (hash collision), i.e.; different specialization template arguments might map to the same; ODRHash value. loadLazySpecializationsImpl() will thus load something,; and claim that the ""Specialization is already registered as lazy"",; but it will in fact be an unrelated specialization. Give up on asserting any of this. NOTE: it is unclear whether the ambiguity in which specialization will; be loaded is causing problems down the road; so far we have not observed; such problems in the wild. If so, the ODRHash must not be the lookup key,; but a mere lookup hint into a multimap or similar, where the search compares; the actual template arguments to identify which lazy specialization to load. Based on discussion with Vassil (and in turn Richard Smith). This fixes e.g.; ```; roottest/cling/threading/clinglock.C...; Assertion failed: (!loadLazySpecializationsImpl(Args) && ""Specialization is already registered as lazy""), function addSpecializationImpl, file /Users/sftnight/build/workspace/root-pullrequests-build/root/interpreter/llvm/src/tools/clang/lib/AST/DeclTemplate.cpp, line 253.; ```; on macOS 11.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9621:240,hash,hash,240,https://root.cern,https://github.com/root-project/root/pull/9621,1,['hash'],['hash']
Security,"When training a PyTorch model within TMVA (during `Factory::BookMethod`), this crash happens:; ```; : Preparing the Decorrelation transformation...; : Preparing the Gaussian transformation...; TFHandler_PyTorch : Variable Mean RMS [ Min Max ]; : -----------------------------------------------------------; : var1: 0.0089276 1.0040 [ -3.1195 5.7307 ]; : var2: 0.0079596 0.99992 [ -3.1195 5.7307 ]; : var3: 0.0079663 1.0001 [ -3.1195 5.7307 ]; : var4: 0.0074148 0.99773 [ -3.1195 5.7307 ]; : -----------------------------------------------------------; TFHandler_PyTorch : Variable Mean RMS [ Min Max ]; : -----------------------------------------------------------; : var1: 0.0089276 1.0040 [ -3.1195 5.7307 ]; : var2: 0.0079596 0.99992 [ -3.1195 5.7307 ]; : var3: 0.0079663 1.0001 [ -3.1195 5.7307 ]; : var4: 0.0074148 0.99773 [ -3.1195 5.7307 ]; : -----------------------------------------------------------; : Split TMVA training data in 6400 training events and 1600 validation events; : Print Training Model Architecture; : Option SaveBestOnly: Only model weights with smallest validation loss will be stored; Program aborted due to an unhandled Error:; Unable to find target for this triple (no targets are registered) *** Break *** abort; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12170:971,validat,validation,971,https://root.cern,https://github.com/root-project/root/issues/12170,2,['validat'],['validation']
Security,"When wrong-formatted TMessage is received, length of buffer may be 0.; As result, buffer may not be allocated at all.; One should avoid that in such case memory is accessed",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4551:164,access,accessed,164,https://root.cern,https://github.com/root-project/root/pull/4551,1,['access'],['accessed']
Security,"While many widgets will access JSROOT, try to always access JSROOT version from top server location; One cannot simply use src=""/jsrootsys/scripts/JSRoot.core.js"" while it does not work with FastCGI.; Therefore one have to use relative paths like ""../../jsrootsys/scripts/JSRoot.core.js"".; More efficiently will use browser cache",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7124:24,access,access,24,https://root.cern,https://github.com/root-project/root/pull/7124,2,['access'],['access']
Security,"While thinking about collisions and the index storage, one thought that crossed my mind is to template the index based on the index field type(s). I'm not sure if that's a good idea, one of the immediate question being ""do we want `RNTupleIndex<std::string>` and `RNTupleIndex<std::uint64_t>` to be different types?"" But still maybe something to consider, it might simplify the field value storage (if needed) and the entire hashing business...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15116#issuecomment-2242991029:425,hash,hashing,425,https://root.cern,https://github.com/root-project/root/pull/15116#issuecomment-2242991029,2,['hash'],['hashing']
Security,Why did the hash of the file in lcgpackage change even-though the xrootd version did not change? (i.e. Didn't we migrate away from downloading from github to avoid exactly this kind of problem?),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11106#issuecomment-1204549271:12,hash,hash,12,https://root.cern,https://github.com/root-project/root/pull/11106#issuecomment-1204549271,1,['hash'],['hash']
Security,Windows seems to have failing tests (?!) but these are `The process cannot access the file because it is being used by another process.` i.e. seemingly unrelated.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12183#issuecomment-1411113120:75,access,access,75,https://root.cern,https://github.com/root-project/root/pull/12183#issuecomment-1411113120,1,['access'],['access']
Security,"With PCH+Module, sometimes compiler gives a hard error:; _Module file ‘<some-file path>.pcm' is out of date and needs to be rebuilt._; Adding fmodules-disable-diagnostic-validation helps in situation if two compiler instances only differ in diagnostic options, the later instance will not invalidate the original pcm.; Details: https://reviews.llvm.org/D22773",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2680:170,validat,validation,170,https://root.cern,https://github.com/root-project/root/pull/2680,1,['validat'],['validation']
Security,"With PR https://github.com/root-project/root/pull/12800, the `RooFormula` was taken out of the public user; interface, because it is an implementation detail of the RooFormulaVar; and RooGenericPdf. However, there are cases where people used the RooFormula interface to; access some information that was otherwise unavailable, like the set of; actual variables that the formula depends on. There is some code in RooFormulaVar and RooGenericPdf that makes it seem; like these classes provide an interface to the actual variables; themselves:. ```c++; const RooArgList& dependents() const { return _actualVars; }; ... RooListProxy _actualVars ; ///< Actual parameters used by formula engine; ```. However, `_actualVars` is containing **all** variables, not the actual; variables as the name suggests!. Fixing this removes the need to access the actual vars via the; `RooFormula`. This connects to a discussion that was held on GitHub:; https://github.com/root-project/root/commit/a470a3d85e8b5c93917d3e84c39e9d5f0066da97#commitcomment-113514331. Furthermore, a second commit in this PR suggests to remove the possibility to reset the formula in a `RooFormula`, because this i not correctly supported anyway, untested, and greatly increases the possibility for implementation errors. It was only every used in `RooGenericPdf::readFromStream()`, which is not used.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12826:271,access,access,271,https://root.cern,https://github.com/root-project/root/pull/12826,2,['access'],['access']
Security,"With a new checksum functionality, it is required to have xxhash library: FindLZ4.cmake was extended to check if you have xxhash includes (for the case if you build your own standalone LZ4, where xxhash is a part of project) and find library in case if you are using system LZ4 that doesn't have xxhash (in this case you need to build standalone xxhash library), otherwise to fall back to builtin_lz4 option.; Builtin LZ4 version has xxhash library built inside by itself and provides different xxhash symbols for the LZ4 library extended with LZ4 namespace, while if it is used standalone LZ4 with standalone xxhash. To separate them, it was introduced LZ4_DEFINITIONS.; @amadio @bbockelm can you look please?",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/935:11,checksum,checksum,11,https://root.cern,https://github.com/root-project/root/pull/935,1,['checksum'],['checksum']
Security,"With llvm9, the module ptr gets reset upon emission.; Instead, just look for the symbol in the JIT - where it should be found,; as Init() is injecting it there, and we want to find *that* symbol,; not the one from the binary. Fixes `CodeUnloading/AtExit.C` cling test.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7506:141,inject,injecting,141,https://root.cern,https://github.com/root-project/root/pull/7506,1,['inject'],['injecting']
Security,"With the objective of fixing tests, this PR exposes in the ROOT module some functionality of the CPyCppyy extension module. Such functionality is available in the current PyROOT and some tests rely on it. A more exhaustive investigation on which functionality of cppyy we want to expose via the ROOT module is required.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3370:44,expose,exposes,44,https://root.cern,https://github.com/root-project/root/pull/3370,2,['expose'],"['expose', 'exposes']"
Security,"With the upgrade, BackendPasses was modifying a TargetMachine that was not used by SimpleCompiler. Change that by; - using a SimpleCompiler that uses IncrementalJIT::TM;; - moving the TM creation to IncrementalJIT, and giving access to it. This reduces the runtime of https://github.com/root-project/root/issues/11927 to; - before llvm upgrade: 2.69s; - llvm13, without this commit: ???; - llvm13, with this commit: 2.89s i.e, a slow-down of 7% (that is likely caused by the different emission mechanism of Orc-v2; to be confirmed...). # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11945:226,access,access,226,https://root.cern,https://github.com/root-project/root/pull/11945,1,['access'],['access']
Security,"With the upgrade, BackendPasses was modifying a TargetMachine that was not used by SimpleCompiler. Change that by; - using a SimpleCompiler that uses IncrementalJIT::TM;; - moving the TM creation to IncrementalJIT, and giving access to it. This reduces the runtime of https://github.com/root-project/root/issues/11927 to; - before llvm upgrade: 2.69s; - llvm13, without this commit: ???; - llvm13, with this commit: 2.89s i.e, a slow-down of 7% (that is likely caused by the different emission mechanism of Orc-v2; to be confirmed...). (cherry picked from commit d3793f2bb8c5948f4c64947c7f76fb0b0e1a3567). # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12096:226,access,access,226,https://root.cern,https://github.com/root-project/root/pull/12096,1,['access'],['access']
Security,"With this PR, the normalization integrals are placed as separate objects in the serialized computation graph for the RooFitDriver. This is done by modifying the RooFit computation graph, injecting a `RooNormalizedPdf` on top of every normalized pdf where the normalization is done instead of doing it hardcoded in the `computeBatch` function for each pdf. These changes make all the stressRooFit unit tests pass with the `CPU` and `CUDA` batch mode, so stressRooFit runs with these instances are added as unit tests.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9956:187,inject,injecting,187,https://root.cern,https://github.com/root-project/root/pull/9956,1,['inject'],['injecting']
Security,"With this change, fields are only added to the `REntry` and read when they are referenced in the processor loop. This prevents unecessary reads of unused fields. It also makes the REntry completely transparent from an interface perspective. Pointers to values can be obtained through the processor interface itself *before* the iteration starts, or alternatively via the iterator returned by the processor. Important to note that during iteration, the pointer returned by `RNTupleProcessor::GetPtr` will **not** contain the value for the current entry. The reason for this is that from the `RNTupleProcessor` interface there is (with the current implementation) no way to know what the current entry index is. For now, `RNTupleProcessor::GetPtr` contains a warning and a recommendation to get the pointer through the iterator instead. Alternative solutions could be:; 1. Remove `RNTupleProcessor::GetPtr` altogether and only allow access to the field value pointers through the iterator.; 2. Dispatch the local entry index from `RState` back to the processor on every `Advance`, and (re)load the entry when `RNTupleProcessor::GetPtr` is called. ## Checklist:. - [x] tested changes locally; - [x] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15939:931,access,access,931,https://root.cern,https://github.com/root-project/root/pull/15939,1,['access'],['access']
Security,Without this it currently works fine because RDataFrame does not rewind a DataSource while doing a run on it. However the new RCombinedDS (a RDataSource which iterates on the cartesian product of two other datasources) which I just implemented exposes the issue because the above mentioned condition is not true anymore. This corrects the bug by effectively moving the cached cursor.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3428:244,expose,exposes,244,https://root.cern,https://github.com/root-project/root/pull/3428,1,['expose'],['exposes']
Security,"Without ~realistic benchmarks that we can use to judge the impact of these interventions, I'm reluctant to propose changes in such important sections of the code. On the other hand, differently from what the discussion from 2016 that you reported above assumes:. 1. we do not test (nor design for) the usecase of `TTreeProcessorMT::Process` being called concurrently, or other threads accessing the same `TFile` objects that `TTreeProcessorMT::Process` is using. in other words, that's not a real usecase.; 2. `TTreeProcessorMT::Process` respects (and if not, it's a bug and not intentional) the ""one file, one thread"" rule. Given these two facts, can't we just completely remove `TParTreeProcessingRAII` and ~~be done with it~~ _never_ protect `TFile::ReadProcessID`?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5288#issuecomment-609039774:385,access,accessing,385,https://root.cern,https://github.com/root-project/root/pull/5288#issuecomment-609039774,1,['access'],['accessing']
Security,Workaround for multi-threaded environment; Ensure main thread id picked when canvas implementation is created otherwise it may be assigned in other thread and screw-up `gPad` access. Workaround may not work if main thread id was wrongly initialized before. This resolves issue https://github.com/root-project/root/issues/15498,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15825:175,access,access,175,https://root.cern,https://github.com/root-project/root/pull/15825,1,['access'],['access']
Security,Workaround for multi-threaded environment; Ensure main thread id picked when canvas implementation is created otherwise it may be assigned in other thread and screw-up gPad access. Workaround may not work if main thread id was wrongly initialized before. This resolves issue https://github.com/root-project/root/issues/15498. Backport of #15825,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15830:173,access,access,173,https://root.cern,https://github.com/root-project/root/pull/15830,1,['access'],['access']
Security,"Writer.cpp	2023-01-10 11:34:45.644464781 -0600; @@ -105,6 +105,7 @@; #include <algorithm>; #include <cassert>; #include <cstdint>; +#include <cstdio>; #include <cstdlib>; #include <cstring>; #include <ctime>; @@ -2498,6 +2499,8 @@; // did not result in us loading a module file for that submodule. For; // instance, a cross-top-level-module 'conflict' declaration will hit this.; unsigned ID = getLocalOrImportedSubmoduleID(Mod);; + fprintf(stderr, ""Mod=%X\n"", Mod);; + fprintf(stderr, ""Submodule=%s\n"", Mod->Name.c_str());; assert((ID || !Mod) &&; ""asked for module ID for non-local, non-imported module"");; return ID;; --- interpreter/llvm/src/tools/clang/lib/Serialization/ASTWriterDecl.cpp~	2023-01-06 05:04:43.000000000 -0600; +++ interpreter/llvm/src/tools/clang/lib/Serialization/ASTWriterDecl.cpp	2023-01-10 13:21:47.554190854 -0600; @@ -26,6 +26,8 @@; using namespace clang;; using namespace serialization;. +#include <cstdio>; +; //===----------------------------------------------------------------------===//; // Declaration serialization; //===----------------------------------------------------------------------===//; @@ -361,6 +363,8 @@; Record.push_back(D->isTopLevelDeclInObjCContainer());; Record.push_back(D->getAccess());; Record.push_back(D->isModulePrivate());; + D->dump();; + if (D->getOwningModule()) fprintf(stderr, ""D->getOwningModule()->Name=%s"", D->getOwningModule()->Name.c_str());; Record.push_back(Writer.getSubmoduleID(D->getOwningModule()));. // If this declaration injected a name into a context different from its; ```; itself causes issues with dictionary generation. Once removed, compilation succeeds. As for the libunwind issue, I believe https://bugs.llvm.org/show_bug.cgi?id=44074 is illuminative. The LLVM/Clang in use in the Linux Docker container is configured to use `libc++`, `libc++abi`, `compiler-rt` and `libunwind`. It has the fix for the above-mentioned bug; however it appears that the LLVM/Clang 13 incorporated with ROOT at this time does not.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10861#issuecomment-1409129986:2061,inject,injected,2061,https://root.cern,https://github.com/root-project/root/issues/10861#issuecomment-1409129986,1,['inject'],['injected']
Security,"XVCI6Mn0%3D%7C1000&sdata=6x%2BvqAwaP4JatJuGaFF%2FDau8refUUubCF0W9oyCbdgg%3D&reserved=0>,O=Grid,C=CA; >>>>>>>> * start date: Apr 08 16:29:03 2021 GMT; >>>>>>>> * expire date: May 08 16:29:03 2022 GMT; >>>>>>>> * common name: dpool46.lcg.triumf.ca ; >>>>>>>> <http://dpool46.lcg.triumf.ca/>; >>>>>>>> * issuer: CN=Grid Canada Certificate Authority,O=Grid,C=CA; >>>>>>>> * NSS error -8179 (SEC_ERROR_UNKNOWN_ISSUER); >>>>>>>> * Peer's Certificate issuer is not recognized.; >>>>>>>> * Closing connection 0; >>>>>>>> curl: (60) Peer's Certificate issuer is not recognized.; >>>>>>>> More details here: http://curl.haxx.se/docs/sslcerts.html ; >>>>>>>> <https://can01.safelinks.protection.outlook.com/?url=http%3A%2F%2Fcurl.haxx.se%2Fdocs%2Fsslcerts.html&data=04%7C01%7Csimonliu%40triumf.ca%7Ca59fceaddf634d196e5608d91576f34a%7Cc20535109cb34679a2d38f442e03b587%7C1%7C0%7C637564422909257351%7CUnknown%7CTWFpbGZsb3d8eyJWIjoiMC4wLjAwMDAiLCJQIjoiV2luMzIiLCJBTiI6Ik1haWwiLCJXVCI6Mn0%3D%7C1000&sdata=u7Y%2FanQwDppeiiawxeAhNcTy09JgTzHSTAvPUZDe3c4%3D&reserved=0>; >>>>>>>>; >>>>>>>> curl performs SSL certificate verification by default, using a ; >>>>>>>> ""bundle""; >>>>>>>>  of Certificate Authority (CA) public keys (CA certs). If the ; >>>>>>>> default; >>>>>>>>  bundle file isn't adequate, you can specify an alternate file; >>>>>>>>  using the --cacert option.; >>>>>>>> If this HTTPS server uses a certificate signed by a CA ; >>>>>>>> represented in; >>>>>>>>  the bundle, the certificate verification probably failed due to a; >>>>>>>>  problem with the certificate (it might be expired, or the name ; >>>>>>>> might; >>>>>>>>  not match the domain name in the URL).; >>>>>>>> If you'd like to turn off curl's verification of the ; >>>>>>>> certificate, use; >>>>>>>>  the -k (or --insecure) option.; >>>>>>>> ***@***.*** t5]$; >>>>>>>; >>>>>>>; >>>>>>> I am unfamiliar with how to use curl with X509 and everything I ; >>>>>>> tried so far has not worked. eg; >>>>>>> *curl*-v ; >>>>>>> https://webdav.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8092#issuecomment-840043080:7751,certificate,certificate,7751,https://root.cern,https://github.com/root-project/root/issues/8092#issuecomment-840043080,2,"['Certificate', 'certificate']","['Certificate', 'certificate']"
Security,"Yes indeed. Ok I understand this is also information exposed to users, fair enough. This can be closed",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10243#issuecomment-1080320787:53,expose,exposed,53,https://root.cern,https://github.com/root-project/root/pull/10243#issuecomment-1080320787,1,['expose'],['exposed']
Security,Yes let's expose to users and we see how this fares. If we run into problems we make it less visible (e.g. only for notebooks),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4214#issuecomment-532582399:10,expose,expose,10,https://root.cern,https://github.com/root-project/root/pull/4214#issuecomment-532582399,1,['expose'],['expose']
Security,"Yes that's what input validation is for, what am I missing?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10774#issuecomment-1158663283:22,validat,validation,22,https://root.cern,https://github.com/root-project/root/issues/10774#issuecomment-1158663283,1,['validat'],['validation']
Security,"Yes, sure, but the easiest way to do this is that we agree on how to proceed with:. https://github.com/AliceO2Group/AliceO2/pull/1701. I am not sure it's possible to expose the issue right now without doing a `#define private public` in the test.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3428#issuecomment-463583162:166,expose,expose,166,https://root.cern,https://github.com/root-project/root/pull/3428#issuecomment-463583162,1,['expose'],['expose']
Security,"Yes, that's for sure, but what about the part of us changing the ROOT links on sourceforge? Do you have access to that?. *edit:* after discussing privately with @lmoneta, we concluded to update the links in ROOT but not change the links on `sourceforge.net`. We can't change the website ourselves, and it's not really worth the effort to identify someone who can.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7627#issuecomment-1798192070:104,access,access,104,https://root.cern,https://github.com/root-project/root/issues/7627#issuecomment-1798192070,1,['access'],['access']
Security,"Yes, those 2 interface are accessible/similar in python.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9339#issuecomment-981144492:27,access,accessible,27,https://root.cern,https://github.com/root-project/root/issues/9339#issuecomment-981144492,1,['access'],['accessible']
Security,"Yes. That would be an improvement IMO because then an attacker would need to modify the workflow, which is more visible.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12201#issuecomment-1412405487:54,attack,attacker,54,https://root.cern,https://github.com/root-project/root/pull/12201#issuecomment-1412405487,1,['attack'],['attacker']
Security,"You are adding it to the target, the dependency is explicit in the fact that you need to have a target to pass as argument. You don't need to add the include that the dictionary needs to the executable, you could just add it to the directory includes, but adding to the target is better as it avoids leaking it to subdirectories. You only have to do it before because of Axel's changes that force a manual header search for the dictionary header, so the search paths need to be ready for you to actually find it. In earlier versions of ROOT, not finding this header would not cause a failure, but may have picked up the wrong header and injected a bunch of absolute paths to the dictionary which in turn would end up breaking things. For example, if you know the dictionary header will always just be in the current source directory, you could just set `CMAKE_INCLUDE_CURRENT_DIR` to `True` instead, and not add the current directory to the target includes.; ```; $ cmake --help-variable CMAKE_INCLUDE_CURRENT_DIR; CMAKE_INCLUDE_CURRENT_DIR; -------------------------. Automatically add the current source and build directories to the include path. If this variable is enabled, CMake automatically adds; ``CMAKE_CURRENT_SOURCE_DIR`` and ``CMAKE_CURRENT_BINARY_DIR``; to the include path for each directory. These additional include; directories do not propagate down to subdirectories. This is useful; mainly for out-of-source builds, where files generated into the build; tree are included by files located in the source tree. By default ``CMAKE_INCLUDE_CURRENT_DIR`` is ``OFF``.; ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8308#issuecomment-856752467:637,inject,injected,637,https://root.cern,https://github.com/root-project/root/issues/8308#issuecomment-856752467,1,['inject'],['injected']
Security,"[-Wunused-variable] ; - [2022-02-09T16:37:57.322Z] /Users/sftnight/build/workspace/root-pullrequests-build/root/math/mathcore/src/VectorizedTMath.cxx:97:29: warning: unused variable 'h' [-Wunused-variable] ; - [2022-02-09T16:37:57.322Z] /Users/sftnight/build/workspace/root-pullrequests-build/root/math/mathcore/src/VectorizedTMath.cxx:97:36: warning: unused variable 'y' [-Wunused-variable] ; - [2022-02-09T16:38:02.440Z] ld: warning: direct access in function 'ROOT::GenerateInitInstanceLocal(TKDTree&lt;int, double&gt; const*)' from file 'math/mathcore/CMakeFiles/G__MathCore.dir/G__MathCore.cxx.o' to global weak symbol 'typeinfo for TKDTree&lt;int, double&gt;' from file 'math/mathcore/CMakeFiles/MathCore.dir/src/TKDTree.cxx.o' means the weak symbol cannot be overridden at runtime. This was likely caused by different translation units being compiled with different visibility settings. ; - [2022-02-09T16:38:02.440Z] ld: warning: direct access in function 'ROOT::GenerateInitInstanceLocal(TKDTree&lt;int, double&gt; const*)' from file 'math/mathcore/CMakeFiles/G__MathCore.dir/G__MathCore.cxx.o' to global weak symbol 'typeinfo for TKDTree&lt;int, double&gt;' from file 'math/mathcore/CMakeFiles/MathCore.dir/src/TKDTree.cxx.o' means the weak symbol cannot be overridden at runtime. This was likely caused by different translation units being compiled with different visibility settings. ; - [2022-02-09T16:38:02.440Z] ld: warning: direct access in function 'ROOT::GenerateInitInstanceLocal(TKDTree&lt;int, float&gt; const*)' from file 'math/mathcore/CMakeFiles/G__MathCore.dir/G__MathCore.cxx.o' to global weak symbol 'typeinfo for TKDTree&lt;int, float&gt;' from file 'math/mathcore/CMakeFiles/MathCore.dir/src/TKDTree.cxx.o' means the weak symbol cannot be overridden at runtime. This was likely caused by different translation units being compiled with different visibility settings. ; - [2022-02-09T16:38:02.440Z] ld: warning: direct access in function 'ROOT::GenerateInitInstanceLocal(T",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9849#issuecomment-1033982904:1934,access,access,1934,https://root.cern,https://github.com/root-project/root/pull/9849#issuecomment-1033982904,1,['access'],['access']
Security,"[-Wunused-variable] ; - [2022-04-08T12:10:37.923Z] /Users/sftnight/build/workspace/root-pullrequests-build/root/math/mathcore/src/VectorizedTMath.cxx:97:29: warning: unused variable 'h' [-Wunused-variable] ; - [2022-04-08T12:10:37.923Z] /Users/sftnight/build/workspace/root-pullrequests-build/root/math/mathcore/src/VectorizedTMath.cxx:97:36: warning: unused variable 'y' [-Wunused-variable] ; - [2022-04-08T12:10:43.036Z] ld: warning: direct access in function 'ROOT::GenerateInitInstanceLocal(TKDTree&lt;int, double&gt; const*)' from file 'math/mathcore/CMakeFiles/G__MathCore.dir/G__MathCore.cxx.o' to global weak symbol 'typeinfo for TKDTree&lt;int, double&gt;' from file 'math/mathcore/CMakeFiles/MathCore.dir/src/TKDTree.cxx.o' means the weak symbol cannot be overridden at runtime. This was likely caused by different translation units being compiled with different visibility settings. ; - [2022-04-08T12:10:43.036Z] ld: warning: direct access in function 'ROOT::GenerateInitInstanceLocal(TKDTree&lt;int, double&gt; const*)' from file 'math/mathcore/CMakeFiles/G__MathCore.dir/G__MathCore.cxx.o' to global weak symbol 'typeinfo for TKDTree&lt;int, double&gt;' from file 'math/mathcore/CMakeFiles/MathCore.dir/src/TKDTree.cxx.o' means the weak symbol cannot be overridden at runtime. This was likely caused by different translation units being compiled with different visibility settings. ; - [2022-04-08T12:10:43.036Z] ld: warning: direct access in function 'ROOT::GenerateInitInstanceLocal(TKDTree&lt;int, float&gt; const*)' from file 'math/mathcore/CMakeFiles/G__MathCore.dir/G__MathCore.cxx.o' to global weak symbol 'typeinfo for TKDTree&lt;int, float&gt;' from file 'math/mathcore/CMakeFiles/MathCore.dir/src/TKDTree.cxx.o' means the weak symbol cannot be overridden at runtime. This was likely caused by different translation units being compiled with different visibility settings. ; - [2022-04-08T12:10:43.036Z] ld: warning: direct access in function 'ROOT::GenerateInitInstanceLocal(T",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10358#issuecomment-1092810286:1934,access,access,1934,https://root.cern,https://github.com/root-project/root/pull/10358#issuecomment-1092810286,1,['access'],['access']
Security,[6.16] [cxxmodules][pch] Disable validation of transent files,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4552:33,validat,validation,33,https://root.cern,https://github.com/root-project/root/pull/4552,1,['validat'],['validation']
Security,[6.18] [cxxmodules][pch] Disable validation of transent files,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4550:33,validat,validation,33,https://root.cern,https://github.com/root-project/root/pull/4550,1,['validat'],['validation']
Security,"[CMake] Add build option ""asan"" for address sanitizer builds.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5066:44,sanitiz,sanitizer,44,https://root.cern,https://github.com/root-project/root/pull/5066,2,['sanitiz'],['sanitizer']
Security,"[CNT=EventData(xAOD::EventInfo_v1/EventInfo)][CLID=AE8BED6D-1D41-4CAF-994B-42613FC91A0A][TECH=00000205][OID=0000097700000026-0000097700000000]; 12:37:41 AthenaPoolConverter 0 0 ERROR poolToObject: Could not get object for Token = [DB=7316ACAF-6478-5C4A-B7E8-29498AC3D2AB][CNT=EventData(xAOD::EventInfo_v1/EventInfo)][CLID=AE8BED6D-1D41-4CAF-994B-42613FC91A0A][TECH=00000205][OID=0000097700000026-0000097700000000]; 12:37:41 Exception: POOL read failed. Token = [DB=7316ACAF-6478-5C4A-B7E8-29498AC3D2AB][CNT=EventData(xAOD::EventInfo_v1/EventInfo)][CLID=AE8BED6D-1D41-4CAF-994B-42613FC91A0A][TECH=00000205][OID=0000097700000026-0000097700000000] (no backtrace available).; 12:37:41 AthenaPoolConverter 0 0 ERROR createObj - caught exception: AthenaPoolCnvSvc::::ExcCaughtException: Caught exception in StatusCode T_AthenaPoolCustomCnvWithKey<TRANS, PERS>::PoolToDataObject(DataObject*&, const Token*, const std::string&) [with TRANS = xAOD::EventInfo_v1; PERS = xAOD::EventInfo_v1; std::string = std::__cxx11::basic_string<char>] while creating transient objectxAOD::EventInfo_v1/EventInfo: std::runtime_error: POOL read failed. Token = [DB=7316ACAF-6478-5C4A-B7E8-29498AC3D2AB][CNT=EventData(xAOD::EventInfo_v1/EventInfo)][CLID=AE8BED6D-1D41-4CAF-994B-42613FC91A0A][TECH=00000205][OID=0000097700000026-0000097700000000]; 12:37:41 AthenaPoolConverter 0 0 ERROR createObj failed to get DataObject, Token = [DB=7316ACAF-6478-5C4A-B7E8-29498AC3D2AB][CNT=EventData(xAOD::EventInfo_v1/EventInfo)][CLID=AE8BED6D-1D41-4CAF-994B-42613FC91A0A][TECH=00000205][OID=0000097700000026-0000097700000000]; 12:37:41 DataProxy 0 0 WARNING accessData: conversion failed for data object 45903698/EventInfo; 12:37:41 Returning NULL DataObject pointer; 12:37:41 AthenaHiveEventLoopMgr 0 0 ERROR Unable to retrieve Event root object; 12:37:41 AthenaHiveEventLoopMgr 0 0 ERROR declareEventRootAddress for context s: 0 e: 0 failed; 12:37:41 AthenaHiveEventLoopMgr 0 0 ERROR Terminating event processing loop due to errors; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/16826:2712,access,accessData,2712,https://root.cern,https://github.com/root-project/root/issues/16826,1,['access'],['accessData']
Security,[Core][Cont] TRefArray: force the loading of the referenced branch when accessing by index,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16246:72,access,accessing,72,https://root.cern,https://github.com/root-project/root/pull/16246,1,['access'],['accessing']
Security,"[CppInterOp](https://github.com/compiler-research/CppInterOp) exposes API from Clang and LLVM in a mostly backward compatibe way. The API support downstream tools that utilize interactive C++ by using the compiler as a service. Adopting more of CppInterOp in ROOT will help simplify the LLVM migration process and allow us to upstream more patches to either CppInterOp or LLVM. @aaronj0, you can take it from here.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16296:62,expose,exposes,62,https://root.cern,https://github.com/root-project/root/pull/16296,1,['expose'],['exposes']
Security,"[CppInterOp](https://github.com/compiler-research/CppInterOp) exposes API from Clang and LLVM in a mostly backward compatibe way. The API support downstream tools that utilize interactive C++ by using the compiler as a service. This PR is the first step in using pure clang based reflection API in meta, and part of eventually integrating the JITCall and DynamicLibraryManager infrastructure. Adopting more of CppInterOp in ROOT will help simplify the LLVM migration process and allow us to upstream more patches to either CppInterOp or LLVM.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16814:62,expose,exposes,62,https://root.cern,https://github.com/root-project/root/pull/16814,1,['expose'],['exposes']
Security,[Cppyy][13410] Fix accessibility of derived class,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13820:19,access,accessibility,19,https://root.cern,https://github.com/root-project/root/pull/13820,1,['access'],['accessibility']
Security,[DF] Breaking change: expose type of Defined column from RInterface,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3431:22,expose,expose,22,https://root.cern,https://github.com/root-project/root/pull/3431,1,['expose'],['expose']
Security,[DF] Fix out of bounds access in AddDSColumns,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6214:23,access,access,23,https://root.cern,https://github.com/root-project/root/pull/6214,1,['access'],['access']
Security,[Doc][Root-7664] Expose to doxygen core/dictgen,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3778:17,Expose,Expose,17,https://root.cern,https://github.com/root-project/root/pull/3778,1,['Expose'],['Expose']
Security,[Exp PyROOT] Expose cppyy functionality in ROOT module,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3370:13,Expose,Expose,13,https://root.cern,https://github.com/root-project/root/pull/3370,1,['Expose'],['Expose']
Security,[Exp PyROOT] Make Cppyy memory management symbols accessible in facade,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4109:50,access,accessible,50,https://root.cern,https://github.com/root-project/root/pull/4109,1,['access'],['accessible']
Security,[FreeBSD] Add access to some cpu information,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13129:14,access,access,14,https://root.cern,https://github.com/root-project/root/pull/13129,1,['access'],['access']
Security,[IO] Add test for hashing of streamer info record + misc fixes,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2188:18,hash,hashing,18,https://root.cern,https://github.com/root-project/root/pull/2188,1,['hash'],['hashing']
Security,[IO] Backport hashing of StreamerInfos before injecting them in the type system,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2179:14,hash,hashing,14,https://root.cern,https://github.com/root-project/root/pull/2179,2,"['hash', 'inject']","['hashing', 'injecting']"
Security,[IO] Do not include base classes of pair in CheckSum calculation.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4445:44,CheckSum,CheckSum,44,https://root.cern,https://github.com/root-project/root/pull/4445,1,['CheckSum'],['CheckSum']
Security,[JupyROOT] 6.22: Rescue lost JavaScript code injected by JupyROOT,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7215:45,inject,injected,45,https://root.cern,https://github.com/root-project/root/pull/7215,1,['inject'],['injected']
Security,[NFC][skip-ci] Fix some typos in sanitizer/README.md,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8591:33,sanitiz,sanitizer,33,https://root.cern,https://github.com/root-project/root/pull/8591,1,['sanitiz'],['sanitizer']
Security,[PyROOT] ROOT-9025: Fix memory leak when accessing an array branch,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1512:41,access,accessing,41,https://root.cern,https://github.com/root-project/root/pull/1512,1,['access'],['accessing']
Security,[PyROOT] Sanitize input arguments to AsNumpy,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6521:9,Sanitiz,Sanitize,9,https://root.cern,https://github.com/root-project/root/pull/6521,1,['Sanitiz'],['Sanitize']
Security,[PyROOT] Test that RVec is accessible from the ROOT namespace,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7687:27,access,accessible,27,https://root.cern,https://github.com/root-project/root/pull/7687,1,['access'],['accessible']
Security,[PyROOT][ROOT-10109] Inject missing overloads in TH2 and more,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4895:21,Inject,Inject,21,https://root.cern,https://github.com/root-project/root/pull/4895,1,['Inject'],['Inject']
Security,[PyROOT][ROOT-10830] Add hash pythonization for std::string,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7071:25,hash,hash,25,https://root.cern,https://github.com/root-project/root/pull/7071,1,['hash'],['hash']
Security,[PyROOT][ROOT-7983] Inject missing overloads for createHistogram,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4916:20,Inject,Inject,20,https://root.cern,https://github.com/root-project/root/pull/4916,1,['Inject'],['Inject']
Security,[RDataFrame] Expose more local df operations for distributed RDF,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/15039:13,Expose,Expose,13,https://root.cern,https://github.com/root-project/root/issues/15039,1,['Expose'],['Expose']
Security,[RF] Clean up RooDataHist & implement batch data access.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6718:49,access,access,49,https://root.cern,https://github.com/root-project/root/pull/6718,1,['access'],['access']
Security,[RF] Extra public accessor methods in root browser classes,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12064:18,access,accessor,18,https://root.cern,https://github.com/root-project/root/pull/12064,1,['access'],['accessor']
Security,[RF] Figure out how to handle RooArgList with duplicates and hash-assisted find,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9425:61,hash,hash-assisted,61,https://root.cern,https://github.com/root-project/root/issues/9425,1,['hash'],['hash-assisted']
Security,[RF] Fix recently-introduced hash table bug in `RooLinkedList`,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10158:29,hash,hash,29,https://root.cern,https://github.com/root-project/root/pull/10158,1,['hash'],['hash']
Security,[RF] New public accessor methods for various roofit data members,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12030:16,access,accessor,16,https://root.cern,https://github.com/root-project/root/pull/12030,1,['access'],['accessor']
Security,[RF] Prevent access into empty vector in ConfidenceBelt.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5197:13,access,access,13,https://root.cern,https://github.com/root-project/root/pull/5197,1,['access'],['access']
Security,[RF] Re-expose RooFormulaVar::formula().,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6250:8,expose,expose,8,https://root.cern,https://github.com/root-project/root/pull/6250,1,['expose'],['expose']
Security,[RF] Replace RooLinkedList by hash map for RooRealVar binnings.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5657:30,hash,hash,30,https://root.cern,https://github.com/root-project/root/pull/5657,1,['hash'],['hash']
Security,[RF] additional public methods for accessing/modifying product factors,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12048:35,access,accessing,35,https://root.cern,https://github.com/root-project/root/pull/12048,1,['access'],['accessing']
Security,[RF] prevent accessing empty vector (histOut),MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15902:13,access,accessing,13,https://root.cern,https://github.com/root-project/root/pull/15902,1,['access'],['accessing']
Security,[RF][HF] Do not access non-existent parameter when setting it to const in HistoToWorkspaceFactoryFast,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14249:16,access,access,16,https://root.cern,https://github.com/root-project/root/pull/14249,1,['access'],['access']
Security,"[ROOT-10713][ROOT-7986] Several objects were leaking when being read from a file. This is because ownership was unclear, and because reading apparently wasn't tested.; Here; - Four leaks are fixed; - A reading test is added (which is reading the object that revealed all the leaks. This tests both for leaks in address sanitizer builds, but also ensures that the updated streamers still work.); - A container overflow detected by address sanitizer is fixed.; - And the includes of RooRealVar are stripped down significantly. This is nice for RooFit, since almost everything includes RooRealVar.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5466:319,sanitiz,sanitizer,319,https://root.cern,https://github.com/root-project/root/pull/5466,2,['sanitiz'],['sanitizer']
Security,[RVec] Improve error message in case of out-of-bounds access,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11771:54,access,access,54,https://root.cern,https://github.com/root-project/root/pull/11771,1,['access'],['access']
Security,[RooFit] Fix ROOT-6378: accessing the binning of default ctr'd RooRealVar objects leads to crashes,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2575:24,access,accessing,24,https://root.cern,https://github.com/root-project/root/pull/2575,1,['access'],['accessing']
Security,[TDF] Avoid accessing zero-length TTreeReaderArray,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1938:12,access,accessing,12,https://root.cern,https://github.com/root-project/root/pull/1938,1,['access'],['accessing']
Security,[TDF] Early validation of column names,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/775:12,validat,validation,12,https://root.cern,https://github.com/root-project/root/pull/775,1,['validat'],['validation']
Security,[TDF] Fix ROOT-9210: validate columns before snapshotting,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1543:21,validat,validate,21,https://root.cern,https://github.com/root-project/root/pull/1543,1,['validat'],['validate']
Security,"[TMVA] Clean-up cross-validation, add error-handling and example",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/281:22,validat,validation,22,https://root.cern,https://github.com/root-project/root/pull/281,1,['validat'],['validation']
Security,[TMVA] Enable weights for validation events in PyKeras method,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/285:26,validat,validation,26,https://root.cern,https://github.com/root-project/root/pull/285,1,['validat'],['validation']
Security,[TMVA] root-8988 -- Validate batchsize before training,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2586:20,Validat,Validate,20,https://root.cern,https://github.com/root-project/root/pull/2586,1,['Validat'],['Validate']
Security,[TTreeProcessorMT] Access pointer after we check it's not null,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10214:19,Access,Access,19,https://root.cern,https://github.com/root-project/root/pull/10214,1,['Access'],['Access']
Security,[Tree] Bogus data silently read when trying to access an indexed friend TTree with an invalid index,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7713:47,access,access,47,https://root.cern,https://github.com/root-project/root/issues/7713,1,['access'],['access']
Security,[Tree] Expose tree utility functions for internal use,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7785:7,Expose,Expose,7,https://root.cern,https://github.com/root-project/root/pull/7785,1,['Expose'],['Expose']
Security,[WIP] Use a lock to protect access to collection from TROOT::GetListOfCleanups,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/67:28,access,access,28,https://root.cern,https://github.com/root-project/root/pull/67,1,['access'],['access']
Security,"[asan] Disable ""alloc-dealloc-mismatch"" in address sanitizer builds",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5660:51,sanitiz,sanitizer,51,https://root.cern,https://github.com/root-project/root/pull/5660,1,['sanitiz'],['sanitizer']
Security,"[ci] SonarCloud: run on GH infra, better for security. [skip-ci]",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13010:45,secur,security,45,https://root.cern,https://github.com/root-project/root/pull/13010,1,['secur'],['security']
Security,[clang-analyzer-core.NullDereference]; 1: Assuming 'delta' is >= 'min_dec' in /opt/root_src/gui/gui/src/TGPack.cxx:532; 2: Taking false branch in /opt/root_src/gui/gui/src/TGPack.cxx:532; 3: 'f0' initialized to a null pointer value in /opt/root_src/gui/gui/src/TGPack.cxx:537; 4: Calling 'TGPack::FindFrames' in /opt/root_src/gui/gui/src/TGPack.cxx:538; 5: Loop condition is false. Execution continues on line 226 in /opt/root_src/gui/gui/src/TGPack.cxx:217; 6: Returning without writing to 'f0' in /opt/root_src/gui/gui/src/TGPack.cxx:227; 7: Returning from 'TGPack::FindFrames' in /opt/root_src/gui/gui/src/TGPack.cxx:538; 8: Assuming field 'fDragOverflow' is >= 0 in /opt/root_src/gui/gui/src/TGPack.cxx:540; 9: Taking false branch in /opt/root_src/gui/gui/src/TGPack.cxx:540; 10: Assuming field 'fDragOverflow' is <= 0 in /opt/root_src/gui/gui/src/TGPack.cxx:550; 11: Taking false branch in /opt/root_src/gui/gui/src/TGPack.cxx:550; 12: Access to field 'fFrame' results in a dereference of a null pointer (loaded from variable 'f0') in /opt/root_src/gui/gui/src/TGPack.cxx:561; /opt/root_src/gui/gui/src/TGShapedFrame.cxx:53:12: warning: Called C++ object pointer is null [clang-analyzer-core.CallAndMessage]; 1: Assuming the condition is false in /opt/root_src/gui/gui/src/TGShapedFrame.cxx:37; 2: Taking false branch in /opt/root_src/gui/gui/src/TGShapedFrame.cxx:37; 3: Assuming 'pname' is null in /opt/root_src/gui/gui/src/TGShapedFrame.cxx:45; 4: Taking false branch in /opt/root_src/gui/gui/src/TGShapedFrame.cxx:45; 5: Value assigned to field 'fImage' in /opt/root_src/gui/gui/src/TGShapedFrame.cxx:49; 6: Assuming field 'fImage' is null in /opt/root_src/gui/gui/src/TGShapedFrame.cxx:50; 7: Left side of '||' is true in /opt/root_src/gui/gui/src/TGShapedFrame.cxx:50; 8: Called C++ object pointer is null in /opt/root_src/gui/gui/src/TGShapedFrame.cxx:53; /opt/root_src/gui/gui/src/TGSpeedo.cxx:462:7: warning: Variable 'i' with floating point type 'Float_t' should not be used as a loop c,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7533:49195,Access,Access,49195,https://root.cern,https://github.com/root-project/root/issues/7533,1,['Access'],['Access']
Security,[cling] Add interfaces that expose JIT,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16537:28,expose,expose,28,https://root.cern,https://github.com/root-project/root/pull/16537,1,['expose'],['expose']
Security,[cling] Do not inject libCling first (ROOT-10499):,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6108:15,inject,inject,15,https://root.cern,https://github.com/root-project/root/pull/6108,1,['inject'],['inject']
Security,[cling] Explicitly resolve symbols also from injected libs:,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6126:45,inject,injected,45,https://root.cern,https://github.com/root-project/root/pull/6126,1,['inject'],['injected']
Security,[cling] Expose ROOTLIBDIR to cling::DynamicLibraryManager:,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4710:8,Expose,Expose,8,https://root.cern,https://github.com/root-project/root/pull/4710,1,['Expose'],['Expose']
Security,[cling] Inject symbols from libc_nonshared.a,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13286:8,Inject,Inject,8,https://root.cern,https://github.com/root-project/root/pull/13286,1,['Inject'],['Inject']
Security,[cling] Only set result type if result type is known for auto-injection,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14451:62,inject,injection,62,https://root.cern,https://github.com/root-project/root/pull/14451,1,['inject'],['injection']
Security,[cling] Rewrite implementation of `InputValidator::validate()`; fixes ROOT-9202,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8771:51,validat,validate,51,https://root.cern,https://github.com/root-project/root/pull/8771,1,['validat'],['validate']
Security,[cling] Unify access to template_arguments,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13223:14,access,access,14,https://root.cern,https://github.com/root-project/root/pull/13223,1,['access'],['access']
Security,[cmake] Inject -isysroot ${CMAKE_OSX_SYSROOT} to unuran.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2699:8,Inject,Inject,8,https://root.cern,https://github.com/root-project/root/pull/2699,1,['Inject'],['Inject']
Security,[core/base] Null ptr access safety,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11443:21,access,access,21,https://root.cern,https://github.com/root-project/root/pull/11443,1,['access'],['access']
Security,"[core/winnt/src/TWinNTSystem.cxx:996]: (error) Invalid number of character '(' when these macros are defined: 'ROOTPREFIX'.; [html/src/TDocDirective.cxx:316]: (error) Invalid number of character '{' when these macros are defined: 'R__BEPAEPSTLICHERALSDERPAPST'.; [math/mathcore/src/Delaunay2D.cxx:30]: (error) Invalid number of character '{' when these macros are defined: 'HAS_CGAL'. [graf2d/qt/src/TGQt.cxx:2817]: (error) Array 'shape[15]' accessed at index 15, which is out of bounds.; [graf2d/qt/src/TGQt.cxx:2818]: (error) Array 'shape[15]' accessed at index 16, which is out of bounds.; [graf2d/qt/src/TGQt.cxx:2841]: (error) Array 'shape[15]' accessed at index 15, which is out of bounds.; [net/http/civetweb/handle_form.inl:627]: (style) Array index 'd' is used before limits check. [roofit/roostats/src/MetropolisHastings.cxx:153]: (style) Condition 'i<1000' is always true. [graf2d/qt/src/TQtClientGuard.cxx:289]: (warning) Assert statement modifies 'thisPix'. [roofit/roofitcore/src/BidirMMapPipe.cxx:906]: (style) Throwing a copy of the caught exception instead of rethrowing the original exception.; [roofit/roofitcore/src/BidirMMapPipe.cxx:972]: (style) Throwing a copy of the caught exception instead of rethrowing the original exception.; [roofit/roofitcore/src/BidirMMapPipe.cxx:1394]: (style) Throwing a copy of the caught exception instead of rethrowing the original exception.; [roofit/roofitcore/src/BidirMMapPipe.cxx:1429]: (style) Throwing a copy of the caught exception instead of rethrowing the original exception. [graf3d/eve/src/TEveElement.cxx:1745]: (style) Exception should be caught by reference.; [roofit/histfactory/src/hist2workspace.cxx:76]: (style) Exception should be caught by reference.; [roofit/histfactory/src/hist2workspace.cxx:97]: (style) Exception should be caught by reference.; [roofit/roofitcore/src/RooClassFactory.cxx:786]: (style) Exception should be caught by reference.; [roofit/roofitcore/src/RooFactoryWSTool.cxx:413]: (style) Exception should be",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1435:442,access,accessed,442,https://root.cern,https://github.com/root-project/root/pull/1435,3,['access'],['accessed']
Security,[core] Solve Streamer function warning in Doxygen and partly expose ClassDef documentation,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9629:61,expose,expose,61,https://root.cern,https://github.com/root-project/root/pull/9629,1,['expose'],['expose']
Security,[cxxmodules] Add -fno-validate-pch in invocation of Clang with modules,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2686:22,validat,validate-pch,22,https://root.cern,https://github.com/root-project/root/pull/2686,1,['validat'],['validate-pch']
Security,[cxxmodules] Disable module file validation.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1345:33,validat,validation,33,https://root.cern,https://github.com/root-project/root/pull/1345,1,['validat'],['validation']
Security,[cxxmodules] Do not emit relocation error when -fno-validate-pch is set,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2407:52,validat,validate-pch,52,https://root.cern,https://github.com/root-project/root/pull/2407,1,['validat'],['validate-pch']
Security,[cxxmodules] Fix bloom filter without .gnu.hash,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2203:43,hash,hash,43,https://root.cern,https://github.com/root-project/root/pull/2203,1,['hash'],['hash']
Security,[cxxmodules] Prevent RScanner from accessing hidden declarations.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/915:35,access,accessing,35,https://root.cern,https://github.com/root-project/root/pull/915,1,['access'],['accessing']
Security,[cxxmodules] Support both sysv and gnu hash for bloom filter,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2204:39,hash,hash,39,https://root.cern,https://github.com/root-project/root/pull/2204,1,['hash'],['hash']
Security,[cxxmodules][pch] Disable validation of transent files.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4480:26,validat,validation,26,https://root.cern,https://github.com/root-project/root/pull/4480,1,['validat'],['validation']
Security,[gui] Editable combo box nullptr access if SetEnabled is called,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14301:33,access,access,33,https://root.cern,https://github.com/root-project/root/pull/14301,1,['access'],['access']
Security,[hist] prevent nullptr access,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15094:23,access,access,23,https://root.cern,https://github.com/root-project/root/pull/15094,1,['access'],['access']
Security,[hist] prevent nullptr access with copy from default constructor,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16773:23,access,access,23,https://root.cern,https://github.com/root-project/root/pull/16773,1,['access'],['access']
Security,[http] Let configure `Access-Control-Allow-Credentials` header,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12866:22,Access,Access-Control-Allow-Credentials,22,https://root.cern,https://github.com/root-project/root/pull/12866,1,['Access'],['Access-Control-Allow-Credentials']
Security,[io] Prevent infinite loops and add more security for overflows,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14820:41,secur,security,41,https://root.cern,https://github.com/root-project/root/pull/14820,1,['secur'],['security']
Security,[io] Protect out-of-bounds access in R__WriteDestructorBody:,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5642:27,access,access,27,https://root.cern,https://github.com/root-project/root/pull/5642,1,['access'],['access']
Security,[io] Validate ZSTD target/source sizes and compr level,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15038:5,Validat,Validate,5,https://root.cern,https://github.com/root-project/root/pull/15038,1,['Validat'],['Validate']
Security,[io] prevent nullptr access if oldclass not found,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15876:21,access,access,21,https://root.cern,https://github.com/root-project/root/pull/15876,1,['access'],['access']
Security,[math] Avoid out-of-bounds array access with `vc` in FitUtil.h,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13772:33,access,access,33,https://root.cern,https://github.com/root-project/root/pull/13772,1,['access'],['access']
Security,[ntuple] Add page checksum creation and verification,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15921:18,checksum,checksum,18,https://root.cern,https://github.com/root-project/root/pull/15921,1,['checksum'],['checksum']
Security,[ntuple] Add page checksums,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15789:18,checksum,checksums,18,https://root.cern,https://github.com/root-project/root/pull/15789,1,['checksum'],['checksums']
Security,[ntuple] Add static method to access on-disk size of column elements,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6833:30,access,access,30,https://root.cern,https://github.com/root-project/root/pull/6833,1,['access'],['access']
Security,[ntuple] Consider making `REntry::AddValue()` publicly accessible,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11673:55,access,accessible,55,https://root.cern,https://github.com/root-project/root/issues/11673,1,['access'],['accessible']
Security,[ntuple] Enable subfield access in `REntry`,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16693:25,access,access,25,https://root.cern,https://github.com/root-project/root/pull/16693,1,['access'],['access']
Security,[ntuple] Expose fixed-size arrays as RVecs in RDF datasource,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10664:9,Expose,Expose,9,https://root.cern,https://github.com/root-project/root/issues/10664,1,['Expose'],['Expose']
Security,[ntuple] Make RNTupleGlobalRange/RNTupleClusterRange constexpr random access ranges,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12140:70,access,access,70,https://root.cern,https://github.com/root-project/root/pull/12140,1,['access'],['access']
Security,[ntuple] Only give const ref access to fields in RNTupleModel,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14354:29,access,access,29,https://root.cern,https://github.com/root-project/root/pull/14354,1,['access'],['access']
Security,[ntuple] Protect descriptor access in page source by r/w lock,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10185:28,access,access,28,https://root.cern,https://github.com/root-project/root/pull/10185,1,['access'],['access']
Security,[ntuple] Re-expose field type of RNTupleView,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12142:12,expose,expose,12,https://root.cern,https://github.com/root-project/root/pull/12142,1,['expose'],['expose']
Security,[ntuple] Restrict public access to RValues in REntry,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14353:25,access,access,25,https://root.cern,https://github.com/root-project/root/pull/14353,1,['access'],['access']
Security,[ntuple] Store streamer checksum if available,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16060:24,checksum,checksum,24,https://root.cern,https://github.com/root-project/root/pull/16060,1,['checksum'],['checksum']
Security,[ntuple] add a test for accessing a RNTupleView out of bounds,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16789:24,access,accessing,24,https://root.cern,https://github.com/root-project/root/pull/16789,1,['access'],['accessing']
Security,[ntuple] check field range validity only on access,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16832:44,access,access,44,https://root.cern,https://github.com/root-project/root/pull/16832,1,['access'],['access']
Security,"[ntuple] expose RNTuple(Un)ownedView instead of RNTupleView<T, bool>",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16363:9,expose,expose,9,https://root.cern,https://github.com/root-project/root/pull/16363,1,['expose'],['expose']
Security,[ntuple] remove checksum field from anchor,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15553:16,checksum,checksum,16,https://root.cern,https://github.com/root-project/root/pull/15553,1,['checksum'],['checksum']
Security,[rbrowser] let access in-memory objects from TDirectory,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10523:15,access,access,15,https://root.cern,https://github.com/root-project/root/pull/10523,1,['access'],['access']
Security,"[skip-ci]. # This Pull request:. Makes the CI load OpenStack object-store credentials from files on runners instead of using GitHub secrets. When `pull_request` is a workflow trigger, the job can't access secrets, which means that the S3 secret token is unavailable. Adding S3 credentials to the runners themselves solves this issue. The OpenStack credentials are defined [here](https://gitlab.cern.ch/ai/it-puppet-hostgroup-lcgapp/-/blob/rootci_test/code/manifests/build/root.pp#L43) (using [teigi](https://configdocs.web.cern.ch/secrets/adding.html)). If a malicious actor makes a PR with a job to print the credentials, or to upload a malicious artifact, it would still have to be approved by a maintainer. A safer alternative is not allowing pull request jobs to upload artifacts at all but then we can't run tests in a separate job. It would also cause builds to take more time on average because the object storage will be less populated. ## Checklist:. - [x] tested changes locally",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12201:198,access,access,198,https://root.cern,https://github.com/root-project/root/pull/12201,1,['access'],['access']
Security,[textinput] kCmdUndo: prevent accessing empty vector,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10181:30,access,accessing,30,https://root.cern,https://github.com/root-project/root/pull/10181,1,['access'],['accessing']
Security,"[the spec](https://github.com/root-project/root/blob/master/tree/ntuple/v7/doc/specifications.md) only says:; > CRC32: Checksum of the envelope and the payload. which has multiple possible interpretation, the most straightforward one being crc32 is calculated by using the bytes of the entire header?; https://github.com/root-project/root/blob/0bb465e60960efea6ddfe1d16b98767104df273e/tree/ntuple/v7/src/RNTupleSerialize.cxx#L261-L270. maybe we can document how the crc32 is calculated in this 2-step (?) process inside the spec? cc @jpivarski . ref: https://github.com/scikit-hep/uproot5/pull/705",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11318:119,Checksum,Checksum,119,https://root.cern,https://github.com/root-project/root/issues/11318,1,['Checksum'],['Checksum']
Security,[tmva] fix nullptr access in public methods of ftraininfo,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14859:19,access,access,19,https://root.cern,https://github.com/root-project/root/pull/14859,1,['access'],['access']
Security,[tree] Prevent garbage access and buffer overflow,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15280:23,access,access,23,https://root.cern,https://github.com/root-project/root/pull/15280,1,['access'],['access']
Security,[tree] prevent crash due to null access in clones,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15335:33,access,access,33,https://root.cern,https://github.com/root-project/root/pull/15335,1,['access'],['access']
Security,[tree] prevent nullptr access in ttreereader,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15929:23,access,access,23,https://root.cern,https://github.com/root-project/root/pull/15929,1,['access'],['access']
Security,[tree] raise error instead of crash when trying to access null GetTree,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15283:51,access,access,51,https://root.cern,https://github.com/root-project/root/pull/15283,1,['access'],['access']
Security,"[v6-26] Revert ""[cmake] Update xrootd hash after a new version of the…",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11165:38,hash,hash,38,https://root.cern,https://github.com/root-project/root/pull/11165,1,['hash'],['hash']
Security,[v6-30][gui] Editable combo box nullptr access if SetEnabled is called,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14397:40,access,access,40,https://root.cern,https://github.com/root-project/root/pull/14397,1,['access'],['access']
Security,[v632][BP] [hist] prevent nullptr access,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15133:34,access,access,34,https://root.cern,https://github.com/root-project/root/pull/15133,1,['access'],['access']
Security,[v634][ntuple] Check field range validity only on access,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16833:50,access,access,50,https://root.cern,https://github.com/root-project/root/pull/16833,1,['access'],['access']
Security,"[webgui] change loopback via API, do not expose server dirs [6.30]",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14189:41,expose,expose,41,https://root.cern,https://github.com/root-project/root/pull/14189,1,['expose'],['expose']
Security,"[wincxxmodules] Simplify includes, Expose M_PI for Windows",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6309:35,Expose,Expose,35,https://root.cern,https://github.com/root-project/root/pull/6309,1,['Expose'],['Expose']
Security,"\Analysis\obj.clangAnalysis.vcxproj] ; - [2022-02-11T14:33:56.946Z] C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\include\llvm/ADT/SmallVector.h(397,1): fatal error C1060: compiler is out of heap space (compiling source file C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\lib\CodeGen\SelectionDAG\ScheduleDAGVLIW.cpp) [C:\build\workspace\root-pullrequests-build\build\interpreter\llvm\src\lib\CodeGen\SelectionDAG\LLVMSelectionDAG.vcxproj] ; - [2022-02-11T14:33:56.947Z] C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\utility(135,35): fatal error C1060: compiler is out of heap space (compiling source file C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\tools\clang\lib\AST\Comment.cpp) [C:\build\workspace\root-pullrequests-build\build\interpreter\llvm\src\tools\clang\lib\AST\obj.clangAST.vcxproj] ; - [2022-02-11T14:33:56.947Z] C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\tools\clang\include\clang/Basic/Sanitizers.def(44,1): fatal error C1060: compiler is out of heap space (compiling source file C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\tools\clang\lib\Driver\ToolChains\CrossWindows.cpp) [C:\build\workspace\root-pullrequests-build\build\interpreter\llvm\src\tools\clang\lib\Driver\obj.clangDriver.vcxproj] ; - [2022-02-11T14:33:56.947Z] C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\include\llvm/IR/Metadata.h(134,56): fatal error C1060: compiler is out of heap space (compiling source file C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\lib\Transforms\IPO\FunctionImport.cpp) [C:\build\workspace\root-pullrequests-build\build\interpreter\llvm\src\lib\Transforms\IPO\LLVMipo.vcxproj] ; - [2022-02-11T14:33:56.947Z] C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(687,5): error MSB8071: Cannot parse tool output ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9855#issuecomment-1036274599:1680,Sanitiz,Sanitizers,1680,https://root.cern,https://github.com/root-project/root/pull/9855#issuecomment-1036274599,1,['Sanitiz'],['Sanitizers']
Security,"\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:; Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\; Users\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\ClangOptionDocEmitter.cpp) [C:\User; s\bellenot\build\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.clang-tblgen.vcxproj]; C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:; Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\; Users\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\ClangDataCollectorsEmitter.cpp) [C:; \Users\bellenot\build\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.clang-tblgen.vcxproj]; C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:; Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\; Users\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\ClangCommentHTMLNamedCharacterRefer; enceEmitter.cpp) [C:\Users\bellenot\build\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.c; lang-tblgen.vcxproj]; C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:; Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\; Users\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\TableGen.cpp) [C:\Users\bellenot\bu; ild\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.clang-tblgen.vcxproj]; C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:; Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\; Users\belle",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9445#issuecomment-1008835389:4152,sanitiz,sanitizer,4152,https://root.cern,https://github.com/root-project/root/issues/9445#issuecomment-1008835389,1,['sanitiz'],['sanitizer']
Security,"\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:; Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\; Users\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\ClangSACheckersEmitter.cpp) [C:\Use; rs\bellenot\build\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.clang-tblgen.vcxproj]; C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:; Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\; Users\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\ClangCommentCommandInfoEmitter.cpp); [C:\Users\bellenot\build\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.clang-tblgen.vcxp; roj]; C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:; Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\; Users\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\NeonEmitter.cpp) [C:\Users\bellenot; \build\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.clang-tblgen.vcxproj]; C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:; Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\; Users\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\ClangDiagnosticsEmitter.cpp) [C:\Us; ers\bellenot\build\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.clang-tblgen.vcxproj]; C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:; Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\; Users\bellenot\git\master\interpr",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9445#issuecomment-1008835389:1961,sanitiz,sanitizer,1961,https://root.cern,https://github.com/root-project/root/issues/9445#issuecomment-1008835389,1,['sanitiz'],['sanitizer']
Security,"\workspace\root-pullrequests-build\root\core\metacling\src\TCling.cxx(1319,1): error C2267: 'RegisterPreIncludedHeaders': static functions with block scope are illegal [C:\build\workspace\root-pullrequests-build\build\core\metacling\src\MetaCling.vcxproj] ; - [2020-06-14T18:21:00.898Z] C:\build\workspace\root-pullrequests-build\root\core\metacling\src\TCling.cxx(1319,1): error C2601: 'RegisterPreIncludedHeaders': local function definitions are illegal [C:\build\workspace\root-pullrequests-build\build\core\metacling\src\MetaCling.vcxproj] ; - [2020-06-14T18:21:00.898Z] C:\build\workspace\root-pullrequests-build\root\core\metacling\src\TCling.cxx(1354,16): error C2143: syntax error: missing ')' before 'const' [C:\build\workspace\root-pullrequests-build\build\core\metacling\src\MetaCling.vcxproj] ; - [2020-06-14T18:21:00.898Z] C:\build\workspace\root-pullrequests-build\root\core\metacling\src\TCling.cxx(1354,16): error C2248: 'TCling::TCling': cannot access private member declared in class 'TCling' [C:\build\workspace\root-pullrequests-build\build\core\metacling\src\MetaCling.vcxproj] ; - [2020-06-14T18:21:00.898Z] C:\build\workspace\root-pullrequests-build\root\core\metacling\src\TCling.cxx(1354,16): error C2143: syntax error: missing ';' before 'const' [C:\build\workspace\root-pullrequests-build\build\core\metacling\src\MetaCling.vcxproj] ; - [2020-06-14T18:21:00.898Z] C:\build\workspace\root-pullrequests-build\root\core\metacling\src\TCling.cxx(1354,45): error C2062: type 'char' unexpected [C:\build\workspace\root-pullrequests-build\build\core\metacling\src\MetaCling.vcxproj] ; - [2020-06-14T18:21:00.898Z] C:\build\workspace\root-pullrequests-build\root\core\metacling\src\TCling.cxx(1354,77): error C2059: syntax error: ')' [C:\build\workspace\root-pullrequests-build\build\core\metacling\src\MetaCling.vcxproj] ; - [2020-06-14T18:21:00.898Z] C:\build\workspace\root-pullrequests-build\root\core\metacling\src\TCling.cxx(1359,1): error C2143: syntax error: missing ';' be",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5094#issuecomment-643804852:1373,access,access,1373,https://root.cern,https://github.com/root-project/root/pull/5094#issuecomment-643804852,1,['access'],['access']
Security,"] /Users/sftnight/build/jenkins/workspace/root-pullrequests-build/root/core/base/src/TUri.cxx:827:10: warning: 'sprintf' is deprecated: This function is provided for compatibility reasons only. Due to security concerns inherent in the design of sprintf(3), it is highly recommended that you use snprintf(3) instead. [-Wdeprecated-declarations] ; - [2023-03-03T11:45:22.953Z] /Users/sftnight/build/jenkins/workspace/root-pullrequests-build/root/core/base/src/TUrl.cxx:199:10: warning: 'sprintf' is deprecated: This function is provided for compatibility reasons only. Due to security concerns inherent in the design of sprintf(3), it is highly recommended that you use snprintf(3) instead. [-Wdeprecated-declarations] ; - [2023-03-03T11:45:22.953Z] /Users/sftnight/build/jenkins/workspace/root-pullrequests-build/root/core/base/src/TUrl.cxx:449:10: warning: 'sprintf' is deprecated: This function is provided for compatibility reasons only. Due to security concerns inherent in the design of sprintf(3), it is highly recommended that you use snprintf(3) instead. [-Wdeprecated-declarations] ; - [2023-03-03T11:45:52.129Z] /Users/sftnight/build/jenkins/workspace/root-pullrequests-build/root/core/clib/src/mmemalign.c:37:13: warning: performing pointer subtraction with a null pointer has undefined behavior [-Wnull-pointer-subtraction] ; - [2023-03-03T11:45:52.386Z] /Users/sftnight/build/jenkins/workspace/root-pullrequests-build/root/core/clib/src/mfree.c:194:13: warning: performing pointer subtraction with a null pointer has undefined behavior [-Wnull-pointer-subtraction] . And 71 more. ### Failing tests:; - [projectroot.roottest.root.meta.evolution.roottest_root_meta_evolution_execBaseClass_v1](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/169638/testReport/projectroot.roottest.root.meta/evolution/roottest_root_meta_evolution_execBaseClass_v1/); - [projectroot.roottest.root.meta.evolution.roottest_root_meta_evolution_execMixedBaseClass_v1](https://lcgapp-servi",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12417#issuecomment-1453453200:2998,secur,security,2998,https://root.cern,https://github.com/root-project/root/pull/12417#issuecomment-1453453200,1,['secur'],['security']
Security,"] /Users/sftnight/build/jenkins/workspace/root-pullrequests-build/root/core/base/src/TUri.cxx:827:10: warning: 'sprintf' is deprecated: This function is provided for compatibility reasons only. Due to security concerns inherent in the design of sprintf(3), it is highly recommended that you use snprintf(3) instead. [-Wdeprecated-declarations] ; - [2023-04-03T17:37:23.931Z] /Users/sftnight/build/jenkins/workspace/root-pullrequests-build/root/core/base/src/TUrl.cxx:199:10: warning: 'sprintf' is deprecated: This function is provided for compatibility reasons only. Due to security concerns inherent in the design of sprintf(3), it is highly recommended that you use snprintf(3) instead. [-Wdeprecated-declarations] ; - [2023-04-03T17:37:23.932Z] /Users/sftnight/build/jenkins/workspace/root-pullrequests-build/root/core/base/src/TUrl.cxx:449:10: warning: 'sprintf' is deprecated: This function is provided for compatibility reasons only. Due to security concerns inherent in the design of sprintf(3), it is highly recommended that you use snprintf(3) instead. [-Wdeprecated-declarations] ; - [2023-04-03T17:37:24.197Z] /Users/sftnight/build/jenkins/workspace/root-pullrequests-build/root/core/clib/src/mmalloc.c:51:9: warning: performing pointer subtraction with a null pointer has undefined behavior [-Wnull-pointer-subtraction] ; - [2023-04-03T17:37:24.459Z] /Users/sftnight/build/jenkins/workspace/root-pullrequests-build/root/core/clib/src/mmalloc.c:200:13: warning: performing pointer subtraction with a null pointer has undefined behavior [-Wnull-pointer-subtraction] . And 71 more. ### Failing tests:; - [projectroot.roottest.root.meta.evolution.roottest_root_meta_evolution_execBaseClass_v1](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/172011/testReport/projectroot.roottest.root.meta/evolution/roottest_root_meta_evolution_execBaseClass_v1/); - [projectroot.roottest.root.meta.evolution.roottest_root_meta_evolution_execMixedBaseClass_v1](https://lcgapp-servic",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12604#issuecomment-1494767891:2998,secur,security,2998,https://root.cern,https://github.com/root-project/root/pull/12604#issuecomment-1494767891,1,['secur'],['security']
Security,"] /Users/sftnight/build/jenkins/workspace/root-pullrequests-build/root/core/base/src/TUri.cxx:827:10: warning: 'sprintf' is deprecated: This function is provided for compatibility reasons only. Due to security concerns inherent in the design of sprintf(3), it is highly recommended that you use snprintf(3) instead. [-Wdeprecated-declarations] ; - [2023-04-13T21:36:04.135Z] /Users/sftnight/build/jenkins/workspace/root-pullrequests-build/root/core/base/src/TUrl.cxx:199:10: warning: 'sprintf' is deprecated: This function is provided for compatibility reasons only. Due to security concerns inherent in the design of sprintf(3), it is highly recommended that you use snprintf(3) instead. [-Wdeprecated-declarations] ; - [2023-04-13T21:36:04.135Z] /Users/sftnight/build/jenkins/workspace/root-pullrequests-build/root/core/base/src/TUrl.cxx:449:10: warning: 'sprintf' is deprecated: This function is provided for compatibility reasons only. Due to security concerns inherent in the design of sprintf(3), it is highly recommended that you use snprintf(3) instead. [-Wdeprecated-declarations] ; - [2023-04-13T21:36:10.116Z] /Users/sftnight/build/jenkins/workspace/root-pullrequests-build/root/core/base/src/TDirectory.cxx:1292:7: warning: 'sprintf' is deprecated: This function is provided for compatibility reasons only. Due to security concerns inherent in the design of sprintf(3), it is highly recommended that you use snprintf(3) instead. [-Wdeprecated-declarations] ; - [2023-04-13T21:36:27.731Z] /Users/sftnight/build/jenkins/workspace/root-pullrequests-build/root/core/clib/src/mmemalign.c:37:13: warning: performing pointer subtraction with a null pointer has undefined behavior [-Wnull-pointer-subtraction] ; - [2023-04-13T21:36:28.000Z] /Users/sftnight/build/jenkins/workspace/root-pullrequests-build/root/core/clib/src/mfree.c:194:13: warning: performing pointer subtraction with a null pointer has undefined behavior [-Wnull-pointer-subtraction] ; - [2023-04-13T21:36:28.000Z] /Users/sftnig",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12604#issuecomment-1507678411:1989,secur,security,1989,https://root.cern,https://github.com/root-project/root/pull/12604#issuecomment-1507678411,1,['secur'],['security']
Security,"] /Users/sftnight/build/jenkins/workspace/root-pullrequests-build/root/core/base/src/TUri.cxx:827:10: warning: 'sprintf' is deprecated: This function is provided for compatibility reasons only. Due to security concerns inherent in the design of sprintf(3), it is highly recommended that you use snprintf(3) instead. [-Wdeprecated-declarations] ; - [2023-04-21T21:35:13.275Z] /Users/sftnight/build/jenkins/workspace/root-pullrequests-build/root/core/base/src/TUrl.cxx:199:10: warning: 'sprintf' is deprecated: This function is provided for compatibility reasons only. Due to security concerns inherent in the design of sprintf(3), it is highly recommended that you use snprintf(3) instead. [-Wdeprecated-declarations] ; - [2023-04-21T21:35:13.275Z] /Users/sftnight/build/jenkins/workspace/root-pullrequests-build/root/core/base/src/TUrl.cxx:449:10: warning: 'sprintf' is deprecated: This function is provided for compatibility reasons only. Due to security concerns inherent in the design of sprintf(3), it is highly recommended that you use snprintf(3) instead. [-Wdeprecated-declarations] ; - [2023-04-21T21:35:17.999Z] /Users/sftnight/build/jenkins/workspace/root-pullrequests-build/root/core/clib/src/mmemalign.c:37:13: warning: performing pointer subtraction with a null pointer has undefined behavior [-Wnull-pointer-subtraction] ; - [2023-04-21T21:35:18.256Z] /Users/sftnight/build/jenkins/workspace/root-pullrequests-build/root/core/clib/src/mfree.c:194:13: warning: performing pointer subtraction with a null pointer has undefined behavior [-Wnull-pointer-subtraction] . And 71 more. ### Failing tests:; - [projectroot.roottest.root.meta.evolution.roottest_root_meta_evolution_execBaseClass_v1](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/172992/testReport/projectroot.roottest.root.meta/evolution/roottest_root_meta_evolution_execBaseClass_v1/); - [projectroot.roottest.root.meta.evolution.roottest_root_meta_evolution_execMixedBaseClass_v1](https://lcgapp-servi",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12604#issuecomment-1518381673:2998,secur,security,2998,https://root.cern,https://github.com/root-project/root/pull/12604#issuecomment-1518381673,1,['secur'],['security']
Security,"] /Users/sftnight/build/jenkins/workspace/root-pullrequests-build/root/core/base/src/TUri.cxx:827:10: warning: 'sprintf' is deprecated: This function is provided for compatibility reasons only. Due to security concerns inherent in the design of sprintf(3), it is highly recommended that you use snprintf(3) instead. [-Wdeprecated-declarations] ; - [2023-05-04T16:30:43.993Z] /Users/sftnight/build/jenkins/workspace/root-pullrequests-build/root/core/base/src/TUrl.cxx:199:10: warning: 'sprintf' is deprecated: This function is provided for compatibility reasons only. Due to security concerns inherent in the design of sprintf(3), it is highly recommended that you use snprintf(3) instead. [-Wdeprecated-declarations] ; - [2023-05-04T16:30:43.993Z] /Users/sftnight/build/jenkins/workspace/root-pullrequests-build/root/core/base/src/TUrl.cxx:449:10: warning: 'sprintf' is deprecated: This function is provided for compatibility reasons only. Due to security concerns inherent in the design of sprintf(3), it is highly recommended that you use snprintf(3) instead. [-Wdeprecated-declarations] . And 71 more. ### Failing tests:; - [projectroot.roottest.cling.const.roottest_cling_const_run2](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/173912/testReport/projectroot.roottest.cling/const/roottest_cling_const_run2/); - [projectroot.roottest.cling.dict.roottest_cling_dict_rundefaultargs_compiled](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/173912/testReport/projectroot.roottest.cling/dict/roottest_cling_dict_rundefaultargs_compiled/); - [projectroot.roottest.cling.dict.roottest_cling_dict_exectemplatetemplateTest](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/173912/testReport/projectroot.roottest.cling/dict/roottest_cling_dict_exectemplatetemplateTest/); - [projectroot.roottest.cling.dict.roottest_cling_dict_runalgebra](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/173912/testReport",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11263#issuecomment-1535115664:3341,secur,security,3341,https://root.cern,https://github.com/root-project/root/pull/11263#issuecomment-1535115664,1,['secur'],['security']
Security,"] /Users/sftnight/build/jenkins/workspace/root-pullrequests-build/root/core/base/src/TUri.cxx:827:10: warning: 'sprintf' is deprecated: This function is provided for compatibility reasons only. Due to security concerns inherent in the design of sprintf(3), it is highly recommended that you use snprintf(3) instead. [-Wdeprecated-declarations] ; - [2023-05-07T13:50:23.902Z] /Users/sftnight/build/jenkins/workspace/root-pullrequests-build/root/core/base/src/TUrl.cxx:199:10: warning: 'sprintf' is deprecated: This function is provided for compatibility reasons only. Due to security concerns inherent in the design of sprintf(3), it is highly recommended that you use snprintf(3) instead. [-Wdeprecated-declarations] ; - [2023-05-07T13:50:23.902Z] /Users/sftnight/build/jenkins/workspace/root-pullrequests-build/root/core/base/src/TUrl.cxx:449:10: warning: 'sprintf' is deprecated: This function is provided for compatibility reasons only. Due to security concerns inherent in the design of sprintf(3), it is highly recommended that you use snprintf(3) instead. [-Wdeprecated-declarations] . And 71 more. ### Failing tests:; - [projectroot.roottest.cling.const.roottest_cling_const_run2](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/174115/testReport/projectroot.roottest.cling/const/roottest_cling_const_run2/); - [projectroot.roottest.cling.dict.roottest_cling_dict_rundefaultargs_compiled](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/174115/testReport/projectroot.roottest.cling/dict/roottest_cling_dict_rundefaultargs_compiled/); - [projectroot.roottest.cling.dict.roottest_cling_dict_exectemplatetemplateTest](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/174115/testReport/projectroot.roottest.cling/dict/roottest_cling_dict_exectemplatetemplateTest/); - [projectroot.roottest.cling.dict.roottest_cling_dict_runalgebra](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/174115/testReport",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12780#issuecomment-1537456868:3341,secur,security,3341,https://root.cern,https://github.com/root-project/root/pull/12780#issuecomment-1537456868,1,['secur'],['security']
Security,"](https://root.cern/doc/master/HistoToWorkspaceFactoryFast_8cxx_source.html#l02109); the Asimov workspace is created before the ParamSettings are applied. This commit is fixing this problem. The problem can be reproduced with the following script/instructions:. ```C++; using namespace RooStats;; using namespace HistFactory;. // Step 1: initialize the XML files; //; // Run prepareHistFactory before in this directory; //; // Modify the GaussExample in the generated example to be:; //; // <Measurement Name=""GaussExample"" Lumi=""1."" LumiRelErr=""0.1"" >; // <POI>SigXsecOverSM</POI>; // <ParamSetting Const=""True"">Lumi</ParamSetting>; // <ParamSetting Val=""20"" Const=""True"">alpha_syst1</ParamSetting>; // </Measurement>. // Step 2: Create the RooWorkspace; //. ConfigParser parser{};; auto measurements = parser.GetMeasurementsFromXML(""config/example.xml"");. // Get the first example, the GaussExample; Measurement& meas = measurements.front();. // Collect the histograms from their files,; meas.CollectHistograms();. // Now, do the measurement; std::unique_ptr<RooWorkspace> ws{MakeModelAndMeasurementFast( meas )};. // Step 3: Validation plot to show mismatch between model and Asimov data; //. auto x = ws->var(""obs_x_channel1"");; auto data = ws->data(""asimovData"");; auto pdf = ws->pdf(""model_channel1"");. // Draw the asimov data together with the model and check if they match; TCanvas c1(""c1"");; RooPlot *xframe = x->frame();; data->plotOn(xframe);; pdf->plotOn(xframe);. xframe->Draw();. c1.SaveAs(""plot.png"");. // Note that the errors will be plotted wrongly if the Asimov data is; // correct. That's because if the changed alpha_syst1 value is considered; // correctly, the asimov dataset has non-integer weights. In this case, the; // plotting uses SumW2 errors instead of Poisson erros, and the weights; // squared is not filled correctly in the Asimov data that is created by; // AsymptoticCalculator::GenerateAsimovData(). But this is a completely; // different issue.; ```; Closes #8186.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10761:1435,Validat,Validation,1435,https://root.cern,https://github.com/root-project/root/pull/10761,1,['Validat'],['Validation']
Security,"]; C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:; Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\; Users\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\ClangASTNodesEmitter.cpp) [C:\Users; \bellenot\build\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.clang-tblgen.vcxproj]; C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:; Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\; Users\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\ClangSACheckersEmitter.cpp) [C:\Use; rs\bellenot\build\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.clang-tblgen.vcxproj]; C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:; Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\; Users\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\ClangCommentCommandInfoEmitter.cpp); [C:\Users\bellenot\build\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.clang-tblgen.vcxp; roj]; C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:; Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\; Users\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\NeonEmitter.cpp) [C:\Users\bellenot; \build\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.clang-tblgen.vcxproj]; C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:; Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\; Users\bellenot\git\master",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9445#issuecomment-1008835389:1513,sanitiz,sanitizer,1513,https://root.cern,https://github.com/root-project/root/issues/9445#issuecomment-1008835389,1,['sanitiz'],['sanitizer']
Security,"]; C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:; Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\; Users\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\ClangCommentCommandInfoEmitter.cpp); [C:\Users\bellenot\build\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.clang-tblgen.vcxp; roj]; C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:; Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\; Users\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\NeonEmitter.cpp) [C:\Users\bellenot; \build\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.clang-tblgen.vcxproj]; C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:; Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\; Users\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\ClangDiagnosticsEmitter.cpp) [C:\Us; ers\bellenot\build\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.clang-tblgen.vcxproj]; C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:; Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\; Users\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\ClangOpenCLBuiltinEmitter.cpp) [C:\; Users\bellenot\build\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.clang-tblgen.vcxproj]; C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:; Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\; Users\bellenot\git\",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9445#issuecomment-1008835389:2389,sanitiz,sanitizer,2389,https://root.cern,https://github.com/root-project/root/issues/9445#issuecomment-1008835389,1,['sanitiz'],['sanitizer']
Security,"_3_ROOT6_X_2021-01-24-2300/external/slc7_amd64_gcc900/lib/libCling.so; #16 0x00002b8fcf5e5fa1 in clang::Parser::ParseDeclOrFunctionDefInternal(clang::Parser::ParsedAttributesWithRange&, clang::ParsingDeclSpec&, clang::AccessSpecifier) () from /cvmfs/cms-ib.cern.ch/week1/slc7_amd64_gcc900/cms/cmssw-patch/CMSSW_11_3_ROOT6_X_2021-01-24-2300/external/slc7_amd64_gcc900/lib/libCling.so; #17 0x00002b8fcf5ec950 in clang::Parser::ParseExternalDeclaration(clang::Parser::ParsedAttributesWithRange&, clang::ParsingDeclSpec*) () from /cvmfs/cms-ib.cern.ch/week1/slc7_amd64_gcc900/cms/cmssw-patch/CMSSW_11_3_ROOT6_X_2021-01-24-2300/external/slc7_amd64_gcc900/lib/libCling.so; #18 0x00002b8fcf57b004 in clang::Parser::ParseLinkage(clang::ParsingDeclSpec&, unsigned int) () from /cvmfs/cms-ib.cern.ch/week1/slc7_amd64_gcc900/cms/cmssw-patch/CMSSW_11_3_ROOT6_X_2021-01-24-2300/external/slc7_amd64_gcc900/lib/libCling.so; #19 0x00002b8fcf5e611e in clang::Parser::ParseDeclOrFunctionDefInternal(clang::Parser::ParsedAttributesWithRange&, clang::ParsingDeclSpec&, clang::AccessSpecifier) () from /cvmfs/cms-ib.cern.ch/week1/slc7_amd64_gcc900/cms/cmssw-patch/CMSSW_11_3_ROOT6_X_2021-01-24-2300/external/slc7_amd64_gcc900/lib/libCling.so; #20 0x00002b8fcf5e64b1 in clang::Parser::ParseDeclarationOrFunctionDefinition(clang::Parser::ParsedAttributesWithRange&, clang::ParsingDeclSpec*, clang::AccessSpecifier) [clone .part.0] () from /cvmfs/cms-ib.cern.ch/week1/slc7_amd64_gcc900/cms/cmssw-patch/CMSSW_11_3_ROOT6_X_2021-01-24-2300/external/slc7_amd64_gcc900/lib/libCling.so; #21 0x00002b8fcf5ecf42 in clang::Parser::ParseExternalDeclaration(clang::Parser::ParsedAttributesWithRange&, clang::ParsingDeclSpec*) () from /cvmfs/cms-ib.cern.ch/week1/slc7_amd64_gcc900/cms/cmssw-patch/CMSSW_11_3_ROOT6_X_2021-01-24-2300/external/slc7_amd64_gcc900/lib/libCling.so; #22 0x00002b8fcf5ed399 in clang::Parser::ParseTopLevelDecl(clang::OpaquePtr<clang::DeclGroupRef>&) () from /cvmfs/cms-ib.cern.ch/week1/slc7_amd64_gcc900/cms/cms",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7093:8069,Access,AccessSpecifier,8069,https://root.cern,https://github.com/root-project/root/issues/7093,1,['Access'],['AccessSpecifier']
Security,_CAPATH; * failed to load '/etc/grid-security/certificates/CESNET-CA-Root.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/DigiCertAssuredIDRootCA-Root.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/727146a8.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/b1159c4c.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/b1159c4c.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/727146a8.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/04f60c28.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/b4278411.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/04f60c28.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/CESNET-CA-Root.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/USERTrustECCCertificationAuthority.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/7ed47087.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/USERTrustECCCertificationAuthority.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/DigiCertGridRootCA-Root.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/USERTrustECCCertificationAuthority.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/CESNET-CA-Root.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/DigiCertGridRootCA-Root.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/USERTrustECCCertificationAuthority.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/98ef0ee5.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/CNRS2.crl_url' fro,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8092#issuecomment-840048181:2815,secur,security,2815,https://root.cern,https://github.com/root-project/root/issues/8092#issuecomment-840048181,2,"['certificate', 'secur']","['certificates', 'security']"
Security,_CAPATH; * failed to load '/etc/grid-security/certificates/COMODO-RSA-CA.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/UKeScienceCA-2B.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/COMODO-RSA-CA.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/CNRS2-Grid-FR.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/d4c339cb.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/d6325660.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/InCommon-IGTF-Server-CA.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/UKeScienceCA-2B.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/InCommon-IGTF-Server-CA.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/d11f973e.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/82c2b224.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/InCommon-IGTF-Server-CA.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/d11f973e.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/ba240aa8.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/f5f0dfc2.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/4339b4bc.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/3cc00941.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/68aa9d51.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/5168735f.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/KENETCA-ICA-2015.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/cert,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8092#issuecomment-840048181:11225,secur,security,11225,https://root.cern,https://github.com/root-project/root/issues/8092#issuecomment-840048181,2,"['certificate', 'secur']","['certificates', 'security']"
Security,"_DoubleMuParked_Muons.root"", ""eos.url.xroot"", NULL, 0) = 79; getxattr(""Run2012BC_DoubleMuParked_Muons.root"", ""eos.url.xroot"", ""root://eoshome-a.cern.ch//eos/us""..., 79) = 79; getxattr(""Run2012BC_DoubleMuParked_Muons.root"", ""eos.url.xroot"", NULL, 0) = 79; getxattr(""Run2012BC_DoubleMuParked_Muons.root"", ""eos.url.xroot"", ""root://eoshome-a.cern.ch//eos/us""..., 79) = 79; write(1, ""Muons with opposite charge: pass""..., 97Muons with opposite charge: pass=24067843 all=31104343 -- eff=77.38 % cumulative eff=39.11 %; ```; and finally, one with the code moved to the place you suggested (using `expandedUrl`):; ```bash; $ strace ./dimuon Run2012BC_DoubleMuParked_Muons.root 2>&1 | grep Muons; execve(""./dimuon"", [""./dimuon"", ""Run2012BC_DoubleMuParked_Muons.r""...], 0x7ffccf746158 /* 49 vars */) = 0; getxattr(""Run2012BC_DoubleMuParked_Muons.root"", ""eos.url.xroot"", NULL, 0) = 25; getxattr(""Run2012BC_DoubleMuParked_Muons.root"", ""eos.url.xroot"", ""root://eoshome-a.cern.ch/"", 25) = 25; access(""/eos/home-a/amadio/Run2012BC_DoubleMuParked_Muons.root"", F_OK) = 0; access(""/eos/home-a/amadio/Run2012BC_DoubleMuParked_Muons.root"", R_OK) = 0; openat(AT_FDCWD, ""/eos/home-a/amadio/Run2012BC_DoubleMuParked_Muons.root"", O_RDONLY) = 12; lstat(""/eos/home-a/amadio/Run2012BC_DoubleMuParked_Muons.root"", {st_mode=S_IFREG|0644, st_size=2244449133, ...}) = 0; lstat(""/eos/home-a/amadio/Run2012BC_DoubleMuParked_Muons.root"", {st_mode=S_IFREG|0644, st_size=2244449133, ...}) = 0; getxattr(""Run2012BC_DoubleMuParked_Muons.root"", ""eos.url.xroot"", NULL, 0) = 79; getxattr(""Run2012BC_DoubleMuParked_Muons.root"", ""eos.url.xroot"", ""root://eoshome-a.cern.ch//eos/us""..., 79) = 79; getxattr(""Run2012BC_DoubleMuParked_Muons.root"", ""eos.url.xroot"", NULL, 0) = 79; getxattr(""Run2012BC_DoubleMuParked_Muons.root"", ""eos.url.xroot"", ""root://eoshome-a.cern.ch//eos/us""..., 79) = 79; write(1, ""Muons with opposite charge: pass""..., 97Muons with opposite charge: pass=24067843 all=31104343 -- eff=77.38 % cumulative eff=39.11 %; ```; It is",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11644#issuecomment-1311572434:3410,access,access,3410,https://root.cern,https://github.com/root-project/root/pull/11644#issuecomment-1311572434,1,['access'],['access']
Security,"_One_ of the results will do something similar to a future (but not quite, because futures in C++ are associated with asynchronous execution). I still think that the average physicist will get as little insight in the semantics of the type from the denomination ""Handle"" as they get from ""Proxy"". Even ROOT has a `TFileOpenHandle` which does not have the semantics you describe.; There is a slice of our users which are not familiar with the experiment frameworks and/or do not use one. If you feel strongly that this is not the way to go and we need a name that clearly conveys both pointer semantics and the fact that the first access triggers the event loop, I think we'll need a discussion outside of this PR :smile:",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1855#issuecomment-381109118:630,access,access,630,https://root.cern,https://github.com/root-project/root/pull/1855#issuecomment-381109118,2,['access'],['access']
Security,"_This PR is not intended to be merged into ROOT! That's why it's a draft!_. The purpose of this PR is to show which private members I had to make public to access RNTuple in a BulkIO style. Two of these changes were just to parameterize the cluster and page sizes:. * `fClusterSizeEntries` was made public so that I could set it and make it apples-to-apples with the other formats.; * `kDefaultElementsPerPage = 2097152` is large, but 8× less than the maximum size that can be compressed. The maximum is `0xffffff` because the header provides 3 bytes to specify the uncompressed size, so that uncompressed size can't exceed that. The number I chose here is `2**21`, which is 8× below that limit, to allow for 8-byte integers and floating point numbers. What's probably missing here is the logic for splitting the data to be compressed into a series of blocks with this maximum size. (TTree and normal serialized objects do that.). The rest of the changes are just turning private/protected members into public ones so that they can be read directly in a BulkIO style. Here's how that's done: suppose you're filling a buffer named `array` using a `view` of type `V` returned by `GetViewCollection` or `GetView<T>`. We know the `length` of elements to read, so the function is. ```c++; template <typename V, typename T>; void read_from_rntuple_view(T* buffer, V& view, int64_t& offset, int64_t length) {; int64_t current = 0;; while (current < length) {; T* data = (T*)view.fField.Map(offset + current);; int32_t num = view.fField.fPrincipalColumn->fCurrentPage.GetNElements();; int32_t skipped = (offset + current) - view.fField.fPrincipalColumn->fCurrentPage.GetGlobalRangeFirst();; int32_t remaining = num - skipped;; if (current + remaining > length) {; remaining = length - current;; }; if (remaining > 0) {; std::memcpy(&buffer[current], data, remaining*sizeof(T));; }; current += remaining;; }; offset += current;; }; ```. Here's a sample usage:. ```c++; auto ntuple = RNTupleReader::Open(std::mo",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7112:156,access,access,156,https://root.cern,https://github.com/root-project/root/pull/7112,1,['access'],['access']
Security,"__alloc_traits&lt;std::allocator&lt;double&gt;, double&gt;::value_type*)’ . ### Warnings:; - /mnt/build/workspace/root-pullrequests-build/root/core/meta/src/TClass.cxx:686:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:5203:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:4757:26: warning: ‘char* strncpy(char*, const char*, size_t)’ output may be truncated copying 10 bytes from a string of length 10 [-Wstringop-truncation] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:490:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing between 2147483648 and 2147483647 bytes at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 4294967295] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:761:21: warning: ‘%lu’ directive writing between 1 and 20 bytes into a region of size between 0 and 8191 [-Wformat-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TSystem.cxx:1149:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing 1 byte at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 2147483649] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1769:96: warning: cast between incompatible function types from ‘TVirtualPad*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1773:94: warning: cast between incompatible function types from ‘TVirtualX*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2340#issuecomment-423961120:1235,access,accessing,1235,https://root.cern,https://github.com/root-project/root/pull/2340#issuecomment-423961120,1,['access'],['accessing']
Security,"__alloc_traits&lt;std::allocator&lt;double&gt;, double&gt;::value_type*)’ . ### Warnings:; - /mnt/build/workspace/root-pullrequests-build/root/core/meta/src/TClass.cxx:686:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:5203:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:4757:26: warning: ‘char* strncpy(char*, const char*, size_t)’ output may be truncated copying 10 bytes from a string of length 10 [-Wstringop-truncation] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:490:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing between 2147483648 and 2147483647 bytes at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 4294967295] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:761:21: warning: ‘%lu’ directive writing between 1 and 20 bytes into a region of size between 0 and 8191 [-Wformat-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/proof/proofd/src/XrdProofdProtocol.cxx:527:45: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘class XrdSecEntity’; use assignment or value-initialization instead [-Wclass-memaccess] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TSystem.cxx:1148:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing 1 byte at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 2147483649] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1770:96: warning: cast between incompatible function types from ‘TVirtualPad*& (*)()’ to ‘TGlobalMappedFunction::G",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2340#issuecomment-406283785:1235,access,accessing,1235,https://root.cern,https://github.com/root-project/root/pull/2340#issuecomment-406283785,2,['access'],['accessing']
Security,_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/KENETCA-ICA-2015.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/CERN-GridCA.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/KENETCA-ICA-2015.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/CERN-GridCA.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/62c4a178.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/KENETCA-ICA-2015.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/CESNET-CA-4.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/7f23888f.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/7f23888f.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/CERN-GridCA.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/DigitalTrustIGTFCA.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/DigitalTrustIGTFCA.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/ffc3d59b.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/DigitalTrustIGTFCA.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/84c78b97.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/8dd53007.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/DigitalTrustIGTFCA.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/ef7d3e44.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/84c78b97.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/ef7d3e44.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8092#issuecomment-840048181:13054,secur,security,13054,https://root.cern,https://github.com/root-project/root/issues/8092#issuecomment-840048181,2,"['certificate', 'secur']","['certificates', 'security']"
Security,_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/dd4b34ea.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/7f4db168.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/7f4db168.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/089450c2.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/PSC-Myproxy-CA.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/QuoVadis-Root-CA3G3.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/PSC-Myproxy-CA.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/089450c2.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/PSC-Myproxy-CA.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/QuoVadis-Root-CA3G3.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/368bc755.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/PSC-Myproxy-CA.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/1149214e.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/1149214e.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/87429ba3.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/30ffc224.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/295adc19.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/30ffc224.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/TRGrid.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/DFN-GridGermany-Root.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/295adc19.signing_policy',MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8092#issuecomment-840048181:30773,secur,security,30773,https://root.cern,https://github.com/root-project/root/issues/8092#issuecomment-840048181,2,"['certificate', 'secur']","['certificates', 'security']"
Security,_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/seegrid-ca-2013.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/b2771d44.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/b2771d44.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/SRCE.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/e2023333.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/NCSA-slcs-2013.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/e2023333.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/2fc6b233.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/AC-GRID-FR-Personnels.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/2fc6b233.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/ff94d436.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/0e635db3.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/8fa17d52.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/0e635db3.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/IGCA2.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/RDIG.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/AC-GRID-FR-Personnels.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/156a0f0f.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/seegrid-ca-2013.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/ff94d436.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/3d5be7bc.namespaces' ,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8092#issuecomment-840048181:43220,secur,security,43220,https://root.cern,https://github.com/root-project/root/issues/8092#issuecomment-840048181,2,"['certificate', 'secur']","['certificates', 'security']"
Security,_src/tmva/tmva/src/Reader.cxx:378; 4: 'im' initialized here in /opt/root_src/tmva/tmva/src/Reader.cxx:395; 5: 'method' initialized here in /opt/root_src/tmva/tmva/src/Reader.cxx:398; 6: Assuming 'method' is not equal to null in /opt/root_src/tmva/tmva/src/Reader.cxx:400; 7: Taking false branch in /opt/root_src/tmva/tmva/src/Reader.cxx:400; 8: Assuming the condition is true in /opt/root_src/tmva/tmva/src/Reader.cxx:402; 9: Taking true branch in /opt/root_src/tmva/tmva/src/Reader.cxx:402; 10: 'methCat' initialized to a null pointer value in /opt/root_src/tmva/tmva/src/Reader.cxx:403; 11: 'methCat' is null in /opt/root_src/tmva/tmva/src/Reader.cxx:404; 12: Taking true branch in /opt/root_src/tmva/tmva/src/Reader.cxx:404; 13: Access to field 'fDataSetManager' results in a dereference of a null pointer (loaded from variable 'methCat') in /opt/root_src/tmva/tmva/src/Reader.cxx:406; /opt/root_src/tmva/tmva/src/Reader.cxx:443:32: warning: Access to field 'fDataSetManager' results in a dereference of a null pointer (loaded from variable 'methCat') [clang-analyzer-core.NullDereference]; 1: 'im' initialized here in /opt/root_src/tmva/tmva/src/Reader.cxx:432; 2: 'method' initialized here in /opt/root_src/tmva/tmva/src/Reader.cxx:435; 3: Assuming 'method' is non-null in /opt/root_src/tmva/tmva/src/Reader.cxx:437; 4: Taking false branch in /opt/root_src/tmva/tmva/src/Reader.cxx:437; 5: Assuming the condition is true in /opt/root_src/tmva/tmva/src/Reader.cxx:439; 6: Taking true branch in /opt/root_src/tmva/tmva/src/Reader.cxx:439; 7: 'methCat' initialized to a null pointer value in /opt/root_src/tmva/tmva/src/Reader.cxx:440; 8: 'methCat' is null in /opt/root_src/tmva/tmva/src/Reader.cxx:441; 9: Taking true branch in /opt/root_src/tmva/tmva/src/Reader.cxx:441; 10: Access to field 'fDataSetManager' results in a dereference of a null pointer (loaded from variable 'methCat') in /opt/root_src/tmva/tmva/src/Reader.cxx:443; /opt/root_src/tmva/tmva/src/Reader.cxx:535:22: warning: Called C,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7526:113249,Access,Access,113249,https://root.cern,https://github.com/root-project/root/issues/7526,1,['Access'],['Access']
Security,"_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, TMVA::Experimental::SOFIE::ETensorType> > >&); Maybe you need to load the corresponding shared library?; IncrementalExecutor::executeFunction: symbol '_ZN4TMVA12Experimental5SOFIE8INTERNAL18make_ROperator_GRUERKN4onnx9NodeProtoERKNS3_10GraphProtoERSt13unordered_mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEENS1_11ETensorTypeESt4hashISG_ESt8equal_toISG_ESaISt4pairIKSG_SH_EEE' unresolved while linking function '_GLOBAL__sub_I_cling_module_0'!; You are probably missing the definition of TMVA::Experimental::SOFIE::INTERNAL::make_ROperator_GRU(onnx::NodeProto const&, onnx::GraphProto const&, std::unordered_map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, TMVA::Experimental::SOFIE::ETensorType, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, TMVA::Experimental::SOFIE::ETensorType> > >&); Maybe you need to load the corresponding shared library?; IncrementalExecutor::executeFunction: symbol '_ZN4TMVA12Experimental5SOFIE8INTERNAL19make_ROperator_GemmERKN4onnx9NodeProtoERKNS3_10GraphProtoERSt13unordered_mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEENS1_11ETensorTypeESt4hashISG_ESt8equal_toISG_ESaISt4pairIKSG_SH_EEE' unresolved while linking function '_GLOBAL__sub_I_cling_module_0'!; You are probably missing the definition of TMVA::Experimental::SOFIE::INTERNAL::make_ROperator_Gemm(onnx::NodeProto const&, onnx::GraphProto const&, std::unordered_map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, T",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10877#issuecomment-1187667192:1980,hash,hash,1980,https://root.cern,https://github.com/root-project/root/issues/10877#issuecomment-1187667192,1,['hash'],['hash']
Security,"_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, TMVA::Experimental::SOFIE::ETensorType> > >&); Maybe you need to load the corresponding shared library?; IncrementalExecutor::executeFunction: symbol '_ZN4TMVA12Experimental5SOFIE8INTERNAL18make_ROperator_RNNERKN4onnx9NodeProtoERKNS3_10GraphProtoERSt13unordered_mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEENS1_11ETensorTypeESt4hashISG_ESt8equal_toISG_ESaISt4pairIKSG_SH_EEE' unresolved while linking function '_GLOBAL__sub_I_cling_module_0'!; You are probably missing the definition of TMVA::Experimental::SOFIE::INTERNAL::make_ROperator_RNN(onnx::NodeProto const&, onnx::GraphProto const&, std::unordered_map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, TMVA::Experimental::SOFIE::ETensorType, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, TMVA::Experimental::SOFIE::ETensorType> > >&); Maybe you need to load the corresponding shared library?; IncrementalExecutor::executeFunction: symbol '_ZN4TMVA12Experimental5SOFIE8INTERNAL19make_ROperator_PoolERKN4onnx9NodeProtoERKNS3_10GraphProtoERSt13unordered_mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEENS1_11ETensorTypeESt4hashISG_ESt8equal_toISG_ESaISt4pairIKSG_SH_EEE' unresolved while linking function '_GLOBAL__sub_I_cling_module_0'!; You are probably missing the definition of TMVA::Experimental::SOFIE::INTERNAL::make_ROperator_Pool(onnx::NodeProto const&, onnx::GraphProto const&, std::unordered_map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, T",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10877#issuecomment-1187667192:6176,hash,hash,6176,https://root.cern,https://github.com/root-project/root/issues/10877#issuecomment-1187667192,1,['hash'],['hash']
Security,_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/58b08cb5.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/TERENA-eScience-SSL-CA-3.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/f5ead794.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/e523eeaa.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/PK-Grid-2007.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/e523eeaa.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/38f7145f.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/PK-Grid-2007.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/38f7145f.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/617ff41b.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/67707166.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/67707166.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/QuoVadis-Grid-ICA-G2.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/DigiCertGridTrustCA-Classic.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/DigiCertGridTrustCA-Classic.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/MYIFAM.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/PKIUNAMgrid.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/DigiCertGridTrustCA-Classic.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/QuoVadis-Grid-ICA-G2.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/MYIFAM.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/g,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8092#issuecomment-840048181:26142,secur,security,26142,https://root.cern,https://github.com/root-project/root/issues/8092#issuecomment-840048181,2,"['certificate', 'secur']","['certificates', 'security']"
Security,_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/DFN-GridGermany-Root.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/295adc19.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/DFN-GridGermany-Root.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/6f071272.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/DFN-GridGermany-Root.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/REUNA-ca.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/6f071272.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/DFN-GridGermany-Root.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/TRGrid.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/e18bfb83.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/18bc5b05.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/REUNA-ca.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/18bc5b05.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/TRGrid.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/e18bfb83.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/1f3834d0.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/REUNA-ca.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/1f3834d0.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/RomanianGRID.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/RomanianGRID.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/REUNA-ca.signing_policy' from CURLOPT_CA,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8092#issuecomment-840048181:32574,secur,security,32574,https://root.cern,https://github.com/root-project/root/issues/8092#issuecomment-840048181,2,"['certificate', 'secur']","['certificates', 'security']"
Security,`RBrowser` is no longer experimental and can be compiled once `webgui` is enabled.; It also required to implement file dialogs in other widgets (like TWebCanvas) therefore need to be compiled together. Add `ROOT::RWebWindowsManager::SetUseConnectionKey` method to let change security settings via method call.; Before only rootrc file can be used. Small fix in URL generation when token is used.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15979:275,secur,security,275,https://root.cern,https://github.com/root-project/root/pull/15979,1,['secur'],['security']
Security,"``; ...; C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:; Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\; Users\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\ClangAttrEmitter.cpp) [C:\Users\bel; lenot\build\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.clang-tblgen.vcxproj]; C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:; Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\; Users\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\ClangASTNodesEmitter.cpp) [C:\Users; \bellenot\build\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.clang-tblgen.vcxproj]; C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:; Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\; Users\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\ClangSACheckersEmitter.cpp) [C:\Use; rs\bellenot\build\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.clang-tblgen.vcxproj]; C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:; Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\; Users\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\ClangCommentCommandInfoEmitter.cpp); [C:\Users\bellenot\build\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.clang-tblgen.vcxp; roj]; C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:; Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\; Users\bellenot",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9445#issuecomment-1008835389:1074,sanitiz,sanitizer,1074,https://root.cern,https://github.com/root-project/root/issues/9445#issuecomment-1008835389,1,['sanitiz'],['sanitizer']
Security,``` ; stderr: fatal: unable to access 'http://root.cern/git/root.git/': Failed to connect to root.cern port 80: Operation timed out; ```; Does not help.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6561#issuecomment-704911664:31,access,access,31,https://root.cern,https://github.com/root-project/root/pull/6561#issuecomment-704911664,1,['access'],['access']
Security,"```; $ curl -v http://raw.githubusercontent.com/iml-wg/tmvatutorials/master/inputdata.root; * Trying 185.199.109.133:80...; * TCP_NODELAY set; * Connected to raw.githubusercontent.com (185.199.109.133) port 80 (#0); > GET /iml-wg/tmvatutorials/master/inputdata.root HTTP/1.1; > Host: raw.githubusercontent.com; > User-Agent: curl/7.68.0; > Accept: */*; > ; * Mark bundle as not supporting multiuse; < HTTP/1.1 301 Moved Permanently; < Server: Varnish; < Retry-After: 0; < Location: https://raw.githubusercontent.com/iml-wg/tmvatutorials/master/inputdata.root; < Content-Length: 0; < Accept-Ranges: bytes; < Date: Wed, 12 May 2021 07:40:00 GMT; < Via: 1.1 varnish; < Connection: close; < X-Served-By: cache-hhn4077-HHN; < X-Cache: HIT; < X-Cache-Hits: 0; < X-Timer: S1620805200.382251,VS0,VE0; < Access-Control-Allow-Origin: *; < Expires: Wed, 12 May 2021 07:45:00 GMT; < Vary: Authorization,Accept-Encoding; < ; * Closing connection 0; ```; So it's probably the redirect.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8155#issuecomment-839545356:795,Access,Access-Control-Allow-Origin,795,https://root.cern,https://github.com/root-project/root/issues/8155#issuecomment-839545356,2,"['Access', 'Authoriz']","['Access-Control-Allow-Origin', 'Authorization']"
Security,"```; /Users/couet/git/zevis/ZevLib/src/ZCanvas.cxx:361:17: error: member access into incomplete type 'TCanvasImp'; fCanvasImp->GetWindowGeometry(fWindowTopX, fWindowTopY,. ```; I am on MacOS. `cmake` gives me:; ```; % cmake ../zevis; -- The CXX compiler identification is AppleClang 11.0.3.11030032; -- The C compiler identification is AppleClang 11.0.3.11030032; -- The Fortran compiler identification is GNU 8.2.0; -- Check for working CXX compiler: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/c++; -- Check for working CXX compiler: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/c++ -- works; -- Detecting CXX compiler ABI info; -- Detecting CXX compiler ABI info - done; -- Detecting CXX compile features; -- Detecting CXX compile features - done; -- Check for working C compiler: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/cc; -- Check for working C compiler: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/cc -- works; -- Detecting C compiler ABI info; -- Detecting C compiler ABI info - done; -- Detecting C compile features; -- Detecting C compile features - done; -- Checking whether Fortran compiler has -isysroot; -- Checking whether Fortran compiler has -isysroot - yes; -- Checking whether Fortran compiler supports OSX deployment target flag; -- Checking whether Fortran compiler supports OSX deployment target flag - yes; -- Check for working Fortran compiler: /usr/local/bin/gfortran; -- Check for working Fortran compiler: /usr/local/bin/gfortran -- works; -- Detecting Fortran compiler ABI info; -- Detecting Fortran compiler ABI info - done; -- Checking whether /usr/local/bin/gfortran supports Fortran 90; -- Checking whether /usr/local/bin/gfortran supports Fortran 90 -- yes; -- Performing Test COMPILER_SUPPORTS_-O1; -- Performing Test COMPILER_SUPPORTS_-O1 - Success; -- Performing Test COMPILER_SUPPORTS_-pip",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6344#issuecomment-692657827:73,access,access,73,https://root.cern,https://github.com/root-project/root/issues/6344#issuecomment-692657827,1,['access'],['access']
Security,```; /opt/root_src/core/clib/src/Demangle.c:326:10: warning: Call to function 'strcat' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcat'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]; 1: Call to function 'strcat' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcat'. CWE-119 in /opt/root_src/core/clib/src/Demangle.c:326; /opt/root_src/core/clib/src/Demangle.c:327:10: warning: Call to function 'strncat' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'strncat_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'strncat' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'strncat_s' in case of C11 in /opt/root_src/core/clib/src/Demangle.c:327; /opt/root_src/core/clib/src/Demangle.c:344:16: warning: Call to function 'strcat' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcat'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]; 1: Call to function 'strcat' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcat'. CWE-119 in /opt/root_src/core/clib/src/Demangle.c:344; /opt/root_src/core/clib/src/Demangle.c:345:16: warning: Call to function 'strcat' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that sup,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7422:284,secur,security,284,https://root.cern,https://github.com/root-project/root/issues/7422,4,['secur'],['security']
Security,```; /opt/root_src/core/cont/inc/TBits.h:82:60: warning: Using copy-ctor but class TBits::TReference has a trivial copy-ctor but non trivial assign operator [clazy-rule-of-two-soft]; /opt/root_src/core/cont/inc/TBtree.h:248:40: warning: Access to field 'fInnerMaxIndex' results in a dereference of a null pointer (loaded from field 'fTree') [clang-analyzer-core.NullDereference]; 1: Passing null pointer value via 2nd parameter 't' in /opt/root_src/core/cont/src/TBtree.cxx:1279; 2: Calling constructor for 'TBtInnerNode' in /opt/root_src/core/cont/src/TBtree.cxx:1279; 3: Passing null pointer value via 3rd parameter 't' in /opt/root_src/core/cont/src/TBtree.cxx:688; 4: Calling constructor for 'TBtNode' in /opt/root_src/core/cont/src/TBtree.cxx:688; 5: Assuming 'p' is equal to null in /opt/root_src/core/cont/src/TBtree.cxx:546; 6: Taking true branch in /opt/root_src/core/cont/src/TBtree.cxx:546; 7: 't' is equal to null in /opt/root_src/core/cont/src/TBtree.cxx:547; 8: expanded from macro 'R__CHECK' in /opt/root_src/core/foundation/inc/TError.h:124; 9: Taking true branch in /opt/root_src/core/cont/src/TBtree.cxx:547; 10: expanded from macro 'R__CHECK' in /opt/root_src/core/foundation/inc/TError.h:124; 11: Loop condition is false. Exiting loop in /opt/root_src/core/cont/src/TBtree.cxx:547; 12: expanded from macro 'R__CHECK' in /opt/root_src/core/foundation/inc/TError.h:123; 13: Null pointer value stored to field 'fTree' in /opt/root_src/core/cont/src/TBtree.cxx:548; 14: Returning from constructor for 'TBtNode' in /opt/root_src/core/cont/src/TBtree.cxx:688; 15: Calling 'TBtInnerNode::MaxIndex' in /opt/root_src/core/cont/src/TBtree.cxx:690; 16: Access to field 'fInnerMaxIndex' results in a dereference of a null pointer (loaded from field 'fTree') in /opt/root_src/core/cont/inc/TBtree.h:248; /opt/root_src/core/cont/inc/TBtree.h:314:41: warning: Access to field 'fLeafMaxIndex' results in a dereference of a null pointer (loaded from field 'fTree') [clang-analyzer-core.NullDerefere,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7424:237,Access,Access,237,https://root.cern,https://github.com/root-project/root/issues/7424,1,['Access'],['Access']
Security,```; /opt/root_src/core/cont/inc/TBits.h:82:60: warning: Using copy-ctor but class TBits::TReference has a trivial copy-ctor but non trivial assign operator [clazy-rule-of-two-soft]; /opt/root_src/math/fumili/src/TFumili.cxx:853:4: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]; 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/math/fumili/src/TFumili.cxx:853; /opt/root_src/math/fumili/src/TFumili.cxx:1018:13: warning: Value stored to 'ki' is never read [clang-analyzer-deadcode.DeadStores]; 1: Value stored to 'ki' is never read in /opt/root_src/math/fumili/src/TFumili.cxx:1018; /opt/root_src/math/fumili/src/TFumili.cxx:2141:10: warning: Value stored to 'eu' is never read [clang-analyzer-deadcode.DeadStores]; 1: Value stored to 'eu' is never read in /opt/root_src/math/fumili/src/TFumili.cxx:2141; /opt/root_src/math/genvector/src/3DConversions.cxx:510:20: warning: Value stored to 'u' is never read [clang-analyzer-deadcode.DeadStores]; 1: Value stored to 'u' is never read in /opt/root_src/math/genvector/src/3DConversions.cxx:510; /opt/root_src/math/genvector/src/3DConversions.cxx:516:21: warning: Value stored to 'u' is never read [clang-analyzer-deadcode.DeadStores]; 1: Value stored to 'u' is never read in /opt/root_src/math/genvector/src/3DConversions.cxx:516; /opt/root_src/math/genvector/src/AxisAngleXother.cxx:108:19: warning: Value stored to 'aqu' is never read [clang-analyzer-deadcode.DeadStores]; 1: Value stored to 'aqu' is never read in /opt/root_src/math/genvector/src/AxisAngleXother.cxx:108; /opt/root_src/math/genvector/src/AxisAngleXother.cxx:139:19: warning: Value stored to ',MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7458:464,secur,security,464,https://root.cern,https://github.com/root-project/root/issues/7458,1,['secur'],['security']
Security,```; /opt/root_src/core/rint/src/TTabCom.cxx:1431:4: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]; 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/core/rint/src/TTabCom.cxx:1431; /opt/root_src/core/rint/src/TTabCom.cxx:1452:13: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]; 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/core/rint/src/TTabCom.cxx:1452; /opt/root_src/core/rint/src/TTabCom.cxx:1455:13: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]; 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/core/rint/src/TTabCom.cxx:1455; /opt/root_src/core/rint/src/TTabCom.cxx:1459:10: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-securi,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7427:285,secur,security,285,https://root.cern,https://github.com/root-project/root/issues/7427,2,['secur'],['security']
Security,```; /opt/root_src/graf2d/asimage/src/TASImage.cxx:3385:7: warning: Value stored to 'x' is never read [clang-analyzer-deadcode.DeadStores]; 1: Value stored to 'x' is never read in /opt/root_src/graf2d/asimage/src/TASImage.cxx:3385; /opt/root_src/graf2d/asimage/src/TASImage.cxx:3386:7: warning: Value stored to 'y' is never read [clang-analyzer-deadcode.DeadStores]; 1: Value stored to 'y' is never read in /opt/root_src/graf2d/asimage/src/TASImage.cxx:3386; /opt/root_src/graf2d/asimage/src/TASImage.cxx:3652:17: warning: Array access (via field 'argb32') results in a null pointer dereference [clang-analyzer-core.NullDereference]; 1: Assuming field 'fImage' is non-null in /opt/root_src/graf2d/asimage/src/TASImage.cxx:3623; 2: Taking false branch in /opt/root_src/graf2d/asimage/src/TASImage.cxx:3623; 3: Assuming field 'fScaledImage' is null in /opt/root_src/graf2d/asimage/src/TASImage.cxx:3628; 4: '?' condition is false in /opt/root_src/graf2d/asimage/src/TASImage.cxx:3628; 5: 'img' is non-null in /opt/root_src/graf2d/asimage/src/TASImage.cxx:3629; 6: Taking false branch in /opt/root_src/graf2d/asimage/src/TASImage.cxx:3629; 7: Assuming field 'argb32' is null in /opt/root_src/graf2d/asimage/src/TASImage.cxx:3631; 8: Taking true branch in /opt/root_src/graf2d/asimage/src/TASImage.cxx:3631; 9: Field 'fScaledImage' is null in /opt/root_src/graf2d/asimage/src/TASImage.cxx:3632; 10: Taking false branch in /opt/root_src/graf2d/asimage/src/TASImage.cxx:3632; 11: Assuming 'i' is < field 'height' in /opt/root_src/graf2d/asimage/src/TASImage.cxx:3649; 12: Loop condition is true. Entering loop body in /opt/root_src/graf2d/asimage/src/TASImage.cxx:3649; 13: Assuming 'j' is < field 'width' in /opt/root_src/graf2d/asimage/src/TASImage.cxx:3650; 14: Loop condition is true. Entering loop body in /opt/root_src/graf2d/asimage/src/TASImage.cxx:3650; 15: Array access (via field 'argb32') results in a null pointer dereference in /opt/root_src/graf2d/asimage/src/TASImage.cxx:3652; /opt/root_src,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7432:529,access,access,529,https://root.cern,https://github.com/root-project/root/issues/7432,1,['access'],['access']
Security,"```; 17:22:05 FAILED: lib/libFTGL.so.6.17.01 ; 17:22:05 : && /usr/lib64/ccache/c++ -fPIC -std=c++11 -Wno-implicit-fallthrough -Wno-noexcept-type -pipe -m64 -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread -O3 -DNDEBUG -Wl,--no-undefined -Wl,--hash-style=""both"" -shared -Wl,-soname,libFTGL.so.6.17 -o lib/libFTGL.so.6.17.01 graf3d/ftgl/CMakeFiles/FTGL.dir/src/FTBitmapGlyph.cxx.o graf3d/ftgl/CMakeFiles/FTGL.dir/src/FTCharmap.cxx.o graf3d/ftgl/CMakeFiles/FTGL.dir/src/FTContour.cxx.o graf3d/ftgl/CMakeFiles/FTGL.dir/src/FTExtrdGlyph.cxx.o graf3d/ftgl/CMakeFiles/FTGL.dir/src/FTFace.cxx.o graf3d/ftgl/CMakeFiles/FTGL.dir/src/FTFont.cxx.o graf3d/ftgl/CMakeFiles/FTGL.dir/src/FTGLBitmapFont.cxx.o graf3d/ftgl/CMakeFiles/FTGL.dir/src/FTGLExtrdFont.cxx.o graf3d/ftgl/CMakeFiles/FTGL.dir/src/FTGLOutlineFont.cxx.o graf3d/ftgl/CMakeFiles/FTGL.dir/src/FTGLPixmapFont.cxx.o graf3d/ftgl/CMakeFiles/FTGL.dir/src/FTGLPolygonFont.cxx.o graf3d/ftgl/CMakeFiles/FTGL.dir/src/FTGLTextureFont.cxx.o graf3d/ftgl/CMakeFiles/FTGL.dir/src/FTGlyph.cxx.o graf3d/ftgl/CMakeFiles/FTGL.dir/src/FTGlyphContainer.cxx.o graf3d/ftgl/CMakeFiles/FTGL.dir/src/FTLibrary.cxx.o graf3d/ftgl/CMakeFiles/FTGL.dir/src/FTOutlineGlyph.cxx.o graf3d/ftgl/CMakeFiles/FTGL.dir/src/FTPixmapGlyph.cxx.o graf3d/ftgl/CMakeFiles/FTGL.dir/src/FTPoint.cxx.o graf3d/ftgl/CMakeFiles/FTGL.dir/src/FTPolyGlyph.cxx.o graf3d/ftgl/CMakeFiles/FTGL.dir/src/FTSize.cxx.o graf3d/ftgl/CMakeFiles/FTGL.dir/src/FTTextureGlyph.cxx.o graf3d/ftgl/CMakeFiles/FTGL.dir/src/FTVectoriser.cxx.o /usr/lib64/libOpenGL.so /usr/lib64/libGLX.so /usr/lib64/libGLU.so /usr/lib64/libfreetype.so /usr/lib64/libz.a && :; 17:22:05 /usr/bin/ld: /usr/lib64/libz.a(inflate.o): relocation R_X86_64_PC32 against symbol `inflateReset2' can not be used when making a shared object; recompile with -fPIC; 17:22:05 /usr/bin/ld: final link failed: Bad value; 17:22:05 collect2: error: ld returned 1 exit status; ```; Not my fault, I swear :-)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3205#issuecomment-449054483:256,hash,hash-style,256,https://root.cern,https://github.com/root-project/root/pull/3205#issuecomment-449054483,1,['hash'],['hash-style']
Security,"```; ROOT Version: root-5-34-00-patches; Platform: 4.18.0-193.6.3.el8_2.x86_64 (RHEL 8.2 Ootpa); Compiler: gcc (GCC) 8.3.1 20191121 (Red Hat 8.3.1-5); ```. I have been asked to install ROOT v5-34 in a machine that does not have an internet connection. My configure line is:; ```; ./configure --prefix=/software/root/5.34; ```; But it fails to find the LZ4 library as shown below in the output of the `configure` command:; ```; Checking whether to build included lz4 ... yes; ```; Even if the library can be found in the PATH by the command `which`. This is a problem, because it will then try to download the package and it will fail. So I try the following configure line:; ```; ./configure --prefix=/software/root/5.34 --disable-builtin-lz4; ```; But the option is ignored and the output of the configure shows that it will build the builtin_lz4 (and therefore download it from internet):; ```; Enabled support for asimage, astiff, builtin_afterimage, builtin_glew, builtin_lz4, cintex, explicitlink, fftw3, gviz, genvector, krb5, memstat, opengl, reflex, shadowpw, shared, ssl, tmva, vdt, x11, xft, xml.; ```; I was able to bypass the behaviour for the version 6.24 using `cmake` with the following line:; ```; cmake -DCMAKE_INSTALL_PREFIX=<some-path> -Dasimage=on -Dcocoa=on -Dvdt=off -Dxrootd=off -Dclad=off <path-to-source>; ```; Again, for version 6.24, I was not able to use the `--disable` option, but somehow, this combination of options resulted in the bypassing of the builtin-lz4. This issue was opened following a [suggestion in the root forum](https://root-forum.cern.ch/t/installation-without-internet-access/45361/2?u=eduardo) where the same question was posted earlier. Regards,; Eduardo",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8424:1618,access,access,1618,https://root.cern,https://github.com/root-project/root/issues/8424,1,['access'],['access']
Security,"```; build/rmkdepend/include.c:306:28: warning: ‘%s’ directive writing up to 8190 bytes into a region of size between 1 and 8191 [-Wformat-overflow=]; 306 | sprintf(path, ""%s/%s"", *pp, include);; | ^~; ```; Apple needs to be told to expose snprintf... (cherry picked from commit 19909eb71a5ce5a066ca4588e62ff012dec0bb7c). # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12099:233,expose,expose,233,https://root.cern,https://github.com/root-project/root/pull/12099,1,['expose'],['expose']
Security,```; root@f855f86c6d89:~# ls $ROOTSYS/lib/*vdt*; ls: cannot access '/opt/root/lib/*vdt*': No such file or directory; root@f855f86c6d89:~# ls $ROOTSYS/include/; Display all 1483 possibilities? (y or n); root@f855f86c6d89:~# ls $ROOTSYS/include/*vdt*; ls: cannot access '/opt/root/include/*vdt*': No such file or directory; ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/16038#issuecomment-2247173772:60,access,access,60,https://root.cern,https://github.com/root-project/root/issues/16038#issuecomment-2247173772,2,['access'],['access']
Security,"`fWcsTitle` accessed wrongly, following macro crashes:. ```; void bug(); {; TText txt1(0,0, L""Any text 1"");; TText txt2(0,0, L""Any text 2"");; ; txt2 = txt1; // this is crashing; }; ```. Discovered in gcc11 warnings",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8319:12,access,accessed,12,https://root.cern,https://github.com/root-project/root/pull/8319,1,['access'],['accessed']
Security,"`pull_request_target` is a security vulnerability: https://securitylab.github.com/research/github-actions-preventing-pwn-requests/ I didn't check the workflow definitions (will do tomorrow), but I suppose that it builds ROOT? If so, anybody can steal secrets and even push to the repository because the access token has write access!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12112#issuecomment-1411004278:27,secur,security,27,https://root.cern,https://github.com/root-project/root/pull/12112#issuecomment-1411004278,4,"['access', 'secur']","['access', 'security', 'securitylab']"
Security,"`sysctl -n hw.logicalcpu` works. I still think that a simple ""`-j8` where ""8"" is the number of cores you have"" is easier to access for our readers. I don't think it's the readme's job to explain how to find one's number of cores. ""`-j8` where ""8"" is the number of cores you have"" is the change I suggested you to do. Would you agree to do that?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5079#issuecomment-597561877:124,access,access,124,https://root.cern,https://github.com/root-project/root/pull/5079#issuecomment-597561877,2,['access'],['access']
Security,"a bit more than your output:. ***@***.*** t5]$ curl -v https://webdav.lcg.triumf.ca:2880/atlas/atlaslocalgroupdisk/rucio/user/desilva/a1/a8/myFile.1.root; * About to connect() to webdav.lcg.triumf.ca port 2880 (#0); * Trying 2607:f8f0:660:3::36...; * Connected to webdav.lcg.triumf.ca (2607:f8f0:660:3::36) port 2880 (#0); * Initializing NSS with certpath: sql:/etc/pki/nssdb; * CAfile: /etc/pki/tls/certs/ca-bundle.crt; CApath: none; * Server certificate:; * 	subject: CN=dpool46.lcg.triumf.ca,OU=triumf.ca,O=Grid,C=CA; * 	start date: Apr 08 16:29:03 2021 GMT; * 	expire date: May 08 16:29:03 2022 GMT; * 	common name: dpool46.lcg.triumf.ca; * 	issuer: CN=Grid Canada Certificate Authority,O=Grid,C=CA; * NSS error -8179 (SEC_ERROR_UNKNOWN_ISSUER); * Peer's Certificate issuer is not recognized.; * Closing connection 0; curl: (60) Peer's Certificate issuer is not recognized.; More details here: http://curl.haxx.se/docs/sslcerts.html. curl performs SSL certificate verification by default, using a ""bundle""; of Certificate Authority (CA) public keys (CA certs). If the default; bundle file isn't adequate, you can specify an alternate file; using the --cacert option.; If this HTTPS server uses a certificate signed by a CA represented in; the bundle, the certificate verification probably failed due to a; problem with the certificate (it might be expired, or the name might; not match the domain name in the URL).; If you'd like to turn off curl's verification of the certificate, use; the -k (or --insecure) option.; ***@***.*** t5]$ . regards,; Asoka. > On May 12, 2021, at 1:05 AM, Axel Naumann ***@***.***> wrote:; > ; > ; > As I crosscheck (to see whether it's related to the Davix redirect issue #8155 <https://github.com/root-project/root/issues/8155> ) I tried with curl but I get; > ; > $ curl -v https://webdav.lcg.triumf.ca:2880/atlas/atlaslocalgroupdisk/rucio/user/desilva/a1/a8/myFile.1.root; > * Trying 206.12.9.197:2880...; > * TCP_NODELAY set; > * Trying 2607:f8f0:660:3::36:2880.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8092#issuecomment-839939902:983,certificate,certificate,983,https://root.cern,https://github.com/root-project/root/issues/8092#issuecomment-839939902,2,"['Certificate', 'certificate']","['Certificate', 'certificate']"
Security,a.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/UNLPGrid.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/SDG-G2.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/AC-GRID-FR-Robots.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/7a819ef2.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/UNAMgrid-ca.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/QuoVadis-Root-CA2.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/QuoVadis-Root-CA2.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/UNLPGrid.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/QuoVadis-Root-CA2.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/d71343e8.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/QuoVadis-Root-CA2.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/d71343e8.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/d7e8dc79.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/SlovakGrid.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/728fa56d.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/SlovakGrid.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/728fa56d.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/e13e0fcf.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/e21dc0c0.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/87250dfa.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/14e86c3,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8092#issuecomment-840048181:52977,secur,security,52977,https://root.cern,https://github.com/root-project/root/issues/8092#issuecomment-840048181,2,"['certificate', 'secur']","['certificates', 'security']"
Security,"a/src/TClass.cxx:648:20: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/core/meta/src/TClass.cxx:686:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/core/meta/src/TMethod.cxx:235:28: warning: ‘snprintf’ output may be truncated before the last format character [-Wformat-truncation=] ; - /mnt/build/workspace/root-pullrequests-build/root/core/meta/src/TMethod.cxx:243:31: warning: ‘%s’ directive output may be truncated writing up to 63 bytes into a region of size 61 [-Wformat-truncation=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:490:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing between 2147483648 and 2147483647 bytes at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 4294967295] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:761:21: warning: ‘%lu’ directive writing between 1 and 20 bytes into a region of size between 0 and 8191 [-Wformat-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/core/unix/src/TUnixSystem.cxx:696:48: warning: ‘%s’ directive output may be truncated writing up to 1024 bytes into a region of size 64 [-Wformat-truncation=] ; - /mnt/build/workspace/root-pullrequests-build/root/proof/proofd/src/XrdProofdProtocol.cxx:527:45: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘class XrdSecEntity’; use assignment or value-initialization instead [-Wclass-memaccess] . And 179 more. ### Failing tests:; - [projectroot.roottest.root.dataframe.roottest_root_dataframe_writeFcc](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/34164/testReport/projectroot.roottest.root/dataframe/roottest_root_dataf",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1851#issuecomment-408947574:1593,access,accessing,1593,https://root.cern,https://github.com/root-project/root/pull/1851#issuecomment-408947574,2,['access'],['accessing']
Security,"a/x86_64-centos7-gcc8-opt/lib/libXrdUtils.so.2; #15 0x00002aaae2619655 in XrdSys::IOEvents::BootStrap::Start(void*) (); from /cvmfs/atlas.cern.ch/repo/sw/software/21.2/AnalysisBaseExternals/21.2.139/InstallArea/x86_64-centos7-gcc8-opt/lib/libXrdUtils.so.2; #16 0x00002aaae2622488 in XrdSysThread_Xeq () from; /cvmfs/atlas.cern.ch/repo/sw/software/21.2/AnalysisBaseExternals/21.2.139/InstallArea/x86_64-centos7-gcc8-opt/lib/libXrdUtils.so.2; #17 0x00002aaaabfa1ea5 in start_thread () from /lib64/libpthread.so.0; #18 0x00002aaaac8558dd in clone () from /lib64/libc.so.6. Thread 1 (Thread 0x2aaad704dc80 (LWP 2495)):; #0 0x00002aaaabfa5a35 in pthread_cond_wait@@GLIBC_2.3.2 () from; /lib64/libpthread.so.0; #1 0x00002aaae26224c6 in XrdSysCondVar::Wait() () from; /cvmfs/atlas.cern.ch/repo/sw/software/21.2/AnalysisBaseExternals/21.2.139/InstallArea/x86_64-centos7-gcc8-opt/lib/libXrdUtils.so.2; #2 0x00002aaae2bb4558 in; XrdCl::File::Open(std::__cxx11::basic_string<char,; std::char_traits<char>, std::allocator<char> > const&,; XrdCl::OpenFlags::Flags, XrdCl::Access::Mode, unsigned short) () from; /cvmfs/atlas.cern.ch/repo/sw/software/21.2/AnalysisBaseExternals/21.2.139/InstallArea/x86_64-centos7-gcc8-opt/lib/libXrdCl.so.2; #3 0x00002aaae23dcfd9 in TNetXNGFile::TNetXNGFile(char const*, char; const*, char const*, char const*, int, int, bool) () from; /cvmfs/atlas.cern.ch/repo/sw/software/21.2/AnalysisBaseExternals/21.2.139/InstallArea/x86_64-centos7-gcc8-opt/lib/libNetxNG.so; #4 0x00002aaae23ddecc in TNetXNGFile::TNetXNGFile(char const*, char; const*, char const*, int, int, bool) () from; /cvmfs/atlas.cern.ch/repo/sw/software/21.2/AnalysisBaseExternals/21.2.139/InstallArea/x86_64-centos7-gcc8-opt/lib/libNetxNG.so; #5 0x00002aaae1fef643 in ?? (); #6 0x00002aaa00000000 in ?? (); #7 0x00007ffffffeb7c4 in ?? (); #8 0x0000000001b8de70 in ?? (); #9 0x00002aaaabf493f8 in vtable for TString () from; /cvmfs/atlas.cern.ch/repo/sw/software/21.2/AnalysisBaseExternals/21.2.139/InstallArea/x86_64-c",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6948#issuecomment-760218827:7144,Access,Access,7144,https://root.cern,https://github.com/root-project/root/issues/6948#issuecomment-760218827,1,['Access'],['Access']
Security,a178.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/a603ba9c.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/8dd53007.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/943fd5f3.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/DigiCertGridCA-1G2-Classic-2015.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/DigitalTrustSecureCAG4-runbytheissuer.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/DigiCertGridCA-1G2-Classic-2015.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/DigitalTrustSecureCAG4-runbytheissuer.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/DigiCertGridCA-1G2-Classic-2015.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/d41ec82f.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/b85d64aa.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/598b583e.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/DigiCertGridCA-1G2-Classic-2015.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/a603ba9c.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/82c2b224.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/d41ec82f.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/DigiCertGridCA-1-Classic.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/bd43b60c.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/DigiCertGridCA-1-Classic.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/7b384752.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-sec,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8092#issuecomment-840048181:15442,secur,security,15442,https://root.cern,https://github.com/root-project/root/issues/8092#issuecomment-840048181,2,"['certificate', 'secur']","['certificates', 'security']"
Security,a603ba9c.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/8dd53007.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/943fd5f3.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/DigiCertGridCA-1G2-Classic-2015.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/DigitalTrustSecureCAG4-runbytheissuer.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/DigiCertGridCA-1G2-Classic-2015.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/DigitalTrustSecureCAG4-runbytheissuer.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/DigiCertGridCA-1G2-Classic-2015.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/d41ec82f.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/b85d64aa.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/598b583e.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/DigiCertGridCA-1G2-Classic-2015.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/a603ba9c.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/82c2b224.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/d41ec82f.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/DigiCertGridCA-1-Classic.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/bd43b60c.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/DigiCertGridCA-1-Classic.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/7b384752.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/DigiCertGridCA-1-Classic.namespaces' from CURLOPT_CAPATH; * failed to loa,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8092#issuecomment-840048181:15534,secur,security,15534,https://root.cern,https://github.com/root-project/root/issues/8092#issuecomment-840048181,2,"['certificate', 'secur']","['certificates', 'security']"
Security,"aa0b9be10db43857cd7""><code>570e8b1</code></a> add publishConfig for v3 publishes</li>; <li><a href=""https://github.com/isaacs/minimatch/commit/5b7cd3372be253759fb4d865eb3f38f189a5fcdf""><code>5b7cd33</code></a> 3.0.6</li>; <li><a href=""https://github.com/isaacs/minimatch/commit/20b4b562830680867feb75f9c635aca08e5c86ff""><code>20b4b56</code></a> [fix] revert all breaking syntax changes</li>; <li><a href=""https://github.com/isaacs/minimatch/commit/2ff038852ec03e85e60e0eb333005c680ac8a543""><code>2ff0388</code></a> document, expose, and test 'partial:true' option</li>; <li>Additional commits viewable in <a href=""https://github.com/isaacs/minimatch/compare/v3.0.4...v3.1.2"">compare view</a></li>; </ul>; </details>; <br />. [![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=minimatch&package-manager=npm_and_yarn&previous-version=3.0.4&new-version=3.1.2)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores). Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`. [//]: # (dependabot-automerge-start); [//]: # (dependabot-automerge-end). ---. <details>; <summary>Dependabot commands and options</summary>; <br />. You can trigger Dependabot actions by commenting on this PR:; - `@dependabot rebase` will rebase this PR; - `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it; - `@dependabot merge` will merge this PR after your CI passes on it; - `@dependabot squash and merge` will squash and merge this PR after your CI passes on it; - `@dependabot cancel merge` will cancel a previously requested merge and block automerging; - `@dependabot reopen` will reopen this PR if it is closed; - `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by c",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11864:2055,secur,security-vulnerabilities,2055,https://root.cern,https://github.com/root-project/root/pull/11864,2,['secur'],"['security-updates', 'security-vulnerabilities']"
Security,"ace; from above as an attachment in addition to anything else; that might help us fixing this issue.; ===========================================================; #6 0x00007f54c1df2cc6 in clang::CodeGen::CodeGenTBAA::getBaseTypeInfoHelper (this=this; entry=0x55ed2cce0be0, Ty=<optimized out>, Ty; entry=0x55ed2ccd12c0) at /usr/local/src/conda-prefix/include/llvm/ADT/PointerIntPair.h:174; #7 0x00007f54c1df343b in clang::CodeGen::CodeGenTBAA::getBaseTypeInfo (this=0x55ed2cce0be0, QTy=...) at /usr/local/src/conda/clang_packages-9.0.1/lib/CodeGen/CodeGenTBAA.cpp:354; #8 0x00007f54c1df3edc in clang::CodeGen::CodeGenTBAA::getTypeInfo (this=this; entry=0x55ed2cce0be0, QTy=QTy; entry=...) at /usr/local/src/conda/clang_packages-9.0.1/lib/CodeGen/CodeGenTBAA.cpp:204; #9 0x00007f54c1df44cc in clang::CodeGen::CodeGenTBAA::getAccessInfo (this=0x55ed2cce0be0, AccessType=...) at /usr/local/src/conda/clang_packages-9.0.1/lib/CodeGen/CodeGenTBAA.cpp:227; #10 0x00007f54c1d78b6b in clang::CodeGen::CodeGenModule::getTBAAAccessInfo (this=<optimized out>, AccessType=..., AccessType; entry=...) at /usr/local/src/conda/clang_packages-9.0.1/lib/CodeGen/CodeGenModule.cpp:668; #11 0x00007f54c1f3a0aa in clang::CodeGen::CodeGenFunction::MakeAddrLValue (Source=clang::CodeGen::AlignmentSource::Type, T=..., Addr=..., this=0x7fffe1b042c0) at /usr/local/src/conda/clang_packages-9.0.1/lib/CodeGen/CodeGenFunction.h:2126; #12 EmitDeclInit (DeclPtr=..., D=..., CGF=...) at /usr/local/src/conda/clang_packages-9.0.1/lib/CodeGen/CGDeclCXX.cpp:37; #13 clang::CodeGen::CodeGenFunction::EmitCXXGlobalVarDeclInit (this=0x7fffe1b042c0, D=..., DeclPtr=0x55ed2cd76b08, PerformInit=<optimized out>) at /usr/local/src/conda/clang_packages-9.0.1/lib/CodeGen/CGDeclCXX.cpp:215; #14 0x00007f54c1f3ad90 in clang::CodeGen::CodeGenFunction::GenerateCXXGlobalVarDeclInitFunc (this=this; entry=0x7fffe1b042c0, Fn=0x55ed2cd76b78, D=0x55ed2ccd0f20, Addr=Addr; entry=0x55ed2cd76b08, PerformInit=PerformInit; entry=true) at /usr/local/src/c",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9595:17157,Access,AccessType,17157,https://root.cern,https://github.com/root-project/root/issues/9595,1,['Access'],['AccessType']
Security,"acphsft21.dyndns.cern.ch:/Users/sftnight/build/workspace/root-pullrequests-build; [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/164559/console).; ### Errors:; - [2023-01-17T22:06:46.312Z] FAILED: tree/tree/test/ElementStructDict.cxx tree/tree/test/libElementStructDict_rdict.pcm tree/tree/test/libElementStructDict.rootmap /System/Volumes/Data/build/workspace/root-pullrequests-build/build/tree/tree/test/ElementStructDict.cxx /System/Volumes/Data/build/workspace/root-pullrequests-build/build/tree/tree/test/libElementStructDict_rdict.pcm /System/Volumes/Data/build/workspace/root-pullrequests-build/build/tree/tree/test/libElementStructDict.rootmap . ### Warnings:; - [2023-01-17T22:04:54.836Z] /System/Volumes/Data/build/workspace/root-pullrequests-build/root/core/base/src/TDirectory.cxx:1245:7: warning: 'sprintf' is deprecated: This function is provided for compatibility reasons only. Due to security concerns inherent in the design of sprintf(3), it is highly recommended that you use snprintf(3) instead. [-Wdeprecated-declarations] ; - [2023-01-17T22:05:41.542Z] /System/Volumes/Data/build/workspace/root-pullrequests-build/build/ginclude/tbb/atomic.h:240:18: warning: volatile-qualified parameter type 'const volatile long long' is deprecated [-Wdeprecated-volatile] ; - [2023-01-17T22:05:41.542Z] /System/Volumes/Data/build/workspace/root-pullrequests-build/build/ginclude/tbb/atomic.h:240:18: warning: volatile-qualified parameter type 'const volatile unsigned long long' is deprecated [-Wdeprecated-volatile] ; - [2023-01-17T22:05:41.542Z] /System/Volumes/Data/build/workspace/root-pullrequests-build/build/ginclude/tbb/atomic.h:240:18: warning: volatile-qualified parameter type 'const volatile long' is deprecated [-Wdeprecated-volatile] ; - [2023-01-17T22:05:41.542Z] /System/Volumes/Data/build/workspace/root-pullrequests-build/build/ginclude/tbb/atomic.h:240:18: warning: volatile-qualified parameter type 'const volatile unsigned lo",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11874#issuecomment-1386144842:989,secur,security,989,https://root.cern,https://github.com/root-project/root/pull/11874#issuecomment-1386144842,1,['secur'],['security']
Security,ad '/etc/grid-security/certificates/709bed08.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/bffbd7d0.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/11b4a5a2.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/709bed08.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/11b4a5a2.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/MARGI.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/LIPCA.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/LIPCA.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/LIPCA.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/e13e0fcf.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/BYGCA.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/LIPCA.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/064e0aa9.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/be87b272.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/BYGCA.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/be87b272.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/e21dc0c0.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/064e0aa9.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/036b3363.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/BYGCA.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/036b3363.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/126f0acf.namespaces' from CURLOPT_CAPATH; ,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8092#issuecomment-840048181:48747,secur,security,48747,https://root.cern,https://github.com/root-project/root/issues/8092#issuecomment-840048181,2,"['certificate', 'secur']","['certificates', 'security']"
Security,ad '/etc/grid-security/certificates/DigiCertAssuredIDRootCA-Root.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/edca0fc0.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/DigiCertAssuredIDRootCA-Root.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/CESNET-CA-Root.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/CNRS2-Projets.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/DigiCertAssuredIDRootCA-Root.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/CESNET-CA-Root.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/DigiCertAssuredIDRootCA-Root.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/727146a8.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/b1159c4c.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/b1159c4c.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/727146a8.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/04f60c28.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/b4278411.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/04f60c28.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/CESNET-CA-Root.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/USERTrustECCCertificationAuthority.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/7ed47087.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/USERTrustECCCertificationAuthority.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/DigiCertGridRootCA-Root.crl_url' from CURLOPT_CAPATH; * failed to load '/e,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8092#issuecomment-840048181:2245,secur,security,2245,https://root.cern,https://github.com/root-project/root/issues/8092#issuecomment-840048181,2,"['certificate', 'secur']","['certificates', 'security']"
Security,ad '/etc/grid-security/certificates/LIPCA.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/e13e0fcf.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/BYGCA.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/LIPCA.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/064e0aa9.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/be87b272.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/BYGCA.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/be87b272.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/e21dc0c0.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/064e0aa9.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/036b3363.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/BYGCA.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/036b3363.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/126f0acf.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/HPCI.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/126f0acf.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/1f58a078.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/ANSPGrid.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/1f58a078.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/ANSPGrid.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/QuoVadis-Root-CA2G3.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/ANSPGrid.namespaces' from CURLOPT_CAPATH;,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8092#issuecomment-840048181:49483,secur,security,49483,https://root.cern,https://github.com/root-project/root/issues/8092#issuecomment-840048181,2,"['certificate', 'secur']","['certificates', 'security']"
Security,"adExecutor.hxx:115; #31 TTree::GetEntry (this=0x2c85d30, entry=0, getall=0) at /home/zhe/root/tree/tree/src/TTree.cxx:5489; #32 0x00000000004012fd in main (); //===========================================================. The lines below might hint at the cause of the crash.; You may get help by asking at the ROOT forum http://root.cern.ch/forum.; Only if you are really convinced it is a bug in ROOT then please submit a; report at http://root.cern.ch/bugs. Please post the ENTIRE stack trace; from above as an attachment in addition to anything else; that might help us fixing this issue.; //===========================================================; #6 __memcpy_sse2_unaligned () at ../sysdeps/x86_64/multiarch/memcpy-sse2-unaligned.S:37; #7 0x00007f1626206eb4 in memcpy (__len=1234974, __src=<optimized out>, __dest=0x7f1616858010) at /usr/include/x86_64-linux-gnu/bits/string3.h:53; #8 TFileCacheRead::ReadBufferExtNormal (this=0x2e97a30, buf=0x7f1616858010 <error: Cannot access memory at address 0x7f1616858010>, pos=286, len=1234974, loc=; 0x7ffdc1fcdf44: 0) at /home/zhe/root/io/io/src/TFileCacheRead.cxx:531; #9 0x00007f161a71794a in TTreeCacheUnzip::ReadBufferExt (this=0x2e97a30, buf=<optimized out>, pos=<optimized out>, len=<optimized out>, loc=<optimized out>) at /home/zhe/root/tree/tree/src/TTreeCacheUnzip.cxx:979; #10 0x00007f161a716b3c in TTreeCacheUnzip::GetUnzipBuffer (this=0x2e97a30, buf=0x7ffdc1fcdfe0, pos=286, len=1234974, free=0x7ffdc1fcdfdc) at /home/zhe/root/tree/tree/src/TTreeCacheUnzip.cxx:810; #11 0x00007f161a6a7d97 in TBasket::ReadBasketBuffers (this=this; entry=0x2e9b770, pos=286, len=1234974, file=file; entry=0x1e41b90) at /home/zhe/root/tree/tree/src/TBasket.cxx:474; #12 0x00007f161a6b22d0 in TBranch::GetBasket (this=this; entry=0x2f7f180, basketnumber=0) at /home/zhe/root/tree/tree/src/TBranch.cxx:1159; #13 0x00007f161a6b29db in TBranch::GetEntry (this=0x2f7f180, entry=0, getall=<optimized out>) at /home/zhe/root/tree/tree/src/TBranch.cxx:1285; #14",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1010#issuecomment-362400295:23774,access,access,23774,https://root.cern,https://github.com/root-project/root/pull/1010#issuecomment-362400295,1,['access'],['access']
Security,adc19.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/DFN-GridGermany-Root.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/6f071272.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/DFN-GridGermany-Root.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/REUNA-ca.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/6f071272.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/DFN-GridGermany-Root.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/TRGrid.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/e18bfb83.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/18bc5b05.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/REUNA-ca.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/18bc5b05.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/TRGrid.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/e18bfb83.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/1f3834d0.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/REUNA-ca.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/1f3834d0.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/RomanianGRID.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/RomanianGRID.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/REUNA-ca.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/RomanianGRID.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/e442e424.namespaces' from CUR,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8092#issuecomment-840048181:32752,secur,security,32752,https://root.cern,https://github.com/root-project/root/issues/8092#issuecomment-840048181,2,"['certificate', 'secur']","['certificates', 'security']"
Security,"aded-virtual -fsigned-char -pthread -fPIC -fvisibility-inlines-hidden -g -O2 -ffile-prefix-map=/<<PKGBUILDDIR>>=. -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2 -fdiagnostics-color=always -std=c++17 -Wno-implicit-fallthrough -Wno-noexcept-type -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread -fno-strict-aliasing -Wwrite-strings -Wno-shadow -Wno-unused-parameter -Wno-deprecated-declarations -std=c++17 -fno-rtti -MD -MT core/dictgen/CMakeFiles/Dictgen.dir/src/rootcling_impl.cxx.o -MF core/dictgen/CMakeFiles/Dictgen.dir/src/rootcling_impl.cxx.o.d -o core/dictgen/CMakeFiles/Dictgen.dir/src/rootcling_impl.cxx.o -c '/<<PKGBUILDDIR>>/core/dictgen/src/rootcling_impl.cxx'; <<snip>>; [6107/8663] : && /usr/lib/ccache/c++ -fPIC -g -O2 -ffile-prefix-map=/<<PKGBUILDDIR>>=. -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2 -fdiagnostics-color=always -std=c++17 -Wno-implicit-fallthrough -Wno-noexcept-type -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread -Wl,-z,relro -Wl,-z,now -Wl,--no-undefined -Wl,--hash-style=""both"" -shared -Wl,-soname,libCling.so.6.27 -o lib/libCling.so.6.27.99 core/clingutils/CMakeFiles/ClingUtils.dir/src/RStl.cxx.o core/clingutils/CMakeFiles/ClingUtils.dir/src/TClingUtils.cxx.o core/dictgen/CMakeFiles/Dictgen.dir/src/BaseSelectionRule.cxx.o core/dictgen/CMakeFiles/Dictgen.dir/src/ClassSelectionRule.cxx.o core/dictgen/CMakeFiles/Dictgen.dir/src/DictSelectionReader.cxx.o core/dictgen/CMakeFiles/Dictgen.dir/src/LinkdefReader.cxx.o core/dictgen/CMakeFiles/Dictgen.dir/src/rootcling_impl.cxx.o core/dictgen/CMakeFiles/Dictgen.dir/src/Scanner.cxx.o core/dictgen/CMakeFiles/Dictgen.dir/src/SelectionRules.cxx.o core/dictgen/CMakeFiles/Dictgen.dir/src/TModuleGenerator.cxx.o core/dictgen/CMakeFiles/Dictgen.dir/src/VariableSelectionRule.cxx.o core/dictgen/CMakeFiles/Dictgen.dir/src/XMLReader.cxx.o core/metacling/src/CMakeFiles/MetaCling.dir/rootclingTCli",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12152:2309,secur,security,2309,https://root.cern,https://github.com/root-project/root/issues/12152,2,"['hash', 'secur']","['hash-style', 'security']"
Security,agManager.cxx:3335; 24: expanded from macro 'gVirtualX' in /opt/root_src/core/base/inc/TVirtualX.h:338; 25: Taking false branch in /opt/root_src/gui/guibuilder/src/TGuiBldDragManager.cxx:3335; 26: 'file' is non-null in /opt/root_src/gui/guibuilder/src/TGuiBldDragManager.cxx:3336; 27: '?' condition is true in /opt/root_src/gui/guibuilder/src/TGuiBldDragManager.cxx:3336; 28: Called C++ object pointer is null in /opt/root_src/gui/guibuilder/src/TGuiBldDragManager.cxx:3338; /opt/root_src/gui/guibuilder/src/TGuiBldDragManager.cxx:3806:7: warning: Value stored to 'ok' is never read [clang-analyzer-deadcode.DeadStores]; 1: Value stored to 'ok' is never read in /opt/root_src/gui/guibuilder/src/TGuiBldDragManager.cxx:3806; /opt/root_src/gui/guihtml/src/TGHtmlDraw.cxx:149:4: warning: Call to function 'strcat' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcat'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]; 1: Call to function 'strcat' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcat'. CWE-119 in /opt/root_src/gui/guihtml/src/TGHtmlDraw.cxx:149; /opt/root_src/gui/guihtml/src/TGHtmlDraw.cxx:208:4: warning: Call to function 'strcat' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcat'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]; 1: Call to function 'strcat' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcat'. CWE-119 in /opt/root_src/gui/guihtml/src/TGHtmlDraw.cxx:208; /opt/root_src/gui/guihtml/src/TGHtmlIndex.cxx:394:13: warning: Value stored to 'p' is never read [clang-analyzer-deadcode.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7533:77314,secur,security,77314,https://root.cern,https://github.com/root-project/root/issues/7533,1,['secur'],['security']
Security,"ah ... thanks, I missed that. So ping works from lxplus but I still cannot do a curl to ***@***.***. regards,; Asoka. > On May 12, 2021, at 11:11 AM, Di Qing ***@***.***> wrote:; > ; > Asoka,; > ; > There was a mistake in your ping command, did you see the 'ping' in the middle, so actually it was pinging host ping. ; > ; > Regards,; > ; > Di; > ; > On 2021-05-12 10:43 a.m., Asoka De Silva wrote:; >> hmm ... that was really unexpected for me for lxplus ...; >> ; >> ***@***.*** ~]$ ping -c 10 ping webdav.lcg.triumf.ca <http://webdav.lcg.triumf.ca/>; >> PING (137.138.28.175) 56(124) bytes of data.; >> ; >> --- ping statistics ---; >> 10 packets transmitted, 0 received, 100% packet loss, time 8999ms; >> ; >> ***@***.*** ~]$ ; >> ; >> Vitaliy, shouldn't we expect that to be accessible from lxplus ?; >> ; >> regards,; >> Asoka; >> ; >>> On May 12, 2021, at 10:37 AM, Di Qing ***@***.*** ***@***.***>> wrote:; >>> ; >>> Maybe the connections were from commodity network? Are you able to ping webdav.lcg.triumf.ca <http://webdav.lcg.triumf.ca/>?; >>> ; >>> Thanks,; >>> ; >>> Di; >>> ; >>>> On May 12, 2021, at 10:29 AM, Asoka De Silva ***@***.*** ***@***.***>> wrote:; >>>> ; >>>> ﻿ Hi Axel,; >>>> ; >>>> I don't know but I'll add Simon and Di who are the Tier-1 experts and may have ideas.; >>>> ; >>>> Simon and Di, Axel has this issue and me a similar one - any ideas ?; >>>> ; >>>> ; >>>>> ; >>>>>> s I crosscheck (to see whether it's related to the Davix redirect issue #8155 <https://can01.safelinks.protection.outlook.com/?url=https%3A%2F%2Fgithub.com%2Froot-project%2Froot%2Fissues%2F8155&data=04%7C01%7Cdqing%40triumf.ca%7Cb7cde810efc1452a4eab08d9156d8727%7Cc20535109cb34679a2d38f442e03b587%7C1%7C0%7C637564382428498460%7CUnknown%7CTWFpbGZsb3d8eyJWIjoiMC4wLjAwMDAiLCJQIjoiV2luMzIiLCJBTiI6Ik1haWwiLCJXVCI6Mn0%3D%7C1000&sdata=uCliumeh1X0KTsDzvHcojQm9qfvqZ96DsLCqoTBDdgs%3D&reserved=0> ) I tried with curl but I get; >>>>>> ; >>>>>> $ curl -v https://webdav.lcg.triumf.ca:2880/atlas/atlaslo",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8092#issuecomment-839991525:780,access,accessible,780,https://root.cern,https://github.com/root-project/root/issues/8092#issuecomment-839991525,1,['access'],['accessible']
Security,ailed to load '/etc/grid-security/certificates/617ff41b.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/67707166.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/67707166.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/QuoVadis-Grid-ICA-G2.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/DigiCertGridTrustCA-Classic.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/DigiCertGridTrustCA-Classic.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/MYIFAM.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/PKIUNAMgrid.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/DigiCertGridTrustCA-Classic.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/QuoVadis-Grid-ICA-G2.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/MYIFAM.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/KEK.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/DigiCertGridTrustCA-Classic.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/TERENAeSciencePersonalCA3.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/e91bd360.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/TERENAeSciencePersonalCA3.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/2f2f573f.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/TERENAeSciencePersonalCA3.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/KEK.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/MYIFAM.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8092#issuecomment-840048181:27039,secur,security,27039,https://root.cern,https://github.com/root-project/root/issues/8092#issuecomment-840048181,2,"['certificate', 'secur']","['certificates', 'security']"
Security,ailed to load '/etc/grid-security/certificates/CNRS2-Grid-FR.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/d4c339cb.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/d6325660.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/InCommon-IGTF-Server-CA.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/UKeScienceCA-2B.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/InCommon-IGTF-Server-CA.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/d11f973e.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/82c2b224.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/InCommon-IGTF-Server-CA.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/d11f973e.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/ba240aa8.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/f5f0dfc2.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/4339b4bc.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/3cc00941.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/68aa9d51.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/5168735f.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/KENETCA-ICA-2015.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/CERN-GridCA.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/KENETCA-ICA-2015.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/CERN-GridCA.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/62c4a178.name,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8092#issuecomment-840048181:11524,secur,security,11524,https://root.cern,https://github.com/root-project/root/issues/8092#issuecomment-840048181,2,"['certificate', 'secur']","['certificates', 'security']"
Security,ailed to load '/etc/grid-security/certificates/GEANTeScienceSSLCA4.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/GEANTeSciencePersonalECCCA4.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/GEANTeScienceSSLCA4.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/e9cc934f.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/GEANTeSciencePersonalECCCA4.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/GEANTeScienceSSLCA4.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/c141eb07.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/e9cc934f.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/c141eb07.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/d9343743.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/3e0d64db.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/3e0d64db.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/b85d64aa.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/DigitalTrustAssuredCAG4-runbytheissuer.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/DigitalTrustAssuredCAG4-runbytheissuer.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/5249c1ef.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/DigitalTrustAssuredCAG4-runbytheissuer.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/DigitalTrustSecureCAG4-runbytheissuer.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/5d9ea26d.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/DigitalTrus,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8092#issuecomment-840048181:18713,secur,security,18713,https://root.cern,https://github.com/root-project/root/issues/8092#issuecomment-840048181,2,"['certificate', 'secur']","['certificates', 'security']"
Security,ailed to load '/etc/grid-security/certificates/b85d64aa.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/598b583e.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/DigiCertGridCA-1G2-Classic-2015.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/a603ba9c.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/82c2b224.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/d41ec82f.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/DigiCertGridCA-1-Classic.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/bd43b60c.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/DigiCertGridCA-1-Classic.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/7b384752.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/DigiCertGridCA-1-Classic.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/7b384752.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/DigitalTrustSecureCAG4-runbytheissuer.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/DigiCertGridCA-1-Classic.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/598b583e.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/c7a717ce.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/c7a717ce.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/GEANTeScienceSSLECCCA4.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/8a21c0da.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/a883462e.namespaces' from CURLOPT_CAPATH; * failed to load,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8092#issuecomment-840048181:16424,secur,security,16424,https://root.cern,https://github.com/root-project/root/issues/8092#issuecomment-840048181,2,"['certificate', 'secur']","['certificates', 'security']"
Security,ak symbol 'typeinfo for TMatrixTBase&lt;double&gt;' from file 'math/matrix/CMakeFiles/Matrix.dir/src/TMatrixTBase.cxx.o' means the weak symbol cannot be overridden at runtime. This was likely caused by different translation units being compiled with different visibility settings. ; - [2023-07-01T09:00:58.022Z] ld: warning: direct access in function 'ROOT::GenerateInitInstanceLocal(TMatrixTBase&lt;double&gt; const*)' from file 'math/matrix/CMakeFiles/G__Matrix.dir/G__Matrix.cxx.o' to global weak symbol 'typeinfo for TMatrixTBase&lt;double&gt;' from file 'math/matrix/CMakeFiles/Matrix.dir/src/TMatrixTBase.cxx.o' means the weak symbol cannot be overridden at runtime. This was likely caused by different translation units being compiled with different visibility settings. ; - [2023-07-01T09:00:58.023Z] ld: warning: direct access in function 'ROOT::GenerateInitInstanceLocal(TVectorT&lt;float&gt; const*)' from file 'math/matrix/CMakeFiles/G__Matrix.dir/G__Matrix.cxx.o' to global weak symbol 'typeinfo for TVectorT&lt;float&gt;' from file 'math/matrix/CMakeFiles/Matrix.dir/src/TVectorT.cxx.o' means the weak symbol cannot be overridden at runtime. This was likely caused by different translation units being compiled with different visibility settings. ; - [2023-07-01T09:00:58.023Z] ld: warning: direct access in function 'ROOT::GenerateInitInstanceLocal(TVectorT&lt;float&gt; const*)' from file 'math/matrix/CMakeFiles/G__Matrix.dir/G__Matrix.cxx.o' to global weak symbol 'typeinfo for TVectorT&lt;float&gt;' from file 'math/matrix/CMakeFiles/Matrix.dir/src/TVectorT.cxx.o' means the weak symbol cannot be overridden at runtime. This was likely caused by different translation units being compiled with different visibility settings. . And 126 more. ### Failing tests:; - [projectroot.roottest.python.numba.roottest_python_numba_numba](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/178633/testReport/projectroot.roottest.python/numba/roottest_python_numba_numba/),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13139#issuecomment-1615776009:4774,access,access,4774,https://root.cern,https://github.com/root-project/root/pull/13139#issuecomment-1615776009,1,['access'],['access']
Security,ak symbol 'typeinfo for TMatrixTBase&lt;double&gt;' from file 'math/matrix/CMakeFiles/Matrix.dir/src/TMatrixTBase.cxx.o' means the weak symbol cannot be overridden at runtime. This was likely caused by different translation units being compiled with different visibility settings. ; - [2023-07-03T12:52:31.604Z] ld: warning: direct access in function 'ROOT::GenerateInitInstanceLocal(TMatrixTBase&lt;double&gt; const*)' from file 'math/matrix/CMakeFiles/G__Matrix.dir/G__Matrix.cxx.o' to global weak symbol 'typeinfo for TMatrixTBase&lt;double&gt;' from file 'math/matrix/CMakeFiles/Matrix.dir/src/TMatrixTBase.cxx.o' means the weak symbol cannot be overridden at runtime. This was likely caused by different translation units being compiled with different visibility settings. ; - [2023-07-03T12:52:31.604Z] ld: warning: direct access in function 'ROOT::GenerateInitInstanceLocal(TVectorT&lt;float&gt; const*)' from file 'math/matrix/CMakeFiles/G__Matrix.dir/G__Matrix.cxx.o' to global weak symbol 'typeinfo for TVectorT&lt;float&gt;' from file 'math/matrix/CMakeFiles/Matrix.dir/src/TVectorT.cxx.o' means the weak symbol cannot be overridden at runtime. This was likely caused by different translation units being compiled with different visibility settings. ; - [2023-07-03T12:52:31.604Z] ld: warning: direct access in function 'ROOT::GenerateInitInstanceLocal(TVectorT&lt;float&gt; const*)' from file 'math/matrix/CMakeFiles/G__Matrix.dir/G__Matrix.cxx.o' to global weak symbol 'typeinfo for TVectorT&lt;float&gt;' from file 'math/matrix/CMakeFiles/Matrix.dir/src/TVectorT.cxx.o' means the weak symbol cannot be overridden at runtime. This was likely caused by different translation units being compiled with different visibility settings. . And 126 more. ### Failing tests:; - [projectroot.roottest.python.numba.roottest_python_numba_numba](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/178723/testReport/projectroot.roottest.python/numba/roottest_python_numba_numba/),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13139#issuecomment-1618264564:4774,access,access,4774,https://root.cern,https://github.com/root-project/root/pull/13139#issuecomment-1618264564,1,['access'],['access']
Security,"ake --build . --target install -- -j4`. ### Setup; <!--; 1. ROOT version; 8. Operating system; 9. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->. ### Additional context; <!--; Add any other context about the problem here.; -->; 1. `gcc -v`; ```sh; Using built-in specs.; COLLECT_GCC=gcc; COLLECT_LTO_WRAPPER=/usr/lib/gcc/x86_64-pc-linux-gnu/11.2.0/lto-wrapper; Target: x86_64-pc-linux-gnu; Configured with: /build/gcc/src/gcc/configure --enable-languages=c,c++,ada,fortran,go,lto,objc,obj-c++,d --enable-bootstrap --prefix=/usr --libdir=/usr/lib --libexecdir=/usr/lib --mandir=/usr/share/man --infodir=/usr/share/info --with-bugurl=https://bugs.archlinux.org/ --with-linker-hash-style=gnu --with-system-zlib --enable-__cxa_atexit --enable-cet=auto --enable-checking=release --enable-clocale=gnu --enable-default-pie --enable-default-ssp --enable-gnu-indirect-function --enable-gnu-unique-object --enable-linker-build-id --enable-lto --enable-multilib --enable-plugin --enable-shared --enable-threads=posix --disable-libssp --disable-libstdcxx-pch --disable-werror --with-build-config=bootstrap-lto --enable-link-serialization=1 gdc_include_dir=/usr/include/dlang/gdc; Thread model: posix; Supported LTO compression algorithms: zlib zstd; gcc version 11.2.0 (GCC); ```; 2. `clang -v`; ```sh; clang version 13.0.1; Target: x86_64-pc-linux-gnu; Thread model: posix; InstalledDir: /usr/bin; Found candidate GCC installation: /usr/bin/../lib/gcc/x86_64-pc-linux-gnu/11.2.0; Found candidate GCC installation: /usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/11.2.0; Selected GCC installation: /usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/11.2.0; Candidate multilib: .;@m64; Candidate multilib: 32;@m32; Selected multilib: .;@m64; ```; 3. `cat /etc/*release`; ```sh; DISTRIB_ID=""Arch""; DISTRIB_RELEASE=""rolling""; DISTRIB_DESCRIPTION=""Arch Linux""; NAME=""Arch Linux""; PRETTY_NAME=""Arch Linux""; ID=arch; BUILD_ID=rolling; ANSI_COLOR=""38;2;23;147;209""; HOME_URL=""https://arch",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10528:30785,hash,hash-style,30785,https://root.cern,https://github.com/root-project/root/issues/10528,1,['hash'],['hash-style']
Security,aking true branch in /opt/root_src/core/base/src/TROOT.cxx:1168; 30: The right operand of '+' is a garbage value in /opt/root_src/core/base/src/TROOT.cxx:1169; /opt/root_src/core/base/src/TRegexp.cxx:172:10: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]; 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/core/base/src/TRegexp.cxx:172; /opt/root_src/core/base/src/TRegexp.cxx:188:10: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]; 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/core/base/src/TRegexp.cxx:188; /opt/root_src/core/base/src/TRegexp.cxx:273:11: warning: 3rd function call argument is an uninitialized value [clang-analyzer-core.CallAndMessage]; 1: Calling 'TString::operator()' in /opt/root_src/core/base/src/TRegexp.cxx:281; 2: 'len' declared without an initial value in /opt/root_src/core/base/src/TRegexp.cxx:271; 3: Calling 'TString::Index' in /opt/root_src/core/base/src/TRegexp.cxx:272; 4: Calling 'TRegexp::Index' in /opt/root_src/core/base/src/TRegexp.cxx:263; 5: Assuming field 'fStat' is equal to kOK in /opt/root_src/core/base/src/TRegexp.cxx:211; 6: Taking false branch in /opt/root_src/core/base/src/TRegexp.cxx:211; 7: Assuming 'slen' is < 'i' in /opt/root_src/core/base/src/TRegexp.cxx:,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7412:115634,secur,security,115634,https://root.cern,https://github.com/root-project/root/issues/7412,1,['secur'],['security']
Security,aking true branch in /opt/root_src/core/base/src/TROOT.cxx:1168; 30: The right operand of '+' is a garbage value in /opt/root_src/core/base/src/TROOT.cxx:1169; /opt/root_src/core/base/src/TRegexp.cxx:172:10: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]; 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/core/base/src/TRegexp.cxx:172; /opt/root_src/core/base/src/TRegexp.cxx:188:10: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]; 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/core/base/src/TRegexp.cxx:188; /opt/root_src/core/base/src/TStorage.cxx:209:4: warning: Null pointer passed to 1st parameter expecting 'nonnull' [clang-analyzer-core.NonNullParamChecker]; 1: Assuming 'fgReAllocHook' is null in /opt/root_src/core/base/src/TStorage.cxx:192; 2: Left side of '&&' is false in /opt/root_src/core/base/src/TStorage.cxx:192; 3: 'vp' initialized here in /opt/root_src/core/base/src/TStorage.cxx:199; 4: Assuming 'vp' is equal to null in /opt/root_src/core/base/src/TStorage.cxx:203; 5: Taking true branch in /opt/root_src/core/base/src/TStorage.cxx:203; 6: Assuming 'ovp' is not equal to null in /opt/root_src/core/base/src/TStorage.cxx:206; 7: Taking false branch in /opt/root_src/core/base/src/TStorage.cxx:,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7412#issuecomment-796268286:9234,secur,security,9234,https://root.cern,https://github.com/root-project/root/issues/7412#issuecomment-796268286,1,['secur'],['security']
Security,"al read is modeled as an error. This would require `ROOT::ReadFromNetwork()` to force the ""immediate exception"" state to a certain value and reset it later - which is error prone and awkward; it shows that we use a global state that needs local knowledge. If ""immediate exception"" is false and `ROOT::ReadFromNetwork()` captures the error and returns it, same for all subsequent frames but `ROOT::RNTupleIterator::operator++()` (which cannot return a `RStatus`), then only `ROOT::RNTupleIterator::operator++()` will throw. This would shorten the stack trace shown by a potential crash to; ```; ROOT::RNTupleIterator::operator++(); UserCode::modelBackground(); ```; - we would not know the stack trace that actually triggered the exception. We would likely have some info captured in the error message (e.g. ""ROOT::ReadFromNetwork() failed to call linux_read_from_network()""), but we'd miss the connection, i.e. `ROOT::RNetFile::Read()`. One way of handling that is by injecting state:; ```; RStatus ROOT::RNetFile::Read() {; RStatus res(ROOT::ReadFromNetwork());; ...; return R__STATUS_PASSTHROUGH(res); // registers res to have passed through ""ROOT::RNetFile::Read()"" by emplacing a frame string *if* in error state.; ```; That's similar to [`llvm::PrettyStackTraceEntry`](https://llvm.org/doxygen/classllvm_1_1PrettyStackTraceEntry.html), see usage [here](https://github.com/llvm/llvm-project/blob/df494f7512b0ecebdf3d7be97695a1b6278c0336/clang/lib/CodeGen/BackendUtil.cpp#L909). FYI, there has been a multi-hundred email discussion on exactly this topic on the C++ committee mailing list, with pretty much two camps: allow error code handling (with potential exceptions) versus just always throw in case of errors, and if that's slow, go fix the compiler / runtime library implementations (but ABI break). **TL;DR**:; I agree that exceptions instead of error codes allow for nicer code. I don't think that we can have that nice code when we introduce `RStatus`, because the developer of that code m",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4683#issuecomment-564972730:1598,inject,injecting,1598,https://root.cern,https://github.com/root-project/root/pull/4683#issuecomment-564972730,1,['inject'],['injecting']
Security,al weak symbol 'clang::TemplateTemplateParmDecl::getDefaultArgument() const::NoneLoc' from file '../dictgen/CMakeFiles/Dictgen.dir/src/DictSelectionReader.cxx.o' means the weak symbol cannot be overridden at runtime. This was likely caused by different translation units being compiled with different visibility settings.; ld: warning: direct access in function 'clang::RecursiveASTVisitor<cling::AutoFixer>::TraverseTemplateTemplateParmDecl(clang::TemplateTemplateParmDecl*)' from file '../../interpreter/llvm/src/lib/libclingInterpreter.a(AutoSynthesizer.cpp.o)' to global weak symbol 'guard variable for clang::TemplateTemplateParmDecl::getDefaultArgument() const::NoneLoc' from file '../dictgen/CMakeFiles/Dictgen.dir/src/DictSelectionReader.cxx.o' means the weak symbol cannot be overridden at runtime. This was likely caused by different translation units being compiled with different visibility settings.; ld: warning: direct access in function 'clang::RecursiveASTVisitor<cling::AutoLoadingVisitor>::TraverseTemplateTemplateParmDecl(clang::TemplateTemplateParmDecl*)' from file '../../interpreter/llvm/src/lib/libclingInterpreter.a(AutoloadCallback.cpp.o)' to global weak symbol 'guard variable for clang::TemplateTemplateParmDecl::getDefaultArgument() const::NoneLoc' from file '../dictgen/CMakeFiles/Dictgen.dir/src/DictSelectionReader.cxx.o' means the weak symbol cannot be overridden at runtime. This was likely caused by different translation units being compiled with different visibility settings.; ld: warning: direct access in function 'clang::RecursiveASTVisitor<cling::AutoLoadingVisitor>::TraverseTemplateTemplateParmDecl(clang::TemplateTemplateParmDecl*)' from file '../../interpreter/llvm/src/lib/libclingInterpreter.a(AutoloadCallback.cpp.o)' to global weak symbol 'clang::TemplateTemplateParmDecl::getDefaultArgument() const::NoneLoc' from file '../dictgen/CMakeFiles/Dictgen.dir/src/DictSelectionReader.cxx.o' means the weak symbol cannot be overridden at runtime. This was l,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12156#issuecomment-1512021455:4174,access,access,4174,https://root.cern,https://github.com/root-project/root/issues/12156#issuecomment-1512021455,2,['access'],['access']
Security,al weak symbol 'guard variable for clang::TemplateTemplateParmDecl::getDefaultArgument() const::NoneLoc' from file '../dictgen/CMakeFiles/Dictgen.dir/src/DictSelectionReader.cxx.o' means the weak symbol cannot be overridden at runtime. This was likely caused by different translation units being compiled with different visibility settings.; ld: warning: direct access in function 'clang::RecursiveASTVisitor<cling::(anonymous namespace)::StaticVarCollector>::TraverseDecl(clang::Decl*)' from file '../../interpreter/llvm/src/lib/libclingInterpreter.a(DeclUnloader.cpp.o)' to global weak symbol 'guard variable for clang::TemplateTemplateParmDecl::getDefaultArgument() const::NoneLoc' from file '../dictgen/CMakeFiles/Dictgen.dir/src/DictSelectionReader.cxx.o' means the weak symbol cannot be overridden at runtime. This was likely caused by different translation units being compiled with different visibility settings.; ld: warning: direct access in function 'clang::RecursiveASTVisitor<cling::(anonymous namespace)::StaticVarCollector>::TraverseDecl(clang::Decl*)' from file '../../interpreter/llvm/src/lib/libclingInterpreter.a(DeclUnloader.cpp.o)' to global weak symbol 'clang::TemplateTemplateParmDecl::getDefaultArgument() const::NoneLoc' from file '../dictgen/CMakeFiles/Dictgen.dir/src/DictSelectionReader.cxx.o' means the weak symbol cannot be overridden at runtime. This was likely caused by different translation units being compiled with different visibility settings.; ld: warning: direct access in function 'clang::RecursiveASTVisitor<cling::(anonymous namespace)::StaticVarCollector>::TraverseDecl(clang::Decl*)' from file '../../interpreter/llvm/src/lib/libclingInterpreter.a(DeclUnloader.cpp.o)' to global weak symbol 'clang::TemplateTemplateParmDecl::getDefaultArgument() const::NoneLoc' from file '../dictgen/CMakeFiles/Dictgen.dir/src/DictSelectionReader.cxx.o' means the weak symbol cannot be overridden at runtime. This was likely caused by different translation units being co,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12156#issuecomment-1512021455:13016,access,access,13016,https://root.cern,https://github.com/root-project/root/issues/12156#issuecomment-1512021455,2,['access'],['access']
Security,alTrustSecureCAG4-runbytheissuer.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/DigiCertGridCA-1G2-Classic-2015.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/DigitalTrustSecureCAG4-runbytheissuer.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/DigiCertGridCA-1G2-Classic-2015.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/d41ec82f.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/b85d64aa.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/598b583e.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/DigiCertGridCA-1G2-Classic-2015.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/a603ba9c.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/82c2b224.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/d41ec82f.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/DigiCertGridCA-1-Classic.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/bd43b60c.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/DigiCertGridCA-1-Classic.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/7b384752.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/DigiCertGridCA-1-Classic.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/7b384752.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/DigitalTrustSecureCAG4-runbytheissuer.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/DigiCertGridCA-1-Classic.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/598b583e.signing_policy' from CURLOPT,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8092#issuecomment-840048181:15937,secur,security,15937,https://root.cern,https://github.com/root-project/root/issues/8092#issuecomment-840048181,2,"['certificate', 'secur']","['certificates', 'security']"
Security,all of the macos failure are either pre-existing (xrootd authentication) or spurrious (build system failure due to ar round down the modified timestamp).,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6062#issuecomment-673013104:57,authenticat,authentication,57,https://root.cern,https://github.com/root-project/root/pull/6062#issuecomment-673013104,1,['authenticat'],['authentication']
Security,all to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:12186; /opt/root_src/net/http/civetweb/civetweb.c:12187:5: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:12187; /opt/root_src/net/http/civetweb/civetweb.c:12222:5: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:12222; /opt/root_src/net/http/civetweb/civetweb.c:12224:5: warning: Call to function 'memset' is i,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7528:53834,secur,security,53834,https://root.cern,https://github.com/root-project/root/issues/7528,1,['secur'],['security']
Security,all to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:12187; /opt/root_src/net/http/civetweb/civetweb.c:12222:5: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:12222; /opt/root_src/net/http/civetweb/civetweb.c:12224:5: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:12224; /opt/root_src/net/http/civetweb/civetweb.c:12234:5: warning: Call to function 'memcpy' is i,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7528:54491,secur,security,54491,https://root.cern,https://github.com/root-project/root/issues/7528,1,['secur'],['security']
Security,all to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:12222; /opt/root_src/net/http/civetweb/civetweb.c:12224:5: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:12224; /opt/root_src/net/http/civetweb/civetweb.c:12234:5: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:12234; /opt/root_src/net/http/civetweb/civetweb.c:12278:5: warning: Call to function 'memcpy' is i,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7528:55148,secur,security,55148,https://root.cern,https://github.com/root-project/root/issues/7528,1,['secur'],['security']
Security,all to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:12234; /opt/root_src/net/http/civetweb/civetweb.c:12278:5: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:12278; /opt/root_src/net/http/civetweb/civetweb.c:12281:5: warning: Call to function 'memmove' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memmove_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memmove' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memmove_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:12281; /opt/root_src/net/http/civetweb/civetweb.c:12447:3: warning: Call to function 'memcpy' ,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7528:56462,secur,security,56462,https://root.cern,https://github.com/root-project/root/issues/7528,1,['secur'],['security']
Security,all to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:12447; /opt/root_src/net/http/civetweb/civetweb.c:12454:3: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:12454; /opt/root_src/net/http/civetweb/civetweb.c:12455:3: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:12455; /opt/root_src/net/http/civetweb/civetweb.c:12462:3: warning: Call to function 'memcpy' is i,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7528:58437,secur,security,58437,https://root.cern,https://github.com/root-project/root/issues/7528,1,['secur'],['security']
Security,all to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:12454; /opt/root_src/net/http/civetweb/civetweb.c:12455:3: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:12455; /opt/root_src/net/http/civetweb/civetweb.c:12462:3: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:12462; /opt/root_src/net/http/civetweb/civetweb.c:12834:8: warning: Call to function 'sscanf' is i,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7528:59094,secur,security,59094,https://root.cern,https://github.com/root-project/root/issues/7528,1,['secur'],['security']
Security,all to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:12455; /opt/root_src/net/http/civetweb/civetweb.c:12462:3: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:12462; /opt/root_src/net/http/civetweb/civetweb.c:12834:8: warning: Call to function 'sscanf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sscanf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'sscanf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sscanf_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:12834; /opt/root_src/net/http/civetweb/civetweb.c:12835:11: warning: Call to function 'sscanf' is ,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7528:59751,secur,security,59751,https://root.cern,https://github.com/root-project/root/issues/7528,1,['secur'],['security']
Security,all to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:12462; /opt/root_src/net/http/civetweb/civetweb.c:12834:8: warning: Call to function 'sscanf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sscanf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'sscanf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sscanf_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:12834; /opt/root_src/net/http/civetweb/civetweb.c:12835:11: warning: Call to function 'sscanf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sscanf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'sscanf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sscanf_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:12835; /opt/root_src/net/http/civetweb/civetweb.c:12859:29: warning: Call to function 'sscanf' is,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7528:60408,secur,security,60408,https://root.cern,https://github.com/root-project/root/issues/7528,1,['secur'],['security']
Security,all to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:14332; /opt/root_src/net/http/civetweb/civetweb.c:14337:8: warning: Call to function 'sscanf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sscanf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'sscanf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sscanf_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:14337; /opt/root_src/net/http/civetweb/civetweb.c:14471:2: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:14471; /opt/root_src/net/http/civetweb/civetweb.c:14472:2: warning: Call to function 'memset' is i,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7528:65668,secur,security,65668,https://root.cern,https://github.com/root-project/root/issues/7528,1,['secur'],['security']
Security,all to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:6620; /opt/root_src/net/http/civetweb/civetweb.c:6829:2: warning: Call to function 'sprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'sprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:6829; /opt/root_src/net/http/civetweb/civetweb.c:6884:9: warning: Call to function 'vsnprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'vsnprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: expanded from macro 'vsnprintf_impl' in /opt/root_src/net/http/civetweb/civetweb.c:781; 2: Call to function 'vsnprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'vsnprintf_s' in case of C11 in /opt/root_src/net/http/civetweb/civetwe,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7528:28187,secur,security,28187,https://root.cern,https://github.com/root-project/root/issues/7528,1,['secur'],['security']
Security,all to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:7535; /opt/root_src/net/http/civetweb/civetweb.c:7556:5: warning: Call to function 'memmove' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memmove_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memmove' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memmove_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:7556; /opt/root_src/net/http/civetweb/civetweb.c:7631:2: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:7631; /opt/root_src/net/http/civetweb/civetweb.c:7708:7: warning: Call to function 'sscanf' is inse,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7528:34595,secur,security,34595,https://root.cern,https://github.com/root-project/root/issues/7528,1,['secur'],['security']
Security,all to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:10419; /opt/root_src/net/http/civetweb/civetweb.c:11294:2: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:11294; /opt/root_src/net/http/civetweb/civetweb.c:11508:2: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:11508; /opt/root_src/net/http/civetweb/civetweb.c:11591:6: warning: Call to function 'sscanf' is i,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7528:48575,secur,security,48575,https://root.cern,https://github.com/root-project/root/issues/7528,1,['secur'],['security']
Security,all to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:11294; /opt/root_src/net/http/civetweb/civetweb.c:11508:2: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:11508; /opt/root_src/net/http/civetweb/civetweb.c:11591:6: warning: Call to function 'sscanf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sscanf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'sscanf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sscanf_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:11591; /opt/root_src/net/http/civetweb/civetweb.c:11602:13: warning: Call to function 'sscanf' is ,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7528:49232,secur,security,49232,https://root.cern,https://github.com/root-project/root/issues/7528,1,['secur'],['security']
Security,all to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:11508; /opt/root_src/net/http/civetweb/civetweb.c:11591:6: warning: Call to function 'sscanf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sscanf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'sscanf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sscanf_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:11591; /opt/root_src/net/http/civetweb/civetweb.c:11602:13: warning: Call to function 'sscanf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sscanf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'sscanf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sscanf_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:11602; /opt/root_src/net/http/civetweb/civetweb.c:11609:14: warning: Call to function 'sscanf' is,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7528:49889,secur,security,49889,https://root.cern,https://github.com/root-project/root/issues/7528,1,['secur'],['security']
Security,all to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:12224; /opt/root_src/net/http/civetweb/civetweb.c:12234:5: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:12234; /opt/root_src/net/http/civetweb/civetweb.c:12278:5: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:12278; /opt/root_src/net/http/civetweb/civetweb.c:12281:5: warning: Call to function 'memmove' is ,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7528:55805,secur,security,55805,https://root.cern,https://github.com/root-project/root/issues/7528,1,['secur'],['security']
Security,all to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:14262; /opt/root_src/net/http/civetweb/civetweb.c:14271:6: warning: Call to function 'sscanf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sscanf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'sscanf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sscanf_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:14271; /opt/root_src/net/http/civetweb/civetweb.c:14291:17: warning: Call to function 'sscanf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sscanf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'sscanf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sscanf_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:14291; /opt/root_src/net/http/civetweb/civetweb.c:14308:13: warning: Call to function 'sscanf' is,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7528:63038,secur,security,63038,https://root.cern,https://github.com/root-project/root/issues/7528,1,['secur'],['security']
Security,all to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:14471; /opt/root_src/net/http/civetweb/civetweb.c:14472:2: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:14472; /opt/root_src/net/http/civetweb/civetweb.c:16593:2: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:16593; /opt/root_src/net/http/civetweb/civetweb.c:17184:2: warning: Call to function 'memset' is i,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7528:66982,secur,security,66982,https://root.cern,https://github.com/root-project/root/issues/7528,1,['secur'],['security']
Security,all to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:14472; /opt/root_src/net/http/civetweb/civetweb.c:16593:2: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:16593; /opt/root_src/net/http/civetweb/civetweb.c:17184:2: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:17184; /opt/root_src/net/http/civetweb/civetweb.c:17324:2: warning: Call to function 'memcpy' is i,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7528:67639,secur,security,67639,https://root.cern,https://github.com/root-project/root/issues/7528,1,['secur'],['security']
Security,all to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:16593; /opt/root_src/net/http/civetweb/civetweb.c:17184:2: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:17184; /opt/root_src/net/http/civetweb/civetweb.c:17324:2: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:17324; /opt/root_src/net/http/civetweb/civetweb.c:17584:4: warning: Call to function 'memmove' is ,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7528:68296,secur,security,68296,https://root.cern,https://github.com/root-project/root/issues/7528,1,['secur'],['security']
Security,all to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:17184; /opt/root_src/net/http/civetweb/civetweb.c:17324:2: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:17324; /opt/root_src/net/http/civetweb/civetweb.c:17584:4: warning: Call to function 'memmove' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memmove_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memmove' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memmove_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:17584; /opt/root_src/net/http/civetweb/civetweb.c:17916:2: warning: Call to function 'memset' ,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7528:68953,secur,security,68953,https://root.cern,https://github.com/root-project/root/issues/7528,1,['secur'],['security']
Security,all to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:18152; /opt/root_src/net/http/civetweb/civetweb.c:18334:2: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:18334; /opt/root_src/net/http/civetweb/civetweb.c:18899:3: warning: Call to function 'strcat' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcat'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]; 1: expanded from macro 'strcat0' in /opt/root_src/net/http/civetweb/civetweb.c:18868; 2: Call to function 'strcat' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcat'. CWE-119 in /opt/root_src/net/http/civetweb/civetweb.c:18899; 3: expanded from macro 'strcat0' in /opt/root_src/net/http/civetweb/civetweb.c:18868;,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7528:73736,secur,security,73736,https://root.cern,https://github.com/root-project/root/issues/7528,1,['secur'],['security']
Security,all to function 'sscanf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sscanf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'sscanf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sscanf_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:11610; /opt/root_src/net/http/civetweb/civetweb.c:11666:6: warning: Call to function 'sscanf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sscanf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'sscanf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sscanf_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:11666; /opt/root_src/net/http/civetweb/civetweb.c:12186:5: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:12186; /opt/root_src/net/http/civetweb/civetweb.c:12187:5: warning: Call to function 'memcpy' is i,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7528:52520,secur,security,52520,https://root.cern,https://github.com/root-project/root/issues/7528,1,['secur'],['security']
Security,all to function 'sscanf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sscanf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'sscanf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sscanf_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:11666; /opt/root_src/net/http/civetweb/civetweb.c:12186:5: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:12186; /opt/root_src/net/http/civetweb/civetweb.c:12187:5: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:12187; /opt/root_src/net/http/civetweb/civetweb.c:12222:5: warning: Call to function 'memcpy' is i,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7528:53177,secur,security,53177,https://root.cern,https://github.com/root-project/root/issues/7528,1,['secur'],['security']
Security,all to function 'sscanf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sscanf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'sscanf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sscanf_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:12859; /opt/root_src/net/http/civetweb/civetweb.c:14262:2: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:14262; /opt/root_src/net/http/civetweb/civetweb.c:14271:6: warning: Call to function 'sscanf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sscanf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'sscanf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sscanf_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:14271; /opt/root_src/net/http/civetweb/civetweb.c:14291:17: warning: Call to function 'sscanf' is ,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7528:62381,secur,security,62381,https://root.cern,https://github.com/root-project/root/issues/7528,1,['secur'],['security']
Security,all to function 'sscanf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sscanf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'sscanf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sscanf_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:14308; /opt/root_src/net/http/civetweb/civetweb.c:14332:3: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:14332; /opt/root_src/net/http/civetweb/civetweb.c:14337:8: warning: Call to function 'sscanf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sscanf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'sscanf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sscanf_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:14337; /opt/root_src/net/http/civetweb/civetweb.c:14471:2: warning: Call to function 'memset' is i,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7528:65011,secur,security,65011,https://root.cern,https://github.com/root-project/root/issues/7528,1,['secur'],['security']
Security,all to function 'sscanf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sscanf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'sscanf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sscanf_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:14337; /opt/root_src/net/http/civetweb/civetweb.c:14471:2: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:14471; /opt/root_src/net/http/civetweb/civetweb.c:14472:2: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:14472; /opt/root_src/net/http/civetweb/civetweb.c:16593:2: warning: Call to function 'memset' is i,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7528:66325,secur,security,66325,https://root.cern,https://github.com/root-project/root/issues/7528,1,['secur'],['security']
Security,alling 'TEmulatedMapProxy::WriteMap' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:254; 7: Initializing to 0 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:159; 8: 'idx' is < 'nElements' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:163; 9: Loop condition is true. Entering loop body in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:163; 10: The value 0 is assigned to 'loop' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:165; 11: Loop condition is true. Entering loop body in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:165; 12: Null pointer value stored to 'addr' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:166; 13: Null pointer value stored to 'i' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:167; 14: Control jumps to 'case kIsEnum:' at line 171 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:169; 15: Control jumps to 'case kDouble32_t:' at line 187 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:172; 16: Access to field 'dbl' results in a dereference of a null pointer (loaded from variable 'i') in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:187; /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:198:21: warning: Called C++ object pointer is null [clang-analyzer-core.CallAndMessage]; 1: Taking false branch in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:240; 2: Assuming field 'fObject' is non-null in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:251; 3: '?' condition is true in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:251; 4: Assuming 'nElements' is > 0 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:253; 5: Taking true branch in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:253; 6: Calling 'TEmulatedMapProxy::WriteMap' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:254; 7: Initializing to 0 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:159; 8: 'idx' is < 'nElements' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:163; 9: Loop condition is true. Entering loop body in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:163; 10: The value 0 is a,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7431:71202,Access,Access,71202,https://root.cern,https://github.com/root-project/root/issues/7431,1,['Access'],['Access']
Security,alling 'TEmulatedMapProxy::WriteMap' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:254; 7: Initializing to 0 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:159; 8: 'idx' is < 'nElements' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:163; 9: Loop condition is true. Entering loop body in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:163; 10: The value 0 is assigned to 'loop' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:165; 11: Loop condition is true. Entering loop body in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:165; 12: Null pointer value stored to 'addr' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:166; 13: Null pointer value stored to 'i' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:167; 14: Control jumps to 'case kIsEnum:' at line 171 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:169; 15: Control jumps to 'case kUShort_t:' at line 183 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:172; 16: Access to field 'u_short' results in a dereference of a null pointer (loaded from variable 'i') in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:183; /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:184:35: warning: Access to field 'u_int' results in a dereference of a null pointer (loaded from variable 'i') [clang-analyzer-core.NullDereference]; 1: Taking false branch in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:240; 2: Assuming field 'fObject' is non-null in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:251; 3: '?' condition is true in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:251; 4: Assuming 'nElements' is > 0 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:253; 5: Taking true branch in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:253; 6: Calling 'TEmulatedMapProxy::WriteMap' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:254; 7: Initializing to 0 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:159; 8: 'idx' is < 'nElements' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:163; 9: Loop condition is true. Entering loop body in /opt/roo,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7431:64410,Access,Access,64410,https://root.cern,https://github.com/root-project/root/issues/7431,1,['Access'],['Access']
Security,"allocator<char> > > > const&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) (RFilterBase.cxx:22); ==270704== by 0x19821393: ???; ==270704== by 0x5EF4C44: Cppyy::CallO(long, void*, unsigned long, void*, unsigned long) (clingwrapper.cxx:887); ==270704== ; ==270704== Use of uninitialised value of size 8; ==270704== at 0x271EBE8A: std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<ROOT::Internal::RDF::RVariationBase> >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<ROOT::Internal::RDF::RVariationBase> > >, std::__detail::_Select1st, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, false> >::_M_find_before_node(unsigned long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned long) const (hashtable.h:1812); ==270704== by 0x271EAD53: std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<ROOT::Internal::RDF::RVariationBase> >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<ROOT::Internal::RDF::RVariationBase> > >, std::__detail::_Se",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10092#issuecomment-1064001383:183605,hash,hash,183605,https://root.cern,https://github.com/root-project/root/issues/10092#issuecomment-1064001383,2,['hash'],"['hash', 'hashtable']"
Security,"als/src/Python/Objects/call.c:283; #36 0x00007faf4b430ef7 in _PyObject_Vectorcall (kwnames=0x0, nargsf=2, args=0x7ffdb628f800, callable=0x7faf298dbaf0); at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Include/cpython/abstract.h:127; #37 method_vectorcall (method=<optimized out>, args=<optimized out>, nargsf=<optimized out>, kwnames=0x0); at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Objects/classobject.c:89; #38 0x00007faf4b42df36 in _PyObject_Vectorcall (kwnames=0x0, nargsf=1, args=0x7ffdb628f890, callable=0x7faf4b960e80); at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Include/cpython/abstract.h:127; #39 _PyObject_FastCall (nargs=1, args=0x7ffdb628f890, func=0x7faf4b960e80); at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Include/cpython/abstract.h:147; ...; ```. Unfortunately all I could decipher from this is that things go south while accessing the `DataVector<xAOD::TauJet_v3>` type in Python. That access itself happens in a fairly complicated way itself, in this helper code:. https://gitlab.cern.ch/atlas/athena/-/blob/master/Control/xAODRootAccess/python/GenerateDVIterators.py. As before, I found that by explicitly accessing types ""in the right order"", I can work around the issue. (See: https://gitlab.cern.ch/atlas/athena/-/merge_requests/44843) But I'd really like to understand what the underlying issue actually is. Note that this problem only shows up in a debug build. In an optimised build the test in question runs just fine. ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->. The code should not encounter an assertion inside LLVM/Cling. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run you",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8578:10857,access,accessing,10857,https://root.cern,https://github.com/root-project/root/issues/8578,1,['access'],['accessing']
Security,alse branch in /opt/root_src/gui/gui/src/TGFont.cxx:809; 23: Assuming 'start' is >= 'end' in /opt/root_src/gui/gui/src/TGFont.cxx:706; 24: Loop condition is false. Execution continues on line 832 in /opt/root_src/gui/gui/src/TGFont.cxx:706; 25: Assuming field 'fNumChunks' is > 0 in /opt/root_src/gui/gui/src/TGFont.cxx:832; 26: Left side of '&&' is true in /opt/root_src/gui/gui/src/TGFont.cxx:832; 27: Assuming the condition is false in /opt/root_src/gui/gui/src/TGFont.cxx:832; 28: Taking false branch in /opt/root_src/gui/gui/src/TGFont.cxx:832; 29: Value assigned to 'chunk' in /opt/root_src/gui/gui/src/TGFont.cxx:844; 30: Assuming 'chunk' is null in /opt/root_src/gui/gui/src/TGFont.cxx:845; 31: Taking false branch in /opt/root_src/gui/gui/src/TGFont.cxx:845; 32: 'n' is < field 'fNumChunks' in /opt/root_src/gui/gui/src/TGFont.cxx:846; 33: Loop condition is true. Entering loop body in /opt/root_src/gui/gui/src/TGFont.cxx:846; 34: Access to field 'fY' results in a dereference of a null pointer (loaded from variable 'chunk') in /opt/root_src/gui/gui/src/TGFont.cxx:849; /opt/root_src/gui/gui/src/TGFont.cxx:853:24: warning: The right operand of '-' is a garbage value [clang-analyzer-core.UndefinedBinaryOperatorResult]; 1: Assuming 'numChars' is >= 0 in /opt/root_src/gui/gui/src/TGFont.cxx:681; 2: Taking false branch in /opt/root_src/gui/gui/src/TGFont.cxx:681; 3: Loop condition is true. Entering loop body in /opt/root_src/gui/gui/src/TGFont.cxx:706; 4: 'start' is >= 'special' in /opt/root_src/gui/gui/src/TGFont.cxx:707; 5: Taking true branch in /opt/root_src/gui/gui/src/TGFont.cxx:707; 6: Loop condition is false. Execution continues on line 727 in /opt/root_src/gui/gui/src/TGFont.cxx:710; 7: 'start' is >= 'special' in /opt/root_src/gui/gui/src/TGFont.cxx:728; 8: Taking false branch in /opt/root_src/gui/gui/src/TGFont.cxx:728; 9: 'start' is equal to 'special' in /opt/root_src/gui/gui/src/TGFont.cxx:741; 10: Left side of '&&' is true in /opt/root_src/gui/gui/src/TGFont.cxx:7,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7533:21373,Access,Access,21373,https://root.cern,https://github.com/root-project/root/issues/7533,1,['Access'],['Access']
Security,"alue>; `-MemberExpr 0x557807946270 <col:40> 'void *const' lvalue ->m_Memory 0x557807946210; `-CXXThisExpr 0x5578079461c8 <col:40> 'const class cling::runtime::internal::LifetimeHandler *' this; Warning in <TApplication::GetOptions>: macro 2 not found; CXXMethodDecl 0x55780795dc70 </home/vvassilev/workspace/builds/root_runtime_modules/include/TNamed.h:49:4, col:57> col:21 imported in Core.TNamed.h hidden used Hash 'ULong_t (void) const' virtual; |-Overrides: [ 0x55780795de08 TObject::Hash 'ULong_t (void) const' ]; `-CompoundStmt 0x55780795e398 <col:34, col:57>; `-ReturnStmt 0x55780795e380 <col:36, col:54>; `-ImplicitCastExpr 0x55780795e368 <col:43, col:54> 'ULong_t':'unsigned long' <IntegralCast>; `-CXXMemberCallExpr 0x55780795e330 <col:43, col:54> 'UInt_t':'unsigned int'; |-MemberExpr 0x55780795e2f8 <col:43, col:49> '<bound member function type>' .Hash 0x55780795e1b8; | `-MemberExpr 0x55780795e178 <col:43> 'const class TString' lvalue ->fName 0x5578079534b8; | `-CXXThisExpr 0x55780795e130 <col:43> 'const class TNamed *' this; `-CXXDefaultArgExpr 0x55780795df40 <<invalid sloc>> 'enum TString::ECaseCompare'; CXXMethodDecl 0x557807999228 </home/vvassilev/workspace/builds/root_runtime_modules/include/TObjString.h:40:4, col:54> col:16 imported in Core.TObjString.h hidden Hash 'ULong_t (void) const'; |-Overrides: [ 0x55780795de08 TObject::Hash 'ULong_t (void) const' ]; `-CompoundStmt 0x557807999440 <col:29, col:54>; `-ReturnStmt 0x557807999428 <col:31, col:51>; `-ImplicitCastExpr 0x557807999410 <col:38, col:51> 'ULong_t':'unsigned long' <IntegralCast>; `-CXXMemberCallExpr 0x5578079993d8 <col:38, col:51> 'UInt_t':'unsigned int'; |-MemberExpr 0x5578079993a0 <col:38, col:46> '<bound member function type>' .Hash 0x55780795e1b8; | `-MemberExpr 0x557807999368 <col:38> 'const class TString' lvalue ->fString 0x557807998f20; | `-CXXThisExpr 0x557807999320 <col:38> 'const class TObjString *' this; `-CXXDefaultArgExpr 0x557807999300 <<invalid sloc>> 'enum TString::ECaseCompare'. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2859#issuecomment-433234889:16570,Hash,Hash,16570,https://root.cern,https://github.com/root-project/root/pull/2859#issuecomment-433234889,4,['Hash'],['Hash']
Security,ame.cxx:49; 6: Assuming field 'fImage' is null in /opt/root_src/gui/gui/src/TGShapedFrame.cxx:50; 7: Left side of '||' is true in /opt/root_src/gui/gui/src/TGShapedFrame.cxx:50; 8: Called C++ object pointer is null in /opt/root_src/gui/gui/src/TGShapedFrame.cxx:53; /opt/root_src/gui/gui/src/TGSpeedo.cxx:462:7: warning: Variable 'i' with floating point type 'Float_t' should not be used as a loop counter [clang-analyzer-security.FloatLoopCounter]; 1: Variable 'i' with floating point type 'Float_t' should not be used as a loop counter in /opt/root_src/gui/gui/src/TGSpeedo.cxx:462; /opt/root_src/gui/gui/src/TGSpeedo.cxx:470:7: warning: Variable 'i' with floating point type 'Float_t' should not be used as a loop counter [clang-analyzer-security.FloatLoopCounter]; 1: Variable 'i' with floating point type 'Float_t' should not be used as a loop counter in /opt/root_src/gui/gui/src/TGSpeedo.cxx:470; /opt/root_src/gui/gui/src/TGSplitFrame.cxx:260:15: warning: Access to field 'fSplitTool' results in a dereference of a null pointer [clang-analyzer-core.NullDereference]; 1: Assuming field 'fFrame' is null in /opt/root_src/gui/gui/src/TGSplitFrame.cxx:588; 2: Taking false branch in /opt/root_src/gui/gui/src/TGSplitFrame.cxx:588; 3: Calling 'TGSplitFrame::SplitVertical' in /opt/root_src/gui/gui/src/TGSplitFrame.cxx:595; 4: Field 'fFrame' is null in /opt/root_src/gui/gui/src/TGSplitFrame.cxx:605; 5: Taking false branch in /opt/root_src/gui/gui/src/TGSplitFrame.cxx:605; 6: Calling 'TGSplitFrame::VSplit' in /opt/root_src/gui/gui/src/TGSplitFrame.cxx:621; 7: Assuming field 'fSplitter' is equal to null in /opt/root_src/gui/gui/src/TGSplitFrame.cxx:455; 8: Left side of '||' is false in /opt/root_src/gui/gui/src/TGSplitFrame.cxx:455; 9: Assuming field 'fFirst' is equal to null in /opt/root_src/gui/gui/src/TGSplitFrame.cxx:455; 10: Left side of '||' is false in /opt/root_src/gui/gui/src/TGSplitFrame.cxx:455; 11: Assuming field 'fSecond' is equal to null in /opt/root_src/gui/gui/src/TGSpli,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7533:50820,Access,Access,50820,https://root.cern,https://github.com/root-project/root/issues/7533,1,['Access'],['Access']
Security,amespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/295adc19.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/30ffc224.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/TRGrid.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/DFN-GridGermany-Root.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/295adc19.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/DFN-GridGermany-Root.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/6f071272.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/DFN-GridGermany-Root.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/REUNA-ca.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/6f071272.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/DFN-GridGermany-Root.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/TRGrid.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/e18bfb83.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/18bc5b05.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/REUNA-ca.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/18bc5b05.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/TRGrid.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/e18bfb83.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/1f3834d0.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/REUNA-ca.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/1f3834d0.signing_policy' from CURLOPT_C,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8092#issuecomment-840048181:32290,secur,security,32290,https://root.cern,https://github.com/root-project/root/issues/8092#issuecomment-840048181,2,"['certificate', 'secur']","['certificates', 'security']"
Security,amespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/edca0fc0.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/2436bbb8.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/d58bb4bc.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/USERTrustRSACertificationAuthority.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/fc5a8f99.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/c2a48ab6.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/fc5a8f99.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/23c77840.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/CNRS2.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/2694e4f2.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/c2a48ab6.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/2694e4f2.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/74a04bb6.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/74a04bb6.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/09ff08b7.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/f4401b90.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/163af95c.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/f4401b90.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/09ff08b7.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/CERN-Root-2.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/CERN-Root-2.info' from ,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8092#issuecomment-840048181:6002,secur,security,6002,https://root.cern,https://github.com/root-project/root/issues/8092#issuecomment-840048181,2,"['certificate', 'secur']","['certificates', 'security']"
Security,"analysis logic or framework is taking up the time. The best way to decrease the runtime would be to optimize your code, attempt to parallelize it onto multiple threads if possible, or use a machine with a more performant CPU. The best way to decrease the runtime would be to optimize your code (or the framework's), parallelize it onto multiple threads if possible (for example with RDataFrame and EnableImplicitMT) or switch to a machine with a more performant CPU. 2. The 'Real Time' is significantly higher than 'CPU Time / number of threads'.; If the real time is higher than the CPU time per core it implies the reading of data is the bottleneck, as the CPU cores are wasting time waiting for data to arrive from your disk/drive or network connection in order to decompress it. The best way to decrease your runtime would be transferring the data you need onto a faster storage medium (i.e. a faster disk/drive such as an SSD, or connecting to a faster network for remote file access), or to use a compression algorithm with a higher compression ratio, possibly at the cost of the decompression rate. Changing the number of threads is unlikely to help, and in fact using too many threads may degrade performance if they make requests to different regions of your local storage.; N.B. If no '--threads' argument was provided this is 1, otherwise it is the minimum of the value provided and the number of threads your CPU can run in parallel. It is worth noting that - on shared systems or if running other heavy applications - the number of your own threads running at any time may be lower than the limit due to demand on the CPU. 3. The 'Real Time' is similar to 'CPU Time / number of threads' AND 'Compressed Throughput' is lower than expected for your storage medium:; This would imply that your CPU threads aren't decompressing data as fast as your storage medium can provide it, and so decompression is the bottleneck. The best way to decrease your runtime would be to utilise a system with",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14039:3942,access,access,3942,https://root.cern,https://github.com/root-project/root/pull/14039,1,['access'],['access']
Security,"anch' is never read [clang-analyzer-deadcode.DeadStores]; 1: Value stored to 'elBranch' is never read in /opt/root_src/tree/tree/src/TBranchSTL.cxx:305; /opt/root_src/tree/tree/src/TBufferSQL.cxx:292:4: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]; 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/tree/tree/src/TBufferSQL.cxx:292; /opt/root_src/tree/tree/src/TBufferSQL.cxx:635:4: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]; 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/tree/tree/src/TBufferSQL.cxx:635; /opt/root_src/tree/tree/src/TChain.cxx:2366:32: warning: Called C++ object pointer is null [clang-analyzer-core.CallAndMessage]; 1: Taking false branch in /opt/root_src/tree/tree/src/TChain.cxx:2346; 2: Calling 'TString::Contains' in /opt/root_src/tree/tree/src/TChain.cxx:2356; 3: 's' is non-null in /opt/root_src/core/base/inc/TString.h:625; 4: '?' condition is true in /opt/root_src/core/base/inc/TString.h:625; 5: Assuming the condition is true in /opt/root_src/core/base/inc/TString.h:625; 6: Returning the value 1, which participates in a condition later in /opt/root_src/core/base/inc/TString.h:625; 7: Returning from 'TString::Contains' in /opt/root_src/tree/tree/src/TChain.cxx:2356; 8: Takin",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7429:44202,secur,security,44202,https://root.cern,https://github.com/root-project/root/issues/7429,1,['secur'],['security']
Security,"and concise description of what you expected to happen.; -->; The compilation does not fail. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->; Compile with `vecgeom` option. ### Setup; <!--; 1. ROOT version; 2. Operating system; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->; Compiling ROOT v6.26.04 on Debian Unstable (amd64), with GCC 11.3.0 and VecGeom 1.2.0, with this configuration:; ```; -- ROOT Configuration . System Linux-5.18.0-2-amd64; Processor 4 core Intel(R) Core(TM) i5-8250U CPU @ 1.60GHz (x86_64); Build type None; Install path /usr; Compiler GNU 11.3.0; Compiler flags:; C -g -O2 -ffile-prefix-map=<srcdir>=. -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2 -Wno-implicit-fallthrough -pipe -Wall -W -pthread ; C++ -g -O2 -ffile-prefix-map=<srcdir>=. -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2 -std=c++17 -Wno-implicit-fallthrough -Wno-noexcept-type -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread ; Linker flags:; Executable -Wl,-z,relro -Wl,-z,now -rdynamic; Module -Wl,-z,relro -Wl,-z,now; Shared -Wl,-z,relro -Wl,-z,now -Wl,--no-undefined -Wl,--hash-style=""both"". -- Enabled support for: asimage builtin_clang builtin_cling builtin_llvm builtin_unuran builtin_vdt ccache dataframe davix dcache exceptions fftw3 fitsio fortran gdml gfal gnuinstall gsl_shared gviz http fcgi imt mathmore mlp minuit2 mpi mysql odbc opengl pgsql pyroot qt5web qt6web r roofit root7 rpath shadowpw shared soversion sqlite ssl tmva tmva-cpu tmva-sofie tmva-pymva tmva-rmva spectrum unuran uring vc vdt veccore x11 xml xrootd; ```. ### Additional context; <!--; Add any other context about the problem here.; --",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10984:5308,secur,security,5308,https://root.cern,https://github.com/root-project/root/issues/10984,1,['secur'],['security']
Security,andard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:444; 3: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4frame.c:83; /opt/root_src/builtins/lz4/lz4frame.c:507:5: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:507; /opt/root_src/builtins/lz4/lz4frame.c:609:5: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4frame.c:83; 2: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:609; 3: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4frame.c:83; /opt/root_src/builtins/lz4/lz4frame.c:754:9: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-ana,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7411:35828,secur,security,35828,https://root.cern,https://github.com/root-project/root/issues/7411,1,['secur'],['security']
Security,andard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:609; 3: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4frame.c:83; /opt/root_src/builtins/lz4/lz4frame.c:754:9: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:754; /opt/root_src/builtins/lz4/lz4frame.c:844:5: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4frame.c:83; 2: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:844; 3: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4frame.c:83; /opt/root_src/builtins/lz4/lz4frame.c:852:13: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-an,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7411:37272,secur,security,37272,https://root.cern,https://github.com/root-project/root/issues/7411,1,['secur'],['security']
Security,"anding read data remaining ; - ERROR: Error fetching remote repo 'origin' . ### Warnings:; - /mnt/build/workspace/root-pullrequests-build/root/core/meta/src/TClass.cxx:686:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:5203:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:4757:26: warning: ‘char* strncpy(char*, const char*, size_t)’ output may be truncated copying 10 bytes from a string of length 10 [-Wstringop-truncation] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:490:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing between 2147483648 and 2147483647 bytes at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 4294967295] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:761:21: warning: ‘%lu’ directive writing between 1 and 20 bytes into a region of size between 0 and 8191 [-Wformat-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/proof/proofd/src/XrdProofdProtocol.cxx:527:45: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘class XrdSecEntity’; use assignment or value-initialization instead [-Wclass-memaccess] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TSystem.cxx:1148:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing 1 byte at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 2147483649] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1770:96: warning: cast between incompatible function types from ‘TVirtualPad*& (*)()’ to ‘TGlobalMappedFunction::G",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2141#issuecomment-394672680:1173,access,accessing,1173,https://root.cern,https://github.com/root-project/root/pull/2141#issuecomment-394672680,2,['access'],['accessing']
Security,"ang::NamedDecl*, clang::Sema::MissingImportKind, bool) + 395; 8 rootcling_stage1 0x000000010d95b199 clang::Sema::diagnoseTypo(clang::TypoCorrection const&, clang::PartialDiagnostic const&, clang::PartialDiagnostic const&, bool) + 441; 9 rootcling_stage1 0x000000010d95af83 clang::Sema::diagnoseTypo(clang::TypoCorrection const&, clang::PartialDiagnostic const&, bool) + 51; 10 rootcling_stage1 0x000000010d6f0a39 clang::Sema::DiagnoseUnknownTypeName(clang::IdentifierInfo*&, clang::SourceLocation, clang::Scope*, clang::CXXScopeSpec*, clang::OpaquePtr<clang::QualType>&, bool) + 985; 11 rootcling_stage1 0x000000010d57ef20 clang::Parser::ParseImplicitInt(clang::DeclSpec&, clang::CXXScopeSpec*, clang::Parser::ParsedTemplateInfo const&, clang::AccessSpecifier, clang::Parser::DeclSpecContext, clang::Parser::ParsedAttributesWithRange&) + 2288; 12 rootcling_stage1 0x000000010d579427 clang::Parser::ParseDeclarationSpecifiers(clang::DeclSpec&, clang::Parser::ParsedTemplateInfo const&, clang::AccessSpecifier, clang::Parser::DeclSpecContext, clang::Parser::LateParsedAttrList*) + 6855; 13 rootcling_stage1 0x000000010d5f8a6a clang::Parser::ParseDeclOrFunctionDefInternal(clang::Parser::ParsedAttributesWithRange&, clang::ParsingDeclSpec&, clang::AccessSpecifier) + 138; 14 rootcling_stage1 0x000000010d5f8725 clang::Parser::ParseDeclarationOrFunctionDefinition(clang::Parser::ParsedAttributesWithRange&, clang::ParsingDeclSpec*, clang::AccessSpecifier) + 373; 15 rootcling_stage1 0x000000010d5f7477 clang::Parser::ParseExternalDeclaration(clang::Parser::ParsedAttributesWithRange&, clang::ParsingDeclSpec*) + 2423; 16 rootcling_stage1 0x000000010d5f641c clang::Parser::ParseTopLevelDecl(clang::OpaquePtr<clang::DeclGroupRef>&) + 588; 17 rootcling_stage1 0x000000010cd68a90 cling::IncrementalParser::ParseInternal(llvm::StringRef) + 2704; 18 rootcling_stage1 0x000000010cd6ca91 cling::IncrementalParser::Compile(llvm::StringRef, cling::CompilationOptions const&) + 81; 19 rootcling_stage1 0x000000010cd",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3586:1923,Access,AccessSpecifier,1923,https://root.cern,https://github.com/root-project/root/pull/3586,1,['Access'],['AccessSpecifier']
Security,"ang::Scope*, clang::CXXScopeSpec&, clang::SourceLocation, clang::OpaquePtr<clang::TemplateName>, clang::IdentifierInfo*, clang::SourceLocation, clang::SourceLocation, llvm::MutableArrayRef<clang::ParsedTemplateArgument>, clang::SourceLocation, bool, bool) () from /home/linev/build/webgui/lib/libCling.so; #30 0x00007f4aa5241260 in clang::Parser::AnnotateTemplateIdTokenAsType(bool) () from /home/linev/build/webgui/lib/libCling.so; #31 0x00007f4aa51b987a in clang::Parser::ParseDeclarationSpecifiers(clang::DeclSpec&, clang::Parser::ParsedTemplateInfo const&, clang::AccessSpecifier, clang::Parser::DeclSpecContext, clang::Parser::LateParsedAttrList*) () from /home/linev/build/webgui/lib/libCling.so; #32 0x00007f4aa51bb711 in clang::Parser::ParseSpecifierQualifierList(clang::DeclSpec&, clang::AccessSpecifier, clang::Parser::DeclSpecContext) () from /home/linev/build/webgui/lib/libCling.so; #33 0x00007f4aa51bbd87 in clang::Parser::ParseTypeName(clang::SourceRange*, clang::DeclaratorContext, clang::AccessSpecifier, clang::Decl**, clang::ParsedAttributes*) () from /home/linev/build/webgui/lib/libCling.so; #34 0x00007f4aa4ac84b8 in clang::FunctionDecl const* cling::execFindFunction<cling::ParseProto, clang::FunctionDecl const*>(clang::Parser&, cling::Interpreter*, cling::LookupHelper&, clang::Decl const*, llvm::StringRef, cling::ParseProto::ArgsInput const&, bool, clang::FunctionDecl const* (*)(clang::DeclContext*, bool, llvm::SmallVectorImpl<clang::Expr*> const&, clang::LookupResult&, clang::DeclarationNameInfo&, clang::TemplateArgumentListInfo const*, clang::ASTContext&, clang::Parser&, clang::Sema&, cling::LookupHelper::DiagSetting), cling::LookupHelper::DiagSetting) () from /home/linev/build/webgui/lib/libCling.so; #35 0x00007f4aa4ac3dc7 in cling::LookupHelper::findFunctionProto(clang::Decl const*, llvm::StringRef, llvm::StringRef, cling::LookupHelper::DiagSetting, bool) const () from /home/linev/build/webgui/lib/libCling.so; #36 0x00007f4aa493a51f in ROOT::TMetaUtils::GetF",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8494#issuecomment-865084737:6196,Access,AccessSpecifier,6196,https://root.cern,https://github.com/root-project/root/issues/8494#issuecomment-865084737,1,['Access'],['AccessSpecifier']
Security,"ang::TemplateDecl*, clang::SourceLocation, clang::TemplateArgumentListInfo&, bool, llvm::SmallVectorImpl<clang::TemplateArgument>&, bool) () from /home/linev/build/webgui/lib/libCling.so; #28 0x00007f4aa58da8da in clang::Sema::CheckTemplateIdType(clang::TemplateName, clang::SourceLocation, clang::TemplateArgumentListInfo&) () from /home/linev/build/webgui/lib/libCling.so; #29 0x00007f4aa58ddc37 in clang::Sema::ActOnTemplateIdType(clang::Scope*, clang::CXXScopeSpec&, clang::SourceLocation, clang::OpaquePtr<clang::TemplateName>, clang::IdentifierInfo*, clang::SourceLocation, clang::SourceLocation, llvm::MutableArrayRef<clang::ParsedTemplateArgument>, clang::SourceLocation, bool, bool) () from /home/linev/build/webgui/lib/libCling.so; #30 0x00007f4aa5241260 in clang::Parser::AnnotateTemplateIdTokenAsType(bool) () from /home/linev/build/webgui/lib/libCling.so; #31 0x00007f4aa51b987a in clang::Parser::ParseDeclarationSpecifiers(clang::DeclSpec&, clang::Parser::ParsedTemplateInfo const&, clang::AccessSpecifier, clang::Parser::DeclSpecContext, clang::Parser::LateParsedAttrList*) () from /home/linev/build/webgui/lib/libCling.so; #32 0x00007f4aa51bb711 in clang::Parser::ParseSpecifierQualifierList(clang::DeclSpec&, clang::AccessSpecifier, clang::Parser::DeclSpecContext) () from /home/linev/build/webgui/lib/libCling.so; #33 0x00007f4aa51bbd87 in clang::Parser::ParseTypeName(clang::SourceRange*, clang::DeclaratorContext, clang::AccessSpecifier, clang::Decl**, clang::ParsedAttributes*) () from /home/linev/build/webgui/lib/libCling.so; #34 0x00007f4aa4ac84b8 in clang::FunctionDecl const* cling::execFindFunction<cling::ParseProto, clang::FunctionDecl const*>(clang::Parser&, cling::Interpreter*, cling::LookupHelper&, clang::Decl const*, llvm::StringRef, cling::ParseProto::ArgsInput const&, bool, clang::FunctionDecl const* (*)(clang::DeclContext*, bool, llvm::SmallVectorImpl<clang::Expr*> const&, clang::LookupResult&, clang::DeclarationNameInfo&, clang::TemplateArgumentListInfo con",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8494#issuecomment-865084737:5759,Access,AccessSpecifier,5759,https://root.cern,https://github.com/root-project/root/issues/8494#issuecomment-865084737,1,['Access'],['AccessSpecifier']
Security,"ar, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<ROOT::Detail::RDF::RDefineBase> >, true> > >::_M_deallocate_node (__n=0x209f2f0, this=<optimized out>) at /usr/include/c++/12/bits/hashtable_policy.h:1984; #9 std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<ROOT::Detail::RDF::RDefineBase> >, true> > >::_M_deallocate_nodes (this=<optimized out>, __n=0x209f250) at /usr/include/c++/12/bits/hashtable_policy.h:2006; #10 std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<ROOT::Detail::RDF::RDefineBase> >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<ROOT::Detail::RDF::RDefineBase> > >, std::__detail::_Select1st, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >::clear (this=0x1ab6a80) at /usr/include/c++/12/bits/hashtable.h:2500; #11 std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<ROOT::Detail::RDF::RDefineBase> >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<ROOT::Detail::RDF::RDefineBase> > >, std::__detail::_Select1st, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12023:5462,hash,hash,5462,https://root.cern,https://github.com/root-project/root/issues/12023,2,['hash'],"['hash', 'hashtable']"
Security,arguments or provides boundary checks such as 'memmove_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:1894; /opt/root_src/builtins/lz4/lz4.c:1900:21: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320; 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:1900; 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320; /opt/root_src/builtins/lz4/lz4.c:1907:25: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320; 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:1907; 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320; /opt/root_src/builtins/lz4/lz4.c:1948:17: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-secu,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7411:22007,secur,security,22007,https://root.cern,https://github.com/root-project/root/issues/7411,1,['secur'],['security']
Security,arguments or provides boundary checks such as 'memmove_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:2083; /opt/root_src/builtins/lz4/lz4.c:2089:21: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320; 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:2089; 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320; /opt/root_src/builtins/lz4/lz4.c:2096:25: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320; 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:2096; 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320; /opt/root_src/builtins/lz4/lz4.c:2115:21: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-secu,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7411:28027,secur,security,28027,https://root.cern,https://github.com/root-project/root/issues/7411,1,['secur'],['security']
Security,"arseSolver<llvm::PointerIntPair<llvm::Value*, 2u, (anonymous namespace)::IPOGrouping, llvm::PointerLikeTypeTraits<llvm::Value*>, llvm::PointerIntPairInfo<llvm::Value*, 2u, llvm::PointerLikeTypeTraits<llvm::Value*> > >, (anonymous namespace)::CVPLatticeVal, llvm::LatticeKeyInfo<llvm::PointerIntPair<llvm::Value*, 2u, (anonymous namespace)::IPOGrouping, llvm::PointerLikeTypeTraits<llvm::Value*>, llvm::PointerIntPairInfo<llvm::Value*, 2u, llvm::PointerLikeTypeTraits<llvm::Value*> > > > >::visitInst; 0.03% +0.35% libCling.so [.] llvm::CallBase::hasFnAttrOnCalledFunction; 1.15% -0.34% libCling.so [.] llvm::FoldingSetBase::FindNodeOrInsertPos; +0.33% libCling.so [.] llvm::removeUnreachableBlocks; +0.32% libCling.so [.] llvm::hash_combine<llvm::MachineOperand::MachineOperandType, unsigned int, unsigned int, bool>; 0.02% +0.32% libCling.so [.] llvm::Use::getImpliedUser; 0.71% -0.31% libCling.so [.] clang::Decl::castFromDeclContext; 1.01% -0.31% libCling.so [.] llvm::hashing::detail::hash_combine_range_impl<unsigned int const>; 0.79% -0.31% libCling.so [.] llvm::SelectionDAG::AssignTopologicalOrder; +0.29% [JIT] tid 277295 [.] 0x00007fbc9e40e37a; 1.13% -0.28% libCling.so [.] clang::Sema::isModuleVisible; +0.27% libCling.so [.] (anonymous namespace)::PeepholeOptimizer::runOnMachineFunction; 0.89% -0.27% libCling.so [.] llvm::ScheduleDAGSDNodes::BuildSchedUnits; 0.03% +0.26% libCling.so [.] llvm::ValueHandleBase::AddToUseList; 0.74% -0.24% libCling.so [.] AddNodeIDNode; 0.80% -0.24% libCling.so [.] llvm::SelectionDAGISel::SelectCodeCommon; +0.24% libCling.so [.] (anonymous namespace)::MachineCopyPropagation::CopyPropagateBlock; +0.23% libCling.so [.] llvm::LivePhysRegs::removeDefs; +0.22% libCling.so [.] llvm::ReachingDefAnalysis::processDefs; 0.79% -0.22% libpcre.so.1.2.10 [.] 0x0000000000001f72; 0.09% +0.20% libCling.so [.] llvm::hashing::detail::hash_short; 0.58% -0.20% libCling.so [.] llvm::FoldingSetNodeID::AddString; +0.20% libCling.so [.] llvm::Value::stripPointerCasts; ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9312#issuecomment-984765945:2239,hash,hashing,2239,https://root.cern,https://github.com/root-project/root/issues/9312#issuecomment-984765945,1,['hash'],['hashing']
Security,"arsingTests.h:928:34: error: invalid use of incomplete type ‘class TFile’ . ### Warnings:; - /mnt/build/workspace/root-pullrequests-build/root/core/meta/src/TClass.cxx:686:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:5203:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:4757:26: warning: ‘char* strncpy(char*, const char*, size_t)’ output may be truncated copying 10 bytes from a string of length 10 [-Wstringop-truncation] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:490:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing between 2147483648 and 2147483647 bytes at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 4294967295] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:761:21: warning: ‘%lu’ directive writing between 1 and 20 bytes into a region of size between 0 and 8191 [-Wformat-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TSystem.cxx:1149:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing 1 byte at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 2147483649] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1769:96: warning: cast between incompatible function types from ‘TVirtualPad*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1773:94: warning: cast between incompatible function types from ‘TVirtualX*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2619#issuecomment-421309703:1866,access,accessing,1866,https://root.cern,https://github.com/root-project/root/pull/2619#issuecomment-421309703,1,['access'],['accessing']
Security,ary checks such as 'memcpy_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:12462; /opt/root_src/net/http/civetweb/civetweb.c:12834:8: warning: Call to function 'sscanf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sscanf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'sscanf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sscanf_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:12834; /opt/root_src/net/http/civetweb/civetweb.c:12835:11: warning: Call to function 'sscanf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sscanf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'sscanf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sscanf_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:12835; /opt/root_src/net/http/civetweb/civetweb.c:12859:29: warning: Call to function 'sscanf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sscanf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'sscanf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sscanf_s,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7528:60946,secur,security,60946,https://root.cern,https://github.com/root-project/root/issues/7528,1,['secur'],['security']
Security,ary checks such as 'memmove_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:12281; /opt/root_src/net/http/civetweb/civetweb.c:12447:3: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:12447; /opt/root_src/net/http/civetweb/civetweb.c:12454:3: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:12454; /opt/root_src/net/http/civetweb/civetweb.c:12455:3: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s',MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7528:58317,secur,security,58317,https://root.cern,https://github.com/root-project/root/issues/7528,1,['secur'],['security']
Security,ary checks such as 'memset_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:11508; /opt/root_src/net/http/civetweb/civetweb.c:11591:6: warning: Call to function 'sscanf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sscanf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'sscanf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sscanf_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:11591; /opt/root_src/net/http/civetweb/civetweb.c:11602:13: warning: Call to function 'sscanf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sscanf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'sscanf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sscanf_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:11602; /opt/root_src/net/http/civetweb/civetweb.c:11609:14: warning: Call to function 'sscanf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sscanf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'sscanf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sscanf_s,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7528:50427,secur,security,50427,https://root.cern,https://github.com/root-project/root/issues/7528,1,['secur'],['security']
Security,ary checks such as 'memset_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:14262; /opt/root_src/net/http/civetweb/civetweb.c:14271:6: warning: Call to function 'sscanf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sscanf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'sscanf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sscanf_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:14271; /opt/root_src/net/http/civetweb/civetweb.c:14291:17: warning: Call to function 'sscanf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sscanf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'sscanf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sscanf_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:14291; /opt/root_src/net/http/civetweb/civetweb.c:14308:13: warning: Call to function 'sscanf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sscanf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'sscanf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sscanf_s,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7528:63576,secur,security,63576,https://root.cern,https://github.com/root-project/root/issues/7528,1,['secur'],['security']
Security,ary checks such as 'sprintf_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:3878; /opt/root_src/net/http/civetweb/civetweb.c:3937:5: warning: Call to function 'memmove' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memmove_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memmove' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memmove_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:3937; /opt/root_src/net/http/civetweb/civetweb.c:5799:2: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:5799; /opt/root_src/net/http/civetweb/civetweb.c:6620:4: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' i,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7528:26754,secur,security,26754,https://root.cern,https://github.com/root-project/root/issues/7528,1,['secur'],['security']
Security,ary checks such as 'sscanf_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:11609; /opt/root_src/net/http/civetweb/civetweb.c:11610:17: warning: Call to function 'sscanf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sscanf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'sscanf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sscanf_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:11610; /opt/root_src/net/http/civetweb/civetweb.c:11666:6: warning: Call to function 'sscanf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sscanf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'sscanf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sscanf_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:11666; /opt/root_src/net/http/civetweb/civetweb.c:12186:5: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s',MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7528:52400,secur,security,52400,https://root.cern,https://github.com/root-project/root/issues/7528,1,['secur'],['security']
Security,ary checks such as 'sscanf_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:12835; /opt/root_src/net/http/civetweb/civetweb.c:12859:29: warning: Call to function 'sscanf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sscanf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'sscanf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sscanf_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:12859; /opt/root_src/net/http/civetweb/civetweb.c:14262:2: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:14262; /opt/root_src/net/http/civetweb/civetweb.c:14271:6: warning: Call to function 'sscanf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sscanf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'sscanf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sscanf_s',MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7528:62261,secur,security,62261,https://root.cern,https://github.com/root-project/root/issues/7528,1,['secur'],['security']
Security,ary checks such as 'sscanf_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:14291; /opt/root_src/net/http/civetweb/civetweb.c:14308:13: warning: Call to function 'sscanf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sscanf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'sscanf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sscanf_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:14308; /opt/root_src/net/http/civetweb/civetweb.c:14332:3: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:14332; /opt/root_src/net/http/civetweb/civetweb.c:14337:8: warning: Call to function 'sscanf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sscanf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'sscanf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sscanf_s',MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7528:64891,secur,security,64891,https://root.cern,https://github.com/root-project/root/issues/7528,1,['secur'],['security']
Security,asGrid-CA-2016.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/HellasGrid-CA-2016.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/f4cf8fb6.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/6999cae3.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/6999cae3.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/UGRID-G2.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/UGRID-G2.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/UGRID-G2.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/UGRID-G2.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/c53e160f.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/c53e160f.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/8fa17d52.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/368bc755.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/HKU-CA-2.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/c36f6349.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/HKU-CA-2.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/c36f6349.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/HKU-CA-2.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/IGCA2.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/HKU-CA-2.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/a7b21b05.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/IGCA2.info' from CURLOPT_CAPATH; * fa,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8092#issuecomment-840048181:37459,secur,security,37459,https://root.cern,https://github.com/root-project/root/issues/8092#issuecomment-840048181,2,"['certificate', 'secur']","['certificates', 'security']"
Security,ase of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320; 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:451; 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320; /opt/root_src/builtins/lz4/lz4.c:469:10: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320; 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:469; 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320; /opt/root_src/builtins/lz4/lz4.c:469:30: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320; 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/l,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7411:2951,secur,security,2951,https://root.cern,https://github.com/root-project/root/issues/7411,1,['secur'],['security']
Security,ase of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320; 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:469; 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320; /opt/root_src/builtins/lz4/lz4.c:469:30: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320; 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:469; 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320; /opt/root_src/builtins/lz4/lz4.c:484:9: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4.c:208; 2: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/builtins/lz4/,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7411:3739,secur,security,3739,https://root.cern,https://github.com/root-project/root/issues/7411,1,['secur'],['security']
Security,"ase> >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<ROOT::Detail::RDF::RDefineBase> > >, std::__detail::_Select1st, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true>, true>::at(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const (hashtable_policy.h:772); ==270704== by 0x271AA050: std::unordered_map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::shared_ptr<ROOT::Detail::RDF::RDefineBase>, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<ROOT::Detail::RDF::RDefineBase> > > >::at(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const (unordered_map.h:1001); ==270704== by 0x1979847F: ???; ==270704== by 0x27231F92: ROOT::Detail::RDF::RLoopManager::RunEmptySource() (RLoopManager.cxx:418); ==270704== by 0x272360B1: ROOT::Detail::RDF::RLoopManager::Run() (RLoopManager.cxx:761); ==270704== by 0x2F3C1107: ???; ==270704== by 0x5EF49CC: Cppyy::CallR(long, void*, unsigned long, void*) (clingwrapper.cxx:846); ==270704== by 0x5E37CA5: GILCallR(long, void*, CPyCppyy::CallContext*) (Executors.cxx:78); ==270704== by 0x5E39270: CPyCppyy::(anonymous namespace)::ULongLongRefExecutor::Execute(long, void*, CPyCppyy::CallContext*) (Executors.cxx:367); ==270704== ; ==270704== ; ==270704== HEAP SUMMARY:; ==270704== in use at exit: 1",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10092#issuecomment-1064001383:254281,hash,hash,254281,https://root.cern,https://github.com/root-project/root/issues/10092#issuecomment-1064001383,1,['hash'],['hash']
Security,"asic_string_view<char, std::char_traits<char> >, unsigned int, ROOT::Internal::RDF::RColumnRegister const&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) (RFilterBase.cxx:22); ==270704== by 0x19821393: ???; ==270704== by 0x5EF4C44: Cppyy::CallO(long, void*, unsigned long, void*, unsigned long) (clingwrapper.cxx:887); ==270704== ; ==270704== Conditional jump or move depends on uninitialised value(s); ==270704== at 0x66272FB: std::_Hash_bytes(void const*, unsigned long, unsigned long) (hash_bytes.cc:151); ==270704== by 0x631A10A: std::_Hash_impl::hash(void const*, unsigned long, unsigned long) (functional_hash.h:198); ==270704== by 0x631A14F: std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::operator()(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const (basic_string.h:6875); ==270704== by 0x271EACF3: std::__detail::_Hash_code_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<ROOT::Internal::RDF::RVariationBase> >, std::__detail::_Select1st, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, true>::_M_hash_code(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const (hashtable_policy.h:1217); ==270704== by 0x271E9DB1: std::_Hashtable<std::__cxx11::basic_st",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10092#issuecomment-1064001383:167684,hash,hash,167684,https://root.cern,https://github.com/root-project/root/issues/10092#issuecomment-1064001383,1,['hash'],['hash']
Security,"assTable; aborting; #0 0x00007fa7e57aacbe in __GI___waitpid (pid=32048, stat_loc=stat_loc; entry=0x7fffab271828, options=options; entry=0) at ../sysdeps/unix/sysv/linux/waitpid.c:29; #1 0x00007fa7e572138f in do_system (line=<optimized out>) at ../sysdeps/posix/system.c:148; #2 0x00007fa7e67b9c4f in TUnixSystem::StackTrace (this=0x7d30) at /home/amadio/src/root/core/unix/src/TUnixSystem.cxx:2412; #3 0x00007fa7e66900e8 in DefaultErrorHandler (level=32048, abort_bool=40, location=0x0, msg=0x7fa7e57aacbe <__GI___waitpid+46> ""H="") at /home/amadio/src/root/core/base/src/TError.cxx:192; #4 0x00007fa7e668ff16 in ErrorHandler (level=32048, location=0x7fffab271828 """", fmt=0x0, ap=0x7fa7e57aacbe <__GI___waitpid+46>) at /home/amadio/src/root/core/base/src/TError.cxx:251; #5 0x00007fa7e668fb04 in Fatal (location=0x7d30 <error: Cannot access memory at address 0x7d30>, fmt=0x7fffab271828 """") at /home/amadio/src/root/core/base/src/TError.cxx:350; #6 0x00007fa7e67058b2 in TClassTable::Add (cname=0x7d30 <error: Cannot access memory at address 0x7d30>, id=6184, info=..., dict=0x7fa7e57aacbe <__GI___waitpid+46>, pragmabits=-441829952) at /home/amadio/src/root/core/cont/src/TClassTable.cxx:350; #7 0x00007fa7e6704da5 in ROOT::AddClass (cname=0x7d30 <error: Cannot access memory at address 0x7d30>, id=6184, info=..., dict=0x7fa7e57aacbe <__GI___waitpid+46>, pragmabits=-441829952) at /home/amadio/src/root/core/cont/src/TClassTable.cxx:761; #8 0x00007fa7e6704b94 in TClassTable::TClassTable (this=0x7d30) at /home/amadio/src/root/core/cont/src/TClassTable.cxx:236; #9 0x00007fa7e6588e34 in TROOT::InitInterpreter (this=0x7d30) at /home/amadio/src/root/core/base/src/TROOT.cxx:2020; #10 0x00007fa7e6587ffc in ROOT::Internal::GetROOT2 () at /home/amadio/src/root/core/base/src/TROOT.cxx:385; #11 0x00007fa7e7f86986 in TCling__GetInterpreter () at /home/amadio/src/root/core/metacling/src/rootclingTCling.cxx:48; #12 0x00007fa7e7ea51d5 in RootClingMain (argc=98, argv=0x7fffab271828, isDeep=false, isGenref",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1389#issuecomment-347619862:2018,access,access,2018,https://root.cern,https://github.com/root-project/root/pull/1389#issuecomment-347619862,1,['access'],['access']
Security,assic-2015.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/DigitalTrustSecureCAG4-runbytheissuer.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/DigiCertGridCA-1G2-Classic-2015.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/DigitalTrustSecureCAG4-runbytheissuer.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/DigiCertGridCA-1G2-Classic-2015.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/d41ec82f.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/b85d64aa.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/598b583e.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/DigiCertGridCA-1G2-Classic-2015.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/a603ba9c.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/82c2b224.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/d41ec82f.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/DigiCertGridCA-1-Classic.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/bd43b60c.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/DigiCertGridCA-1-Classic.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/7b384752.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/DigiCertGridCA-1-Classic.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/7b384752.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/DigitalTrustSecureCAG4-runbytheissuer.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/DigiCertGridCA-1-Classic.signing_policy' from CURLOPT,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8092#issuecomment-840048181:15841,secur,security,15841,https://root.cern,https://github.com/root-project/root/issues/8092#issuecomment-840048181,2,"['certificate', 'secur']","['certificates', 'security']"
Security,"aster of today, with xrootd off); ```; /opt/root_src/build/rmkdepend/cppsetup.c:150:4: warning: Call to function 'sprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'sprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11 in /opt/root_src/build/rmkdepend/cppsetup.c:150; /opt/root_src/build/rmkdepend/cppsetup.c:180:4: warning: Call to function 'strncpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'strncpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'strncpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'strncpy_s' in case of C11 in /opt/root_src/build/rmkdepend/cppsetup.c:180; /opt/root_src/build/rmkdepend/include.c:158:4: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]; 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/build/rmkdepend/include.c:158; /opt/root_src/build/rm",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7410:1164,secur,security,1164,https://root.cern,https://github.com/root-project/root/issues/7410,1,['secur'],['security']
Security,"atch/greenc/test-products/root/v6_27_99f1/source/root-6.27.99/interpreter/llvm/src/tools/clang/lib/Parse/Parser.cpp:1142:21; #49 0x00000000044b0710 clang::Parser::ParseDeclarationOrFunctionDefinition(clang::ParsedAttributesWithRange&, clang::ParsingDeclSpec*, clang::AccessSpecifier) /scratch/greenc/test-products/root/v6_27_99f1/source/root-6.27.99/interpreter/llvm/src/tools/clang/lib/Parse/Parser.cpp:1162:12; #50 0x00000000044b004c clang::Parser::ParseExternalDeclaration(clang::ParsedAttributesWithRange&, clang::ParsingDeclSpec*) /scratch/greenc/test-products/root/v6_27_99f1/source/root-6.27.99/interpreter/llvm/src/tools/clang/lib/Parse/Parser.cpp:984:12; #51 0x00000000043e8d99 clang::Parser::ParseLinkage(clang::ParsingDeclSpec&, clang::DeclaratorContext) /scratch/greenc/test-products/root/v6_27_99f1/source/root-6.27.99/interpreter/llvm/src/tools/clang/lib/Parse/ParseDeclCXX.cpp:399:7; #52 0x00000000044b0ff7 clang::Parser::ParseDeclOrFunctionDefInternal(clang::ParsedAttributesWithRange&, clang::ParsingDeclSpec&, clang::AccessSpecifier) /scratch/greenc/test-products/root/v6_27_99f1/source/root-6.27.99/interpreter/llvm/src/tools/clang/lib/Parse/Parser.cpp:1142:21; #53 0x00000000044b0710 clang::Parser::ParseDeclarationOrFunctionDefinition(clang::ParsedAttributesWithRange&, clang::ParsingDeclSpec*, clang::AccessSpecifier) /scratch/greenc/test-products/root/v6_27_99f1/source/root-6.27.99/interpreter/llvm/src/tools/clang/lib/Parse/Parser.cpp:1162:12; #54 0x00000000044b004c clang::Parser::ParseExternalDeclaration(clang::ParsedAttributesWithRange&, clang::ParsingDeclSpec*) /scratch/greenc/test-products/root/v6_27_99f1/source/root-6.27.99/interpreter/llvm/src/tools/clang/lib/Parse/Parser.cpp:984:12; #55 0x00000000044ae43b clang::Parser::ParseTopLevelDecl(clang::OpaquePtr<clang::DeclGroupRef>&, bool) /scratch/greenc/test-products/root/v6_27_99f1/source/root-6.27.99/interpreter/llvm/src/tools/clang/lib/Parse/Parser.cpp:729:12; #56 0x00000000044adce3 clang::Parser::ParseFirstTo",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10861#issuecomment-1377607040:38526,Access,AccessSpecifier,38526,https://root.cern,https://github.com/root-project/root/issues/10861#issuecomment-1377607040,1,['Access'],['AccessSpecifier']
Security,"atch/greenc/test-products/root/v6_27_99f1/source/root-6.27.99/interpreter/llvm/src/tools/clang/lib/Parse/Parser.cpp:1146:10; #45 0x00000000044b0710 clang::Parser::ParseDeclarationOrFunctionDefinition(clang::ParsedAttributesWithRange&, clang::ParsingDeclSpec*, clang::AccessSpecifier) /scratch/greenc/test-products/root/v6_27_99f1/source/root-6.27.99/interpreter/llvm/src/tools/clang/lib/Parse/Parser.cpp:1162:12; #46 0x00000000044b004c clang::Parser::ParseExternalDeclaration(clang::ParsedAttributesWithRange&, clang::ParsingDeclSpec*) /scratch/greenc/test-products/root/v6_27_99f1/source/root-6.27.99/interpreter/llvm/src/tools/clang/lib/Parse/Parser.cpp:984:12; #47 0x00000000043e8d99 clang::Parser::ParseLinkage(clang::ParsingDeclSpec&, clang::DeclaratorContext) /scratch/greenc/test-products/root/v6_27_99f1/source/root-6.27.99/interpreter/llvm/src/tools/clang/lib/Parse/ParseDeclCXX.cpp:399:7; #48 0x00000000044b0ff7 clang::Parser::ParseDeclOrFunctionDefInternal(clang::ParsedAttributesWithRange&, clang::ParsingDeclSpec&, clang::AccessSpecifier) /scratch/greenc/test-products/root/v6_27_99f1/source/root-6.27.99/interpreter/llvm/src/tools/clang/lib/Parse/Parser.cpp:1142:21; #49 0x00000000044b0710 clang::Parser::ParseDeclarationOrFunctionDefinition(clang::ParsedAttributesWithRange&, clang::ParsingDeclSpec*, clang::AccessSpecifier) /scratch/greenc/test-products/root/v6_27_99f1/source/root-6.27.99/interpreter/llvm/src/tools/clang/lib/Parse/Parser.cpp:1162:12; #50 0x00000000044b004c clang::Parser::ParseExternalDeclaration(clang::ParsedAttributesWithRange&, clang::ParsingDeclSpec*) /scratch/greenc/test-products/root/v6_27_99f1/source/root-6.27.99/interpreter/llvm/src/tools/clang/lib/Parse/Parser.cpp:984:12; #51 0x00000000043e8d99 clang::Parser::ParseLinkage(clang::ParsingDeclSpec&, clang::DeclaratorContext) /scratch/greenc/test-products/root/v6_27_99f1/source/root-6.27.99/interpreter/llvm/src/tools/clang/lib/Parse/ParseDeclCXX.cpp:399:7; #52 0x00000000044b0ff7 clang::Parser::ParseDe",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10861#issuecomment-1377607040:37470,Access,AccessSpecifier,37470,https://root.cern,https://github.com/root-project/root/issues/10861#issuecomment-1377607040,1,['Access'],['AccessSpecifier']
Security,ateRootCAG4.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/585d9326.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/d58bb4bc.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/585d9326.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/23c77840.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/CNRS2-Grid-FR.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/78351451.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/CESNET-CA-4.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/KENETROOTCA.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/CNRS2-Grid-FR.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/KENETROOTCA.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/CESNET-CA-4.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/CNRS2-Grid-FR.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/KENETROOTCA.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/COMODO-RSA-CA.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/CESNET-CA-4.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/COMODO-RSA-CA.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/UKeScienceCA-2B.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/COMODO-RSA-CA.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/CNRS2-Grid-FR.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/d4c339cb.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/d6325660.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8092#issuecomment-840048181:9773,secur,security,9773,https://root.cern,https://github.com/root-project/root/issues/8092#issuecomment-840048181,2,"['certificate', 'secur']","['certificates', 'security']"
Security,ates/1f58a078.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/ANSPGrid.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/1f58a078.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/ANSPGrid.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/QuoVadis-Root-CA2G3.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/ANSPGrid.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/QuoVadis-Root-CA2G3.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/BYGCA.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/ANSPGrid.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/20b7db76.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/156a0f0f.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/QuoVadis-Root-CA2G3.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/QuoVadis-Root-CA2G3.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/24c3ccde.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/37a553c6.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/24c3ccde.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/3f638905.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/UNAMgrid-ca.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/AC-GRID-FR-Robots.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/UNAMgrid-ca.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/AC-GRID-FR-Robots.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/UNA,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8092#issuecomment-840048181:50970,secur,security,50970,https://root.cern,https://github.com/root-project/root/issues/8092#issuecomment-840048181,2,"['certificate', 'secur']","['certificates', 'security']"
Security,ates/63699217.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/ArmeSFo.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/4c3ad332.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/d0c2a341.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/63699217.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/d0c2a341.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/NIKHEF.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/MD-Grid-CA-T.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/072977ca.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/IRAN-GRID-GCG-G2.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/072977ca.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/MD-Grid-CA-T.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/58435df6.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/IRAN-GRID-GCG-G2.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/58435df6.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/IRAN-GRID-GCG-G2.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/NIIF-Root-CA-2.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/MD-Grid-CA-T.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/NIIF-Root-CA-2.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/NIIF-Root-CA-2.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/13ba0088.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/NIIF-Root-CA-2,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8092#issuecomment-840048181:64562,secur,security,64562,https://root.cern,https://github.com/root-project/root/issues/8092#issuecomment-840048181,2,"['certificate', 'secur']","['certificates', 'security']"
Security,ates/77637f58.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/SDG-G2.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/SDG-G2.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/c1e29225.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/c1e29225.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/2f2e0e6e.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/2f2e0e6e.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/NorduGrid-2015.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/NorduGrid-2015.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/NorduGrid-2015.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/a3e2dbca.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/NIKHEF.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/a3e2dbca.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/f8598272.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/16054abd.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/2418a3f3.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/16054abd.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/a2dbd20c.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/f8598272.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/7ca9677b.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/2418a3f3.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/7ca9677b.signing_policy' from CURL,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8092#issuecomment-840048181:59547,secur,security,59547,https://root.cern,https://github.com/root-project/root/issues/8092#issuecomment-840048181,2,"['certificate', 'secur']","['certificates', 'security']"
Security,ates/8fa17d52.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/0e635db3.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/IGCA2.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/RDIG.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/AC-GRID-FR-Personnels.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/156a0f0f.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/seegrid-ca-2013.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/ff94d436.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/3d5be7bc.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/55994d72.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/94b468c6.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/3d5be7bc.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/94b468c6.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/b1ac0d46.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/RDIG.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/b1ac0d46.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/RDIG.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/SlovakGrid.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/4ce1cf99.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/SiGNET-CA.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/4ce1cf99.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/7a819ef2.namespaces' from CURLOPT_,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8092#issuecomment-840048181:44440,secur,security,44440,https://root.cern,https://github.com/root-project/root/issues/8092#issuecomment-840048181,2,"['certificate', 'secur']","['certificates', 'security']"
Security,ates/CNRS2.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/2694e4f2.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/c2a48ab6.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/2694e4f2.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/74a04bb6.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/74a04bb6.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/09ff08b7.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/f4401b90.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/163af95c.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/f4401b90.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/09ff08b7.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/CERN-Root-2.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/CERN-Root-2.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/163af95c.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/CERN-Root-2.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/78351451.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/7022e3c4.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/CNRS2-Projets.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/CNRS2-Projets.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/CNRS2-Projets.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/7ed47087.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/98ef0ee5.signin,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8092#issuecomment-840048181:6850,secur,security,6850,https://root.cern,https://github.com/root-project/root/issues/8092#issuecomment-840048181,2,"['certificate', 'secur']","['certificates', 'security']"
Security,ates/MYIFAM.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/5e9e302b.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/GEANTeSciencePersonalECCCA4.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/GEANTeSciencePersonalCA4.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/GEANTeSciencePersonalCA4.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/GEANTeSciencePersonalECCCA4.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/GEANTeSciencePersonalCA4.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/GEANTeSciencePersonalCA4.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/943fd5f3.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/d9343743.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/DigitalTrustAssuredCAG3-runbytheissuer.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/DigitalTrustAssuredCAG3-runbytheissuer.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/DigitalTrustAssuredCAG3-runbytheissuer.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/DigitalTrustAssuredCAG3-runbytheissuer.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/GEANTeScienceSSLECCCA4.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/GEANTeScienceSSLECCCA4.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/GEANTeScienceSSLECCCA4.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/DigitalTrustSecureCAG3-runbytheissuer.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/DigitalTrustSecureCAG3-runbytheissuer.info' from CURLOPT_C,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8092#issuecomment-840048181:21370,secur,security,21370,https://root.cern,https://github.com/root-project/root/issues/8092#issuecomment-840048181,2,"['certificate', 'secur']","['certificates', 'security']"
Security,ates/a3e2dbca.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/f8598272.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/16054abd.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/2418a3f3.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/16054abd.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/a2dbd20c.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/f8598272.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/7ca9677b.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/2418a3f3.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/7ca9677b.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/AC-GRID-FR.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/01b5d333.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/AC-GRID-FR.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/BG-ACAD-CA.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/AC-GRID-FR.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/01b5d333.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/BG-ACAD-CA.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/AC-GRID-FR.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/PolishGrid-2019.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/3232b9bc.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/BG-ACAD-CA.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/3232b9bc.signing_policy' from CURLOPT_C,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8092#issuecomment-840048181:60662,secur,security,60662,https://root.cern,https://github.com/root-project/root/issues/8092#issuecomment-840048181,2,"['certificate', 'secur']","['certificates', 'security']"
Security,ates/a7b21b05.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/72aa436d.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/9cd75e87.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/9cd75e87.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/ASGCCA-2007.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/80df9b28.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/ASGCCA-2007.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/IGCA2.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/ASGCCA-2007.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/AC-GRID-FR-Personnels.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/RDIG.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/ASGCCA-2007.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/b459ca48.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/7aa2b7bd.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/b459ca48.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/SRCE.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/ad9d1b74.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/0a49430a.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/7aa2b7bd.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/0a49430a.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/DZeScience.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/da213f5b.namespaces' from CURLOPT_C,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8092#issuecomment-840048181:39495,secur,security,39495,https://root.cern,https://github.com/root-project/root/issues/8092#issuecomment-840048181,2,"['certificate', 'secur']","['certificates', 'security']"
Security,ates/c2a48ab6.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/2694e4f2.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/74a04bb6.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/74a04bb6.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/09ff08b7.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/f4401b90.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/163af95c.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/f4401b90.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/09ff08b7.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/CERN-Root-2.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/CERN-Root-2.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/163af95c.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/CERN-Root-2.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/78351451.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/7022e3c4.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/CNRS2-Projets.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/CNRS2-Projets.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/CNRS2-Projets.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/7ed47087.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/98ef0ee5.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/UKeScienceRoot-2007.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/UKe,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8092#issuecomment-840048181:7031,secur,security,7031,https://root.cern,https://github.com/root-project/root/issues/8092#issuecomment-840048181,2,"['certificate', 'secur']","['certificates', 'security']"
Security,ates/d58bb4bc.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/585d9326.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/23c77840.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/CNRS2-Grid-FR.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/78351451.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/CESNET-CA-4.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/KENETROOTCA.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/CNRS2-Grid-FR.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/KENETROOTCA.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/CESNET-CA-4.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/CNRS2-Grid-FR.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/KENETROOTCA.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/COMODO-RSA-CA.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/CESNET-CA-4.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/COMODO-RSA-CA.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/UKeScienceCA-2B.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/COMODO-RSA-CA.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/CNRS2-Grid-FR.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/d4c339cb.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/d6325660.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/InCommon-IGTF-Server-CA.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certific,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8092#issuecomment-840048181:9959,secur,security,9959,https://root.cern,https://github.com/root-project/root/issues/8092#issuecomment-840048181,2,"['certificate', 'secur']","['certificates', 'security']"
Security,ates/ff94d436.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/0e635db3.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/8fa17d52.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/0e635db3.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/IGCA2.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/RDIG.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/AC-GRID-FR-Personnels.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/156a0f0f.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/seegrid-ca-2013.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/ff94d436.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/3d5be7bc.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/55994d72.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/94b468c6.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/3d5be7bc.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/94b468c6.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/b1ac0d46.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/RDIG.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/b1ac0d46.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/RDIG.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/SlovakGrid.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/4ce1cf99.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/SiGNET-CA.crl_url' from CURLOPT_,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8092#issuecomment-840048181:44252,secur,security,44252,https://root.cern,https://github.com/root-project/root/issues/8092#issuecomment-840048181,2,"['certificate', 'secur']","['certificates', 'security']"
Security,athcore/src/FitUtil.cxx:207; 37: Assuming 'k' is < 'npar' in /opt/root_src/math/mathcore/src/FitUtil.cxx:210; 38: Loop condition is true. Entering loop body in /opt/root_src/math/mathcore/src/FitUtil.cxx:210; 39: Passing null pointer value via 2nd parameter 'x2' in /opt/root_src/math/mathcore/src/FitUtil.cxx:212; 40: Calling 'IntegralEvaluator::operator()' in /opt/root_src/math/mathcore/src/FitUtil.cxx:212; 41: Assuming field 'fIg1Dim' is null in /opt/root_src/math/mathcore/inc/Fit/FitUtil.h:207; 42: Taking false branch in /opt/root_src/math/mathcore/inc/Fit/FitUtil.h:207; 43: Assuming field 'fIgNDim' is non-null in /opt/root_src/math/mathcore/inc/Fit/FitUtil.h:210; 44: Taking true branch in /opt/root_src/math/mathcore/inc/Fit/FitUtil.h:210; 45: Assuming 'i' is < field 'fDim' in /opt/root_src/math/mathcore/inc/Fit/FitUtil.h:212; 46: Loop condition is true. Entering loop body in /opt/root_src/math/mathcore/inc/Fit/FitUtil.h:212; 47: Array access (from variable 'x2') results in a null pointer dereference in /opt/root_src/math/mathcore/inc/Fit/FitUtil.h:213; /opt/root_src/math/mathcore/inc/TMath.h:1373:16: warning: Assigned value is garbage or undefined [clang-analyzer-core.uninitialized.Assign]; 1: Assuming the condition is false in /opt/root_src/math/minuit/src/TLinearFitter.cxx:2370; 2: expanded from macro 'R__ASSERT' in /opt/root_src/core/foundation/inc/TError.h:120; 3: Left side of '||' is false in /opt/root_src/math/minuit/src/TLinearFitter.cxx:2370; 4: Assuming field 'fInputFunction' is null in /opt/root_src/math/minuit/src/TLinearFitter.cxx:2370; 5: expanded from macro 'R__ASSERT' in /opt/root_src/core/foundation/inc/TError.h:120; 6: Left side of '||' is false in /opt/root_src/math/minuit/src/TLinearFitter.cxx:2370; 7: Assuming field 'fSpecial' is > 200 in /opt/root_src/math/minuit/src/TLinearFitter.cxx:2370; 8: expanded from macro 'R__ASSERT' in /opt/root_src/core/foundation/inc/TError.h:120; 9: Taking false branch in /opt/root_src/math/minuit/src/TLinearFitte,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7458:13571,access,access,13571,https://root.cern,https://github.com/root-project/root/issues/7458,1,['access'],['access']
Security,"ation/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/base/inc -Iginclude -I/mnt/build/workspace/root-pullrequests-build/root/math/mathcore/inc -I/mnt/build/workspace/root-pullrequests-build/root/math/mathcore/v7/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/imt/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/multiproc/inc -Iexternals/mnt/build/workspace/root-pullrequests-build/install/include -I/mnt/build/workspace/root-pullrequests-build/root/net/net/inc -I/mnt/build/workspace/root-pullrequests-build/root/io/io/inc -fdiagnostics-color=always -std=c++11 -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread -O3 -fPIC -std=c++11 -MD -MT math/mathmore/CMakeFiles/MathMore.dir/src/GSLRndmEngines.cxx.o -MF math/mathmore/CMakeFiles/MathMore.dir/src/GSLRndmEngines.cxx.o.d -o math/mathmore/CMakeFiles/MathMore.dir/src/GSLRndmEngines.cxx.o -c /mnt/build/workspace/root-pullrequests-build/root/math/mathmore/src/GSLRndmEngines.cxx; > * [2021-03-01T16:00:58.827Z] /mnt/build/workspace/root-pullrequests-build/root/math/mathmore/src/GSLRndmEngines.cxx:225:68: error: ‘gsl_ran_multivariate_gaussian’ was not declared in this scope. Sorry that it took me a while to look at this. I had to create an Ubuntu 16.04 virtual machine for testing. . @lmoneta, unfortunately, this error happens because Ubuntu 16.04 ships GSL version 2.1, which hasn't gsl_ran_multivariate_gaussian. The multivariate Gaussian random number generation in GSL was only introduced in version 2.2.1. I bypass this with an `#ifdef` that will define the function if the GSL version is < 2.2 by simply copying it from a higher version of GSL. Hopefully, this doesn't break the GPL license under which GSL is distributed. I think that I could also replace the function call to `gsl_ran_multivariate_gaussian` with the wrapper's full implementation. I am open to comments. I don't have access to a windows machine now; I will do the same and use a virtual machine to test that part.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7186#issuecomment-801496369:3054,access,access,3054,https://root.cern,https://github.com/root-project/root/pull/7186#issuecomment-801496369,2,['access'],['access']
Security,ationAuthority.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/fc5a8f99.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/c2a48ab6.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/fc5a8f99.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/23c77840.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/CNRS2.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/2694e4f2.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/c2a48ab6.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/2694e4f2.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/74a04bb6.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/74a04bb6.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/09ff08b7.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/f4401b90.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/163af95c.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/f4401b90.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/09ff08b7.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/CERN-Root-2.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/CERN-Root-2.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/163af95c.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/CERN-Root-2.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/78351451.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/7022e3c4.signing_policy' from,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8092#issuecomment-840048181:6382,secur,security,6382,https://root.cern,https://github.com/root-project/root/issues/8092#issuecomment-840048181,2,"['certificate', 'secur']","['certificates', 'security']"
Security,"ave ideas.; > ; > Simon and Di, Axel has this issue and me a similar one - any ideas ?; > ; >>> s I crosscheck (to see whether it's related to the Davix redirect issue #8155 ) I tried with curl but I get; >>> ; >>> $ curl -v https://webdav.lcg.triumf.ca:2880/atlas/atlaslocalgroupdisk/rucio/user/desilva/a1/a8/myFile.1.root; >>> * Trying 206.12.9.197:2880...; >>> * TCP_NODELAY set; >>> * Trying 2607:f8f0:660:3::36:2880...; >>> * TCP_NODELAY set; >>> * Immediate connect fail for 2607:f8f0:660:3::36: Network is unreachable; >>> Is that expected?; >>> ; > ; >> ***@***.*** t5]$ curl -v https://webdav.lcg.triumf.ca:2880/atlas/atlaslocalgroupdisk/rucio/user/desilva/a1/a8/myFile.1.root; >> * About to connect() to webdav.lcg.triumf.ca port 2880 (#0); >> * Trying 2607:f8f0:660:3::36...; >> * Connected to webdav.lcg.triumf.ca (2607:f8f0:660:3::36) port 2880 (#0); >> * Initializing NSS with certpath: sql:/etc/pki/nssdb; >> * CAfile: /etc/pki/tls/certs/ca-bundle.crt; >> CApath: none; >> * Server certificate:; >> * 	subject: CN=dpool46.lcg.triumf.ca,OU=triumf.ca,O=Grid,C=CA; >> * 	start date: Apr 08 16:29:03 2021 GMT; >> * 	expire date: May 08 16:29:03 2022 GMT; >> * 	common name: dpool46.lcg.triumf.ca; >> * 	issuer: CN=Grid Canada Certificate Authority,O=Grid,C=CA; >> * NSS error -8179 (SEC_ERROR_UNKNOWN_ISSUER); >> * Peer's Certificate issuer is not recognized.; >> * Closing connection 0; >> curl: (60) Peer's Certificate issuer is not recognized.; >> More details here: http://curl.haxx.se/docs/sslcerts.html; >> ; >> curl performs SSL certificate verification by default, using a ""bundle""; >> of Certificate Authority (CA) public keys (CA certs). If the default; >> bundle file isn't adequate, you can specify an alternate file; >> using the --cacert option.; >> If this HTTPS server uses a certificate signed by a CA represented in; >> the bundle, the certificate verification probably failed due to a; >> problem with the certificate (it might be expired, or the name might; >> not matc",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8092#issuecomment-839967983:1272,certificate,certificate,1272,https://root.cern,https://github.com/root-project/root/issues/8092#issuecomment-839967983,1,['certificate'],['certificate']
Security,"b in __GI___waitpid (pid=30320, stat_loc=stat_loc; entry=0x7ffdc1fcb5c0, options=options; entry=0) at ../sysdeps/unix/sysv/linux/waitpid.c:29; #1 0x00007f1625824fbb in do_system (line=<optimized out>) at ../sysdeps/posix/system.c:148; #2 0x00007f162696e21d in TUnixSystem::Exec (shellcmd=<optimized out>, this=0x15da570) at /home/zhe/root/core/unix/src/TUnixSystem.cxx:2118; #3 TUnixSystem::StackTrace (this=0x15da570) at /home/zhe/root/core/unix/src/TUnixSystem.cxx:2412; #4 0x00007f162697085c in TUnixSystem::DispatchSignals (this=0x15da570, sig=kSigSegmentationViolation) at /home/zhe/root/core/unix/src/TUnixSystem.cxx:3643; #5 <signal handler called>; #6 __memcpy_sse2_unaligned () at ../sysdeps/x86_64/multiarch/memcpy-sse2-unaligned.S:37; #7 0x00007f1626206eb4 in memcpy (__len=1234974, __src=<optimized out>, __dest=0x7f1616858010) at /usr/include/x86_64-linux-gnu/bits/string3.h:53; #8 TFileCacheRead::ReadBufferExtNormal (this=0x2e97a30, buf=0x7f1616858010 <error: Cannot access memory at address 0x7f1616858010>, pos=286, len=1234974, loc=; 0x7ffdc1fcdf44: 0) at /home/zhe/root/io/io/src/TFileCacheRead.cxx:531; #9 0x00007f161a71794a in TTreeCacheUnzip::ReadBufferExt (this=0x2e97a30, buf=<optimized out>, pos=<optimized out>, len=<optimized out>, loc=<optimized out>) at /home/zhe/root/tree/tree/src/TTreeCacheUnzip.cxx:979; #10 0x00007f161a716b3c in TTreeCacheUnzip::GetUnzipBuffer (this=0x2e97a30, buf=0x7ffdc1fcdfe0, pos=286, len=1234974, free=0x7ffdc1fcdfdc) at /home/zhe/root/tree/tree/src/TTreeCacheUnzip.cxx:810; #11 0x00007f161a6a7d97 in TBasket::ReadBasketBuffers (this=this; entry=0x2e9b770, pos=286, len=1234974, file=file; entry=0x1e41b90) at /home/zhe/root/tree/tree/src/TBasket.cxx:474; #12 0x00007f161a6b22d0 in TBranch::GetBasket (this=this; entry=0x2f7f180, basketnumber=0) at /home/zhe/root/tree/tree/src/TBranch.cxx:1159; #13 0x00007f161a6b29db in TBranch::GetEntry (this=0x2f7f180, entry=0, getall=<optimized out>) at /home/zhe/root/tree/tree/src/TBranch.cxx:1285; #14",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1010#issuecomment-362400295:15920,access,access,15920,https://root.cern,https://github.com/root-project/root/pull/1010#issuecomment-362400295,1,['access'],['access']
Security,"b/root-pullrequests-build/42333/console).; ### Errors:; - /mnt/build/workspace/root-pullrequests-build/root/io/io/src/TFile.cxx:1324:20: error: ‘RConcurrentHashColl’ in namespace ‘ROOT::Internal’ does not name a type ; - /mnt/build/workspace/root-pullrequests-build/root/io/io/src/TFile.cxx:1334:20: error: ‘ROOT::Internal::RConcurrentHashColl’ has not been declared ; - /mnt/build/workspace/root-pullrequests-build/root/io/io/src/TFile.cxx:1336:40: error: ‘hash’ was not declared in this scope ; - /mnt/build/workspace/root-pullrequests-build/root/io/io/src/TFile.cxx:1336:44: error: could not convert ‘{nullptr, 1, &lt;expression error&gt;}’ from ‘&lt;brace-enclosed initializer list&gt;’ to ‘TFile::InfoListRet’ ; - /mnt/build/workspace/root-pullrequests-build/root/io/io/src/TFile.cxx:1349:30: error: ‘hash’ was not declared in this scope ; - /mnt/build/workspace/root-pullrequests-build/root/io/io/src/TFile.cxx:1349:34: error: could not convert ‘{nullptr, 1, &lt;expression error&gt;}’ from ‘&lt;brace-enclosed initializer list&gt;’ to ‘TFile::InfoListRet’ ; - /mnt/build/workspace/root-pullrequests-build/root/io/io/src/TFile.cxx:1379:27: error: ‘hash’ was not declared in this scope ; - /mnt/build/workspace/root-pullrequests-build/root/io/io/src/TFile.cxx:1379:31: error: could not convert ‘{nullptr, 1, &lt;expression error&gt;}’ from ‘&lt;brace-enclosed initializer list&gt;’ to ‘TFile::InfoListRet’ ; - /mnt/build/workspace/root-pullrequests-build/root/io/io/src/TFile.cxx:1382:21: error: ‘hash’ was not declared in this scope ; - /mnt/build/workspace/root-pullrequests-build/root/io/io/src/TFile.cxx:1382:25: error: could not convert ‘{list, 0, &lt;expression error&gt;}’ from ‘&lt;brace-enclosed initializer list&gt;’ to ‘TFile::InfoListRet’ . ### Warnings:; - include/ROOT/RConcurrentHashColl.hxx:39:19: warning: variable ‘d’ set but not used [-Wunused-but-set-variable] ; - include/ROOT/RConcurrentHashColl.hxx:39:19: warning: variable ‘d’ set but not used [-Wunused-but-set-variable]",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2710#issuecomment-425299194:1241,hash,hash,1241,https://root.cern,https://github.com/root-project/root/pull/2710#issuecomment-425299194,2,['hash'],['hash']
Security,b34ea.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/4b2783ac.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/TSU-GE.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/4b2783ac.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/dd4b34ea.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/7f4db168.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/7f4db168.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/089450c2.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/PSC-Myproxy-CA.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/QuoVadis-Root-CA3G3.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/PSC-Myproxy-CA.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/089450c2.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/PSC-Myproxy-CA.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/QuoVadis-Root-CA3G3.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/368bc755.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/PSC-Myproxy-CA.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/1149214e.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/1149214e.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/87429ba3.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/30ffc224.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/295adc19.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/30ffc224.signing_,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8092#issuecomment-840048181:30482,secur,security,30482,https://root.cern,https://github.com/root-project/root/issues/8092#issuecomment-840048181,2,"['certificate', 'secur']","['certificates', 'security']"
Security,b90.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/09ff08b7.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/CERN-Root-2.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/CERN-Root-2.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/163af95c.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/CERN-Root-2.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/78351451.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/7022e3c4.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/CNRS2-Projets.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/CNRS2-Projets.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/CNRS2-Projets.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/7ed47087.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/98ef0ee5.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/UKeScienceRoot-2007.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/UKeScienceRoot-2007.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/UKeScienceRoot-2007.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/UKeScienceRoot-2007.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/2436bbb8.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/DigitalTrustPrivateRootCAG4.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/DigitalTrustPrivateRootCAG4.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/DigitalTrustPrivateRootCAG4.namespaces' from CURLOPT_,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8092#issuecomment-840048181:7702,secur,security,7702,https://root.cern,https://github.com/root-project/root/issues/8092#issuecomment-840048181,2,"['certificate', 'secur']","['certificates', 'security']"
Security,"bCling.so.6.30.04); ==721499== by 0x694CB7A: TCling::ProcessLineSynch(char const*, TInterpreter::EErrorCode*) (in /opt/root/lib/libCling.so.6.30.04); ==721499== Block was alloc'd at; ==721499== at 0x4849013: operator new(unsigned long) (in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so); ==721499== by 0x4A95EDD: TStorage::ObjectAlloc(unsigned long) (in /opt/root/lib/libCore.so.6.30.04); ==721499== by 0x2729AAAE: test() (in /tmp/tmp/test_cpp.so); ==721499== by 0x2729F039: ???; ==721499== by 0x6AA94F7: cling::IncrementalExecutor::executeWrapper(llvm::StringRef, cling::Value*) const (in /opt/root/lib/libCling.so.6.30.04); ==721499== by 0x6A31E4B: cling::Interpreter::RunFunction(clang::FunctionDecl const*, cling::Value*) (in /opt/root/lib/libCling.so.6.30.04); ==721499== by 0x6A32596: cling::Interpreter::EvaluateInternal(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::CompilationOptions, cling::Value*, cling::Transaction**, unsigned long) (in /opt/root/lib/libCling.so.6.30.04); ==721499== by 0x6A327B7: cling::Interpreter::process(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::Value*, cling::Transaction**, bool) (in /opt/root/lib/libCling.so.6.30.04); ==721499== by 0x6B09BC6: cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) (in /opt/root/lib/libCling.so.6.30.04); ==721499== by 0x693813B: HandleInterpreterException(cling::MetaProcessor*, char const*, cling::Interpreter::CompilationResult&, cling::Value*) (in /opt/root/lib/libCling.so.6.30.04); ==721499== by 0x694C6E7: TCling::ProcessLine(char const*, TInterpreter::EErrorCode*) (in /opt/root/lib/libCling.so.6.30.04); ==721499== by 0x694CB7A: TCling::ProcessLineSynch(char const*, TInterpreter::EErrorCode*) (in /opt/root/lib/libCling.so.6.30.04); ==721499== ; Error in <TList::Clear>: A list is accessing an object (0xf0ff6d0) already deleted (list name = TList); ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14504#issuecomment-1919235775:5353,access,accessing,5353,https://root.cern,https://github.com/root-project/root/issues/14504#issuecomment-1919235775,1,['access'],['accessing']
Security,body in /opt/root_src/gui/guihtml/src/TGHtmlTable.cxx:653; 30: Taking false branch in /opt/root_src/gui/guihtml/src/TGHtmlTable.cxx:657; 31: Left side of '||' is false in /opt/root_src/gui/guihtml/src/TGHtmlTable.cxx:663; 32: Taking false branch in /opt/root_src/gui/guihtml/src/TGHtmlTable.cxx:663; 33: Loop condition is true. Entering loop body in /opt/root_src/gui/guihtml/src/TGHtmlTable.cxx:681; 34: Assigned value is garbage or undefined in /opt/root_src/gui/guihtml/src/TGHtmlTable.cxx:687; /opt/root_src/gui/guihtml/src/TGHtmlTable.cxx:1226:4: warning: Value stored to 'z' is never read [clang-analyzer-deadcode.DeadStores]; 1: Value stored to 'z' is never read in /opt/root_src/gui/guihtml/src/TGHtmlTable.cxx:1226; /opt/root_src/gui/guihtml/src/TGHtmlUri.cxx:230:7: warning: Call to function 'strcat' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcat'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]; 1: Call to function 'strcat' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcat'. CWE-119 in /opt/root_src/gui/guihtml/src/TGHtmlUri.cxx:230; /opt/root_src/gui/guihtml/src/TGHtmlUri.cxx:353:10: warning: Call to function 'strcat' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcat'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]; 1: Call to function 'strcat' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcat'. CWE-119 in /opt/root_src/gui/guihtml/src/TGHtmlUri.cxx:353; /opt/root_src/gui/guihtml/src/TGHtmlUri.cxx:357:16: warning: Call to function 'strcpy' is insecure as it does not provide bo,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7533:94249,secur,security,94249,https://root.cern,https://github.com/root-project/root/issues/7533,1,['secur'],['security']
Security,boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:8724; /opt/root_src/net/http/civetweb/civetweb.c:8750:2: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:8750; /opt/root_src/net/http/civetweb/civetweb.c:9169:4: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:9169; /opt/root_src/net/http/civetweb/civetweb.c:9223:4: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' i,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7528:44799,secur,security,44799,https://root.cern,https://github.com/root-project/root/issues/7528,1,['secur'],['security']
Security,boundary checks such as 'memset_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:7374; /opt/root_src/net/http/civetweb/civetweb.c:7477:4: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:7477; /opt/root_src/net/http/civetweb/civetweb.c:7535:2: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:7535; /opt/root_src/net/http/civetweb/civetweb.c:7556:5: warning: Call to function 'memmove' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memmove_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memmove' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memmove_,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7528:33817,secur,security,33817,https://root.cern,https://github.com/root-project/root/issues/7528,1,['secur'],['security']
Security,boundary checks such as 'memset_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:7746; /opt/root_src/net/http/civetweb/civetweb.c:7927:4: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:7927; /opt/root_src/net/http/civetweb/civetweb.c:8127:8: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:8127; /opt/root_src/net/http/civetweb/civetweb.c:8412:2: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' i,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7528:39719,secur,security,39719,https://root.cern,https://github.com/root-project/root/issues/7528,1,['secur'],['security']
Security,boundary checks such as 'memset_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:7927; /opt/root_src/net/http/civetweb/civetweb.c:8127:8: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:8127; /opt/root_src/net/http/civetweb/civetweb.c:8412:2: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:8412; /opt/root_src/net/http/civetweb/civetweb.c:8637:2: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]; 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/net/http/civetweb/civetweb.c:8637; /opt/root_src/,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7528:40374,secur,security,40374,https://root.cern,https://github.com/root-project/root/issues/7528,1,['secur'],['security']
Security,boundary checks such as 'memset_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:8705; /opt/root_src/net/http/civetweb/civetweb.c:8724:4: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:8724; /opt/root_src/net/http/civetweb/civetweb.c:8750:2: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:8750; /opt/root_src/net/http/civetweb/civetweb.c:9169:4: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' i,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7528:44144,secur,security,44144,https://root.cern,https://github.com/root-project/root/issues/7528,1,['secur'],['security']
Security,boundary checks such as 'memset_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:8750; /opt/root_src/net/http/civetweb/civetweb.c:9169:4: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:9169; /opt/root_src/net/http/civetweb/civetweb.c:9223:4: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:9223; /opt/root_src/net/http/civetweb/civetweb.c:9502:9: warning: Call to function 'sscanf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sscanf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'sscanf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sscanf_s' i,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7528:45454,secur,security,45454,https://root.cern,https://github.com/root-project/root/issues/7528,1,['secur'],['security']
Security,"boundary checks such as 'memset_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:9169; /opt/root_src/net/http/civetweb/civetweb.c:9223:4: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:9223; /opt/root_src/net/http/civetweb/civetweb.c:9502:9: warning: Call to function 'sscanf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sscanf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'sscanf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sscanf_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:9502; /opt/root_src/net/http/civetweb/civetweb.c:9911:11: warning: Although the value stored to 'p' is used in the enclosing expression, the value is never actually read from 'p' [clang-analyzer-deadcode.DeadStores]; 1: Although the value stored to 'p' is used in the enclosing expression, the value is never actually read from 'p' in /opt/root_src/net/http/civetweb/civetweb.c:9911; /opt/root_src/net/http/civetweb/civetweb.c:9918:3: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that supp",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7528:46109,secur,security,46109,https://root.cern,https://github.com/root-project/root/issues/7528,1,['secur'],['security']
Security,boundary checks such as 'sscanf_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:7735; /opt/root_src/net/http/civetweb/civetweb.c:7746:4: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:7746; /opt/root_src/net/http/civetweb/civetweb.c:7927:4: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:7927; /opt/root_src/net/http/civetweb/civetweb.c:8127:8: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' i,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7528:39064,secur,security,39064,https://root.cern,https://github.com/root-project/root/issues/7528,1,['secur'],['security']
Security,boundary checks such as 'sscanf_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:8656; /opt/root_src/net/http/civetweb/civetweb.c:8705:2: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:8705; /opt/root_src/net/http/civetweb/civetweb.c:8724:4: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:8724; /opt/root_src/net/http/civetweb/civetweb.c:8750:2: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' i,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7528:43489,secur,security,43489,https://root.cern,https://github.com/root-project/root/issues/7528,1,['secur'],['security']
Security,bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcat'. CWE-119 in /opt/root_src/core/clib/src/Demangle.c:402; /opt/root_src/core/clib/src/Demangle.c:416:10: warning: Call to function 'strcat' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcat'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]; 1: Call to function 'strcat' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcat'. CWE-119 in /opt/root_src/core/clib/src/Demangle.c:416; /opt/root_src/core/clib/src/Demangle.c:417:10: warning: Call to function 'strncat' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'strncat_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'strncat' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'strncat_s' in case of C11 in /opt/root_src/core/clib/src/Demangle.c:417; /opt/root_src/core/clib/src/Demangle.c:505:7: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case ,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7422:7189,secur,security,7189,https://root.cern,https://github.com/root-project/root/issues/7422,1,['secur'],['security']
Security,"branch in /opt/root_src/core/cont/src/TArrayS.cxx:37; 4: Calling 'TArrayS::Set' in /opt/root_src/core/cont/src/TArrayS.cxx:37; 5: 'n' is >= 0 in /opt/root_src/core/cont/src/TArrayS.cxx:107; 6: Taking false branch in /opt/root_src/core/cont/src/TArrayS.cxx:107; 7: 'n' is not equal to field 'fN' in /opt/root_src/core/cont/src/TArrayS.cxx:108; 8: Taking true branch in /opt/root_src/core/cont/src/TArrayS.cxx:108; 9: 'temp' initialized to a null pointer value in /opt/root_src/core/cont/src/TArrayS.cxx:109; 10: 'n' is not equal to 0 in /opt/root_src/core/cont/src/TArrayS.cxx:110; 11: Taking true branch in /opt/root_src/core/cont/src/TArrayS.cxx:110; 12: 'n' is >= field 'fN' in /opt/root_src/core/cont/src/TArrayS.cxx:112; 13: Taking false branch in /opt/root_src/core/cont/src/TArrayS.cxx:112; 14: Null pointer passed to 2nd parameter expecting 'nonnull' in /opt/root_src/core/cont/src/TArrayS.cxx:114; /opt/root_src/core/cont/src/TRefArray.cxx:348:30: warning: Array access (via field 'fUIDs') results in a null pointer dereference [clang-analyzer-core.NullDereference]; 1: Assuming 'obj' is non-null in /opt/root_src/core/cont/src/TRefArray.cxx:378; 2: Taking false branch in /opt/root_src/core/cont/src/TRefArray.cxx:378; 3: Calling 'TRefArray::Last' in /opt/root_src/core/cont/src/TRefArray.cxx:379; 4: Assuming the condition is false in /opt/root_src/core/cont/src/TRefArray.cxx:575; 5: Taking false branch in /opt/root_src/core/cont/src/TRefArray.cxx:575; 6: Returning pointer, which participates in a condition later in /opt/root_src/core/cont/src/TRefArray.cxx:578; 7: Returning from 'TRefArray::Last' in /opt/root_src/core/cont/src/TRefArray.cxx:379; 8: Assuming the condition is false in /opt/root_src/core/cont/src/TRefArray.cxx:379; 9: Taking false branch in /opt/root_src/core/cont/src/TRefArray.cxx:379; 10: Calling 'TRefArray::AddLast' in /opt/root_src/core/cont/src/TRefArray.cxx:393; 11: Calling 'TRefArray::AddAtAndExpand' in /opt/root_src/core/cont/src/TRefArray.cxx:284; 12: 'ob",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7424:12230,access,access,12230,https://root.cern,https://github.com/root-project/root/issues/7424,1,['access'],['access']
Security,buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/gui/gui/src/TGText.cxx:630; /opt/root_src/gui/gui/src/TGText.cxx:671:13: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]; 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/gui/gui/src/TGText.cxx:671; /opt/root_src/gui/gui/src/TGText.cxx:1106:10: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]; 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/gui/gui/src/TGText.cxx:1106; /opt/root_src/gui/gui/src/TGTextEdit.cxx:504:16: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]; 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/gui/gui/src/TGTextEdit.cxx:504; /opt/root_src/gui/gui/src/TGTextEdit.cxx:1873:10: warning: Value stored to 'len' is never read [clang-analyzer-deadcode.DeadStores]; 1: ,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7533:56664,secur,security,56664,https://root.cern,https://github.com/root-project/root/issues/7533,1,['secur'],['security']
Security,build/rmkdepend/pr.c:132; /opt/root_src/build/rmkdepend/pr.c:135:10: warning: Call to function 'sprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'sprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11 in /opt/root_src/build/rmkdepend/pr.c:135; /opt/root_src/build/rmkdepend/pr.c:141:7: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]; 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/build/rmkdepend/pr.c:141; /opt/root_src/build/rmkdepend/pr.c:147:8: warning: Potential leak of memory pointed to by 'ipifile' [clang-analyzer-unix.Malloc]; 1: Assuming the condition is false in /opt/root_src/build/rmkdepend/pr.c:173; 2: Taking false branch in /opt/root_src/build/rmkdepend/pr.c:173; 3: Assuming 'file' is not equal to field 'i_file' in /opt/root_src/build/rmkdepend/pr.c:176; 4: Taking true branch in /opt/root_src/build/rmkdepend/pr.c:176; 5: Calling 'pr' in /opt/root_src/build/rmkdepend/pr.c:177; 6: Assuming 'len' is > 2 in /opt/root_src/build/rmkdepend/pr.c:104; 7: Left side of '&&' is true in /opt/root_src/build/rmkdepend/pr.c:104; 8: Assuming the condition is true in /opt/root_src/build/rmkdepend/pr.c:104; 9,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7410:46205,secur,security,46205,https://root.cern,https://github.com/root-project/root/issues/7410,1,['secur'],['security']
Security,c/bindings/pyroot/cppyy/CPyCppyy/src/TemplateProxy.cxx:155; 28: Assuming the condition is true in /opt/root_src/bindings/pyroot/cppyy/CPyCppyy/src/TemplateProxy.cxx:156; 29: expanded from macro 'Py_DECREF' in /usr/include/python2.7/object.h:774; 30: Taking true branch in /opt/root_src/bindings/pyroot/cppyy/CPyCppyy/src/TemplateProxy.cxx:156; 31: expanded from macro 'Py_DECREF' in /usr/include/python2.7/object.h:773; 32: Loop condition is false. Exiting loop in /opt/root_src/bindings/pyroot/cppyy/CPyCppyy/src/TemplateProxy.cxx:156; 33: expanded from macro 'Py_DECREF' in /usr/include/python2.7/object.h:772; 34: Value assigned to 'pytc' in /opt/root_src/bindings/pyroot/cppyy/CPyCppyy/src/TemplateProxy.cxx:157; 35: Assuming 'pytc' is null in /opt/root_src/bindings/pyroot/cppyy/CPyCppyy/src/TemplateProxy.cxx:158; 36: Taking false branch in /opt/root_src/bindings/pyroot/cppyy/CPyCppyy/src/TemplateProxy.cxx:158; 37: Access to field 'ob_refcnt' results in a dereference of a null pointer (loaded from variable 'pytc') in /opt/root_src/bindings/pyroot/cppyy/CPyCppyy/src/TemplateProxy.cxx:163; 38: expanded from macro 'Py_DECREF' in /usr/include/python2.7/object.h:774; /opt/root_src/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:2153:27: Calling 'Allocate'; /opt/root_src/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:665:33: Calling 'TInterpreter::ClassInfo_Size'; /opt/root_src/core/meta/inc/TInterpreter.h:560:22: expanded from macro 'gInterpreter'; /opt/root_src/core/meta/inc/TInterpreter.h:430:67: Returning zero; /opt/root_src/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:665:33: Returning from 'TInterpreter::ClassInfo_Size'; /opt/root_src/core/meta/inc/TInterpreter.h:560:22: expanded from macro 'gInterpreter'; /opt/root_src/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:665:26: Call to 'malloc' has an allocation size of 0 bytes; /opt/root_src/bindings/pyroot/cppyy/cppyy-backend/clingw,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7400#issuecomment-792738257:28423,Access,Access,28423,https://root.cern,https://github.com/root-project/root/issues/7400#issuecomment-792738257,1,['Access'],['Access']
Security,c/bindings/pyroot/cppyy/CPyCppyy/src/TemplateProxy.cxx:155; 28: Assuming the condition is true in /opt/root_src/bindings/pyroot/cppyy/CPyCppyy/src/TemplateProxy.cxx:156; 29: expanded from macro 'Py_DECREF' in /usr/include/python2.7/object.h:774; 30: Taking true branch in /opt/root_src/bindings/pyroot/cppyy/CPyCppyy/src/TemplateProxy.cxx:156; 31: expanded from macro 'Py_DECREF' in /usr/include/python2.7/object.h:773; 32: Loop condition is false. Exiting loop in /opt/root_src/bindings/pyroot/cppyy/CPyCppyy/src/TemplateProxy.cxx:156; 33: expanded from macro 'Py_DECREF' in /usr/include/python2.7/object.h:772; 34: Value assigned to 'pytc' in /opt/root_src/bindings/pyroot/cppyy/CPyCppyy/src/TemplateProxy.cxx:157; 35: Assuming 'pytc' is null in /opt/root_src/bindings/pyroot/cppyy/CPyCppyy/src/TemplateProxy.cxx:158; 36: Taking false branch in /opt/root_src/bindings/pyroot/cppyy/CPyCppyy/src/TemplateProxy.cxx:158; 37: Access to field 'ob_refcnt' results in a dereference of a null pointer (loaded from variable 'pytc') in /opt/root_src/bindings/pyroot/cppyy/CPyCppyy/src/TemplateProxy.cxx:163; 38: expanded from macro 'Py_DECREF' in /usr/include/python2.7/object.h:774; /opt/root_src/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:665:26: warning: Call to 'malloc' has an allocation size of 0 bytes [clang-analyzer-optin.portability.UnixAPI]; 1: Calling 'Allocate' in /opt/root_src/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:2153; 2: Calling 'TInterpreter::ClassInfo_Size' in /opt/root_src/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:665; 3: expanded from macro 'gInterpreter' in /opt/root_src/core/meta/inc/TInterpreter.h:560; 4: Returning zero in /opt/root_src/core/meta/inc/TInterpreter.h:430; 5: Returning from 'TInterpreter::ClassInfo_Size' in /opt/root_src/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:665; 6: expanded from macro 'gInterpreter' in /opt/root_src/core/meta/inc/TInterpreter,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7400#issuecomment-824715675:15375,Access,Access,15375,https://root.cern,https://github.com/root-project/root/issues/7400#issuecomment-824715675,1,['Access'],['Access']
Security,c/core/clib/src/Demangle.c:402; /opt/root_src/core/clib/src/Demangle.c:416:10: warning: Call to function 'strcat' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcat'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]; 1: Call to function 'strcat' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcat'. CWE-119 in /opt/root_src/core/clib/src/Demangle.c:416; /opt/root_src/core/clib/src/Demangle.c:417:10: warning: Call to function 'strncat' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'strncat_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'strncat' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'strncat_s' in case of C11 in /opt/root_src/core/clib/src/Demangle.c:417; /opt/root_src/core/clib/src/Demangle.c:505:7: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/core/clib/src/Demangle.c:505; /opt/root_src/core/clib/src/Demangle.c:1316:22: warning: Null pointer passed to 1st parameter expecting 'non,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7422:7310,secur,security,7310,https://root.cern,https://github.com/root-project/root/issues/7422,1,['secur'],['security']
Security,c/graf2d/x11/src/Rotated.cxx:1198; 46: Access to field 'fNext' results in a dereference of a null pointer (loaded from variable 'last') in /opt/root_src/graf2d/x11/src/Rotated.cxx:1205; /opt/root_src/graf2d/x11/src/TGX11.cxx:2280:4: warning: Maybe you meant to call TVirtualX::SetLineColor() instead [clazy-skipped-base-method]; /opt/root_src/graf2d/x11/src/TGX11.cxx:2385:4: warning: Maybe you meant to call TVirtualX::SetMarkerColor() instead [clazy-skipped-base-method]; /opt/root_src/graf2d/x11/src/TGX11.cxx:3119:4: warning: Maybe you meant to call TVirtualX::SetTextAlign() instead [clazy-skipped-base-method]; /opt/root_src/graf2d/x11/src/TGX11.cxx:3129:4: warning: Maybe you meant to call TVirtualX::SetTextColor() instead [clazy-skipped-base-method]; /opt/root_src/graf2d/x11/src/gifencode.c:246:5: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/graf2d/x11/src/gifencode.c:246; /opt/root_src/graf2d/x11ttf/src/TGX11TTF.cxx:150:1: warning: non-POD static (TTFX11Init) [clazy-non-pod-global-static]; /opt/root_src/graf2d/asimage/src/TASImage.cxx; /opt/root_src/graf2d/gpad/src/TButton.cxx; /opt/root_src/graf2d/gpad/src/TCanvas.cxx; /opt/root_src/graf2d/gpad/src/TCreatePrimitives.cxx; /opt/root_src/graf2d/gpad/src/TGroupButton.cxx; /opt/root_src/graf2d/gpad/src/TPad.cxx; /opt/root_src/graf2d/gpadv7/src/RColor.cxx; /opt/root_src/graf2d/graf/src/TCandle.cxx; /opt/root_src/graf2d/graf/src/TCurlyLine.cxx; /opt/root_src/graf2d/graf/src/TGaxis.cxx; /opt/root_src/graf2d/gr,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7432:96528,secur,security,96528,https://root.cern,https://github.com/root-project/root/issues/7432,1,['secur'],['security']
Security,c/grid-security/certificates/7ecb2657.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/393f7863.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/AEGIS.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/AEGIS.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/1691b9ba.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/AEGIS.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/7c27c6a1.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/7ecb2657.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/AEGIS.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/1691b9ba.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/cc5645bd.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/GermanGrid.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/cc5645bd.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/f4cf8fb6.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/4b3f5558.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/GermanGrid.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/4b3f5558.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/GermanGrid.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/QuoVadis-Root-CA3G3.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/QuoVadis-Root-CA3G3.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/87429ba3.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/TRGrid.si,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8092#issuecomment-840048181:35076,secur,security,35076,https://root.cern,https://github.com/root-project/root/issues/8092#issuecomment-840048181,2,"['certificate', 'secur']","['certificates', 'security']"
Security,c/grid-security/certificates/CNRS2.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/USERTrustRSACertificationAuthority.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/DigiCertGridRootCA-Root.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/USERTrustRSACertificationAuthority.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/edca0fc0.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/2436bbb8.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/d58bb4bc.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/USERTrustRSACertificationAuthority.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/fc5a8f99.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/c2a48ab6.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/fc5a8f99.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/23c77840.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/CNRS2.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/2694e4f2.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/c2a48ab6.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/2694e4f2.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/74a04bb6.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/74a04bb6.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/09ff08b7.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/f4401b90.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/163af95c.namespaces' from ,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8092#issuecomment-840048181:5629,secur,security,5629,https://root.cern,https://github.com/root-project/root/issues/8092#issuecomment-840048181,2,"['certificate', 'secur']","['certificates', 'security']"
Security,c/grid-security/certificates/DigitalTrustPrivateRootCAG4.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/DigitalTrustPrivateRootCAG4.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/DigitalTrustPrivateRootCAG4.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/DigitalTrustPrivateRootCAG4.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/585d9326.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/d58bb4bc.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/585d9326.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/23c77840.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/CNRS2-Grid-FR.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/78351451.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/CESNET-CA-4.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/KENETROOTCA.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/CNRS2-Grid-FR.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/KENETROOTCA.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/CESNET-CA-4.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/CNRS2-Grid-FR.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/KENETROOTCA.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/COMODO-RSA-CA.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/CESNET-CA-4.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/COMODO-RSA-CA.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/UKeScienceCA-2B.info' from CURL,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8092#issuecomment-840048181:9406,secur,security,9406,https://root.cern,https://github.com/root-project/root/issues/8092#issuecomment-840048181,2,"['certificate', 'secur']","['certificates', 'security']"
Security,c/grid-security/certificates/KEK.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/DigiCertGridTrustCA-Classic.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/TERENAeSciencePersonalCA3.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/e91bd360.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/TERENAeSciencePersonalCA3.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/2f2f573f.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/TERENAeSciencePersonalCA3.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/KEK.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/MYIFAM.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/TERENAeSciencePersonalCA3.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/dbf09133.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/PK-Grid-2007.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/dbf09133.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/8f016f43.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/TSU-GE.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/8f016f43.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/PKIUNAMgrid.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/TSU-GE.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/PKIUNAMgrid.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/GermanGrid.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/TSU-GE.namespaces' from CURLOPT_,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8092#issuecomment-840048181:28139,secur,security,28139,https://root.cern,https://github.com/root-project/root/issues/8092#issuecomment-840048181,2,"['certificate', 'secur']","['certificates', 'security']"
Security,c/grid-security/certificates/MaGrid.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/MaGrid.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/d7e8dc79.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/SiGNET-CA.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/MaGrid.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/SlovakGrid.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/7d0d064a.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/5d674a88.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/5d674a88.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/7d0d064a.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/GridCanada.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/MARGI.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/GridCanada.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/SiGNET-CA.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/GridCanada.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/MARGI.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/GridCanada.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/MARGI.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/bffbd7d0.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/709bed08.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/bffbd7d0.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/11b4a5a2.namespaces' from CURLOPT_CAPATH; * fail,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8092#issuecomment-840048181:47019,secur,security,47019,https://root.cern,https://github.com/root-project/root/issues/8092#issuecomment-840048181,2,"['certificate', 'secur']","['certificates', 'security']"
Security,c/sql/mysql/src/TMySQLStatement.cxx:729; 19: Taking false branch in /opt/root_src/sql/mysql/src/TMySQLStatement.cxx:729; 20: Control jumps to 'case MYSQL_TYPE_TINY:' at line 745 in /opt/root_src/sql/mysql/src/TMySQLStatement.cxx:741; 21: Execution continues on line 764 in /opt/root_src/sql/mysql/src/TMySQLStatement.cxx:745; 22: Assuming 'allocsize' is > 'fgAllocSizeLimit' in /opt/root_src/sql/mysql/src/TMySQLStatement.cxx:764; 23: Taking true branch in /opt/root_src/sql/mysql/src/TMySQLStatement.cxx:764; 24: The value 0 is assigned to 'allocsize' in /opt/root_src/sql/mysql/src/TMySQLStatement.cxx:764; 25: Call to 'malloc' has an allocation size of 0 bytes in /opt/root_src/sql/mysql/src/TMySQLStatement.cxx:766; /opt/root_src/sql/mysql/src/TMySQLStatement.cxx:940:15: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]; 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/sql/mysql/src/TMySQLStatement.cxx:940; /opt/root_src/sql/pgsql/src/TPgSQLStatement.cxx:808:4: warning: Null pointer passed as 1st argument to string copy function [clang-analyzer-unix.cstring.NullArg]; 1: Calling 'TPgSQLStatement::SetSQLParamType' in /opt/root_src/sql/pgsql/src/TPgSQLStatement.cxx:806; 2: Assuming 'npar' is >= 0 in /opt/root_src/sql/pgsql/src/TPgSQLStatement.cxx:702; 3: Left side of '||' is false in /opt/root_src/sql/pgsql/src/TPgSQLStatement.cxx:702; 4: Assuming 'npar' is < field 'fNumBuffers' in /opt/root_src/sql/pgsql/src/TPgSQLStatement.cxx:702; 5: Taking false branch in /opt/root_src/sql/pgsql/src/TPgSQLStatement.cxx:702; 6: Assuming 'maxsize' is < 0 in /opt/root_src/sql/pgsql/src/TPgSQLStatement.cxx:704,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7525:2877,secur,security,2877,https://root.cern,https://github.com/root-project/root/issues/7525,1,['secur'],['security']
Security,c/tmva/tmva/src/PDEFoam.cxx:319; 14: Taking false branch in /opt/root_src/tmva/tmva/src/PDEFoam.cxx:319; 15: 'i' is >= field 'fDim' in /opt/root_src/tmva/tmva/src/PDEFoam.cxx:325; 16: Loop condition is false. Execution continues on line 340 in /opt/root_src/tmva/tmva/src/PDEFoam.cxx:325; 17: Calling 'PDEFoam::InitCells' in /opt/root_src/tmva/tmva/src/PDEFoam.cxx:343; 18: Field 'fCells' is equal to null in /opt/root_src/tmva/tmva/src/PDEFoam.cxx:359; 19: Taking false branch in /opt/root_src/tmva/tmva/src/PDEFoam.cxx:359; 20: Value assigned to field 'fCells' in /opt/root_src/tmva/tmva/src/PDEFoam.cxx:364; 21: Assuming field 'fCells' is null in /opt/root_src/tmva/tmva/src/PDEFoam.cxx:365; 22: Taking true branch in /opt/root_src/tmva/tmva/src/PDEFoam.cxx:365; 23: Assuming 'i' is < field 'fNCells' in /opt/root_src/tmva/tmva/src/PDEFoam.cxx:369; 24: Loop condition is true. Entering loop body in /opt/root_src/tmva/tmva/src/PDEFoam.cxx:369; 25: Array access (via field 'fCells') results in a null pointer dereference in /opt/root_src/tmva/tmva/src/PDEFoam.cxx:370; /opt/root_src/tmva/tmva/src/PDEFoam.cxx:397:11: warning: Array access (via field 'fCells') results in a null pointer dereference [clang-analyzer-core.NullDereference]; 1: Assuming field 'fPseRan' is not equal to null in /opt/root_src/tmva/tmva/src/PDEFoam.cxx:297; 2: Taking false branch in /opt/root_src/tmva/tmva/src/PDEFoam.cxx:297; 3: Assuming field 'fDistr' is not equal to null in /opt/root_src/tmva/tmva/src/PDEFoam.cxx:298; 4: Taking false branch in /opt/root_src/tmva/tmva/src/PDEFoam.cxx:298; 5: Assuming field 'fDim' is not equal to 0 in /opt/root_src/tmva/tmva/src/PDEFoam.cxx:299; 6: Taking false branch in /opt/root_src/tmva/tmva/src/PDEFoam.cxx:299; 7: Field 'fRvec' is not equal to null in /opt/root_src/tmva/tmva/src/PDEFoam.cxx:306; 8: Taking false branch in /opt/root_src/tmva/tmva/src/PDEFoam.cxx:306; 9: Assuming field 'fDim' is <= 0 in /opt/root_src/tmva/tmva/src/PDEFoam.cxx:308; 10: Taking false branch in,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7526:96446,access,access,96446,https://root.cern,https://github.com/root-project/root/issues/7526,1,['access'],['access']
Security,ca port 2880 (#0); * Trying 2607:f8f0:660:3::40...; * Connected to webdav.lcg.triumf.ca (2607:f8f0:660:3::40) port 2880 (#0); * Initializing NSS with certpath: sql:/etc/pki/nssdb; * failed to load '/etc/grid-security/certificates/7022e3c4.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/69105f4f.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/CERN-Root-2.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/69105f4f.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/DigiCertGridRootCA-Root.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/DigiCertAssuredIDRootCA-Root.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/edca0fc0.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/DigiCertAssuredIDRootCA-Root.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/CESNET-CA-Root.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/CNRS2-Projets.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/DigiCertAssuredIDRootCA-Root.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/CESNET-CA-Root.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/DigiCertAssuredIDRootCA-Root.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/727146a8.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/b1159c4c.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/b1159c4c.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/727146a8.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/04f60c28.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certific,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8092#issuecomment-840048181:1555,secur,security,1555,https://root.cern,https://github.com/root-project/root/issues/8092#issuecomment-840048181,2,"['certificate', 'secur']","['certificates', 'security']"
Security,"call to ‘std::unique_ptr&lt;RooArgSet&gt;::unique_ptr(RooAbsCollection*)’ . ### Warnings:; - /mnt/build/workspace/root-pullrequests-build/root/core/meta/src/TClass.cxx:686:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:5203:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:4757:26: warning: ‘char* strncpy(char*, const char*, size_t)’ output may be truncated copying 10 bytes from a string of length 10 [-Wstringop-truncation] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:490:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing between 2147483648 and 2147483647 bytes at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 4294967295] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:761:21: warning: ‘%lu’ directive writing between 1 and 20 bytes into a region of size between 0 and 8191 [-Wformat-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/graf3d/ftgl/src/FTVectoriser.cxx:186:76: warning: cast between incompatible function types from ‘void (*)(GLenum, FTMesh*)’ {aka ‘void (*)(unsigned int, FTMesh*)’} to ‘GLUTesselatorFunction’ {aka ‘void (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/graf3d/ftgl/src/FTVectoriser.cxx:187:76: warning: cast between incompatible function types from ‘void (*)(void*, FTMesh*)’ to ‘GLUTesselatorFunction’ {aka ‘void (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/graf3d/ftgl/src/FTVectoriser.cxx:188:76: warning: cast between incompatible function types from ‘void (*)(FTGL_DOUBLE*, void**, GLfloat*, ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3509#issuecomment-470484693:2368,access,accessing,2368,https://root.cern,https://github.com/root-project/root/pull/3509#issuecomment-470484693,1,['access'],['accessing']
Security,case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320; 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:1228; 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320; /opt/root_src/builtins/lz4/lz4.c:1449:5: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4.c:208; 2: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:1449; 3: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4.c:208; /opt/root_src/builtins/lz4/lz4.c:1458:5: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4.c:208; 2: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/builtins/lz4/,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7411:12390,secur,security,12390,https://root.cern,https://github.com/root-project/root/issues/7411,1,['secur'],['security']
Security,case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320; 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:414; 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320; /opt/root_src/builtins/lz4/lz4.c:447:9: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320; 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:447; 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320; /opt/root_src/builtins/lz4/lz4.c:451:9: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320; 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7411:1376,secur,security,1376,https://root.cern,https://github.com/root-project/root/issues/7411,1,['secur'],['security']
Security,case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320; 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:447; 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320; /opt/root_src/builtins/lz4/lz4.c:451:9: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320; 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:451; 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320; /opt/root_src/builtins/lz4/lz4.c:469:10: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320; 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/l,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7411:2163,secur,security,2163,https://root.cern,https://github.com/root-project/root/issues/7411,1,['secur'],['security']
Security,case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320; 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:487; 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320; /opt/root_src/builtins/lz4/lz4.c:488:9: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320; 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:488; 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320; /opt/root_src/builtins/lz4/lz4.c:489:9: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320; 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7411:6096,secur,security,6096,https://root.cern,https://github.com/root-project/root/issues/7411,1,['secur'],['security']
Security,case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320; 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:488; 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320; /opt/root_src/builtins/lz4/lz4.c:489:9: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320; 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:489; 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320; /opt/root_src/builtins/lz4/lz4.c:492:9: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320; 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7411:6883,secur,security,6883,https://root.cern,https://github.com/root-project/root/issues/7411,1,['secur'],['security']
Security,case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320; 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:489; 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320; /opt/root_src/builtins/lz4/lz4.c:492:9: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320; 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:492; 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320; /opt/root_src/builtins/lz4/lz4.c:493:9: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320; 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7411:7670,secur,security,7670,https://root.cern,https://github.com/root-project/root/issues/7411,1,['secur'],['security']
Security,case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320; 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:492; 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320; /opt/root_src/builtins/lz4/lz4.c:493:9: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320; 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:493; 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320; /opt/root_src/builtins/lz4/lz4.c:500:5: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320; 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7411:8457,secur,security,8457,https://root.cern,https://github.com/root-project/root/issues/7411,1,['secur'],['security']
Security,case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320; 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:493; 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320; /opt/root_src/builtins/lz4/lz4.c:500:5: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320; 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:500; 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320; /opt/root_src/builtins/lz4/lz4.c:503:9: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320; 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7411:9244,secur,security,9244,https://root.cern,https://github.com/root-project/root/issues/7411,1,['secur'],['security']
Security,case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320; 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:500; 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320; /opt/root_src/builtins/lz4/lz4.c:503:9: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320; 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:503; 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320; /opt/root_src/builtins/lz4/lz4.c:822:13: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4.c:208; 2: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/builtins/lz4,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7411:10031,secur,security,10031,https://root.cern,https://github.com/root-project/root/issues/7411,1,['secur'],['security']
Security,case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: expanded from macro 'vsnprintf_impl' in /opt/root_src/net/http/civetweb/civetweb.c:781; 2: expanded from macro 'IGNORE_UNUSED_RESULT' in /opt/root_src/net/http/civetweb/civetweb.c:226; 3: Call to function 'vsnprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'vsnprintf_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:3633; 4: expanded from macro 'vsnprintf_impl' in /opt/root_src/net/http/civetweb/civetweb.c:781; 5: expanded from macro 'IGNORE_UNUSED_RESULT' in /opt/root_src/net/http/civetweb/civetweb.c:226; /opt/root_src/net/http/civetweb/civetweb.c:3878:5: warning: Call to function 'sprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'sprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:3878; /opt/root_src/net/http/civetweb/civetweb.c:3937:5: warning: Call to function 'memmove' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memmove_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memmove' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memmo,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7528:25438,secur,security,25438,https://root.cern,https://github.com/root-project/root/issues/7528,1,['secur'],['security']
Security,case of C11 in /opt/root_src/builtins/lz4/lz4hc.c:97; 3: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4.c:208; /opt/root_src/builtins/lz4/lz4hc.c:754:9: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4hc.c:754; /opt/root_src/builtins/lz4/lz4hc.c:893:9: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4hc.c:893; /opt/root_src/builtins/lz4/lz4hc.c:1015:7: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4.c:208; 2: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length ,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7411:63127,secur,security,63127,https://root.cern,https://github.com/root-project/root/issues/7411,1,['secur'],['security']
Security,cates/18bc5b05.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/TRGrid.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/e18bfb83.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/1f3834d0.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/REUNA-ca.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/1f3834d0.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/RomanianGRID.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/RomanianGRID.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/REUNA-ca.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/RomanianGRID.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/e442e424.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/RomanianGRID.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/e442e424.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/393f7863.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/7ecb2657.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/393f7863.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/AEGIS.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/AEGIS.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/1691b9ba.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/AEGIS.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/7c27c6a1.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/7ecb2657.signing_policy' from CURLOPT_CAPATH; *,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8092#issuecomment-840048181:33781,secur,security,33781,https://root.cern,https://github.com/root-project/root/issues/8092#issuecomment-840048181,2,"['certificate', 'secur']","['certificates', 'security']"
Security,cates/4c3ad332.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/d0c2a341.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/63699217.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/d0c2a341.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/NIKHEF.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/MD-Grid-CA-T.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/072977ca.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/IRAN-GRID-GCG-G2.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/072977ca.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/MD-Grid-CA-T.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/58435df6.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/IRAN-GRID-GCG-G2.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/58435df6.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/IRAN-GRID-GCG-G2.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/NIIF-Root-CA-2.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/MD-Grid-CA-T.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/NIIF-Root-CA-2.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/NIIF-Root-CA-2.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/13ba0088.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/NIIF-Root-CA-2.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/16da7552.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/MD-Gri,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8092#issuecomment-840048181:64744,secur,security,64744,https://root.cern,https://github.com/root-project/root/issues/8092#issuecomment-840048181,2,"['certificate', 'secur']","['certificates', 'security']"
Security,cates/585d9326.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/d58bb4bc.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/585d9326.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/23c77840.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/CNRS2-Grid-FR.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/78351451.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/CESNET-CA-4.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/KENETROOTCA.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/CNRS2-Grid-FR.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/KENETROOTCA.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/CESNET-CA-4.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/CNRS2-Grid-FR.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/KENETROOTCA.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/COMODO-RSA-CA.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/CESNET-CA-4.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/COMODO-RSA-CA.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/UKeScienceCA-2B.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/COMODO-RSA-CA.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/CNRS2-Grid-FR.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/d4c339cb.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/d6325660.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/InComm,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8092#issuecomment-840048181:9862,secur,security,9862,https://root.cern,https://github.com/root-project/root/issues/8092#issuecomment-840048181,2,"['certificate', 'secur']","['certificates', 'security']"
Security,cates/63699217.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/d0c2a341.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/NIKHEF.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/MD-Grid-CA-T.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/072977ca.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/IRAN-GRID-GCG-G2.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/072977ca.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/MD-Grid-CA-T.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/58435df6.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/IRAN-GRID-GCG-G2.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/58435df6.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/IRAN-GRID-GCG-G2.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/NIIF-Root-CA-2.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/MD-Grid-CA-T.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/NIIF-Root-CA-2.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/NIIF-Root-CA-2.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/13ba0088.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/NIIF-Root-CA-2.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/16da7552.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/MD-Grid-CA-T.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/13ba0088.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/NI,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8092#issuecomment-840048181:64934,secur,security,64934,https://root.cern,https://github.com/root-project/root/issues/8092#issuecomment-840048181,2,"['certificate', 'secur']","['certificates', 'security']"
Security,cates/7ecb2657.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/AEGIS.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/1691b9ba.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/cc5645bd.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/GermanGrid.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/cc5645bd.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/f4cf8fb6.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/4b3f5558.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/GermanGrid.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/4b3f5558.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/GermanGrid.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/QuoVadis-Root-CA3G3.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/QuoVadis-Root-CA3G3.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/87429ba3.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/TRGrid.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/7c27c6a1.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/HellasGrid-CA-2016.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/HellasGrid-CA-2016.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/HellasGrid-CA-2016.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/HellasGrid-CA-2016.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/f4cf8fb6.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/g,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8092#issuecomment-840048181:35725,secur,security,35725,https://root.cern,https://github.com/root-project/root/issues/8092#issuecomment-840048181,2,"['certificate', 'secur']","['certificates', 'security']"
Security,cates/DFN-GridGermany-Root.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/REUNA-ca.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/6f071272.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/DFN-GridGermany-Root.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/TRGrid.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/e18bfb83.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/18bc5b05.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/REUNA-ca.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/18bc5b05.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/TRGrid.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/e18bfb83.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/1f3834d0.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/REUNA-ca.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/1f3834d0.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/RomanianGRID.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/RomanianGRID.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/REUNA-ca.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/RomanianGRID.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/e442e424.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/RomanianGRID.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/e442e424.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/393f7863.namespace,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8092#issuecomment-840048181:33034,secur,security,33034,https://root.cern,https://github.com/root-project/root/issues/8092#issuecomment-840048181,2,"['certificate', 'secur']","['certificates', 'security']"
Security,cates/IHEP-2013.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/NERSC-SLCS.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/NERSC-SLCS.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/DCAROOT-G1.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/NERSC-SLCS.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/IHEP-2013.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/NERSC-SLCS.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/b93d6240.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/39d30eba.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/b93d6240.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/e7734335.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/30351739.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/39d30eba.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/30351739.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/e7734335.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/61cd35bd.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/IHEP-2013.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/61cd35bd.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/HPCI.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/HPCI.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/ead666c8.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/06769ccd.namespaces' from CURLOPT_CAPATH; *,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8092#issuecomment-840048181:56026,secur,security,56026,https://root.cern,https://github.com/root-project/root/issues/8092#issuecomment-840048181,2,"['certificate', 'secur']","['certificates', 'security']"
Security,cates/TRGrid.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/e18bfb83.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/1f3834d0.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/REUNA-ca.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/1f3834d0.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/RomanianGRID.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/RomanianGRID.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/REUNA-ca.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/RomanianGRID.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/e442e424.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/RomanianGRID.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/e442e424.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/393f7863.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/7ecb2657.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/393f7863.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/AEGIS.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/AEGIS.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/1691b9ba.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/AEGIS.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/7c27c6a1.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/7ecb2657.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/AEGIS.signing_policy' from CURLOPT_CAPATH; * fa,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8092#issuecomment-840048181:33881,secur,security,33881,https://root.cern,https://github.com/root-project/root/issues/8092#issuecomment-840048181,2,"['certificate', 'secur']","['certificates', 'security']"
Security,cates/USERTrustRSACertificationAuthority.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/CNRS2.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/USERTrustRSACertificationAuthority.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/DigiCertGridRootCA-Root.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/USERTrustRSACertificationAuthority.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/edca0fc0.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/2436bbb8.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/d58bb4bc.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/USERTrustRSACertificationAuthority.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/fc5a8f99.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/c2a48ab6.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/fc5a8f99.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/23c77840.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/CNRS2.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/2694e4f2.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/c2a48ab6.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/2694e4f2.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/74a04bb6.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/74a04bb6.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/09ff08b7.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/f4401b90.namespaces' from ,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8092#issuecomment-840048181:5537,secur,security,5537,https://root.cern,https://github.com/root-project/root/issues/8092#issuecomment-840048181,2,"['certificate', 'secur']","['certificates', 'security']"
Security,"cation flows into a member access and is used to access a property of a field assignment by name. This may allow a malicious user to access methods (e.g. toString) as opposed to regular properties of objects and cause a crash, remote code execution or more serious problems. This is known as a Prototype Pollution vulnerability. Occurrences: <ul><li><a href=""https://github.com/root-project/root/blob/51516ae7e1ec80b8b4056ea39ffc08ce6e571266/js/scripts/JSRoot.core.js#L1123"">JSRoot.core.js:1123</a></li></ul></td>; <td width=""23%""><a href=""https://www.deepcode.ai/app/gh/root-project/root/ae14e906642ef1d61c92057c4b5fa46946c2d2b4/root-project/root/51516ae7e1ec80b8b4056ea39ffc08ce6e571266/pr/_/%2Fjs%2Fscripts%2FJSRoot.core.js/javascript%2Fdc_interfile_project%2FPrototypePollution/code/?utm_source=gh_review&"">:wrench: Example fixes</a></td>; </tr>; <tr>; <td width=""77%"">Unsanitized input from the document location flows into eval, where it is executed as JavaScript code. This may result in a Code Injection vulnerability. Occurrences: <ul><li><a href=""https://github.com/root-project/root/blob/51516ae7e1ec80b8b4056ea39ffc08ce6e571266/js/scripts/JSRoot.core.js#L1313"">JSRoot.core.js:1313</a></li></ul></td>; <td width=""23%""><a href=""https://www.deepcode.ai/app/gh/root-project/root/ae14e906642ef1d61c92057c4b5fa46946c2d2b4/root-project/root/51516ae7e1ec80b8b4056ea39ffc08ce6e571266/pr/_/%2Fjs%2Fscripts%2FJSRoot.core.js/javascript%2Fdc_interfile_project%2FCodeInjection/code/?utm_source=gh_review&"">:wrench: Example fixes</a></td>; </tr>; <tr>; <td width=""77%"">Use binary mode in open (current mode is w) to avoid encoding-related issues for written file, on Windows or with Python 3. Occurrences: <ul><li><a href=""https://github.com/root-project/root/blob/51516ae7e1ec80b8b4056ea39ffc08ce6e571266/interpreter/llvm/src/utils/benchmark/mingw.py#L122"">mingw.py:122</a></li></ul></td>; <td width=""23%""><a href=""https://www.deepcode.ai/app/gh/root-project/root/ae14e906642ef1d61c92057c4b5fa46946c2d2b",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6254#issuecomment-898501733:1604,Inject,Injection,1604,https://root.cern,https://github.com/root-project/root/pull/6254#issuecomment-898501733,1,['Inject'],['Injection']
Security,"cator<char> > > > const&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) (RFilterBase.cxx:22); ==270704== by 0x19821393: ???; ==270704== by 0x5EF4C44: Cppyy::CallO(long, void*, unsigned long, void*, unsigned long) (clingwrapper.cxx:887); ==270704== by 0x5E37DA3: GILCallO(long, void*, CPyCppyy::CallContext*, unsigned long) (Executors.cxx:86); ==270704== by 0x5E3A66D: CPyCppyy::(anonymous namespace)::InstanceExecutor::Execute(long, void*, CPyCppyy::CallContext*) (Executors.cxx:594); ==270704== ; ==270704== Use of uninitialised value of size 8; ==270704== at 0x6627308: load_bytes (hash_bytes.cc:55); ==270704== by 0x6627308: std::_Hash_bytes(void const*, unsigned long, unsigned long) (hash_bytes.cc:153); ==270704== by 0x631A10A: std::_Hash_impl::hash(void const*, unsigned long, unsigned long) (functional_hash.h:198); ==270704== by 0x631A14F: std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::operator()(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const (basic_string.h:6875); ==270704== by 0x271AA83F: std::__detail::_Hash_code_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<ROOT::Detail::RDF::RDefineBase> >, std::__detail::_Select1st, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, true>::_M_hash_code(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const (hashtable_policy.h:1217); ==270704== by 0x271AA639: std::_Hashtable<std::__cxx11::basic_string<",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10092#issuecomment-1064001383:197875,hash,hash,197875,https://root.cern,https://github.com/root-project/root/issues/10092#issuecomment-1064001383,1,['hash'],['hash']
Security,ccess (via field 'typevec') results in a null pointer dereference in /opt/root_src/core/clib/src/Demangle.c:1910; /opt/root_src/core/clib/src/Demangle.c:2264:4: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/core/clib/src/Demangle.c:2264; /opt/root_src/core/clib/src/Demangle.c:2683:4: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/core/clib/src/Demangle.c:2683; /opt/root_src/core/clib/src/Demangle.c:2697:7: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case o,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7422:20633,secur,security,20633,https://root.cern,https://github.com/root-project/root/issues/7422,1,['secur'],['security']
Security,ce with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'sprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:6829; /opt/root_src/net/http/civetweb/civetweb.c:6884:9: warning: Call to function 'vsnprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'vsnprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: expanded from macro 'vsnprintf_impl' in /opt/root_src/net/http/civetweb/civetweb.c:781; 2: Call to function 'vsnprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'vsnprintf_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:6884; 3: expanded from macro 'vsnprintf_impl' in /opt/root_src/net/http/civetweb/civetweb.c:781; /opt/root_src/net/http/civetweb/civetweb.c:6914:8: warning: Call to function 'vsnprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'vsnprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: expanded from macro 'vsnprintf_impl' in /opt/root_src/net/http/civetweb/civetweb.c:781; 2: Call to function 'vsnprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7528:28943,secur,security,28943,https://root.cern,https://github.com/root-project/root/issues/7528,1,['secur'],['security']
Security,"ce=..., ImportLoc=..., ModuleName=..., Input=..., OriginalModuleMapFile=..., ModuleFileName=..., PreBuildStep=..., PostBuildStep=...); at /home/linev/git/root6/interpreter/llvm/src/tools/clang/lib/Frontend/CompilerInstance.cpp:1151; #32 0x0000000000ff5fa5 in compileModuleImpl (ImportingInstance=..., ImportLoc=..., Module=0x6d8baa0, ModuleFileName=...) at /home/linev/git/root6/interpreter/llvm/src/tools/clang/lib/Frontend/CompilerInstance.cpp:1190; #33 0x0000000000ff6593 in compileAndLoadModule (ImportingInstance=..., ImportLoc=..., ModuleNameLoc=..., Module=0x6d8baa0, ModuleFileName=...) at /home/linev/git/root6/interpreter/llvm/src/tools/clang/lib/Frontend/CompilerInstance.cpp:1263; #34 0x0000000000ff9aaf in clang::CompilerInstance::loadModule (this=0x6d1ad40, ImportLoc=..., Path=..., Visibility=clang::Module::Hidden, IsInclusionDirective=true); at /home/linev/git/root6/interpreter/llvm/src/tools/clang/lib/Frontend/CompilerInstance.cpp:1769; #35 0x000000000382e6a2 in clang::Preprocessor::HandleIncludeDirective (this=0x6d21e00, HashLoc=..., IncludeTok=..., LookupFrom=0x0, LookupFromFile=0x0, isImport=false) at /home/linev/git/root6/interpreter/llvm/src/tools/clang/lib/Lex/PPDirectives.cpp:1886; #36 0x000000000382a836 in clang::Preprocessor::HandleDirective (this=0x6d21e00, Result=...) at /home/linev/git/root6/interpreter/llvm/src/tools/clang/lib/Lex/PPDirectives.cpp:970; #37 0x00000000037e6885 in clang::Lexer::LexTokenInternal (this=0x6d18a30, Result=..., TokAtPhysicalStartOfLine=true) at /home/linev/git/root6/interpreter/llvm/src/tools/clang/lib/Lex/Lexer.cpp:3736; #38 0x00000000037e40b8 in clang::Lexer::Lex (this=0x6d18a30, Result=...) at /home/linev/git/root6/interpreter/llvm/src/tools/clang/lib/Lex/Lexer.cpp:2981; #39 0x000000000386e5cd in clang::Preprocessor::Lex (this=0x6d21e00, Result=...) at /home/linev/git/root6/interpreter/llvm/src/tools/clang/lib/Lex/Preprocessor.cpp:788; #40 0x0000000000873812 in clang::Parser::ConsumeToken (this=0x6d14650) at /home/line",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5004#issuecomment-586370429:7839,Hash,HashLoc,7839,https://root.cern,https://github.com/root-project/root/pull/5004#issuecomment-586370429,1,['Hash'],['HashLoc']
Security,ceLocal(TMatrixTBase&lt;double&gt; const*)' from file 'math/matrix/CMakeFiles/G__Matrix.dir/G__Matrix.cxx.o' to global weak symbol 'typeinfo for TMatrixTBase&lt;double&gt;' from file 'math/matrix/CMakeFiles/Matrix.dir/src/TMatrixTBase.cxx.o' means the weak symbol cannot be overridden at runtime. This was likely caused by different translation units being compiled with different visibility settings. ; - [2023-05-24T07:16:00.071Z] ld: warning: direct access in function 'ROOT::GenerateInitInstanceLocal(TMatrixTBase&lt;double&gt; const*)' from file 'math/matrix/CMakeFiles/G__Matrix.dir/G__Matrix.cxx.o' to global weak symbol 'typeinfo for TMatrixTBase&lt;double&gt;' from file 'math/matrix/CMakeFiles/Matrix.dir/src/TMatrixTBase.cxx.o' means the weak symbol cannot be overridden at runtime. This was likely caused by different translation units being compiled with different visibility settings. ; - [2023-05-24T07:16:00.071Z] ld: warning: direct access in function 'ROOT::GenerateInitInstanceLocal(TVectorT&lt;float&gt; const*)' from file 'math/matrix/CMakeFiles/G__Matrix.dir/G__Matrix.cxx.o' to global weak symbol 'typeinfo for TVectorT&lt;float&gt;' from file 'math/matrix/CMakeFiles/Matrix.dir/src/TVectorT.cxx.o' means the weak symbol cannot be overridden at runtime. This was likely caused by different translation units being compiled with different visibility settings. ; - [2023-05-24T07:16:00.071Z] ld: warning: direct access in function 'ROOT::GenerateInitInstanceLocal(TVectorT&lt;float&gt; const*)' from file 'math/matrix/CMakeFiles/G__Matrix.dir/G__Matrix.cxx.o' to global weak symbol 'typeinfo for TVectorT&lt;float&gt;' from file 'math/matrix/CMakeFiles/Matrix.dir/src/TVectorT.cxx.o' means the weak symbol cannot be overridden at runtime. This was likely caused by different translation units being compiled with different visibility settings. . And 126 more. ### Failing tests:; - [projectroot.tree.ntuple.v7.test.gtest_tree_ntuple_v7_test_ntuple_extended](https://lcgapp-service,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12864#issuecomment-1560656733:4291,access,access,4291,https://root.cern,https://github.com/root-project/root/pull/12864#issuecomment-1560656733,1,['access'],['access']
Security,ceLocal(TMatrixTBase&lt;double&gt; const*)' from file 'math/matrix/CMakeFiles/G__Matrix.dir/G__Matrix.cxx.o' to global weak symbol 'typeinfo for TMatrixTBase&lt;double&gt;' from file 'math/matrix/CMakeFiles/Matrix.dir/src/TMatrixTBase.cxx.o' means the weak symbol cannot be overridden at runtime. This was likely caused by different translation units being compiled with different visibility settings. ; - [2023-05-24T08:37:54.558Z] ld: warning: direct access in function 'ROOT::GenerateInitInstanceLocal(TMatrixTBase&lt;double&gt; const*)' from file 'math/matrix/CMakeFiles/G__Matrix.dir/G__Matrix.cxx.o' to global weak symbol 'typeinfo for TMatrixTBase&lt;double&gt;' from file 'math/matrix/CMakeFiles/Matrix.dir/src/TMatrixTBase.cxx.o' means the weak symbol cannot be overridden at runtime. This was likely caused by different translation units being compiled with different visibility settings. ; - [2023-05-24T08:37:54.558Z] ld: warning: direct access in function 'ROOT::GenerateInitInstanceLocal(TVectorT&lt;float&gt; const*)' from file 'math/matrix/CMakeFiles/G__Matrix.dir/G__Matrix.cxx.o' to global weak symbol 'typeinfo for TVectorT&lt;float&gt;' from file 'math/matrix/CMakeFiles/Matrix.dir/src/TVectorT.cxx.o' means the weak symbol cannot be overridden at runtime. This was likely caused by different translation units being compiled with different visibility settings. ; - [2023-05-24T08:37:54.558Z] ld: warning: direct access in function 'ROOT::GenerateInitInstanceLocal(TVectorT&lt;float&gt; const*)' from file 'math/matrix/CMakeFiles/G__Matrix.dir/G__Matrix.cxx.o' to global weak symbol 'typeinfo for TVectorT&lt;float&gt;' from file 'math/matrix/CMakeFiles/Matrix.dir/src/TVectorT.cxx.o' means the weak symbol cannot be overridden at runtime. This was likely caused by different translation units being compiled with different visibility settings. . And 126 more. ### Failing tests:; - [projectroot.tree.ntuple.v7.test.gtest_tree_ntuple_v7_test_ntuple_extended](https://lcgapp-service,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12864#issuecomment-1560787612:4291,access,access,4291,https://root.cern,https://github.com/root-project/root/pull/12864#issuecomment-1560787612,1,['access'],['access']
Security,ceLocal(TMatrixTBase&lt;double&gt; const*)' from file 'math/matrix/CMakeFiles/G__Matrix.dir/G__Matrix.cxx.o' to global weak symbol 'typeinfo for TMatrixTBase&lt;double&gt;' from file 'math/matrix/CMakeFiles/Matrix.dir/src/TMatrixTBase.cxx.o' means the weak symbol cannot be overridden at runtime. This was likely caused by different translation units being compiled with different visibility settings. ; - [2023-06-15T05:49:47.357Z] ld: warning: direct access in function 'ROOT::GenerateInitInstanceLocal(TMatrixTBase&lt;double&gt; const*)' from file 'math/matrix/CMakeFiles/G__Matrix.dir/G__Matrix.cxx.o' to global weak symbol 'typeinfo for TMatrixTBase&lt;double&gt;' from file 'math/matrix/CMakeFiles/Matrix.dir/src/TMatrixTBase.cxx.o' means the weak symbol cannot be overridden at runtime. This was likely caused by different translation units being compiled with different visibility settings. ; - [2023-06-15T05:49:47.357Z] ld: warning: direct access in function 'ROOT::GenerateInitInstanceLocal(TVectorT&lt;float&gt; const*)' from file 'math/matrix/CMakeFiles/G__Matrix.dir/G__Matrix.cxx.o' to global weak symbol 'typeinfo for TVectorT&lt;float&gt;' from file 'math/matrix/CMakeFiles/Matrix.dir/src/TVectorT.cxx.o' means the weak symbol cannot be overridden at runtime. This was likely caused by different translation units being compiled with different visibility settings. ; - [2023-06-15T05:49:47.357Z] ld: warning: direct access in function 'ROOT::GenerateInitInstanceLocal(TVectorT&lt;float&gt; const*)' from file 'math/matrix/CMakeFiles/G__Matrix.dir/G__Matrix.cxx.o' to global weak symbol 'typeinfo for TVectorT&lt;float&gt;' from file 'math/matrix/CMakeFiles/Matrix.dir/src/TVectorT.cxx.o' means the weak symbol cannot be overridden at runtime. This was likely caused by different translation units being compiled with different visibility settings. . And 126 more. ### Failing tests:; - [projectroot.roottest.root.meta.tuple.roottest_root_meta_tuple_exec_configtype_unload_auto](https:,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12062#issuecomment-1592464351:4291,access,access,4291,https://root.cern,https://github.com/root-project/root/pull/12062#issuecomment-1592464351,1,['access'],['access']
Security,ceLocal(TMatrixTBase&lt;double&gt; const*)' from file 'math/matrix/CMakeFiles/G__Matrix.dir/G__Matrix.cxx.o' to global weak symbol 'typeinfo for TMatrixTBase&lt;double&gt;' from file 'math/matrix/CMakeFiles/Matrix.dir/src/TMatrixTBase.cxx.o' means the weak symbol cannot be overridden at runtime. This was likely caused by different translation units being compiled with different visibility settings. ; - [2023-06-15T07:06:19.331Z] ld: warning: direct access in function 'ROOT::GenerateInitInstanceLocal(TMatrixTBase&lt;double&gt; const*)' from file 'math/matrix/CMakeFiles/G__Matrix.dir/G__Matrix.cxx.o' to global weak symbol 'typeinfo for TMatrixTBase&lt;double&gt;' from file 'math/matrix/CMakeFiles/Matrix.dir/src/TMatrixTBase.cxx.o' means the weak symbol cannot be overridden at runtime. This was likely caused by different translation units being compiled with different visibility settings. ; - [2023-06-15T07:06:19.331Z] ld: warning: direct access in function 'ROOT::GenerateInitInstanceLocal(TVectorT&lt;float&gt; const*)' from file 'math/matrix/CMakeFiles/G__Matrix.dir/G__Matrix.cxx.o' to global weak symbol 'typeinfo for TVectorT&lt;float&gt;' from file 'math/matrix/CMakeFiles/Matrix.dir/src/TVectorT.cxx.o' means the weak symbol cannot be overridden at runtime. This was likely caused by different translation units being compiled with different visibility settings. ; - [2023-06-15T07:06:19.331Z] ld: warning: direct access in function 'ROOT::GenerateInitInstanceLocal(TVectorT&lt;float&gt; const*)' from file 'math/matrix/CMakeFiles/G__Matrix.dir/G__Matrix.cxx.o' to global weak symbol 'typeinfo for TVectorT&lt;float&gt;' from file 'math/matrix/CMakeFiles/Matrix.dir/src/TVectorT.cxx.o' means the weak symbol cannot be overridden at runtime. This was likely caused by different translation units being compiled with different visibility settings. . And 126 more. ### Failing tests:; - [projectroot.tree.ntuple.v7.test.gtest_tree_ntuple_v7_test_ntuple_extended](https://lcgapp-service,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12238#issuecomment-1592568988:4291,access,access,4291,https://root.cern,https://github.com/root-project/root/pull/12238#issuecomment-1592568988,1,['access'],['access']
Security,ceLocal(TMatrixTBase&lt;double&gt; const*)' from file 'math/matrix/CMakeFiles/G__Matrix.dir/G__Matrix.cxx.o' to global weak symbol 'typeinfo for TMatrixTBase&lt;double&gt;' from file 'math/matrix/CMakeFiles/Matrix.dir/src/TMatrixTBase.cxx.o' means the weak symbol cannot be overridden at runtime. This was likely caused by different translation units being compiled with different visibility settings. ; - [2023-07-01T09:00:58.022Z] ld: warning: direct access in function 'ROOT::GenerateInitInstanceLocal(TMatrixTBase&lt;double&gt; const*)' from file 'math/matrix/CMakeFiles/G__Matrix.dir/G__Matrix.cxx.o' to global weak symbol 'typeinfo for TMatrixTBase&lt;double&gt;' from file 'math/matrix/CMakeFiles/Matrix.dir/src/TMatrixTBase.cxx.o' means the weak symbol cannot be overridden at runtime. This was likely caused by different translation units being compiled with different visibility settings. ; - [2023-07-01T09:00:58.023Z] ld: warning: direct access in function 'ROOT::GenerateInitInstanceLocal(TVectorT&lt;float&gt; const*)' from file 'math/matrix/CMakeFiles/G__Matrix.dir/G__Matrix.cxx.o' to global weak symbol 'typeinfo for TVectorT&lt;float&gt;' from file 'math/matrix/CMakeFiles/Matrix.dir/src/TVectorT.cxx.o' means the weak symbol cannot be overridden at runtime. This was likely caused by different translation units being compiled with different visibility settings. ; - [2023-07-01T09:00:58.023Z] ld: warning: direct access in function 'ROOT::GenerateInitInstanceLocal(TVectorT&lt;float&gt; const*)' from file 'math/matrix/CMakeFiles/G__Matrix.dir/G__Matrix.cxx.o' to global weak symbol 'typeinfo for TVectorT&lt;float&gt;' from file 'math/matrix/CMakeFiles/Matrix.dir/src/TVectorT.cxx.o' means the weak symbol cannot be overridden at runtime. This was likely caused by different translation units being compiled with different visibility settings. . And 126 more. ### Failing tests:; - [projectroot.roottest.python.numba.roottest_python_numba_numba](https://lcgapp-services.cern.ch/ro,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13139#issuecomment-1615776009:4291,access,access,4291,https://root.cern,https://github.com/root-project/root/pull/13139#issuecomment-1615776009,1,['access'],['access']
Security,ceLocal(TMatrixTBase&lt;double&gt; const*)' from file 'math/matrix/CMakeFiles/G__Matrix.dir/G__Matrix.cxx.o' to global weak symbol 'typeinfo for TMatrixTBase&lt;double&gt;' from file 'math/matrix/CMakeFiles/Matrix.dir/src/TMatrixTBase.cxx.o' means the weak symbol cannot be overridden at runtime. This was likely caused by different translation units being compiled with different visibility settings. ; - [2023-07-03T12:52:31.604Z] ld: warning: direct access in function 'ROOT::GenerateInitInstanceLocal(TMatrixTBase&lt;double&gt; const*)' from file 'math/matrix/CMakeFiles/G__Matrix.dir/G__Matrix.cxx.o' to global weak symbol 'typeinfo for TMatrixTBase&lt;double&gt;' from file 'math/matrix/CMakeFiles/Matrix.dir/src/TMatrixTBase.cxx.o' means the weak symbol cannot be overridden at runtime. This was likely caused by different translation units being compiled with different visibility settings. ; - [2023-07-03T12:52:31.604Z] ld: warning: direct access in function 'ROOT::GenerateInitInstanceLocal(TVectorT&lt;float&gt; const*)' from file 'math/matrix/CMakeFiles/G__Matrix.dir/G__Matrix.cxx.o' to global weak symbol 'typeinfo for TVectorT&lt;float&gt;' from file 'math/matrix/CMakeFiles/Matrix.dir/src/TVectorT.cxx.o' means the weak symbol cannot be overridden at runtime. This was likely caused by different translation units being compiled with different visibility settings. ; - [2023-07-03T12:52:31.604Z] ld: warning: direct access in function 'ROOT::GenerateInitInstanceLocal(TVectorT&lt;float&gt; const*)' from file 'math/matrix/CMakeFiles/G__Matrix.dir/G__Matrix.cxx.o' to global weak symbol 'typeinfo for TVectorT&lt;float&gt;' from file 'math/matrix/CMakeFiles/Matrix.dir/src/TVectorT.cxx.o' means the weak symbol cannot be overridden at runtime. This was likely caused by different translation units being compiled with different visibility settings. . And 126 more. ### Failing tests:; - [projectroot.roottest.python.numba.roottest_python_numba_numba](https://lcgapp-services.cern.ch/ro,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13139#issuecomment-1618264564:4291,access,access,4291,https://root.cern,https://github.com/root-project/root/pull/13139#issuecomment-1618264564,1,['access'],['access']
Security,ced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/core/clib/src/mrealloc.c:77; /opt/root_src/core/clib/src/mrealloc.c:120:16: warning: Call to function 'memmove' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memmove_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memmove' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memmove_s' in case of C11 in /opt/root_src/core/clib/src/mrealloc.c:120; /opt/root_src/core/clib/src/mrealloc.c:142:13: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/core/clib/src/mrealloc.c:142; /opt/root_src/core/clib/src/Demangle.c; /opt/root_src/core/clib/src/attach.c; /opt/root_src/core/clib/src/mcalloc.c; /opt/root_src/core/clib/src/mmalloc.c; /opt/root_src/core/clib/src/mrealloc.c; ```,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7422:28821,secur,security,28821,https://root.cern,https://github.com/root-project/root/issues/7422,3,['secur'],['security']
Security,ced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/builtins/lz4/lz4hc.c:97; 3: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4.c:208; /opt/root_src/builtins/lz4/lz4hc.c:754:9: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4hc.c:754; /opt/root_src/builtins/lz4/lz4hc.c:893:9: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4hc.c:893; /opt/root_src/builtins/lz4/lz4hc.c:1015:7: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4.c:208; 2: Call to function 'memse,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7411:62938,secur,security,62938,https://root.cern,https://github.com/root-project/root/issues/7411,1,['secur'],['security']
Security,ced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'vsnprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: expanded from macro 'vsnprintf_impl' in /opt/root_src/net/http/civetweb/civetweb.c:781; 2: expanded from macro 'IGNORE_UNUSED_RESULT' in /opt/root_src/net/http/civetweb/civetweb.c:226; 3: Call to function 'vsnprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'vsnprintf_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:6945; 4: expanded from macro 'vsnprintf_impl' in /opt/root_src/net/http/civetweb/civetweb.c:781; 5: expanded from macro 'IGNORE_UNUSED_RESULT' in /opt/root_src/net/http/civetweb/civetweb.c:226; /opt/root_src/net/http/civetweb/civetweb.c:7374:2: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:7374; /opt/root_src/net/http/civetweb/civetweb.c:7477:4: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memset' is insecure as it does not provide security checks intr,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7528:32318,secur,security,32318,https://root.cern,https://github.com/root-project/root/issues/7528,1,['secur'],['security']
Security,certificates/16054abd.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/a2dbd20c.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/f8598272.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/7ca9677b.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/2418a3f3.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/7ca9677b.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/AC-GRID-FR.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/01b5d333.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/AC-GRID-FR.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/BG-ACAD-CA.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/AC-GRID-FR.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/01b5d333.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/BG-ACAD-CA.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/AC-GRID-FR.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/PolishGrid-2019.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/3232b9bc.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/BG-ACAD-CA.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/3232b9bc.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/10718cba.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/56084620.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/56084620.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/10718cba.signing_policy' f,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8092#issuecomment-840048181:61027,secur,security,61027,https://root.cern,https://github.com/root-project/root/issues/8092#issuecomment-840048181,2,"['certificate', 'secur']","['certificates', 'security']"
Security,certificates/2418a3f3.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/16054abd.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/a2dbd20c.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/f8598272.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/7ca9677b.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/2418a3f3.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/7ca9677b.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/AC-GRID-FR.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/01b5d333.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/AC-GRID-FR.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/BG-ACAD-CA.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/AC-GRID-FR.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/01b5d333.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/BG-ACAD-CA.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/AC-GRID-FR.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/PolishGrid-2019.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/3232b9bc.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/BG-ACAD-CA.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/3232b9bc.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/10718cba.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/56084620.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/56084620.signing_policy' from C,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8092#issuecomment-840048181:60933,secur,security,60933,https://root.cern,https://github.com/root-project/root/issues/8092#issuecomment-840048181,2,"['certificate', 'secur']","['certificates', 'security']"
Security,certificates/6f071272.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/DFN-GridGermany-Root.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/TRGrid.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/e18bfb83.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/18bc5b05.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/REUNA-ca.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/18bc5b05.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/TRGrid.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/e18bfb83.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/1f3834d0.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/REUNA-ca.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/1f3834d0.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/RomanianGRID.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/RomanianGRID.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/REUNA-ca.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/RomanianGRID.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/e442e424.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/RomanianGRID.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/e442e424.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/393f7863.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/7ecb2657.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/393f7863.signing_pol,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8092#issuecomment-840048181:33218,secur,security,33218,https://root.cern,https://github.com/root-project/root/issues/8092#issuecomment-840048181,2,"['certificate', 'secur']","['certificates', 'security']"
Security,certificates/ASGCCA-2007.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/80df9b28.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/ASGCCA-2007.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/IGCA2.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/ASGCCA-2007.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/AC-GRID-FR-Personnels.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/RDIG.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/ASGCCA-2007.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/b459ca48.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/7aa2b7bd.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/b459ca48.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/SRCE.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/ad9d1b74.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/0a49430a.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/7aa2b7bd.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/0a49430a.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/DZeScience.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/da213f5b.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/DZeScience.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/NCSA-slcs-2013.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/DZeScience.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/ad9d1b74.signing_policy' from CURLOPT_,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8092#issuecomment-840048181:39874,secur,security,39874,https://root.cern,https://github.com/root-project/root/issues/8092#issuecomment-840048181,2,"['certificate', 'secur']","['certificates', 'security']"
Security,certificates/ASGCCA-2007.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/b459ca48.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/7aa2b7bd.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/b459ca48.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/SRCE.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/ad9d1b74.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/0a49430a.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/7aa2b7bd.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/0a49430a.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/DZeScience.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/da213f5b.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/DZeScience.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/NCSA-slcs-2013.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/DZeScience.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/ad9d1b74.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/NCSA-slcs-2013.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/DZeScience.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/55994d72.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/fdf90b95.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/NCSA-slcs-2013.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/fdf90b95.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/seegrid-ca-2013.crl_url,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8092#issuecomment-840048181:40518,secur,security,40518,https://root.cern,https://github.com/root-project/root/issues/8092#issuecomment-840048181,2,"['certificate', 'secur']","['certificates', 'security']"
Security,certificates/DFN-GridGermany-Root.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/TRGrid.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/e18bfb83.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/18bc5b05.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/REUNA-ca.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/18bc5b05.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/TRGrid.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/e18bfb83.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/1f3834d0.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/REUNA-ca.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/1f3834d0.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/RomanianGRID.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/RomanianGRID.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/REUNA-ca.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/RomanianGRID.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/e442e424.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/RomanianGRID.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/e442e424.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/393f7863.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/7ecb2657.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/393f7863.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/AEGIS.crl_url' from ,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8092#issuecomment-840048181:33314,secur,security,33314,https://root.cern,https://github.com/root-project/root/issues/8092#issuecomment-840048181,2,"['certificate', 'secur']","['certificates', 'security']"
Security,certificates/PK-Grid-2007.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/dbf09133.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/8f016f43.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/TSU-GE.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/8f016f43.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/PKIUNAMgrid.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/TSU-GE.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/PKIUNAMgrid.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/GermanGrid.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/TSU-GE.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/PKIUNAMgrid.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/d0a33f8e.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/d0a33f8e.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/dd4b34ea.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/4b2783ac.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/TSU-GE.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/4b2783ac.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/dd4b34ea.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/7f4db168.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/7f4db168.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/089450c2.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/PSC-Myproxy-CA.crl_url',MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8092#issuecomment-840048181:29257,secur,security,29257,https://root.cern,https://github.com/root-project/root/issues/8092#issuecomment-840048181,2,"['certificate', 'secur']","['certificates', 'security']"
Security,certificates/SDG-G2.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/SDG-G2.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/c1e29225.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/c1e29225.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/2f2e0e6e.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/2f2e0e6e.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/NorduGrid-2015.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/NorduGrid-2015.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/NorduGrid-2015.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/a3e2dbca.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/NIKHEF.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/a3e2dbca.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/f8598272.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/16054abd.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/2418a3f3.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/16054abd.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/a2dbd20c.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/f8598272.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/7ca9677b.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/2418a3f3.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/7ca9677b.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/AC-GRID-FR.crl_url' from C,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8092#issuecomment-840048181:59631,secur,security,59631,https://root.cern,https://github.com/root-project/root/issues/8092#issuecomment-840048181,2,"['certificate', 'secur']","['certificates', 'security']"
Security,certificates/ead666c8.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/06769ccd.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/HPCI.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/06769ccd.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/522b8537.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/NorduGrid-2015.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/522b8537.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/77637f58.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/KISTIv3.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/95b96af1.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/IHEP-2013.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/95b96af1.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/KISTIv3.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/UNLPGrid.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/SDG-G2.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/KISTIv3.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/KISTIv3.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/ead666c8.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/77637f58.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/SDG-G2.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/SDG-G2.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/c1e29225.namespaces' from CURLOPT_CAPATH; * fai,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8092#issuecomment-840048181:57875,secur,security,57875,https://root.cern,https://github.com/root-project/root/issues/8092#issuecomment-840048181,2,"['certificate', 'secur']","['certificates', 'security']"
Security,certificates/f8598272.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/7ca9677b.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/2418a3f3.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/7ca9677b.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/AC-GRID-FR.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/01b5d333.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/AC-GRID-FR.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/BG-ACAD-CA.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/AC-GRID-FR.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/01b5d333.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/BG-ACAD-CA.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/AC-GRID-FR.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/PolishGrid-2019.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/3232b9bc.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/BG-ACAD-CA.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/3232b9bc.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/10718cba.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/56084620.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/56084620.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/10718cba.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/MREN-CA.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/cilogon-silver.crl_url' from C,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8092#issuecomment-840048181:61211,secur,security,61211,https://root.cern,https://github.com/root-project/root/issues/8092#issuecomment-840048181,2,"['certificate', 'secur']","['certificates', 'security']"
Security,ces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/84c78b97.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/ef7d3e44.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/530f7122.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/9c979c2b.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/UKeScienceCA-2B.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/9c979c2b.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/62c4a178.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/a603ba9c.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/8dd53007.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/943fd5f3.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/DigiCertGridCA-1G2-Classic-2015.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/DigitalTrustSecureCAG4-runbytheissuer.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/DigiCertGridCA-1G2-Classic-2015.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/DigitalTrustSecureCAG4-runbytheissuer.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/DigiCertGridCA-1G2-Classic-2015.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/d41ec82f.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/b85d64aa.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/598b583e.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/DigiCertGridCA-1G2-Classic-2015.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/a603ba9c.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8092#issuecomment-840048181:14781,secur,security,14781,https://root.cern,https://github.com/root-project/root/issues/8092#issuecomment-840048181,2,"['certificate', 'secur']","['certificates', 'security']"
Security,ces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/DigitalTrustPrivateRootCAG4.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/585d9326.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/d58bb4bc.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/585d9326.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/23c77840.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/CNRS2-Grid-FR.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/78351451.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/CESNET-CA-4.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/KENETROOTCA.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/CNRS2-Grid-FR.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/KENETROOTCA.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/CESNET-CA-4.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/CNRS2-Grid-FR.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/KENETROOTCA.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/COMODO-RSA-CA.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/CESNET-CA-4.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/COMODO-RSA-CA.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/UKeScienceCA-2B.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/COMODO-RSA-CA.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/CNRS2-Grid-FR.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/d4c339cb.sign,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8092#issuecomment-840048181:9678,secur,security,9678,https://root.cern,https://github.com/root-project/root/issues/8092#issuecomment-840048181,2,"['certificate', 'secur']","['certificates', 'security']"
Security,ces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/QuoVadis-Root-CA2.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/d71343e8.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/d7e8dc79.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/SlovakGrid.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/728fa56d.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/SlovakGrid.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/728fa56d.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/e13e0fcf.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/e21dc0c0.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/87250dfa.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/14e86c33.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/87250dfa.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/5e02f50a.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/DCAROOT-G1.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/AC-GRID-FR-Services.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/DCAROOT-G1.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/AC-GRID-FR-Services.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/DCAROOT-G1.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/UNLPGrid.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/AC-GRID-FR-Services.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/20,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8092#issuecomment-840048181:53938,secur,security,53938,https://root.cern,https://github.com/root-project/root/issues/8092#issuecomment-840048181,2,"['certificate', 'secur']","['certificates', 'security']"
Security,ces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/d58bb4bc.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/USERTrustRSACertificationAuthority.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/fc5a8f99.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/c2a48ab6.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/fc5a8f99.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/23c77840.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/CNRS2.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/2694e4f2.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/c2a48ab6.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/2694e4f2.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/74a04bb6.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/74a04bb6.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/09ff08b7.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/f4401b90.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/163af95c.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/f4401b90.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/09ff08b7.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/CERN-Root-2.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/CERN-Root-2.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/163af95c.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/CERN-Root-2.namespaces' from,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8092#issuecomment-840048181:6194,secur,security,6194,https://root.cern,https://github.com/root-project/root/issues/8092#issuecomment-840048181,2,"['certificate', 'secur']","['certificates', 'security']"
Security,ces/v2/checks/RatingBadge/A-16px.png 'A')](https://sonarcloud.io/project/issues?id=root-project_root&pullRequest=13007&resolved=false&types=BUG) [0 Bugs](https://sonarcloud.io/project/issues?id=root-project_root&pullRequest=13007&resolved=false&types=BUG) ; [![Vulnerability](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/vulnerability-16px.png 'Vulnerability')](https://sonarcloud.io/project/issues?id=root-project_root&pullRequest=13007&resolved=false&types=VULNERABILITY) [![A](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/RatingBadge/A-16px.png 'A')](https://sonarcloud.io/project/issues?id=root-project_root&pullRequest=13007&resolved=false&types=VULNERABILITY) [0 Vulnerabilities](https://sonarcloud.io/project/issues?id=root-project_root&pullRequest=13007&resolved=false&types=VULNERABILITY) ; [![Security Hotspot](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/security_hotspot-16px.png 'Security Hotspot')](https://sonarcloud.io/project/security_hotspots?id=root-project_root&pullRequest=13007&resolved=false&types=SECURITY_HOTSPOT) [![A](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/RatingBadge/A-16px.png 'A')](https://sonarcloud.io/project/security_hotspots?id=root-project_root&pullRequest=13007&resolved=false&types=SECURITY_HOTSPOT) [0 Security Hotspots](https://sonarcloud.io/project/security_hotspots?id=root-project_root&pullRequest=13007&resolved=false&types=SECURITY_HOTSPOT) ; [![Code Smell](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/code_smell-16px.png 'Code Smell')](https://sonarcloud.io/project/issues?id=root-project_root&pullRequest=13007&resolved=false&types=CODE_SMELL) [![A](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/RatingBadge/A-16px.png 'A')](https://sonarcloud.io/project/issues?id=root-project_root&pullRequest=13007&resolved=false&types=CODE_SMELL) [0 Code Smells](https://sonarclo,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13007#issuecomment-1590031631:1537,Secur,Security,1537,https://root.cern,https://github.com/root-project/root/pull/13007#issuecomment-1590031631,1,['Secur'],['Security']
Security,ch in /opt/root_src/builtins/lz4/lz4frame.c:1329; 44: Assuming field 'dict' is not equal to field 'tmpOutBuffer' in /opt/root_src/builtins/lz4/lz4frame.c:1343; 45: Taking false branch in /opt/root_src/builtins/lz4/lz4frame.c:1343; 46: Assuming 'preserveSize' is <= field 'dictSize' in /opt/root_src/builtins/lz4/lz4frame.c:1356; 47: Taking false branch in /opt/root_src/builtins/lz4/lz4frame.c:1356; 48: Null pointer passed to 2nd parameter expecting 'nonnull' in /opt/root_src/builtins/lz4/lz4frame.c:1358; /opt/root_src/builtins/lz4/lz4frame.c:1404:5: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4frame.c:83; 2: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:1404; 3: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4frame.c:83; /opt/root_src/builtins/lz4/lz4frame.c:1434:17: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:1434; /opt/root_src/builtins/lz4/lz4frame.c:1490:1,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7411:53214,secur,security,53214,https://root.cern,https://github.com/root-project/root/issues/7411,1,['secur'],['security']
Security,"change loopback via API, do not expose server dirs [6.28]",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14477:32,expose,expose,32,https://root.cern,https://github.com/root-project/root/pull/14477,1,['expose'],['expose']
Security,"char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, TMVA::Experimental::SOFIE::ETensorType> > >&); Maybe you need to load the corresponding shared library?; IncrementalExecutor::executeFunction: symbol '_ZN4TMVA12Experimental5SOFIE8INTERNAL33make_ROperator_BatchNormalizationERKN4onnx9NodeProtoERKNS3_10GraphProtoERSt13unordered_mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEENS1_11ETensorTypeESt4hashISG_ESt8equal_toISG_ESaISt4pairIKSG_SH_EEE' unresolved while linking function '_GLOBAL__sub_I_cling_module_0'!; You are probably missing the definition of TMVA::Experimental::SOFIE::INTERNAL::make_ROperator_BatchNormalization(onnx::NodeProto const&, onnx::GraphProto const&, std::unordered_map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, TMVA::Experimental::SOFIE::ETensorType, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, TMVA::Experimental::SOFIE::ETensorType> > >&); Maybe you need to load the corresponding shared library?; IncrementalExecutor::executeFunction: symbol '_ZN4TMVA12Experimental5SOFIE8INTERNAL22make_ROperator_SigmoidERKN4onnx9NodeProtoERKNS3_10GraphProtoERSt13unordered_mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEENS1_11ETensorTypeESt4hashISG_ESt8equal_toISG_ESaISt4pairIKSG_SH_EEE' unresolved while linking function '_GLOBAL__sub_I_cling_module_0'!; You are probably missing the definition of TMVA::Experimental::SOFIE::INTERNAL::make_ROperator_Sigmoid(onnx::NodeProto const&, onnx::GraphProto const&, std::unordered_map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10877#issuecomment-1187667192:11445,hash,hash,11445,https://root.cern,https://github.com/root-project/root/issues/10877#issuecomment-1187667192,1,['hash'],['hash']
Security,"char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, TMVA::Experimental::SOFIE::ETensorType> > >&); Maybe you need to load the corresponding shared library?; IncrementalExecutor::executeFunction: symbol '_ZN4TMVA12Experimental5SOFIE8INTERNAL22make_ROperator_ReshapeERKN4onnx9NodeProtoERKNS3_10GraphProtoERSt13unordered_mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEENS1_11ETensorTypeESt4hashISG_ESt8equal_toISG_ESaISt4pairIKSG_SH_EEE' unresolved while linking function '_GLOBAL__sub_I_cling_module_0'!; You are probably missing the definition of TMVA::Experimental::SOFIE::INTERNAL::make_ROperator_Reshape(onnx::NodeProto const&, onnx::GraphProto const&, std::unordered_map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, TMVA::Experimental::SOFIE::ETensorType, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, TMVA::Experimental::SOFIE::ETensorType> > >&); Maybe you need to load the corresponding shared library?; IncrementalExecutor::executeFunction: symbol '_ZN4TMVA12Experimental5SOFIE8INTERNAL19make_ROperator_ConvERKN4onnx9NodeProtoERKNS3_10GraphProtoERSt13unordered_mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEENS1_11ETensorTypeESt4hashISG_ESt8equal_toISG_ESaISt4pairIKSG_SH_EEE' unresolved while linking function '_GLOBAL__sub_I_cling_module_0'!; You are probably missing the definition of TMVA::Experimental::SOFIE::INTERNAL::make_ROperator_Conv(onnx::NodeProto const&, onnx::GraphProto const&, std::unordered_map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, T",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10877#issuecomment-1187667192:8276,hash,hash,8276,https://root.cern,https://github.com/root-project/root/issues/10877#issuecomment-1187667192,1,['hash'],['hash']
Security,"char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, TMVA::Experimental::SOFIE::ETensorType> > >&); Maybe you need to load the corresponding shared library?; IncrementalExecutor::executeFunction: symbol '_ZN4TMVA12Experimental5SOFIE8INTERNAL22make_ROperator_SigmoidERKN4onnx9NodeProtoERKNS3_10GraphProtoERSt13unordered_mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEENS1_11ETensorTypeESt4hashISG_ESt8equal_toISG_ESaISt4pairIKSG_SH_EEE' unresolved while linking function '_GLOBAL__sub_I_cling_module_0'!; You are probably missing the definition of TMVA::Experimental::SOFIE::INTERNAL::make_ROperator_Sigmoid(onnx::NodeProto const&, onnx::GraphProto const&, std::unordered_map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, TMVA::Experimental::SOFIE::ETensorType, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, TMVA::Experimental::SOFIE::ETensorType> > >&); Maybe you need to load the corresponding shared library?; IncrementalExecutor::executeFunction: symbol '_ZN4TMVA12Experimental5SOFIE8INTERNAL19make_ROperator_ReluERKN4onnx9NodeProtoERKNS3_10GraphProtoERSt13unordered_mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEENS1_11ETensorTypeESt4hashISG_ESt8equal_toISG_ESaISt4pairIKSG_SH_EEE' unresolved while linking function '_GLOBAL__sub_I_cling_module_0'!; You are probably missing the definition of TMVA::Experimental::SOFIE::INTERNAL::make_ROperator_Relu(onnx::NodeProto const&, onnx::GraphProto const&, std::unordered_map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, T",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10877#issuecomment-1187667192:12498,hash,hash,12498,https://root.cern,https://github.com/root-project/root/issues/10877#issuecomment-1187667192,1,['hash'],['hash']
Security,checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'sprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11 in /opt/root_src/build/rmkdepend/pr.c:132; /opt/root_src/build/rmkdepend/pr.c:135:10: warning: Call to function 'sprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'sprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11 in /opt/root_src/build/rmkdepend/pr.c:135; /opt/root_src/build/rmkdepend/pr.c:141:7: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]; 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/build/rmkdepend/pr.c:141; /opt/root_src/build/rmkdepend/pr.c:147:8: warning: Potential leak of memory pointed to by 'ipifile' [clang-analyzer-unix.Malloc]; 1: Assuming the condition is false in /opt/root_src/b,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7410:45714,secur,security,45714,https://root.cern,https://github.com/root-project/root/issues/7410,1,['secur'],['security']
Security,checks such as 'memcpy_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:6620; /opt/root_src/net/http/civetweb/civetweb.c:6829:2: warning: Call to function 'sprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'sprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:6829; /opt/root_src/net/http/civetweb/civetweb.c:6884:9: warning: Call to function 'vsnprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'vsnprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: expanded from macro 'vsnprintf_impl' in /opt/root_src/net/http/civetweb/civetweb.c:781; 2: Call to function 'vsnprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'vsnprintf_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:6884; 3: expanded from macro 'vsnprintf_impl' in /opt/root_src/net/http/civetweb/civetweb.c:781; /opt/root_src/net/http/civetweb/civetweb.c:6914:8: warning: Call to function 'vsnprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'vsnprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: expanded from macro 'vsn,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7528:28729,secur,security,28729,https://root.cern,https://github.com/root-project/root/issues/7528,1,['secur'],['security']
Security,"cio/user/desilva/a1/a8/myFile.1.root; >>> * Trying 206.12.9.197:2880...; >>> * TCP_NODELAY set; >>> * Trying 2607:f8f0:660:3::36:2880...; >>> * TCP_NODELAY set; >>> * Immediate connect fail for 2607:f8f0:660:3::36: Network is unreachable; >>> Is that expected?; >>> ; > ; >> ***@***.*** t5]$ curl -v https://webdav.lcg.triumf.ca:2880/atlas/atlaslocalgroupdisk/rucio/user/desilva/a1/a8/myFile.1.root; >> * About to connect() to webdav.lcg.triumf.ca port 2880 (#0); >> * Trying 2607:f8f0:660:3::36...; >> * Connected to webdav.lcg.triumf.ca (2607:f8f0:660:3::36) port 2880 (#0); >> * Initializing NSS with certpath: sql:/etc/pki/nssdb; >> * CAfile: /etc/pki/tls/certs/ca-bundle.crt; >> CApath: none; >> * Server certificate:; >> * 	subject: CN=dpool46.lcg.triumf.ca,OU=triumf.ca,O=Grid,C=CA; >> * 	start date: Apr 08 16:29:03 2021 GMT; >> * 	expire date: May 08 16:29:03 2022 GMT; >> * 	common name: dpool46.lcg.triumf.ca; >> * 	issuer: CN=Grid Canada Certificate Authority,O=Grid,C=CA; >> * NSS error -8179 (SEC_ERROR_UNKNOWN_ISSUER); >> * Peer's Certificate issuer is not recognized.; >> * Closing connection 0; >> curl: (60) Peer's Certificate issuer is not recognized.; >> More details here: http://curl.haxx.se/docs/sslcerts.html; >> ; >> curl performs SSL certificate verification by default, using a ""bundle""; >> of Certificate Authority (CA) public keys (CA certs). If the default; >> bundle file isn't adequate, you can specify an alternate file; >> using the --cacert option.; >> If this HTTPS server uses a certificate signed by a CA represented in; >> the bundle, the certificate verification probably failed due to a; >> problem with the certificate (it might be expired, or the name might; >> not match the domain name in the URL).; >> If you'd like to turn off curl's verification of the certificate, use; >> the -k (or --insecure) option.; >> ***@***.*** t5]$ ; > ; > ; > I am unfamiliar with how to use curl with X509 and everything I tried so far has not worked. eg; > curl -v https:/",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8092#issuecomment-839967983:1512,Certificate,Certificate,1512,https://root.cern,https://github.com/root-project/root/issues/8092#issuecomment-839967983,2,['Certificate'],['Certificate']
Security,civetweb.c:18065; 13: Taking true branch in /opt/root_src/net/http/civetweb/civetweb.c:18065; 14: Loop condition is true. Entering loop body in /opt/root_src/net/http/civetweb/civetweb.c:18066; 15: Field 'stop_flag' is equal to 0 in /opt/root_src/net/http/civetweb/civetweb.c:18072; 16: Left side of '&&' is true in /opt/root_src/net/http/civetweb/civetweb.c:18072; 17: Assuming the condition is true in /opt/root_src/net/http/civetweb/civetweb.c:18072; 18: Taking true branch in /opt/root_src/net/http/civetweb/civetweb.c:18072; 19: Calling 'accept_new_connection' in /opt/root_src/net/http/civetweb/civetweb.c:18073; 20: Assuming the condition is false in /opt/root_src/net/http/civetweb/civetweb.c:17937; 21: Taking false branch in /opt/root_src/net/http/civetweb/civetweb.c:17937; 22: 1st function call argument is an uninitialized value in /opt/root_src/net/http/civetweb/civetweb.c:17939; /opt/root_src/net/http/civetweb/civetweb.c:18152:2: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:18152; /opt/root_src/net/http/civetweb/civetweb.c:18334:2: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memset' is insecure as it does not provide security checks i,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7528:72770,secur,security,72770,https://root.cern,https://github.com/root-project/root/issues/7528,1,['secur'],['security']
Security,civetweb.c:781; 2: expanded from macro 'IGNORE_UNUSED_RESULT' in /opt/root_src/net/http/civetweb/civetweb.c:226; 3: Call to function 'vsnprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'vsnprintf_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:6945; 4: expanded from macro 'vsnprintf_impl' in /opt/root_src/net/http/civetweb/civetweb.c:781; 5: expanded from macro 'IGNORE_UNUSED_RESULT' in /opt/root_src/net/http/civetweb/civetweb.c:226; /opt/root_src/net/http/civetweb/civetweb.c:7374:2: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:7374; /opt/root_src/net/http/civetweb/civetweb.c:7477:4: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:7477; /opt/root_src/net/http/civetweb/civetweb.c:7535:2: warning: Call to function 'memcpy' is insec,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7528:32627,secur,security,32627,https://root.cern,https://github.com/root-project/root/issues/7528,1,['secur'],['security']
Security,cks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:1868; /opt/root_src/builtins/lz4/lz4hc.c:96:5: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4.c:208; 2: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/builtins/lz4/lz4hc.c:96; 3: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4.c:208; /opt/root_src/builtins/lz4/lz4hc.c:97:5: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4.c:208; 2: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/builtins/lz4/,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7411:61114,secur,security,61114,https://root.cern,https://github.com/root-project/root/issues/7411,1,['secur'],['security']
Security,"clang does not work when launched from non-accessible folder, either:; ```; $ mkdir noread; $ cd noread/; $ chmod a-rwx .; $ echo '#include ""ROOT/config/RVersion.hxx""' | clang++ -I. -I$ROOTSYS/include/ -fsyntax-only -x c++ -; <stdin>:1:10: fatal error: cannot open file './ROOT/config/RVersion.hxx': Permission denied; #include ""ROOT/config/RVersion.hxx""; ^; 1 error generated.; ```. I.e. clang tries to argue ""don't do that"". But I would argue ""clang, please."" because it even just goes on and finds the header!. This was introduced [here](https://github.com/llvm/llvm-project/commit/babdfdec90bb978799bcccf1ee0c856678b0ef7b), with subsequent refinements to not have so many irrelevant errors. https://github.com/root-project/root/pull/12418 now adds another case.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12409#issuecomment-1453407708:43,access,accessible,43,https://root.cern,https://github.com/root-project/root/issues/12409#issuecomment-1453407708,1,['access'],['accessible']
Security,"clang might need to find a definition, that ""we"" might have.; But we need to find it based on a type name from clang, from a fwd decl;; or (as in ROOT-10804) based on a typename-from-typeid operation.; So register that as an alias!. The normalized-name-as-known-to-ROOT and typeid-name can be different,; for instance for inline namespaces: stripped by ROOT, kept by typeid. ROOT-10804 has a complex case where a lookup of a template argument failed; because it involves an inline namespace, and LHCb uses typeid demangling.; LHCb's case needed a nested name from a type (`LHCb::Event::v1::Track`); that failed to load because `v1` is an inline namespace, thus failing; instantiation of `KeyedContainer<LHCb::Event::v1::Track,Containers::KeyedObjectManager<Containers::hashmap> >` and making it invalid.; The transaction unloading then fails to completely remove this instantiation; (an unrelated bug), such that the remainders of the invalid decl are picked; up by a subsequent template instantiation which then asserts because of the; incomplete (invalid) declaration. We use the mangle/demangle trick from rootcling.; Now that multiple locations need it, just store it with the AnnotatedRecordDecl.; It will be needed for most classes; the overhead should be bearable. (cherry picked from commit d9e819b82632cf02b3aaa251f5922b457b41624e)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5819:769,hash,hashmap,769,https://root.cern,https://github.com/root-project/root/pull/5819,1,['hash'],['hashmap']
Security,clang-analyzer-deadcode.DeadStores]; 1: Value stored to 'err' is never read in /opt/root_src/core/zip/src/RZip.cxx:220; /opt/root_src/core/zip/src/ZDeflate.c:254:5: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/core/zip/src/ZDeflate.c:254; /opt/root_src/core/zip/src/ZDeflate.c:519:9: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/core/zip/src/ZDeflate.c:519; /opt/root_src/core/zip/src/ZInflate.c:439:3: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C1,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7427:7045,secur,security,7045,https://root.cern,https://github.com/root-project/root/issues/7427,1,['secur'],['security']
Security,"clang::OpaquePtr<clang::QualType>, bool, bool, bool*, bool, clang::IdentifierInfo**, bool, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so; 4: clang::Parser::TryAnnotateCXXScopeToken(bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so; 5: cling::LookupHelper::findScope(llvm::StringRef, cling::LookupHelper::DiagSetting, clang::Type const**, bool) const in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so; 6: GetClassSharedLibsForModule(char const*, cling::LookupHelper&) in /opt/root_src/core/metacling/src/TCling.cxx:6951; 7: TCling::GetClassSharedLibs(char const*) in /opt/root_src/core/metacling/src/TCling.cxx:7057; 8: TCling::ShallowAutoLoadImpl(char const*) in /opt/root_src/core/metacling/src/TCling.cxx:6113; 9: TCling::DeepAutoLoadImpl(char const*, std::unordered_set<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >&, bool) in /opt/root_src/core/metacling/src/TCling.cxx:6166; 10: TCling::AutoLoad(char const*, bool) in /opt/root_src/core/metacling/src/TCling.cxx:6278; 11: TClass::LoadClassDefault(char const*, bool) in /opt/root_src/core/meta/src/TClass.cxx:5779; 12: TClass::LoadClass(char const*, bool) in /opt/root_src/core/meta/src/TClass.cxx:5756; 13: TROOT::LoadClass(char const*, bool) const in /opt/root_src/core/base/src/TROOT.cxx:2130; 14: TClass::GetClass(ClassInfo_t*, bool, bool) in /opt/root_src/core/meta/src/TClass.cxx:3379; 15: TBaseClass::GetClassPointer(bool) in /opt/root_src/core/meta/src/TBaseClass.cxx:66; 16: TClass::GetBaseClass(TClass const*) in /opt/root_src/core/meta/src/TClass.cxx:2687; 17: TClass::InheritsFrom(TClass const*) const in /opt/root_src/core/meta/src/TClass.cxx:4905; 18: TClas",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7236#issuecomment-1949072327:72463,hash,hash,72463,https://root.cern,https://github.com/root-project/root/issues/7236#issuecomment-1949072327,1,['hash'],['hash']
Security,"clang::OpaquePtr<clang::QualType>, bool, bool, bool*, bool, clang::IdentifierInfo**, bool, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so; 4: clang::Parser::TryAnnotateCXXScopeToken(bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so; 5: cling::LookupHelper::findScope(llvm::StringRef, cling::LookupHelper::DiagSetting, clang::Type const**, bool) const in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so; 6: GetClassSharedLibsForModule(char const*, cling::LookupHelper&) in /opt/root_src/core/metacling/src/TCling.cxx:6951; 7: TCling::GetClassSharedLibs(char const*) in /opt/root_src/core/metacling/src/TCling.cxx:7057; 8: TCling::ShallowAutoLoadImpl(char const*) in /opt/root_src/core/metacling/src/TCling.cxx:6113; 9: TCling::DeepAutoLoadImpl(char const*, std::unordered_set<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >&, bool) in /opt/root_src/core/metacling/src/TCling.cxx:6166; 10: TCling::AutoLoad(char const*, bool) in /opt/root_src/core/metacling/src/TCling.cxx:6278; 11: TCling::AutoLoad(std::type_info const&, bool) in /opt/root_src/core/metacling/src/TCling.cxx:6097; 12: TClass::GetClass(std::type_info const&, bool, bool, unsigned long, unsigned long) in /opt/root_src/core/meta/src/TClass.cxx:3316; 13: void run<std::vector<unsigned char, std::allocator<unsigned char> > >(std::vector<unsigned char, std::allocator<unsigned char> > const&, bool, int) in /tmp/demoMem.C:26; 14: demoMem(bool, unsigned long, int) in /tmp/demoMem.C:63; 15: cling::IncrementalExecutor::executeWrapper(llvm::StringRef, cling::Value*) const in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so; 16: cling::Interpreter::RunFuncti",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7236#issuecomment-1949072327:39817,hash,hash,39817,https://root.cern,https://github.com/root-project/root/issues/7236#issuecomment-1949072327,1,['hash'],['hash']
Security,"cling startup scripts are different from rootlogon.C and rootrc .; rootrc is a config file while .clingrc is a regular cling script. cling startup scripts are executed also in invocation of standalone cling binary (not from root interpreter). Question:; 1. Renaming `.cling_profile` and `.clingrc` with suffix `.C` ?; 2. Rename `.clingrc` to something else so that `.clingrc` can be reserved for cling config file in the future (if any)?; Making it a config file instead of a cling script aligns with rootrc but not with bashrc, zshrc.; 3. Drop `.clingrc` for now and keep `.cling_profile` only ? If a cling script can easily tell if it is in interactive mode then keeping only 1 script makes sense. Otherwise it is better to keep both to align with bash and other interpreter inspired by bash design. By easily telling I mean a macro like `CLING_INTERACTIVE` or something simple that does not access `gCling`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11262#issuecomment-1229254493:894,access,access,894,https://root.cern,https://github.com/root-project/root/pull/11262#issuecomment-1229254493,2,['access'],['access']
Security,"clude <TROOT.h>; #include <TTreeReader.h>; #include <TTreeReaderArray.h>. void workload(TTreeReader &r) {; TTreeReaderArray<double> ra(r, ""truthCaloPt"");; while (r.Next()); ra.GetSize();; }. int main() {; ROOT::EnableImplicitMT(2);; ROOT::TTreeProcessorMT mt({""f1.root"", ""f2.root"", ""f3.root"", ""f4.root"", ""f5.root""}, ""t"");; mt.Process(workload);; }; ```. With these files: [files.zip](https://github.com/root-project/root/files/8451196/files.zip). The problem seems to be at the level of TGenCollectionProxy: multiple threads end up sharing the same TGenCollectionProxy objects, which is not thread safe (e.g. because of https://github.com/root-project/root/blob/bce5777b8f479212babb7a8af5485d9a6bbd251e/io/io/src/TEmulatedCollectionProxy.cxx#L84-L85). In principle, however, as we use different TChains/TTreeReaders in each thread, they should also access different TGenCollectionProxy instances. Example backtraces at the point of crash (this is one of several failure modes, but it's the one where the problem is clear -- both threads, at frame 0, are accessing the same TGenCollectionProxy instance):. ```; >>> thread apply all bt 10. Thread 2 (Thread 0x7fffdc0e2640 (LWP 312745) ""repro_ttreeproc""):; #0 0x00007ffff767d973 in TGenCollectionProxy::PopProxy (this=0x7fffd4016090) at ../io/io/src/TGenCollectionProxy.cxx:1333; #1 0x00007ffff7d57a15 in TVirtualCollectionProxy::TPushPop::~TPushPop (this=0x7fffdc0dad20, __in_chrg=<optimized out>) at ../core/cont/inc/TVirtualCollectionProxy.h:65; #2 0x00007ffff76274b1 in TEmulatedCollectionProxy::Destructor (this=0x7fffd4016090, p=0x7fffd40156e0, dtorOnly=false) at ../io/io/src/TEmulatedCollectionProxy.cxx:87; #3 0x00007ffff7d4f8c2 in TClass::Destructor (this=0x7fffd40152c0, obj=0x7fffd40156e0, dtorOnly=false) at ../core/meta/src/TClass.cxx:5417; #4 0x00007ffff676afdb in TBranchElement::ReleaseObject (this=0x7fffd4017590) at ../tree/tree/src/TBranchElement.cxx:4743; #5 0x00007ffff676b265 in TBranchElement::ResetAddress (this=0x7fffd4017590) ",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10357:1164,access,accessing,1164,https://root.cern,https://github.com/root-project/root/issues/10357,1,['access'],['accessing']
Security,clude/ctype.h:89; 50: Taking true branch in /opt/root_src/core/clib/src/Demangle.c:1311; 51: Value assigned to 'mangled' in /opt/root_src/core/clib/src/Demangle.c:1314; 52: Calling 'string_append' in /opt/root_src/core/clib/src/Demangle.c:1315; 53: Assuming 's' is equal to NULL in /opt/root_src/core/clib/src/Demangle.c:2679; 54: Left side of '||' is true in /opt/root_src/core/clib/src/Demangle.c:2679; 55: Returning from 'string_append' in /opt/root_src/core/clib/src/Demangle.c:1315; 56: Null pointer passed to 1st parameter expecting 'nonnull' in /opt/root_src/core/clib/src/Demangle.c:1316; /opt/root_src/core/clib/src/Demangle.c:1528:10: warning: Call to function 'sprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'sprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11 in /opt/root_src/core/clib/src/Demangle.c:1528; /opt/root_src/core/clib/src/Demangle.c:1910:34: warning: Array access (via field 'typevec') results in a null pointer dereference [clang-analyzer-core.NullDereference]; 1: Assuming 'mangled' is not equal to NULL in /opt/root_src/core/clib/src/Demangle.c:503; 2: Left side of '&&' is true in /opt/root_src/core/clib/src/Demangle.c:503; 3: Assuming the condition is true in /opt/root_src/core/clib/src/Demangle.c:503; 4: Taking true branch in /opt/root_src/core/clib/src/Demangle.c:503; 5: Null pointer value stored to field 'typevec' in /opt/root_src/core/clib/src/Demangle.c:505; 6: Assuming the condition is false in /opt/root_src/core/clib/src/Demangle.c:507; 7: Taking false branch in /opt/root_src/core/clib/src/Demangle.c:507; 8: Assuming the cond,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7422:13183,secur,security,13183,https://root.cern,https://github.com/root-project/root/issues/7422,1,['secur'],['security']
Security,"cmssdt.cern.ch/SDT/jenkins-artifacts/pull-request-integration/PR-7b6638/42123/runTheMatrix-results/140.063_RunZeroBias2022D/step3_RunZeroBias2022D.log; ```#--------------------------------------------------------------------------; cling JIT session error: In graph cling-module-926-jitted-objectbuffer, section .text._ZNK4reco10HitPattern23numberOfLostTrackerHitsENS0_11HitCategoryE: relocation target ""_ZN4reco10HitPattern16missingHitFilterEt"" at address 0x4000968500f0 is out of range of Page21 fixup at 0x4001a7270114 (_ZNK4reco10HitPattern23numberOfLostTrackerHitsENS0_11HitCategoryE, 0x4001a727010c + 0x8); ----- Begin Fatal Exception 11-Oct-2024 15:08:51 CEST-----------------------; An exception of category 'FatalRootError' occurred while; [0] Processing Event run: 357735 lumi: 53 event: 87840020 stream: 0; [1] Running path 'dqmoffline_1_step'; [2] Prefetching for module NanoAODDQM/'nanoDQM'; [3] Prefetching for module SimplePATTauFlatTableProducer/'boostedTauTable'; [4] Prefetching for module PATObjectCrossLinker/'linkedObjects'; [5] Prefetching for module PATMuonRefSelector/'finalMuons'; [6] Prefetching for module PATMuonUserDataEmbedder/'slimmedMuonsWithUserData'; [7] Calling method for module EvaluateMuonMVAID/'muonMVAID'; Additional Info:; [a] Fatal Root Error: @SUB=TClingCallFunc::make_wrapper; Failed to compile; ==== SOURCE BEGIN ====; #pragma clang diagnostic push; #pragma clang diagnostic ignored ""-Wformat-security""; __attribute__((used)) __attribute__((annotate(""__cling__ptrcheck(off)""))); extern ""C"" void __cf_365(void* obj, int nargs, void** args, void* ret); {; if (ret) {; new (ret) (double) (((const reco::TrackBase*)obj)->validFraction());; return;; }; else {; (void)(((const reco::TrackBase*)obj)->validFraction());; return;; }; }; #pragma clang diagnostic pop; ==== SOURCE END ====. ----- End Fatal Exception -------------------------------------------------; Another exception was caught while trying to clean up files after the primary fatal exception. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16401#issuecomment-2407514028:1533,secur,security,1533,https://root.cern,https://github.com/root-project/root/pull/16401#issuecomment-2407514028,1,['secur'],['security']
Security,code.DeadStores]; 1: Value stored to 'sSignalHandlerActive' is never read in /opt/root_src/core/textinput/src/textinput/TerminalConfigUnix.cpp:102; /opt/root_src/core/unix/src/TUnixSystem.cxx:689:19: warning: Call to function 'strcat' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcat'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]; 1: Call to function 'strcat' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcat'. CWE-119 in /opt/root_src/core/unix/src/TUnixSystem.cxx:689; /opt/root_src/core/unix/src/TUnixSystem.cxx:4246:4: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]; 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/core/unix/src/TUnixSystem.cxx:4246; /opt/root_src/core/unix/src/TUnixSystem.cxx:4458:4: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]; 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/core/unix/src/TUnixSystem.cxx:4458; /opt/root_src/core/zip/src/Bits.c:255:9: warning: Call to function 'memcpy' is insecure as it does not provide security ch,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7427:3749,secur,security,3749,https://root.cern,https://github.com/root-project/root/issues/7427,1,['secur'],['security']
Security,"concatenation of pages from the same page-group can achieve.; - `RPageSinkDaos::CommitSealedPageVImpl()` maps pages from the same page-group to the same attribute key, thus concatenating them on the DAOS-side (i.e. relies on scatter-gathered I/O) until the cage limit is reached. The cage sizes can vary due to page compression and the length of page-groups, thus it is calculated and stored to be referenced when reading back.; - `RWOperation` is generalized to allow many IOVs associated with one attribute key in a request, enabling the non-contiguous buffers of sealed pages to be aggregated into a cage under the same position ID in the object store. ; - `RNTupleLocator`: leverages the changes introduced by PR #11828; all DAOS locators use the type `kDaos` and payload format `RNTupleLocatorObject64`. To locate pages within a cage, the 64-bit payload encodes the cage index in the LS half and the offset in the MS half. If caging is disabled, the offset remains zero, and each 'cage' is trivially the sealed page.; - Currently, there are no plans to enable support for page-wise reading without cluster caching if the desired page is caged, as that use-case is not performant and thus not recommended. Caged pages in DAOS should be accessed with the page buffering read option turned on. By disallowing the reading of a single caged page when the wrapping cage size is unknown, the cage sizes - or upper bounds for them - do not need to be passed to `RPageSourceDaos`; they are trivially devised in `RPageSourceDaos::LoadClusters()` by accessing all page locators in a buffered page-group. ; - `RPageSourceDaos::LoadClusters()` and `RPageSourceDaos::PopulatePageFromCluster()` extract the cage position and offset-in-cage from each sealed page's `RNTupleLocator::fPosition`. The former function has been changed to coalesce the page locators by cage index and perform a single read operation per cage. ## Checklist:. - [x] tested changes locally + HPE `delphi` cluster; - [x] updated the docs",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11466:2620,access,accessed,2620,https://root.cern,https://github.com/root-project/root/pull/11466,2,['access'],"['accessed', 'accessing']"
Security,cpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/core/clib/src/Demangle.c:2752; /opt/root_src/core/clib/src/attach.c:146:3: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/core/clib/src/attach.c:146; /opt/root_src/core/clib/src/attach.c:147:3: warning: Call to function 'strncpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'strncpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'strncpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'strncpy_s' in case of C11 in /opt/root_src/core/clib/src/attach.c:147; /opt/root_src/core/clib/src/attach.c:186:7: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in t,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7422:23671,secur,security,23671,https://root.cern,https://github.com/root-project/root/issues/7422,1,['secur'],['security']
Security,crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/DigitalTrustSecureCAG3-runbytheissuer.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/DigitalTrustSecureCAG3-runbytheissuer.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/DigitalTrustSecureCAG3-runbytheissuer.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/18700496.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/5d9ea26d.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/e732ef10.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/DigiCertGridTrustCAG2-Classic.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/617ff41b.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/DigiCertGridTrustCAG2-Classic.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/58b08cb5.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/KEK.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/DigiCertGridTrustCAG2-Classic.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/d33760ec.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/e732ef10.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/2f2f573f.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/DigiCertGridTrustCAG2-Classic.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/18700496.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/bd43b60c.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/f5ead794.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/1db,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8092#issuecomment-840048181:23244,secur,security,23244,https://root.cern,https://github.com/root-project/root/issues/8092#issuecomment-840048181,2,"['certificate', 'secur']","['certificates', 'security']"
Security,crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/QuoVadis-Root-CA3G3.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/PSC-Myproxy-CA.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/089450c2.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/PSC-Myproxy-CA.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/QuoVadis-Root-CA3G3.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/368bc755.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/PSC-Myproxy-CA.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/1149214e.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/1149214e.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/87429ba3.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/30ffc224.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/295adc19.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/30ffc224.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/TRGrid.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/DFN-GridGermany-Root.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/295adc19.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/DFN-GridGermany-Root.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/6f071272.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/DFN-GridGermany-Root.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/REUNA-ca.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/6f071272.signing,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8092#issuecomment-840048181:31247,secur,security,31247,https://root.cern,https://github.com/root-project/root/issues/8092#issuecomment-840048181,2,"['certificate', 'secur']","['certificates', 'security']"
Security,cro 'strcat0' in /opt/root_src/net/http/civetweb/civetweb.c:18868; /opt/root_src/net/http/civetweb/civetweb.c:18969:3: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:18969; /opt/root_src/net/http/civetweb/civetweb.c:18984:4: warning: Call to function 'strcat' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcat'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]; 1: expanded from macro 'strcat0' in /opt/root_src/net/http/civetweb/civetweb.c:18868; 2: Call to function 'strcat' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcat'. CWE-119 in /opt/root_src/net/http/civetweb/civetweb.c:18984; 3: expanded from macro 'strcat0' in /opt/root_src/net/http/civetweb/civetweb.c:18868; /opt/root_src/net/http/civetweb/civetweb.c:19012:4: warning: Call to function 'strcat' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcat'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]; 1: expanded from macro 'strcat0' in /opt/root_src/net/http/civetweb/civetweb.c:18868; 2: Call to function 'strcat' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7528:76401,secur,security,76401,https://root.cern,https://github.com/root-project/root/issues/7528,1,['secur'],['security']
Security,ction call argument is an uninitialized value in /opt/root_src/net/http/civetweb/civetweb.c:17939; /opt/root_src/net/http/civetweb/civetweb.c:18152:2: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:18152; /opt/root_src/net/http/civetweb/civetweb.c:18334:2: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:18334; /opt/root_src/net/http/civetweb/civetweb.c:18899:3: warning: Call to function 'strcat' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcat'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]; 1: expanded from macro 'strcat0' in /opt/root_src/net/http/civetweb/civetweb.c:18868; 2: Call to function 'strcat' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such ,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7528:73616,secur,security,73616,https://root.cern,https://github.com/root-project/root/issues/7528,1,['secur'],['security']
Security,ctions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320; 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:1621; 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320; /opt/root_src/builtins/lz4/lz4.c:1678:9: warning: Call to function 'memmove' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memmove_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memmove' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memmove_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:1678; /opt/root_src/builtins/lz4/lz4.c:1678:9: warning: Null pointer passed to 1st parameter expecting 'nonnull' [clang-analyzer-core.NonNullParamChecker]; 1: Assuming the condition is false in /opt/root_src/builtins/lz4/lz4.c:1673; 2: Taking false branch in /opt/root_src/builtins/lz4/lz4.c:1673; 3: Assuming 'dictSize' is <= field 'dictSize' in /opt/root_src/builtins/lz4/lz4.c:1674; 4: Taking false branch in /opt/root_src/builtins/lz4/lz4.c:1674; 5: Assuming 'safeBuffer' is equal to NULL in /opt/root_src/builtins/lz4/lz4.c:1676; 6: Taking true branch in /opt/root_src/builtins/lz4/lz4.c:1676; 7: Assuming 'dictSize' is > 0 in /opt/root_src/builtins/lz4/lz4.c:1677; 8: Taking true branch in /opt/root_src/builtins/lz4/lz4.c:1677; 9: Null pointer passed to 1st,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7411:14678,secur,security,14678,https://root.cern,https://github.com/root-project/root/issues/7411,1,['secur'],['security']
Security,ctions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4.c:208; 2: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/builtins/lz4/lz4hc.c:1015; 3: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4.c:208; /opt/root_src/builtins/lz4/lz4hc.c:1169:9: warning: Call to function 'memmove' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memmove_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'memmove' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memmove_s' in case of C11 in /opt/root_src/builtins/lz4/lz4hc.c:1169; /opt/root_src/builtins/lz4/lz4hc.c:1169:9: warning: Null pointer passed to 1st parameter expecting 'nonnull' [clang-analyzer-core.NonNullParamChecker]; 1: Assuming the condition is false in /opt/root_src/builtins/lz4/lz4hc.c:1164; 2: Taking false branch in /opt/root_src/builtins/lz4/lz4hc.c:1164; 3: Assuming 'dictSize' is >= 4 in /opt/root_src/builtins/lz4/lz4hc.c:1165; 4: Taking false branch in /opt/root_src/builtins/lz4/lz4hc.c:1165; 5: Assuming 'dictSize' is <= 'prefixSize' in /opt/root_src/builtins/lz4/lz4hc.c:1166; 6: Taking false branch in /opt/root_src/builtins/lz4/lz4hc.c:1166; 7: Assuming 'safeBuffer' is equal to NULL in /opt/root_src/builtins/lz4/lz4hc.c:1167; 8: Taking true branch in /opt/root_src/builtins/lz4/lz4hc.c:1167; 9: 'dictSiz,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7411:64677,secur,security,64677,https://root.cern,https://github.com/root-project/root/issues/7411,1,['secur'],['security']
Security,cureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'strncpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'strncpy_s' in case of C11 in /opt/root_src/build/rmkdepend/cppsetup.c:180; /opt/root_src/build/rmkdepend/include.c:158:4: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]; 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/build/rmkdepend/include.c:158; /opt/root_src/build/rmkdepend/include.c:289:10: warning: Call to function 'strncpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'strncpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'strncpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'strncpy_s' in case of C11 in /opt/root_src/build/rmkdepend/include.c:289; /opt/root_src/build/rmkdepend/include.c:292:10: warning: Call to function 'strncpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'strncpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: Call to function 'strncpy' is insecure as it does not provide security checks intr,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7410:2194,secur,security,2194,https://root.cern,https://github.com/root-project/root/issues/7410,1,['secur'],['security']
Security,curity/certificates/064e0aa9.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/036b3363.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/BYGCA.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/036b3363.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/126f0acf.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/HPCI.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/126f0acf.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/1f58a078.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/ANSPGrid.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/1f58a078.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/ANSPGrid.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/QuoVadis-Root-CA2G3.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/ANSPGrid.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/QuoVadis-Root-CA2G3.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/BYGCA.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/ANSPGrid.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/20b7db76.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/156a0f0f.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/QuoVadis-Root-CA2G3.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/QuoVadis-Root-CA2G3.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/24c3ccde.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8092#issuecomment-840048181:50304,secur,security,50304,https://root.cern,https://github.com/root-project/root/issues/8092#issuecomment-840048181,2,"['certificate', 'secur']","['certificates', 'security']"
Security,curity/certificates/5e9e302b.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/MYIFAM.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/5e9e302b.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/GEANTeSciencePersonalECCCA4.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/GEANTeSciencePersonalCA4.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/GEANTeSciencePersonalCA4.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/GEANTeSciencePersonalECCCA4.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/GEANTeSciencePersonalCA4.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/GEANTeSciencePersonalCA4.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/943fd5f3.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/d9343743.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/DigitalTrustAssuredCAG3-runbytheissuer.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/DigitalTrustAssuredCAG3-runbytheissuer.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/DigitalTrustAssuredCAG3-runbytheissuer.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/DigitalTrustAssuredCAG3-runbytheissuer.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/GEANTeScienceSSLECCCA4.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/GEANTeScienceSSLECCCA4.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/GEANTeScienceSSLECCCA4.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/DigitalTrustSecureCAG3-runbytheissuer.crl_url' from CURLOPT_CAPATH; *,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8092#issuecomment-840048181:21278,secur,security,21278,https://root.cern,https://github.com/root-project/root/issues/8092#issuecomment-840048181,2,"['certificate', 'secur']","['certificates', 'security']"
Security,curity/certificates/7aa2b7bd.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/b459ca48.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/SRCE.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/ad9d1b74.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/0a49430a.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/7aa2b7bd.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/0a49430a.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/DZeScience.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/da213f5b.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/DZeScience.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/NCSA-slcs-2013.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/DZeScience.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/ad9d1b74.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/NCSA-slcs-2013.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/DZeScience.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/55994d72.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/fdf90b95.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/NCSA-slcs-2013.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/fdf90b95.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/seegrid-ca-2013.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/CNIC.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/SRCE.info' from CURLOPT_CAP,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8092#issuecomment-840048181:40701,secur,security,40701,https://root.cern,https://github.com/root-project/root/issues/8092#issuecomment-840048181,2,"['certificate', 'secur']","['certificates', 'security']"
Security,curity/certificates/94b468c6.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/b1ac0d46.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/RDIG.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/b1ac0d46.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/RDIG.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/SlovakGrid.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/4ce1cf99.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/SiGNET-CA.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/4ce1cf99.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/7a819ef2.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/1e4f9475.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/7b54708e.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/SiGNET-CA.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/7b54708e.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/1e4f9475.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/MaGrid.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/MaGrid.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/MaGrid.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/d7e8dc79.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/SiGNET-CA.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/MaGrid.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/SlovakGrid.info' from CURLOPT_CAPATH; * failed to lo,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8092#issuecomment-840048181:45553,secur,security,45553,https://root.cern,https://github.com/root-project/root/issues/8092#issuecomment-840048181,2,"['certificate', 'secur']","['certificates', 'security']"
Security,curity/certificates/AC-GRID-FR.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/01b5d333.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/AC-GRID-FR.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/BG-ACAD-CA.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/AC-GRID-FR.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/01b5d333.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/BG-ACAD-CA.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/AC-GRID-FR.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/PolishGrid-2019.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/3232b9bc.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/BG-ACAD-CA.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/3232b9bc.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/10718cba.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/56084620.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/56084620.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/10718cba.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/MREN-CA.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/cilogon-silver.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/MREN-CA.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/cilogon-silver.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/MREN-CA.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/4ba9a797.namespaces' from CURLOPT_CAPATH,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8092#issuecomment-840048181:61588,secur,security,61588,https://root.cern,https://github.com/root-project/root/issues/8092#issuecomment-840048181,2,"['certificate', 'secur']","['certificates', 'security']"
Security,curity/certificates/ASGCCA-2007.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/IGCA2.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/ASGCCA-2007.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/AC-GRID-FR-Personnels.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/RDIG.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/ASGCCA-2007.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/b459ca48.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/7aa2b7bd.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/b459ca48.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/SRCE.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/ad9d1b74.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/0a49430a.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/7aa2b7bd.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/0a49430a.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/DZeScience.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/da213f5b.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/DZeScience.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/NCSA-slcs-2013.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/DZeScience.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/ad9d1b74.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/NCSA-slcs-2013.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/DZeScience.signing_policy' from,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8092#issuecomment-840048181:40051,secur,security,40051,https://root.cern,https://github.com/root-project/root/issues/8092#issuecomment-840048181,2,"['certificate', 'secur']","['certificates', 'security']"
Security,curity/certificates/ArmeSFo.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/4c3ad332.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/ArmeSFo.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/8c74f281.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/63699217.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/ArmeSFo.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/4c3ad332.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/d0c2a341.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/63699217.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/d0c2a341.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/NIKHEF.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/MD-Grid-CA-T.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/072977ca.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/IRAN-GRID-GCG-G2.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/072977ca.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/MD-Grid-CA-T.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/58435df6.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/IRAN-GRID-GCG-G2.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/58435df6.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/IRAN-GRID-GCG-G2.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/NIIF-Root-CA-2.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/MD-Grid-CA-T.namespace,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8092#issuecomment-840048181:64184,secur,security,64184,https://root.cern,https://github.com/root-project/root/issues/8092#issuecomment-840048181,2,"['certificate', 'secur']","['certificates', 'security']"
Security,curity/certificates/BG-ACAD-CA.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/3232b9bc.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/10718cba.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/56084620.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/56084620.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/10718cba.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/MREN-CA.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/cilogon-silver.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/MREN-CA.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/cilogon-silver.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/MREN-CA.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/4ba9a797.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/BG-ACAD-CA.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/MREN-CA.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/cilogon-silver.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/3fb4d8a6.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/3fb4d8a6.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/ArmeSFo.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/ArmeSFo.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/4c3ad332.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/ArmeSFo.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/8c74f281.namespaces' from CURLOPT_CA,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8092#issuecomment-840048181:62511,secur,security,62511,https://root.cern,https://github.com/root-project/root/issues/8092#issuecomment-840048181,2,"['certificate', 'secur']","['certificates', 'security']"
Security,curity/certificates/DigiCertGridTrustCA-Classic.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/TERENAeSciencePersonalCA3.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/e91bd360.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/TERENAeSciencePersonalCA3.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/2f2f573f.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/TERENAeSciencePersonalCA3.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/KEK.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/MYIFAM.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/TERENAeSciencePersonalCA3.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/dbf09133.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/PK-Grid-2007.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/dbf09133.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/8f016f43.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/TSU-GE.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/8f016f43.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/PKIUNAMgrid.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/TSU-GE.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/PKIUNAMgrid.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/GermanGrid.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/TSU-GE.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/PKIUNAMgrid.signing_policy' from CURLO,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8092#issuecomment-840048181:28231,secur,security,28231,https://root.cern,https://github.com/root-project/root/issues/8092#issuecomment-840048181,2,"['certificate', 'secur']","['certificates', 'security']"
Security,curity/certificates/GridCanada.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/MARGI.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/GridCanada.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/MARGI.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/bffbd7d0.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/709bed08.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/bffbd7d0.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/11b4a5a2.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/709bed08.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/11b4a5a2.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/MARGI.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/LIPCA.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/LIPCA.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/LIPCA.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/e13e0fcf.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/BYGCA.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/LIPCA.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/064e0aa9.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/be87b272.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/BYGCA.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/be87b272.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/e21dc0c0.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/gri,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8092#issuecomment-840048181:48311,secur,security,48311,https://root.cern,https://github.com/root-project/root/issues/8092#issuecomment-840048181,2,"['certificate', 'secur']","['certificates', 'security']"
Security,curity/certificates/RDIG.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/ASGCCA-2007.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/b459ca48.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/7aa2b7bd.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/b459ca48.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/SRCE.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/ad9d1b74.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/0a49430a.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/7aa2b7bd.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/0a49430a.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/DZeScience.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/da213f5b.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/DZeScience.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/NCSA-slcs-2013.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/DZeScience.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/ad9d1b74.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/NCSA-slcs-2013.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/DZeScience.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/55994d72.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/fdf90b95.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/NCSA-slcs-2013.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/fdf90b95.signing_policy' fro,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8092#issuecomment-840048181:40426,secur,security,40426,https://root.cern,https://github.com/root-project/root/issues/8092#issuecomment-840048181,2,"['certificate', 'secur']","['certificates', 'security']"
Security,curity/certificates/b459ca48.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/SRCE.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/ad9d1b74.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/0a49430a.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/7aa2b7bd.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/0a49430a.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/DZeScience.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/da213f5b.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/DZeScience.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/NCSA-slcs-2013.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/DZeScience.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/ad9d1b74.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/NCSA-slcs-2013.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/DZeScience.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/55994d72.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/fdf90b95.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/NCSA-slcs-2013.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/fdf90b95.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/seegrid-ca-2013.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/CNIC.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/SRCE.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/CNIC.info' from CURLOPT_CAPATH; * fa,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8092#issuecomment-840048181:40795,secur,security,40795,https://root.cern,https://github.com/root-project/root/issues/8092#issuecomment-840048181,2,"['certificate', 'secur']","['certificates', 'security']"
Security,"curl.haxx.se/docs/sslcerts.html>; > ; > curl performs SSL certificate verification by default, using a ""bundle""; > of Certificate Authority (CA) public keys (CA certs). If the default; > bundle file isn't adequate, you can specify an alternate file; > using the --cacert option.; > If this HTTPS server uses a certificate signed by a CA represented in; > the bundle, the certificate verification probably failed due to a; > problem with the certificate (it might be expired, or the name might; > not match the domain name in the URL).; > If you'd like to turn off curl's verification of the certificate, use; > the -k (or --insecure) option.; > ***@***.*** t5]$ . I am unfamiliar with how to use curl with X509 and everything I tried so far has not worked. eg; curl -v https://webdav.lcg.triumf.ca:2880/atlas/atlaslocalgroupdisk/rucio/user/desilva/a1/a8/myFile.1.root --key ~/.globus/userkey.pem --cert ~/.globus/usercert.pem; or; curl -v https://webdav.lcg.triumf.ca:2880/atlas/atlaslocalgroupdisk/rucio/user/desilva/a1/a8/myFile.1.root --key ~/.globus/userkey.pem --cert ~/.globus/usercert.pem --capath /etc/grid-security/certificates. regards,; Asoka. > On May 12, 2021, at 10:18 AM, Axel Naumann ***@***.***> wrote:; > ; > ; > Right - without authentication I cannot see what's happening. If this is due to a redirect it would be a dupe of #8155 <https://github.com/root-project/root/issues/8155> - if not then it's different :-) But I don't know how to tell whether it's a redirect. Do you?; > ; > If not let's get #8155 <https://github.com/root-project/root/issues/8155> fixed and then we re-visit this one: either it's fixed, too, or we need to call in help from the Davix (?) folks.; > ; > —; > You are receiving this because you authored the thread.; > Reply to this email directly, view it on GitHub <https://github.com/root-project/root/issues/8092#issuecomment-839953723>, or unsubscribe <https://github.com/notifications/unsubscribe-auth/AK3WHVSCH3RYO2YJNPNMVNTTNKZ6VANCNFSM44DEPE6Q>.; >",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8092#issuecomment-839961058:3084,secur,security,3084,https://root.cern,https://github.com/root-project/root/issues/8092#issuecomment-839961058,3,"['authenticat', 'certificate', 'secur']","['authentication', 'certificates', 'security']"
Security,"cxp; roj]; C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:; Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\; Users\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\NeonEmitter.cpp) [C:\Users\bellenot; \build\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.clang-tblgen.vcxproj]; C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:; Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\; Users\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\ClangDiagnosticsEmitter.cpp) [C:\Us; ers\bellenot\build\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.clang-tblgen.vcxproj]; C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:; Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\; Users\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\ClangOpenCLBuiltinEmitter.cpp) [C:\; Users\bellenot\build\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.clang-tblgen.vcxproj]; C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:; Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\; Users\bellenot\git\master\interpreter\llvm\src\tools\clang\utils\TableGen\ClangOptionDocEmitter.cpp) [C:\User; s\bellenot\build\x86\sanitizer\interpreter\llvm\src\tools\clang\utils\TableGen\obj.clang-tblgen.vcxproj]; C:\Users\bellenot\git\master\interpreter\llvm\src\include\llvm/Support/Compiler.h(408,11): fatal error C1083:; Cannot open include file: 'sanitizer/asan_interface.h': No such file or directory (compiling source file C:\; Users\bellenot\git\ma",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9445#issuecomment-1008835389:2829,sanitiz,sanitizer,2829,https://root.cern,https://github.com/root-project/root/issues/9445#issuecomment-1008835389,1,['sanitiz'],['sanitizer']
Security,cxx:1195; 58: Assuming 'stack' is non-null in /opt/root_src/io/xml/src/TBufferXML.cxx:978; 59: Taking false branch in /opt/root_src/io/xml/src/TBufferXML.cxx:978; 60: Assuming the condition is true in /opt/root_src/io/xml/src/TBufferXML.cxx:983; 61: Taking true branch in /opt/root_src/io/xml/src/TBufferXML.cxx:983; 62: Calling 'TBufferXML::PerformPostProcessing' in /opt/root_src/io/xml/src/TBufferXML.cxx:984; 63: Assuming the condition is false in /opt/root_src/io/xml/src/TBufferXML.cxx:1203; 64: Taking false branch in /opt/root_src/io/xml/src/TBufferXML.cxx:1203; 65: '?' condition is false in /opt/root_src/io/xml/src/TBufferXML.cxx:1207; 66: Dereference of null pointer in /opt/root_src/io/xml/src/TBufferXML.cxx:1207; /opt/root_src/io/xml/src/TBufferXML.cxx:2535:7: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]; 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/io/xml/src/TBufferXML.cxx:2535; /opt/root_src/io/xml/src/TBufferXML.cxx:2558:21: warning: Use of zero-allocated memory [clang-analyzer-cplusplus.NewDelete]; 1: Assuming the condition is true in /opt/root_src/io/xml/src/TBufferXML.cxx:2543; 2: Taking true branch in /opt/root_src/io/xml/src/TBufferXML.cxx:2543; 3: Assuming 'nwh' is not equal to 0 in /opt/root_src/io/xml/src/TBufferXML.cxx:2549; 4: Taking false branch in /opt/root_src/io/xml/src/TBufferXML.cxx:2549; 5: Assuming 'nwh' is equal to 255 in /opt/root_src/io/xml/src/TBufferXML.cxx:2552; 6: Taking true branch in /opt/root_src/io/xml/src/TBufferXML.cxx:2552; 7: Memory is allocated in /opt/root_src/io/xml/src/TBufferXML.cxx:2557; 8: Use of zero-allocated memory in /opt/r,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7431:127659,secur,security,127659,https://root.cern,https://github.com/root-project/root/issues/7431,1,['secur'],['security']
Security,"cxx:1330; 13: Taking false branch in /opt/root_src/geom/geom/src/TGeoVoxelFinder.cxx:1330; 14: Assuming 'slice1' is null in /opt/root_src/geom/geom/src/TGeoVoxelFinder.cxx:1332; 15: Left side of '&&' is false in /opt/root_src/geom/geom/src/TGeoVoxelFinder.cxx:1332; 16: 'slice1' is null in /opt/root_src/geom/geom/src/TGeoVoxelFinder.cxx:1335; 17: Taking false branch in /opt/root_src/geom/geom/src/TGeoVoxelFinder.cxx:1335; 18: Control jumps to 'case 2:' at line 1352 in /opt/root_src/geom/geom/src/TGeoVoxelFinder.cxx:1345; 19: Passing null pointer value via 4th parameter 'array2' in /opt/root_src/geom/geom/src/TGeoVoxelFinder.cxx:1353; 20: Calling 'TGeoVoxelFinder::Intersect' in /opt/root_src/geom/geom/src/TGeoVoxelFinder.cxx:1353; 21: Assuming 'current_byte' is < 'nbytes' in /opt/root_src/geom/geom/src/TGeoVoxelFinder.cxx:1554; 22: Loop condition is true. Entering loop body in /opt/root_src/geom/geom/src/TGeoVoxelFinder.cxx:1554; 23: Array access (from variable 'array2') results in a null pointer dereference in /opt/root_src/geom/geom/src/TGeoVoxelFinder.cxx:1555; /opt/root_src/geom/geom/src/TGeoXtru.cxx:558:13: warning: Value stored to 'dist' during its initialization is never read [clang-analyzer-deadcode.DeadStores]; 1: Value stored to 'dist' during its initialization is never read in /opt/root_src/geom/geom/src/TGeoXtru.cxx:558; /opt/root_src/geom/geom/src/TGeoXtru.cxx:878:11: warning: Although the value stored to 'indx2' is used in the enclosing expression, the value is never actually read from 'indx2' [clang-analyzer-deadcode.DeadStores]; 1: Although the value stored to 'indx2' is used in the enclosing expression, the value is never actually read from 'indx2' in /opt/root_src/geom/geom/src/TGeoXtru.cxx:878; /opt/root_src/geom/geom/src/TGeoXtru.cxx:939:13: warning: Value stored to 'safz' during its initialization is never read [clang-analyzer-deadcode.DeadStores]; 1: Value stored to 'safz' during its initialization is never read in /opt/root_src/geom/geom/src/TGeo",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7428:79163,access,access,79163,https://root.cern,https://github.com/root-project/root/issues/7428,1,['access'],['access']
Security,"cxx:188:76: warning: cast between incompatible function types from ‘void (*)(FTGL_DOUBLE*, void**, GLfloat*, void**, FTMesh*)’ {aka ‘void (*)(double*, void**, float*, void**, FTMesh*)’} to ‘GLUTesselatorFunction’ {aka ‘void (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/graf3d/ftgl/src/FTVectoriser.cxx:189:76: warning: cast between incompatible function types from ‘void (*)(FTMesh*)’ to ‘GLUTesselatorFunction’ {aka ‘void (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/graf3d/ftgl/src/FTVectoriser.cxx:190:76: warning: cast between incompatible function types from ‘void (*)(GLenum, FTMesh*)’ {aka ‘void (*)(unsigned int, FTMesh*)’} to ‘GLUTesselatorFunction’ {aka ‘void (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:490:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing between 2147483648 and 2147483647 bytes at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 4294967295] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:761:21: warning: ‘%lu’ directive writing between 1 and 20 bytes into a region of size between 0 and 8191 [-Wformat-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:5203:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:4757:26: warning: ‘char* strncpy(char*, const char*, size_t)’ output may be truncated copying 10 bytes from a string of length 10 [-Wstringop-truncation] . And 1184 more. ### Failing tests:; - [projectroot.roottest.python.JupyROOT.roottest_python_JupyROOT_cppcompleter_doctest](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/52667/testReport/projectroot.roottest.python/JupyROOT/roottest_python_JupyR",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3347#issuecomment-459054611:1909,access,accessing,1909,https://root.cern,https://github.com/root-project/root/pull/3347#issuecomment-459054611,1,['access'],['accessing']
Security,"cxx:188:76: warning: cast between incompatible function types from ‘void (*)(FTGL_DOUBLE*, void**, GLfloat*, void**, FTMesh*)’ {aka ‘void (*)(double*, void**, float*, void**, FTMesh*)’} to ‘GLUTesselatorFunction’ {aka ‘void (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/graf3d/ftgl/src/FTVectoriser.cxx:189:76: warning: cast between incompatible function types from ‘void (*)(FTMesh*)’ to ‘GLUTesselatorFunction’ {aka ‘void (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/graf3d/ftgl/src/FTVectoriser.cxx:190:76: warning: cast between incompatible function types from ‘void (*)(GLenum, FTMesh*)’ {aka ‘void (*)(unsigned int, FTMesh*)’} to ‘GLUTesselatorFunction’ {aka ‘void (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:490:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing between 2147483648 and 2147483647 bytes at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 4294967295] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:761:21: warning: ‘%lu’ directive writing between 1 and 20 bytes into a region of size between 0 and 8191 [-Wformat-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:5203:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:4757:26: warning: ‘char* strncpy(char*, const char*, size_t)’ output may be truncated copying 10 bytes from a string of length 10 [-Wstringop-truncation] . And 1372 more. ### Failing tests:; - [projectroot.roottest.root.io.uniquePointer.roottest_root_io_uniquePointer_aclicDataMemberSelection](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/51612/testReport/projectroot.roottest.root.io/uniquePointer",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3236#issuecomment-454627604:1909,access,accessing,1909,https://root.cern,https://github.com/root-project/root/pull/3236#issuecomment-454627604,1,['access'],['accessing']
Security,"cxx:188:76: warning: cast between incompatible function types from ‘void (*)(FTGL_DOUBLE*, void**, GLfloat*, void**, FTMesh*)’ {aka ‘void (*)(double*, void**, float*, void**, FTMesh*)’} to ‘GLUTesselatorFunction’ {aka ‘void (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/graf3d/ftgl/src/FTVectoriser.cxx:189:76: warning: cast between incompatible function types from ‘void (*)(FTMesh*)’ to ‘GLUTesselatorFunction’ {aka ‘void (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/graf3d/ftgl/src/FTVectoriser.cxx:190:76: warning: cast between incompatible function types from ‘void (*)(GLenum, FTMesh*)’ {aka ‘void (*)(unsigned int, FTMesh*)’} to ‘GLUTesselatorFunction’ {aka ‘void (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:490:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing between 2147483648 and 2147483647 bytes at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 4294967295] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:761:21: warning: ‘%lu’ directive writing between 1 and 20 bytes into a region of size between 0 and 8191 [-Wformat-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:5203:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:4757:26: warning: ‘char* strncpy(char*, const char*, size_t)’ output may be truncated copying 10 bytes from a string of length 10 [-Wstringop-truncation] . And 192 more. ### Failing tests:; - [projectroot.roottest.cling.functionTemplate.roottest_cling_functionTemplate_testcint](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/47486/testReport/projectroot.roottest.cling/functionTemplate/roottest_clin",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2943#issuecomment-437034013:1903,access,accessing,1903,https://root.cern,https://github.com/root-project/root/pull/2943#issuecomment-437034013,1,['access'],['accessing']
Security,cxx:681; 14: 'evalue' initialized to a null pointer value in /opt/root_src/bindings/pyroot/cppyy/CPyCppyy/src/CPPMethod.cxx:234; 15: Assuming the condition is false in /opt/root_src/bindings/pyroot/cppyy/CPyCppyy/src/CPPMethod.cxx:235; 16: Taking false branch in /opt/root_src/bindings/pyroot/cppyy/CPyCppyy/src/CPPMethod.cxx:235; 17: 'errtype' is null in /opt/root_src/bindings/pyroot/cppyy/CPyCppyy/src/CPPMethod.cxx:253; 18: Taking true branch in /opt/root_src/bindings/pyroot/cppyy/CPyCppyy/src/CPPMethod.cxx:253; 19: Assuming 'pyname' is null in /opt/root_src/bindings/pyroot/cppyy/CPyCppyy/src/CPPMethod.cxx:256; 20: '?' condition is false in /opt/root_src/bindings/pyroot/cppyy/CPyCppyy/src/CPPMethod.cxx:256; 21: Assuming the condition is false in /opt/root_src/bindings/pyroot/cppyy/CPyCppyy/src/CPPMethod.cxx:258; 22: Taking false branch in /opt/root_src/bindings/pyroot/cppyy/CPyCppyy/src/CPPMethod.cxx:258; 23: Access to field 'fTopMessage' results in a dereference of a null pointer (loaded from variable 'evalue') in /opt/root_src/bindings/pyroot/cppyy/CPyCppyy/src/CPPMethod.cxx:271; 24: expanded from macro 'Py_XDECREF' in /usr/include/python2.7/object.h:825; /usr/include/python2.7/object.h:774:9: expanded from macro 'Py_DECREF'; /opt/root_src/bindings/pyroot/cppyy/CPyCppyy/src/Converters.cxx:2082:9: 'pyobj' is null; /opt/root_src/bindings/pyroot/cppyy/CPyCppyy/src/Converters.cxx:2082:5: Taking false branch; /opt/root_src/bindings/pyroot/cppyy/CPyCppyy/src/Converters.cxx:2087:16: Calling 'IsPyCArgObject'; /opt/root_src/bindings/pyroot/cppyy/CPyCppyy/src/Converters.cxx:164:10: 'pycarg_type' is null; /opt/root_src/bindings/pyroot/cppyy/CPyCppyy/src/Converters.cxx:164:5: Taking true branch; /opt/root_src/bindings/pyroot/cppyy/CPyCppyy/src/Converters.cxx:165:9: 'ctmod' initialized here; /opt/root_src/bindings/pyroot/cppyy/CPyCppyy/src/Converters.cxx:166:13: Assuming 'ctmod' is null; /opt/root_src/bindings/pyroot/cppyy/CPyCppyy/src/Converters.cxx:166:9: Taking true branch;,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7400#issuecomment-792738257:4941,Access,Access,4941,https://root.cern,https://github.com/root-project/root/issues/7400#issuecomment-792738257,1,['Access'],['Access']
Security,cxx:686; 14: 'evalue' initialized to a null pointer value in /opt/root_src/bindings/pyroot/cppyy/CPyCppyy/src/CPPMethod.cxx:239; 15: Assuming the condition is false in /opt/root_src/bindings/pyroot/cppyy/CPyCppyy/src/CPPMethod.cxx:240; 16: Taking false branch in /opt/root_src/bindings/pyroot/cppyy/CPyCppyy/src/CPPMethod.cxx:240; 17: 'errtype' is null in /opt/root_src/bindings/pyroot/cppyy/CPyCppyy/src/CPPMethod.cxx:258; 18: Taking true branch in /opt/root_src/bindings/pyroot/cppyy/CPyCppyy/src/CPPMethod.cxx:258; 19: Assuming 'pyname' is null in /opt/root_src/bindings/pyroot/cppyy/CPyCppyy/src/CPPMethod.cxx:261; 20: '?' condition is false in /opt/root_src/bindings/pyroot/cppyy/CPyCppyy/src/CPPMethod.cxx:261; 21: Assuming the condition is false in /opt/root_src/bindings/pyroot/cppyy/CPyCppyy/src/CPPMethod.cxx:263; 22: Taking false branch in /opt/root_src/bindings/pyroot/cppyy/CPyCppyy/src/CPPMethod.cxx:263; 23: Access to field 'fTopMessage' results in a dereference of a null pointer (loaded from variable 'evalue') in /opt/root_src/bindings/pyroot/cppyy/CPyCppyy/src/CPPMethod.cxx:276; 24: expanded from macro 'Py_XDECREF' in /usr/include/python2.7/object.h:825; /opt/root_src/bindings/pyroot/cppyy/CPyCppyy/src/Converters.cxx:176:9: warning: Access to field 'ob_refcnt' results in a dereference of a null pointer (loaded from variable 'ctmod') [clang-analyzer-core.NullDereference]; 1: expanded from macro 'Py_DECREF' in /usr/include/python2.7/object.h:774; 2: 'pyobj' is null in /opt/root_src/bindings/pyroot/cppyy/CPyCppyy/src/Converters.cxx:2082; 3: Taking false branch in /opt/root_src/bindings/pyroot/cppyy/CPyCppyy/src/Converters.cxx:2082; 4: Calling 'IsPyCArgObject' in /opt/root_src/bindings/pyroot/cppyy/CPyCppyy/src/Converters.cxx:2087; 5: 'pycarg_type' is null in /opt/root_src/bindings/pyroot/cppyy/CPyCppyy/src/Converters.cxx:164; 6: Taking true branch in /opt/root_src/bindings/pyroot/cppyy/CPyCppyy/src/Converters.cxx:164; 7: 'ctmod' initialized here in /opt/root_src/bin,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7400#issuecomment-824715675:2556,Access,Access,2556,https://root.cern,https://github.com/root-project/root/issues/7400#issuecomment-824715675,1,['Access'],['Access']
Security,cxx:787; /opt/root_src/tmva/tmva/src/MethodBoost.cxx:788:10: warning: Value stored to 'bSelCut' is never read [clang-analyzer-deadcode.DeadStores]; 1: Value stored to 'bSelCut' is never read in /opt/root_src/tmva/tmva/src/MethodBoost.cxx:788; /opt/root_src/tmva/tmva/src/MethodCFMlpANN.cxx:527:17: warning: Array access (from variable 'xpg') results in a null pointer dereference [clang-analyzer-core.NullDereference]; 1: Assuming 'xpg' is equal to null in /opt/root_src/tmva/tmva/src/MethodCFMlpANN.cxx:516; 2: Taking true branch in /opt/root_src/tmva/tmva/src/MethodCFMlpANN.cxx:516; 3: Assuming the condition is false in /opt/root_src/tmva/tmva/src/MethodCFMlpANN.cxx:519; 4: Taking false branch in /opt/root_src/tmva/tmva/src/MethodCFMlpANN.cxx:519; 5: Assuming the condition is true in /opt/root_src/tmva/tmva/src/MethodCFMlpANN.cxx:526; 6: Loop condition is true. Entering loop body in /opt/root_src/tmva/tmva/src/MethodCFMlpANN.cxx:526; 7: Array access (from variable 'xpg') results in a null pointer dereference in /opt/root_src/tmva/tmva/src/MethodCFMlpANN.cxx:527; /opt/root_src/tmva/tmva/src/MethodCFMlpANN_Utils.cxx:440:16: warning: The expression is an uninitialized value. The computed value will also be garbage [clang-analyzer-core.uninitialized.Assign]; 1: Assuming the condition is false in /opt/root_src/tmva/tmva/src/MethodCFMlpANN_Utils.cxx:158; 2: Taking false branch in /opt/root_src/tmva/tmva/src/MethodCFMlpANN_Utils.cxx:158; 3: Assuming the condition is false in /opt/root_src/tmva/tmva/src/MethodCFMlpANN_Utils.cxx:164; 4: Taking false branch in /opt/root_src/tmva/tmva/src/MethodCFMlpANN_Utils.cxx:164; 5: Assuming the condition is true in /opt/root_src/tmva/tmva/src/MethodCFMlpANN_Utils.cxx:169; 6: Taking true branch in /opt/root_src/tmva/tmva/src/MethodCFMlpANN_Utils.cxx:169; 7: Assuming the condition is true in /opt/root_src/tmva/tmva/src/MethodCFMlpANN_Utils.cxx:174; 8: Taking true branch in /opt/root_src/tmva/tmva/src/MethodCFMlpANN_Utils.cxx:174; 9: Assuming th,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7526:58714,access,access,58714,https://root.cern,https://github.com/root-project/root/issues/7526,1,['access'],['access']
Security,cy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/CESNET-CA-Root.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/USERTrustECCCertificationAuthority.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/7ed47087.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/USERTrustECCCertificationAuthority.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/DigiCertGridRootCA-Root.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/USERTrustECCCertificationAuthority.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/CESNET-CA-Root.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/DigiCertGridRootCA-Root.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/USERTrustECCCertificationAuthority.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/98ef0ee5.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/CNRS2.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/f30dd6ad.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/b4278411.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/f30dd6ad.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/CNRS2.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/35105088.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/35105088.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/KENETROOTCA.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/USERTrustRSACertificationAuthority.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/CNRS2.namespaces' fro,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8092#issuecomment-840048181:3681,secur,security,3681,https://root.cern,https://github.com/root-project/root/issues/8092#issuecomment-840048181,2,"['certificate', 'secur']","['certificates', 'security']"
Security,cy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/DigiCertGridCA-1G2-Classic-2015.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/DigitalTrustSecureCAG4-runbytheissuer.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/DigiCertGridCA-1G2-Classic-2015.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/DigitalTrustSecureCAG4-runbytheissuer.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/DigiCertGridCA-1G2-Classic-2015.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/d41ec82f.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/b85d64aa.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/598b583e.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/DigiCertGridCA-1G2-Classic-2015.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/a603ba9c.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/82c2b224.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/d41ec82f.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/DigiCertGridCA-1-Classic.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/bd43b60c.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/DigiCertGridCA-1-Classic.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/7b384752.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/DigiCertGridCA-1-Classic.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/7b384752.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/DigitalTrustSecureCAG4-runbytheissuer.namespaces' from CURLOPT_CAPATH; * faile,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8092#issuecomment-840048181:15745,secur,security,15745,https://root.cern,https://github.com/root-project/root/issues/8092#issuecomment-840048181,2,"['certificate', 'secur']","['certificates', 'security']"
Security,cy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/QuoVadis-Root-CA2.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/QuoVadis-Root-CA2.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/UNLPGrid.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/QuoVadis-Root-CA2.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/d71343e8.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/QuoVadis-Root-CA2.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/d71343e8.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/d7e8dc79.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/SlovakGrid.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/728fa56d.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/SlovakGrid.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/728fa56d.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/e13e0fcf.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/e21dc0c0.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/87250dfa.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/14e86c33.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/87250dfa.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/5e02f50a.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/DCAROOT-G1.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/AC-GRID-FR-Services.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/DCAROOT,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8092#issuecomment-840048181:53460,secur,security,53460,https://root.cern,https://github.com/root-project/root/issues/8092#issuecomment-840048181,2,"['certificate', 'secur']","['certificates', 'security']"
Security,"cy: frame-ancestors 'self';; Strict-Transport-Security: max-age=15768000; Access-Control-Allow-Origin: *; Access-Control-Allow-Headers: range; Access-Control-Expose-Headers: content-range,content-length,content-type,accept-ranges; Access-Control-Allow-Methods: HEAD,GET; Content-Type: multipart/byteranges; boundary=61c842e35204a0c7. --61c842e35204a0c7; Content-range: bytes 0-15/414239. root�mdR; --61c842e35204a0c7; Content-range: bytes 1000-1015/414239. 1ZGqP��; --61c842e35204a0c7--; ```. And here is result from cernbox:; ```; curl -ik https://cernbox.cern.ch/remote.php/dav/public-files/1Cy1HIf03Ca76Dm/test_ntuples_200123.root -H ""Range: bytes=0-15,1000-1015"" --output - (15.06. 11:15:25) !11380 ; HTTP/1.1 206 Partial Content; Access-Control-Allow-Origin: *; Content-Disposition: attachment; filename=""test_ntuples_200123.root""; Content-Length: 389; Content-Range: ; Content-Security-Policy: default-src 'none';; Content-Type: application/octet-stream; Date: Thu, 15 Jun 2023 09:15:48 GMT; Etag: ""329762575417868288:9d274a18""; Last-Modified: Wed, 24 May 2023 12:22:19 +0000; Oc-Etag: ""329762575417868288:9d274a18""; Oc-Fileid: eoshome-t!103034857; Server: nginx/1.20.1; Strict-Transport-Security: max-age=63072000; Vary: Origin; X-Content-Type-Options: nosniff; X-Download-Options: noopen; X-Frame-Options: SAMEORIGIN; X-Permitted-Cross-Domain-Policies: none; X-Robots-Tag: none; X-Xss-Protection: 1; mode=block. --1941f188e1f15cbc8af2c2ce8ba24411209981093834f193e96822568cbb; Content-Range: bytes 0-15/4667337; Content-Type: application/octet-stream. root��dG7�; --1941f188e1f15cbc8af2c2ce8ba24411209981093834f193e96822568cbb; Content-Range: bytes 1000-1015/4667337; Content-Type: application/octet-stream. .�J.�f6��M�����m; --1941f188e1f15cbc8af2c2ce8ba24411209981093834f193e96822568cbb--; ```. That is wrong?; First of all content type must be: ""Content-Type: multipart/something""; In the same line one should have boundary like ""boundary=61c842e35204a0c7""; Such line is not present in cernb",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13018#issuecomment-1592696000:1696,Secur,Security-Policy,1696,https://root.cern,https://github.com/root-project/root/issues/13018#issuecomment-1592696000,1,['Secur'],['Security-Policy']
Security,d '/etc/grid-security/certificates/1e4f9475.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/7b54708e.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/SiGNET-CA.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/7b54708e.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/1e4f9475.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/MaGrid.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/MaGrid.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/MaGrid.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/d7e8dc79.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/SiGNET-CA.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/MaGrid.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/SlovakGrid.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/7d0d064a.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/5d674a88.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/5d674a88.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/7d0d064a.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/GridCanada.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/MARGI.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/GridCanada.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/SiGNET-CA.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/GridCanada.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/MARGI.info' from CURLOPT_CAPATH; * failed ,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8092#issuecomment-840048181:46464,secur,security,46464,https://root.cern,https://github.com/root-project/root/issues/8092#issuecomment-840048181,2,"['certificate', 'secur']","['certificates', 'security']"
Security,d '/etc/grid-security/certificates/1e4f9475.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/MaGrid.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/MaGrid.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/MaGrid.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/d7e8dc79.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/SiGNET-CA.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/MaGrid.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/SlovakGrid.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/7d0d064a.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/5d674a88.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/5d674a88.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/7d0d064a.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/GridCanada.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/MARGI.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/GridCanada.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/SiGNET-CA.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/GridCanada.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/MARGI.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/GridCanada.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/MARGI.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/bffbd7d0.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/709bed08.namespaces' from CURLOPT_CAPATH; * fai,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8092#issuecomment-840048181:46832,secur,security,46832,https://root.cern,https://github.com/root-project/root/issues/8092#issuecomment-840048181,2,"['certificate', 'secur']","['certificates', 'security']"
Security,d '/etc/grid-security/certificates/7b54708e.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/SiGNET-CA.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/7b54708e.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/1e4f9475.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/MaGrid.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/MaGrid.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/MaGrid.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/d7e8dc79.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/SiGNET-CA.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/MaGrid.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/SlovakGrid.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/7d0d064a.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/5d674a88.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/5d674a88.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/7d0d064a.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/GridCanada.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/MARGI.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/GridCanada.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/SiGNET-CA.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/GridCanada.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/MARGI.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/GridCanada.signing_policy' from CURLOPT_CAPATH; * f,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8092#issuecomment-840048181:46552,secur,security,46552,https://root.cern,https://github.com/root-project/root/issues/8092#issuecomment-840048181,2,"['certificate', 'secur']","['certificates', 'security']"
Security,d '/etc/grid-security/certificates/SiGNET-CA.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/4ce1cf99.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/7a819ef2.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/1e4f9475.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/7b54708e.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/SiGNET-CA.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/7b54708e.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/1e4f9475.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/MaGrid.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/MaGrid.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/MaGrid.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/d7e8dc79.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/SiGNET-CA.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/MaGrid.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/SlovakGrid.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/7d0d064a.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/5d674a88.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/5d674a88.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/7d0d064a.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/GridCanada.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/MARGI.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/GridCanada.info' from CURLOPT_CAPATH; * fai,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8092#issuecomment-840048181:46185,secur,security,46185,https://root.cern,https://github.com/root-project/root/issues/8092#issuecomment-840048181,2,"['certificate', 'secur']","['certificates', 'security']"
Security,"d 20 bytes into a region of size between 0 and 8191 [-Wformat-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:5203:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:4757:26: warning: ‘char* strncpy(char*, const char*, size_t)’ output may be truncated copying 10 bytes from a string of length 10 [-Wstringop-truncation] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TVirtualGL.cxx:31:85: warning: cast between incompatible function types from ‘TGLManager*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TSystem.cxx:1148:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing 1 byte at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 2147483649] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/graf3d/ftgl/src/FTVectoriser.cxx:186:76: warning: cast between incompatible function types from ‘void (*)(GLenum, FTMesh*)’ {aka ‘void (*)(unsigned int, FTMesh*)’} to ‘GLUTesselatorFunction’ {aka ‘void (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/graf3d/ftgl/src/FTVectoriser.cxx:187:76: warning: cast between incompatible function types from ‘void (*)(void*, FTMesh*)’ to ‘GLUTesselatorFunction’ {aka ‘void (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/graf3d/ftgl/src/FTVectoriser.cxx:188:76: warning: cast between incompatible function types from ‘void (*)(FTGL_DOUBLE*, void**, GLfloat*, void**, FTMesh*)’ {aka ‘void (*)(double*, void**, float*, void**, FTMesh*)’} to ‘GLUTesselatorFunction’ {aka ‘void (*)()’} [-Wcast-function-type] . And 1184 more. ### Failing tests:; - [projectroot.roottest.python.JupyROOT.ro",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3357#issuecomment-459369738:1727,access,accessing,1727,https://root.cern,https://github.com/root-project/root/pull/3357#issuecomment-459369738,1,['access'],['accessing']
Security,"d an extra dependency in tree/dataframe. The RDatasetSpec now only has attributes (treenames, fileglobs, friendinfo,; entryrange, groupinfo), getters and only a single ctor taking a RSpecBuilder.; The user is no longer supposed to build a RDatasetSpec directly.; Therefore all corresponding tests are now removed. The RSpecBuilder has exactly the same attributes as RDatasetSpec, and writable; methods only - e.g. AddGroup, WithFriends, WithRange, Build (but no getters). The RLoopManager now has an extra attribute storing the group; information. It could be set only by the ctor taking a RDatasetSpec. The RDatasetSpec was holding the number of fileglobs in each group.; In the RLoopManager ctor (accepting a RDatasetSpec) the globs are; expanded and the group sizes are updated. However, group positioning; remains relevant to the global TChain in RLoopManager and hence; currently accesing groups/metadata requires global TTreeProcessorMT; chain creation. RSampleInfo now holds RMetadata and thus, could be accessed from DefinePerSample. ---; Example of a valid json file to be parsed:; ```json; {; 	""groups"": [{; 			""tag"": ""SIMULATED"",; 			""trees"": [""tree"", ""subTree"", ""subTree""],; 			""files"": [""test_dir/specTestFile00*.root"", ""specTestFile1.root"", ""specTestFile2.root""],; 			""metadata"": {; 				""year"": 2040,; 				""lumi"": 3.14,; 				""edeposit"": 19.0,; 				""datatype"": ""MC""; 			}; 		},; 		{; 			""tag"": ""REAL"",; 			""trees"": [""subTreeA""],; 			""files"": [""specTestFile4.root"", ""specTestFile4.root""],; 			""metadata"": {; 				""year"": 2012,; 				""century"": 20,; 				""experiment"": ""CMS""; 			}; 		},; 		{; 			""tag"": ""BLABLA"",; 			""trees"": [""subTreeA""],; 			""files"": [""specTestFile4.root"", ""specTestFile4.root""],; 			""metadata"": {; 				""year"": 2030,; 				""century"": 20,; 				""experiment"": ""CMS""; 			}; 		}; 	],; 	""friends"": {; 		""friendAlias1"": {; 			""trees"": [""subTree0""],; 			""files"": [""specTestFile6*.root"", ""specTestFile6.root""]; 		},; 		""friendAlias2"": {; 			""trees"": [""subTree1"", ""subTree2""],; 			""fi",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11526:1230,access,accessed,1230,https://root.cern,https://github.com/root-project/root/pull/11526,1,['access'],['accessed']
Security,"d by; transaction created during the callbacks executed during the; ```cling::IncrementalParser::commitTransaction``` of the main transaction. Reproducer:. With a main composed of 'only':; ```; int main(int argc, char ** argv); {; char const * class_string = (argc == 2) ? argv[1] : ""std::vector<int>"";; auto const result [[gnu::unused]] = TClass::GetClass(class_string);; return 0;; }; ```; which is a representation of real use case (in a more complex setup) in ART.; We were getting:; ```; Error in <TClingCallFunc::make_wrapper>: Failed to compile; ==== SOURCE BEGIN ====; #pragma clang diagnostic push; #pragma clang diagnostic ignored ""-Wformat-security""; __attribute__((used)) extern ""C"" void __cf_0(void* obj, int nargs, void** args, void* ret); {; if (ret) {; (*(TStreamerInfo**)ret) = new TStreamerInfo();; return;; }; else {; new TStreamerInfo();; return;; }; }; #pragma clang diagnostic pop; ==== SOURCE END ====; Error in <TClingCallFunc::ExecT>: Called with no wrapper, not implemented!; Error in <TVirtualStreamerInfo::Factory>: The plugin handler for TVirtualStreamerInfo was found but failed to create the factory object!; ```; The reason is that during TClingCallFunc::make_wrapper, the call to cling::Interpreter::compileFunction ends with:; ```; if (const llvm::GlobalValue* GV; = getLastTransaction()->getModule()->getNamedValue(name)); ```; However in the 'broken' case, the getLastTransaction does not return the transaction for the code being compiled by DeclareCFunction but instead the one used/created at:. ```; #0 cling::IncrementalParser::endTransaction (this=0x4a2980, T=0x8c0fb0) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/IncrementalParser.cpp:345; #1 0x00007fffeebc7899 in cling::Interpreter::PushTransactionRAII::pop (this=0x7fffffffcb00) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/Interpreter.cpp:111; #2 0x00007fffeebc785e in cling::Interpreter::PushTransactionRAII::",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2776:889,secur,security,889,https://root.cern,https://github.com/root-project/root/pull/2776,2,['secur'],['security']
Security,d in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'vsnprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: expanded from macro 'vsnprintf_impl' in /opt/root_src/net/http/civetweb/civetweb.c:781; 2: expanded from macro 'IGNORE_UNUSED_RESULT' in /opt/root_src/net/http/civetweb/civetweb.c:226; 3: Call to function 'vsnprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'vsnprintf_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:6937; 4: expanded from macro 'vsnprintf_impl' in /opt/root_src/net/http/civetweb/civetweb.c:781; 5: expanded from macro 'IGNORE_UNUSED_RESULT' in /opt/root_src/net/http/civetweb/civetweb.c:226; /opt/root_src/net/http/civetweb/civetweb.c:6945:7: warning: Call to function 'vsnprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'vsnprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]; 1: expanded from macro 'vsnprintf_impl' in /opt/root_src/net/http/civetweb/civetweb.c:781; 2: expanded from macro 'IGNORE_UNUSED_RESULT' in /opt/root_src/net/http/civetweb/civetweb.c:226; 3: Call to function 'vsnprintf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'vsnprintf_s' in case of C11 in /opt/root_src/net/http/civetweb/civetweb.c:6945; 4: expanded from macro 'vsnprintf_impl' in /opt/root_src/net/http/civetweb/civetweb.c:781; 5: expanded from macro 'IGNORE_UNUSED_RESULT' in /opt/root_src/net/http/civetweb/civetweb.c:226; /opt/root_src/net/http/civetweb/civetweb.c:7374:2: warning: Cal,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7528:31278,secur,security,31278,https://root.cern,https://github.com/root-project/root/issues/7528,1,['secur'],['security']
Security,"d int, ROOT::Internal::RDF::RColumnRegister const&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) (RFilterBase.cxx:22); ==270704== by 0x19821393: ???; ==270704== by 0x5EF4C44: Cppyy::CallO(long, void*, unsigned long, void*, unsigned long) (clingwrapper.cxx:887); ==270704== ; ==270704== Conditional jump or move depends on uninitialised value(s); ==270704== at 0x662731A: load_bytes (hash_bytes.cc:56); ==270704== by 0x662731A: std::_Hash_bytes(void const*, unsigned long, unsigned long) (hash_bytes.cc:153); ==270704== by 0x631A10A: std::_Hash_impl::hash(void const*, unsigned long, unsigned long) (functional_hash.h:198); ==270704== by 0x631A14F: std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::operator()(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const (basic_string.h:6875); ==270704== by 0x271EACF3: std::__detail::_Hash_code_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<ROOT::Internal::RDF::RVariationBase> >, std::__detail::_Select1st, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, true>::_M_hash_code(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const (hashtable_policy.h:1217); ==270704== by 0x271E9DB1: std::_Hashtable<std::__cxx11::basic_st",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10092#issuecomment-1064001383:178058,hash,hash,178058,https://root.cern,https://github.com/root-project/root/issues/10092#issuecomment-1064001383,1,['hash'],['hash']
Security,d to 'p' is never read [clang-analyzer-deadcode.DeadStores]; 1: Value stored to 'p' is never read in /opt/root_src/gui/gui/src/TGNumberEntry.cxx:311; /opt/root_src/gui/gui/src/TGNumberEntry.cxx:439:4: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]; 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/gui/gui/src/TGNumberEntry.cxx:439; /opt/root_src/gui/gui/src/TGNumberEntry.cxx:446:7: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]; 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/gui/gui/src/TGNumberEntry.cxx:446; /opt/root_src/gui/gui/src/TGNumberEntry.cxx:449:7: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]; 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/gui/gui/src/TGNumberEntry.cxx:449; /opt/root_src/gui/gui/src/TGNumberEntry.cxx:574:7: warning: Call to function 'strcpy' is insecure as it does not provide boun,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7533:46662,secur,security,46662,https://root.cern,https://github.com/root-project/root/issues/7533,1,['secur'],['security']
Security,d to 1st parameter expecting 'nonnull' in /opt/root_src/build/rmkdepend/main.c:749; /opt/root_src/build/rmkdepend/mainroot.cxx:52:1: warning: non-POD static (basic_string) [clazy-non-pod-global-static]; /opt/root_src/build/rmkdepend/mainroot.cxx:53:1: warning: non-POD static (basic_string) [clazy-non-pod-global-static]; /opt/root_src/build/rmkdepend/mainroot.cxx:116:7: warning: Call to function 'strcat' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcat'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]; 1: Call to function 'strcat' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcat'. CWE-119 in /opt/root_src/build/rmkdepend/mainroot.cxx:116; /opt/root_src/build/rmkdepend/parse.c:392:17: warning: Access to field 's_name' results in a dereference of a null pointer (loaded from variable 'stab') [clang-analyzer-core.NullDereference]; 1: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/parse.c:542; 2: Control jumps to 'case 17:' at line 602 in /opt/root_src/build/rmkdepend/parse.c:543; 3: Assuming 'recursion' is 0 in /opt/root_src/build/rmkdepend/parse.c:605; 4: Taking true branch in /opt/root_src/build/rmkdepend/parse.c:605; 5: 'recursion' is 0 in /opt/root_src/build/rmkdepend/parse.c:609; 6: Taking false branch in /opt/root_src/build/rmkdepend/parse.c:609; 7: Calling 'define' in /opt/root_src/build/rmkdepend/parse.c:613; 8: Assuming the condition is false in /opt/root_src/build/rmkdepend/parse.c:406; 9: expanded from macro 'isalnum' in /usr/include/ctype.h:189; 10: expanded from macro '__isctype' in /usr/include/ctype.h:89; 11: Left side of '||' is false in /opt/root_src/build/rmkdepend/parse.c:406; 12: expanded from macro 'isalnum' in /usr/include/ctype.h:189; 13: expanded from macro '__isctype' in /u,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7410:39755,Access,Access,39755,https://root.cern,https://github.com/root-project/root/issues/7410,1,['Access'],['Access']
Security,d to load '/etc/grid-security/certificates/1db3b27f.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/d33760ec.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/TERENA-eScience-SSL-CA-3.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/KEK.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/TERENA-eScience-SSL-CA-3.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/633dc6a4.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/TERENA-eScience-SSL-CA-3.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/QuoVadis-Grid-ICA-G2.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/58b08cb5.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/TERENA-eScience-SSL-CA-3.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/f5ead794.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/e523eeaa.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/PK-Grid-2007.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/e523eeaa.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/38f7145f.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/PK-Grid-2007.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/38f7145f.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/617ff41b.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/67707166.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/67707166.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/QuoVadis-Grid-ICA-G,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8092#issuecomment-840048181:25388,secur,security,25388,https://root.cern,https://github.com/root-project/root/issues/8092#issuecomment-840048181,2,"['certificate', 'secur']","['certificates', 'security']"
Security,d to load '/etc/grid-security/certificates/CNRS2-Projets.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/CNRS2-Projets.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/CNRS2-Projets.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/7ed47087.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/98ef0ee5.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/UKeScienceRoot-2007.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/UKeScienceRoot-2007.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/UKeScienceRoot-2007.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/UKeScienceRoot-2007.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/2436bbb8.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/DigitalTrustPrivateRootCAG4.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/DigitalTrustPrivateRootCAG4.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/DigitalTrustPrivateRootCAG4.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/DigitalTrustPrivateRootCAG4.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/585d9326.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/d58bb4bc.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/585d9326.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/23c77840.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/CNRS2-Grid-FR.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/78351451.signing_policy' from CURLOPT_CAPATH; * failed to ,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8092#issuecomment-840048181:8397,secur,security,8397,https://root.cern,https://github.com/root-project/root/issues/8092#issuecomment-840048181,2,"['certificate', 'secur']","['certificates', 'security']"
Security,d to load '/etc/grid-security/certificates/DigitalTrustSecureCAG4-runbytheissuer.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/5d9ea26d.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/DigitalTrustAssuredCAG4-runbytheissuer.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/b167aa9e.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/be44c37d.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/5249c1ef.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/be44c37d.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/b167aa9e.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/5e9e302b.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/MYIFAM.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/5e9e302b.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/GEANTeSciencePersonalECCCA4.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/GEANTeSciencePersonalCA4.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/GEANTeSciencePersonalCA4.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/GEANTeSciencePersonalECCCA4.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/GEANTeSciencePersonalCA4.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/GEANTeSciencePersonalCA4.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/943fd5f3.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/d9343743.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/DigitalTrustAssuredCAG3-runbythei,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8092#issuecomment-840048181:20437,secur,security,20437,https://root.cern,https://github.com/root-project/root/issues/8092#issuecomment-840048181,2,"['certificate', 'secur']","['certificates', 'security']"
Security,d to load '/etc/grid-security/certificates/GEANTeScienceSSLCA4.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/GEANTeScienceSSLCA4.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/GEANTeSciencePersonalECCCA4.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/GEANTeScienceSSLCA4.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/e9cc934f.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/GEANTeSciencePersonalECCCA4.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/GEANTeScienceSSLCA4.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/c141eb07.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/e9cc934f.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/c141eb07.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/d9343743.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/3e0d64db.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/3e0d64db.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/b85d64aa.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/DigitalTrustAssuredCAG4-runbytheissuer.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/DigitalTrustAssuredCAG4-runbytheissuer.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/5249c1ef.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/DigitalTrustAssuredCAG4-runbytheissuer.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/DigitalTrustSecureCAG4-runbytheissuer.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/5d9ea26,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8092#issuecomment-840048181:18617,secur,security,18617,https://root.cern,https://github.com/root-project/root/issues/8092#issuecomment-840048181,2,"['certificate', 'secur']","['certificates', 'security']"
Security,d to load '/etc/grid-security/certificates/TERENA-eScience-SSL-CA-3.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/KEK.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/TERENA-eScience-SSL-CA-3.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/633dc6a4.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/TERENA-eScience-SSL-CA-3.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/QuoVadis-Grid-ICA-G2.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/58b08cb5.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/TERENA-eScience-SSL-CA-3.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/f5ead794.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/e523eeaa.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/PK-Grid-2007.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/e523eeaa.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/38f7145f.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/PK-Grid-2007.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/38f7145f.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/617ff41b.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/67707166.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/67707166.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/QuoVadis-Grid-ICA-G2.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/DigiCertGridTrustCA-Classic.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/DigiC,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8092#issuecomment-840048181:25576,secur,security,25576,https://root.cern,https://github.com/root-project/root/issues/8092#issuecomment-840048181,2,"['certificate', 'secur']","['certificates', 'security']"
Security,d to load '/etc/grid-security/certificates/a883462e.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/8a21c0da.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/a883462e.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/GEANTeScienceSSLCA4.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/GEANTeScienceSSLCA4.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/GEANTeSciencePersonalECCCA4.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/GEANTeScienceSSLCA4.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/e9cc934f.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/GEANTeSciencePersonalECCCA4.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/GEANTeScienceSSLCA4.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/c141eb07.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/e9cc934f.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/c141eb07.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/d9343743.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/3e0d64db.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/3e0d64db.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/b85d64aa.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/DigitalTrustAssuredCAG4-runbytheissuer.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/DigitalTrustAssuredCAG4-runbytheissuer.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/5249c1ef.namespaces' from CURLOPT_CAPATH; * failed to load '/e,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8092#issuecomment-840048181:18333,secur,security,18333,https://root.cern,https://github.com/root-project/root/issues/8092#issuecomment-840048181,2,"['certificate', 'secur']","['certificates', 'security']"
Security,d to load '/etc/grid-security/certificates/a883462e.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/GEANTeScienceSSLCA4.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/GEANTeScienceSSLCA4.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/GEANTeSciencePersonalECCCA4.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/GEANTeScienceSSLCA4.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/e9cc934f.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/GEANTeSciencePersonalECCCA4.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/GEANTeScienceSSLCA4.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/c141eb07.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/e9cc934f.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/c141eb07.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/d9343743.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/3e0d64db.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/3e0d64db.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/b85d64aa.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/DigitalTrustAssuredCAG4-runbytheissuer.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/DigitalTrustAssuredCAG4-runbytheissuer.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/5249c1ef.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/DigitalTrustAssuredCAG4-runbytheissuer.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/DigitalTrustSecureCAG4-runbytheissue,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8092#issuecomment-840048181:18521,secur,security,18521,https://root.cern,https://github.com/root-project/root/issues/8092#issuecomment-840048181,2,"['certificate', 'secur']","['certificates', 'security']"
Security,d to load '/etc/grid-security/certificates/d33760ec.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/TERENA-eScience-SSL-CA-3.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/KEK.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/TERENA-eScience-SSL-CA-3.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/633dc6a4.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/TERENA-eScience-SSL-CA-3.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/QuoVadis-Grid-ICA-G2.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/58b08cb5.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/TERENA-eScience-SSL-CA-3.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/f5ead794.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/e523eeaa.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/PK-Grid-2007.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/e523eeaa.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/38f7145f.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/PK-Grid-2007.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/38f7145f.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/617ff41b.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/67707166.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/67707166.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/QuoVadis-Grid-ICA-G2.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/DigiCertGridTrust,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8092#issuecomment-840048181:25484,secur,security,25484,https://root.cern,https://github.com/root-project/root/issues/8092#issuecomment-840048181,2,"['certificate', 'secur']","['certificates', 'security']"
Security,"d to webdav.lcg.triumf.ca ; >>>> <http://webdav.lcg.triumf.ca/> (2607:f8f0:660:3::36) port 2880 (#0); >>>> * Initializing NSS with certpath: sql:/etc/pki/nssdb; >>>> *   CAfile: /etc/pki/tls/certs/ca-bundle.crt; >>>>   CApath: none; >>>> * Server certificate:; >>>> * subject: CN=dpool46.lcg.triumf.ca ; >>>> <http://dpool46.lcg.triumf.ca/>,OU=triumf.ca ; >>>> <https://can01.safelinks.protection.outlook.com/?url=http%3A%2F%2Ftriumf.ca%2F&data=04%7C01%7Cdqing%40triumf.ca%7Cb7cde810efc1452a4eab08d9156d8727%7Cc20535109cb34679a2d38f442e03b587%7C1%7C0%7C637564382428518448%7CUnknown%7CTWFpbGZsb3d8eyJWIjoiMC4wLjAwMDAiLCJQIjoiV2luMzIiLCJBTiI6Ik1haWwiLCJXVCI6Mn0%3D%7C1000&sdata=PNABpB6eQBLHoIjd3QUDm%2FMdUbyGTv6O%2BkpuRdme%2B3k%3D&reserved=0>,O=Grid,C=CA; >>>> * start date: Apr 08 16:29:03 2021 GMT; >>>> * expire date: May 08 16:29:03 2022 GMT; >>>> * common name: dpool46.lcg.triumf.ca <http://dpool46.lcg.triumf.ca/>; >>>> * issuer: CN=Grid Canada Certificate Authority,O=Grid,C=CA; >>>> * NSS error -8179 (SEC_ERROR_UNKNOWN_ISSUER); >>>> * Peer's Certificate issuer is not recognized.; >>>> * Closing connection 0; >>>> curl: (60) Peer's Certificate issuer is not recognized.; >>>> More details here: http://curl.haxx.se/docs/sslcerts.html ; >>>> <https://can01.safelinks.protection.outlook.com/?url=http%3A%2F%2Fcurl.haxx.se%2Fdocs%2Fsslcerts.html&data=04%7C01%7Cdqing%40triumf.ca%7Cb7cde810efc1452a4eab08d9156d8727%7Cc20535109cb34679a2d38f442e03b587%7C1%7C0%7C637564382428518448%7CUnknown%7CTWFpbGZsb3d8eyJWIjoiMC4wLjAwMDAiLCJQIjoiV2luMzIiLCJBTiI6Ik1haWwiLCJXVCI6Mn0%3D%7C1000&sdata=uIrfnt21mOTnhAWQN7zxmDDm9NhvlwTvp4wDcEZqcgE%3D&reserved=0>; >>>>; >>>> curl performs SSL certificate verification by default, using a ""bundle""; >>>>  of Certificate Authority (CA) public keys (CA certs). If the default; >>>>  bundle file isn't adequate, you can specify an alternate file; >>>>  using the --cacert option.; >>>> If this HTTPS server uses a certificate signed by a CA represented in; >>>>  the bund",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8092#issuecomment-839989913:4303,Certificate,Certificate,4303,https://root.cern,https://github.com/root-project/root/issues/8092#issuecomment-839989913,2,['Certificate'],['Certificate']
Security,"d with 0 +++; 181 getcwd(; 2 newfstatat(0, ; 2 newfstatat(1, ; 2 newfstatat(2, ; 532 newfstatat(3, ; 29 newfstatat(4, ; 10123 newfstatat(AT_FDCWD, ; 546 openat(AT_FDCWD, ; 843 readlink(; 1 --- SIGCHLD {si_signo=SIGCHLD, si_code=CLD_EXITED, si_pid=130118, si_uid=1000, si_status=0, si_utime=0, si_stime=0} ---; 1 --- SIGCHLD {si_signo=SIGCHLD, si_code=CLD_EXITED, si_pid=130120, si_uid=1000, si_status=0, si_utime=0, si_stime=0} ---; 1 --- SIGCHLD {si_signo=SIGCHLD, si_code=CLD_EXITED, si_pid=130124, si_uid=1000, si_status=0, si_utime=0, si_stime=0} ---; ```. ### openat stats with the two symbols related to #14277 . ```; strace -z -f -o openat.log -e trace=open,openat python3 -c 'import ROOT;print(ROOT.gErrorIgnoreLevel);print(ROOT.kError)'; -1; 3000; grep openat openat.log | sed 's|.*, ""||;s|"".*||' | sort | uniq | wc -l; 338; ```. ## After this patch. ### Import time; Taken after a few runs, hot caches. ```; time python -c ""import ROOT"". real	0m0.792s; user	0m0.600s; sys	0m0.197s; ```. ### strace file stats. ```; strace -e file python -c 'import ROOT' 2>&1 | awk -v FS='""' '{ print $1 }' | sort | uniq -c; 206 access(; 2 chdir(; 1 execve(; 1 +++ exited with 0 +++; 181 getcwd(; 2 newfstatat(0, ; 2 newfstatat(1, ; 2 newfstatat(2, ; 532 newfstatat(3, ; 29 newfstatat(4, ; 10123 newfstatat(AT_FDCWD, ; 546 openat(AT_FDCWD, ; 843 readlink(; 1 --- SIGCHLD {si_signo=SIGCHLD, si_code=CLD_EXITED, si_pid=130864, si_uid=1000, si_status=0, si_utime=0, si_stime=0} ---; 1 --- SIGCHLD {si_signo=SIGCHLD, si_code=CLD_EXITED, si_pid=130866, si_uid=1000, si_status=0, si_utime=0, si_stime=0} ---; 1 --- SIGCHLD {si_signo=SIGCHLD, si_code=CLD_EXITED, si_pid=130870, si_uid=1000, si_status=0, si_utime=0, si_stime=0} ---; ```. ### openat stats with the two symbols related to #14277 . ```; strace -z -f -o openat.log -e trace=open,openat python3 -c 'import ROOT;print(ROOT.gErrorIgnoreLevel);print(ROOT.kError)'; -1; 3000; grep openat openat.log | sed 's|.*, ""||;s|"".*||' | sort | uniq | wc -l; 338; ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14287#issuecomment-1866067873:2047,access,access,2047,https://root.cern,https://github.com/root-project/root/pull/14287#issuecomment-1866067873,1,['access'],['access']
Security,d-security/certificates/3fb4d8a6.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/ArmeSFo.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/ArmeSFo.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/4c3ad332.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/ArmeSFo.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/8c74f281.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/63699217.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/ArmeSFo.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/4c3ad332.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/d0c2a341.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/63699217.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/d0c2a341.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/NIKHEF.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/MD-Grid-CA-T.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/072977ca.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/IRAN-GRID-GCG-G2.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/072977ca.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/MD-Grid-CA-T.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/58435df6.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/IRAN-GRID-GCG-G2.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/58435df6.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/IRAN-GRID-GCG-G2.namespaces',MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8092#issuecomment-840048181:64001,secur,security,64001,https://root.cern,https://github.com/root-project/root/issues/8092#issuecomment-840048181,2,"['certificate', 'secur']","['certificates', 'security']"
Security,d-security/certificates/CNIC.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/da213f5b.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/CNIC.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/SRCE.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/seegrid-ca-2013.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/CNIC.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/seegrid-ca-2013.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/b2771d44.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/b2771d44.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/SRCE.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/e2023333.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/NCSA-slcs-2013.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/e2023333.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/2fc6b233.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/AC-GRID-FR-Personnels.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/2fc6b233.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/ff94d436.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/0e635db3.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/8fa17d52.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/0e635db3.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/IGCA2.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/RDIG.info' from CURL,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8092#issuecomment-840048181:42732,secur,security,42732,https://root.cern,https://github.com/root-project/root/issues/8092#issuecomment-840048181,2,"['certificate', 'secur']","['certificates', 'security']"
Security,d-security/certificates/HKU-CA-2.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/c36f6349.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/HKU-CA-2.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/IGCA2.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/HKU-CA-2.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/a7b21b05.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/IGCA2.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/a7b21b05.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/72aa436d.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/9cd75e87.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/9cd75e87.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/ASGCCA-2007.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/80df9b28.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/ASGCCA-2007.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/IGCA2.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/ASGCCA-2007.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/AC-GRID-FR-Personnels.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/RDIG.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/ASGCCA-2007.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/b459ca48.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/7aa2b7bd.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/b459ca48.signing_policy' from C,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8092#issuecomment-840048181:38846,secur,security,38846,https://root.cern,https://github.com/root-project/root/issues/8092#issuecomment-840048181,2,"['certificate', 'secur']","['certificates', 'security']"
Security,d-security/certificates/HPCI.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/HPCI.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/ead666c8.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/06769ccd.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/HPCI.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/06769ccd.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/522b8537.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/NorduGrid-2015.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/522b8537.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/77637f58.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/KISTIv3.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/95b96af1.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/IHEP-2013.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/95b96af1.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/KISTIv3.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/UNLPGrid.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/SDG-G2.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/KISTIv3.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/KISTIv3.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/ead666c8.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/77637f58.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/SDG-G2.namespaces' from CURLOPT_CAPATH; * failed to,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8092#issuecomment-840048181:57696,secur,security,57696,https://root.cern,https://github.com/root-project/root/issues/8092#issuecomment-840048181,2,"['certificate', 'secur']","['certificates', 'security']"
Security,d-security/certificates/MARGI.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/GridCanada.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/MARGI.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/bffbd7d0.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/709bed08.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/bffbd7d0.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/11b4a5a2.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/709bed08.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/11b4a5a2.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/MARGI.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/LIPCA.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/LIPCA.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/LIPCA.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/e13e0fcf.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/BYGCA.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/LIPCA.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/064e0aa9.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/be87b272.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/BYGCA.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/be87b272.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/e21dc0c0.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/064e0aa9.signing_policy' from CURLOPT_CAPATH; * failed to load '/,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8092#issuecomment-840048181:48397,secur,security,48397,https://root.cern,https://github.com/root-project/root/issues/8092#issuecomment-840048181,2,"['certificate', 'secur']","['certificates', 'security']"
Security,d-security/certificates/RDIG.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/SlovakGrid.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/4ce1cf99.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/SiGNET-CA.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/4ce1cf99.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/7a819ef2.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/1e4f9475.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/7b54708e.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/SiGNET-CA.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/7b54708e.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/1e4f9475.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/MaGrid.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/MaGrid.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/MaGrid.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/d7e8dc79.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/SiGNET-CA.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/MaGrid.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/SlovakGrid.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/7d0d064a.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/5d674a88.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/5d674a88.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/7d0d064a.signing_policy' from CURLOPT_CAPATH; * fail,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8092#issuecomment-840048181:45924,secur,security,45924,https://root.cern,https://github.com/root-project/root/issues/8092#issuecomment-840048181,2,"['certificate', 'secur']","['certificates', 'security']"
Security,d-security/certificates/UGRID-G2.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/UGRID-G2.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/UGRID-G2.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/UGRID-G2.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/c53e160f.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/c53e160f.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/8fa17d52.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/368bc755.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/HKU-CA-2.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/c36f6349.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/HKU-CA-2.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/c36f6349.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/HKU-CA-2.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/IGCA2.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/HKU-CA-2.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/a7b21b05.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/IGCA2.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/a7b21b05.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/72aa436d.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/9cd75e87.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/9cd75e87.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/ASGCCA-2007.crl_url' from CURLOPT_CAPA,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8092#issuecomment-840048181:37918,secur,security,37918,https://root.cern,https://github.com/root-project/root/issues/8092#issuecomment-840048181,2,"['certificate', 'secur']","['certificates', 'security']"
Security,d-security/certificates/USERTrustRSACertificationAuthority.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/DigiCertGridRootCA-Root.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/USERTrustRSACertificationAuthority.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/edca0fc0.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/2436bbb8.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/d58bb4bc.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/USERTrustRSACertificationAuthority.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/fc5a8f99.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/c2a48ab6.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/fc5a8f99.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/23c77840.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/CNRS2.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/2694e4f2.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/c2a48ab6.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/2694e4f2.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/74a04bb6.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/74a04bb6.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/09ff08b7.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/f4401b90.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/163af95c.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/f4401b90.signing_policy' fro,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8092#issuecomment-840048181:5725,secur,security,5725,https://root.cern,https://github.com/root-project/root/issues/8092#issuecomment-840048181,2,"['certificate', 'secur']","['certificates', 'security']"
Security,d-security/certificates/b1ac0d46.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/RDIG.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/b1ac0d46.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/RDIG.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/SlovakGrid.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/4ce1cf99.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/SiGNET-CA.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/4ce1cf99.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/7a819ef2.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/1e4f9475.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/7b54708e.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/SiGNET-CA.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/7b54708e.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/1e4f9475.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/MaGrid.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/MaGrid.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/MaGrid.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/d7e8dc79.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/SiGNET-CA.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/MaGrid.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/SlovakGrid.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/7d0d064a.namespaces' from CURLOPT_CAPATH; * failed to loa,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8092#issuecomment-840048181:45645,secur,security,45645,https://root.cern,https://github.com/root-project/root/issues/8092#issuecomment-840048181,2,"['certificate', 'secur']","['certificates', 'security']"
Security,d-security/certificates/be44c37d.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/b167aa9e.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/5e9e302b.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/MYIFAM.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/5e9e302b.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/GEANTeSciencePersonalECCCA4.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/GEANTeSciencePersonalCA4.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/GEANTeSciencePersonalCA4.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/GEANTeSciencePersonalECCCA4.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/GEANTeSciencePersonalCA4.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/GEANTeSciencePersonalCA4.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/943fd5f3.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/d9343743.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/DigitalTrustAssuredCAG3-runbytheissuer.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/DigitalTrustAssuredCAG3-runbytheissuer.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/DigitalTrustAssuredCAG3-runbytheissuer.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/DigitalTrustAssuredCAG3-runbytheissuer.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/GEANTeScienceSSLECCCA4.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/GEANTeScienceSSLECCCA4.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-secur,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8092#issuecomment-840048181:21074,secur,security,21074,https://root.cern,https://github.com/root-project/root/issues/8092#issuecomment-840048181,2,"['certificate', 'secur']","['certificates', 'security']"
Security,d-security/certificates/e21dc0c0.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/064e0aa9.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/036b3363.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/BYGCA.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/036b3363.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/126f0acf.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/HPCI.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/126f0acf.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/1f58a078.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/ANSPGrid.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/1f58a078.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/ANSPGrid.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/QuoVadis-Root-CA2G3.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/ANSPGrid.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/QuoVadis-Root-CA2G3.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/BYGCA.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/ANSPGrid.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/20b7db76.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/156a0f0f.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/QuoVadis-Root-CA2G3.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/QuoVadis-Root-CA2G3.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8092#issuecomment-840048181:50218,secur,security,50218,https://root.cern,https://github.com/root-project/root/issues/8092#issuecomment-840048181,2,"['certificate', 'secur']","['certificates', 'security']"
