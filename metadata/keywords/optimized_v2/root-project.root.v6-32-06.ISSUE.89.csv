quality_attribute,sentence,source,author,repo,version,id,keyword,matched_word,match_idx,wiki,url,total_similar,target_keywords,target_matched_words
Usability,"Hi! No that's alright, we don't enforce the formatting of old code. Also a rebase is not necessary, since the tests all passed and the PR would merge fine. Just a note: probably the PR was unattended for so long because the usecase for this feature was not clear (or you needed it in your project?). Now that we have it, we might as well merge it, but for the future try to focus more on addressing concrete use needs or improving the ROOT developer experience (like you did in many other PRs).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9156#issuecomment-1812443312:257,clear,clear,257,https://root.cern,https://github.com/root-project/root/pull/9156#issuecomment-1812443312,2,['clear'],['clear']
Usability,"Hi! Since I didn't get feedback yet, I decided to just merge the refactor to check the consistency without the try-catch hack. If you need the public interface after all, fee free to open a new PR about that once this one is merged :+1:",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13748#issuecomment-1816424024:23,feedback,feedback,23,https://root.cern,https://github.com/root-project/root/pull/13748#issuecomment-1816424024,2,['feedback'],['feedback']
Usability,"Hi, . Some time ago, I have had issues when invoking an `RDataFrame` analysis on a `TChain` that consisted of trees with **different names** in the **same file** (the canonical thing is just the other way around...). I first described the problem [here in the ROOT forum, rather long read, not absolutely necessary to understand this issue](https://root-forum.cern.ch/t/really-solved-rdataframe-for-tchain-loaded-with-ttrees-with-different-names/41756). Unluckily only my entire analysis chain was able to trigger the bug; i.e. I was not able to produce a condensed reproducer of the problem. The clearest indicator of the occurring mismatch was the following line repeatedly being printed on the terminal:; ```; Error in <TTreeReader::SetEntriesRange()>: first entry out of range 0..946274; ```. I also found a work-around, but the problem was still bothering me, which is why I invested some time in debugging it:. * The number of the error statement is identical to the number of entries in the *first* tree, which has fewer entries than its partner. It only occurs once `EntryClusters` from the second tree are being processed. I.e. the tree-switch is insufficient.; * The error seems to be caused by the following line:; https://github.com/root-project/root/blob/312dacbfdb2b76bfb1fa7af9532a01b3b08d03f1/tree/treeplayer/src/TTreeProcessorMT.cxx#L143; * Changing it as shown in this diff here seems to solve the problem:; ```; --- a/tree/treeplayer/src/TTreeProcessorMT.cxx	2021-02-07 20:22:19.290883093 +0000; +++ b/tree/treeplayer/src/TTreeProcessorMT.cxx	2021-02-07 20:32:00.000483321 +0000; @@ -140,8 +140,12 @@; const std::vector<Long64_t> &nEntries, const std::vector<std::vector<Long64_t>> &friendEntries); {; const bool usingLocalEntries = friendInfo.fFriendNames.empty() && entryList.GetN() == 0;; - if (fChain == nullptr || (usingLocalEntries && fileNames[0] != fChain->GetListOfFiles()->At(0)->GetTitle())); + if (fChain == nullptr || ( usingLocalEntries && (; +			 (fileNames[0] != fCh",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7143:597,clear,clearest,597,https://root.cern,https://github.com/root-project/root/issues/7143,1,['clear'],['clearest']
Usability,"Hi, ; Thank you for applying the changes in the code and to provide a tutorial and a test program. ; I have one more comment:; I still don't like having to pass a double** in the interface (in this case in the constructor). As you see that makes the code not nice (you see that also Travis complained). Since there is no easy solution for this, I would use std::vector<std::vector>> which gives the advantage that you could make it simply directly from a 2D initializer list. Otherwise my second preference is to use a simple double or float pointer and one assumes a proper order of the data. (e.g. raw major). . I would prefer having std::vector<std::vector<double>> for the contained type instead of std::vector<TArrayD>. . Thank you again for your changes and I hope we can merge this PR soon. Sorry for my delay in reviewing it . Lorenzo; Thank you if you can apply the ch",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3452#issuecomment-563254077:432,simpl,simply,432,https://root.cern,https://github.com/root-project/root/pull/3452#issuecomment-563254077,4,['simpl'],"['simple', 'simply']"
Usability,"Hi, ; There is some documentation in the ROOT Users guide, see ; https://root.cern.ch/root/htmldoc/guides/users-guide/ROOTUsersGuide.html#numerical-integration. Maybe it is not too visible, and I agree @couet we should probably include in the DOxygen description of the Integration classes. ; We are also missing a tutorial on the INtegratorMultiDim and we should add one before closing this issue",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7740#issuecomment-810332566:52,guid,guide,52,https://root.cern,https://github.com/root-project/root/issues/7740#issuecomment-810332566,6,['guid'],"['guide', 'guides']"
Usability,"Hi, ; Yes I was surprised to that they release 2.4 with a backward incompatibility API. ; But the future is clear, it is tensorflow.keras and not a multi backend API",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6793#issuecomment-725915781:108,clear,clear,108,https://root.cern,https://github.com/root-project/root/pull/6793#issuecomment-725915781,2,['clear'],['clear']
Usability,"Hi, Danilo. I missed the inheritance chain comment the first time, although I seriously considered your feedback. My justification for changing the executors in 6.12 is that If we can reduce the damage to user code (e.g. reducing the time a soon to be changed interface is exposed and providing the new one) we should go for it. But I'm not taking a hard stance on this and that's why I opened the PR, to discuss it :)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1312#issuecomment-343753485:104,feedback,feedback,104,https://root.cern,https://github.com/root-project/root/pull/1312#issuecomment-343753485,2,['feedback'],['feedback']
Usability,"Hi, I am one of the iminuit developers (https://github.com/iminuit/iminuit). We are glad that Minuit2 is still usable as a package separate from ROOT and thank the ROOT developers for that. It makes our life much easier. The iminuit package is build by copying the Minuit2 code in ROOT and building a Cython wrapper around it. Because we compile and use the Minuit2 code outside of the ROOT build environment, we found and fixed some bugs, which we would like to merge upstream in ROOT as well. Each of the two commits in this PR fixes one issue. The first is rather trivial, `MnPrint` is used unconditionally, even though the corresponding header `MnPrint.h` is only included if certain compiler flags are set. The second one is a change in the interface of the `MinimumBuilder` base class. We run Minuit using the `MnMigrad` class. Without this change, there is no way to change the print level in a particular instance of MnMigrad. The change does not violate the logical constness of MinimumBuilder.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1677:111,usab,usable,111,https://root.cern,https://github.com/root-project/root/pull/1677,1,['usab'],['usable']
Usability,"Hi, I decided to have a look at this and I noticed that in the exising collection proxies, this is handled as follows:; https://github.com/root-project/root/blob/ef2ff08d42703d4dc9eddef5d5d59ca65af7adb6/io/io/src/TGenCollectionProxy.cxx#L1510-L1526; I can apply this to `SimpleCollectionProxy.hxx`, but I was curious whether since you state this issue is only visible on Windows, given that the behaviour is undefined, if it might be better to use this 'fix' for all cases (given that the behaviour is undefined, now it might be fine on other OS's but this could change). Perhaps @pcanal can chime in?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13568#issuecomment-1738817768:271,Simpl,SimpleCollectionProxy,271,https://root.cern,https://github.com/root-project/root/issues/13568#issuecomment-1738817768,1,['Simpl'],['SimpleCollectionProxy']
Usability,"Hi, I had to rebase to change the code format to pass the clang-tools code analysis check (is this new? I didn't have to do this in my previous pull request which had the same formatting as this PR which it is now unhappy with. Also weirdly one of the things it required was in LinkDef.h putting a space before and after ""+"" which isn't consistent with the other lines. Also it required some very weird/bad formatting for calling the function ""plotTwoTGraphs"" in the tutorial added, I think it is trying to reduce the number of characters per line, but it does it in a quite poor way. Also the command that the script ""https://github.com/root-project/root/blob/master/.ci/format_script.sh"" which does this format check says to run to rebase is incorrect. It says to do:. ```; git rebase -i -x ""git-clang-format-7 master && git commit -a --allow-empty --fixup=HEAD"" --strategy-option=theirs origin/master; git rebase --autosquash -i master; ```; But this does not run and complains that master does not exist. It should be; ```; git rebase -i -x ""git-clang-format-8 origin/master && git commit -a --allow-empty --fixup=HEAD"" --strategy-option=theirs origin/master; git rebase --autosquash -i origin/master; ```; [i.e. master-> origin/master]; ). This rebase added some spurious commit messages. When (/if) this pull request is accepted, could you please select ""squash and merge"", it's a lot simpler than me having to rebase and squashing manually in the terminal (which last time I tried I messed up so bad I ended up just having to delete my fork and start over), the title of the PR works as a commit message for the full thing ""Add Relativistic Voigt Function to TMath"". Thanks in advance for any help,; Jack",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11049#issuecomment-1194998699:1391,simpl,simpler,1391,https://root.cern,https://github.com/root-project/root/pull/11049#issuecomment-1194998699,2,['simpl'],['simpler']
Usability,"Hi, I managed to prepare a relatively simple code that reproduces the issue:. ```c++; void crash() {; RooStats::HistFactory::Measurement meas(""mwe"",""mwe"");; meas.SetOutputFilePrefix(""./"");; meas.SetPOI(""signalStrength"");; meas.SetLumi(1);; meas.AddConstantParam(""Lumi"");. RooStats::HistFactory::Channel chan1(""channel1"");; chan1.SetData("""","""");; RooStats::HistFactory::Sample sample1(""sample1"");; sample1.SetHistoName(""emu_OS_1b_Ma"");; sample1.SetHistoPath("""");; sample1.SetInputFile(""BLIND_separate_tt_Z_29IFB_Apr_29_histos.root"");; sample1.SetNormalizeByTheory(false);; sample1.AddNormFactor(""signalStrength"", 1, 0.8, 1.2);; sample1.AddNormFactor(""b"", 0.543, 0.5, 0.6);; sample1.AddOverallSys(""Dummy"",1,1);. RooStats::HistFactory::Sample sample2(""sample2"");; sample2.SetHistoName(""emu_OS_1b_Mb"");; sample2.SetHistoPath("""");; sample2.SetInputFile(""BLIND_separate_tt_Z_29IFB_Apr_29_histos.root"");; sample2.SetNormalizeByTheory(false);; sample2.AddNormFactor(""signalStrength"", 1, 0.8, 1.2);; sample2.AddNormFactor(""minusONE"", -1, -1.1, -0.9);; sample2.AddNormFactor(""b2"", 0.2950, 0.0, 1.0);; sample2.AddOverallSys(""Dummy"",1,1);. chan1.AddSample(sample1);; chan1.AddSample(sample2);. RooStats::HistFactory::Channel chan2(""channel2"");; chan2.SetData("""","""");; RooStats::HistFactory::Sample sample3(""sample3"");; sample3.SetHistoName(""emu_OS_2b_Mc"");; sample3.SetHistoPath("""");; sample3.SetInputFile(""BLIND_separate_tt_Z_29IFB_Apr_29_histos.root"");; sample3.SetNormalizeByTheory(false);; sample2.AddNormFactor(""signalStrength"", 1, 0.8, 1.2);; sample3.AddNormFactor(""b2"", 0.2950, 0.0, 1.0);; sample3.AddOverallSys(""Dummy"",1,1);; chan2.AddSample(sample3);. meas.AddPreprocessFunction(""b2"",""b*b"",""b[0.543,0.0,1.0]"");; meas.AddConstantParam(""minusONE"");; meas.AddChannel(chan1);; meas.AddChannel(chan2);; meas.CollectHistograms();; RooStats::HistFactory::MakeModelAndMeasurementFast(meas);; }; ```. The code and the input can be found here: `/afs/cern.ch/user/t/tdado/public/ROOT_issue_14225`. It is probably no",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14225#issuecomment-1857543387:38,simpl,simple,38,https://root.cern,https://github.com/root-project/root/issues/14225#issuecomment-1857543387,2,['simpl'],['simple']
Usability,"Hi, I tried on osx but it would be nice to have a look. The error is quite clear; ```; 104: build/include/ROOT/TDataFrame.hxx:264:53: error: no type named 'BranchTypes_t' in '(lambda at buildinclude/ROOT/TDataFrame.hxx:683:25)'; 104: typename BranchTypes_t = typename Helper::BranchTypes_t>; 104: ~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~; 104: build/include/ROOT/TDataFrame.hxx:684:37: note: in instantiation of default argument for 'TDataFrameAction<(lambda at build/include/ROOT/TDataFrame.hxx:683:25), ROOT::Detail::TDataFrameBranchBase>' required here; 104: using DFA_t = ROOT::Internal::TDataFrameAction<decltype(fillLambda), Proxied>;; 104: ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~; 104: root/tutorials/dataframe/tdf101_h1Analysis.C:129:37: note: in instantiation of function template specialization 'ROOT::Experimental::TDataFrameInterface<ROOT::Detail::TDataFrameBranchBase>::Histo2D<float, float>' requested here; 104: auto h2ARP = selectedAddedBranch.Histo2D<float, float>(TH2F(""h2"",""ptD0 vs Dm_d"",30,0.135,0.165,30,-3,6), ""dm_d"", ""h2_y"");; 104: ^; 104: In file included from input_line_10:1:; 104: In file included from root/tutorials/dataframe/tdf101_h1Analysis.C:11:; 104: build/include/ROOT/TDataFrame.hxx:685:11: error: no matching member function for call to 'Book'; 104: df->Book(std::make_shared<DFA_t>(std::move(fillLambda), bl, fProxiedPtr));; 104: ~~~~^~~~; 104: root/tutorials/dataframe/tdf101_h1Analysis.C:129:37: note: in instantiation of function template specialization 'ROOT::Experimental::TDataFrameInterface<ROOT::Detail::TDataFrameBranchBase>::Histo2D<float, float>' requested here; 104: auto h2ARP = selectedAddedBranch.Histo2D<float, float>(TH2F(""h2"",""ptD0 vs Dm_d"",30,0.135,0.165,30,-3,6), ""dm_d"", ""h2_y"");; ```; after a quick look, it seems it's looking for a dependent type even if the actual type is a lambda.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/366#issuecomment-282562121:75,clear,clear,75,https://root.cern,https://github.com/root-project/root/pull/366#issuecomment-282562121,1,['clear'],['clear']
Usability,"Hi, I'm picking this up (thanks @linev for assigning me). #3433 should be merged first. It just requires rebasing and fixing a trivial conflict. For this PR: I will review the code one last time before approving, mostly to be familiar with the code myself. I don't expect any issue. I think `RCombinedDS` is not a bad name given that it really provides arbitrary combinations of datasources. What do you think @Axel-Naumann ? @ktf proposed `RAssociativeDS` as an alternative but I don't think it's clearer.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3443#issuecomment-594471283:498,clear,clearer,498,https://root.cern,https://github.com/root-project/root/pull/3443#issuecomment-594471283,2,['clear'],['clearer']
Usability,"Hi, even before starting to comment this, for the sake of clarity, my proposal was not to go for the inheritance chain but rather for a utility function/class in ROOT::Internal which could absorb the duplication of code you described present in TMVA and fitting. This was intended to simplify the current status of the *implementations* for 6.12. The timeline I suggested for a change of the Executors structure involved May, i.e. target 6.14.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1312#issuecomment-343718817:284,simpl,simplify,284,https://root.cern,https://github.com/root-project/root/pull/1312#issuecomment-343718817,2,['simpl'],['simplify']
Usability,"Hi, everyone. Recently, when I used THttpServer to show a Canvas, I met a problem.; Referring to [this example](https://root.cern/doc/master/canvas2_8C.html), I want to show this Canvas on the webpage. It works very well. But when I want to show more histograms, it looks too small to see clearly. I hope that the scroll bar will be added to the canvas when I want to show more histograms on the webpage. How should I do? Does anyone have ideas?. Thanks in advance.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10657:289,clear,clearly,289,https://root.cern,https://github.com/root-project/root/issues/10657,1,['clear'],['clearly']
Usability,"Hi, since we are touching this, is the feature clearly indicated in the docs?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2658#issuecomment-423486045:47,clear,clearly,47,https://root.cern,https://github.com/root-project/root/pull/2658#issuecomment-423486045,2,['clear'],['clearly']
Usability,"Hi, some comments/questions:. 1. I guess the behavior of `TTaskGroup` should mimic what `TThreadExecutor` does, e.g. it should use the task arena if it exists, and it should construct one if it doesn't. What's the rationale for doing things independently of ROOT's task arena? Does this mean users might see more cores used than they expect in some cases?; 2. Are you ok with silently do nothing if R__IMT is undefined? Would it be better to print a warning?; 3. Can we also have a way to disable RNTuple's multi-threading even if implicit MT is enabled, like TTree has?. P.S.; this stuff is always tricky to reason about for me, sorry if i'm missing obvious stuff. the rationale behind my question is that we should not have N different multi-threading behaviors for N components (because then we can't reason about how these components interact with each other because there are too many possibilities), we should not surprisingly use more cores than users might expect (and we should play well with the TBB settings of frameworks such as CMSSW, but it's not clear to me how we do that now, actually)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8334#issuecomment-854489805:1061,clear,clear,1061,https://root.cern,https://github.com/root-project/root/pull/8334#issuecomment-854489805,2,['clear'],['clear']
Usability,"Hi, some update on this. First, let me try to clear a bit the context. I am not sure why `gc.collect` is being invoked here. Manually invoking the Python garbage collector is not going to give any guarantees on which objects are actually destroyed by the interpreter, it depends on the types and sometimes it's even undefined behaviour, as per the docs https://docs.python.org/3/library/gc.html#gc.collect. Second, even if we had that guarantee, the first and the second loops are doing two wildly different things.; ```; my_data = rvec; ```; Is doing a copy of an `RVec` to another `RVec`, with a thin Python proxy to present it to the user. The copy of an RVec is a well-defined operation in terms of memory management, i.e. it will call the copy-constructor of the `RVec`. Whereas; ```; my_data = numpy.asarray(rvec); ```; Is creating a new numpy array object in memory which is an owning view on the contents of the RVec. The management of the RVec in memory can be clearly seen with this simplified example; ```; process = psutil.Process(). ROOT.gInterpreter.Declare(""""""; auto create_rvec(unsigned int n) {; //return std::array<unsigned int, 3>({n, n, n});; return ROOT::RVec<unsigned int>({n, n, n});; }; """"""); df = ROOT.RDataFrame(100).Define(""my_rvecs"", ""create_rvec(rdfentry_)""); rvecs = df.AsNumpy([""my_rvecs""])[""my_rvecs""]. def get_mem_usage():; return process.memory_info().rss # in kbytes. mem0 = get_mem_usage(); print(mem0). for v2 in rvecs:; n = v2; mem2 = get_mem_usage(); print(mem2); ```. Which doesn't use `gc.collect` but will still show that the memory used is exactly the same at each iteration, no leaks.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14981#issuecomment-2006250778:46,clear,clear,46,https://root.cern,https://github.com/root-project/root/issues/14981#issuecomment-2006250778,6,"['clear', 'simpl']","['clear', 'clearly', 'simplified']"
Usability,"Hi, thanks for pointing out that this clipping is inconsistent with the TTree version! And thanks for the kind words!. I designed the numpy version to be consistent with filling a RooDataSet one-by-one with `RooDataSet::add()`, in which case the value is clipped. That's a general problem in RooFit, many ways to do the same thing and they behave inconsistently. However, I think both clipping and skipping can be very dangerous. I'm about to change the behavior to simply erroring out when the values are not in the range, with the possibility to manually change that behavior to skipping or clipping if desired. Like that, there are no bad surprises. Any thoughts on that?. This issue is related to https://github.com/root-project/root/issues/6937. Probably I will address them together in one PR.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10447#issuecomment-1110865265:466,simpl,simply,466,https://root.cern,https://github.com/root-project/root/issues/10447#issuecomment-1110865265,2,['simpl'],['simply']
Usability,"Hi, thanks for the question!. The standard way of do this in ROOT is to use [TParameter](https://root.cern.ch/doc/v612/classTParameter.html) or an `std::` container, as also discussed here:; https://root-forum.cern.ch/t/writing-simple-variable-in-root-files/11094/5. For example:; ```C++; void write() {. TParameter<int> x1{""x1"", 5};; std::vector<int> x2{4};. std::unique_ptr<TFile> file{TFile::Open(""myfile.root"", ""RECREATE"")};. file->WriteObject(&x1, ""x1"");; file->WriteObject(&x2, ""x2"");; }; ```; Therefore, having this functionality is redundant as therefore it was removed. If you still need to use `RooInt` in your framework for backwards compatibility, please just copy-paste its source code into your framework. It's very simple:; * https://github.com/root-project/root/blob/v6-28-00-patches/roofit/roofitcore/inc/RooInt.h; * https://github.com/root-project/root/blob/v6-28-00-patches/roofit/roofitcore/src/RooInt.cxx; You can even remove the sorting interface if you don't need it. Are these possible ways forward? I would be very reluctant to bring this class back, because RooFit is for statistical analysis. Using its classes to store metadata in a ROOT file is really not the idea.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/16380#issuecomment-2335109569:228,simpl,simple-variable-in-root-files,228,https://root.cern,https://github.com/root-project/root/issues/16380#issuecomment-2335109569,4,['simpl'],"['simple', 'simple-variable-in-root-files']"
Usability,"Hi, thanks for this proposal. PGO has been investigated in detail by some HEP experiments, e.g. CMS https://indico.cern.ch/event/1106990/contributions/4991214/ . There was no symbol coming from ROOT which was really sticking out.; At the moment don' see clearly how a general purpose framework such as ROOT could benefit from PGO, given the variety of workflows that use ROOT - from HLT to Reco, to Simulation and analysis - and all in different experiments, with very different software stacks. Do you have something in particular in mind? Can you invest some time in the topic to prove your point? It would be interesting for us to comment on concrete measurements.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/15778#issuecomment-2154277257:254,clear,clearly,254,https://root.cern,https://github.com/root-project/root/issues/15778#issuecomment-2154277257,2,['clear'],['clearly']
Usability,"Hi, the patch will be applied in a matter of days. Possibly even on Monday because it is a simple change.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8474#issuecomment-864414030:91,simpl,simple,91,https://root.cern,https://github.com/root-project/root/issues/8474#issuecomment-864414030,2,['simpl'],['simple']
Usability,"Hi,. 1) Jobs at BNL fail regardless of the source file.; Backs up the gethostname theory. 2) I cannot reproduce with a simple C program containing a TFile::Open,; built after setting up the same release; g++ $(root-config --cflags --libs) -o main main.C; and running after the same setup.; Contradicts (1). I have not tried to build the binary that fails, so cannot really say my; small C program is built in the same way. Maybe RD could do that. Or; brutally strip down your code until it either starts working or is a simple; TFile::)open. I am really out of ideas unless the 1,2 contradiction can be removed. Could we build an xroot lib with more debug statements, and pass that with; the job?; I could ask sites about worker node characteristics to find a pattern, but; I`m not sure what to ask about.; IPv6, nscd, dns?. Cheers,; Rod. On Fri, 15 Jan 2021 at 06:55, Axel Naumann <notifications@github.com> wrote:. > @gganis <https://github.com/gganis> @peremato; > <https://github.com/peremato> would you know whether the xrootd libraries; > have their symbols stripped, or who might know?; >; > —; > You are receiving this because you were mentioned.; > Reply to this email directly, view it on GitHub; > <https://github.com/root-project/root/issues/6948#issuecomment-760664510>,; > or unsubscribe; > <https://github.com/notifications/unsubscribe-auth/ABNFVRQWK7YZM6KZ5REVCTLSZ7KGFANCNFSM4U2MLUJA>; > .; >. -- ; Tel. +49 89 289 14152",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6948#issuecomment-760719476:119,simpl,simple,119,https://root.cern,https://github.com/root-project/root/issues/6948#issuecomment-760719476,4,['simpl'],['simple']
Usability,"Hi,. > Hi, assuming that simply producing a single tree to begin with is impossible, I would also recommend to go with a TChain for post-processing. These trees are produced from jobs in the grid, it is not possible to produce a single file.; > ; > > what if we have 3 trees in the brach and we need a branch index whose value is 1 for the first tree 2 for the second and 3 for the third. How would we do that with Define?; > ; > Is it not possible to store these indexes in the trees when they are produced? If not, currently you have three possible solutions that I can think of:. It is possible to do that. However those trees do not have those indexes and in order to add them we would need to rerun hundreds of jobs in the grid. We do need to postprocess these ntuples anyway, so the idea is to slip in a small function to add this index. ; > ; > * calculate the index from the value of `rdfentry_`, knowing how many entries are in each tree and their ordering inside the TChain. It is dangerous and requires adding too many lines of code. > * store some unique identifier in each tree when it's produced (even a timestamp works, and although it's not elegant you don't have to worry about having that same value stored in each event because it will compress almost perfectly, occupying very little extra space on disk). With that unique identifier per tree you can build another tree that serves as a lookup table between id and index. It will have two branches, `id` and `index`, with the first taking the values of the ids of each tree and the second being an index from 0 to nTrees-1. Then you can use `TTree::BuildIndex` and `TChain::AddFriend` to add that lookup table tree as a friend of the original chain and thanks to `BuildIndex` the correct value of `index` will be returned for each event depending on the value of `id` in the original chain. More info at https://root.cern/manual/trees/#indexing-trees. We would have to run again all the jobs in the grid to store a unique ID. Howev",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9030#issuecomment-932494638:25,simpl,simply,25,https://root.cern,https://github.com/root-project/root/issues/9030#issuecomment-932494638,2,['simpl'],['simply']
Usability,"Hi,. I am new to root and trying to wrap my head around some of its features. I thought a good place to start would be to work on this issue. I started by pythonizing `fitTo` and I'd like to send you a pull request. I take it that I should provide some tests for the feature, but I could not find any resources regarding the testing conventions in python for root. If there are any specific guidelines, please let me know, otherwise I'll just send you a pull request and you can take a look if it is really necessary. Cheers",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7217#issuecomment-785392761:391,guid,guidelines,391,https://root.cern,https://github.com/root-project/root/issues/7217#issuecomment-785392761,2,['guid'],['guidelines']
Usability,"Hi,. I started to take a look to this issue: the boundary check is not performed by the `TH1` methods that access a bin, e.g., `TH1C h(""h"","""",10,0,10); h.AddBinContent(12312312); ` and it can lead to undefined behavior (there is a piece of memory spoiled by this action). After reading the methods of TH1S, TH1I, TH1F, TH1D that access a bin content I can say:; * Each histogram class derives from the corresponding TArray class, e.g., TH1F derives from TArrayF; * Internally, the access to the bin is done _a la C_, straight to the element of the array , e.g. `fArray[nbin]` ; * The boundary check is already implemented for the methods `TArray::operator()[]` . A potential solution would be to use `TArray::operator()[]`, which actually check the boundary of the array. Another solution could be a simple `if` to check of the boundary without using the `TArray` features. . It is likely that this methods `SetBin*`, `AddBin*` may be called quite often, and such boundary check could have a great impact in performance. Is there experience of such case? @lmoneta , may I ask for your advice on this issue?. Best,; Alvaro",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14575#issuecomment-1940996892:800,simpl,simple,800,https://root.cern,https://github.com/root-project/root/issues/14575#issuecomment-1940996892,2,['simpl'],['simple']
Usability,"Hi,. On Thursday 2015-09-03 10:56, xantares wrote:. > Forgive me but your objections do not seem rock-solid:; > - '""distutils.sysconfig"" is far from robust as claimed' : afaik it; > works very well from 2.6-2.7, 3.1,3.2, 3.3 to 3.4. sure, on Linux. Did you try all main platforms? (And do add at least p2.5,; as that for sure is still in use.). > - ""package as a whole gets split, which risks that one part gets updated; > whereas another doesn't"": how would that be possible for users ? a; > decent package manager should handle that well. A package manager can install wherever it wants and can make its own; adjustment (simply copy over the two files, or put symlinks); this will; affect users building from source. I don't worry about package managers,; only about the latter users. As to 'how': the common case mixing; installations (e.g. from packagers and building from source), versions; (different pythons), system upgrades (that wipe out site-packages), or; simply a user doing 'rm -rf' for only half the installation. Users are; very, very inventive in creating trouble. :P None of that if all of ROOT; is kept in a single directory. So the only upside there seems to be is removing of this teeny-weeny; inconvenience of having to setup PYTHONPATH if you install in /usr/local.; But A) most from-source builders don't do that, they use bin/thisroot.sh,; which sets up PYTHONPATH; and B) installing in /usr/local is not; recommended to begin with, b/c of the same problem with remnants. Debugging a setup problem is very time consuming and frustrating: the; error messages are spurious and only occur on the user's machine to which; I have no access. In sum, I see no upside to speak of, but do see enormous downsides. And; if you really believe otherwise: sign that blood contract. Best regards,. ## Wim. WLavrijsen@lbl.gov -- +1 (510) 486 6411 -- www.lavrijsen.net",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/73#issuecomment-137538771:623,simpl,simply,623,https://root.cern,https://github.com/root-project/root/pull/73#issuecomment-137538771,2,['simpl'],['simply']
Usability,"Hi,. When compiling and attempting to run the Celeritas example (see https://github.com/celeritas-project/celeritas) with a build of ROOT v6.26/00 with gcc 11 we get the following errors:; ```; Error in <TCling::RegisterModule>: Dictionary trigger function for libCore not found; Error in <TCling::RegisterModule>: Dictionary trigger function for libMathCore not found; Error in <TCling::RegisterModule>: Dictionary trigger function for libThread not found; Error in <TCling::RegisterModule>: Dictionary trigger function for libRIO not found; Error in <TCling::RegisterModule>: Dictionary trigger function for libNet not found; Error in <TCling::RegisterModule>: Dictionary trigger function for libTree not found; Error in <TCling::RegisterModule>: Dictionary trigger function for libceleritas_root not found; Error in <TClass::LoadClassInfo>: no interpreter information for class celeritas::ImportData is available even though it has a TClass initialization routine.; ```; A simple use of root works fine (eg. simple.root is created just fine). However loading the celeritas library:; ```; root[0] .L path_to_celeritas_build/libceleritas_root.so; ```; leads to a weird error about not find `path_to_root_installation/*bin*/libNet_rdict.pcm`. We trace is down to the line in `TCling.cxx`:; ```; std::string dyLibName = cling::DynamicLibraryManager::getSymbolLocation(triggerFunc);; ```; for `libNet` returning the name of executable (`blahblah/bin/root.exe`). However loading the slightly simpler library `libceleritas.root` (which is used by `libceleritas_root.so`), works just fine.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10162:976,simpl,simple,976,https://root.cern,https://github.com/root-project/root/issues/10162,3,['simpl'],"['simple', 'simpler']"
Usability,"Hi,. very last time and then I give up ... > B) of course, users shouldn't install anything to /usr[/local] without; > using package management. But they do. > but it will simplify packaging too by not having to install an ugly; > script somewhere that sets PYTHONPATH. Ugly scripts that are seldom seen. I care more about humans than computers.; Additionally, the removal scripts can be simpler, as the package manager; knows where it put what, rather than the package stuffing portions in; different places, so I'd say its a wash. > As for the downsides, I think this solution is just simpler (not; > mentioning cleaner), maybe this will get you less bug reports. Straight of the bat, the whole nightly build system would roll over and; all developers that use cmake (not me, luckily) would have to change their; workflow. Why? B/c most of these setups are 1 python installation and; multiple ROOT installations, or different users for both so no access; rights to site packages. Add that packagers for LCG experiments now need; to know that ROOT puts stuff in $ROOTSYS and in $PYTHONHOME and fix what; they pick up from where. For that matter, I think there will be far more; 'ugly scripts' being created here to work around the mess this would add,; that I dare claim that even that argument of yours holds no water. Like I said, this is my last word on it. It's not worth my time if you; refuse to look beyond that one use case. Best regards,. ## Wim. WLavrijsen@lbl.gov -- +1 (510) 486 6411 -- www.lavrijsen.net",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/73#issuecomment-139309263:172,simpl,simplify,172,https://root.cern,https://github.com/root-project/root/pull/73#issuecomment-139309263,3,['simpl'],"['simpler', 'simplify']"
Usability,"Hi,; I would have thought the relevant hostname is that of the xroot door,; rather than the WN hostname. This one has a port and maybe the weird IPv6; form.; // Convert the address as appropriate. Note that we do accept RFC5156; deprecated; // IPV4 mapped IPV6 addresses(i.e. [::a.b.c.d]. This is historical. but the BNL ones look like [ffff:a.b.c.d]. That ok too?. Cheers,; Rod. On Thu, 14 Jan 2021 at 19:22, rdschaffer <notifications@github.com> wrote:. > Is there a way to see the variable values in the core with gdb? I don't; > think that we can understand this without seeing them. A simple gethostname; > works properly, as expected.; >; > —; > You are receiving this because you were mentioned.; > Reply to this email directly, view it on GitHub; > <https://github.com/root-project/root/issues/6948#issuecomment-760382601>,; > or unsubscribe; > <https://github.com/notifications/unsubscribe-auth/ABNFVRUCMYTVAMVVQ5YIULLSZ4Y67ANCNFSM4U2MLUJA>; > .; >. -- ; Tel. +49 89 289 14152",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6948#issuecomment-760406417:590,simpl,simple,590,https://root.cern,https://github.com/root-project/root/issues/6948#issuecomment-760406417,2,['simpl'],['simple']
Usability,"Hi,; Submit a job with compiled C to just open the Marseille file (code at; bottom). https://bigpanda.cern.ch/job?pandaid=4923453571. It has the same release, and it works! I am not sure if anything else is; different, but it points at the specific code rather than a pure TFile open; problem. Cheers,; Rod. $ cat main.C; #include <iostream>; #include <string>; #include ""TFile.h"". using namespace std;. int main(); {; TFile* davixFile = TFile::Open(""root://; eosatlas.cern.ch:1094//eos/atlas/atlasdatadisk/rucio/mc16_13TeV/25/31/DAOD_HIGG2D1.23315648._000001.pool.root.1; "",""READ"");; cout << ""coucou 5"" << endl;; davixFile->ls();; davixFile->Close();. return 0;; }. On Wed, 16 Dec 2020 at 15:50, rdschaffer <notifications@github.com> wrote:. > Marseilles job logs are in:; >; > marseilles; > <https://bigpanda.cern.ch/filebrowser/?guid=00354dec-89f9-4687-bc9e-d0151ddff358&lfn=panda.um.group.phys-higgs.user.schaffer.mc16_13TeV.500995.H4lMinitree_nominal.0.16e..201216_01.log.23578674.000051.log.tgz&site=IN2P3-CPPM/SCORE&scope=panda&fileid=23156311480>; >; > and Cern jobs logs are in:; > Cern; > <https://bigpanda.cern.ch/filebrowser/?guid=52428b18-b810-4194-be8a-fb11e92bc4f8&lfn=panda.um.group.phys-higgs.user.schaffer.mc16_13TeV.500995.H4lMinitree_nominal.0.16e..201216_01.log.23578674.000050.log.tgz&site=CERN-T0/SCORE&scope=panda&fileid=23156311459>; >; > —; > You are receiving this because you were mentioned.; > Reply to this email directly, view it on GitHub; > <https://github.com/root-project/root/issues/6948#issuecomment-746412091>,; > or unsubscribe; > <https://github.com/notifications/unsubscribe-auth/ABNFVRTBK3POEBIWCBST673SVDCJNANCNFSM4U2MLUJA>; > .; >. -- ; Tel. +49 89 289 14152",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6948#issuecomment-746431625:832,guid,guid,832,https://root.cern,https://github.com/root-project/root/issues/6948#issuecomment-746431625,4,['guid'],['guid']
Usability,"Hi,; assuming that simply producing a single tree to begin with is impossible, I would also recommend to go with a TChain for post-processing. > what if we have 3 trees in the brach and we need a branch index whose value is 1 for the first tree 2 for the second and 3 for the third. How would we do that with Define?. Is it not possible to store these indexes in the trees when they are produced? If not, currently you have three possible solutions that I can think of:. - calculate the index from the value of `rdfentry_`, knowing how many entries are in each tree and their ordering inside the TChain; - store some unique identifier in each tree when it's produced (even a timestamp works, and although it's not elegant you don't have to worry about having that same value stored in each event because it will compress almost perfectly, occupying very little extra space on disk). With that unique identifier per tree you can build another tree that serves as a lookup table between id and index. It will have two branches, `id` and `index`, with the first taking the values of the ids of each tree and the second being an index from 0 to nTrees-1. Then you can use `TTree::BuildIndex` and `TChain::AddFriend` to add that lookup table tree as a friend of the original chain and thanks to `BuildIndex` the correct value of `index` will be returned for each event depending on the value of `id` in the original chain. More info at https://root.cern/manual/trees/#indexing-trees; - do a pass on each input tree to calculate whatever other quantities you need to calculate (let's call these trees `aux1`, `aux2` etc.), then make a TChain out of the original trees, another TChain out of the `aux` trees, and then add the second chain as a friend of the first (effectively creating a single large ""virtual"" TTree with everything in it). The simplest solution: with the upcoming `DefinePerSample` method you can solve this more easily, but the feature will only be merged in ROOT master in a few days ([PR",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9030#issuecomment-929346153:19,simpl,simply,19,https://root.cern,https://github.com/root-project/root/issues/9030#issuecomment-929346153,2,['simpl'],['simply']
Usability,"Hi,; here are flamegraphs of the following simple benchmark with current ROOT master (`test_O2.svg`) and then with this PR (`test_O0.svg`). Runtime goes from 9s to 3s and the part of the stack containing `cling::IncrementalParser::Compile` up to `cling::Intepreter::ExecuteTransaction` disappears/seems to weight much less. ```c++; #include ""ROOT/TDataFrame.hxx""; #include <iostream>; using namespace ROOT::Experimental;. int main() {; // build a TDF with 1 event and 1 column ""x"" that is always equal 42; TDataFrame dd(1);; auto d = dd.Define(""x"", []() { return 42; });. // book nHistos histograms; // all with the same cut and filled with the same variable in this simple example; std::vector<TDF::TResultProxy<TH1D>> histos;; const auto nHistos = 1000u;; histos.reserve(nHistos);; for (auto i = 0u; i < nHistos; ++i); histos.emplace_back(d.Histo1D(""x""));. // run event loop, print something to be sure everything is ok; // jitting of the 1000 booked histograms happens here; std::cout << histos.front()->GetMean() << std::endl;; return 0;; }; ```; **Test -O0**; ![test_o0](https://user-images.githubusercontent.com/10999034/31814329-9c9c97a2-b589-11e7-9eaf-596d06dff458.png). **Test -O2**; ![test_o2](https://user-images.githubusercontent.com/10999034/31814330-9cb44a46-b589-11e7-9df7-c9f04ebeb36a.png)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1211#issuecomment-338155276:43,simpl,simple,43,https://root.cern,https://github.com/root-project/root/pull/1211#issuecomment-338155276,4,['simpl'],['simple']
Usability,"Hi,; thank you very much, that you spend time on this!. I do not understand some things:; * In the Doc the packages that do need internet access are usually named - this does not seem to be correct; * Furthermore, all packages that need internet access should be turned off in installation by default - they are not; * I think it is a difference if a system is cut off from the internet by a firewall, or if a system has no network (maybe that's why cmake does not detect it properly?); * I do not understand why I have to make -Dsuchalognoption to make a simple basic installation. If you can't put out that packages from the default installation and if cmake can't detect that there is not valid connection and if you do not want to make an extra option please: write a chapter in the docs what you have to do in case you want to compile on a local system. Thanks; Georg",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8292#issuecomment-864610580:556,simpl,simple,556,https://root.cern,https://github.com/root-project/root/issues/8292#issuecomment-864610580,2,['simpl'],['simple']
Usability,"Hi,; yes following the linked example of the VavilovAccuratePdf is fine. It is true you have made a class, but only with static functions. Like this is not needed to be a class, can be simple function in a namespace. The advantage of having as a class is that one can cache some information as class data members. . Then test of the Vavilov is also a good example, however it is better to use the google test framework, resulting in a much simpler test to write. You need just to use the macro defined by test to compare the function value with the reference one. ; You have many examples in ROOT for gtest, for example in `hist/hist/test` directory like `test_TH1.cxx` or `test_TFormula.cxx`, `test_TF123_Moments.cxx`. If you need any help for the test, please let me know",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11049#issuecomment-1202195997:185,simpl,simple,185,https://root.cern,https://github.com/root-project/root/pull/11049#issuecomment-1202195997,4,['simpl'],"['simple', 'simpler']"
Usability,"Hii @guitargeek ! ; cmake output shows these errors while generating cache ; ```; `system runtime library file does not exist:; 2> [CMake] 'MSVC_REDIST_DIR-NOTFOUND/x64/Microsoft.VC142.CRT/msvcp140.dll'`; ```; ```; system runtime library file does not exist:; 2> [CMake] 'MSVC_REDIST_DIR-NOTFOUND/x64/Microsoft.VC142.CRT/vcruntime140.dll'; ```; ```; system runtime library file does not exist:; 2> [CMake] 'MSVC_REDIST_DIR-NOTFOUND/x64/Microsoft.VC142.CRT/concrt140.dll'; ```; and while building ; `error : 'LZMA/src/LZMA/lib/liblzma.lib', needed by 'bin/Core.dll'` . Sadly I don't have any other system apart from this one, but I will try to reach my university's Linux system once my exams get over (which ends in Feb 3rd week ) and hopefully by that time there will be relaxation in covid guidelines . Until then I guess I will try to build this in my windows. ; Thanks for replying to my queries.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8777#issuecomment-1029050145:792,guid,guidelines,792,https://root.cern,https://github.com/root-project/root/issues/8777#issuecomment-1029050145,2,['guid'],['guidelines']
Usability,"Hm, I think it's not quite clear that we want to return a pair of ID and `RColumnRange`, especially given that the column range already contains the ID. Can we have only the `RColumnRange` as a value type?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16022#issuecomment-2227805634:27,clear,clear,27,https://root.cern,https://github.com/root-project/root/pull/16022#issuecomment-2227805634,2,['clear'],['clear']
Usability,"Hmmh, but then I'd need to stream path information with every REveText object, now only the font name is streamed. It is indeed a reasonable thing to check if the font files exist before object's json is sent over to the client --- but creating a font during the streaming traversal would be pushing it a bit. Is it possible to register custom prefixes and callbacks from REveManager (via RWebWindow) so they can be handled when requests come in? Like: http://server/sdf-fonts/. I went through the code a bit (but clearly do not have the full picture) ... one way would be to add THttpServer::fActiveLocations, where instead of replacement string one provides a lambda [](TString& prefix, TString& reminder, THttpRequest& req, THttpServer &srv) so one can then do appropriate lookup in the callback, potentially generating the font, and then calling srv->SendFile() (or sending back the default font, if the desired one can not be found/generated). I think this functionality could be useful for other cases in REve, where semi-static data needs to be provided. The font-generation code in REveText invokes TGL generator through the interpreter now, via gROOT->ProcessLine(), to avoid dependency of REve on RGL. Is this OK to do from a request handler thread or should cross-thread request to the main thread be made (and request told to try again in N seconds)?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15812#issuecomment-2176441216:514,clear,clearly,514,https://root.cern,https://github.com/root-project/root/pull/15812#issuecomment-2176441216,2,['clear'],['clearly']
Usability,"Hmmm... From what I understood we can just run a simple fit twice and check that the result is the same. Or maybe even add another test for the evaluation of the objective function, as the reduction is done sequentially and should not create any problem.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2039#issuecomment-390438329:49,simpl,simple,49,https://root.cern,https://github.com/root-project/root/pull/2039#issuecomment-390438329,2,['simpl'],['simple']
Usability,"Humm .. the files are ""Closed"" but not deleted .. the comment relevant comment from `TROOT.cxx:1086` is:; ```; // Now were done, clear the list but do not delete the objects as; // they have been moved to the list of closed objects and must be; // deleted from there in order to avoid a double delete from a; // use objects (on the interpreter stack).; ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8767#issuecomment-890403157:129,clear,clear,129,https://root.cern,https://github.com/root-project/root/issues/8767#issuecomment-890403157,2,['clear'],['clear']
Usability,"Humm ... clearly that code need to be updated as it indeed ""assume"" that having a Merge function implies inheritance from TObject.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6016#issuecomment-656306997:9,clear,clearly,9,https://root.cern,https://github.com/root-project/root/pull/6016#issuecomment-656306997,2,['clear'],['clearly']
Usability,I Close the PR to recreate a clear one.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1364#issuecomment-347296366:29,clear,clear,29,https://root.cern,https://github.com/root-project/root/pull/1364#issuecomment-347296366,2,['clear'],['clear']
Usability,"I actually remember trying `Evaluate` but it crashed. Didn't look into too many details as to why; it does have a couple of fewer ""protection pieces"" (such as the mutex lock) than does `Calc()`, so that may be the reason. But even then, I gave up on all that when I realized that Python readily outperforms. I mean, talk about optimization, even for your integer case and compare these two macro's:. ```; int noleak() {; int result = 0;; for (int i = 0; i < 1000000; ++i) {; result += (int)TPython::Eval(""1+1"");; }; return result;; }; ```; and; ```; int leak() {; int result = 0;; for (int i = 0; i < 10000; ++i) {; result += (int)gInterpreter->Calc(""1+1"");; }; return result;; }; ```; Please note the constant: the `TPython::Eval()` is called _100x more_ than `TInterpreter::Calc()` and it is _still 4x faster_ on my box. So, my conclusion is that if you are in Cling and need to evaluate a run-time constructed expression represented in string-form, then the optimizily thing to do, is to call into Python ... (and if in a loop, then even if Python uses cppyy in turn, which uses Cling again, it will still outperform). And, of course, bonus points for not leaking ... There is one case where `cppyy` still fails: if the `operator+` in the expression above is a global `friend` (with the operands instances of some class), as so far, I've been unable to locate that method. So, I do still care, but my main problem is the leak on failed lookups, as those are very common. And I don't believe it is just the allocator, which as you tell it would re-use the memory, but I'll see first whether I can construct a pure Cling-only reproducer then. Aside, if/when the lookup helper is inverted (i.e. being able to tell what some _is_ rather than what it _isn't_), many of the failed lookups will simply go away.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7201#issuecomment-806058368:1791,simpl,simply,1791,https://root.cern,https://github.com/root-project/root/issues/7201#issuecomment-806058368,2,['simpl'],['simply']
Usability,"I add commit to fix compiler warning and simplify a bit code.; @couet, can I merge it?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12349#issuecomment-1479066603:41,simpl,simplify,41,https://root.cern,https://github.com/root-project/root/pull/12349#issuecomment-1479066603,2,['simpl'],['simplify']
Usability,"I added a very famous concept of Physics as a tutorial. My program graphs the time measured by a stationary observer relative to an observer traveling at a percentage of the speed of light. . I have explained the entire phenomena and added short comments to my code to explain it. . It is quite a simple program, but I believe it can be helpful for someone to learn how to plot functions and physical effects. . I put a lot of effort into this, so please consider it :).",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7015:297,simpl,simple,297,https://root.cern,https://github.com/root-project/root/pull/7015,2,"['learn', 'simpl']","['learn', 'simple']"
Usability,"I agree that it is an unfortunate circumstance to have the test not passing. However, I still urge you to consider the effect on debugability removing strict tests will have. I have wasted a lot of time trying to track down a subtle bug due to loose tests which left me unable to determine where the bug came from. Conversely, setting tests strictly and tracing discrepancies, I found a different bug in the Kahan sum: #11940. Unit tests especially should be as strict as possible. In absence of unit tests (which unfortunately is the case for the parts of RooFit I worked on), strict ""integration"" tests like these are the closest I could get. Note also that it was simply part of my original assignment: to ensure users can trust the new parallelized methods, I built them to be bit-wise exactly equal to the old methods. So, I know from experience how tedious it is to trace down these bit-wise differences to their actual concrete source, but also think that because we are dealing with scientific software, precision, robustness, reliability and interpretability (of components and hence the whole) are important. Of course, performance is an important factor too, but it's just one of the aspects. We want the end-results of experiments to be accurate and explainable, right? I personally at least don't like when I have to sell a ""because of floating point errors"", because I've been bitten by them a few times now. Now, I'm also well aware that the project only has a given amount of resources and I myself am currently more or less out of resources (I can spend only my free time), so my vote probably doesn't count strongly :) If I could be of more practical help in this, I would definitely be happy to, but I also don't have a non-x86 machine, so it's not feasible for me to do much right now. So, feel free to make a call on this as you all best see fit!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12389#issuecomment-1538758017:667,simpl,simply,667,https://root.cern,https://github.com/root-project/root/pull/12389#issuecomment-1538758017,2,['simpl'],['simply']
Usability,I agree that it would be best for users to have all functions in one place. Menu access to that place should be good and clear though.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7440#issuecomment-801758247:121,clear,clear,121,https://root.cern,https://github.com/root-project/root/issues/7440#issuecomment-801758247,2,['clear'],['clear']
Usability,"I agree that the interface is somewhat dangerous but the docs clearly mention its limitations. However, dangerous or not, this is currently broken and should be fixed.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14135#issuecomment-1830160591:62,clear,clearly,62,https://root.cern,https://github.com/root-project/root/pull/14135#issuecomment-1830160591,2,['clear'],['clearly']
Usability,"I agree that there is a problem here. That might involve the `DeclCollector` or the `DeclUnloader` or some other parts of ROOT. However, IMHO https://github.com/root-project/root/issues/13815#issuecomment-1759250811 clearly shows that the underlying problem is much bigger and older than just the failing test with LLVM 16. So I'd be very much interested in a pragmatic solution to resolve this last blocker for the upgrade. P.S.: One idea I had was to split the test into two parts, ie one ""bad"" part that tests the behavior with an incomplete class and one ""good"" part that loads `inst2lib`. However I quickly got stuck because just removing `o->Print();` on the first loaded object leads to many errors of the form `Error parsing payload code for class Inner` that I can't make sense of...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13815#issuecomment-1768325139:216,clear,clearly,216,https://root.cern,https://github.com/root-project/root/issues/13815#issuecomment-1768325139,2,['clear'],['clearly']
Usability,I agree we should wait for a more robust solution for cross-compilation of the whole project before removing this simple test. I will close this PR and if in the future we decide what to do we can resume from here 👍,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15930#issuecomment-2228672121:114,simpl,simple,114,https://root.cern,https://github.com/root-project/root/pull/15930#issuecomment-2228672121,4,"['resume', 'simpl']","['resume', 'simple']"
Usability,"I agree with @couet , the better alternative would be to simply remove the option from cmake and always bundle libafterimage",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14395#issuecomment-1902123987:57,simpl,simply,57,https://root.cern,https://github.com/root-project/root/pull/14395#issuecomment-1902123987,2,['simpl'],['simply']
Usability,"I agree with @stwunsch , `{ 1 , 2 }` is simpler and it is actually all you want to see in this case.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2201#issuecomment-398373451:40,simpl,simpler,40,https://root.cern,https://github.com/root-project/root/pull/2201#issuecomment-398373451,2,['simpl'],['simpler']
Usability,"I agree with Jonas it should stay ""Legacy"" as mentioned in the ref guide: https://root.cern/doc/v632/classTSpectrum.html",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16351#issuecomment-2323919858:67,guid,guide,67,https://root.cern,https://github.com/root-project/root/pull/16351#issuecomment-2323919858,2,['guid'],['guide']
Usability,"I agree with philippe. The + could be left aside as the default. For what concerns the name of the field I am not sure ""modifier"" is the best name possible. ""StreamerOption"" ? Two simple fields, which can be ""NoStreamer"" and ""NoInputOperator""?; E.g.; ```; ... NoStreamer = ""true"" />; ... NoInputOperator = ""true"" />; ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/864#issuecomment-322819174:180,simpl,simple,180,https://root.cern,https://github.com/root-project/root/pull/864#issuecomment-322819174,2,['simpl'],['simple']
Usability,"I agree, that is the best way to go in theory. In practice, I'm dealing with time constraints that will make this challenging. The timeline for including `ppoll` into libzmq would be a liability, because even though I'm not worried it will not be accepted (it is actually quite a simple addition, especially in the way that [a libzmq maintainer suggests here](https://github.com/zeromq/libzmq/issues/4220)), delaying this PR to wait for that one will probably result in extra merging efforts for the later RooFit PRs that depend on this one. In any case, if this is the way we must go (and I can totally understand that you would want it this way), I will do my best to split up the other PRs as much as possible, so that those can be merged independently asap and merging conflicts will hopefully be minimized.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8385#issuecomment-870483338:280,simpl,simple,280,https://root.cern,https://github.com/root-project/root/pull/8385#issuecomment-870483338,2,['simpl'],['simple']
Usability,"I already told Axel I was ""playing"" with clang-tidy. Here are some first results, basically low-hanging fruits only. I also included some of my own TMVA patches (more progress bars / unordered_map) and code modernization for TMVA. Biggest improvement is probably the missing TString move assignment operator, that makes sorting a vector<TString> much much faster if the strings are too long for short string optimization. Most of these patches can be applied in any order, they do not depend on each other. We can discuss the large modernize-loops commit. I didn't have enough time to go through the loop variable names. The autogenerated names are not always the best (especially if the name ""i"" is generated). Nevertheless I wanted to push all these changes before SB52 :-)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1585:167,progress bar,progress bars,167,https://root.cern,https://github.com/root-project/root/pull/1585,1,['progress bar'],['progress bars']
Usability,"I also have a general comment, . https://github.com/root-project/root/blob/5d2c835d1c707dbbb9d7f1a82425c0567d5527dd/tree/ntuple/v7/doc/specifications.md?plain=1#L341-L342. it's not yet clear what are the expectation around these strings, my hunch is at write-time they come from reflection, and at read-time ROOT's internal compiler will be used to restore the field to a known (maybe user-defined) C++ type. However, in principle all the logical layout of data and types are encoded without these strings, so my questions are:. 1. for non-ROOT reader, can these be safely ignored (e.g. instead of getting back a named data struct, you get an anonymous struct by ignoring the type name); 2. for non-ROOT writer, if these are left empty, can ROOT figure out based on primitive types and compositions?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13779#issuecomment-1806758875:185,clear,clear,185,https://root.cern,https://github.com/root-project/root/pull/13779#issuecomment-1806758875,2,['clear'],['clear']
Usability,I also think a test would be good. @vgvassilev in which subdirectory would you put the simple macro which was crashing in https://github.com/root-project/roottest/tree/master/cling ?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15368#issuecomment-2083610710:87,simpl,simple,87,https://root.cern,https://github.com/root-project/root/pull/15368#issuecomment-2083610710,2,['simpl'],['simple']
Usability,"I am a GSoC student working on introducing Recurrent Neural Networks in TMVA. This is the rectified commits using suggestions from #693 . It introduces basic `RNNLayer`, `RecurrentNet` with tests for forward pass. It does not require immediate merge and I'll keep adding commits to it according to feedbacks.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/778:298,feedback,feedbacks,298,https://root.cern,https://github.com/root-project/root/pull/778,1,['feedback'],['feedbacks']
Usability,"I am able to reproduce the failure with a simple standalone reproducer (2 threads one loading and unloading a library, the other interogating `TClassTable`). I will prepare a PR with the fine grained locking (or whatever is needed to make the crash go away :) )",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11263#issuecomment-1483286941:42,simpl,simple,42,https://root.cern,https://github.com/root-project/root/pull/11263#issuecomment-1483286941,2,['simpl'],['simple']
Usability,"I am always wary about dropping support for a feature completely without a deprecation notice, even if that feature was buggy and incomplete. This might be one occasion where we simply can't do otherwise",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7669#issuecomment-1926883056:178,simpl,simply,178,https://root.cern,https://github.com/root-project/root/issues/7669#issuecomment-1926883056,2,['simpl'],['simply']
Usability,I am checking what's going on. I might have simply screwed up the backport.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13808#issuecomment-1750234087:44,simpl,simply,44,https://root.cern,https://github.com/root-project/root/pull/13808#issuecomment-1750234087,2,['simpl'],['simply']
Usability,"I am looking for a hotfix for the upcoming llvm release. The patch would be in the [area](https://github.com/llvm-mirror/llvm/blob/master/lib/Support/DynamicLibrary.cpp#L76-L92):; * I plan to remove the NDEBUG assert; * Make the `std::vector<void*>` a `std::vector<llvm::PointerIntPair<void*, 1, bool>>`; * Add a default flag to `addPermanentLibrary` saying if it was opened with RTLD_GLOBAL; * I will change the search order to search for first the one that are not marked RTLD_GLOBAL. A real solution I've discussed with Lang privately is that we should figure out a way how to pass the dlopened handle to the cling interpreter (before any parsing happens) and have a call to dlsym before calling the DynamicLibrary [here](https://github.com/root-project/cling/blob/master/lib/Interpreter/IncrementalJIT.cpp#L320). This would only happen after the next release of LLVM. I appreciate your proposed solutions but I do not really have a lot of bandwidth nowadays to investigate why they do not work for us. You will probably see what's going wrong if you build this PR locally. One of the issues is that it is not clear to me is what exactly is your use case and this is why there are misunderstandings. I feel fairly strongly running cling (and ROOT) with a patch-free LLVM and clang. I would appreciate if we can coordinate next time such breaking changes before asking for a llvm review and land patches in these particularly sensitive areas.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/744#issuecomment-313786623:1113,clear,clear,1113,https://root.cern,https://github.com/root-project/root/pull/744#issuecomment-313786623,1,['clear'],['clear']
Usability,"I am not sure if it is a real bug or a known issue but the following macro does not fill the histogram `hpx`:; ```; void ntuple_example() {; auto hpx = new TH1F(""hpx"", ""hpx"", 100, -1., 1.);; auto f = new TFile(""hsimple.root"");; auto tree = (TTree*)f->Get(""ntuple"");; tree->Draw(""px >> hpx"","""",""goff"");; hpx->Draw();; }; ```; To make it work it is enough to swap the histogram creation line and the TFile creation line.; So the workaround is simple but that might be confusing if people first create the histogram(s) and then attach the file(s) containing the tree(s): the histogram(s) will be empty. I see that on Mac. I see this issue until 6:20 at least (I was not able to install older versions)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11440:441,simpl,simple,441,https://root.cern,https://github.com/root-project/root/issues/11440,1,['simpl'],['simple']
Usability,"I am not sure of the value of translating the tutorial. It's not well written and it's not clear to me the information useful for the end users which is carried by it, especially since we already have threadsh1 already.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1531#issuecomment-359070985:91,clear,clear,91,https://root.cern,https://github.com/root-project/root/pull/1531#issuecomment-359070985,2,['clear'],['clear']
Usability,I am now looking at #8947. I am modifying the `Makefile` to left a clean source directory after build. `makeinput.sh` should be modified only temporarily by developers to make only part of the doc in order to speed the build when working on a specific part of the reference guide. This script is not only a static list. At the end is added the pieces of doc build by `xtract_docstrings.py`; and `print_roofit_pyz_doctrings.py`. But it is true that if one modifies (even temporarily) `makeinput.sh` then it will appears in `git status`. I am not should how a `cmake` approach will fix that.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8950#issuecomment-934492893:274,guid,guide,274,https://root.cern,https://github.com/root-project/root/issues/8950#issuecomment-934492893,2,['guid'],['guide']
Usability,"I am realizing that making removing the global variables which are meant to hold the values from the argument parser is probably not a good idea after all. It makes the code less clear for me. Is there a way to make a global variable in python read only?. I know we merged already at least one PR of that kind but I fear we might need to revert it... @saisoma123, @jalopezg-r00t, what do you think?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11037#issuecomment-1200360373:179,clear,clear,179,https://root.cern,https://github.com/root-project/root/pull/11037#issuecomment-1200360373,2,['clear'],['clear']
Usability,"I am refactoring the old code of ROOT I/O for compression. Some part of the code are up to 30 years old and from my experience that the C style code that is used is prone to errors for developers that are not familiar with the code. Since one of the goals of ROOT is to be maintainable, I think that this can be very helpful.; Nonetheless, even the simplest change has side effects across the code base so I would like to reach a consensus regarding how changes should be done. The changes that have been done so far are the following:. ### Removed pointers https://github.com/fylux/root/commit/155c405ba6beb21075f436a0380d1cb8378213c3; Most of the compression functions take pointers for values that should be constant, mainly the source and target size of the compression buffer. Also, the irep now is a reference rather than a pointer. However, I think that it would be better to make the function not void and instead of using irep just return a value. ## TODO; - Decide what type should be given for `tgtsize` and `srcsize`. The most suitable could be const unsigned but perhaps in some section of the code a negative value is used to represent something.; - Instead of using `&irep` for returning information about the compressed size or possible errors better make that the function instead of being void is int so the return value would be `&irep`.; - ZLIB right now does not have separated files but it is embedded inside RZIP what is not desirable. It would be better to make it follow the same structure of LZ4 or LZMA.; - [To be extended]",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4060:349,simpl,simplest,349,https://root.cern,https://github.com/root-project/root/pull/4060,1,['simpl'],['simplest']
Usability,"I am sure these docs could still be much better, feedback is welcome.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7388:49,feedback,feedback,49,https://root.cern,https://github.com/root-project/root/pull/7388,1,['feedback'],['feedback']
Usability,"I am trying to refactor the old code of ROOT I/O for compression but the even the simplest change has side effects across the code base so I would like to reach a consensus regarding how changes should be done. The changes of this PR are based on top of another PR https://github.com/root-project/root/pull/3947 for adding support for ZSTD so for our goal just focus on the following commits. ### Removed pointers and unsigned chars https://github.com/fylux/root/commit/155c405ba6beb21075f436a0380d1cb8378213c3; Most of the compression functions take pointers for values that should be constant, mainly the source and target size of the compression buffer.; Also there is a mess in the compression algorithms since consider the buffers as unsigned chars, and other as chars. The type does not matter since we are only working with bytes but we should use only one to avoid all the casting that we find across the code base. ## TODO; - Decide what type should be given for `tgtsize` and `srcsize`. The most suitable could be unsigned but perhaps in some section of the code a negative value is used to represent something.; - Instead of using `&irep` for returning information about the compressed size or possible errors better make that the function instead of being void is int so the return value would be `&irep`.; - ZLIB right now does not have separated files but it is embedded inside RZIP what is not desirable. It would be better to make it follow the same structure of LZ4 or LZMA.; - What is the current value of maintaining the legacy algorithm (from 1990) of ROOT compression? If it is maintained it would be nice to make it more readable and follow the same structure and naming as the rest of compression algorithm.; - [To be extended]",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4037:82,simpl,simplest,82,https://root.cern,https://github.com/root-project/root/pull/4037,1,['simpl'],['simplest']
Usability,"I am unable to reproduce the working case (with 819b4e321b), so I am missing something (i.e. probably part of the ATLAS software). > If it would help to produce a simpler reproducer workspace, I'm glad to help out by trying to build one. Could you please? :)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10282#issuecomment-1085399125:163,simpl,simpler,163,https://root.cern,https://github.com/root-project/root/issues/10282#issuecomment-1085399125,2,['simpl'],['simpler']
Usability,"I am working with dev3 LCG nigthlies slot. ; Starting from this week, my PyROOT/RooFit scripts with complicated PDFs with multiple components produce segmentation faults for `plotOn` invocation. Unfortunately I can not reproduce the problem with simple PDFs. ; There were no problem with last week nighlies as well as there are no problems with any released verisons of ROOT. - [ ] Checked for duplicates; <!--; Please search in; * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->. Segmentation fault for drawing complicated multicomponent PDFs in PyROOT/RooFit in calling for `plotOn` method.; Problem appears from the start of this week. There were no problem till with last week nightlies ; as well as there are no problems with any released versions of ROOT. . ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->. ### Setup; <!--; 1. ROOT version; 2. Operating system; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->. 1. ROOT version 6.25.01 from dev3 nightlies slot ; 2. lxplus.cern.ch ; 3. LCG nightlies dev3 slot . ### Additional context; <!--; Add any other context about the problem here.; -->. There are no problems with any released ROOT versions, and my tests with dev-3 LCG nightly slot till the mid mid of the previous week were successfull (unfortnuately I'",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8474:246,simpl,simple,246,https://root.cern,https://github.com/root-project/root/issues/8474,2,"['clear', 'simpl']","['clear', 'simple']"
Usability,I apologise to revive only now this item. I was curious to understand why this is a need and if with the newer ROOT 6 releases an equally usable solution can be found.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6535#issuecomment-2016794829:138,usab,usable,138,https://root.cern,https://github.com/root-project/root/issues/6535#issuecomment-2016794829,2,['usab'],['usable']
Usability,I appreciate the build option! Though I'm a little concerned that the name of the build option is not self explanatory enough for everyone. Why not `-Daddress-sanitizer` or so to make it very clear?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5066#issuecomment-592428824:192,clear,clear,192,https://root.cern,https://github.com/root-project/root/pull/5066#issuecomment-592428824,2,['clear'],['clear']
Usability,"I believe the difference between `Filter` (not working) and `Define` (working) is the overload that is picked. For `Filter` it picks (`columns` is an `std::initializer_list< std::string >`):; https://root.cern/doc/master/classROOT_1_1RDF_1_1RInterface.html#a66c60dde810b86a97fc01d1f7310a1b2. whereas for `Define` it picks (`columns` is an `std::vector<std::string>`):; https://root.cern/doc/master/classROOT_1_1RDF_1_1RInterface.html#a4698601205a55ac49279150d56fc904f. If instead of passing a Python list to `Filter` we pass an `std::vector`, it works. A simpler reproducer is then:; ```python; import ROOT; ROOT.gInterpreter.Declare(""""""; void foo (const std::initializer_list< std::string > &columns) {}; """"""); ROOT.foo([""x""]); ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10092#issuecomment-1065158302:555,simpl,simpler,555,https://root.cern,https://github.com/root-project/root/issues/10092#issuecomment-1065158302,2,['simpl'],['simpler']
Usability,"I believe the real issue here is about user experience. Suppose I'm a mac user, I only use safari and don't even have chrome installed. I have been using ROOT for 10+ years, I want to see my plot in a canvas. Now the default canvas is the web canvas, so it will go through the only browser it can find on my machine, safari. That breaks functionality w.r.t. how I was using the canvas before. So, that's something we want to fix, right?. In general, I would imagine that at the very least for the three most commonly used browsers i.e. Chrome, Safari, Firefox (Edge even?) we should be able to provide exactly the same functionality to users. Writing in the documentation that they need to install google chrome on their machine in order to have a properly working canvas is not an option in my opinion. Practically, that would imply that ROOT has a dependency on Chrome and I don't think that's what we want",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14051#issuecomment-1813149328:39,user experience,user experience,39,https://root.cern,https://github.com/root-project/root/issues/14051#issuecomment-1813149328,2,['user experience'],['user experience']
Usability,I boiled down the failures to a simple extension of the issue that I already reported:; https://github.com/vgvassilev/clad/issues/681#issuecomment-1904660655,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14165#issuecomment-1904662806:32,simpl,simple,32,https://root.cern,https://github.com/root-project/root/pull/14165#issuecomment-1904662806,2,['simpl'],['simple']
Usability,"I can reproduce this in our software stack (SHiP/snd@snd) as well, where ROOTSYS etc. are all set for dependencies that need ROOT at build and/or run-time (using ALICE's alibuild). ROOT and its `ROOTConfig.cmake` are found without issues, but the new way to deal with VDT breaks anyone trying to user `ROOTConfig.cmake`. In our case, we use the `builtin_vdt` build option when building ROOT from source. This is a clear regression from 6.28.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14163#issuecomment-1837223379:414,clear,clear,414,https://root.cern,https://github.com/root-project/root/issues/14163#issuecomment-1837223379,2,['clear'],['clear']
Usability,"I can't identify the problem either. But there is a simple workaround: you can just use `TPython::Exec()` and bring the string to the C++ world with an output variable. In the interest of a more stable ROOT, I would suggest to promote this way of doing things and to to deprecate `TPython::Eval()`:. * https://github.com/root-project/root/pull/16175. Would this be a good way forward also for ATLAS?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12182#issuecomment-2270986830:52,simpl,simple,52,https://root.cern,https://github.com/root-project/root/issues/12182#issuecomment-2270986830,2,['simpl'],['simple']
Usability,"I cannot decide, that's up to you @egpbos and @lmoneta given the input by @hahnjo and me here. Please consider this:. IIUC you are interpreting this lack of bitwise equality as a bug. In that case our approach is to fix the failure asap. If ""asap"" isn't happening because reasons then we disable the test, and create a bug report about the test failure, reminding ourselves (you, @egpbos in this case) that the test needs to be fixed and re-enabled. ""Disabling the test"" can as well be a switch from equality to equality-with-range, as long as the GitHub issue is clear which commit needs to be reverted to reprouce the original test failure. How does that sound?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12389#issuecomment-1540010898:564,clear,clear,564,https://root.cern,https://github.com/root-project/root/pull/12389#issuecomment-1540010898,2,['clear'],['clear']
Usability,"I conclude that manually deleting the objects is not ok, even if the list is not the owner of the objects.; Am I missing any good practice here?. (edit: I misread the `nodelete` flag in the `TList::Clear`)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14504#issuecomment-1919321697:198,Clear,Clear,198,https://root.cern,https://github.com/root-project/root/issues/14504#issuecomment-1919321697,1,['Clear'],['Clear']
Usability,"I convert into draft, while simple member name change does not work.; Also increase of class version does not help.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8181#issuecomment-842273434:28,simpl,simple,28,https://root.cern,https://github.com/root-project/root/pull/8181#issuecomment-842273434,2,['simpl'],['simple']
Usability,"I discovered a numerically stable calculation of the invariant mass for a two-body decay. It should be trivial to generalize this to N-body decay. The problem and the solution is documented here:; https://stackoverflow.com/questions/70758079/numerically-stable-calculation-of-invariant-mass-in-particle-physics/70775687#70775687. Briefly, when one computes (1D and two-body decay for simplicity); `m_squared = (sqrt(m1 ** 2 + p1 ** 2) + sqrt(m2 ** 2 + p2 ** 2)) ** 2 - (p1 + p2) ** 2`; one gets catastrophic cancellation from the subtraction, when p_i >> m_i. I found an equivalent formula which is perfectly numerically stable and works accurately even in single precision. ROOT seems to use the equivalent of this naive formula:; https://root.cern/root/html522/src/ROOT__Math__PxPyPzE4D_double_.h.html#D1mppD; The fundamental issue of catastrophic cancellation is partially mitigated by computing this in double precision. This increases the range of values where the problem appears, but the problem is even there in double precision. This is evident from the fact that there is a check for negative values of M2() in the implementation of the method M(). The numerically stable formula is guarantees to never produce a negative value for M2(). I propose to implement the numerically stable calculation in ROOT.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9646:384,simpl,simplicity,384,https://root.cern,https://github.com/root-project/root/issues/9646,1,['simpl'],['simplicity']
Usability,"I do not agree with changing the behaviour from returning `{ 1, 2 }` to `(SomeType&) { 1, 2 }`, which spoils the user experience (imho!).; The use of the `str` output in python is an informal representation of the object which should be most convenient for the user. If you want the type, you have the `repr` method in Python, which currently returns you something like `ROOT::SomeType at address 0x12345`. That behaviour is as well similar to numpy & co.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2201#issuecomment-398324213:113,user experience,user experience,113,https://root.cern,https://github.com/root-project/root/pull/2201#issuecomment-398324213,2,['user experience'],['user experience']
Usability,"I do not get this crash:; ```; % root -l main.cpp ; root [0] ; Processing main.cpp...; Error in <TApplication::TApplication>: only one instance of TApplication allowed; ------------------------------------------------------------------; | Welcome to ROOT 6.27/01 https://root.cern |; | (c) 1995-2022, The ROOT Team; conception: R. Brun, F. Rademakers |; | Built for macosx64 on Nov 15 2022, 10:28:34 |; | From heads/master@v6-25-02-2747-g7a90392f2a |; | With Apple clang version 14.0.0 (clang-1400.0.29.202) |; | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |; ------------------------------------------------------------------. root [0] ; ```; For me, on Mac, it is protected. Seems to me the error is not cryptic at all. It makes it clear that `main()` already exists.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11707#issuecomment-1315410117:754,clear,clear,754,https://root.cern,https://github.com/root-project/root/issues/11707#issuecomment-1315410117,2,['clear'],['clear']
Usability,"I don't need the full information. I needed information to learn about the topic. A good book is not only an information container, but it teaches ideas. . I think that if manual creators know what and how to write, they can look at the existing docs (or skip outdated data from there). . If you don't plan to update the User's guide, there is probably no need to fix that with Push Releases. As I understand, you wrote that rdataframe is missing in the manual, so I won't find out there. Anyway I don't use that.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7284#issuecomment-785934293:59,learn,learn,59,https://root.cern,https://github.com/root-project/root/issues/7284#issuecomment-785934293,4,"['guid', 'learn']","['guide', 'learn']"
Usability,"I don't really understand your question. 😕. [tutorials/eve7/boxset.C](https://github.com/root-project/root/blob/master/tutorials/eve7/boxset.C) doesn't seem to need `nlohmann/json.hpp`, does it?. The nlohmann_json ""library"" is a pure header ""library"". It does not need to be distributed with the ROOT binaries for those binaries to be functional. All the symbols from `nlohmann/json.hpp` are compiled into the ROOT binaries themselves. 🤔. You ""only"" need `nlohmann/json.hpp` when using a ROOT header in your own build that itself publicly uses `nlohmann/json.hpp`. For that you do need that actual header. So I'm still pretty convinced that this is a relatively simple mistake. The machine on which 6.30 was built, probably had nlohmann_json installed on it recently. And people doing the ROOT binary builds didn't notice that their build now picked up nlohmann_json from the system. This does shine light on a deeper issue though. 😦 The ROOT CMake configuration is a bit too autonomous for my liking. 😦 It will too easily turn features on/off based on what it finds. Instead of asking the user explicitly to specify what they want to have on or off. If it was up to me, I'd remove most of the automation in how the build figures out what it should do, and rather introduce a bunch of [CMake presets](https://cmake.org/cmake/help/latest/manual/cmake-presets.7.html) to ease the life of the users a little. For the latter, we're using those pretty happily in this project for instance:; - https://github.com/acts-project/algebra-plugins/; - https://github.com/acts-project/algebra-plugins/blob/main/CMakePresets.json. Yes, ROOT has a lot more externals than we have in that particular project, but the spaghetti code used for figuring out what would come from where, and what would be turned on or off is also not a great solution. 😦",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14188#issuecomment-1844965943:662,simpl,simple,662,https://root.cern,https://github.com/root-project/root/issues/14188#issuecomment-1844965943,2,['simpl'],['simple']
Usability,"I don't think nvcc actually supports C++14 before CUDA 9.0. https://devblogs.nvidia.com/parallelforall/cuda-9-features-revealed. https://devtalk.nvidia.com/default/topic/985604/nvcc-test-cu-std-c-11-xcompiler-quot-std-c-14-quot-/?offset=2. So, I believe the easiest thing to do is simply to check for the CUDA version and require 9.0 or later.; As for the host compiler, if we use `CMAKE_CXX_STANDARD`, CMake should take care of it.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1040#issuecomment-331498473:281,simpl,simply,281,https://root.cern,https://github.com/root-project/root/pull/1040#issuecomment-331498473,2,['simpl'],['simply']
Usability,"I don't think the issue is with `copy_if_different` - I bet you'd see the same behavior if you were to use `copy` instead. My guess is that this is caused by CMake determining that the `DEPENDENCY` is older than the target, thus no need to run the command. What happens if you simply remove the DEPENDENCY, such that `copy_if_different` (which should *not* look at filestamps) is run unconditionally?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9804#issuecomment-1029077291:277,simpl,simply,277,https://root.cern,https://github.com/root-project/root/pull/9804#issuecomment-1029077291,2,['simpl'],['simply']
Usability,"I don't think this is used by anyone, as it is not clear to the users that copy assignment does for RooFit objects. More complicated user codes like for example are CMS combine are still compiling with these changes. If someone was using this functionality, they will get warned with a compiler error now and can find a workaround.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11079#issuecomment-1204165478:51,clear,clear,51,https://root.cern,https://github.com/root-project/root/pull/11079#issuecomment-1204165478,2,['clear'],['clear']
Usability,"I finally learned how to reproduce these kind of warnings with a new version of the LLVM tools. You need to make sure that the relevant ROOT subdirectory is compiled with `set(CMAKE_EXPORT_COMPILE_COMMANDS 1)` (it also helps to disable this for llvm-project to not get spammed by warnings from LLVM). For example, if you want to scan the `math` directory, you can do:; ```diff; diff --git a/interpreter/llvm-project/llvm/CMakeLists.txt b/interpreter/llvm-project/llvm/CMakeLists.txt; index 0b046717ba..b685291490 100644; --- a/interpreter/llvm-project/llvm/CMakeLists.txt; +++ b/interpreter/llvm-project/llvm/CMakeLists.txt; @@ -283,7 +283,7 @@ list(INSERT CMAKE_MODULE_PATH 0. # Generate a CompilationDatabase (compile_commands.json file) for our build,; # for use by clang_complete, YouCompleteMe, etc.; -set(CMAKE_EXPORT_COMPILE_COMMANDS 1); +set(CMAKE_EXPORT_COMPILE_COMMANDS 0). option(LLVM_INSTALL_BINUTILS_SYMLINKS; ""Install symlinks from the binutils tool names to the corresponding LLVM tools."" OFF); diff --git a/math/CMakeLists.txt b/math/CMakeLists.txt; index 543adbf6b1..12f5930901 100644; --- a/math/CMakeLists.txt; +++ b/math/CMakeLists.txt; @@ -4,6 +4,10 @@; # For the licensing terms see $ROOTSYS/LICENSE.; # For the list of contributors see $ROOTSYS/README/CREDITS. +set(CMAKE_EXPORT_COMPILE_COMMANDS 1); +; add_subdirectory(mathcore); if(mathmore); add_subdirectory(mathmore); ```; Then, after building, you go into equivalent subdirectory in the build directory (e.g. `build/math`) and run this:; ```bash; run-clang-tidy -checks='clang-analyzer-*' . -j20; ```. So the warnings are easy to reproduce and we are aware that these exist for all for ROOT in general. Therefore, I'd suggest to close this particular issue so that we can focus on feature development and fixing confirmed bugs. We can't afford separate GitHub issues for all groups of `clang-tidy` warnings in all subdirectories. Thank you very much @ferdymercury for the initiative thought! We learned a lot from this!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7422#issuecomment-2326891590:10,learn,learned,10,https://root.cern,https://github.com/root-project/root/issues/7422#issuecomment-2326891590,4,['learn'],['learned']
Usability,"I found in TH1::Draw(), line 3096. gPad->Clear();. If ""same"" not specified as draw option, pad is cleared.; Mean TPad object will be deleted. Not a nice feature, one always should draw histogram with care.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9869#issuecomment-1036371552:41,Clear,Clear,41,https://root.cern,https://github.com/root-project/root/issues/9869#issuecomment-1036371552,3,"['Clear', 'clear']","['Clear', 'cleared']"
Usability,I further simplified and improved the design of the new MnPrint in commit https://github.com/root-project/root/pull/6705/commits/c804c2e7f129c8fe7ae5b34a188a45bf6847fc17 and updated the previous note about the design.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6705#issuecomment-720092514:10,simpl,simplified,10,https://root.cern,https://github.com/root-project/root/pull/6705#issuecomment-720092514,2,['simpl'],['simplified']
Usability,"I get the crash also with a simple C macro (extracted from your code) executed at the ROOT prompt. Reading the doc it looks like this functionality is meant to be used interactively from the context menu. Which means you need the graphics to be ready on the canvas. Therefore, to make it work in a ROOT script, you will need a few ""Update()"" to make sure the graphics id ready. Here is the working script:. ```; {; auto *c = new TCanvas(""c4"", """", 720, 1024);; c->Divide(1, 2);. auto f = new TF1(""lin"", ""x"", -10, 10);; c->cd(1);; f->Draw();; gPad->Update();. c->cd(2);; gPad->Update();; f->DrawIntegral();; }; ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13708#issuecomment-1733934184:28,simpl,simple,28,https://root.cern,https://github.com/root-project/root/issues/13708#issuecomment-1733934184,2,['simpl'],['simple']
Usability,"I got a similar warning when using `RDataFrame` in Python, presumably due to the same problem:. I'm using ROOT 6.24.02 with gcc10, compiled w/ C++ 17 standard. Here's a reproducer:; ```python; #!/usr/bin/env python. import ROOT. # Let's create a simple dataframe with ten rows and two columns; df = ROOT.RDataFrame(10) \; .Define(""x"", ""(int)rdfentry_"") \; .Define(""y"", ""1.f/(1.f+rdfentry_)""). npy = df.AsNumpy(); ``` . The warnings are:; ```; input_line_49:10:7: warning: ignoring return value of function declared with 'nodiscard' attribute [-Wunused-result]; ((const vector<int>*)obj)->empty();; ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~; input_line_56:10:7: warning: ignoring return value of function declared with 'nodiscard' attribute [-Wunused-result]; ((const vector<float>*)obj)->empty();; ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~; ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8622#issuecomment-889485521:246,simpl,simple,246,https://root.cern,https://github.com/root-project/root/issues/8622#issuecomment-889485521,2,['simpl'],['simple']
Usability,"I guess it's simply that they are not fixed in master, right?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3602#issuecomment-479555711:13,simpl,simply,13,https://root.cern,https://github.com/root-project/root/pull/3602#issuecomment-479555711,2,['simpl'],['simply']
Usability,I guess you need one more check in the function `TProcessID::Clear()` at line 222 of the same file?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5446#issuecomment-618643969:61,Clear,Clear,61,https://root.cern,https://github.com/root-project/root/pull/5446#issuecomment-618643969,1,['Clear'],['Clear']
Usability,"I had a look ant it seems very nice. About the discrepancy between `REntry::Get` and `RNTupleModel::MakeField`, one may argue that `MakeField` might return a raw pointer too as the memory of the field is owned by the model. OTOH, while it's kind of easy to keep track of the lifetime of an `REntry` (I get it, I use it, I drop it), it seems more difficult to keep track of `RNTupleModel` lifetime, which is bound to the lifetime of `RNTupleWriter`.; Using raw pointers from `MakeField` is fine if we assume that the writer of the code only accesses the fields within the scope of `RNTupleWriter` (but the fields are accessible before the writer is created... more confusing). My personal opinion is that the `CreateEntry` way is the best option for the single thread case too:; - I define a model; - create a writer based on the model; - get the *buffer* (`REntry`) to write to (one per thread, for example, even if I have only one thread); - commit the *buffer* to the writer. In this way I own the `REntry`, but it has a layout in memory that is directly understood by the serialization process without the need of extra copies. We can also think of a way of constructing the writer from an *inlined* model, without the need for repeated calls to `MakeField`. Something like:; ```cpp; auto ntuple = RNTupleWriter::Recreate({; Field<std::uint32_t>(""id""),; Field<std::vector<float>>(""vpx""),; Field<std::vector<float>>(""vpy""),; Field<std::vector<float>>(""vpz""); }, ""NTuple"", kNTupleFileName);. auto entry = ntuple->CreateEntry();; // cache the pointer for faster access in single thread,; // but I could use TLS (or a framework equivalent) for multithreading; auto& vpx = *entry->Get<std::vector<float>>(""vpx"");; for(auto& event: all_events) {; vpx.clear();; vpx.push_back(42.);; ntuple->Fill(entry); // I would prefer ntuple->Write(entry) but it's a matter of taste; }; ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8688#issuecomment-883396155:1748,clear,clear,1748,https://root.cern,https://github.com/root-project/root/pull/8688#issuecomment-883396155,2,['clear'],['clear']
Usability,"I had to learn (again) how this worked for bulk RDF, so I took the chance to convert my notes to docs. The PR is better reviewed commit-by-commit, each commit is quite simple. A refresher in case, as it happens to me, the way this API works slips away from your brain the moment you stop thinking about it:; ![image](https://github.com/root-project/root/assets/10999034/96a243a9-6e9b-4209-ba04-9c9f1f4000c3)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13149:9,learn,learn,9,https://root.cern,https://github.com/root-project/root/pull/13149,2,"['learn', 'simpl']","['learn', 'simple']"
Usability,I have modified the following entries in Doxyfile:; ```; GENERATE_QHP = YES ; QCH_FILE = ROOT.qch ; QHP_NAMESPACE = ROOT.Project; QHG_LOCATION = /Users/couet/Qt/6.1.2/macos/bin/qhelpgenerator; ```; I regenerated the hist part of the reference guide on my local machine.; I was expecting the file `ROOT.qch` will appear somewhere . But it does not.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8781#issuecomment-902760247:243,guid,guide,243,https://root.cern,https://github.com/root-project/root/issues/8781#issuecomment-902760247,2,['guid'],['guide']
Usability,"I have more strange effect. I do not compile davix and therefore after opening the file with:; `TFile::Open(""https://cernbox.cern.ch/remote.php/dav/public-files/1Cy1HIf03Ca76Dm/test_ntuples_200123.root"");` ; I getting instance of `TWebFile`. And if enable `gDebug=1`, one clearly sees ~1.5s per each http request. Moreover, when I try to perform `TTree::Draw()` from the `TBrowser` (web and normal one), `TWebFile` submits multirange request, but not able to parse result of it. Producing several errors - it fully crashes, including my console. Seems to be, it is another issue.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13018#issuecomment-1592493876:272,clear,clearly,272,https://root.cern,https://github.com/root-project/root/issues/13018#issuecomment-1592493876,2,['clear'],['clearly']
Usability,I have no idea either yet .. but we should start from my latest simple reproducer.; It is much simpler than the initial example.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9869#issuecomment-1036303797:64,simpl,simple,64,https://root.cern,https://github.com/root-project/root/issues/9869#issuecomment-1036303797,4,['simpl'],"['simple', 'simpler']"
Usability,"I have not completely understood why it crashed but that 's not ""simply"" because of the Drawing option. For instance if you move the `pad` creation and the `pad` Draw just before the `pad->cd() ` then it does not crash.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9869#issuecomment-1036281020:65,simpl,simply,65,https://root.cern,https://github.com/root-project/root/issues/9869#issuecomment-1036281020,2,['simpl'],['simply']
Usability,"I have not yet tried building llvm. Will try later this week. nvc++ has an implementation for std::par which allows seamless execution of both CPUs and NVIDIA GPUs (depending on a compile time flag). This could be a huge win for GPU portability (once other manufactures create the AMD/Intel backends), and allows much simpler user access to GPUs without having to learn CUDA (or hip, dpc++, etc). I was trying to compile some parts of a project with gcc and the bits that use std::par with nvc++, but immediately got some runtime segfaults at startup, so tried to compile the whole thing (including ROOT) with nvc++.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9036#issuecomment-933532217:318,simpl,simpler,318,https://root.cern,https://github.com/root-project/root/issues/9036#issuecomment-933532217,4,"['learn', 'simpl']","['learn', 'simpler']"
Usability,"I have spent some time simplifying the reproducer significantly. This code snippet it enough to reproduce the memory leak:; ```C++; #include ""RooRealVar.h"". #include ""TSystem.h"". void reproducer(); {; ProcInfo_t pinfo;; for(std::size_t i = 0; i < 10000; ++i) {. RooRealVar x(""x"",""x"",0);; RooRealVar y(x);. if(i % 500 == 0) {; gSystem->GetProcInfo(&pinfo);; std::cout << i << "" memory usage "" << pinfo.fMemResident; << "" "" << pinfo.fMemVirtual << std::endl;; }. }; }; ```; For the memory increase to happen, it is important that both `RooRealVars` are defined in the loop. Now that we have a simple reproduced, I will continue to investigate the problem later. This problem with the RooRealVar seems so general that we probably solve a ton of RooFit issues at once if we solve this problem here!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9196#issuecomment-964117041:23,simpl,simplifying,23,https://root.cern,https://github.com/root-project/root/issues/9196#issuecomment-964117041,4,['simpl'],"['simple', 'simplifying']"
Usability,"I have to update the PR, so: undo ping @ Philippe :)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/807#issuecomment-319284833:29,undo,undo,29,https://root.cern,https://github.com/root-project/root/pull/807#issuecomment-319284833,2,['undo'],['undo']
Usability,"I have updated the contents of the CERNBox link from the PR description with more memray graphs, it looks clear that the effect of this PR is to properly remove the artifacts generated during the distributed execution, there is no more TTreeCache leaking leftover after the analysis (see any file ending with `_patch` and compare it with the same file ending with `_master`). Now that the main source of memory usage is gone, I have noticed a much smaller contribute that still seems to make the memory increase in the flamegraphs. And it seems to have something to do with the increased number of files, at least on the surface. Let's take the following two files to compare:; * test_agc_9sample_1file_10task_patch.html; * test_agc_9sample_10file_10task_patch.html. They are running exactly the same script, with all 9 RDF samples. In the first case we have 1 file per sample, in the second case 10 files per sample. The memray flamegraph report a total of 253.5 MB used for the first case and 260.9 MB used for the first case (7.4 MB delta). There are two main parts of the graph: the one deriving from the `clone` of the Dask process, where the actual analysis code is run, and the one deriving from the `_start` function where most of the Python code around the analysis is (things like `import`ing packages or the Dask worker-scheduler communication). The difference between the two graphs in the `clone` part is of 0.6 MB, the difference between the two `_start` parts is 6.7 MB, so I focus on that from now on. This 6.7 MB difference is in turn split between a 0.1 MB difference deriving from `_PyObject_VectorcallTState` and 6.6 MB difference deriving from. Finally, the vast majority of these 6.6 MB comes from:; * The metrics gathered by profiling (i.e. memray itself); * Dask communication protocol. [Screencast from 2024-07-26 10-47-18.webm](https://github.com/user-attachments/assets/3a21ea3e-c130-42af-b50b-bb324b06eaaa). TL;DR: After this patch the leftover memory increase may be attri",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16094#issuecomment-2252273470:106,clear,clear,106,https://root.cern,https://github.com/root-project/root/pull/16094#issuecomment-2252273470,2,['clear'],['clear']
Usability,I have updated the list of 'owners' and would like to see (experimentally) what is the effect of it for assigning PR. Clearly we need to fine tune the list with more fine grain assignments.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/840#issuecomment-324291657:118,Clear,Clearly,118,https://root.cern,https://github.com/root-project/root/pull/840#issuecomment-324291657,1,['Clear'],['Clearly']
Usability,I have updated the root-spi repo for the old (Jenkins) CI to learn about this new module and know that it should be built everywhere.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13571#issuecomment-1705212121:61,learn,learn,61,https://root.cern,https://github.com/root-project/root/pull/13571#issuecomment-1705212121,2,['learn'],['learn']
Usability,"I hope the failing checks are unrelated (at least, I don't understand the relationship). If they're related, I need some help. I wonder, whether all the `new TList` should be moved to an in-class member variable initializer (See [C++ Core Guidelines C.48](https://isocpp.github.io/CppCoreGuidelines/CppCoreGuidelines#Rc-in-class-initializer))?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13840#issuecomment-1757793268:239,Guid,Guidelines,239,https://root.cern,https://github.com/root-project/root/pull/13840#issuecomment-1757793268,1,['Guid'],['Guidelines']
Usability,"I investigated a bit more in depth the problem and it seems like the regex_error gets thrown as soon as I plot a composite pdf or by calling RooFit::Components, in fact given the previous example with expo being a simple exponential. ```; RooExponential expo((""modelBkgTot""+trigCatS).c_str(), (""modelBkgTot""+trigCatS).c_str(), *B_plus_DTFM_M_zero, lambda);; expo.plotOn(frame);; ```. works, but as soon as I do for example:. ```; RooAddPdf modelSigTot((""modelSigTot""+trigCatS).c_str(), (""modelSigTot""+trigCatS).c_str(), RooArgList(modelSig0, modelSig1, modelSig2), RooArgList(frac0gamma, frac1gamma));; modelSigTot.plotOn(frame); ```. I get:. ```; terminate called after throwing an instance of 'std::regex_error'; what(): Unexpected character in brace expression.; Aborted (core dumped); ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7115#issuecomment-770361561:214,simpl,simple,214,https://root.cern,https://github.com/root-project/root/issues/7115#issuecomment-770361561,2,['simpl'],['simple']
Usability,"I just built a fresh version of `master` and `v6-26-00-patches` on `macphsft24` with macOS 14.2; the test posted in https://github.com/root-project/root/issues/7541#issuecomment-1316247162 still fails. It's not clear to me how it could work in one setup in the past, but it's certainly not working out-of-box in the default build configuration.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7541#issuecomment-1862729596:211,clear,clear,211,https://root.cern,https://github.com/root-project/root/issues/7541#issuecomment-1862729596,2,['clear'],['clear']
Usability,"I just wrote simple program and testing it with **g++** and **clang**; To compile with clang, I need ""-pthread"" compiler flags.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2581#issuecomment-418330918:13,simpl,simple,13,https://root.cern,https://github.com/root-project/root/pull/2581#issuecomment-418330918,2,['simpl'],['simple']
Usability,"I keep thinking about the intend of this PR and it mostly tries to solve a usability issue with my IDE. It might be likely that this problem can be solved otherwise, like having all headers added to their targets. This might render this PR unnecessary. So I think for now we can just keep the PR and not merge it. I want to have some more time thinking on it and then I will come back to it!. Thank you everybody for your feedback and comments!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6010#issuecomment-656614652:75,usab,usability,75,https://root.cern,https://github.com/root-project/root/pull/6010#issuecomment-656614652,4,"['feedback', 'usab']","['feedback', 'usability']"
Usability,I know but it was just to avoid more noise from a simple mistake :-),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1239#issuecomment-341526163:50,simpl,simple,50,https://root.cern,https://github.com/root-project/root/pull/1239#issuecomment-341526163,2,['simpl'],['simple']
Usability,"I like this decorator and I'm planning to use it wherever I can. I would have preferred a pattern rather than a prefix, but you made your point clear and I think I can work with what you propose. About the `name` argument, if inside the code you invoke the user function as `fn(klass, name=name)` then it becomes a user choice whether to use it or not.; In any case I'm not convinced that bare class name is very useful, I feel I would be more interested in the fully qualified name... and actually in all places you use `name` is for a class in the global namespace, and the only time you have to deal with a class in a namespace (`std::string`) you have to use `klass.__cpp_name__`, so if you change `name` to be the fully qualified version you can *fix* the only exception. Also, I'm not too much in favor of suggesting people to use *private* data members of a Python class, even if we know that it's always there (for the moment).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9128#issuecomment-957360673:144,clear,clear,144,https://root.cern,https://github.com/root-project/root/pull/9128#issuecomment-957360673,2,['clear'],['clear']
Usability,"I made minimal change concerning thread safety.; As I learned in workshop, one should use ROOT::EnableThreadSafety() to enable proper locking for I/O.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2603#issuecomment-422001206:54,learn,learned,54,https://root.cern,https://github.com/root-project/root/pull/2603#issuecomment-422001206,2,['learn'],['learned']
Usability,I mean e.g. the Reference Guide at https://root.cern/reference/ . as I wrote in the topic.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7421#issuecomment-824044598:26,Guid,Guide,26,https://root.cern,https://github.com/root-project/root/issues/7421#issuecomment-824044598,1,['Guid'],['Guide']
Usability,"I mean once this option goes to the rootling, it will be off by default. It is clear how to activate it when building with CMake. But I did not find any documentation on modifying the cling invocation options for ACLIC compilation of macros.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5296#issuecomment-609468284:79,clear,clear,79,https://root.cern,https://github.com/root-project/root/pull/5296#issuecomment-609468284,2,['clear'],['clear']
Usability,"I misunderstood the intent: you did not remove the previously deprecated option - it is still there, and continues to print a warning. You simply don't pass it anymore in one of the invocations. Sorry for the noise!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4360#issuecomment-529567889:139,simpl,simply,139,https://root.cern,https://github.com/root-project/root/pull/4360#issuecomment-529567889,2,['simpl'],['simply']
Usability,"I narrowed the issue down to a more simple reproducer:; ```C++; void script(); {; RooRealVar x{""x"", """", -10, 10};; x.setRange(""fit"", 0, 10);. RooGenericPdf gauss{""gauss"", ""std::exp(-0.5 * (x*x))"", x};; RooRealVar s{""n_sig"", """", 1000., 0, 10000};; RooAddPdf model{""model"", """", {gauss}, {s}};. std::unique_ptr<RooDataSet> data{model.generate(x)};. // Comment this out and it is fast again; model.setNormRange(""fit"");. std::unique_ptr<RooAbsReal> nll{model.createNLL(*data)};. for(std::size_t i = 0; i < 1000; ++i) {; s.setVal(s.getVal() + (i % 2 ? +1 : -1));; nll->getVal();; }; }; ```. The problem might have something to do with the old test statistics, because if you use the new BatchMode things are going fine. Probably, the dirty flags to the integral are propagated wrongly, causing a numeric integral to be computed for each event.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11637#issuecomment-1297295506:36,simpl,simple,36,https://root.cern,https://github.com/root-project/root/issues/11637#issuecomment-1297295506,2,['simpl'],['simple']
Usability,"I not yet test latest `nlohmann/json.hpp`, but seems to be it is incompatible with previous versions.; The simple solution for now would be ignoring incompatible versions of `nlohmann/json.hpp` and use builtin one.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11130#issuecomment-1208998994:107,simpl,simple,107,https://root.cern,https://github.com/root-project/root/issues/11130#issuecomment-1208998994,2,['simpl'],['simple']
Usability,I noticed that the code you upload contains:; ```; gROOT->Reset();; ```; This call is only valid when used in an unnamed macro. In all other scenario it has the potential of being harmful (undo/reset too many things). Please try again after removing those lines.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13511#issuecomment-1696533640:189,undo,undo,189,https://root.cern,https://github.com/root-project/root/issues/13511#issuecomment-1696533640,2,['undo'],['undo']
Usability,"I now (hopefully) removed all of the rebasing artefacts by undoing and redoing the cherry-picking. Unfortunately it seems that Jenkins still complains, although I can't seem to find the reason - my local version seems to compile... any suggestions?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/792#issuecomment-316703550:59,undo,undoing,59,https://root.cern,https://github.com/root-project/root/pull/792#issuecomment-316703550,2,['undo'],['undoing']
Usability,"I only did two minor changes to the existing commits, as discussed yesterday evening:; ```diff; diff --git a/tree/ntuple/v7/inc/ROOT/RField.hxx b/tree/ntuple/v7/inc/ROOT/RField.hxx; index 7c9ccebeaa..411ef5733c 100644; --- a/tree/ntuple/v7/inc/ROOT/RField.hxx; +++ b/tree/ntuple/v7/inc/ROOT/RField.hxx; @@ -2179,9 +2179,8 @@ public:; ; template <typename T>; class RIntegralField {; - // Cannot say static_assert(false) because not all compilers implement CWG2518 yet...; - static_assert(std::is_integral_v<T>, ""RIntegralField requires integral type"");; - static_assert(!std::is_integral_v<T>, ""unsupported integral type"");; + // Instantiating this base template definition should never happen and is an error!; + RIntegralField() = delete;; };; ; template <>; @@ -2573,6 +2572,8 @@ template <typename T>; class RField<T, typename std::enable_if<std::is_integral_v<T>>::type> final; : public RIntegralField<typename Internal::RIntegralTypeMap<T>::type> {; using MappedType = typename Internal::RIntegralTypeMap<T>::type;; + static_assert(sizeof(T) == sizeof(MappedType), ""invalid size of mapped type"");; + static_assert(std::is_signed_v<T> == std::is_signed_v<MappedType>, ""invalid signedness of mapped type"");; ; public:; RField(std::string_view name) : RIntegralField<MappedType>(name) {}; ```. Eventually, after implementing the changes, I decided to hold off moving some member functions to the templated `RField` specialization: It didn't work for the `Map[V]` functions because `RColumn::Map[V]` has to be called with the fixed width integer type after mapping. Instead the newly added last commit `reinterpret_cast`s the pointer since we can guarantee that the mapped type has identical storage layout. This solves the problem with `RNTupleView`s, discussed on Mattermost. I still plan to come back to possible deduplications and simplifications in a follow-up PR (now https://github.com/root-project/root/pull/16101).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16039#issuecomment-2247304935:1837,simpl,simplifications,1837,https://root.cern,https://github.com/root-project/root/pull/16039#issuecomment-2247304935,2,['simpl'],['simplifications']
Usability,"I propose to document this feature clearly unless it can be easily implemented. Technically it's a bug fix, I do not see issues in dealing with it for 6.12 too.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1310#issuecomment-343718667:35,clear,clearly,35,https://root.cern,https://github.com/root-project/root/pull/1310#issuecomment-343718667,2,['clear'],['clearly']
Usability,"I put `gPad->Modified(); gPad->Update()` in all possible places and none of them worked. I guess for the time being we keep that a ""feature"" as the workaround is simple: it is enough to zoom on the X top Axis.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9263#issuecomment-967029745:162,simpl,simple,162,https://root.cern,https://github.com/root-project/root/issues/9263#issuecomment-967029745,2,['simpl'],['simple']
Usability,"I really prefer a separate repo, exactly the design of `GooFit/Minut2` (though it should be moved to `root-project/minuit2` and have the latest improvements merged in). It has the nice feature that you can use it on multiple ROOT versions (producing a 6.10 version, for example), it keeps ROOT source tree clean, and is clearly separate. (I'm calling that Version 1). I can also add Travis tests pretty easily to that version (though also possible with the others). The first separate folder (Version 2) method was from a discussion with @lmoneta, and the merged folder method (Version 3) was from a request by @amadio. When I get back to CERN from Italy (Wednesday), can we schedule another meeting with interested parties to set up a plan? We need to pick one of the three options and focus (my) effort on that. My favorite is Version 1 so far. And, no, since you need to make a distributable *source* package, you can't copy all files to the build folder. You can copy all files to a `/standalone` folder, which is what Version 2 did.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1680#issuecomment-370486802:320,clear,clearly,320,https://root.cern,https://github.com/root-project/root/pull/1680#issuecomment-370486802,2,['clear'],['clearly']
Usability,I restarted the jobs to make sure the failure on Windows was a glitch. A test timedout for a reason which was not clear to me.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15106#issuecomment-2032409208:114,clear,clear,114,https://root.cern,https://github.com/root-project/root/pull/15106#issuecomment-2032409208,2,['clear'],['clear']
Usability,I saw much simpler example how MasterPage can be resized. https://answers.sap.com/questions/12009929/is-it-possible-to-expand-the-width-of-master-page-.html. It is just an single parameter which set width of master page - one can add button in the ToolHeader to switch between default and wide mode.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4646#issuecomment-575612246:11,simpl,simpler,11,https://root.cern,https://github.com/root-project/root/pull/4646#issuecomment-575612246,2,['simpl'],['simpler']
Usability,"I see https://github.com/root-project/root/pull/11311. Is missing the R__HAS_STD_SPAN, I would say to avoid more improper reporting, it should be made more clear when those header are imported that this is the intended behaviour. I would say you should add a ; ```; #if __cplusplus >= 202002L; ```. inside those code block if they are enabled due to this mismatched compilation version and report the error",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13042#issuecomment-1595270233:156,clear,clear,156,https://root.cern,https://github.com/root-project/root/issues/13042#issuecomment-1595270233,2,['clear'],['clear']
Usability,"I see some parameters in these header files are commented but not in the doxygen format. I can improve that to make the comments appear in the reference guide. But when the documentation is completely missing, an expert for these classes is needed. I think @lmoneta should be able to add the missing doc or ask somebody who knows about it to improve the documentation.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8507#issuecomment-865994950:153,guid,guide,153,https://root.cern,https://github.com/root-project/root/issues/8507#issuecomment-865994950,2,['guid'],['guide']
Usability,"I see that the CI is still failing through `clang-tidy`, but I cannot find any fault of my own here, seems to be related to a call to the virtual `TMatrixT::Clear` in the `TMatrixT` destructor...; Any opinions?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3922#issuecomment-500533392:157,Clear,Clear,157,https://root.cern,https://github.com/root-project/root/pull/3922#issuecomment-500533392,1,['Clear'],['Clear']
Usability,"I see that this is a bug leading unwanted behaviour for TTree itself. However, I *think* we should be able to apply a fix from the RDF side.; * The TTreeProcessorMT, and hence for RDF with EnableImplicitMT solution is very clear: in fact when we have friends, we will be creating the clusters globally, and hence we will be calling `GetFriendEntries` defined in TTreeProcessorMT.cxx. We can error out whenever there is a friend with less entries than the main chain. Clearly, the check would not require opening extra files. Additional benefit ==> this is checked before the event loop.; * For single threaded cases, it is not so obvious, but there are 2 steps that could be done:; 	* Teach the RLoopManager to always understand the fFriendInfo (which was introduced by the RDatasetSpec) from InteralTreeUtils.; 	* Once that is done, GetEntries(friend_chain_name) after the event loop ==> user pays the cost of (maybe erroring for) short friends in the end.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9137#issuecomment-1173061495:223,clear,clear,223,https://root.cern,https://github.com/root-project/root/issues/9137#issuecomment-1173061495,3,"['Clear', 'clear']","['Clearly', 'clear']"
Usability,"I see you also modified the primer. This guide as now 3 version. The one in the ROOT repo, the one on the web site and the Jupyter Notebook one which has its own repo. I think the idea will be to keep only one ie the Jupyter NB one.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10055#issuecomment-1066504266:41,guid,guide,41,https://root.cern,https://github.com/root-project/root/pull/10055#issuecomment-1066504266,2,['guid'],['guide']
Usability,"I see you updated the old user's guide changing `documentation/users-guide/Cling.md` . The this guide is not supposed to be updated. It is frozen. You should changed the ""Manual"" on the web of the reference guide (doxygen).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10055#issuecomment-1060729822:33,guid,guide,33,https://root.cern,https://github.com/root-project/root/pull/10055#issuecomment-1060729822,8,['guid'],['guide']
Usability,"I see, ... so that's clearly a bug in that case, the 3D viewer should not change the axis attributes silently ...; I am in favour to remove that line ..",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8618#issuecomment-875477436:21,clear,clearly,21,https://root.cern,https://github.com/root-project/root/issues/8618#issuecomment-875477436,2,['clear'],['clearly']
Usability,"I see, then how about the following. It's basically a rename of `RTypeErasedMergeables` to `RMergeableVariationsBase` so that the usage as a type-erased version of `RMergeableVariations<T>` is clear, plus it removes the duplication of `fValues`, `fNames` data members and it adds a converting constructor that substitutes the ""manual"" conversion that we currently do in `GetMergeableValue(RResultMap<T>)`: . ```cpp; class RMergeableVariationsBase : public RMergeableValueBase {; vector<string> fNames;; vector<unique_ptr<RMergeableValueBase>> fValues;; public:; RMergeableVariationsBase(vector<string> &&names, vector<unique_ptr<RMergeableValueBase> &&values);; };. template <typename T>; class RMergeableVariations : public RMergeableVariationsBase {; public:; RMergeableVariations(RMergeableVariationsBase &&b) : RMergeableVariationsBase(std::move(b.fNames), std::move(b.fValues)) {}; };. std::unique_ptr<RMergeableValueBase> RVariedAction::GetMergeableValue() const; {; // ...; return std::make_unique<RMergeableVariationsBase>(std::move(keys), std::move(values));; }; ```. That is not more code than we have now, and it should enable a much simpler `GetMergeableValue`:. ```cpp; template <typename T>; std::unique_ptr<RMergeableVariations<T>> GetMergeableValue(ROOT::RDF::Experimental::RResultMap<T> &rmap); {; if (!rmap.fAction->HasRun()); rmap.fLoopManager->Run(); // Prevents from using `const` specifier in parameter. auto mergeable = rmap.fAction->GetMergeableValue();; return std::make_unique<RMergeableVariations<T>>(std::move(*mergeable));; }; ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9942#issuecomment-1061811239:193,clear,clear,193,https://root.cern,https://github.com/root-project/root/pull/9942#issuecomment-1061811239,4,"['clear', 'simpl']","['clear', 'simpler']"
Usability,I see. I'd like to see this automatically generated and linked from here https://root.cern.ch/root-user-guides-and-manuals .; Would it be a problem to convert all this to markdown (pandoc -s example4.tex -o example5.text)? @couet @lmoneta what do you think?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/391#issuecomment-284792803:104,guid,guides-and-manuals,104,https://root.cern,https://github.com/root-project/root/pull/391#issuecomment-284792803,1,['guid'],['guides-and-manuals']
Usability,"I see. Thank you! I subscribed to notifications there.; I don't care much about the authorship. I was confused by the current sites structure, and if when I visit the site next year all is clear, I will be glad! :)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7282#issuecomment-786496515:189,clear,clear,189,https://root.cern,https://github.com/root-project/root/issues/7282#issuecomment-786496515,2,['clear'],['clear']
Usability,I should have addressed some of the comments here and incorporated the feedback offline.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1563#issuecomment-365898973:71,feedback,feedback,71,https://root.cern,https://github.com/root-project/root/pull/1563#issuecomment-365898973,2,['feedback'],['feedback']
Usability,"I should have been more specific mentioning TH1D maybe. ; - The x axis usually has time information. ; - Bin content are be filled with these Re/Im/Ph/Mag. I would like to get an outgoing object without such directory structure because this would spread many histograms inside my root file structure and I want to keep my object simple. Using such structure would make the retrieval from TFile a way more complex than just reading a TKey. Combining Re/Im would not help quickly visualizing. From TBrowser, I can usually open my class structure and find ´fName´ or string entries inside but this time I would like to find TH1. I think TTree is providing such feature as vector are usually represented as TH1.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13352#issuecomment-1661250419:329,simpl,simple,329,https://root.cern,https://github.com/root-project/root/issues/13352#issuecomment-1661250419,2,['simpl'],['simple']
Usability,"I still have to investigate if it is used in user code, but I would like to deprecate it at some point if we know if it's not used. Then it's also clear that we don't have to implement handling string values in the BatchMode.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10106#issuecomment-1066843499:147,clear,clear,147,https://root.cern,https://github.com/root-project/root/pull/10106#issuecomment-1066843499,2,['clear'],['clear']
Usability,"I submitted several corrections to the Guide on https://github.com/root-project/root/issues/7284, but that was closed - so probably this one should be closed too if you don't intend to update the User's Guide.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7279#issuecomment-786181786:39,Guid,Guide,39,https://root.cern,https://github.com/root-project/root/issues/7279#issuecomment-786181786,2,['Guid'],['Guide']
Usability,"I support this kind of simplifications: deprecating genreflex is an option. Before discussing that in detail, the advantages of the rootcling only approaches should be listed carefully. Users such as CMS and LHCb will have to migrate away of genreflex.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9448#issuecomment-1925410790:23,simpl,simplifications,23,https://root.cern,https://github.com/root-project/root/issues/9448#issuecomment-1925410790,2,['simpl'],['simplifications']
Usability,"I tested it locally and it seems to do the job now. If two processes get to the creation of the cache directory hierarchy precisely at the same time, it seems that there can still be a race there where one process fails to create the cache directory but it also doesn't see the full hierarchy already there. In that case there is no hard failure though: the process that fails to create the cache directory simply reads the file remotely rather than caching it.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9479#issuecomment-1006504826:407,simpl,simply,407,https://root.cern,https://github.com/root-project/root/pull/9479#issuecomment-1006504826,2,['simpl'],['simply']
Usability,I think instead of `#url[link]{label}` we might also use a simpler syntax like in markdown. something like `[label](link)`. No need for a special `#url` keyword. Then it will be enough to look for the string `](http` to know that there is a text with some link.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/16512#issuecomment-2390634640:59,simpl,simpler,59,https://root.cern,https://github.com/root-project/root/issues/16512#issuecomment-2390634640,2,['simpl'],['simpler']
Usability,I think it's useful/user-friendly to have basic installation instructions in-source.; I removed the outdated content and added pointers to root.cern/install/build_from_source and similar. This fixes ROOT-10964 .,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6152:20,user-friendly,user-friendly,20,https://root.cern,https://github.com/root-project/root/pull/6152,1,['user-friendly'],['user-friendly']
Usability,"I think that adding this pythonization for specific classes should be enough in terms of usability. Adding a generic pythonization for all ROOT classes would possibly cause more harm than good. On the other hand, it's probably confusing if it does not behave such as the cling prompt?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2097#issuecomment-392477326:89,usab,usability,89,https://root.cern,https://github.com/root-project/root/pull/2097#issuecomment-392477326,2,['usab'],['usability']
Usability,"I think that is sufficient efficient evidence albeit there is one more simple test to do, is to introduce a synchronization point every once in a while to insure that the queue is actually filled/used and then later emptied.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14034#issuecomment-1821703597:71,simpl,simple,71,https://root.cern,https://github.com/root-project/root/pull/14034#issuecomment-1821703597,2,['simpl'],['simple']
Usability,"I think the PR goes into the right direction. Please use just 1 simple event instead of 1000, because we are really testing only if the compression setting gets applied. The `ntuple_zip` unit tests are _not_ really relevant here -- they test the compression routines themselves and not if the correct compression settings were used.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5179#issuecomment-620674511:64,simpl,simple,64,https://root.cern,https://github.com/root-project/root/pull/5179#issuecomment-620674511,2,['simpl'],['simple']
Usability,"I think the problem is just the name. ""Ptr"" makes people think of a normal non owning pointer. If it would be called ""RResult"", it would be pretty clear to me who owns the payload!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14766#issuecomment-2046793610:147,clear,clear,147,https://root.cern,https://github.com/root-project/root/issues/14766#issuecomment-2046793610,2,['clear'],['clear']
Usability,"I think the squashing of commits is simply a change with respect to what is being done today, it's not negative or a regression per se. I even could see an advantage in having one backport per commit. A good item to be discussed in the team I guess, but this action could be really help us.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14889#issuecomment-1983480977:36,simpl,simply,36,https://root.cern,https://github.com/root-project/root/issues/14889#issuecomment-1983480977,2,['simpl'],['simply']
Usability,"I think there is one thing that is clear:. * T*System::Abort should disable the signal handling before calling ::abort [rather than the caller of gSystem->Abort doing so]. What is not as clear is what should be the behavior for unexpected (which include failure of a 'regular' assert macro):. * Should it print a stack trace? (This may or may not be useful for an assert).; * When on the prompt, should it recover or stop the process? (probably stop the process but then again we don't stop the process for other 'bad' state: SigBus, SigSegmentationViolation, SigIllegalInstruction, SigFloatingException). Note: to print stack and still always abort, we just need to move the return introduce by the PR to after the call to StackTrack and before the call to HandleException/Exit. Note: to print stack and not exit when on the prompt, just tweaking T*System::Abort should be enough to quit for .qqqq and avoid the infinite recursions.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5034#issuecomment-589272246:35,clear,clear,35,https://root.cern,https://github.com/root-project/root/pull/5034#issuecomment-589272246,4,['clear'],['clear']
Usability,"I think this is a clear sign we want this patch. ![image](https://github.com/root-project/root/assets/15638895/dc7f1386-c921-4796-8a92-172026517ba8). One could say that returning a string that ends with ""\n"" would be slightly more annoying for post-processing, but I really don't think that counterargument has enough weight",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13165#issuecomment-1621661045:18,clear,clear,18,https://root.cern,https://github.com/root-project/root/pull/13165#issuecomment-1621661045,2,['clear'],['clear']
Usability,"I think we can get away with something simpler where when IMT is on (or more precisely when TBB has been detected by cmake), we turn on a flag (`#define` in RConfigure.h) that change the way core/thread is build (and yes, in this optional mode, libThread would link against libTBB.so (or however it is spelt)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6919#issuecomment-780926697:39,simpl,simpler,39,https://root.cern,https://github.com/root-project/root/pull/6919#issuecomment-780926697,2,['simpl'],['simpler']
Usability,"I think we can merge the PR. ; Maybe Omar, it is better to merge all commits of Anirudh in a single commit and the others in another one before merging it to have a simpler history",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6935#issuecomment-758049841:165,simpl,simpler,165,https://root.cern,https://github.com/root-project/root/pull/6935#issuecomment-758049841,2,['simpl'],['simpler']
Usability,"I think we gain by having in 6.28 to expose this to the users. This will fix issues happening with fits using the `G` option (external gradient) and in addition, will give us more feedback on using an external Hessian computation. This will be certainly useful. ; In addition, the PR, improves significantly the Minuit2/Fumili algorithm, especially for the case of binned likelihood fit. I think also this is worth having in 6.28.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11755#issuecomment-1357810874:180,feedback,feedback,180,https://root.cern,https://github.com/root-project/root/pull/11755#issuecomment-1357810874,2,['feedback'],['feedback']
Usability,"I tried the macro in the ref guide. It works nice. The formula shows nicely:. <img width=""996"" alt=""Screenshot 2021-04-09 at 16 07 57"" src=""https://user-images.githubusercontent.com/4697738/114192490-d5986d00-994d-11eb-9b78-76c062a039f0.png"">. To show better in the ref guide it is preferable to put the two plots vertically instead of horizontally. ; Therefore you should change the TCanvas and Divide lines to:. ```; TCanvas *c1 = new TCanvas(""c1"", ""Schroedinger's Hydrogen Atom"", 750, 1500);; c1->Divide(1, 2);; ```. That will be the last changes. After that we can merge it.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7801#issuecomment-816710642:29,guid,guide,29,https://root.cern,https://github.com/root-project/root/pull/7801#issuecomment-816710642,4,['guid'],['guide']
Usability,"I tried to reproduce this issue with the following C++ script:; ```; void nan(){; auto g = new TGraph ();; g->AddPoint(0,TMath::QuietNaN());; g->AddPoint(1,TMath::QuietNaN());; g->AddPoint(2,TMath::QuietNaN());; g->AddPoint(3,TMath::QuietNaN());; g->AddPoint(4,TMath::QuietNaN());; g->Draw(""APL"");; }; ```; Like you it gives me a blank canvas but in parallel, I get the following messages in the terminal output:; ```; root [0] ; Processing nan.C...; Info in <TCanvas::MakeDefCanvas>: created default TCanvas with name c1; Warning in <TCanvas::ResizePad>: Inf/NaN propagated to the pad. Check drawn objects.; Warning in <TCanvas::ResizePad>: c1 height changed from 0 to 10; ``` ; So it is pretty clear that there NaNs in the data. ; The message even invites the user to check the ""drawn objects"". I do not think we can do more than that.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12296#issuecomment-1431275163:696,clear,clear,696,https://root.cern,https://github.com/root-project/root/issues/12296#issuecomment-1431275163,2,['clear'],['clear']
Usability,"I undo ... it cannot stay like that ....; ```; % ./stressGraphics; Create ./cernstaff.root; (TFile *) nullptr; **********************************************************************; * Starting Graphics - S T R E S S suite *; **********************************************************************; * Starting Basic Graphics - S T R E S S *; **********************************************************************; Test 1: TLine..................................................... OK; PDF output................................................ OK; GIF output................................................ OK; JPG output................................................ OK; PNG output................................................ OK; [/usr/lib/system/libsystem_platform.dylib] _sigtramp (no debug info); [/usr/lib/system/libsystem_kernel.dylib] fstat$INODE64 (no debug info); [/Users/couet/git/couet-root-bin/lib/libGpad.so] TCanvas::Constructor(char const*, char const*, int, int, int, int) (no debug info); [/Users/couet/git/couet-root-bin/lib/libGpad.so] TCanvas::TCanvas(char const*, char const*, int, int, int, int) (no debug info); [<unknown binary>] (no debug info); [<unknown binary>] (no debug info); [/Users/couet/git/couet-root-bin/lib/libCling.so] cling::IncrementalExecutor::executeWrapper(llvm::StringRef, cling::Value*) const (no debug info); [/Users/couet/git/couet-root-bin/lib/libCling.so] cling::Interpreter::RunFunction(clang::FunctionDecl const*, cling::Value*) (no debug info); [/Users/couet/git/couet-root-bin/lib/libCling.so] cling::Interpreter::EvaluateInternal(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, cling::CompilationOptions, cling::Value*, cling::Transaction**, unsigned long) (no debug info); [/Users/couet/git/couet-root-bin/lib/libCling.so] cling::MetaSema::actOnxCommand(llvm::StringRef, llvm::StringRef, cling::Value*) (no debug info); [/Users/couet/git/couet-root-bin/lib/libCling.so] cling::MetaParser::isXCom",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6537#issuecomment-704297485:2,undo,undo,2,https://root.cern,https://github.com/root-project/root/pull/6537#issuecomment-704297485,2,['undo'],['undo']
Usability,I updated the branch to simplify a bit the history and make a couple of additional improvements.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3612#issuecomment-479722816:24,simpl,simplify,24,https://root.cern,https://github.com/root-project/root/pull/3612#issuecomment-479722816,2,['simpl'],['simplify']
Usability,"I want too, but actually it make the TreeTable one row more than it should, and break the breadcrumbs; I sended a message on Slack to have help from SAP, but i still have no answer; As soon as i have free time, or an answer i will try to find a solution, and apply it back. But i believe that for the user experience, it is better to have the Splitter, more than the two scrollbars, and the nor usable breadcrumbs. This is a temporary fix until we can debug the SplitApp",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4591#issuecomment-547359502:301,user experience,user experience,301,https://root.cern,https://github.com/root-project/root/pull/4591#issuecomment-547359502,4,"['usab', 'user experience']","['usable', 'user experience']"
Usability,"I was enabling SetClusterPrefetch as part of the attempt to reduce read_calls when processing our AODs. Indeed I now notice that it's enough to simply do:. ```C++; // Was affected by https://github.com/root-project/root/issues/8962; // Re-enabling this seems to cut the number of IOPS in half; tree->SetCacheSize(25000000);; //tree->SetClusterPrefetch(true);; for (auto& reader : mBranchReaders) {; tree->AddBranchToCache(reader->branch());; }; tree->StopCacheLearningPhase();; ```. to obtain the same result, so I am fine to simply disable it for now. Do I understand correctly that I still need this patch, though, in case there is more than one basket?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16640#issuecomment-2406804701:144,simpl,simply,144,https://root.cern,https://github.com/root-project/root/pull/16640#issuecomment-2406804701,4,['simpl'],['simply']
Usability,"I was failing to build ROOT on Fedora 36 (gcc 12) with the following error. ```; /home/vpadulan/Programs/rootproject/rootsrc/tree/tree/src/InternalTreeUtils.cxx: In function ‘void ROOT::Internal::TreeUtils::ClearMustCleanupBits(TObjArray&)’:; /home/vpadulan/Programs/rootproject/rootsrc/tree/tree/src/InternalTreeUtils.cxx:238:13: error: invalid use of incomplete type ‘class TBranch’; 238 | branch->ResetBit(kMustCleanup);; | ^~; In file included from /home/vpadulan/Programs/rootproject/rootsrc/tree/tree/inc/TTree.h:30,; from /home/vpadulan/Programs/rootproject/rootsrc/tree/tree/inc/TChain.h:24,; from /home/vpadulan/Programs/rootproject/rootsrc/tree/tree/inc/ROOT/InternalTreeUtils.hxx:21,; from /home/vpadulan/Programs/rootproject/rootsrc/tree/tree/src/InternalTreeUtils.cxx:9:; /home/vpadulan/Programs/rootproject/rootsrc/tree/tree/inc/ROOT/TIOFeatures.hxx:17:7: note: forward declaration of ‘class TBranch’; 17 | class TBranch;; | ^~~~~~~; /home/vpadulan/Programs/rootproject/rootsrc/tree/tree/src/InternalTreeUtils.cxx:239:38: error: invalid use of incomplete type ‘class TBranch’; 239 | TObjArray *subBranches = branch->GetListOfBranches();; | ^~; /home/vpadulan/Programs/rootproject/rootsrc/tree/tree/inc/ROOT/TIOFeatures.hxx:17:7: note: forward declaration of ‘class TBranch’; 17 | class TBranch;; | ^~~~~~~; /home/vpadulan/Programs/rootproject/rootsrc/tree/tree/src/InternalTreeUtils.cxx:241:33: error: invalid use of incomplete type ‘class TBranch’; 241 | TObjArray *leaves = branch->GetListOfLeaves();; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10752:207,Clear,ClearMustCleanupBits,207,https://root.cern,https://github.com/root-project/root/pull/10752,1,['Clear'],['ClearMustCleanupBits']
Usability,I was hoping to get a chance to review this PR and provide a patch to stitch to this commit for clearer history. The rest of this PR is here -- #7027,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7017#issuecomment-758699032:96,clear,clearer,96,https://root.cern,https://github.com/root-project/root/pull/7017#issuecomment-758699032,2,['clear'],['clearer']
Usability,"I was rather hoping that we could evolve `ROOT_GENERATE_DICTIONARY`, at least the version that we make available to users, so that it would be simpler to use.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8308#issuecomment-856211883:143,simpl,simpler,143,https://root.cern,https://github.com/root-project/root/issues/8308#issuecomment-856211883,2,['simpl'],['simpler']
Usability,"I was thinking of something like this:. https://eguiraud.web.cern.ch/eguiraud/decks/20200416_reusing_rdf_jitted_lambdas_ppp/#/4. but booking all the histos before calling `GetValue` on one of them. I.e. some dedicated test with several RDFs and where reuse across RDFs clearly happens (of course other tests might exercise it to some degree already). Perhaps after merging #5356 , then.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5329#issuecomment-615311725:269,clear,clearly,269,https://root.cern,https://github.com/root-project/root/pull/5329#issuecomment-615311725,2,['clear'],['clearly']
Usability,I will commit a simple fix for this,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9189#issuecomment-964344546:16,simpl,simple,16,https://root.cern,https://github.com/root-project/root/issues/9189#issuecomment-964344546,2,['simpl'],['simple']
Usability,"I will make a push with the latest changes as soon as I solve the capacity-as-sentinel-for-ownership thing -- it's a bit tricky because the capacity is unsigned (so can't use -1 unless we change it to signed) and we can't use 0 because `clear()` happens to set the capacity and the size to 0 in the current implementation (and it's not easy to have `clear()` set the capacity to a more meaningful value without lowering a lot of the logic from `SmallVectorImpl` to `RVec`, as far as I can tell).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7502#issuecomment-851591863:237,clear,clear,237,https://root.cern,https://github.com/root-project/root/pull/7502#issuecomment-851591863,4,['clear'],['clear']
Usability,I wonder if a simple compare and swap could be used in TSlotStack to avoid the need for a mutex.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3189#issuecomment-448442077:14,simpl,simple,14,https://root.cern,https://github.com/root-project/root/pull/3189#issuecomment-448442077,2,['simpl'],['simple']
Usability,"I wonder if this shouldn't be a contribution to VDT (https://github.com/dpiparo/vdt , which can be activated in ROOT with a simple ""-DVDT=ON"" and can be easily defaulted to ON given its size starting from 6.12), leaving aside the vectorclass. The implementation looks like autovectorisable with little effort.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1044#issuecomment-331526179:124,simpl,simple,124,https://root.cern,https://github.com/root-project/root/pull/1044#issuecomment-331526179,2,['simpl'],['simple']
Usability,"I wonder why the information is missing, it's a `RelWithDebInfo` build and no jitting involved :thinking: ; But I agree that combined with your knowledge about the code, it's clear where it comes from. It's not clear to me whether it's an issue or not. Definitely, it's confusing to see your machine blow up for no reason and I'm sure it's a pain to figure this out. What about a warning if you use histograms without a binning? But I don't see how we could do this so that the exploratory analysis in the shell isn't messed up with warnings all the time. Edit: And I would call the code above exploratory ;) It's a smallish sample in terms of HEP data and you just want to see the distribution of each column.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6676#issuecomment-716465521:175,clear,clear,175,https://root.cern,https://github.com/root-project/root/issues/6676#issuecomment-716465521,4,['clear'],['clear']
Usability,I would actually prefer the constructor overload. Unfortunately it's not yet clear to me how this could be done...,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3424#issuecomment-463203379:77,clear,clear,77,https://root.cern,https://github.com/root-project/root/pull/3424#issuecomment-463203379,2,['clear'],['clear']
Usability,"I would feel *way* more confident if we had any test for this :-/ Would you be kind enough (and I really mean it...) to provide one? It's fairly simple, just copy `core/base/test/TNamedTests.cxx` to `core/base/test/TBitsTests.cxx` and use the usual `EXPECT_EQ` to check for the output to be what you'd expect. *Then* we can simplify things! :-) Let us know, please!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7988#issuecomment-825759330:145,simpl,simple,145,https://root.cern,https://github.com/root-project/root/pull/7988#issuecomment-825759330,4,['simpl'],"['simple', 'simplify']"
Usability,I would go for (b) it looks simpler .,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7160#issuecomment-2041497684:28,simpl,simpler,28,https://root.cern,https://github.com/root-project/root/issues/7160#issuecomment-2041497684,2,['simpl'],['simpler']
Usability,"I would like to write (something equivalent to) the following:. ```cpp; auto m = RNTupleModel::Create();; auto field = RFieldBase::Create(""v"", ""ROOT::VecOps::RVec<int>"").Unwrap();; ROOT::RVec<int> rvec = {1, 2, 3};; m->AddField(std::move(field), (void*)&rvec);; auto w = RNTupleWriter::Recreate(std::move(m), ""r"", ""somefile.root"");; ```. but that `RNTupleModel::AddField` signature is missing and I could not find another way to do this correctly.; For example the following example code adds a single field to the model (""v"") but it adds _two_ corresponding RFieldValues to `model->GetDefaultEntry()`, one explicitly with `m->GetDefaultEntry()->CaptureValue()` and one implicitly with the `m->AddField(std::move(field))` call. ```cpp; // write out RVec; {; auto m = RNTupleModel::Create();; auto field = RFieldBase::Create(""v"", ""ROOT::VecOps::RVec<int>"").Unwrap();; ROOT::RVec<int> rvec = {1, 2, 3};; m->GetDefaultEntry()->CaptureValue(field->CaptureValue(&rvec));; m->AddField(std::move(field));. auto w = RNTupleWriter::Recreate(std::move(m), ""r"", fileGuard.GetPath());; w->Fill();; rvec.clear();; rvec.push_back(42);; w->Fill();; }; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9069:1091,clear,clear,1091,https://root.cern,https://github.com/root-project/root/issues/9069,1,['clear'],['clear']
Usability,"I would propose to change the title to ""[ci] Further speedup mac and linux builds by caching dependencies"". The word ""instead"" can be misleading. Our goal is to have feedback from the CI as soon as possible. Having several nodes, allows to scale horizontally. We are not increasing the number of nodes in the CI because we are lazy, we just need many nodes AND fast CI, e.g. through caches or quicker tests :)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14987#issuecomment-2001914193:166,feedback,feedback,166,https://root.cern,https://github.com/root-project/root/issues/14987#issuecomment-2001914193,2,['feedback'],['feedback']
Usability,"I would really like if we can do something about this, as also `nixpkgs` uses by default the `build` directory in the sources for building :slightly_smiling_face:. Does anyone have feedback on my suggestion?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8031#issuecomment-2142432497:181,feedback,feedback,181,https://root.cern,https://github.com/root-project/root/issues/8031#issuecomment-2142432497,2,['feedback'],['feedback']
Usability,"I'd like to understand pro/cons a bit better. The cost is clear: we will break user code, and likely significant fractions. What's the benefit - I don't think we'll reduce compilation times dramatically: TBuffer without what's anyway included in TDirectory is small. Do you see a measurable build time reduction? I do value code hygiene, but the cost might be too high here, so we'll need more convincing arguments than usually.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5123#issuecomment-597497931:58,clear,clear,58,https://root.cern,https://github.com/root-project/root/pull/5123#issuecomment-597497931,2,['clear'],['clear']
Usability,I'll close this one and make a clean new one with clearly separated features compared to the `AsMatrix` PR.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1777#issuecomment-381989975:50,clear,clearly,50,https://root.cern,https://github.com/root-project/root/pull/1777#issuecomment-381989975,2,['clear'],['clearly']
Usability,"I'll just close this, for me it's clearly off-topic.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11097#issuecomment-1404930474:34,clear,clearly,34,https://root.cern,https://github.com/root-project/root/pull/11097#issuecomment-1404930474,2,['clear'],['clearly']
Usability,I'll merge as is; please consider removing `fDefaultPageCont.clear();` from the `THttpServer` ctor in a subsequent PR.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1785#issuecomment-380829872:61,clear,clear,61,https://root.cern,https://github.com/root-project/root/pull/1785#issuecomment-380829872,2,['clear'],['clear']
Usability,I'll merge given the simplicity of the change. Thanks @pamputt !,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4034#issuecomment-509282452:21,simpl,simplicity,21,https://root.cern,https://github.com/root-project/root/pull/4034#issuecomment-509282452,2,['simpl'],['simplicity']
Usability,"I'm a little confused as the same tests seems to have been quoted as `passed` and `failed` in the same log. I struggle to find the exact definition of each test as well. I looked through the relevant files, but the structure is not clear to me. Also, last time when I spoke with @amadio about the future of ROOT, he said you guys discussed making sure people outside of CERN can contribute. Unfortunately, I had to use my CERN login to see the test logs. I also don't know how to replicate the tests in my environment. Do they depend on files hosted somewhere? Could you give me some docs to read so I can find my way around?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9271#issuecomment-967115318:232,clear,clear,232,https://root.cern,https://github.com/root-project/root/pull/9271#issuecomment-967115318,2,['clear'],['clear']
Usability,"I'm afraid the ""book everything first, use results later"" is the price to pay to run everything in a single event loop: we need to know what to run before we run it, and at the same time we have to run the event loop to produce the result if you do things with it. However, by the time you lose track of where things were defined because your analysis is too complex, you probably should restructure your code so that you don't keep everything in a single function. Analyses that produce hundreds or thousands of histograms typically have some bookkeeping logic, they don't keep all results at main scope. Some of the more complex RDF tutorials show some possible ways to do it, e.g. in Python we keep `RResultPtr<TH1D>`s in a dictionary. There are other possible designs, like e.g. continuations on futures, but I don't think they increase readability/clarity in general. Anyway, the empirical reply to the original question: we never got the feedback that the ""book first, use later"" programming model made users lose track of the results.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7107#issuecomment-778229985:944,feedback,feedback,944,https://root.cern,https://github.com/root-project/root/pull/7107#issuecomment-778229985,2,['feedback'],['feedback']
Usability,I'm also not 100% happy with the name. I put the `Make` in front since it is a factory and fits the STL language. Your proposal looks fine to me though it's still not completely clear (by the name) what it does.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3424#issuecomment-463195498:178,clear,clear,178,https://root.cern,https://github.com/root-project/root/pull/3424#issuecomment-463195498,2,['clear'],['clear']
Usability,I'm not sure what the policy here is with inclusion of these styles and I didn't see another way to include a style in ROOT without patching at least one file. So feel free to decline this PR. If there's a different way to do this (in rootrc or a simple config file in some style directory) I would be happy to hear that,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5550:247,simpl,simple,247,https://root.cern,https://github.com/root-project/root/pull/5550,1,['simpl'],['simple']
Usability,"I'm quite baffled every time I come in contact with it, how you guys manage to survive with such a testing infrastructure. :confused: I did have a fork of [roottest](https://github.com/root-project/roottest) from a long time ago. https://github.com/krasznaa/roottest. What I didn't have was it being up to date with the main repository. Plus, did I see correctly in your copy-pasted error message that the CI complained about not finding a branch in my roottest fork with the same name as the branch that I opened this PR from? :confused: What the heck? Is it really expected that one would create a branch in both repositories to make a modification to ROOT?. After some deliberation I updated the PR as you can see. The setup that you guys have with `ROOTConfig.cmake` being generated twice, and one of them possibly being used already during the main configuration is... unique... (Just so that I stay PC...) I've seen similar configurations being used for header-only libraries in the past, but never for anything that needed an actual build before becoming usable. In any case, making `ROOTConfig.cmake` skip `find_dependency(Vdt)` if `VDT::VDT` is already available as a target, was the most robust thing that I could come up with...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11844#issuecomment-1339364132:1062,usab,usable,1062,https://root.cern,https://github.com/root-project/root/pull/11844#issuecomment-1339364132,2,['usab'],['usable']
Usability,"I'm saying only about the Manual, not the reference guide. пн, 15 мар. 2021 г., 17:54 Olivier Couet ***@***.***>:. > You would like to have the whole Reference Guide generated via Doxygen in; > pdf format ?; > Doxygen is able to generate Latex (then pdf) ... We can try but I am; > afraid that will be a monster file...; >; > —; > You are receiving this because you authored the thread.; > Reply to this email directly, view it on GitHub; > <https://github.com/root-project/root/issues/7421#issuecomment-799484591>,; > or unsubscribe; > <https://github.com/notifications/unsubscribe-auth/AAJGF4TWOCCX734TA6DZN5LTDYNTFANCNFSM4Y4OKGDA>; > .; >",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7421#issuecomment-799535019:52,guid,guide,52,https://root.cern,https://github.com/root-project/root/issues/7421#issuecomment-799535019,3,"['Guid', 'guid']","['Guide', 'guide']"
Usability,"I've added that patch and it does the trick. Thanks a lot! 😃 Next time I have to put together a debug build I'll try to include the sources used to make it easier to understand. > But that's not surprising as we have not released that yet. Or would you expect this patch to be part of this Conda build? It is in master and v6-26-00-patches, not in v6-24. Which ROOT version does that clang correspond to?. The conda nightly build is trying to export the patches from http://root.cern/git/clang.git. It's currently using the commit corresponding to `ROOT-patches-rrelease_90` but nothing more recent has been pushed there as far as I can tell. I thought I'd checked against `interpreter/llvm/src/tools/clang/` for missing patches but clearly I missed this line. Is there any better way I can try to find the patches?. Assuming not I'll try to see if I can come up with a better way of trying to use the root sources to check the required patches now that the LLVM 9 move has settled and the diffs are more manageable.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9595#issuecomment-1022484732:733,clear,clearly,733,https://root.cern,https://github.com/root-project/root/issues/9595#issuecomment-1022484732,2,['clear'],['clearly']
Usability,"I've been able to get somewhere but now I need guidance. I created a `dict.modulemap` file:; ```; module dict {; header ""MyClass.h""; header ""OtherClass.h""; export *; }; ```; and the module-aware dictionary:; ```bash; $ ls; LinkDef.h MyClass.h OtherClass.h dict.modulemap; $ rootcling -cxxmodule -f dict.cpp MyClass.h OtherClass.h -moduleMapFile=dict.modulemap LinkDef.h; $ ls; LinkDef.h MyClass.h OtherClass.h dict.cpp dict.modulemap dict.pcm dict_rdict.pcm; $ g++ -shared -std=c++14 -fPIC -I$ROOTSYS/include dict.cpp -o libDict.so ; $ ls; LinkDef.h MyClass.h OtherClass.h dict.cpp dict.modulemap dict.pcm dict_rdict.pcm libDict.so; ```; but I cannot load the dictionary on the root shell:; ```; $ root; root [0] .L libDict.so ; Module dict not found.; ```; I put `$PWD` in `LD_LIBRARY_PATH` and `ROOT_INCLUDE_PATH` but the error is still there.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10512#issuecomment-1149766446:47,guid,guidance,47,https://root.cern,https://github.com/root-project/root/issues/10512#issuecomment-1149766446,2,['guid'],['guidance']
Usability,"I've got my hands on a DF workflow, which produces in a pretty large DF graph around 10k histograms in a single event loop. The graph consists of roughly 130k nodes (I can tell from the jitted code) and is assembled in Python. Even though probably the actual solution would be slimming the DF graph, it poses a nice challenge for us to push jitting to its limits. See the file attached in the archive, simply jit it or compile it with `your_compiler compile.cxx $(root-config --cflags --libs)`. The file has 130k lines and around 60 mio characters (60 MB file) and is extracted from the code, which is jitted by DF. Stats I've collected so far:; - Jitting with current master (llvm9): 1.5h and >25GB maxres size; - Compiling with O0 and clang10: 1.5h and 20GB maxres size (fits the jitting); - Compiling with O0 and gcc4.8.5 and gcc10: More than 12h compile time, more than 80GB maxres size at that time (I stopped it); - Compiling with O1 and clang10: More than 10h in, I'll probably stop it soon. Here's the file:; [compile.tar.gz](https://github.com/root-project/root/files/6169676/compile.tar.gz)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7604:402,simpl,simply,402,https://root.cern,https://github.com/root-project/root/issues/7604,1,['simpl'],['simply']
Usability,"I've had similar issues with the Snap build, where ACliC remembers its build environment which doesn't exist in the runtime environment. As a remedy I've taken to patching `root/build/unix/compiledata.sh`, adding a segment which runs `sed` and clears up the unwanted extra include directories. Maybe something similar could work in your use case as a workaround. [Example here](https://github.com/MrCarroll/root-snap/blob/main/snap/local/patches/ROOT/ACliC.patch)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9243#issuecomment-963063640:244,clear,clears,244,https://root.cern,https://github.com/root-project/root/issues/9243#issuecomment-963063640,2,['clear'],['clears']
Usability,I've just pushed the requested changes. Solomonic decision between @Axel-Naumann 's and @pcanal 's suggestions: the soft teardown function is now called `ClearProxiedObjects` :smile: . Let's wait for a final confirmation from the builds and I'll merge.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4687#issuecomment-565372198:154,Clear,ClearProxiedObjects,154,https://root.cern,https://github.com/root-project/root/pull/4687#issuecomment-565372198,1,['Clear'],['ClearProxiedObjects']
Usability,"I've preskimmed the files for df103, which is now reduced from 12GB to 51MB. The fast mode is enabled by default for the tutorials, though we can still run the full version in the benchmarks. The difference is simply the postfix `_skimmed` in the filepath.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5950:210,simpl,simply,210,https://root.cern,https://github.com/root-project/root/pull/5950,1,['simpl'],['simply']
Usability,"I've seen those errors and I'll fix them. The only workaround for the time being is not to use `/permissive-` flag, unless you really need it, which is still not clear to me.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9607#issuecomment-1016287337:162,clear,clear,162,https://root.cern,https://github.com/root-project/root/issues/9607#issuecomment-1016287337,2,['clear'],['clear']
Usability,"I've tried with the following code. ```python; import cppyy. cppyy.cppdef(; '''; class Simple{; public:; Simple(int a, float b, float c, float d, const char *e = """", float f=1.f) {; std::cout << ""Simple(int a, float b, float c, float d, const char *e = \\""\\"", float f=1.f) with arguments:"" << std::endl;; std::cout << ""a: "" << a << std::endl;; std::cout << ""b: "" << b << std::endl;; std::cout << ""c: "" << c << std::endl;; std::cout << ""d: "" << d << std::endl;; std::cout << ""e: "" << e << std::endl;; std::cout << ""f: "" << f << std::endl;; }; Simple(float a, float b, float c,float d=1.f) {; std::cout << ""Simple(float a, float b, float c,float d=1.f) with arguments:"" << std::endl;; std::cout << ""a: "" << a << std::endl;; std::cout << ""b: "" << b << std::endl;; std::cout << ""c: "" << c << std::endl;; std::cout << ""d: "" << d << std::endl;; }; };. class Minimal{; public:; Minimal(int a, float b, float c=1.0f) {; std::cout << ""Minimal(int a, float b, float c=1.0f) with arguments:"" << std::endl;; std::cout << ""a: "" << a << std::endl;; std::cout << ""b: "" << b << std::endl;; std::cout << ""c: "" << c << std::endl;; }; Minimal(float a, float b) {; std::cout << ""Minimal(float a, float b) with arguments:"" << std::endl;; std::cout << ""a: "" << a << std::endl;; std::cout << ""b: "" << b << std::endl;; }; };; '''; ). a = int(1); b = float(2.2); c = float(3.3); d = float(4.4). simple = cppyy.gbl.Simple(a, b, c, d); minimal = cppyy.gbl.Minimal(a, b); ```. The constructors in `Simple` mimic the constructors of `TColor`. The `Minimal` class should show the same issue with less constructor arguments. Passing an `int` as first argument is not enough to distinguish between these two constructors; ```; Minimal(int a, float b, float c=1.0f); Minimal(float a, float b); ```; This is the result of the script above; ```; (cppyy-venv) vpadulan@fedorathinkpad-T550 [~/Projects/rootcode/ROOT-GITHUB-7790]: pip freeze; cppyy==1.9.5; cppyy-backend==1.14.3; cppyy-cling==6.21.6; CPyCppyy==1.12.4; (cppyy-venv) vpadul",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7790#issuecomment-828426447:87,Simpl,Simple,87,https://root.cern,https://github.com/root-project/root/issues/7790#issuecomment-828426447,5,['Simpl'],['Simple']
Usability,"IIUC a NullStmt would mean `if (true) {1;;}`. I'd prefer to keep value printing simple and instead invest where it's relevant: devtoolset, debug symbols, llvm upgrade (to llvm 11!), etc. This is a trade-off we should consciously do, and given that this is the first time I hear a request for value printing within nested blocks I'm not yet convinced that it's worth the effort (and yes, that's an additional counter argument). And I'm not just talking dev time but also long-term maintenance: more code, more clang interfaces used.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6644#issuecomment-713611104:80,simpl,simple,80,https://root.cern,https://github.com/root-project/root/issues/6644#issuecomment-713611104,2,['simpl'],['simple']
Usability,"IMO it's okay to remove `pyroot_experimental` without deprecation for 6.22: it was experimental until 6.22. It would certainly help users to check whether `pyroot_experimental` is set, and if so, issue an error message. A simple `if(pyroot_experimental) message(FATAL_ERROR ""pyroot_experimental is now called pyroot! Please reconfigure with -Dpyroot=On"")` will do.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5772#issuecomment-638212832:222,simpl,simple,222,https://root.cern,https://github.com/root-project/root/pull/5772#issuecomment-638212832,2,['simpl'],['simple']
Usability,"If it doesn't bother you too much to split, i'd prefer you do it :-); Indeed, I don't know git well. For example, to update my local repo once a patch has been merged, I must Google the commands to know how to do this. Last time, I didn't even succeed and finally remove my local repo and fork ""root"" again.; The basics of git are quite clear but between rebase, fetch, pull, branches, cherry-pick, I'm a bit lost.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1435#issuecomment-351146796:337,clear,clear,337,https://root.cern,https://github.com/root-project/root/pull/1435#issuecomment-351146796,2,['clear'],['clear']
Usability,"If it helps: I know at least that for instance the [JuliaPlots/Plots](https://github.com/JuliaPlots/Plots.jl) project simply uses a `.zenodo.json` file in their repo which should be automatically parsed, according to [REST API subsection](https://developers.zenodo.org/#add-metadata-to-your-github-repository-release), whenever a new release is created.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8706#issuecomment-914136123:118,simpl,simply,118,https://root.cern,https://github.com/root-project/root/issues/8706#issuecomment-914136123,2,['simpl'],['simply']
Usability,"If method `TROOT::GetFunction()` called multiple times ; with non-existing function name, each call causes invocation of interpreter.; If repeated many times, it may crash ROOT. Simple reproducer:; ```; for (int n=0;n<100000;++n) gROOT->GetFunction(""any"");; ```. In current ROOT it takes ~3 GB for nothing.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14969:178,Simpl,Simple,178,https://root.cern,https://github.com/root-project/root/pull/14969,1,['Simpl'],['Simple']
Usability,"If one wants to replace some servers of a RooAbsArg with; other servers, this is the the only option you have:. ```c++; bool RooAbsArg::redirectServers(const RooAbsCollection& newSetOrig,; bool mustReplaceAll, bool nameChange,; bool isRecursionStep); ```. That's not so great, because if the new servers have different names,; thes old names must be set as the `""ORIGNAME:<myname>""` attribute for; the function to know which servers should be replaced. These attributes are generally not reset, and this mutation of the; server attributes can cause trouble down the line. Notably, this causes trouble in the BatchMode when compiling the; computation graph for a given normalization set. One single new server; might replace differently-named original servers. In that case, the new; servers get *two* ""ORIGNAME:"" attributes and the the `redirectServers()`; function doesn't know what to do. Also, it's inefficient because of the string matching. For this reason, a new overload is suggested, where one can simply; specify what should replace what in a lookup map, and it doesn't matter; if the names are different:. ```c++; bool RooAbsArg::redirectServers(; std::unordered_map<RooAbsArg *, RooAbsArg *> const &replacements; ); ```. The implementation of `redirectServers()` calls; `RooAbsProxy::changePointer()`, for which such a new overload also had; to be added. Using the new `RooAbsArg::redirectServers()` overload that takes a; lookup map of server replacements, the helper class that compiles the computation graph for a given normalization set can be; improved such that it's not necessary to set the `""ORIGNAME:""`; attributes of new servers. This fixes some failures in the RooFit tutorials with BatchMode where; some servers eventually aggregated multiple `""ORIGNAME:""` attributes,; causing `redirectServers()` to error out.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12928:1006,simpl,simply,1006,https://root.cern,https://github.com/root-project/root/pull/12928,1,['simpl'],['simply']
Usability,"If the ZeroMQ system version is too old, we can't use the system C++; headers either (note that `find_package(ZeroMQ)` not only checks if the; library exists, but also if it's a recent version with zmq_ppoll). Therefore, we should also enable `builtin_cppzmq` if no usable ZMQ; version is found, not only `builtin_zeromq`. This closes #10107. @egpbos, FYI",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10111:266,usab,usable,266,https://root.cern,https://github.com/root-project/root/pull/10111,1,['usab'],['usable']
Usability,"If we call TCling::Load on an already loaded library we dlclose and dlopen the library. However, currently we do not have a facility to 'reload'/undo the effect of TCling::LoadPCM. This patch adds a section in the dictionary for de-registration which is reverse to TCling::RegisterModule -- TCling::UnRegisterModule. It tracks down which library is being reloaded and does not trigger a re-read of the rdict pcm. The current stub is can be further expanded to undo the effects caused by TCling::RegisterModule and/or improve the TCling shutdown by running the interpreter-dependent shutdown of the dictionary. The intent of this patch is to fix the failing OSX tests with. Error in <TCling::LoadPCM>: ROOT PCM /.../libTree_rdict.pcm file does not exist; Info in <TCling::LoadPCM>: In-memory ROOT PCM candidate /.../libASImageGui_rdict.pcm; Info in <TCling::LoadPCM>: In-memory ROOT PCM candidate /.../libASImage_rdict.pcm",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5420:145,undo,undo,145,https://root.cern,https://github.com/root-project/root/pull/5420,2,['undo'],['undo']
Usability,"If we enable ORCV2 asynchronous compilation, it is clear we have to enable threading support in LLVM. So the question is whether we do want to enable ORCV2 asynchronous compilation or not, some things to consider:; * cost to all or most (?) of the interpreter calls (which then would likely takes 2 locks instead of one); * risk of dead locks; now that the interpreter takes 2 locks, if there is any way that code that takes the LLVM lock calls code directly or indirectly (via user function or even dlopen) take the ROOT locks then they will be dead locks.; * risk of over-subscribing the CPU (i.e. see the many back and forth in the PPP between the way we setup resource sharing between the experiment framework and the implicit multi-threading). ; * size of the gain; given than most (but indeed not all) compilation are very small, is it worth the costs?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11699#issuecomment-1312791296:51,clear,clear,51,https://root.cern,https://github.com/root-project/root/issues/11699#issuecomment-1312791296,2,['clear'],['clear']
Usability,"If you are deleting an object that is contained in a `TCollection`, you must remove it from that collection, otherwise the collection has a dangling pointer (that it will use during certain operations, including `Clear` but could be any other operation, etc `ls()` ).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14504#issuecomment-1919669738:213,Clear,Clear,213,https://root.cern,https://github.com/root-project/root/issues/14504#issuecomment-1919669738,1,['Clear'],['Clear']
Usability,"If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->; When opening a GDML geometry with TEveManager I get this error message:; ```; Error in <TFile::Init>: HERD.gdml not a ROOT file; ```; Apart from the message, there's no evident malfunctioning and everything works as expected. ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->; No error message if really there is no malfunctioning triggered by using a GDML file. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->; This can be simply reproduced in the Root shell by opening any GDML file as:; ```; $ root; root [0] TEveManager m(500, 500); (TEveManager &) @0x7fbabb351008; root [1] m.GetGeometry(""HERD.gdml""); TEveManager::GetGeometry loading: 'HERD.gdml' -> 'HERD.gdml'.; Info in <TGeoManager::Import>: Reading geometry from file: HERD.gdml; Info in <TGeoManager::TGeoManager>: Geometry GDMLImport, Geometry imported from GDML created; Info in <TGeoManager::SetTopVolume>: Top volume is worldLogical. Master volume is worldLogical; Info in <TGeoNavigator::BuildCache>: --- Maximum geometry depth set to 100; Info in <TGeoManager::CheckGeometry>: Fixing runtime shapes...; Info in <TGeoManager::CheckGeometry>: ...Nothing to fix; Info in <TGeoManager::CloseGeometry>: Counting nodes...; Info in <TGeoManager::Voxelize>: Voxelizing...; Info in <TGeoManager::CloseGeometry>: Building cache...; Info in <TGeoManager::CountLevels>: max level = 4, max placements = 7497; Info in <TGeoManager::CloseGeometry>: 15080 nodes/ 33 volume UID's in Geometry imported from GDML; Info in <TGeoManager::CloseGeom",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7987:1164,simpl,simply,1164,https://root.cern,https://github.com/root-project/root/issues/7987,1,['simpl'],['simply']
Usability,"If you like to have a look into this, I would be happy to guide you. But feel free to tell me if you have to do other stuff, then I'll take over. The array interface is added in `ROOT.py:243`, however no need to change something there. Following the code path, you can look for `AddArrayInterface` in `bindings/pyroot/src/Pythonize.cxx`. Still no need to fix something there ;) Finally, you end up in `STLVectorArrayInterface` and `RVecArrayInterface` in as well in `Pythonize.cxx`. There, the C++ object (a `std::vector` in your case) is read out and the `__array_interface__` dict is added to the Python object, which carries all information needed by numpy to adopt the memory (see [here](https://docs.scipy.org/doc/numpy/reference/arrays.interface.html)). In short: You would need to cover the case of `vector.size() == 0` in `STLVectorArrayInterface` properly. Following code tells me, that the size field is already set properly, but it seems that numpy fails with the `""data"": (0, False)` set in the `__array_interface__`. ```python; >>> import ROOT; >>> x = ROOT.std.vector(""float"")(); >>> x.__array_interface__; {'shape': (0L,), 'version': 3, 'data': (0, False), 'typestr': '<f4'}; ```. So what is the correct thing to do there that `numpy.asarray` returns an empty numpy array?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3528#issuecomment-472348941:58,guid,guide,58,https://root.cern,https://github.com/root-project/root/pull/3528#issuecomment-472348941,2,['guid'],['guide']
Usability,"If you run it with:. `valgrind --leak-check=full --suppressions=$ROOTSYS/etc/valgrind-root.supp root.exe -l -b -q test.cpp+`. you'll get:. ```; ==721499== Invalid read of size 4; ==721499== at 0x4AF2199: TList::Clear(char const*) (in /opt/root/lib/libCore.so.6.30.04); ==721499== by 0x4AF26D4: TList::~TList() (in /opt/root/lib/libCore.so.6.30.04); ==721499== by 0x4AF287C: TList::~TList() (in /opt/root/lib/libCore.so.6.30.04); ==721499== by 0x2729A8D9: deleteTCollections(TObject*) (in /tmp/tmp/test_cpp.so); ==721499== by 0x2729F039: ???; ==721499== by 0x6AA94F7: cling::IncrementalExecutor::executeWrapper(llvm::StringRef, cling::Value*) const (in /opt/root/lib/libCling.so.6.30.04); ==721499== by 0x6A31E4B: cling::Interpreter::RunFunction(clang::FunctionDecl const*, cling::Value*) (in /opt/root/lib/libCling.so.6.30.04); ==721499== by 0x6A32596: cling::Interpreter::EvaluateInternal(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::CompilationOptions, cling::Value*, cling::Transaction**, unsigned long) (in /opt/root/lib/libCling.so.6.30.04); ==721499== by 0x6A327B7: cling::Interpreter::process(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::Value*, cling::Transaction**, bool) (in /opt/root/lib/libCling.so.6.30.04); ==721499== by 0x6B09BC6: cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) (in /opt/root/lib/libCling.so.6.30.04); ==721499== by 0x693813B: HandleInterpreterException(cling::MetaProcessor*, char const*, cling::Interpreter::CompilationResult&, cling::Value*) (in /opt/root/lib/libCling.so.6.30.04); ==721499== by 0x694C6E7: TCling::ProcessLine(char const*, TInterpreter::EErrorCode*) (in /opt/root/lib/libCling.so.6.30.04); ==721499== Address 0xf0ff6dc is 12 bytes inside a block of size 1,000 free'd; ==721499== at 0x484B8AF: operator delete(void*) (in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so); ==721499== ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14504#issuecomment-1919235775:211,Clear,Clear,211,https://root.cern,https://github.com/root-project/root/issues/14504#issuecomment-1919235775,1,['Clear'],['Clear']
Usability,"If you try fitting the obtained slice (slice 21), you will see that in both Minuit and Minuit2 the fit did not work. ; Just run this simple code: ; ```; auto f = TFile::Open(""histo.root"", ""READ"");; auto hist = f->Get<TH2>(""dxyres_vs_eta"");. auto h20 = hist->ProjectionY(""h20"",20,20);; auto h21 = hist->ProjectionY(""h21"",21,21);; auto c1 = new TCanvas();; c1->Divide(1,2);; c1->cd(1);; h20->Fit(""gaus"");; c1->cd(2);; // second fit fails ; h21->Fit(""gaus"");; ```. If you run only the second fit, it works because some default steps sizes are used at the beginning. ; You will get better slice fits if using option `L` when fitting the slices:; ```; hist->FitSlicesY(nullptr, 10, 21, 0, ""LR"");; ```; and defining a restricted range for the fitted functions to avoid fitting the outlier events. Close the issue since it is not a bug.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13852#issuecomment-1777016344:133,simpl,simple,133,https://root.cern,https://github.com/root-project/root/issues/13852#issuecomment-1777016344,2,['simpl'],['simple']
Usability,"If you would provide a tar ball of the html pages, that would (hopefully) be changed from time to time. How do I know if I should re-download the manual or if I have the most up-to-date one? ; In my very first post when I opened this issue, I wrote about `wget`. So some recipes were known before, but anyway thanks for the links. The thing is that to download an archive is much easier than to use tools or recipes.; ""I will close this issue I guess."" - is it because you personally don't need this feature?; When there was User's Guide, it could be always downloaded as one pdf document (there was also an html archive of that). When you move to 'pure internet version', this is a revocation of an existing feature, and some users will not be happy with this. I think if no one except me needs this feature, than probably it is not needed. Maybe other people except me and you should be asked about their opinion on this?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7421#issuecomment-865961497:532,Guid,Guide,532,https://root.cern,https://github.com/root-project/root/issues/7421#issuecomment-865961497,1,['Guid'],['Guide']
Usability,Implement TPad::ClearPrimitives methods,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13506:16,Clear,ClearPrimitives,16,https://root.cern,https://github.com/root-project/root/pull/13506,1,['Clear'],['ClearPrimitives']
Usability,Implement json output for v7 tutorials in the reference guide.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8122:56,guid,guide,56,https://root.cern,https://github.com/root-project/root/pull/8122,2,['guid'],['guide']
Usability,Implement properly the scatter plot palette attributes as requested here: https://github.com/root-project/root/issues/15922; Simplify scatter.C,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16140:125,Simpl,Simplify,125,https://root.cern,https://github.com/root-project/root/pull/16140,1,['Simpl'],['Simplify']
Usability,"Implement the possibility to save TGraph* as .csv, .tsv and .txt; as requested here https://github.com/root-project/root/issues/9491. Test example:. ```; {; auto c = new TCanvas(""c"",""A Simple Graph without axis"",700,500);. const Int_t n = 10;; auto gr = new TGraph(n);; gr->SetTitle(""A Simple Graph"");; gr->GetXaxis()->SetTitle(""X axis"");; gr->GetYaxis()->SetTitle(""Y axis"");. auto gre = new TGraphErrors(n);; gre->GetXaxis()->SetTitle(""X axis"");; gre->GetYaxis()->SetTitle(""Y axis"");; gre->SetTitle(""A Simple Graph with errors"");. auto gra = new TGraphAsymmErrors(n);; gra->GetXaxis()->SetTitle(""X axis"");; gra->GetYaxis()->SetTitle(""Y axis"");; gra->SetTitle(""A Simple Graph with asymmetric errors"");. auto grb = new TGraphBentErrors(n);; grb->GetXaxis()->SetTitle(""X axis"");; grb->GetYaxis()->SetTitle(""Y axis"");; grb->SetTitle(""A Simple Graph with bent errors"");. Double_t x, y, exl, exh, eyl, eyh;; for (Int_t i=0;i<n;i++) {; x = i*0.123;; y = 10*sin(x+0.2);; exl = x*0.01;; exh = x*0.1;; eyl = y*0.01;; eyh = y*0.1;; gr->SetPoint(i,x,y);; gre->SetPoint(i,x,y);; gre->SetPointError(i,exl,eyl);; gra->SetPoint(i,x,y);; gra->SetPointError(i,exl,exh, eyl, eyh);; grb->SetPoint(i,x,y);; grb->SetPointError(i,exl,exh, eyl, eyh);; }. gr->Draw(""A*L"");; gr->SaveAs(""graph.csv"", ""title"");; gr->SaveAs(""graph.tsv"", ""title"");; gr->SaveAs(""graph.txt"", ""title"");; gr->SaveAs(""graph.C"");; gre->SaveAs(""grapherror.csv"", ""title"");; gre->SaveAs(""grapherror.tsv"", ""title"");; gre->SaveAs(""grapherror.txt"", ""title"");; gra->SaveAs(""graphaerror.csv"", ""title"");; gra->SaveAs(""graphaerror.tsv"", ""title"");; gra->SaveAs(""graphaerror.txt"", ""title"");; grb->SaveAs(""graphberror.csv"", ""title"");; grb->SaveAs(""graphberror.tsv"", ""title"");; grb->SaveAs(""graphberror.txt"", ""title"");. }; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10365:185,Simpl,Simple,185,https://root.cern,https://github.com/root-project/root/pull/10365,5,['Simpl'],['Simple']
Usability,Implementation of Clear command in place of .!cls,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13958:18,Clear,Clear,18,https://root.cern,https://github.com/root-project/root/issues/13958,1,['Clear'],['Clear']
Usability,"Implemented corresponding print behavior.; Maybe revise this meta command's behavior in the case of a missing argument (print out the current value, instead of toggling between two defaults), if it turns out to be more intuitive.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/85:219,intuit,intuitive,219,https://root.cern,https://github.com/root-project/root/pull/85,1,['intuit'],['intuitive']
Usability,"Implements a basic `RRawFileUnix::ReadV` implementation using the `io_uring` async backend. ; Note: `ReadV` performs many disjoint reads on one file, not scatter IO using `readv`. Basic means: ; * simple error-handling ; * no interrupt considerations; * ~~no submission queue event batching (large `nReq` may exhaust memory resources)~~ implemented in 8c8a841 . The idea is to benchmark whether io_uring allows us to take advantage of modern IO devices, e.g. SSD queue depth etc. . I also factored out a common test header `io_test.hxx` from `test/RRawFile.cxx` for use in `test/RIoUring.cxx`",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6162:197,simpl,simple,197,https://root.cern,https://github.com/root-project/root/pull/6162,1,['simpl'],['simple']
Usability,Improve and fix rnn forward tests for simple RNN cells and GRU. This commit fixes a failure observed in incremental builds with debug mode,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5327:38,simpl,simple,38,https://root.cern,https://github.com/root-project/root/pull/5327,1,['simpl'],['simple']
Usability,Improve documentation/user experience when using globbing with remote paths,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13258:22,user experience,user experience,22,https://root.cern,https://github.com/root-project/root/issues/13258,2,['user experience'],['user experience']
Usability,"Improve logging:; * Add button in menu bar to show the highest severity message; * Show client log message in Dialog instead of popover. Add simple window management: in view menu add items to switch sides, make single, and hide/show views",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9515:141,simpl,simple,141,https://root.cern,https://github.com/root-project/root/pull/9515,1,['simpl'],['simple']
Usability,Improve the clean up after the ref guide build in order to not pollute the sources.; As requested here: https://github.com/root-project/root/issues/8947,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9076:35,guid,guide,35,https://root.cern,https://github.com/root-project/root/pull/9076,1,['guid'],['guide']
Usability,Improve usability of root-config.bat,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7663:8,usab,usability,8,https://root.cern,https://github.com/root-project/root/pull/7663,2,['usab'],['usability']
Usability,"In CMSSW; - we use `oneapi::tbb::global_control` to set the process' maximum number of threads usable by TBB; - we create a top-level `oneapi::tbb::task_arena` (with the same number of threads), and all data processing is run within one `task_arena::execute()` call; - every call to ROOT I/O is isolated with `oneapi::tbb::this_task_arena::isolate()` call. By adding (or using) a global task arena to ROOT, does this mean, if multiple `TFile`s are writing concurrently, can their tasks be intermingled? Our guess is that ROOT's global task arena would trump the use of `this_task_arena::isolate()`, and allow such intermingling, but we don't really know. We are concerned that by sharing one task arena for unrelated activities it would cause synchronization of those activities because of task stealing. (assuming the explicit arena would trump the `this_task_arena::isolate()` call)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14807#issuecomment-1965316725:95,usab,usable,95,https://root.cern,https://github.com/root-project/root/pull/14807#issuecomment-1965316725,2,['usab'],['usable']
Usability,"In Jira issue [ROOT-10966](https://sft.its.cern.ch/jira/browse/ROOT-10966), it's suggested to include the translated RooFit tutorials in a [private branch](https://github.com/clelange/root/tree/roofit_tutorial/tutorials/roofit) from Clemens Lange. Some of these translations are already upstream, but the ones that didn't work with pyROOT without further hacks were not included. With recent improvements in pyROOT and RooFit, more of the translated tutorials become usable and we can include them upstream. This commit includes all the remaining tutorials that give exactly the same plotting and fitting results as the `.C` counterparts. In the future, pyROOT has to be further developed to also make the remaining translated tutorials run:; * [rf102_dataimport.py](https://github.com/clelange/root/blob/roofit_tutorial/tutorials/roofit/rf102_dataimport.py); * [rf109_chi2residpull.py](https://github.com/clelange/root/blob/9ab46c2ed2a362af1dcc6813707477338539786b/tutorials/roofit/rf109_chi2residpull.py); * [rf207_comptools.py](https://github.com/clelange/root/blob/roofit_tutorial/tutorials/roofit/rf207_comptools.py); * [rf303_conditional.py](https://github.com/clelange/root/blob/roofit_tutorial/tutorials/roofit/rf303_conditional.py); * [rf403_weightedevts.py](https://github.com/clelange/root/blob/roofit_tutorial/tutorials/roofit/rf403_weightedevts.py); * [rf503_wspaceread.py](https://github.com/clelange/root/blob/roofit_tutorial/tutorials/roofit/rf503_wspaceread.py); * [rf508_listsetmanip.py](https://github.com/clelange/root/blob/b0520637a4bfc88bd2eaf44fcb14075ffe2e4f74/tutorials/roofit/rf508_listsetmanip.py); * [rf602_chi2fit.py](https://github.com/clelange/root/blob/roofit_tutorial/tutorials/roofit/rf602_chi2fit.py); * [rf802_mcstudy_addons.py](https://github.com/clelange/root/blob/roofit_tutorial/tutorials/roofit/rf802_mcstudy_addons.py); * [rf803_mcstudy_addons2.py](https://github.com/clelange/root/blob/roofit_tutorial/tutorials/roofit/rf803_mcstudy_addons2.py); * [rf804_mcs",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8091:467,usab,usable,467,https://root.cern,https://github.com/root-project/root/pull/8091,1,['usab'],['usable']
Usability,In TClingCallFunc use new TMutex::Reset/Restore() to clear any and all locks active before entering user code.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1192:53,clear,clear,53,https://root.cern,https://github.com/root-project/root/pull/1192,2,['clear'],['clear']
Usability,"In all actual ABIs, pointers to non-member function are simply addresses, a raw pointer. The return type doesn't matter for the storage. For type-safety, correcting the function's return type to be `void* &` would be indeed an improvement. The cost and complexity of going through lambdas seems fairly high to me. Let's see what @pcanal thinks about this.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3208#issuecomment-449357187:56,simpl,simply,56,https://root.cern,https://github.com/root-project/root/pull/3208#issuecomment-449357187,2,['simpl'],['simply']
Usability,"In any case the `zoombox` for 1D is managed in `TPad.cxx`. I de-activated the alpha mode on Mac to be in the same configuration as yourself. But even with your example I do not see any artefact. May be you can deactivate the zoombox in `TPad::ExecuteEventAxis` and see if the artefact remains ? By the way if you do a simple drawing of a 1D histogram and try to zoom it, do you also see the artefact ?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9763#issuecomment-1026698105:318,simpl,simple,318,https://root.cern,https://github.com/root-project/root/issues/9763#issuecomment-1026698105,2,['simpl'],['simple']
Usability,"In case of named arguments, the RooFormula will replace the argument; names with `x[0]` to `x[n]`. There are two things that can go wrong if; RooFormula is not implemented right. First, if there is a variable named; ""x"" it should only be substituted if the matching substring is not; followed by ""["", to not replace existing x[i]. Second, variables with; integer names like ""0"" should only be substituted if the match is not; followed by a ""]"", again to avoid replacing x[i]. This test checks that; these cases are handled correctly. The second case was so far not dealt with correctly, but with this; commit it is. A corresponding unit test was also implemented. The preprocessor commands in `RooFormula` were also reorganized; slightly, such that one can test the `TPRegexp` backend simply by; commenting out the `define ROOFORMULA_HAVE_STD_REGEX`. This pull request fixes an issue reported in the forum:; https://root-forum.cern.ch/t/a-strange-bug-in-rf708-bphysics-c/49152/2",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10105:785,simpl,simply,785,https://root.cern,https://github.com/root-project/root/pull/10105,1,['simpl'],['simply']
Usability,"In db1a2ceb40 (#9352), the C++ version of the rf408 tutorial was; improved:. * simplify code; * remove race condition; * fix typos. In this commit, the same changes are also applied to the corresponding; Python tutorial. Furthermore, two problems exclusive to the Python version were fixed:. * Replace second `RooDataSetHelper` with `RooDataHistHelper`; * Fix line breaks in data printing (now the output is formatted just; like in the C++ version). Closes #9360.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10893:79,simpl,simplify,79,https://root.cern,https://github.com/root-project/root/pull/10893,1,['simpl'],['simplify']
Usability,"In general, I think this is a good change. Can you confirm that nothing we do in Windows is affected by this change? It is not clear to me what ""creating Windows installers automatically"" actually means.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16433#issuecomment-2354468531:127,clear,clear,127,https://root.cern,https://github.com/root-project/root/pull/16433#issuecomment-2354468531,2,['clear'],['clear']
Usability,"In most drawables and aggregations provide public access to the attributes.; One can directly assign value to such member like:; ```cpp; line->line.style = 12;; text->text.font.face = ""Arial"";; ```; And one always can check if attribute `Has()` value or `Clear()` it like:; ```cpp; if (!line->line.style.Has()) // do somthing;; text->text.font.face.Clear();; ```; Introduce several new aggregations like `RAttrAxisTitle`, `RAttrAxisLabels`, `RAttrAxisTicks`, `RAttrFont` to let provide syntax:; ```; frame->x.labels.font.size = 12;; frame->y.ticks.color = RColor::kRed;; ```; Sometime assign operator defined in aggregation to let assign value to whole aggregation like:; ```; frame->x.labels.font = 11;; ```; This will assign ROOT font type 11 to `RAttrFont` which is `face = ""Courier New""; style = ""oblique""; weight = ""bold"";`. Adjust all tests and tutorials. Waiting for fixing cling error https://github.com/root-project/root/issues/8547 - all python tests should fail now",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8566:255,Clear,Clear,255,https://root.cern,https://github.com/root-project/root/pull/8566,2,['Clear'],['Clear']
Usability,"In my analysis program I faced a memory leak which was caused by `TH3::DoProject2D` according to `valgrind --leak-check=full` and independently by simple git dissection. Valgrind report:; ```; ==24570== 114,000 (5,160 direct, 108,840 indirect) bytes in 5 blocks are definitely lost in loss record 16,382 of 16,451; ==24570== at 0x483FF3F: operator new(unsigned long) (vg_replace_malloc.c:422); ==24570== by 0x4D9CEF9: TStorage::ObjectAlloc(unsigned long) (in /opt/ROOT-6.24.06/lib/libCore.so.6.24.06); ==24570== by 0x577B7DF: TH3::DoProject2D(char const*, char const*, TAxis const*, TAxis const*, bool, bool, bool, bool) const (in /opt/ROOT-6.24.06/lib/libHist.so.6.24.06); ==24570== by 0x5776AA7: TH3::Project3D(char const*) const (in /opt/ROOT-6.24.06/lib/libHist.so.6.24.06); ```. So I quickly looked at the source code and found TH2D objects are created with the new operator but newer deleted.; https://github.com/root-project/root/blob/1f9dc812978722660f4a5f8310e0ca5fdf442ebe/hist/hist/src/TH3.cxx#L2114. Usually this if-branch in this function is avoided because TH2 is already created (if I understand the code above correctly), but I unfortunately chose the same name for all of my TH3 hists. [Here](https://github.com/root-project/root/files/8488019/report.txt) is my code which causes the memory leak.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10400:147,simpl,simple,147,https://root.cern,https://github.com/root-project/root/issues/10400,1,['simpl'],['simple']
Usability,In principle I agree with Philippe: the cost of checking out root.git and building only the minuit2 subset is minimal. But we're not going to make a deal breaker out of this: as long as our (esp maintenance) cost of integrating your approach is minimal we should just merge it. Guilherme will guide you through the implementation issues should there be any left.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1680#issuecomment-370741281:293,guid,guide,293,https://root.cern,https://github.com/root-project/root/pull/1680#issuecomment-370741281,2,['guid'],['guide']
Usability,"In principle, it is clear what needs to happen, but I would like some input from @pcanal how throwing exceptions in these older parts of ROOT can best be handled (for the newer parts we use `ROOT::Experimental::RException`, but we cannot use this here).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14552#issuecomment-1943897509:20,clear,clear,20,https://root.cern,https://github.com/root-project/root/issues/14552#issuecomment-1943897509,2,['clear'],['clear']
Usability,"In principle, the user's guide is frozen. We now rely on the [Manual](https://root.cern/manual/) and the [reference guide](https://root.cern/doc/master/).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12551#issuecomment-1485254013:25,guid,guide,25,https://root.cern,https://github.com/root-project/root/pull/12551#issuecomment-1485254013,4,['guid'],['guide']
Usability,"In reply to: https://github.com/root-project/root/pull/8703#issuecomment-920044106. > You mean keeping the average of the last $x$ MB written per column? . Not quite, I meant simply an overall average, i.e. simply keeping `total_number_of_bytes` and `total_number_of_compressed_bytes` for each column and then average compression ration is a simple division. But ... actually ... closer to the original proposal is simply the ""total_number_of_bytes_in_all_flushed_clusters"" and ""corresponding_compressed_size"" (i.e. a per RNtuple running total). However this makes me thing of another (potential more noticeable) instability. If there is 2 columns; column A with an constant/average compression ration of 100 and column B with a constant/average compression ration of 1 (or 1.1 :) ) but both columns are collections. If for most of the entries (for more proposal) or only the last cluster (for the PR's proposal), column A has a lot of data and column B has very little data, then the compression ration use for prediction will be 100 (ish). If suddenly the cardinality flip/flop and column A has very little data but column B has a lot of data, then the compression ration of that cluster will be 1 but it would still contains `100 * target_cluster_size_in_compressed_bytes`, namely in this case 100 times larger (on disk) than any other cluster. Obviously this is an extreme example but it points to the benefit of using `per column` compression ratio rather than overall compression ratio (whether it is whole-ntuple or last (few) clusters). The cost for implementation seems to be that after each `Fill`, each column would have to increment a (global-per-RNtuple) counter with `data_written / estimated_compression_ratio` which:; * for collection column should be a small over-head; * for single value column should be a large over-head. however conversely, an accurate estimate is ""only important"" for collection column, so maybe an hybrid solution is a workable compromise?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8703#issuecomment-920229853:175,simpl,simply,175,https://root.cern,https://github.com/root-project/root/pull/8703#issuecomment-920229853,8,['simpl'],"['simple', 'simply']"
Usability,"In some cases with template instantiation from pyroot together with RDF code which should fail to compile with clear error messages leads instead to cryptic output. Even worse, execution continues and gives undefined results. Example. ```python; import ROOT. ret = ROOT.gInterpreter.Declare('#include ""test.h""'). print(""declare ret"", ret). print(""creating helper""); helper = ROOT.helper[ROOT.std.vector[""double""]](). d = ROOT.ROOT.RDataFrame(1000). print(""Define with helper""); d = d.Define(""fx"", helper, []); print(""done define""). res = d.Sum(""fx""). print(res.GetValue()); ```. ```cpp; template <typename T>; class helper {. public:. helper() {}. std::size_t operator() () {; const double res = 0.;; res = T{0, 0}.size();; return res;; }. };; ```. Note the assignment to ```const double``` which should fail to compile. output (centos stream 8, root 6.26/10); ```; declare ret True; creating helper; Define with helper; IncrementalExecutor::executeFunction: symbol '_ZN6helperISt6vectorIdSaIdEEEclEv' unresolved while linking symbol '__cf_13'!; You are probably missing the definition of helper<std::vector<double, std::allocator<double> > >::operator()(); Maybe you need to load the corresponding shared library?; done define; 9.408421539373414e+16; ```. (if the spurious const is removed then instead one gets the correct output of 2000 and no error message)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11854:111,clear,clear,111,https://root.cern,https://github.com/root-project/root/issues/11854,1,['clear'],['clear']
Usability,"In the RooBatchCompute CPU library, all scalar inputs have to be copied; n times into a buffer that is as long as the SIMD registers, to allow; for vectorization in all cases. To avoid frequent memory allocations, this buffer was made a `static`; variable in the original implementation of the batchcompute library,; which of course made it non-threadsafe. This is now hitting us, because RooFit needs to be able to do multiple; fits concurrently. This is a requirement for CMSSW, and a blocker for; ROOT master adoption in CMSSW since the new CPU backend is the default:; https://github.com/cms-sw/cmsdist/pull/9034. This commit fixes the concurrency problem by doing the buffering in the; DataMaps that are used in the `RooFit::Evaluator`. Like this, multiple; computation graphs can be concurrently evaluated. It was tested with the ATLAS benchmarks in `rootbench` that the fitting; performance remains the same. This PR also makes some code style and memory management improvements documented in the commit messages. It also updates the documentation to make clear the new CPU backend is now the default, which was not done in this PR:; https://github.com/root-project/root/pull/14742",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14877:1063,clear,clear,1063,https://root.cern,https://github.com/root-project/root/pull/14877,1,['clear'],['clear']
Usability,"In the `rf205` tutorial and the associated stressRooFit test, the `bkg` RooAddPdf was created using the `sig1frac`, while it is clearly the idea to use the `bkg1frac` parameter. This is fixed in this commit, also fixing the name of the `bkg1frac` parameter, which was accidentally set to `sig1frac` (probably a copy-paste error). However, to not change the output of the tutorial and the stressRooFit test, the value of `bkg1frac` was set to the same value as `sig1frac`, such that this commit only fixes the model but doesn't change the tutorial and test output.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11985:128,clear,clearly,128,https://root.cern,https://github.com/root-project/root/pull/11985,1,['clear'],['clearly']
Usability,"In the autogenerated dictionary sources I see. ```; // Since CINT ignores the std namespace, we need to do so in this file.; namespace std {} using namespace std;; ```. (this is from 6.14.08. 6.22.02 has a slightly different comment of `The generated code does not explicitly qualifies STL entities` (sic), but still does the `using...`). This is placed very early on, even before the include of the header files passed as arguments. Unfortunately, this causes problems, specifically when one of those header files pulls in Kokkos core headers, and there's a name clash with `rank` which is a free function in the kokkos namespace, and std::rank. ```; /opt/kokkos/cuda/3.2-shlib/include/Kokkos_View.hpp:1896:30: error: return type specified for deduction guide; KOKKOS_INLINE_FUNCTION constexpr unsigned rank(const View<D, P...>& V) {; ^; /opt/kokkos/cuda/3.2-shlib/include/Kokkos_View.hpp:1895:42: error: decl-specifier in declaration of deduction guide; template <typename D, class... P>; ^ ; /opt/kokkos/cuda/3.2-shlib/include/Kokkos_View.hpp:1895:32: error: decl-specifier in declaration of deduction guide; template <typename D, class... P>; ^~ ; /opt/kokkos/cuda/3.2-shlib/include/Kokkos_View.hpp:1896:30: error: 'signed' or 'unsigned' invalid for '__dguide_rank'; KOKKOS_INLINE_FUNCTION constexpr unsigned rank(const View<D, P...>& V) {; ^; /opt/kokkos/cuda/3.2-shlib/include/Kokkos_View.hpp:1896:1: error: deduction guide for 'std::rank< <template-parameter-1-1> >' must have trailing return type; KOKKOS_INLINE_FUNCTION constexpr unsigned rank(const View<D, P...>& V) {; ^~~~; /bld4/opt/gcc/8.4.0/include/c++/8.4.0/type_traits:1251:8: note: 'template<class> struct std::rank' declared here; struct rank; ^~~~; ```. Is there any way to make the `using namespace` appear AFTER the include of the user header files instead of before?. If I manually edit the generated file, and move the `using namespace` to after the includes, it compiles fine. FWIW, the actual compilation is done with nvcc 11",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6343:755,guid,guide,755,https://root.cern,https://github.com/root-project/root/issues/6343,2,['guid'],['guide']
Usability,"In the batched evaluation mode, the RunContext object that cached the values of nodes in the computation graph has so far been completely cleared after each NLL evaluation. In this PR, a new class `RunContextTracker` is introduced. It makes use of the `RooChangeTracker` class to determine whether a cached result for a given node needs to be recomputed after the change of a given fundamental parameter or not. This should speed up likelihood fits, as often only one fundamental parameter is changed at the time for the numeric gradient determination. For the example [rf303_conditional.C](https://root.cern.ch/doc/master/rf303__conditional_8C.html), a reproducible 10 % speedup was observed in batch mode after this PR. The speedup is expected to be more significant for wider computational graphs where more intermediate node results can be kept in the RunContext after each evaluation. This PR implements one of the ideas suggested in https://github.com/root-project/root/issues/6557, namely the bullet point of ""Don't clear all intermediate values in batch fits between fit cycles. Only the ones that changed."". This might be interesting for @lmoneta, @hageboeck and @manolismih.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7344:138,clear,cleared,138,https://root.cern,https://github.com/root-project/root/pull/7344,2,['clear'],"['clear', 'cleared']"
Usability,"In the current C++ working paper:; [expr.prim.lambda]/10: ""A lambda-expression whose smallest enclosing scope is a block scope (3.3.3) is a local lambda expression; any other lambda-expression shall not have a capture-default or simple-capture in its lambda-introducer."". As we decl-extract lambdas we should forbid capture-defaults. But we decl-extract after Sema. So indeed - a post-processing step makes sense, but it should complain about *any* capture default. [expr.prim.lambda]/11: ""An entity that is designated by a simple-capture...and shall be *this ... or a variable with automatic storage duration"": this should be noticeable by Sema, except for transactions that declare both the variable and the capture in the same input. So here, too, we'll need a postprocessing step - but it's not as urgent. @marsupial - do you think you could widen the first check (i.e. forbid *any* capture default)?. And yes, we need https://github.com/root-project/cling/commit/9313dbca01b00f1399b14b256925b3f99f0be97b",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/631#issuecomment-307748102:229,simpl,simple-capture,229,https://root.cern,https://github.com/root-project/root/pull/631#issuecomment-307748102,2,['simpl'],['simple-capture']
Usability,"In the current development cycle leading up to ROOT 6.28, there was some performance regression in RooStats tutorials like `HybridInstructional.C`, which can be seen for example in this CI bot comment:. https://github.com/root-project/root/pull/11740#issuecomment-1333720963. For some reason, there are now numeric integrals in the log that don't pop up in ROOT 6.26:; ```; [#1] INFO:NumericIntegration -- RooRealIntegral::init(py_Int[b]) using numeric integrator RooIntegrator1D to calculate Int(b); [#1] INFO:NumericIntegration -- RooRealIntegral::init(px_Int[b]) using numeric integrator RooIntegrator1D to calculate Int(b); [#1] INFO:NumericIntegration -- RooRealIntegral::init([py_X_prior_b_X_px]_Norm[b]_denominator_Int[b]) using numeric integrator RooIntegrator1D to calculate Int(b); [#1] INFO:NumericIntegration -- RooRealIntegral::init(py_Int[b]) using numeric integrator RooIntegrator1D to calculate Int(b); [#1] INFO:NumericIntegration -- RooRealIntegral::init(px_Int[b]) using numeric integrator RooIntegrator1D to calculate Int(b); ```. RooFit in ROOT master needs to be fixed again such that these integrals don't happen. Since this is a performance regression, the priority to fix this is high. A simpler script to reproduce the performance regression outside of RooStats is this one:; ```C++; void repro(); {; RooWorkspace w;; w.factory(""Poisson::px(x[150,0,500],b[100,0,300])"");; w.factory(""Poisson::py(y[100,0,500],prod::taub(tau[1.],b))"");; w.factory(""Uniform::prior_b(b)"");; w.factory(""PROD::foo(px|b,py,prior_b)"");. RooRealVar& x = *w.var(""x"");; RooRealVar& b = *w.var(""b"");; RooAbsPdf& foo = *w.pdf(""foo"");. std::unique_ptr<RooAbsReal> integ{foo.createIntegral({b}, {b, x})};. for(int i = 0; i < 10; ++i) {; x.setVal(i % 500);. std::cout << integ->getVal() << std::endl;; }; }; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11814:1213,simpl,simpler,1213,https://root.cern,https://github.com/root-project/root/issues/11814,1,['simpl'],['simpler']
Usability,"In the end, the reason is much simpler: my fix for the dictionary build is simply too narrow. In fixing `GetNormalizedName` but not, for example, the `PrintingPolicy` in `GetPartiallyDesugaredNameWithScopeHandling`, ROOT internally disagrees on normalized class names and therefore doesn't find the IO rules stored in a `map` with the class name as key. Should be fixed with the next push.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10294#issuecomment-1137026344:31,simpl,simpler,31,https://root.cern,https://github.com/root-project/root/pull/10294#issuecomment-1137026344,4,['simpl'],"['simpler', 'simply']"
Usability,"In the special RooFit workspace functions implemented in; RooFactoryWSTool, the tool creates a given RooFit object that is then; imported in the workspace. For example, a RooAddPdf is created when you; use `SUM` in `RooWorkspace::factory()`. When these objects are; imported, they are copied, so the original object is still owned by the; RooFactoryWSTool. In some cases, the original object is not deleted,; causing a memory leak and even worse duplicate client nodes in the; computation graph. This commit fixes that. Simple reproducer for the problem with the duplicate client nodes that; this commit solves:. ```C++; RooWorkspace w;; w.factory(""Gaussian::g1(x[0,20],mx1[10,0,20],sx1[3,0,10])"");; w.factory(""Gaussian::g2(x,mx2[10,0,20],sx2[1,0,10])"");; w.factory(""Gaussian::g3(y[0,20],my[10,0,20],sy[2,0,10])"");; w.factory(""Polynomial::pol(y,a[-0.01,-0.05,0.1])"");. w.factory(""SUM::pdfx(fx[0.2,0,1]*g1,g2)"");; w.factory(""SUM::pdfy(fy[0.4,0.,1.]*g3,pol)"");. w.pdf(""g1"")->Print(""V"");; w.pdf(""g3"")->Print(""V"");; ```. You will see that `pdfx` appears twice as a client of `g1`, and `pdfy`; appears twice as a client of `g3`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9120:520,Simpl,Simple,520,https://root.cern,https://github.com/root-project/root/pull/9120,1,['Simpl'],['Simple']
Usability,"In v6-30 we no longer record the kIsOnHeap and kNotDeleted, however older version of ROOT do not yet set them properly when reading. This leads to spurrious error message like:. ```; Error in <TList::Clear>: A list is accessing an object (0x2d77b50) already deleted (list name = TList); ```. But also failure in some case where action is not taken because the object is incorrect thought to be already deleted.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12845:200,Clear,Clear,200,https://root.cern,https://github.com/root-project/root/pull/12845,1,['Clear'],['Clear']
Usability,Include New Deep Learning Module with support for CNN.; Integrate the development of the 2017 GSOC students.; For the moment this PR does not include the RNN and the DAE,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1826:17,Learn,Learning,17,https://root.cern,https://github.com/root-project/root/pull/1826,1,['Learn'],['Learning']
Usability,"Increase the speed of BDT training. For regression analysis with Grad boosting, the speed gain is almost 2x.; For multiclass the gain depends on the number of multiclasses.; For classification: haven't done the test. Non BDT algorithms will also be faster (assuming the progress bar is enabled).",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/100:270,progress bar,progress bar,270,https://root.cern,https://github.com/root-project/root/pull/100,1,['progress bar'],['progress bar']
Usability,Indeed the ref-guide build for 6.24 did not start yet (looking for an executor) ; https://lcgapp-services.cern.ch/root-jenkins/view/ROOT/job/root-makedoc-v624/; so it should be fine.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8781#issuecomment-1009992846:15,guid,guide,15,https://root.cern,https://github.com/root-project/root/issues/8781#issuecomment-1009992846,2,['guid'],['guide']
Usability,"Indeed this has nothing to do with TRatioplot. It can be reproduced with the simple following macro:. ```; void lineonaxis(){; auto c1 = new TCanvas(""c1"", ""c1"",10,53,700,525);; gPad->DrawFrame(-5,-1.25,5,1.25);; TLine *line = new TLine(-5,-0.5,5,-0.5);; line->SetLineStyle(2);; line->Draw();; }; ```; Which, on my Mac, gives:; <img width=""648"" alt=""Screenshot 2024-02-13 at 13 21 33"" src=""https://github.com/root-project/root/assets/4697738/26ecd350-74f0-4529-b84b-decc8c210490"">; It is a precision issue. It might be that on an other machine it will not give the same result.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14546#issuecomment-1941397971:77,simpl,simple,77,https://root.cern,https://github.com/root-project/root/issues/14546#issuecomment-1941397971,2,['simpl'],['simple']
Usability,"Indeed, I should have updated the PR with a comment earlier. At least we can raise the error on the python side though, the call to the pythonization happens before the C++ constructor is called. Maybe the check can be something more specific like; ```python; url = ROOT.TUrl(filename); if url.GetProtocol() != ""file"":; raise ValueError(); ```; instead of the current more simplistic check",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11063#issuecomment-1198458818:373,simpl,simplistic,373,https://root.cern,https://github.com/root-project/root/pull/11063#issuecomment-1198458818,2,['simpl'],['simplistic']
Usability,"Indeed, as said on the forum it is quite simple to reproduce this option with the current ROOT. See the script and plot I posted on the forum. If that enough for you we can close this issue.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9505#issuecomment-1092679466:41,simpl,simple,41,https://root.cern,https://github.com/root-project/root/issues/9505#issuecomment-1092679466,2,['simpl'],['simple']
Usability,"Indeed, but for that we would need to change the public interfaces of (at least) `TLatex` and `TMathText`.; So now my question is the following: do we simply fix the compilation warnings/errors on Windows, or do we want to make it working with all possible characters, requiring new interfaces with `char32_t`?. I'll let @couet comment on that (BTW, it doesn't work on Linux or Mac either).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13091#issuecomment-1614327543:151,simpl,simply,151,https://root.cern,https://github.com/root-project/root/issues/13091#issuecomment-1614327543,2,['simpl'],['simply']
Usability,"Indeed, nothing to do with TF2. An even simpler reproducer is:; ```; void w(); {; auto c1 = new TCanvas();; auto pad = new TPad(""p"",""p"", 0.5, 0 , 1., 1);; pad->Draw();. auto h0 = new TH2F(""h0"",""h0"", 10, 0.02, 15, 10, -8, 8);; h0->Draw();. // pad ->cd(); // uncomment this line an it will crash. auto h1 = new TH2F(""h1"",""h1"", 10, 0.01, 14, 10, -10, 10);; h1->Draw(""same"");; }; ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9869#issuecomment-1036292700:40,simpl,simpler,40,https://root.cern,https://github.com/root-project/root/issues/9869#issuecomment-1036292700,2,['simpl'],['simpler']
Usability,"Indeed, the presence of the last optional parameter of the 'TSQLStatement ::SetBinary', which is called 'maxsize', looks very strange for me. If i set binary buffer (void* 'mem' variable) and set its size in bytes ('size' variable), what does the 'maxsize' variable mean? Isn't it obvious how much memory needs to be allocated if the 'size' parameter is specified?; 'maxsize' optional parameter may specify something else, but, unfortunately, i can't find meaning of the parameters in the current ROOT reference guide. Please, add this check, because the presence of the both 'size' and 'maxsize' variables is not obvious, at least, for me. So, i never used the 'maxsize' parameter. After the addition, i'll check one more. Other tests have passed well.; The fixes in older branches is not required (i can use own patches). But if it doesn't take a long time for you, then it would be valuable, because the last FairRoot version, we are based on, has ROOT 6.20.08.; Thank you. With respect, Konstantin.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7127#issuecomment-774529790:512,guid,guide,512,https://root.cern,https://github.com/root-project/root/issues/7127#issuecomment-774529790,2,['guid'],['guide']
Usability,"Indeed, we don't guarantee ABI stability for patch releases. Most people cope (it has never been a huge issue) and it gives us the freedom to keep the LHC experiments working at a reasonable cost ;-) Patch level for us simply means ""it does not have new features, only bug fixes"".",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7781#issuecomment-813669671:219,simpl,simply,219,https://root.cern,https://github.com/root-project/root/issues/7781#issuecomment-813669671,2,['simpl'],['simply']
Usability,Indicate clearly that TRandom::GetSeed cannot be used to store state of generators for the derived classes (e.g. TRandom3). Modify implementation of TRandom3::GetSeed to return current state element used to generate the random number. This will change after each call to TRandom3::Rndm() instead before only the first state element was returned and it was not very useful still it is changing only after 624 calls to the random number. . This addresses the JIRA items ROOT-10059 and ROOT-10081 and github issue #6624,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6723:9,clear,clearly,9,https://root.cern,https://github.com/root-project/root/pull/6723,1,['clear'],['clearly']
Usability,"Info in <TGeoManager::CloseGeometry>: 3 nodes/ 2 volume UID's in Geometry imported from GDML; Info in <TGeoManager::CloseGeometry>: ----------------modeler ready----------------; (TGeoManager *) 0x556180ad1d50; root [1] geo->CheckOverlaps(); Info in <TGeoNodeMatrix::CheckOverlaps>: Checking overlaps for barrel and daughters within 0.1; warning: Failed to call `P020_REveGeoPainter()` to execute the macro.; Add this function or rename the macro. Falling back to `.L`.; Check overlaps: [==========] 3 [100.00 %] 00:00 ; Info in <TGeoNodeMatrix::CheckOverlaps>: Number of illegal overlaps/extrusions : 1. root [2] geo->PrintOverlaps(); === Overlaps for Default ===; = Overlap ov00000: barrel/plate_1 overlapping barrel/plate_2 ovlp=10.0823; root [3] auto* vol1 = geo->GetTopNode()->GetDaughter(0)->GetVolume(); (TGeoVolume *) 0x556181070960; root [4] auto* vol2 = geo->GetTopNode()->GetDaughter(1)->GetVolume(); (TGeoVolume *) 0x556181070960; root [5] auto* mat1 = geo->GetTopNode()->GetDaughter(0)->GetMatrix(); (TGeoMatrix *) 0x5561811a2390; root [6] auto* mat2 = geo->GetTopNode()->GetDaughter(1)->GetMatrix(); (TGeoMatrix *) 0x5561811b19c0; root [7] TGeoChecker ch(geo); (TGeoChecker &) Name: TGeoChecker Title: a simple geometry checker; root [8] overlap = ch.MakeCheckOverlap(""overlap"", vol1, vol2, mat1, mat2, false, 0.1); (TGeoOverlap *) 0x55618132f820; root [9] overlap->Print(); = Overlap : overlap ovlp=3.51789; - first volume: plate at position:; matrix - tr=1 rot=1 refl=0 scl=0 shr=0 reg=0 own=0; 0.959245 0.282576 0.000000 Tx = 75.401418; -0.282576 0.959245 0.000000 Ty = 214.140485; 0.000000 0.000000 1.000000 Tz = 25.354000; - second volume: plate at position:; matrix - tr=1 rot=1 refl=0 scl=0 shr=0 reg=0 own=0; 0.964608 0.263688 0.000000 Tx = 71.182515; -0.263688 0.964608 0.000000 Ty = 215.579615; 0.000000 0.000000 1.000000 Tz = 25.354000; ```. ### Setup; This occurs on an install of ROOT 6.26.06 with spack (v0.19) as well as a compiled version of `master`. ### Additional con",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11784:3519,simpl,simple,3519,https://root.cern,https://github.com/root-project/root/issues/11784,1,['simpl'],['simple']
Usability,Inspired by this forum post:; https://root-forum.cern.ch/t/install-root-in-my-directory-in-a-share-server/60150/2. We can simply require the needed components to avoid manual checking and emitting `FATAL_ERROR`.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16008:122,simpl,simply,122,https://root.cern,https://github.com/root-project/root/pull/16008,1,['simpl'],['simply']
Usability,"Instead of TTree::AddClone + TTree::CopyAddresses, use the data-block; callback mechanism to reset addresses when needed.; We cannot trust TTree::CopyAddresses to do the right thing because; the output branch might be a different kind of branch than the input; branch (e.g. TBranch vs TBranchElement), which leads to the problem; described at #8295 . This fixes #8295 for what regards Snapshot. This PR also adds support for ""data-block"" callbacks, wired to `TChain`'s `TNotify` mechanism, to be able to react to changes of the underlying TTree (e.g. by resetting the input address of Snapshot's output branches). This is a pre-requisite for the fix, but it also makes it relatively simple to implement `DefinePerSample` as requested in #6745 . As a side-effect, since we now don't rely on `TTree::CopyAddresses` in `Snapshot` anymore, this PR should also fix #7727 .",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8375:683,simpl,simple,683,https://root.cern,https://github.com/root-project/root/pull/8375,1,['simpl'],['simple']
Usability,Integration of all different layers in one Deep Learning module.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/817:48,Learn,Learning,48,https://root.cern,https://github.com/root-project/root/pull/817,1,['Learn'],['Learning']
Usability,Interesting for learning what would happen.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15438#issuecomment-2099260382:16,learn,learning,16,https://root.cern,https://github.com/root-project/root/pull/15438#issuecomment-2099260382,2,['learn'],['learning']
Usability,"Introduce TWebCanvas::AddFont which register font by name and filename. Simple demo is:. ```; {; auto indx = TWebCanvas::AddFont(""custom"", ""/home/user/build/root/fonts/monotype.ttf"");; gStyle->SetStatFont(indx);; auto c1 = new TCanvas(""c1"", ""c1"", 800, 600);; auto hpx = new TH1F(""hpx"", ""hpx title"", 100, -5, 5);; hpx->FillRandom(""gaus"", 10000);; hpx->Draw();; }; ```. This will set monotype font for stats box. Can be used with any objects.; Address issue #14065. Also major JSROOT update with providing in-browser support of PDF. ; Now PDF file can be generated directly in JavaScript code - using https://github.com/parallax/jsPDF and https://github.com/yWorks/svg2pdf.js. This also include support of custom fonts. . Many other fixes in JSROOT.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14086:72,Simpl,Simple,72,https://root.cern,https://github.com/root-project/root/pull/14086,1,['Simpl'],['Simple']
Usability,"Introduce a new connectivity check macro to only check for internet connection if needed. If the connection check fails, it means that the feature requiring the; internet connection has to be disabled. This is not allowed when; `fail-on-missing=ON`. Therefore, we can raise the fatal error already in; the connectivity check macro, to avoid some code repetition. The connectivity check macro takes parameter to propagate a hint; to the user on what option to set if he wants to avoid the configuration; code branch that requires the connection check. Also, move all connection check related things in; `SearchInstalledSoftware` to keep things simpler. This PR implements something suggested by @pcanal in this comment: https://github.com/root-project/root/pull/15467#discussion_r1596973607. Closes #11603.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16594:643,simpl,simpler,643,https://root.cern,https://github.com/root-project/root/pull/16594,1,['simpl'],['simpler']
Usability,"Introduce special handler for connecting and disconnecting events; Avoid usage of predefined ""CONN_READY"" and ""CONN_CLOSED"" arguments; Adjust existing widgets and tutorials; These changes in callbacks **brakes backward compatibility** - in my mind, it was necessary. Hide RWebWindowsManager for ordinary users - provide convenience `RWebWindow::Create()` and `RWebWindow::TerinateROOT()` methods. Now one can include just `ROOT/RWebWindow.hxx` to get all necessary functionality. Provide tutorial with simple openui5 panel - of course, using new methods",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4035:502,simpl,simple,502,https://root.cern,https://github.com/root-project/root/pull/4035,1,['simpl'],['simple']
Usability,"Introduced tutorial on how to create a Kahan summation, with a simple example on how it can give better results than the classical one. This issue solves the Jira issue ROOT-9461",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2328:63,simpl,simple,63,https://root.cern,https://github.com/root-project/root/pull/2328,1,['simpl'],['simple']
Usability,"Introduces the ""trivially constructible"" and ""trivially destructible"" traits for the types wrapped by an RField. Maintaining these traits allows for optimizations when reading collections: for collections of simple types (e.g., `int`s, `float`s), we don't need to call the element constructors and destructors when the collection changes size from event to event. For the vector-heavy ATLAS OpenData benchmark, this results in a 5-10% performance improvement both with RDF and with RNTuple views (hot disk cache, zstd compressed input). Fixes #10520",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11628:208,simpl,simple,208,https://root.cern,https://github.com/root-project/root/pull/11628,1,['simpl'],['simple']
Usability,Is it clear what `ratioplot1->Close()` is supposed to mean?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14855#issuecomment-1974795728:6,clear,clear,6,https://root.cern,https://github.com/root-project/root/issues/14855#issuecomment-1974795728,2,['clear'],['clear']
Usability,"Is it possible to get the `QualType` for a template argument without parsing Clang's AST? If so, that would be much easier. I was able to simplify some of this code by implementing the template in the header, but an AST transformer is still needed to get the `QualType` and add it to the template specialization.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16214#issuecomment-2295093885:138,simpl,simplify,138,https://root.cern,https://github.com/root-project/root/pull/16214#issuecomment-2295093885,2,['simpl'],['simplify']
Usability,"Is mangling supposed to address those characters too? Maybe there is something simple which could be done for names of objects in ROOT, for example keeping only letters and numbers and postponing the hash of the name? In the end we need this for autogenerated code, but maybe I am wrong.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15377#issuecomment-2084946546:79,simpl,simple,79,https://root.cern,https://github.com/root-project/root/pull/15377#issuecomment-2084946546,2,['simpl'],['simple']
Usability,"Is there a way to see the variable values in the core with gdb? I don't think that we can understand this without seeing them. A simple gethostname works properly, as expected.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6948#issuecomment-760382601:129,simpl,simple,129,https://root.cern,https://github.com/root-project/root/issues/6948#issuecomment-760382601,2,['simpl'],['simple']
Usability,Is this a simple pythonisation or do we need something more?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7685#issuecomment-1925198788:10,simpl,simple,10,https://root.cern,https://github.com/root-project/root/issues/7685#issuecomment-1925198788,2,['simpl'],['simple']
Usability,"It always works when you try on your own machine, and then fails when a different version of CMake or a different configuration is used. That's a lesson usually learned the hard way with CMake :-). > Also, how the heck is a generated ROOTConfig.cmake file being used during the configuration of ROOT itself?. That's likely used by `roottest`, as it's actually a separate CMake project which builds against ROOT (and can also be built separately if needed). The error you see happens because `find_dependency(Vdt)` tries to read a header for Vdt (to figure out its version) which should be in the build directory (builtin_vdt==True), but is not there yet, because the build/install of Vdt as a builtin happens only at build time, not configuration time.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11844#issuecomment-1339205080:161,learn,learned,161,https://root.cern,https://github.com/root-project/root/pull/11844#issuecomment-1339205080,2,['learn'],['learned']
Usability,It can be done if you have Internet. Earlier User's Guide was available for download. It's much easier to download a prepared file. Especially if it is together with other documentation.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7421#issuecomment-844279682:52,Guid,Guide,52,https://root.cern,https://github.com/root-project/root/issues/7421#issuecomment-844279682,1,['Guid'],['Guide']
Usability,It could be as simple as testing the full function with a new unit here https://github.com/root-project/root/blob/master/core/clingutils/test/TClingUtilsTests.cxx,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15386#issuecomment-2088090746:15,simpl,simple,15,https://root.cern,https://github.com/root-project/root/pull/15386#issuecomment-2088090746,2,['simpl'],['simple']
Usability,It does not hit the cache because the unloading clears the memory buffers behind the FileID. This means we have cache but it is unreachable after unloading by design.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2483#issuecomment-413987265:48,clear,clears,48,https://root.cern,https://github.com/root-project/root/pull/2483#issuecomment-413987265,2,['clear'],['clears']
Usability,"It happens often that you want to create a RooDataHist just to serve a; RooHistPdf or a RooHistFunc. In this case, it is convenient for the; HistPdf/HistFunc to take ownership of the RooDataHist. The cleanest way to implement this is probably via additional; constructors that take the RooDataHist via `std::unique_ptr`, such that; the ownership is always clear. A new transient member of; HistPdf/HistFunc is then taking over the ownership. With this change, it is easy to fix one of the remaining memory leaks in; the RooLagrangianMorphFunc. I second commit in this PR applies also some general code modernization to RooHistPdf and RooHistFunc.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11107:356,clear,clear,356,https://root.cern,https://github.com/root-project/root/pull/11107,1,['clear'],['clear']
Usability,It has not been updated since a long time ... and new feature like RDataFrame are not in it ....And yes we do not put any effort into it. See: https://root.cern/manual/. This is the top page of the ROOT documentation now. On the opposite the ref-guide (class doc) is constantly updated. Constructive issues and PR should be made on the [ROOT web site repository](https://github.com/root-project/web),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7279#issuecomment-785864167:246,guid,guide,246,https://root.cern,https://github.com/root-project/root/issues/7279#issuecomment-785864167,2,['guid'],['guide']
Usability,"It is a compressed qt help file, stored locally. Yes, it is potentially a very large file. (Could be enabled via cmake flag). It contains all the html info of the guide.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8781#issuecomment-901748882:163,guid,guide,163,https://root.cern,https://github.com/root-project/root/issues/8781#issuecomment-901748882,2,['guid'],['guide']
Usability,It is already in mathmore. The license is simply not FOSS (read it carefully if you care).,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13688#issuecomment-1728406175:42,simpl,simply,42,https://root.cern,https://github.com/root-project/root/pull/13688#issuecomment-1728406175,2,['simpl'],['simply']
Usability,It is clear ownership problem. @ferdymercury - you can try to fix it if you want.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14855#issuecomment-1970972594:6,clear,clear,6,https://root.cern,https://github.com/root-project/root/issues/14855#issuecomment-1970972594,2,['clear'],['clear']
Usability,It is great you add the support for overlapping range in DataRange. ; Can you also please convert the test you have above in a simple Google test that can be added in math/mathcore/test ? ; You can just replace the assert with EXPECT_EQ.; A simple example to look is this test: ; https://github.com/root-project/root/blob/master/hist/hist/test/test_TH1.cxx. Thank you for this contribution!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10101#issuecomment-1080810665:127,simpl,simple,127,https://root.cern,https://github.com/root-project/root/pull/10101#issuecomment-1080810665,4,['simpl'],['simple']
Usability,"It is more tricky than I thought. Actually I see the error ""sometimes"" on fresh builds only. That's not clear yet ...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11614#issuecomment-1305640008:104,clear,clear,104,https://root.cern,https://github.com/root-project/root/pull/11614#issuecomment-1305640008,2,['clear'],['clear']
Usability,It is most probable place where new canvases are created or existing are modified. ; Therefore need check for update. Simple workaround for some macros execution,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16439:118,Simpl,Simple,118,https://root.cern,https://github.com/root-project/root/pull/16439,1,['Simpl'],['Simple']
Usability,"It is old logic that `TBrowser` does not starts without `DISAPLAY` variable set or simply in batch mode.; One can solve this, but with some fine-tuning in ""normal"" `TBrowser`/`TBrowserImp` classes.; If @bellenot has nothing against it - I can propose PR.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10748#issuecomment-1159127875:83,simpl,simply,83,https://root.cern,https://github.com/root-project/root/issues/10748#issuecomment-1159127875,2,['simpl'],['simply']
Usability,It is really simple to check what gets linked in with a debugger if you have the setup done already. If I can get ssh access to a node somewhere I can do that.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12156#issuecomment-1665604004:13,simpl,simple,13,https://root.cern,https://github.com/root-project/root/issues/12156#issuecomment-1665604004,2,['simpl'],['simple']
Usability,It is simpler to read and faster to compile.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10750:6,simpl,simpler,6,https://root.cern,https://github.com/root-project/root/pull/10750,1,['simpl'],['simpler']
Usability,"It seems (at least in the `TTreeDraw` case that the `TTreeCache` does return to the learning phase after the completion of a run:; ```; Attaching file tutorials/hsimple.root as _file0...; (TFile *) 0x556fa2b6a770; root [1] ntuple->SetCacheSize(100000000);; root [2] ntuple->Draw(""py""); root [4] ntuple->GetReadCache(ntuple->GetDirectory()->GetFile())->GetCachedBranches()->ls();; OBJ: TObjArray TObjArray An array of objects : 0; OBJ: TBranch py py : 0 at: 0x556fa7555e70. root [5] ntuple->Draw(""px""); root [6] ntuple->GetReadCache(ntuple->GetDirectory()->GetFile())->GetCachedBranches()->ls();; OBJ: TObjArray TObjArray An array of objects : 0; OBJ: TBranch py py : 0 at: 0x556fa7555e70; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12622:84,learn,learning,84,https://root.cern,https://github.com/root-project/root/issues/12622,1,['learn'],['learning']
Usability,It seems clear that the two name `RNTupleUnownedView` and `RNTupleOwnedView` are too ambiguous (no way to know who the subject of the '[un]owned' is (Is the the user or the system that owns (or not)). Furthermore I am confused by the question itself. A `view` is typically a 'small' object that does not own what it gives access to (e.g. `std::string_view` or its cousin `std::span`). So is `view` even the right term? Completely related can you remind me what information we are trying to pass to the user with the 2 distinct names (what do they need to do differently)?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16363#issuecomment-2327424850:9,clear,clear,9,https://root.cern,https://github.com/root-project/root/pull/16363#issuecomment-2327424850,2,['clear'],['clear']
Usability,"It seems deeper problems exists. In my study, I need to sample a 3D multi-variate gaussian distribution. For comparison, I set correlation to zero, so that I can simply sample three independent variables. The results using unuran and the one using three indepent variables are incompatible, even with above mentioned dirty fix. Currently I switch to alternative methods, yet it might be useful to understand what is the problem. I think some unit test and integration test should be implemented.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10222#issuecomment-1079823051:162,simpl,simply,162,https://root.cern,https://github.com/root-project/root/issues/10222#issuecomment-1079823051,2,['simpl'],['simply']
Usability,"It seems independent Cling builds have been broken on Windows for a while (or am making an error when setting up the build in Cling's Github Actions CI?). Looking at Cling commits - https://github.com/root-project/cling/commits/master it looks like Cling's appveyor hasn't even triggered in a long time, so it is difficult to say when was the last time that an independent Cling built worked on Windows. I made some attempt to fix it via - https://github.com/root-project/root/pull/6750/commits/db80e8c0038ab830b1cc4e7d2d42ad640c1ec232 but that is clearly not enough. One can look at the build error logs on Windows in the corresponding Github Action workflow - https://github.com/reikdas/cling-1/runs/1348031890?check_suite_focus=true. @vgvassilev @bellenot Do you have any idea what could be going wrong?. If Cling can be built successfully on Windows, we can merge this in :D",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6750:548,clear,clearly,548,https://root.cern,https://github.com/root-project/root/pull/6750,1,['clear'],['clearly']
Usability,"It seems this is not working because the part after the `?` is interpreted as a query string. However, I'm not sure when the `?` should be treated as a wildcard and when it should be treated as a query starter. Should `?` only be treated as _not_ a wildcard if the part after contains `=` characters for query parameters or a `#` for a tree name? In addition, some files can have `?` as part of the file name: what do we do in this case? Should we simply not allow `?` for wild carding anymore? This needs to be discussed before making changes. @pcanal what do you think?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10239#issuecomment-1940943807:448,simpl,simply,448,https://root.cern,https://github.com/root-project/root/issues/10239#issuecomment-1940943807,2,['simpl'],['simply']
Usability,"It seems to be a doxygen issue. I submitted an issue, with a simple reproducer, in the doxygen repository: ; https://github.com/doxygen/doxygen/issues/8620",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8533#issuecomment-868348530:61,simpl,simple,61,https://root.cern,https://github.com/root-project/root/issues/8533#issuecomment-868348530,2,['simpl'],['simple']
Usability,It shows simple communication between c++ server and JS client,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4022:9,simpl,simple,9,https://root.cern,https://github.com/root-project/root/pull/4022,1,['simpl'],['simple']
Usability,It simplifies some interfaces and removes one extra responsibility from the column readers.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11307:3,simpl,simplifies,3,https://root.cern,https://github.com/root-project/root/pull/11307,1,['simpl'],['simplifies']
Usability,"It simplifies usage of TThreadExecutor and, consequently, TTreeProcessorMT, and prevents bugs due to users forgetting to make the call.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5289:3,simpl,simplifies,3,https://root.cern,https://github.com/root-project/root/pull/5289,1,['simpl'],['simplifies']
Usability,"It solves a relatively different problem. It skips offset array generation in the case of ""arbitrary objects are serialized and all objects in the basket happen to have the same size"". This PR skips offset array generation of ""simple objects of all different sizes"". So, the approaches differ in which classes/types they apply to and under what cases. There does exist a common subset (simple types where all events have the same size); in those cases, they will result in mostly-identical output (the uncompressed basket from this PR will be a single byte larger). We measure an ~18% decrease when applied to CMS's NanoAOD compressed with LZ4.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1003#issuecomment-332277763:227,simpl,simple,227,https://root.cern,https://github.com/root-project/root/pull/1003#issuecomment-332277763,4,['simpl'],['simple']
Usability,"It turns out this is due to an integer underflow that is triggered by the machinery of `DisplayHelper`:. https://github.com/root-project/root/blob/3160daafc008d8080cb9b3c602f4134b521ca8ad/tree/dataframe/inc/ROOT/RDF/ActionHelpers.hxx#L1334-L1337. The intended workflow is:; 1. Add the next row to be displayed to the `RDisplay` object. The `AddRow` method decreases an internal counter of how many entries are left to be displayed at https://github.com/root-project/root/blob/3160daafc008d8080cb9b3c602f4134b521ca8ad/tree/dataframe/inc/ROOT/RDF/RDisplay.hxx#L227; 2. Check whether there are no more entries to be displayed (`!fDisplayerHelper->HasNext()`).; 3. If so, signal the previous node that this node has finished its job through the `StopProcessing` method. There are a bunch of flaws in this workflow. Uncoditionally calling `AddRow` may trigger the integer underflow by calling `fEntries--` when `fEntries==0`. This can be seen quite simply with the following example; ```cpp; root [0] ROOT::RDataFrame d{1};; root [1] auto dd = d.Define(""b1"", [] { return 42; }).Display<int>({""b1""}, 0);; root [2] dd->Print(); +-----+----+; | Row | b1 | ; +-----+----+; | 0 | 42 | ; +-----+----+. ```; The row is printed even though the user asked for `0` entries to be displayed. The other problem, more subtle and the actual culprit of the reproducer above, is when there is more than just the `Display` operation in the computation graph. `DisplayHelper::Exec` is called once per entry to be processed, as this is the normal working condition in `RLoopManager::Run`. When there is only the `Display` operation, the moment there are no more entries to be displayed, `DisplayHelper` will tell `RLoopManager` that it has finished, thus triggering an early stop of the execution (e.g. if a tree has 100 entries but we only want to display 5). When there is more than one operation, i.e. more than one child of the `RLoopManager`, the call to `StopProcessing` coming from `DisplayHelper::Exec` is not enough t",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11390#issuecomment-1253381156:944,simpl,simply,944,https://root.cern,https://github.com/root-project/root/issues/11390#issuecomment-1253381156,2,['simpl'],['simply']
Usability,"It uses RBrowser and RBrowsable functionality to select some files or input new file SaveAs.; Provide sync and async modes. Actual ui5 coding should be implemented by @Falcort . Now RFileDialog starts its own window, later adapter will be provided to use RFileDialog inside other widgets - like RCanvas or RBrowser. Provide simple tutorial macro.; For meaningful async mode I add `RDirectory::Remove(name)` method (@Axel-Naumann)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4607:324,simpl,simple,324,https://root.cern,https://github.com/root-project/root/pull/4607,1,['simpl'],['simple']
Usability,It was not clear in Doxygen which methods are not implemented in TH2Poly.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11648:11,clear,clear,11,https://root.cern,https://github.com/root-project/root/pull/11648,1,['clear'],['clear']
Usability,"It will be central method to paint any primitive on specified pad. To support all kinds of old implementations in TObject class Paint() method will be implemented as:; ```; void TObject::Paint(Option_t *opt); {; if (gPad) ; PaintOn(gPad);; }; ```. Main trick will be painting of pad primitives. There one can use semi-standard method to detect ; if custom `Paint()` method implemented for the object. If yes - such old `Paint()` will be invoked.; ```; if ((void *) (obj->*(&TObject::Paint)) != (void *) (&TObject::Paint)); obj->Paint(lnk->GetOption());; else; obj->PaintOn(this, lnk->GetOption());; ```. If class converted into new scheme - `Paint()` method **MUST** be re removed and replaced by new `PaintOn()`. This is very important to support sub-classes of classes like `TLine` or `TBox`. `TLine::PaintOn()` implemented from very beginning, but `SubClass::Paint()` will exists. Calling scheme will be: `SubClass::Paint()` -> `TObject::Paint()` -> `TLine::PaintOn()`. Step-by-step in all ROOT classes one will implement `PaintOn()` methods - without breaking any existing code.; PR shows example with several ""simple"" classes how it can be done. . During ROOT code modifications graphics continues to work as before. ; But contentiously usage of `gPad` will be reduced.; Main goal - `gPad` should not be touched when painting ROOT classes. ; Only to support arbitrary user classes one will keep `TObject::PaintOn()` as shown. After code conversion is completed, one can declare ; special methods which are using `gPad` (like `TLine::PaintLineNDC()`) deprecated and ; advertise use of new methods (like `TLine::PaintLineNDCOn()`). Ultimate goal - painting of main ROOT classes do not touch `gPad` and thus will be really thread-safe. Interactive methods (like moving stats box around) will still rely on `gPad`, ; but this pointer will not be touched during any re-painting and will remain consistent.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15937:1115,simpl,simple,1115,https://root.cern,https://github.com/root-project/root/pull/15937,1,['simpl'],['simple']
Usability,"It would be amazing if one could code against TThreadExecutor even if IMT is off. Otherwise, one would have to `ifdef` the hell out of all code where IMT should be used.; To make TTEx usable for e.g. RooFit, I `ifdef`ed a bit in the TThreadExecutor implementation:; - I replaced `parallel_for` by `for`, and `parallel_reduce` by `std::accumulate`.; - I enabled the tests in `core/imt` irrespective of whether IMT is available.; - Things that just cannot work in those tests were anyway protected by `ifdef`, but I had to move some `#include`s around.; - `TThreadExecutor::ForEach` works, but I wonder if we need more tests that run *both* with and without IMT.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6298:184,usab,usable,184,https://root.cern,https://github.com/root-project/root/pull/6298,1,['usab'],['usable']
Usability,It would be good to have some warning here or extension of the initial use case.; I am mainly running compiled root in these days.. Is there any specific reasons why it is only meant to be used in interactive in the first place while the fix looks so simple ?. @couet,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13708#issuecomment-1734508407:251,simpl,simple,251,https://root.cern,https://github.com/root-project/root/issues/13708#issuecomment-1734508407,2,['simpl'],['simple']
Usability,"It would be very helpful if RooAbsData was able to store an optional associated RooArgSet (simply as a data member?) of global observable values. These should be settable by the user. Once this is added, the methods like 'fitTo' could automatically make use of this set for the global observables. Also it would make sense that 'getParameters' considered these global observables to be observables and so getParameters doesn't return the global observables in the list. Thanks!",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8123:91,simpl,simply,91,https://root.cern,https://github.com/root-project/root/issues/8123,1,['simpl'],['simply']
Usability,"It's actually an _array_ ds, not the arrow ds :smile: it's a simple datasource used for testing",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8754#issuecomment-888908741:61,simpl,simple,61,https://root.cern,https://github.com/root-project/root/pull/8754#issuecomment-888908741,2,['simpl'],['simple']
Usability,It's currently completely undocumented: https://root.cern/doc/master/classTROOT.html#a78c012ca4694a4e0694735e48866be8d but we use it in several tutorials so users ask what it does.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11974:26,undo,undocumented,26,https://root.cern,https://github.com/root-project/root/issues/11974,1,['undo'],['undocumented']
Usability,"It's not an issue for adoption. The underlying issue is still there, though. ROOT still loads a bunch of unneeded PCM when simply opening a file, it's just the cost is half what it was before and the reproducer is the same as above.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13000#issuecomment-2304636324:123,simpl,simply,123,https://root.cern,https://github.com/root-project/root/issues/13000#issuecomment-2304636324,2,['simpl'],['simply']
Usability,It's not clear to me what the actually issue with Jenkins is. It looks like a fluke in one of the jenkins components. Could you restart the test?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13146#issuecomment-1620049875:9,clear,clear,9,https://root.cern,https://github.com/root-project/root/pull/13146#issuecomment-1620049875,2,['clear'],['clear']
Usability,"It's not clear to users whether the `RooDataSet` passed to a; RooNDKeysPdf has to live as long as that pdf or not. Right now it has to live just as long, because the RooNDKeysPdf contains; the RooDataSet by non-owning pointer. However, there was no reason for; that, because the dataset is only used in the constructor. This commit suggests to drop this unused `_data` member of the; RooNDKeysPdf, solving potential lifetime problems: the dataset doesn't; need to live as long as the RooNDKeysPdf anymore. With this change, it was possible to use some more of the `RooFit::OwningPtr<T>` alias in RooFit, which is done in the second commit of this PR.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13308:9,clear,clear,9,https://root.cern,https://github.com/root-project/root/pull/13308,1,['clear'],['clear']
Usability,"It's still one less patch needed for the conda packaging. Clearly there's a bigger rock to move, but this smaller one could be moved anyway perhaps?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15930#issuecomment-2205388408:58,Clear,Clearly,58,https://root.cern,https://github.com/root-project/root/pull/15930#issuecomment-2205388408,1,['Clear'],['Clearly']
Usability,"It's understood; Lorenzo will find a workaround for 6.28/00. We will still need to solve the underlying issue, but with lower urgency. The issue is with llvm-IR using non-unique symbol names for the function-local constants, and re-using the already emitted symbols in subsequent modules (due to cling's ""private"" => ""weak"" symbol rewriting). A simple workaround is to use different variable names for the function-local constants.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12164#issuecomment-1410380142:345,simpl,simple,345,https://root.cern,https://github.com/root-project/root/issues/12164#issuecomment-1410380142,2,['simpl'],['simple']
Usability,"It's your decision about how you organize your work, but maybe it would be better to simply suggest to users to. - submit bugs to github; - ask questions on the forum. Why I wrote that github is better for ""feedback"", is because its issues are integrated with push and pull releases, and they won't be lost (as forum reports can be), they will stay open until closed or fixed. . Maybe you can invent a better wording for that paragraph.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7334#issuecomment-789011675:85,simpl,simply,85,https://root.cern,https://github.com/root-project/root/pull/7334#issuecomment-789011675,4,"['feedback', 'simpl']","['feedback', 'simply']"
Usability,"Ivan and I took a look and it looks like the culprit is `cling` getting static initialization wrong (e.g. calling a static initializer multiple times instead of once, even in a single-thread program). Unfortunately I didn't manage to disentangle the issue from RDF. The simplest way to reproduce is to add this patch to ROOT master (47f66c57ca):. ```diff; diff --git a/tree/dataframe/inc/ROOT/RDF/GraphNode.hxx b/tree/dataframe/inc/ROOT/RDF/GraphNode.hxx; index 9548c4adf0..3e39c80f33 100644; --- a/tree/dataframe/inc/ROOT/RDF/GraphNode.hxx; +++ b/tree/dataframe/inc/ROOT/RDF/GraphNode.hxx; @@ -57,6 +57,7 @@ private:; static unsigned int &GetStaticGlobalCounter(); {; static unsigned int sGlobalCounter = 1;; + printf(""static global counter:%u\n"", sGlobalCounter);; return sGlobalCounter;; }. @@ -68,7 +69,11 @@ public:; ////////////////////////////////////////////////////////////////////////////; /// \brief Resets the counter.; /// This is not strictly needed but guarantees that two consecutive request to the graph return the same result.; - static void ClearCounter() { GraphNode::GetStaticGlobalCounter() = 1; }; + static void ClearCounter(); + {; + printf(""setting counter to 1\n"");; + GraphNode::GetStaticGlobalCounter() = 1;; + }. ////////////////////////////////////////////////////////////////////////////; /// \brief Appends a node on the head of the current node; ```. and execute the following code (adapted from Ivan's repro above):. ```cpp; // repro.cpp; #include <ROOT/RDFHelpers.hxx>; #include <ROOT/RDataFrame.hxx>. void repro() {; ROOT::RDataFrame rd1(1);; auto branch1_1 = rd1.Define(""one"", ""1"").Count();; auto branch1_2 = rd1.Define(""two"", ""2"").Count();; ROOT::RDF::SaveGraph(rd1);; }. #ifndef __CLING__; int main() { repro(); }; #endif; ```. Running through the interpreter:. ```; $ root -l -b -q repro.cpp. Processing repro.cpp...; setting counter to 1; static global counter:1; static global counter:1; static global counter:1 // one again!? this counter is always increased",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9474#issuecomment-998846312:270,simpl,simplest,270,https://root.cern,https://github.com/root-project/root/issues/9474#issuecomment-998846312,2,['simpl'],['simplest']
Usability,"JOB_ARTIFACT_UUID',; 'SPARK_LOCAL_DIRS',; 'SPARK_PREFER_IPV6',; 'SPARK_REUSE_WORKER',; 'SPARK_USER',; 'SPARK_YARN_STAGING_DIR',; 'USER',; '_']; ```. And in particular these are the contents of `PATH` inside the worker environment:; ![image](https://github.com/root-project/root/assets/15638895/03cc533c-39a9-41f1-b923-1d8dd1ca8000). A [recent patch](https://github.com/root-project/root/pull/13803) has fixed the `import ROOT` issue:; ![image](https://github.com/root-project/root/assets/15638895/cf8df2f6-3d57-44cc-802e-1b9f65d2f9ac). But anything more than that will fail with:. ![image](https://github.com/root-project/root/assets/15638895/f48698a7-6b29-4f0c-9540-6ee292e8b164). This first issue seems to be fixed by explicitly setting the `ROOT_INCLUDE_PATH` variable to the correct LCG stack include directory on the Spark workers, via the SWAN Spark UI; ![image](https://github.com/root-project/root/assets/15638895/b9526d8c-68b1-426c-acf4-665ffa92ec44). And this is the result:. ![image](https://github.com/root-project/root/assets/15638895/9379d5ad-bd53-4867-9654-6106b6e78ed4). Now a new failure appears with a just slightly more complicated example, which simply opens a TFile with an EOS path; ![image](https://github.com/root-project/root/assets/15638895/fd4fb9c3-c20d-4b0e-9a98-7327c70c6dae). If I add the gcc and binutils directories to `PATH` the file can be opened, specifically I need to set. ```; spark.executorEnv.PATH; /cvmfs/sft.cern.ch/lcg/releases/gcc/11.3.0-ad0f5/x86_64-centos7/bin:/cvmfs/sft.cern.ch/lcg/releases/binutils/2.37-355ed/x86_64-centos7/bin:/usr/bin:/usr/local/bin; ```. ![image](https://github.com/root-project/root/assets/15638895/b49ead64-6044-4e3a-89d5-18e4909dfcd2). ### Reproducer. See the description above. ### ROOT version. ROOT master https://github.com/root-project/root/commit/1ed5b2319a500de0d0e5815c2a17615c134c863d, taken from the LCG nightlies. ### Installation method. LCG stack. ### Operating system. Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13811:2847,simpl,simply,2847,https://root.cern,https://github.com/root-project/root/issues/13811,1,['simpl'],['simply']
Usability,"Javier is testing this patch, so I marked as do-not-merge until I get positive feedback here.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/899#issuecomment-325365214:79,feedback,feedback,79,https://root.cern,https://github.com/root-project/root/pull/899#issuecomment-325365214,2,['feedback'],['feedback']
Usability,Jenkins build on windows fails without clear reason - merging,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4169#issuecomment-519890102:39,clear,clear,39,https://root.cern,https://github.com/root-project/root/pull/4169#issuecomment-519890102,2,['clear'],['clear']
Usability,Johannes pointed out that the links to the Old Math User's Guide should be changed to like to the manual.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7148:59,Guid,Guide,59,https://root.cern,https://github.com/root-project/root/pull/7148,2,['Guid'],['Guide']
Usability,"Jokes apart, redoing the tutorial is easy. As a matter of fact, I'll add soon to the PR. Thanks @pcanal for the feedback!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1531#issuecomment-358971476:112,feedback,feedback,112,https://root.cern,https://github.com/root-project/root/pull/1531#issuecomment-358971476,2,['feedback'],['feedback']
Usability,"Jonas : thank you very much for your generous help. You are my hero for root/roofit. Everything is clear. Unfortunately, from this discussion, it seems that I found a mistake (in some specific cases) in the way roofit is computing the nll as provided by class RooFitResult and by RooAbsPdf->createNLL.; (since I am able to reproduce the value by hand if I do a *mistake on purpose* in the formula.). ->I will prepare the minimum possible program to try to prove it (maybe there is a cartesian explanation) and will create a new github entry.; Thank you",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7991#issuecomment-827087008:99,clear,clear,99,https://root.cern,https://github.com/root-project/root/issues/7991#issuecomment-827087008,2,['clear'],['clear']
Usability,"Just a quick head up!. Adding a virtual method break some of our use code.; The virtual method was not implemented in one of our class, what use to be a normal class is now a virtual class and that cannot be instantiated anymore. The first compilation problem seems to be solved simply by upgrading to the last release of GEANT3, it should not be a big issue, but I just wanted to point out this ""problem"". Cheers,; Simone",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3513#issuecomment-516427404:279,simpl,simply,279,https://root.cern,https://github.com/root-project/root/pull/3513#issuecomment-516427404,2,['simpl'],['simply']
Usability,"Just a small update,; I did a fresh build of ROOT, current master, with Python 3.11, on Fedora Linux 37. I tried your reproducer 100 times and could never trigger the segfault. Also this simpler reproducer never causes a segfault:; ```python; import ROOT; f = ROOT.TFile(""file1.root"", ""recreate""); f.Close(); f.Close(); ```; So apparently it is not Python 3.11 giving issues, maybe something else in your case, unclear.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11823#issuecomment-1337020095:187,simpl,simpler,187,https://root.cern,https://github.com/root-project/root/issues/11823#issuecomment-1337020095,2,['simpl'],['simpler']
Usability,"Just an idea: would it improve the situation if we kept the one name `RNTupleView` with a template parameter that distinguishes between owning and non-owning, but we make that template parameter an enum so that the meaning is clearly spelled out.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16363#issuecomment-2337291204:226,clear,clearly,226,https://root.cern,https://github.com/root-project/root/pull/16363#issuecomment-2337291204,2,['clear'],['clearly']
Usability,"Just because I learned to not trust the lifetime of GitHub comments: this refers to the comment; ```c++; // FIXME: Uncomment and debug the various type mismatches.; ```; in a future version of `interpreter/cling/include/cling/Interpreter/Value.h`, around line 266.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12116#issuecomment-1405620021:15,learn,learned,15,https://root.cern,https://github.com/root-project/root/issues/12116#issuecomment-1405620021,2,['learn'],['learned']
Usability,Just coming back to the issue. It is not clear to me whether we can close it as clarified or if some feature is still needed. @ferdymercury could you chime in?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8582#issuecomment-1925302611:41,clear,clear,41,https://root.cern,https://github.com/root-project/root/issues/8582#issuecomment-1925302611,2,['clear'],['clear']
Usability,"Just for completeness, here is a simple reproducer of the problem:. ```c++; // compile with g++ -fabi-version=6 -o test test.cpp using GCC 13.2; #include <memory>. std::unique_ptr<int> foo() { return nullptr; }. int main() {}; ```; Here is again the error:; ```txt; In file included from /usr/include/c++/13.2.1/memory:78,; from test.C:1:; /usr/include/c++/13.2.1/bits/unique_ptr.h: In instantiation of ‘constexpr std::unique_ptr<_Tp, _Dp>::unique_ptr(std::nullptr_t) [with _Del = std::default_delete<int>; <template-parameter-2-2> = void; _Tp = int; _Dp = std::default_delete<int>; std::nullptr_t = std::nullptr_t]’:; test.C:3:37: required from here; /usr/include/c++/13.2.1/bits/unique_ptr.h:360:11: error: no matching function for call to ‘std::__uniq_ptr_data<int, std::default_delete<int>, true, true>::__uniq_ptr_data()’; 360 | : _M_t(); | ^~~~~~; /usr/include/c++/13.2.1/bits/unique_ptr.h:241:40: note: candidate: ‘template<class _Del> std::__uniq_ptr_data<int, std::default_delete<int>, true, true>::__uniq_ptr_data(std::__uniq_ptr_impl<int, std::default_delete<int> >::pointer, _Del&&) [inherited from std::__uniq_ptr_impl<int, std::default_delete<int> >]’; 241 | using __uniq_ptr_impl<_Tp, _Dp>::__uniq_ptr_impl;; | ^~~~~~~~~~~~~~~; /usr/include/c++/13.2.1/bits/unique_ptr.h:241:40: note: template argument deduction/substitution failed:; /usr/include/c++/13.2.1/bits/unique_ptr.h:360:11: note: candidate expects 2 arguments, 0 provided; 360 | : _M_t(); | ^~~~~~; /usr/include/c++/13.2.1/bits/unique_ptr.h:241:40: note: candidate: ‘std::__uniq_ptr_data<int, std::default_delete<int>, true, true>::__uniq_ptr_data(std::__uniq_ptr_impl<int, std::default_delete<int> >::pointer) [inherited from std::__uniq_ptr_impl<int, std::default_delete<int> >]’; 241 | using __uniq_ptr_impl<_Tp, _Dp>::__uniq_ptr_impl;; | ^~~~~~~~~~~~~~~; /usr/include/c++/13.2.1/bits/unique_ptr.h:241:40: note: candidate expects 1 argument, 0 provided; /usr/include/c++/13.2.1/bits/unique_ptr.h:242:7: note: candidate: ‘st",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10984#issuecomment-1739815648:33,simpl,simple,33,https://root.cern,https://github.com/root-project/root/issues/10984#issuecomment-1739815648,2,['simpl'],['simple']
Usability,Just rebased to see the situation on the macs more clearly.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14974#issuecomment-2010691407:51,clear,clearly,51,https://root.cern,https://github.com/root-project/root/pull/14974#issuecomment-2010691407,2,['clear'],['clearly']
Usability,"Just to confirm: compilation successful for me with the suggested edits to provide the libbsd root dir, which then also links the library. I do hardcode the filename in my suggestion, which I'm not sure will always work, but perhaps we don't need to perfect this if it solves the issue for CentOS 7 + a simple custom build.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15242#issuecomment-2058569594:303,simpl,simple,303,https://root.cern,https://github.com/root-project/root/pull/15242#issuecomment-2058569594,2,['simpl'],['simple']
Usability,"Just to summarise @stwunsch , I think the only action remaining is to iron out the type of the return vector, either in C++ or with a simple promotion mechanism implemented in python.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1856#issuecomment-381551724:134,simpl,simple,134,https://root.cern,https://github.com/root-project/root/pull/1856#issuecomment-381551724,2,['simpl'],['simple']
Usability,Just undo-ed the update.; Hope that nothing breaks.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9286#issuecomment-970839284:5,undo,undo-ed,5,https://root.cern,https://github.com/root-project/root/pull/9286#issuecomment-970839284,2,['undo'],['undo-ed']
Usability,"Just very simple macro:. ```; void *getGlobal(const char *name) ; {; auto gl = gROOT->GetListOfGlobals()->FindObject(name);; if (!gl) return nullptr; ; TGlobal *global = dynamic_cast<TGlobal *> (gl);; return global ? global->GetAddress() : nullptr;; }. void test() ; {; TCanvas c1;; printf(""gROOT %p %p\n"", gROOT, getGlobal(""gROOT""));; printf(""gPad %p %p\n"", gPad, getGlobal(""gPad""));; }; ```; In current ROOT master - gROOT prints identical code, gPad is **DIFFERENT**; This the provided patch gPad and gROOT printouts are identical.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3208#issuecomment-449373735:10,simpl,simple,10,https://root.cern,https://github.com/root-project/root/pull/3208#issuecomment-449373735,2,['simpl'],['simple']
Usability,"Ks/MacOSX.sdk/usr/include; /Library/Developer/CommandLineTools/usr/include; /Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/System/Library/Frameworks (framework directory); End of search list.; # 1 ""/dev/null""; # 1 ""<built-in>"" 1; # 1 ""<built-in>"" 3; # 409 ""<built-in>"" 3; # 1 ""<command line>"" 1; # 1 ""<built-in>"" 2; # 1 ""/dev/null"" 2. sftnight@macphsft18 ~ % clang++ -isysroot /Library/Developer/CommandLineTools/SDKs/MacOSX.sdk -x c++ /dev/null -E -v; Apple clang version 16.0.0 (clang-1600.0.26.3); Target: x86_64-apple-darwin23.6.0; Thread model: posix; InstalledDir: /Library/Developer/CommandLineTools/usr/bin; ignoring nonexistent directory ""/Library/Developer/CommandLineTools/usr/bin/../include/c++/v1""; ""/Library/Developer/CommandLineTools/usr/bin/clang"" -cc1 -triple x86_64-apple-macosx14.0.0 -Wundef-prefix=TARGET_OS_ -Wdeprecated-objc-isa-usage -Werror=deprecated-objc-isa-usage -Werror=implicit-function-declaration -E -disable-free -clear-ast-before-backend -disable-llvm-verifier -discard-value-names -main-file-name null -mrelocation-model pic -pic-level 2 -mframe-pointer=all; -fno-strict-return -ffp-contract=on -fno-rounding-math -funwind-tables=2 -target-sdk-version=15.0 -fvisibility-inlines-hidden-static-local-var -fno-modulemap-allow-subdirectory-search -target-cpu penryn -tune-cpu generic -debugger-tuning=lldb -target-linker-version 1115.7.3 -v -fcoverage-compilation-dir=/Users/sftnight -resource-dir /Library/Developer/CommandLineTools/usr/lib/clang/16 -isysroot /Library/Developer/CommandLineTools/SDKs/MacOSX.sdk -internal-isystem /Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/c++/v1 -internal-isystem /Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/local/include -internal-isystem /Library/Developer/CommandLineTools/usr/lib/clang/16/include -internal-externc-isystem /Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include -internal-externc-isystem /Library/Developer/CommandLineTools/usr/include -Wno-reorder-init-list -Wno-impl",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16494#issuecomment-2373214590:5299,clear,clear-ast-before-backend,5299,https://root.cern,https://github.com/root-project/root/pull/16494#issuecomment-2373214590,2,['clear'],['clear-ast-before-backend']
Usability,"LLVM 16 deprecated the `makeArrayRef` function in favor of using deduction guides: https://github.com/llvm/llvm-project/commit/36117cc46388d677359f1180bd536f80d0c5fe97 A future LLVM version will likely remove them (hasn't happened yet), so we should preemptively migrate away.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14219:75,guid,guides,75,https://root.cern,https://github.com/root-project/root/issues/14219,1,['guid'],['guides']
Usability,Last question before we merge :) ... how confident are we that (simple) files with that option are indeed 'reproducible' (i.e. is there more field to handle?),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4253#issuecomment-525008067:64,simpl,simple,64,https://root.cern,https://github.com/root-project/root/pull/4253#issuecomment-525008067,2,['simpl'],['simple']
Usability,"Launching the Python tutorials from the 'tutorials/launcher.py' module injected; the `__main__` namespace in the tutorial itself. In general it is not a problem,; but it can sometimes hide errors like the one fixed by; https://github.com/root-project/root/pull/10177 . Using a rootlogon file serves; the same purpose and the tutorials can thus be launched by simply calling; 'python tutorialname.py'.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10207:359,simpl,simply,359,https://root.cern,https://github.com/root-project/root/pull/10207,1,['simpl'],['simply']
Usability,Learning from what the LLVM configuration is doing I believe I managed to make my code quite a bit better. :wink: So I'll be curious about any feedback on this PR.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4561#issuecomment-546388568:143,feedback,feedback,143,https://root.cern,https://github.com/root-project/root/pull/4561#issuecomment-546388568,3,"['Learn', 'feedback']","['Learning', 'feedback']"
Usability,"Let configure different parameter in the THttpServer and in the threads layout to minimize as much as possible; round-trip packet time. After all tunings round-trip time can be reduced from 30ms to 1.4ms. . Introduce `tutorials/webgui/ping/` example, which demonstrate and let test all possible tuning parameters independently. Once code adjusted to headless mode, one potentially can include it into stress tests during ROOT nightly/PR builds.; It is very simple, but powerful test of JSROOT/THttpServer/RWebWindow code integrity. Thanks to @osschar and @alja for initial idea.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7777:457,simpl,simple,457,https://root.cern,https://github.com/root-project/root/pull/7777,1,['simpl'],['simple']
Usability,Let see with @pcanal what to do with the doc in the User's Guide . Should it be moved to the Reference Guide ? Ignored ? I am happy to help to do some editing but I do not have the expertise to decide what to do.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7216#issuecomment-1046999920:59,Guid,Guide,59,https://root.cern,https://github.com/root-project/root/issues/7216#issuecomment-1046999920,2,['Guid'],['Guide']
Usability,"Log in to Jenkins, hit the ❌ next to the progress bar for that build. Done that!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2886#issuecomment-434636682:41,progress bar,progress bar,41,https://root.cern,https://github.com/root-project/root/pull/2886#issuecomment-434636682,2,['progress bar'],['progress bar']
Usability,"Looking e.g. at https://github.com/root-project/root/blob/master/tree/ntuple/v7/src/RField.cxx there are some places where a `R__ASSERT` is desirable (validation of input parameters, erroring out in certain edge cases), but in others I think we use it for ensuring that no bugs are present, in which case `assert` would be more appropriate. I did not see places where the checks are so expensive that the difference might matter in terms of performance, but it might be better to establish clear usage patterns before that happens :)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10618:490,clear,clear,490,https://root.cern,https://github.com/root-project/root/issues/10618,1,['clear'],['clear']
Usability,"Looks good from my point of view, I'll let Jakob have the final say. One point we should clarify at some point (but doesn't need to block this PR) is how subfield access plays with writing: It intuitively makes sense for reading as you can just have the same value multiple times in memory. But I guess we only want to take the top-level fields from the entry for writing? Should we forbid creating a (parallel) writer passing a model with registered subfields?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16693#issuecomment-2443511035:193,intuit,intuitively,193,https://root.cern,https://github.com/root-project/root/pull/16693#issuecomment-2443511035,2,['intuit'],['intuitively']
Usability,Looks like the problem is present since the beginning. ; Already initial commit https://github.com/root-project/root/commit/852600061bcacd9b255d44f6312c96b6b1e00a2d has it. I can provide simple fix which makes it properly.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13927#issuecomment-1780888955:187,simpl,simple,187,https://root.cern,https://github.com/root-project/root/issues/13927#issuecomment-1780888955,2,['simpl'],['simple']
Usability,Lot of changes to make GUI oxygen compliant:. - Create the proper groups and put classes in them for GUI 6; - Make the groups structure for ROOT 7; - Fix many typos. The new structure should allow to make a god documentation for ROOT 7. Classes like RFitPanel are now visible in the ref guide.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7403:287,guid,guide,287,https://root.cern,https://github.com/root-project/root/pull/7403,1,['guid'],['guide']
Usability,MASSIVE thanks to @eguiraud and @pcanal for all the suggestions and inputs! I learned so much from this :smile:,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7785#issuecomment-820202357:78,learn,learned,78,https://root.cern,https://github.com/root-project/root/pull/7785#issuecomment-820202357,2,['learn'],['learned']
Usability,Main changes are done - I fully remove RDrawingOpts and simplify class organizations around drawables. I need some more days to make I/O for RCanvas . I introduced RIOShared class for that. It is wrapper for shared_ptr.; There is method with collects all these objects from RCanvas and one could reassign shared_ptr after reading of RCanvas. This is the idea. Half of tutorials already works,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4352#issuecomment-531247017:56,simpl,simplify,56,https://root.cern,https://github.com/root-project/root/pull/4352#issuecomment-531247017,2,['simpl'],['simplify']
Usability,Main problem - stack was drawn twice and only while histograms in original stack were destroyed ; producing canvas had nice look. . Changes:; * do not draw stack twice.; * clone histograms once and use in stack and in legend; * do not use sames - make no sense when calling `SetStats(false)` at the same time; * simplify text drawing; * make C++ and Python macro closer to each other,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15758:312,simpl,simplify,312,https://root.cern,https://github.com/root-project/root/pull/15758,1,['simpl'],['simplify']
Usability,"Make CutRange() also considers the variables not selected by electVars(); in RooAbsData::reduce(). If CutRange() does consider the unselected variables or not was not; specified in the documentation so far, but now it is clearly stated. This change supports the workflow where a dataset contains additional; observables not used by the fit model, but you still want to use these; variables to select a subset of the data via the `Range()` command; argument to `RooAbsPdf::fitTo()`. Closes JIRA ticket ROOT-8040:; https://sft.its.cern.ch/jira/browse/ROOT-8040. @will-cern FYI",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11821:221,clear,clearly,221,https://root.cern,https://github.com/root-project/root/pull/11821,1,['clear'],['clearly']
Usability,Make TFile usable as context manager,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9947:11,usab,usable,11,https://root.cern,https://github.com/root-project/root/pull/9947,2,['usab'],['usable']
Usability,Make clear THtml is legacy code,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7312:5,clear,clear,5,https://root.cern,https://github.com/root-project/root/pull/7312,2,['clear'],['clear']
Usability,Make sure to Clear the list 'extrainfos' before any of its content is deleted. See https://root-forum.cern.ch/t/tfile-makeproject-severely-broken-in-root-6-08-06-6-18-00/34924,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4285:13,Clear,Clear,13,https://root.cern,https://github.com/root-project/root/pull/4285,1,['Clear'],['Clear']
Usability,Make the TFile layout doc visible in Ref Guide,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7891:41,Guid,Guide,41,https://root.cern,https://github.com/root-project/root/pull/7891,1,['Guid'],['Guide']
Usability,Make the documentation that is intended for RooFit developers part of the reference guide.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13929:84,guid,guide,84,https://root.cern,https://github.com/root-project/root/pull/13929,1,['guid'],['guide']
Usability,Make the web gui doc visible in the ref guide,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7138:40,guid,guide,40,https://root.cern,https://github.com/root-project/root/pull/7138,2,['guid'],['guide']
Usability,"Many changes to make the webgui doc visible in the ROOT reference guide.; May be the doc could me make a bit more verbose in some places, but at least the structure is there now.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7138:66,guid,guide,66,https://root.cern,https://github.com/root-project/root/pull/7138,1,['guid'],['guide']
Usability,"Many improvements in CEF:; - support POST requests, let transfer arbitrary data from client to server; - replace text-based cefQuery messaging by longpoll, required for binary transfer; - assign X11 error handler to avoid application abort in case of minor X11 warnings; - use single-process mode in batch to reduce number of running processes. Provide special handling of batch mode for Chrome and Firefox:; - both support `--headless` mode completely without X ; - very simple workaround to stop browser after 30 s with `timeout 30 chromium ...` command; - let configure custom shell commands via `.rootrc` parameters. Changes in http and webgui libraries:; - ""hide"" TCivetweb, TFastCgi, THttpWSEngine classes from end-user (@Axel-Naumann); - remove some comments from civetweb.c (@amadio); - use std::copy() instead of memcpy() for std::string (@Axel-Naumann); - introduce simple key identification of clients, let recognize which client starts by TWebWindow::Show(); - simplify cmake files, separate v7 code in FitPanel",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1886:472,simpl,simple,472,https://root.cern,https://github.com/root-project/root/pull/1886,3,['simpl'],"['simple', 'simplify']"
Usability,"Many of the tests in the list above were renamed in master, but they all succceed:; ```; 1027/1220 Test #1028: tutorial-v7-histops.cxx ............................................. Passed 6.00 sec; 1029/1220 Test #1031: tutorial-v7-simple.cxx .............................................. Passed 8.82 sec; 1033/1220 Test #1026: tutorial-v7-concurrentfill.cxx ...................................... Passed 20.39 sec; 1034/1220 Test #1036: tutorial-rcanvas-rframe.cxx ......................................... Passed 2.93 sec; 1035/1220 Test #1037: tutorial-rcanvas-rh1.cxx ............................................ Passed 2.91 sec; 1037/1220 Test #1038: tutorial-rcanvas-rh1_large.cxx ...................................... Passed 3.14 sec; 1039/1220 Test #1040: tutorial-rcanvas-rh2.cxx ............................................ Passed 4.41 sec; 1040/1220 Test #1041: tutorial-rcanvas-rh2_colz.cxx ....................................... Passed 4.62 sec; 1041/1220 Test #1042: tutorial-rcanvas-rh2_large.cxx ...................................... Passed 4.85 sec; 1042/1220 Test #1045: tutorial-rcanvas-rlegend.cxx ........................................ Passed 2.46 sec; 1047/1220 Test #1034: tutorial-rcanvas-rcanvas_mt.cxx ..................................... Passed 25.33 sec; 1051/1220 Test #1043: tutorial-rcanvas-rh3.cxx ............................................ Passed 13.34 sec; 1053/1220 Test #1044: tutorial-rcanvas-rh3_large.cxx ...................................... Passed 13.14 sec; 1059/1220 Test #1056: tutorial-rcanvas-subpads.cxx ........................................ Passed 2.22 sec; 1066/1220 Test #1029: tutorial-v7-perf.cxx ................................................ Passed 55.03 sec; 1199/1220 Test #1030: tutorial-v7-perfcomp.cxx ............................................ Passed 105.92 sec; ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8073#issuecomment-1000999629:232,simpl,simple,232,https://root.cern,https://github.com/root-project/root/issues/8073#issuecomment-1000999629,2,['simpl'],['simple']
Usability,"Many people pythonized the RooWorkspace themselves by adding a new; attribute `_import` that calls getattr(self, ""import"") under the; hood. However, `_import` is now the reference to the original cppyy; overload, and resetting it with a wrapper around `import` would cause; infinite recursions! We prevent resetting that attribute here, which; is a clearer error to the user than an infinite call stack involving; the internal pythonization code. The ""official"" way of calling `RooWorkspace::import()` in PyROOT is now `RooWorkspace.Import`. Should be backported to the 6.26 release if possible, so that people are not caught by surprise.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9896:349,clear,clearer,349,https://root.cern,https://github.com/root-project/root/pull/9896,1,['clear'],['clearer']
Usability,"Many thanks Danilo and Olivier for picking this up so quickly! The issue appears only when `TColorBug.root` is loaded in a new ROOT session. Sorry for not being clear about this in my original post. If I first run `createTestFile();` from Olivier's macro to create the .root file and then close ROOT and start a new ROOT session that only runs `readTestFile();`, `TColor::GetFreeColorIndex();`returns the index of the already defined `myColor`. So the problem seems to be related to how custom colors that are not yet existing in the ROOT session are restored from a .root file.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/16051#issuecomment-2256214014:161,clear,clear,161,https://root.cern,https://github.com/root-project/root/issues/16051#issuecomment-2256214014,2,['clear'],['clear']
Usability,Markdown errors lead to incorrect rendering of the ROOT user guide. Some elements are rendered wider than the body width. Therefore annoying horizontal scrollbar is present on the User Guide web page:. https://root.cern/root/htmldoc/guides/users-guide/ROOTUsersGuide.html,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7756:61,guid,guide,61,https://root.cern,https://github.com/root-project/root/pull/7756,4,"['Guid', 'guid']","['Guide', 'guide', 'guides']"
Usability,"Marking this as ""improvement"" rather than ""bug"" because this is a known limitation. In fact, @pcanal I thought that opening a `TFile` in a thread and closing it from another was simply not supported? I.e. I thought issues were deeper than just a mismatched thread-local `gDirectory`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6939#issuecomment-742755857:178,simpl,simply,178,https://root.cern,https://github.com/root-project/root/issues/6939#issuecomment-742755857,2,['simpl'],['simply']
Usability,Marking this as low priority as there is a simple workaround. We might still want to add a configuration for this.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7205#issuecomment-788053716:43,simpl,simple,43,https://root.cern,https://github.com/root-project/root/issues/7205#issuecomment-788053716,2,['simpl'],['simple']
Usability,Marseilles job logs are in:. [marseilles](https://bigpanda.cern.ch/filebrowser/?guid=00354dec-89f9-4687-bc9e-d0151ddff358&lfn=panda.um.group.phys-higgs.user.schaffer.mc16_13TeV.500995.H4lMinitree_nominal.0.16e..201216_01.log.23578674.000051.log.tgz&site=IN2P3-CPPM/SCORE&scope=panda&fileid=23156311480). and Cern jobs logs are in:; [Cern](https://bigpanda.cern.ch/filebrowser/?guid=52428b18-b810-4194-be8a-fb11e92bc4f8&lfn=panda.um.group.phys-higgs.user.schaffer.mc16_13TeV.500995.H4lMinitree_nominal.0.16e..201216_01.log.23578674.000050.log.tgz&site=CERN-T0/SCORE&scope=panda&fileid=23156311459),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6948#issuecomment-746412091:80,guid,guid,80,https://root.cern,https://github.com/root-project/root/issues/6948#issuecomment-746412091,4,['guid'],['guid']
Usability,Master ref guide was rebuilt before qhelpgenerator was installed maybe?. ![image](https://user-images.githubusercontent.com/10653970/149124427-a8355b4c-2202-4da3-9f0e-cd220f3a1d60.png),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8781#issuecomment-1010898506:11,guid,guide,11,https://root.cern,https://github.com/root-project/root/issues/8781#issuecomment-1010898506,2,['guid'],['guide']
Usability,"May I suggest that, instead of creating an issue, you do a Pull Request on the source file: https://github.com/root-project/root/blob/master/documentation/users-guide/Trees.md ?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7284#issuecomment-785822857:161,guid,guide,161,https://root.cern,https://github.com/root-project/root/issues/7284#issuecomment-785822857,2,['guid'],['guide']
Usability,May be @bellenot might knows why the arrow keys are not responsive,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7184#issuecomment-778016535:56,responsiv,responsive,56,https://root.cern,https://github.com/root-project/root/pull/7184#issuecomment-778016535,2,['responsiv'],['responsive']
Usability,Maybe it can be made more clear but the message comes from [here](https://github.com/root-project/root/blob/bd200315c50ac1520f75f959a852c6d3333f8aa9/core/base/src/TApplication.cxx#L147). I guess this error can occur for many more reasons than a macro called `main.cpp`. So it will not be easy to make it clearer there. Maybe @Axel-Naumann or @pcanal can comment.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11707#issuecomment-1315426448:26,clear,clear,26,https://root.cern,https://github.com/root-project/root/issues/11707#issuecomment-1315426448,4,['clear'],"['clear', 'clearer']"
Usability,"Maybe this one as well:; ```diff; -TEST(RDFVary, RequireNVariationsIsConsistent); +TEST_P(RDFVary, RequireNVariationsIsConsistent); {; auto df = ROOT::RDataFrame(10).Define(""x"", [] { return 1; });; auto s = df.Vary(""x"", SimpleVariation, {}, /*wrong=*/3).Sum<int>(""x"");; @@ -231,10 +231,14 @@ TEST(RDFVary, RequireNVariationsIsConsistent); std::runtime_error);; ; std::cerr.rdbuf(oldCerrStreamBuf);; - EXPECT_EQ(strCerr.str(), ""RDataFrame::Run: event loop was interrupted\n"");; + std::string msg;; + const auto nRepetitions = GetParam() ? std::min(4u, std::thread::hardware_concurrency()) : 1u;; + for (auto i = 0u; i < nRepetitions; ++i); + msg += ""RDataFrame::Run: event loop was interrupted\n"";; + EXPECT_EQ(strCerr.str(), msg);; }; ```; For the others I agree",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10715#issuecomment-1152042974:220,Simpl,SimpleVariation,220,https://root.cern,https://github.com/root-project/root/pull/10715#issuecomment-1152042974,1,['Simpl'],['SimpleVariation']
Usability,"Maybe to be clearer, I would expect the output to be:; ```; TypeError: none of the 2 overloaded methods succeeded. Full details:; void MyClass::MyMethod(const MyClass::MyObj& x, bool another) =>; TypeError: takes at least 2 arguments (1 given); void MyClass::MyMethod(const MyClass::MyObj& x = """") =>; RuntimeError: My exception; ```; I.e. the second method didn't fail because of a conversion type error, it failed because the method threw a runtime exception",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/16405#issuecomment-2345639881:12,clear,clearer,12,https://root.cern,https://github.com/root-project/root/issues/16405#issuecomment-2345639881,2,['clear'],['clearer']
Usability,"Maybe we anyway should enable reading into `signed char` from a `kChar` column, if only for automatic schema evolution. Users should be able to change a member from `char` to `signed char`, and it may be the simplest to enable this through the column representations rather than a field translation.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16136#issuecomment-2257823786:208,simpl,simplest,208,https://root.cern,https://github.com/root-project/root/pull/16136#issuecomment-2257823786,2,['simpl'],['simplest']
Usability,"Maybe we uncovered a problem with the TString move constructor? Any intuition, @pcanal?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15469#issuecomment-2147872231:68,intuit,intuition,68,https://root.cern,https://github.com/root-project/root/pull/15469#issuecomment-2147872231,2,['intuit'],['intuition']
Usability,Mention RDatasetSpec in the user guide,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12191:33,guid,guide,33,https://root.cern,https://github.com/root-project/root/issues/12191,2,['guid'],['guide']
Usability,Merge fixes in TMVA for Deep Learning from master to 6.14 patches,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2111:29,Learn,Learning,29,https://root.cern,https://github.com/root-project/root/pull/2111,1,['Learn'],['Learning']
Usability,Merged as #1945 adding 2 simple workarounds.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1896#issuecomment-385179254:25,simpl,simple,25,https://root.cern,https://github.com/root-project/root/pull/1896#issuecomment-385179254,2,['simpl'],['simple']
Usability,"Merging so we have the improvements in tomorrow morning, thank you Stefan for the thorough review. More feedback is always welcome -- in case it comes in, I'll address it in future PRs.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7388#issuecomment-795263440:104,feedback,feedback,104,https://root.cern,https://github.com/root-project/root/pull/7388#issuecomment-795263440,2,['feedback'],['feedback']
Usability,"Minuit2 uses the Pimpl idiom with a shared_ptr to avoid frequent copies, but the implementation is not good. The full interface of each class is duplicated, which is not necessary and makes the code confusing and difficult to change. This patch simplifies the implementation but keeps the semantics the same. This patch is a precursor of some improvements that I have prepared.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7882:245,simpl,simplifies,245,https://root.cern,https://github.com/root-project/root/pull/7882,1,['simpl'],['simplifies']
Usability,"Mmmh _get_friend_info might be a bit too simple, looks how it's done here: https://github.com/root-project/root/blob/eb5bcf0f0d79b0011ad4f2b8a38df0b6be4ee9a0/tree/treeplayer/src/TTreeProcessorMT.cxx#L374",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7584#issuecomment-802168332:41,simpl,simple,41,https://root.cern,https://github.com/root-project/root/issues/7584#issuecomment-802168332,2,['simpl'],['simple']
Usability,"More details in in the commit descriptions. In particular, the memory management in JSONFactories_HistFactory is simplified in such a way that this PR should unblock https://github.com/root-project/root/pull/9683.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9720:113,simpl,simplified,113,https://root.cern,https://github.com/root-project/root/pull/9720,1,['simpl'],['simplified']
Usability,More fixed in TMVA Deep Learning for running on GPU,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2059:24,Learn,Learning,24,https://root.cern,https://github.com/root-project/root/pull/2059,1,['Learn'],['Learning']
Usability,"Most ROOT developers and users seem to agree that autonomously toggling features at configuration time based on the environment is not good. The feature set that ROOT is built with is then not deterministic. In past cases, this already resulted in accidentally missing test coverage because features were switched off after environment changes. That's why for the CI, we are always building with the `fail-on-missing-option`. However, this is not only a problem in testing, but everytime ROOT is built. That's why this commit suggests to make `fail-on-missing` the default, and warn the users of potential future deprecation of this flag in the release notes. An interesting point is also that the `fail-on-missing` code path in `SearchInstalledSoftware.cmake` is much simpler, which also helps to reduce the margin for error. See also:; https://github.com/root-project/root/issues/14188#issuecomment-1844965943",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14311:769,simpl,simpler,769,https://root.cern,https://github.com/root-project/root/pull/14311,1,['simpl'],['simpler']
Usability,"Mostly, this is a set of links to other, existing documentation. However, the GitHub web UI will recommend developers review this file before submitting a pull-request. It's a simple nudge to ""do the right thing"".",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/839:176,simpl,simple,176,https://root.cern,https://github.com/root-project/root/pull/839,1,['simpl'],['simple']
Usability,Move documentation from the manual to the reference guide.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8991:52,guid,guide,52,https://root.cern,https://github.com/root-project/root/pull/8991,1,['guid'],['guide']
Usability,Move the implementation in the base class as currently its identical for the file and the DAOS backend. Additional minor simplification.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15767:121,simpl,simplification,121,https://root.cern,https://github.com/root-project/root/pull/15767,1,['simpl'],['simplification']
Usability,"Moves from fixed page sizes on write to adaptive page sizes, following the original idea of @hahnjo . The new mechanism is explained in the tuning.md document in the PR. The PR also bumps the target compressed cluster size to 150MB. We may want to reduce that still. Evaluation of the new method is currently ongoing and the PR description will be amended with the results. EDIT: [Comparison](https://docs.google.com/spreadsheets/d/1maJhgvgVU8RkX7QXd7B3QiTBfKuYbTbvgkoHzBUOurY/edit?usp=sharing) of current write performance vs adaptive page sizes with 50MB, 100MB, 150MB target cluster size. To me it seems that there is not a good argument to go to 150 MB clusters. There may be an argument for 100 MB clusters. For the moment, I'll remove the commit that changes the default settings from the PR. An additional flavor, `adaptive / exp`, is included in the table to test the effect of flushing _foreign columns_. In the experimental mode, columns only flush themselves, which simplifies the `RWritePageMemoryManager` and avoids the upcall from the sink to the column. There is a small positive effect of foreign flushes on the file size in the nanoAOD sample. The effect is more visible for the number of pages. The memory consumption is slightly smaller without foreign column flushes. I'll see if I can construct an example that shows better the advantage of foreign column flushes (or not). As expected, the memory savings become visible for large EDMs (e.g., nanoAOD in this set of samples).",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16311:977,simpl,simplifies,977,https://root.cern,https://github.com/root-project/root/pull/16311,1,['simpl'],['simplifies']
Usability,"My 2 cents:. 1. It is extremly weird/ a bug that the webgui needs to depend on `TObject`.; 2. `RBrowserDataCleanup` derives from `TObject`, so it *must* have a `ClassDef` as per https://root.cern/manual/io_custom_classes/#the-classdef-macro . I am not sure about what using `ClassDefInline` as suggested by @pcanal would change; 2a. Can `RBrowserDataCleanup` just avoid inheriting from `TObject` completely? ; 3. `RBrowserData` has a dictionary and allows I/O, as it is defined in `LinkDef.h`, so it is only natural that its data members need a dictionary as well. As @hahnjo commented, the particular error coming from a `std::tuple` is due to the fact that the class uses ` std::unique_ptr<RBrowserDataCleanup>`. Bottom line, to me everything looks very clear and I don't understand the comments regarding looking for a deeper reason behind the error. The only thing I don't understand is the dependency from `TObject` itself, but that's beyond the scope of this PR",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13134#issuecomment-1637626198:756,clear,clear,756,https://root.cern,https://github.com/root-project/root/pull/13134#issuecomment-1637626198,2,['clear'],['clear']
Usability,"My personal preference is to store std::string instead of a hash, as it's simpler and hashing anyway doesn't give us any improvement in performance. About transaction, I'm testing something like what I asked but it gives me an error like this which seems very cryptic to me, have you ever seen this error before?; https://gist.github.com/yamaguchi1024/b137f5313dfca23abbe890a5c4440a7d",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2434#issuecomment-411910183:74,simpl,simpler,74,https://root.cern,https://github.com/root-project/root/pull/2434#issuecomment-411910183,2,['simpl'],['simpler']
Usability,"My two cents about the naming; * `GenerateValueFor` doesn't work since the value is not being generated for the other instance, but for this one (AFAIU).; * `GenerateValueBy` sounds fine in principle since the `GenerateValue` call is called *by* the other instance. I have to admit that I personally do not get this immediately and I have to stop half a second to think about the meaning of the function name.; * `GenerateValueOn` also doesn't work because the value is being generated by the other instance, not on.; * `GenerateValueFrom` personally has a similar meaning to `GenerateValueBy` and is easier to get intuitively.; * The `GenerateValueFrom` naming works for `Generate` but not for `Append`. I.e. I don't like `AppendFrom` since that sounds like we are appending some value *from* the other instance *into* this one; * To me it looks like all these functions are performing a call of the same function name on another instance. Thus, personally I would go with a naming like `CallGenerateValueOn`, `CallAppendOn`, `CallReadOn` etc.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13317#issuecomment-1651710380:615,intuit,intuitively,615,https://root.cern,https://github.com/root-project/root/pull/13317#issuecomment-1651710380,2,['intuit'],['intuitively']
Usability,"My version of os/compiler/valgrind seems to work better and I got some useful information. For `root.exe -b -l -q callfuncbench.cxx+(1000)`. The new code is a big faster: `42,696,463,692` instead of `45,892,859,389`. Some of the calculation are shifted to `Value::Value`: `5,000,000,988` vs `3,100,001,703` (it grows by 2 billions when the overall goes down by 3 billions). The gains comes from the disappearance of `TClingCallFunc::InitRefAndExec` (minus 3.8 billions) and the simplifications of `std::function_handler (removed) and TClingCallFunc::exec` (minus 1.2 billions). So it is getting better and `Value::Value` is a potential source of further optimization (see related comment). [callgrind-callfund.tar.gz](https://github.com/root-project/root/files/9665974/callgrind-callfund.tar.gz)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11252#issuecomment-1261020879:478,simpl,simplifications,478,https://root.cern,https://github.com/root-project/root/pull/11252#issuecomment-1261020879,2,['simpl'],['simplifications']
Usability,Need a more involved fix than my simplistic attempt.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1880#issuecomment-463972985:33,simpl,simplistic,33,https://root.cern,https://github.com/root-project/root/pull/1880#issuecomment-463972985,2,['simpl'],['simplistic']
Usability,Need an REveDataItem index in simple proxy builder in order to reuse common elements in same scene.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4023:30,simpl,simple,30,https://root.cern,https://github.com/root-project/root/pull/4023,1,['simpl'],['simple']
Usability,"Needs some more work as suggested by Philippe:; - [x] use namespace-scope functions with local statics instead of global channel variables (as agreed on by @eguiraud but I forgot...);; - [x] fwd declare that channel function and even its return type `RLogChannel` in the relevant headers, to reduce `#include` ""load"";; - [x] move ""ROOT"" prefix into channel ctor args (`RLogChannel(""ROOT.FitPanel"")`) to make it usable by non-ROOT code;. And #6931 which will go into a subsequent PR.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6875#issuecomment-740762392:411,usab,usable,411,https://root.cern,https://github.com/root-project/root/pull/6875#issuecomment-740762392,2,['usab'],['usable']
Usability,Neither svg no png/jpeg images can be produced by eve.; With some efforts one could try to implement png support - but in my mind it is not necessary. This issue was created to let run different tutorials in special testing mode - ; and simply checks that tutorials are still valid. Also there are several tutorials with loop like:; ```; while (gSystem->ProcessEvents()) {; // do something; // update canvas; }; ```; In special testing mode one could limit this loop by several seconds.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6651#issuecomment-1923341069:237,simpl,simply,237,https://root.cern,https://github.com/root-project/root/issues/6651#issuecomment-1923341069,2,['simpl'],['simply']
Usability,"Newest qt 5.13.0 crashes here during exit.; Disable it, while is not clear if defaultProfile can be still used -; seems to be not",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4047:69,clear,clear,69,https://root.cern,https://github.com/root-project/root/pull/4047,1,['clear'],['clear']
Usability,"Next problem is that musl [apparently](https://www.gnu.org/software/gnulib/manual/html_node/fpu_005fcontrol_002eh.html) does not provide `fpu_control.h`. According to this [forum post](https://root-forum.cern.ch/t/compiling-error-conflicting-types-alpine-linux/28193/3), nothing from this file is in fact used and thus it should be possible to remove the include - based on the `fpu_control.h` [source code](https://code.woboq.org/userspace/glibc/sysdeps/x86/fpu_control.h.html) and a simple `grep`, this should hold for all ROOT components, except `math/mathcore/src/triangle.c`, which uses `_FPU_SETCW` at line 4888. I am not familiar with what `fpu_control.h` does (apparently it has something to do with float precision), but according to [this](https://sourceforge.net/p/jamvm/patches/6/), it should be replaceable by a standard `fenv.h` header file, which I suggest to do (I have not tested it yet, but I will).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9253#issuecomment-963066852:485,simpl,simple,485,https://root.cern,https://github.com/root-project/root/issues/9253#issuecomment-963066852,2,['simpl'],['simple']
Usability,Nice change. I proposed a simplification. The tests seem to fail because the change does what it is supposed to do and the reference would need to be adapted.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10928#issuecomment-1947173074:26,simpl,simplification,26,https://root.cern,https://github.com/root-project/root/issues/10928#issuecomment-1947173074,2,['simpl'],['simplification']
Usability,"No any other dimension kinds are supported, therefore simplify API; Use canvas size in `jupyter` to configure output container",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8686:54,simpl,simplify,54,https://root.cern,https://github.com/root-project/root/pull/8686,1,['simpl'],['simplify']
Usability,"No, I do not know. That's the bin center clearly. Why was it shifted? I do not know.; But it fixes the problem and other examples work too.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10480#issuecomment-1112122353:41,clear,clearly,41,https://root.cern,https://github.com/root-project/root/pull/10480#issuecomment-1112122353,2,['clear'],['clearly']
Usability,"No, that will not work. As i said protoc is actually configured correctly already. The issue is that /opt/homebrew/include is prepended to the search path for headers. I managed to fix it by doing https://github.com/alisw/root/commit/526782cfe8b7a7fffa90ae0395521b01ae902cf7 which will make sure that my own protobuf comes earlier than the one from homebrew. I see in master protobuf will use a config file, so maybe I can simply patch it in my own build.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14207#issuecomment-1851824221:423,simpl,simply,423,https://root.cern,https://github.com/root-project/root/issues/14207#issuecomment-1851824221,2,['simpl'],['simply']
Usability,"No, you misunderstood the problem! I am not complaining because of the missing splash screen. This is only the symptom with an easily to reproduce command. The problem is, that any graphics (histograms, plots etc. at the end of a long rot analysis simply do not show up when you forgot to issue the xhost + (using snap and wayland). And this is really annoying.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/15723#issuecomment-2145555699:248,simpl,simply,248,https://root.cern,https://github.com/root-project/root/issues/15723#issuecomment-2145555699,2,['simpl'],['simply']
Usability,"Node has the disk full... Please try again later, as disk space is being cleared now.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1023#issuecomment-330792382:73,clear,cleared,73,https://root.cern,https://github.com/root-project/root/pull/1023#issuecomment-330792382,2,['clear'],['cleared']
Usability,"Nope, I do not know if it is an issue on Windows. I think we could just make sure that the ROOT code does the same as:; https://github.com/gsass1/NTop/blob/3ceac499d7c3bfc5f7a073df6e0bd7aa1babf790/ntop.c#L907. See also https://learn.microsoft.com/en-us/windows/win32/api/sysinfoapi/nf-sysinfoapi-globalmemorystatusex",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7196#issuecomment-2301434115:227,learn,learn,227,https://root.cern,https://github.com/root-project/root/issues/7196#issuecomment-2301434115,2,['learn'],['learn']
Usability,"Not quite. The issues was seen as result differing on two different machine but being always the same on the same machine. The two machines have different number of core and thus the chunking was different even in the case where the user requested only a single core to be used on both machine. The related issue is, of course, the question of *why* the end result depends on the chunking and whether this indicates a severe flaw in the algorithm used or is 'simply' case of visible but 'normal' numerical error/uncertainty being propagated.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2039#issuecomment-390711669:459,simpl,simply,459,https://root.cern,https://github.com/root-project/root/pull/2039#issuecomment-390711669,2,['simpl'],['simply']
Usability,"Not sure it is relevant but he said:. _Rearrange ""Provide your feedback""; I think github issues should go before the Forum in the list of options (if there are really two ways), because one can see closed and open issues (on the Forum I found several complaints about the links, but it's not clear whether they are open or closed without opening them)._",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7334#issuecomment-788975309:63,feedback,feedback,63,https://root.cern,https://github.com/root-project/root/pull/7334#issuecomment-788975309,4,"['clear', 'feedback']","['clear', 'feedback']"
Usability,"Note that I do not understand how we can define a canonical namespace in the context of libraries.; For example with two trivial libraries that contains solely what is described in one of those two simple headers:; ```; // header A.h for library A.so; namespace Generic {; void functionA(int) {};; }; ```; ```; // header B.h for library B.so; namespace Generic {; void functionB(int) {};; }; ```; which of those 'two' library should be loaded when 'autoloading [the] canonical namespace'. I.e. A priori autoloading namespaces is the wrong granularity and we should/can autoload things like classes, enum ... and (what we are currently missing) free standing functions.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1547#issuecomment-387210735:198,simpl,simple,198,https://root.cern,https://github.com/root-project/root/pull/1547#issuecomment-387210735,2,['simpl'],['simple']
Usability,"Note that the original implementation is detailed in the documentation:; ```; /// and if not found; /// a direct try of libname will be made (in case it contained an; /// absolute path).; ```; Can you verify (by code inspection) if ```gSystem->DynamicPathName``` now return true for absolute path (even if it is not in the dynamic path)? . If so, I guess the function can indeed be simplified but the documentation needs to revise accordingly. The new code add 'GetPathInfo' and 'AccessPathName' calls to the path where DynamicPathName returned a positive answer. Can you verify that those check are not already done in DynamicPathName? (The previous implementation seemed to have assumed it was, it may still or may no longer be the case, we need to check).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2167#issuecomment-395495317:382,simpl,simplified,382,https://root.cern,https://github.com/root-project/root/pull/2167#issuecomment-395495317,2,['simpl'],['simplified']
Usability,"Note that we observed the same type of crash in some other places as well in ATLAS, which could also be handled by cleaning up the dictionaries of the affected libraries. So the error has an upside as well. (Though a simple error message from ROOT would've been more welcome. :stuck_out_tongue:). (I mainly just wrote this comment to get notifications about this issue's evolution... :wink:)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7657#issuecomment-805575762:217,simpl,simple,217,https://root.cern,https://github.com/root-project/root/issues/7657#issuecomment-805575762,2,['simpl'],['simple']
Usability,Note the separate commits are intended to simplify bisecting if necessary as this is very fragile logic in ROOT.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3769:42,simpl,simplify,42,https://root.cern,https://github.com/root-project/root/pull/3769,1,['simpl'],['simplify']
Usability,Note: I plan on doing additional measurements with a CMSSW-produced file. Doing the PR now so @pcanal can start to provide advice / feedback.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/59#issuecomment-78283407:132,feedback,feedback,132,https://root.cern,https://github.com/root-project/root/pull/59#issuecomment-78283407,1,['feedback'],['feedback']
Usability,"Note: a similar issue. A given build after being left alone for a while and then updated and rebuild cease to properly autoload libPhysics based on usage of TVector3 (all of `TVector3 v;` `TVector3::Class()`, `TClass::GetClass(""TVector3"")` where failing complaining `TVector3` was not known. No amount of rebuild corrected the problem, nor was there any indication of why it would not find a properly formed library. but simply doing `rm lib/modules.idx` did :( ....",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7125#issuecomment-912860678:421,simpl,simply,421,https://root.cern,https://github.com/root-project/root/issues/7125#issuecomment-912860678,2,['simpl'],['simply']
Usability,Note:. Such big PR is not good because they are hard to debug in case of problem. The recent recent example with the PR testing IsBatch in TCanvas::Close prove it. It was easy to track down because it was a single simple PR. This faulty code is present in this big PR. I suggest you remove this big PR. We cannot be confident with it.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6469#issuecomment-704312614:214,simpl,simple,214,https://root.cern,https://github.com/root-project/root/pull/6469#issuecomment-704312614,2,['simpl'],['simple']
Usability,"Notice that to trigger the issue is enough to have an header `bar.h`:. ```; #ifndef _STRUCT_TIMESPEC; #define _STRUCT_TIMESPEC 1. /* POSIX.1b structure for a time value. This is like a `struct timeval' but; * has nanoseconds instead of microseconds. */; struct timespec; {; int tv_sec; /* Seconds. */; int tv_nsec; /* Nanoseconds. */; };. #endif; ```. and simply include it with `#include ""bar.h""`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14272#issuecomment-1862392926:356,simpl,simply,356,https://root.cern,https://github.com/root-project/root/issues/14272#issuecomment-1862392926,2,['simpl'],['simply']
Usability,"Now TWebCanvas provides method to store JSON files, which are send to the clients.; These files can be used for offline debugging of the JavaScript code.; Plus one could use them for HTML documentation generation, which includes online graphics. Improve data format inside TWebPainting - use much more compact and simple structures. Update JSROOT, including major three.js upgrade",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2900:314,simpl,simple,314,https://root.cern,https://github.com/root-project/root/pull/2900,1,['simpl'],['simple']
Usability,"Now for each attribute three methods should be used:; 1. const Getter; 2. non-const Setter; 3. Access by reference. ```; const RAttrText &GetAttrText() const { return fAttrText; }; CustomAttrs &SetAttrText(const RAttrText &txt) { fAttrText = txt; return *this; }; RAttrText &AttrText() { return fAttrText; }; ```. Such set of methods allow to clearly separate const and non-const; access. And when setter is used, chain of methods can be called. Add several new tests.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4523:343,clear,clearly,343,https://root.cern,https://github.com/root-project/root/pull/4523,1,['clear'],['clearly']
Usability,Now the .C scripts used to build the reference guide are compiled using AClic to build the doc faster.; Some includes were missing.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11778:47,guid,guide,47,https://root.cern,https://github.com/root-project/root/pull/11778,1,['guid'],['guide']
Usability,OK closing then - thanks for the feedback @mxxo and @eguiraud . @eguiraud let me know if there's some other action you'd like me to do!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8587#issuecomment-873050997:33,feedback,feedback,33,https://root.cern,https://github.com/root-project/root/pull/8587#issuecomment-873050997,2,['feedback'],['feedback']
Usability,"OK, I created an implementation of a non-blocking equivalent. I'm sure there are some bugs:. [This notebook](https://github.com/root-project/root/files/6205495/io-handler-fast.ipynb.txt) uses a thread-based trampoline to execute the various blocking waits without interrupting the kernel. The results are displayed asynchronously using the ZMQ event loop (used by the kernel), and the executing cell's context is temporarily restored to ensure results end up (visually) in the right place. Clearly this would need some more work to replace the existing contents of `JupyROOT.helpers.utils`, but I hope that it's a starting point for discussion",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7684#issuecomment-806870185:490,Clear,Clearly,490,https://root.cern,https://github.com/root-project/root/issues/7684#issuecomment-806870185,1,['Clear'],['Clearly']
Usability,"OK, I ran with XRD_LOGLEVEL=Dump, and you can see the response after. === stderr ===. saying:. Unable to process directory /alrb/.xrootd/client.plugins.d: [ERROR] OS Error: No such file or directory. Log file:. [xrootd_error_on_grid.pdf](https://github.com/root-project/root/files/5702981/xrootd_error_on_grid.pdf). The file:. root://marsedpm.in2p3.fr:1094//dpm/in2p3.fr/home/atlas/atlasdatadisk/rucio/mc16_13TeV/9c/ab/DAOD_HIGG2D1.23315577._000001.pool.root.1. of course opens correctly for a simple TOpen in any interactive ROOT session. see you, RD",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6948#issuecomment-746292691:494,simpl,simple,494,https://root.cern,https://github.com/root-project/root/issues/6948#issuecomment-746292691,2,['simpl'],['simple']
Usability,"OK, I thought. > Another version of this will be reintroduced in llvm upstream. was clear enough. Thanks for the review!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8044#issuecomment-831916158:84,clear,clear,84,https://root.cern,https://github.com/root-project/root/pull/8044#issuecomment-831916158,2,['clear'],['clear']
Usability,"OK, interactively, this is what I do:. cd /afs/cern.ch/work/s/schaffer/public/work-21.xAOD.RD_devRel21_prod25_2/build; setupATLAS; lsetup ""asetup 21.2.139,AnalysisBase""; source ../build/x86_64-centos7-gcc8-opt/setup.sh; ../run (or to any directory which you can write in); runH4lAnalRun2 -i root://eosatlas.cern.ch:1094//eos/atlas/atlasdatadisk/rucio/mc16_13TeV/85/26/DAOD_HIGG2D1.21658940._000001.pool.root.1 -d mc16_13TeV.345706.Sherpa_222_NNPDF30NNLO_ggllll_130M4l.deriv.DAOD_HIGG2D1.e6213_s3126_r9364_p4191 -e 5000. -e 5000 is just to read 5k events. This is reading an input file, what we call a derived AOD, and writes out a root file with simple trees. the setupATLAS is defined by:. export ATLAS_LOCAL_ROOT_BASE=/cvmfs/atlas.cern.ch/repo/ATLASLocalRootBase; alias setupATLAS='source ${ATLAS_LOCAL_ROOT_BASE}/user/atlasLocalSetup.sh'. But you'll need 'atlas' access, I presume. This is built with:. cmake ../source; make -jxx <as you like>. Not sure if this helps...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6948#issuecomment-757827313:646,simpl,simple,646,https://root.cern,https://github.com/root-project/root/issues/6948#issuecomment-757827313,2,['simpl'],['simple']
Usability,"OK, so simply disabling the `LOG_CONFIGURE`, `LOG_BUILD`, `LOG_INSTALL` when using `CONFIGURE_COMMAND`, `BUILD_COMMNAD`, `INSTALL_COMMAND` seems to fix the issue (i.e. no `BUILD_JOB_SERVER_AWARE` involved), but then we have no log...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/16733#issuecomment-2435320448:7,simpl,simply,7,https://root.cern,https://github.com/root-project/root/issues/16733#issuecomment-2435320448,2,['simpl'],['simply']
Usability,"OK, so your approach would be to get the ""obvious"" set (I cannot think of a better term) of overloads, and for now just ignore hidden friends? (ADL can be worked around on the caller side, *if* people know where to find the suitable name.). Hidden friends are very much appreciated in the standards committee, as they reduce the size of overload sets. You will then have to work around that on the cppyy side - I could imaging that to be possible, with some help from cling. Once you have identified a hidden friend overload you cannot spell it in a fully qualified way. Especially for operators we will have to switch to expression-based operator invocation (`a @ b`) rather than function-style invocation `operator@(a,b)`. As I said, that's what C++20 and later impose anyway. I will see that we implement the generic lookup you're after. I would still appreciate feedback on `op@` - I'd hate implementing something we cannot use in the end.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6393#issuecomment-697199710:866,feedback,feedback,866,https://root.cern,https://github.com/root-project/root/issues/6393#issuecomment-697199710,2,['feedback'],['feedback']
Usability,"OK, thank you Manos for the answers. It is clear now",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6968#issuecomment-754547105:43,clear,clear,43,https://root.cern,https://github.com/root-project/root/pull/6968#issuecomment-754547105,2,['clear'],['clear']
Usability,"OK, thanks for the feedback",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14113#issuecomment-1891757919:19,feedback,feedback,19,https://root.cern,https://github.com/root-project/root/issues/14113#issuecomment-1891757919,2,['feedback'],['feedback']
Usability,"OK, thanks for the feedback. The certificate used to sign the binaries is the official CERN one. I'll check with IT but I doubt they will purchase any Windows approved certificate... Isn't the CERN certificate good enough for you?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/15896#issuecomment-2213801755:19,feedback,feedback,19,https://root.cern,https://github.com/root-project/root/issues/15896#issuecomment-2213801755,2,['feedback'],['feedback']
Usability,"OOT:ROOT:0: While building module 'std' imported from input_line_1:1:; 2024-09-17@11:13:37:DEBUG:ROOT:ROOT:0: While building module '_wchar' imported from /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/wchar.h:67:; 2024-09-17@11:13:37:DEBUG:ROOT:ROOT:0: In file included from <module-includes>:1:; 2024-09-17@11:13:37:DEBUG:ROOT:ROOT:0: /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.0.sdk/usr/include/_wchar.h:76:10: fatal error: could not build module '__wctype'; 2024-09-17@11:13:37:DEBUG:ROOT:ROOT:0: #include <sys/_types/_mbstate_t.h>; 2024-09-17@11:13:37:DEBUG:ROOT:ROOT:0: ~~~~~~~~^; 2024-09-17@11:13:37:DEBUG:ROOT:ROOT:0: input_line_1:1:10: fatal error: could not build module 'std'; 2024-09-17@11:13:37:DEBUG:ROOT:ROOT:0: #include <new>; 2024-09-17@11:13:37:DEBUG:ROOT:ROOT:0: ~~~~~~~~^; 2024-09-17@11:13:37:DEBUG:ROOT:ROOT:0: Warning in cling::IncrementalParser::CheckABICompatibility():; 2024-09-17@11:13:37:DEBUG:ROOT:ROOT:0: Failed to extract C++ standard library version.; 2024-09-17@11:13:37:DEBUG:ROOT:ROOT:0: Warning in cling::IncrementalParser::CheckABICompatibility():; 2024-09-17@11:13:37:DEBUG:ROOT:ROOT:0: Possible C++ standard library mismatch, compiled with _LIBCPP_ABI_VERSION '1'; 2024-09-17@11:13:37:DEBUG:ROOT:ROOT:0: Extraction of runtime standard library version was: ''; 2024-09-17@11:13:37:DEBUG:ROOT:ROOT:0: While building module 'Core':; 2024-09-17@11:13:37:DEBUG:ROOT:ROOT:0: While building module 'Cling_Runtime' imported from input_line_2:1:; 2024-09-17@11:13:37:DEBUG:ROOT:ROOT:0: While building module 'Cling_Runtime_Extra' imported from /Users/ktf/src/sw/BUILD/7aa97d0224e628a02dfa9bddf88351f532b5c298/ROOT/etc/cling/Interpreter/RuntimeUniverse.h:27:; ```. ### Reproducer. Simply compiling ROOT is enough. ### ROOT version. 6.32.00 and 6.32.04. ### Installation method. aliBuild. ### Operating system. macOS Sequoia. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/16449:13713,Simpl,Simply,13713,https://root.cern,https://github.com/root-project/root/issues/16449,1,['Simpl'],['Simply']
Usability,"OT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->; .dot file generated with RooAbsArg::graphVizTree produces an invalid .dot file if the graph title contains spaces. ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->; RooAbsArg::graphVizTree should produce a valid .dot file even when the names of the elements contain spaces. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->; ROOT macro, save to graphvizMWE.C and run with `root graphvizMWE.C`:; ```; void graphvizMWE(void){; // Create a simple dependency tree; RooRealVar x{};; RooRealVar sigma{};; RooRealVar mu{};. RooGaussian Gaussian(""my_gaussian"", ""Gaussian"", x, mu, sigma);; RooGaussian GaussianWithSpace(""my gaussian"", ""Gaussian"", x, mu, sigma);. // Create GraphViz trees; Gaussian.graphVizTree(""tree_example.dot"");; GaussianWithSpace.graphVizTree(""tree_example2.dot""); // Produces invalid output; }; ```; Then attempt to convert the produced `.dot` files to images using; `dot -Tpng tree_example.dot -o example1.png # Produces an image`; `dot -Tpng tree_example2.dot -o example2.png # Error!`. The first of these will produce a .png image, the second will fail with a message like: `Error: tree_example2.dot: syntax error in line 1 near 'gaussian'`. Can be fixed by enclosing the graph title in quotes: i.e. changing line 1 of `tree_example2.dot` from; `digraph my gaussian{`; to; `digraph ""my gaussian""{`. ### Setup; <!--; 1. ROOT version; 2. Operating system; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yo",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7067:1176,simpl,simple,1176,https://root.cern,https://github.com/root-project/root/issues/7067,1,['simpl'],['simple']
Usability,Oh - what are the details of the job that improved? Was it simply reading & rewriting the file? Or part of a fixed workflow?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/194#issuecomment-232403882:59,simpl,simply,59,https://root.cern,https://github.com/root-project/root/pull/194#issuecomment-232403882,1,['simpl'],['simply']
Usability,"Oh I see - this was about the bug, not this PR. Well - that's a visible, existing, long-standing limitation. It won't be a blocker for 6.24 simply because I expect to not be able to fix it in time...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7687#issuecomment-809247589:140,simpl,simply,140,https://root.cern,https://github.com/root-project/root/pull/7687#issuecomment-809247589,2,['simpl'],['simply']
Usability,"Oh I was too fast: So the `BranchTypes` part of the template was simply not used? In case I undestand this correctly, is it possible to detect something like this at compile time?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5208#issuecomment-603090920:65,simpl,simply,65,https://root.cern,https://github.com/root-project/root/pull/5208#issuecomment-603090920,2,['simpl'],['simply']
Usability,"Oh. Missed GetCumulative. The thing that probably bothers me is the description of GetQuantiles or rather what is the use case of GetQuantiles with p==nullptr. When you say ""If p is null, it calculates F-1(F(bin_edges)) = bin_edges"", the bin_edges are already known (if it really calculates them inside, that is quite surprising). The really new thing (although maybe not a product, but side-effect) is the p. I understand that removing the default would break backward compatibility, so I am not advocating just removing the thing in the next release. It's just that if there is a default argument, normally it represents a frequent use case, so it brings attention while learning about a given method. Here it brings confusion (to me and to my student at least).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/16784#issuecomment-2444638572:673,learn,learning,673,https://root.cern,https://github.com/root-project/root/issues/16784#issuecomment-2444638572,2,['learn'],['learning']
Usability,Ok I will.; Yesterday we made an issue to remember to check the TTree User's Guide,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7282#issuecomment-786467905:77,Guid,Guide,77,https://root.cern,https://github.com/root-project/root/issues/7282#issuecomment-786467905,1,['Guid'],['Guide']
Usability,"Ok, I did the apt install as you suggested (with the admin account) and I now get:; ```; $ qhelpgenerator; Missing input file name. Usage:. qhelpgenerator <file> [options]. -o <output-file> Generates a Qt compressed help; called <output-file> (*.qch) for the; Qt help project <file> (*.qhp).; Generates a Qt help collection; called <output-file> (*.qhc) for the; Qt help collection project <file> (*.qhcp).; If this option is not specified; a default name will be used; (*.qch for *.qhp and *.qhc for *.qhcp).; -c Checks whether all links in HTML files; point to files in this help project.; -s Suppresses status messages.; -v Displays the version of ; qhelpgenerator. ```; So I guess it is installed ... should I relaunch the ref guide build ?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8781#issuecomment-1009987639:731,guid,guide,731,https://root.cern,https://github.com/root-project/root/issues/8781#issuecomment-1009987639,2,['guid'],['guide']
Usability,"Ok, I found out what was wrong and fixed it, taking advantage of some suggestion I got in the upstream LLVM review. The issue was missing pointer stability due to the fact the resizing of the backend store could have incurred in copies later than previously expected. The new code uses a BumpPtrAllocator to allocate the pages of items, rather than resizing an std::vector, so it's guaranteed that the elements don't move once they have been allocated (at the cost of the allocated memory not being necessarity contiguous anymore). With such fix, I cannot reproduce the issue anymore when running standalone, with similar memory improvements when running my simple ""open ALICE AOD file"" test.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13641#issuecomment-1723409634:658,simpl,simple,658,https://root.cern,https://github.com/root-project/root/pull/13641#issuecomment-1723409634,2,['simpl'],['simple']
Usability,"Ok, I found the issue why qhelpgenerator is failing, it is due to:. ```; /opt/root_src/documentation/doxygen/mainpage.md:4: warning: found subsubsection command outside of subsection context!; /opt/root_src/documentation/doxygen/mainpage.md:10: warning: found subsubsection command outside of subsection context!; /opt/root_src/documentation/doxygen/mainpage.md:18: warning: found subsubsection command outside of subsection context!; ```. If I change in `mainpage.md` to:; ```; \mainpage %ROOT Reference Documentation. # Introduction; Welcome to %ROOT!. This is the reference manual of the ROOT software tooklit.; You can find in the [reference documentation page](https://root.cern/reference/) pointers to reference manuals for all %ROOT versions. ## Other types of documentation:. - [ROOT Primer](https://root.cern/primer/).; - [ROOT Introductory Course](https://github.com/root-project/training/tree/master/BasicCourse).; - A rich set of %ROOT [tutorials and code examples](https://root.cern/doc/master/group__Tutorials.html) are offered to developers to exercise specific functionality.; - A general [Manual](https://root.cern/manual/) is provided for a more in depth explanation of concepts and functionality available in the %ROOT system.; - A number of topical [User Guides and Manuals](https://root.cern/topical/) for various components of the system. ## Provide your feedback; If you have suggestions about how to improve this documentation, you can let us know:. - With a [PR](https://github.com/root-project/root); - On the [ROOT Forum](https://root-forum.cern.ch); - On [our tracker](https://github.com/root-project/root/issues); ```; then `ROOT.qch` is correctly generated.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8781#issuecomment-910397486:1275,Guid,Guides,1275,https://root.cern,https://github.com/root-project/root/issues/8781#issuecomment-910397486,3,"['Guid', 'feedback']","['Guides', 'feedback']"
Usability,"Ok, I stand corrected. The fix for the issue is simple enough to go into the same PR. Commit pushed.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2412#issuecomment-410034609:48,simpl,simple,48,https://root.cern,https://github.com/root-project/root/pull/2412#issuecomment-410034609,2,['simpl'],['simple']
Usability,"Ok, I tried to reproduce the situation with a simple C++ example:; ```c++; #include <iostream>; #include <string>; #include <memory>. struct A {; virtual std::string func() { return ""A""; }; };. struct B : public A {; std::string func() { return ""B""; }; std::string func(int) { return ""B""; }; };. struct C : public A {; std::string func(int=0) { return ""C""; }; };. int main() {. std::unique_ptr<A> a = std::make_unique<A>();; std::unique_ptr<A> b = std::make_unique<B>();; std::unique_ptr<A> c = std::make_unique<C>();. std::cout << a->func() << std::endl;; std::cout << b->func() << std::endl;; std::cout << c->func() << std::endl;; }; ```; Output:; ```txt; A; B; A; ```; Interesting. So if you have a method with default parameters, and the signature with the implicit defaults seems to override a base class method, it actually doesn't. So this is a bug in TProfile2D that needs to be fixed:. * https://github.com/root-project/root/pull/15693",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/15688#issuecomment-2142184689:46,simpl,simple,46,https://root.cern,https://github.com/root-project/root/issues/15688#issuecomment-2142184689,2,['simpl'],['simple']
Usability,"Ok, I'll leave this to @dpiparo then. I think the changes are simple enough and can be safely merged, though.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1046#issuecomment-331808979:62,simpl,simple,62,https://root.cern,https://github.com/root-project/root/pull/1046#issuecomment-331808979,2,['simpl'],['simple']
Usability,"Ok, cannot reproduce it with a simple TPaveLabel:; ```; root [0] auto p = new TPaveLabel(10.,0.,0.,10.,""test""); (TPaveLabel *) @0x7ffee68e8608; root [1] p->Draw(); Info in <TCanvas::MakeDefCanvas>: created default TCanvas with name c1; root [2] ; ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6344#issuecomment-692133143:31,simpl,simple,31,https://root.cern,https://github.com/root-project/root/issues/6344#issuecomment-692133143,2,['simpl'],['simple']
Usability,"Ok, got it. I commented that out and have been proceeding to test things out. I've hit an issue when trying to embed cling into my project and I've boiled it down to the simplest test case I can here: https://github.com/jeaye/cling-linkage-error-test-case. Is this expected behavior? If so, how can I have cling be able to work with all of the (mangled) symbols which are in my program? I'm trying to use cling as an embedded JIT in my own language's compiler, so the goal is to be generating code on the fly which works with the existing runtime in the compiler. I can move this to a separate ticket if that's preferred.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10294#issuecomment-1192957714:170,simpl,simplest,170,https://root.cern,https://github.com/root-project/root/pull/10294#issuecomment-1192957714,2,['simpl'],['simplest']
Usability,"Ok, here a rather reproducible setup, without `root-config` magic. The libc++ with g++ is still failing for me. However, g++ needs an incredible 7 minutes to compile the 10k LOC version!. ```bash; $ # Environment; $ source /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/latest/x86_64-centos7-clang10-opt/setup.sh; $ which g++; /cvmfs/sft.cern.ch/lcg/releases/gcc/9.2.0-afc57/x86_64-centos7/bin/g++; $ which clang++; /cvmfs/sft.cern.ch/lcg/releases/clang/10.0.0-62e61/x86_64-centos7/bin/clang++. $ # clang++, libstdc++ vs libc++, all O0 (O1 takes too long); $ # Using 10k LOC, results are not as clear with 1k LOC; $ /usr/bin/time clang++ -I$ROOTSYS/include -c compile_10k.cxx -std=c++17; 35.35user 1.20system 0:36.88elapsed 99%CPU (0avgtext+0avgdata 1718068maxresident)k; $ /usr/bin/time clang++ -I$ROOTSYS/include -c compile_10k.cxx -std=c++17 -stdlib=libc++; 26.25user 0.83system 0:27.35elapsed 99%CPU (0avgtext+0avgdata 1211268maxresident)k. $ # clang++, libc++, cross-check with Axel's compiler commands (removed -fsyntax-only); $ /usr/bin/time clang++ -nostdinc++ -isystem /cvmfs/sft.cern.ch/lcg/releases/clang/10.0.0-62e61/x86_64-centos7/include/c++/v1 -I$ROOTSYS/include -c compile_10k.cxx -std=c++17; 26.35user 1.15system 0:27.81elapsed 98%CPU (0avgtext+0avgdata 1202140maxresident)k. $ $ # g++, libstdc++ vs libc++, all O0, using same flags as clang++ above for the libc++ compilation; $ /usr/bin/time g++ -I$ROOTSYS/include -c compile_10k.cxx -std=c++17 -O0; 460.24user 4.10system 7:45.41elapsed 99%CPU (0avgtext+0avgdata 3733544maxresident)k; $ /usr/bin/time g++ -nostdinc++ -isystem /cvmfs/sft.cern.ch/lcg/releases/clang/10.0.0-62e61/x86_64-centos7/include/c++/v1 -I$ROOTSYS/include -c compile_10k.cxx -std=c++17; g++: internal compiler error: Segmentation fault signal terminated program cc1plus; Please submit a full bug report,; with preprocessed source if appropriate.; See <https://gcc.gnu.org/bugs/> for instructions.; 27.26user 2.31system 0:29.76elapsed 99%CPU (0avgtext+0avgdata 33810",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7604#issuecomment-804226765:592,clear,clear,592,https://root.cern,https://github.com/root-project/root/issues/7604#issuecomment-804226765,2,['clear'],['clear']
Usability,"Ok, if `libGL` already depends from `libAfterImage` - then it is fine. You may add simple gtest-based code directly for `libGL` - then it will be automatically tested on all platforms.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15812#issuecomment-2252647669:83,simpl,simple,83,https://root.cern,https://github.com/root-project/root/pull/15812#issuecomment-2252647669,2,['simpl'],['simple']
Usability,"Ok, if there's no clear way here, I will close this for now.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11147#issuecomment-1774992019:18,clear,clear,18,https://root.cern,https://github.com/root-project/root/pull/11147#issuecomment-1774992019,2,['clear'],['clear']
Usability,"Ok, let me know if you have other tests which you would like me to do. One more question for my understanding. Are those big vectors actually needed at all when reading a file? If not why aren't they swapped out to disk either implicitly via some madvise or by simply caching to disk the results? The latter might even give some startup advantage, assuming they are offsets to the pcms and they do not change (not the basic root ones, at least).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13000#issuecomment-1628343236:261,simpl,simply,261,https://root.cern,https://github.com/root-project/root/issues/13000#issuecomment-1628343236,2,['simpl'],['simply']
Usability,"Ok, so, despite being a native speaker, I'll admit writing is not my forte. I tried to simplify what you wrote a bit, but please lmk what to change.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12421#issuecomment-1458668358:87,simpl,simplify,87,https://root.cern,https://github.com/root-project/root/pull/12421#issuecomment-1458668358,2,['simpl'],['simplify']
Usability,"Ok, thank you! It is clear now",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10740#issuecomment-1153930628:21,clear,clear,21,https://root.cern,https://github.com/root-project/root/pull/10740#issuecomment-1153930628,2,['clear'],['clear']
Usability,"Ok, thanks for the explanations. I started to use ROOT near 2005, and I mostly used the User's Guide since then (sometimes consulting Class Reference). I found that there is probably no Manual in pdf (or other format for downloading), which is a pity. I'm not sure whether I shall make a separate improvement issue about that (I already made several ones). I also think that if it's decided that the User's Guide will no longer be used, its .md files should be deleted from active repository (and remain in old versions, if one really needs them). Its links should be removed from the site (and the old site should probably removed as well), and it should be stated that that User's Guide is outdated. Otherwise it would lead to confusion (among those who used the User's Guide) and desynchronization (though most API I see in the manual remains pretty the same).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7284#issuecomment-785880634:95,Guid,Guide,95,https://root.cern,https://github.com/root-project/root/issues/7284#issuecomment-785880634,4,['Guid'],['Guide']
Usability,"Ok, thanks for the reply. Maybe a note in the documentation could be added specifying that it only works if the signal has the shape of Clicked() or Pressed(), not with extra arguments ?: https://root.cern.ch/root/htmldoc/guides/users-guide/WritingGUI.html#event-processing-signals-and-slots",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7195#issuecomment-779853276:222,guid,guides,222,https://root.cern,https://github.com/root-project/root/issues/7195#issuecomment-779853276,4,['guid'],"['guide', 'guides']"
Usability,"Ok, then I still don't understand the issue. Yesterday I understood that it's *not* related to LLVM, but that ROOT's forward declaration is simply ""wrong"" for newer versions of `nlohmann/json` because it changed some template parameters...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11130#issuecomment-1216411826:140,simpl,simply,140,https://root.cern,https://github.com/root-project/root/issues/11130#issuecomment-1216411826,2,['simpl'],['simply']
Usability,"Okay, having (`---`) between the lines looks good. Now for the left-most column, naively I can simply count rows. Alternatively, I can store the length of the longest collection, say 3. And then my left column would contain [0,1,2,0,1,2,0,1,2,0...]. Which alternative would be more useful in your opinion?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9116#issuecomment-944081398:95,simpl,simply,95,https://root.cern,https://github.com/root-project/root/issues/9116#issuecomment-944081398,2,['simpl'],['simply']
Usability,"Okay, putting the ""right"" `gcc` into `$PATH` works, though I have to say this is *very* counter-intuitive...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12747#issuecomment-1532508987:96,intuit,intuitive,96,https://root.cern,https://github.com/root-project/root/issues/12747#issuecomment-1532508987,2,['intuit'],['intuitive']
Usability,"Okay. I used htmls in every possible SaveGraph ""bubble type"" (e.g. datasource/define/filter/actions for consistency). The actual reason to move to html is that in the action node, I want to use a smaller font to say that the action has run, e.g.:; ```; <BR/><FONT POINT-SIZE=\""10.0\"">Already Run</FONT>; ```. There are 2 possible solutions:. 1. Keep only the actions as an html, (so as in current master) this would give:; ![out](https://user-images.githubusercontent.com/46775299/185161238-f0dd3d47-9bc3-49ee-90c6-766b860d2a90.png). 2. Move all ""bubble types"" to plain text -- `Already Run` would appear slightly larger:; ![out2](https://user-images.githubusercontent.com/46775299/185161401-c014eb40-5423-4907-b3c0-4934e21f27c0.png). I am currently migrating to solution 2, as I think it is more consistent and still it is clear that the action has run (it is also in different color because it is run).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11173#issuecomment-1218093192:824,clear,clear,824,https://root.cern,https://github.com/root-project/root/issues/11173#issuecomment-1218093192,2,['clear'],['clear']
Usability,"Olivier, can you look over the PR? ; I tried to keep logic around `nostackb` - but it is not fully clear for me.; Changes already applied to master",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5898#issuecomment-647540602:99,clear,clear,99,https://root.cern,https://github.com/root-project/root/pull/5898#issuecomment-647540602,2,['clear'],['clear']
Usability,"On 14 Oct 2016, at 12:03, Stefan Wunsch <notifications@github.com<mailto:notifications@github.com>> wrote:. Do you understand why the PR is not marked as solved? I can't see any unmerged commits. I simply closed it by hand. Needs to be done by hand, since the merge is not done in github.; Thank you for closing it. Lorenzo. —; You are receiving this because you were mentioned.; Reply to this email directly, view it on GitHubhttps://github.com/root-mirror/root/pull/280#issuecomment-253759853, or mute the threadhttps://github.com/notifications/unsubscribe-auth/AE-NdwgS8ChgjnuZXxwoOf9bUo_emT7qks5qz1OKgaJpZM4KUr3L.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/280#issuecomment-253760306:198,simpl,simply,198,https://root.cern,https://github.com/root-project/root/pull/280#issuecomment-253760306,1,['simpl'],['simply']
Usability,"On MacOS this simple code using std::sort of RooAbsArg crashed because std::sort MacOS implementation goes to element outside of the collection. ; This simple code reproduced the problem by crashing on MacOS. ```; std::vector<RooAbsArg*> v;; int n = 38;. for (int i = 0; i < n; ++i) {; TString name = TString::Format(""a_%d"",i);; v.push_back( new RooRealVar (name, name, 10,0,20) );; }. std::sort(v.begin(), v.end(), [](RooAbsArg*a, RooAbsArg*b) { return a->dependsOn(*b); } );; ```; ; The PR with the simple check avoid a crash observed running the example in ; https://root-forum.cern.ch/t/upper-limit-for-signal-strength-on-off-problem-multiple-independent-runs/44657",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8111:14,simpl,simple,14,https://root.cern,https://github.com/root-project/root/pull/8111,3,['simpl'],['simple']
Usability,On MacOsX 10.13 the previous fix for crosshair. This new version is simpler and does not require; to use functions not available on 10.13.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5339:68,simpl,simpler,68,https://root.cern,https://github.com/root-project/root/pull/5339,1,['simpl'],['simpler']
Usability,"On an extreme example:; ```; 15,272,928 entries; 152,739 baskets (and as many clusters); 10,000 Actual TTreeCache buffer size (minimum allowed); 8,442 estimated buffer size of TTreeCache (1.5 times compressed buffer size); 400 bytes per baskets; 100 entries per baskets (i.e. per clusters); 25 number of cluster per TTreeCache buffer for single branch with default size.; 1 float per entry (reading a single branch).; ```. This repairs the performance of a simple `TTree::Draw` of a single branch; from 1 hour back down to 7s (performance seem in v6.12). One additional improvement, increase the performance by 20% on that same example. This fixes #12649.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12650:457,simpl,simple,457,https://root.cern,https://github.com/root-project/root/pull/12650,1,['simpl'],['simple']
Usability,"On some other place IMT could be used as well:. ```diff; diff --git a/tree/dataframe/test/dataframe_vary.cxx b/tree/dataframe/test/dataframe_vary.cxx; index 92ac2c8c67..12451030af 100644; --- a/tree/dataframe/test/dataframe_vary.cxx; +++ b/tree/dataframe/test/dataframe_vary.cxx; @@ -31,7 +31,7 @@ auto SimpleVariation(); return ROOT::RVecI{-1, 2};; }; ; -TEST(RDFVary, RequireExistingColumn); +TEST_P(RDFVary, RequireExistingColumn); {; ROOT::RDataFrame df(10);; EXPECT_THROW(; @@ -45,7 +45,7 @@ TEST(RDFVary, RequireExistingColumn); std::runtime_error);; }; ; -TEST(RDFVary, VaryTwiceTheSameColumn); +TEST_P(RDFVary, VaryTwiceTheSameColumn); {; auto df = ROOT::RDataFrame(10).Define(""x"", [] { return 1; });; EXPECT_THROW(; @@ -75,7 +75,7 @@ TEST(RDFVary, VaryTwiceTheSameColumn); std::logic_error);; }; ; -TEST(RDFVary, RequireVariationsHaveConsistentType); +TEST_P(RDFVary, RequireVariationsHaveConsistentType); {; auto df1 = ROOT::RDataFrame(10).Define(""x"", [] { return 1.f; });; // x is float, variation expression cannot return RVec<int>, must be RVec<float>; @@ -125,7 +125,7 @@ TEST(RDFVary, RequireVariationsHaveConsistentType); // throwing exceptions from jitted code cause problems on windows and MacOS+M1; #if !defined(_MSC_VER) || defined(R__ENABLE_BROKEN_WIN_TESTS); #if !(defined(R__MACOSX) && defined(__arm64__)); -TEST(RDFVary, RequireVariationsHaveConsistentTypeJitted); +TEST_P(RDFVary, RequireVariationsHaveConsistentTypeJitted); {; // non-jitted Define, jitted Vary with incompatible type; auto df = ROOT::RDataFrame(10).Define(""x"", [] { return 1.f; });; @@ -196,7 +196,7 @@ TEST(RDFVary, RequireVariationsHaveConsistentTypeJitted); #endif; #endif; ; -TEST(RDFVary, RequireReturnTypeIsRVec); +TEST_P(RDFVary, RequireReturnTypeIsRVec); {; auto df = ROOT::RDataFrame(10).Define(""x"", [] { return 1; });; EXPECT_THROW(; @@ -209,7 +209,7 @@ TEST(RDFVary, RequireReturnTypeIsRVec); std::runtime_error);; }; ; -TEST(RDFVary, RequireNVariationsIsConsistent); +TEST_P(RDFVary, RequireNVari",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10715#issuecomment-1150873429:303,Simpl,SimpleVariation,303,https://root.cern,https://github.com/root-project/root/pull/10715#issuecomment-1150873429,1,['Simpl'],['SimpleVariation']
Usability,"One can add more elements in the future; No need special workarounds to ""hide"" HTML elements of StandardItem.; Simplify data organization in model of SummaryView.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4976:111,Simpl,Simplify,111,https://root.cern,https://github.com/root-project/root/pull/4976,1,['Simpl'],['Simplify']
Usability,One cannot simply call `delete this` in base class - ; especially when derived class uses multiple inheritance.; Therefore provide OnZeroRefCount implementation in all derived classes; In REve also mark this method as abstract to ensure that such problem; not appear in the future,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8354:11,simpl,simply,11,https://root.cern,https://github.com/root-project/root/pull/8354,1,['simpl'],['simply']
Usability,One have to delete result of gSystem->ExpandPathName() function.; Or as in the patch - use other signature.; Little bit simplify the code,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4851:120,simpl,simplify,120,https://root.cern,https://github.com/root-project/root/pull/4851,1,['simpl'],['simplify']
Usability,"One of the overloads of `RooAbsData::createHistogram` was deprecated; because it behaved inconsistently with another more frequently used; overload (see https://github.com/root-project/root/pull/10411). However, I forgot to mention the deprecation in the documentation and; pointed it out only in the source code with the deprecated macro. This; commit adds the corresponding `\deprecated` note to the reference guide. Also, some code modernizations were applied to the source file while at it:. * replace `TString` with `std::string`. * replace `0` with `nullptr`. * replace iterator loops with range-based loops. * memory management with `std::unique_ptr`",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10663:412,guid,guide,412,https://root.cern,https://github.com/root-project/root/pull/10663,1,['guid'],['guide']
Usability,"One of the project goals is to support setting up the workspace for likelihood fits purely from Python dictionaries, without using RooFit objects or JSON string literals. One good target for this is the creation of HistFactory models, which can be done by importing a full HS3 JSON as described here in this tutorial:; https://root.cern/doc/master/rf515__hfJSON_8py.html. With the PRs that were already merged, creating the HistFactory pdfs from dictionaries already works. But the dataset specification still must go over string literals, as shown in this simplified version of the tutorial:. ```python; # Simplified version of the HistFactory JSON IO tutorial:; # https://root.cern/doc/master/rf515__hfJSON_8py.html; # You can also find it in the tutorials/roofit folder of the ROOT repo. import ROOT. # Python dictionary specifying the model pdf; model_channel1 = {; ""axes"": [{""name"": ""obs_x_channel1"", ""max"": 2.0, ""min"": 1.0, ""nbins"": 2}],; ""samples"": [; {; ""data"": {""contents"": [20, 10]},; ""modifiers"": [; {""data"": {""hi"": 1.05, ""lo"": 0.95}, ""name"": ""syst1"", ""type"": ""normsys""},; {""name"": ""mu"", ""type"": ""normfactor""},; ],; ""name"": ""signal"",; },; {; ""data"": {""contents"": [100, 0], ""errors"": [5, 0]},; ""modifiers"": [; {""data"": {""hi"": 1.05, ""lo"": 0.95}, ""name"": ""syst2"", ""type"": ""normsys""},; {""name"": ""mcstat"", ""type"": ""staterror""},; ],; ""name"": ""background1"",; },; {; ""data"": {""contents"": [0, 100], ""errors"": [0, 10]},; ""modifiers"": [; {""data"": {""hi"": 1.05, ""lo"": 0.95}, ""name"": ""syst3"", ""type"": ""normsys""},; {""name"": ""mcstat"", ""type"": ""staterror""},; ],; ""name"": ""background2"",; },; ],; ""type"": ""histfactory_dist"",; }. # Python dictionary specifying the binned dataset; observed_channel1 = {; ""axes"": [{""name"": ""obs_x_channel1"", ""nbins"": 2, ""min"": 1, ""max"": 2}],; ""contents"": [122, 112],; ""type"": ""binned"",; }. # Creating an empty workspace; ws = ROOT.RooWorkspace(""workspace""). # Importing the HistFactory pdf from a dictionary specification already works!; ws[""model_channel1""] = model_channel1. #",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13185#issuecomment-1621628860:557,simpl,simplified,557,https://root.cern,https://github.com/root-project/root/issues/13185#issuecomment-1621628860,3,"['Simpl', 'simpl']","['Simplified', 'simplified']"
Usability,"One option is to move it to a users guide chapter.; Other option, copying relevant comment here by @guitargeek:. ```; This is still relevant. I have discussed with Lorenzo what we would have to do to close this issue:. The new users guide is the doxygen reference. The entry point to Minuit 2 is here:; https://root.cern.ch/doc/master/Minuit2Page.html. This doxygen page links to the old Minuit 2 users guide:; https://root.cern.ch/root/htmldoc/guides/minuit2/Minuit2.html. What needs to be done here is to move the old Minuit 2 guide (the source is somewhere in the ROOT repo) to the doxygen directly, and updating it by removing any information that is nowadays irrelevant (like how to build Minuit 2 with Autotools). The reason why we think that this is a meaningful update is that in Doxygen, it would generate automatically the useful links to the functions that are explained.; ```. Source is here: https://github.com/root-project/root/tree/master/documentation/minuit2",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14551#issuecomment-1948896479:36,guid,guide,36,https://root.cern,https://github.com/root-project/root/issues/14551#issuecomment-1948896479,10,['guid'],"['guide', 'guides']"
Usability,One other possibility would be to simply add a comment saying that fResolution is not used right now and could be used/implemented later.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/151#issuecomment-228779594:34,simpl,simply,34,https://root.cern,https://github.com/root-project/root/pull/151#issuecomment-228779594,1,['simpl'],['simply']
Usability,"One potential reason - huge latency for simple request of 4 bytes. Just submitting simple request:; ```; time curl -ik https://cernbox.cern.ch/remote.php/dav/public-files/1Cy1HIf03Ca76Dm/test_ntuples_200123.root -H ""Range: bytes=0-4,100-104"" --output -; ```. Gives me: `1.423 sec` total time.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13018#issuecomment-1592003325:40,simpl,simple,40,https://root.cern,https://github.com/root-project/root/issues/13018#issuecomment-1592003325,4,['simpl'],['simple']
Usability,"One simple but maybe effective way to address this is the following strategy:. * if the `?` is followed exactly by `.root` or it is the last character in the string, then it's a wildcard; * Otherwise, it's a query, the most common usage is to start the beginning of a token to introduce the treename inside the file i.e. `filename?#treename` . @pcanal what do you think?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10239#issuecomment-1958992264:4,simpl,simple,4,https://root.cern,https://github.com/root-project/root/issues/10239#issuecomment-1958992264,2,['simpl'],['simple']
Usability,"One solution for a general derivative function could be to simply pass ""Function->Derivative(x)"" in the second TF1. But there still needs to be a way to differentiate with respect to any variable.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8735#issuecomment-887360425:59,simpl,simply,59,https://root.cern,https://github.com/root-project/root/issues/8735#issuecomment-887360425,2,['simpl'],['simply']
Usability,"One thing that needs to be addressed is that `ROOT::Double_v` is simply `double` when VecCore is disabled, so the way you are implementing it, the vectorized functions have the same signature as the scalar ones, therefore you get errors like this:; ```; TMath.cxx:846:37: error: call of overloaded ‘KolmogorovProb(Double_t&)’ is ambiguous; ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2236#issuecomment-400722627:65,simpl,simply,65,https://root.cern,https://github.com/root-project/root/pull/2236#issuecomment-400722627,2,['simpl'],['simply']
Usability,"One trick would be to set: WARN_NO_PARAMDOC to YES in the Doxyfile, to find all undocumented params",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9673#issuecomment-1020020820:80,undo,undocumented,80,https://root.cern,https://github.com/root-project/root/pull/9673#issuecomment-1020020820,2,['undo'],['undocumented']
Usability,"One way to go about this would be to mimic the suggested usage of the TFile the TTree is attached to as per the `TTree::ChangeFile` [docs](https://root.cern/doc/master/classTTree.html#a4680b0dfd17292acc29ba9a8f33788a3) in TBufferMerger. . One of the main limitations I see is that TBufferMerger is [hardwired](https://github.com/root-project/root/blob/9822d0e2733cf802d8b2c3c7b6bc134296a171b8/io/io/src/TBufferMerger.cxx#L24-L43) to the initial TFile it is constructed with. Supposing we modify `TTree::ChangeFile` to check the tree is attached to a TBufferMergerFile, if it doesn't get deleted (like Philippe suggests in the gist comments) then we still have to find a way to change its name to not collide with the original one. If instead it still gets deleted then we have to create a new TBufferMergerFile and not a simple TFile, but we couldn't attach it to the TBufferMerger inside `TTree::ChangeFile`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6523#issuecomment-704257753:821,simpl,simple,821,https://root.cern,https://github.com/root-project/root/issues/6523#issuecomment-704257753,2,['simpl'],['simple']
Usability,Opened a new PR with simplified history [here](https://github.com/root-project/root/pull/2229). All comments have been addressed. Closing this one.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2117#issuecomment-399663992:21,simpl,simplified,21,https://root.cern,https://github.com/root-project/root/pull/2117#issuecomment-399663992,2,['simpl'],['simplified']
Usability,Opps. I still learning to to deal with PR of the mirror to be applied to the master. Thanks. I think it should be ok now.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/141#issuecomment-227401007:14,learn,learning,14,https://root.cern,https://github.com/root-project/root/pull/141#issuecomment-227401007,1,['learn'],['learning']
Usability,"Our PR builds do an automatic rebase onto master. What you see is a (known...) temporary current failure in master. Should be fixed shortly, sorry about that! Please simply ignore the failure.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5062#issuecomment-591456445:166,simpl,simply,166,https://root.cern,https://github.com/root-project/root/pull/5062#issuecomment-591456445,2,['simpl'],['simply']
Usability,"Overall goals:; - fix currently broken dependencies, e.g. touch a header in histfactory does not regenerate its dictionary;; - simplify G__Core CMake setup;; - remove unnecessary dictionaries;; - reduce dependencies / occasions to rebuild dictionaries, e.g. touch hist/hist/src/TH1.cxx and the dictionaries of libraries depending on libHist were rebuild, and so was the PCH. I see an issue with runtime_cxxmodules; let's see what Jenkins says!",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3371:127,simpl,simplify,127,https://root.cern,https://github.com/root-project/root/pull/3371,1,['simpl'],['simplify']
Usability,"PI. See https://setuptools.pypa.io/en/latest/pkg_resources.html; import pkg_resources; Attempting requirement 'numpy>=1.4.1'; Attempting requirement 'scikit-learn'; Attempting requirement 'xgboost'; Attempting requirement 'tensorflow'; Attempting requirement 'torch'; Attempting requirement 'numba>=0.47.0; python_version < ""3.11""'; Attempting requirement 'numba>=0.57.0; python_version >= ""3.11"" and python_version < ""3.12""'; Attempting requirement 'cffi>=1.9.1'; Attempting requirement 'notebook>=4.4.1'; Attempting requirement 'metakernel>=0.20.0'; Ignore dependency pyspark>=2.4; Ignore dependency dask>=2022.08.1; python_version >= ""3.8""; Ignore dependency distributed>=2022.08.1; python_version >= ""3.8""; .; ----------------------------------------------------------------------; Ran 1 test in 0.149s. OK; ```. And here is the output with ctest:; ```; AILED (errors=1); Attempting requirement 'numpy>=1.4.1'; Attempting requirement 'scikit-learn'; Attempting requirement 'xgboost'; Attempting requirement 'tensorflow'; Attempting requirement 'torch'; Attempting requirement 'numba>=0.47.0; python_version < ""3.11""'; Attempting requirement 'numba>=0.57.0; python_version >= ""3.11"" and python_version < ""3.12""'; Attempting requirement 'cffi>=1.9.1'; Attempting requirement 'notebook>=4.4.1'; Attempting requirement 'metakernel>=0.20.0'; Ignore dependency pyspark>=2.4; Ignore dependency dask>=2022.08.1; python_version >= ""3.8""; Ignore dependency distributed>=2022.08.1; python_version >= ""3.8"". Full path to requirements.txt: /home/rembserj/code/root/requirements.txt; Details about not matched dependencies:; - The 'tensorflow' distribution was not found and is required by the application; - The 'torch' distribution was not found and is required by the application; - The 'metakernel>=0.20.0' distribution was not found and is required by the application; CMake Error at /home/rembserj/code/root/cmake/modules/RootTestDriver.cmake:232 (message):; error code: 1; ```. Needs backport up to 6.28.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15272:1625,learn,learn,1625,https://root.cern,https://github.com/root-project/root/pull/15272,1,['learn'],['learn']
Usability,"PR https://github.com/root-project/root/pull/8944 was a good first step to get the RooWorkspace to JSON converter work for typical histfactory models, but this simple example code showcases that are are still significant bugs. These bugs need to be fixed in the release, such that we can promote the JSON converter as a new feature. ```C++; #include ""RooRealVar.h""; #include ""RooSimultaneous.h""; #include ""RooCategory.h""; #include ""RooFitHS3/RooJSONFactoryWSTool.h"". void mySim(); {; using namespace RooFit;. // Import keys and factory expressions files for the RooJSONFactoryWSTool.; std::string rootetcPath = gSystem->Getenv(""ROOTSYS"");; RooJSONFactoryWSTool::loadExportKeys(; rootetcPath + ""/etc/root/RooFitHS3_wsexportkeys.json"");; RooJSONFactoryWSTool::loadFactoryExpressions(; rootetcPath + ""/etc/root/RooFitHS3_wsfactoryexpressions.json""; );. // Create a test model: RooSimultaneous with Gaussian in one component, and; // product of two Gaussians in the other.; RooRealVar x(""x"", ""x"", -8, 8);; RooRealVar mean(""mean"", ""mean"", 0, -8, 8);; RooRealVar sigma(""sigma"", ""sigma"", 0.3, 0.1, 10);; RooGaussian g1(""g1"", ""g1"", x, mean, sigma);; RooGaussian g2(""g2"", ""g2"", x, mean, RooConst(0.3));; RooProdPdf model(""model"", ""model"", RooArgList{g1, g2});; RooGaussian model_ctl(""model_ctl"", ""model_ctl"", x, mean, sigma);; RooCategory sample(""sample"", ""sample"", {{""physics"", 0}, {""control"", 1}});; RooSimultaneous simPdf(""simPdf"", ""simultaneous pdf"", sample);; simPdf.addPdf(model, ""physics"");; simPdf.addPdf(model_ctl, ""control"");. // Export to JSON; {; RooWorkspace ws{""workspace""};; ws.import(simPdf);; RooJSONFactoryWSTool tool{ws};; tool.exportJSON(""simPdf.json"");; // Output can be pretty-printed with `python -m json.tool simPdf.json`; }. // Import JSON; RooWorkspace ws{""workspace""};; RooJSONFactoryWSTool tool{ws};; tool.importJSON(""simPdf.json"");; // At the moment this will fail, because the Gaussians in the product are; // missing in the JSON dump!; }; ```. The JSON dump will look like this:.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9372:160,simpl,simple,160,https://root.cern,https://github.com/root-project/root/issues/9372,1,['simpl'],['simple']
Usability,"Part of the RooFit code modernization, avoiding the use of unnecessary; wrapper classes and using a simple templated struct instead. The change in this PR is thoroughly tested by `stressRooFit`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10115:100,simpl,simple,100,https://root.cern,https://github.com/root-project/root/pull/10115,1,['simpl'],['simple']
Usability,"Partial fix of #8708.; In a setup where ROOT was installed in a system directory, ROOT was picking up headers from that directory instead of its own. . ## How to reproduce:; 1. `echo '#error This is the wrong header' > /my/include/directory/RooSpan.h` (or a few other headers).; 2. Install some builtins into that directory, e.g. VDT; 3. `cmake -DCMAKE_PREFIX_PATH=/my/include/directory/ <root>` to create a dependency to that include directory.; 4. Build. The problem only becomes visible when `A` depends on `B and C`, and `B` depends on something in `/system/include/`, and `C` is installed in those system includes as well. This generates a compile command such as:; ```; -I.../core/x -I.../core/y -I.../core/... -I.../A/include -I.../B/include -I/system/include/ -I.../C/include ...; ```. ## In this PR:; - Includes for VDT and XROOTD are fixed by making them `IMPORTED` targets, so their includes have lowest precedence.; - Some cheating where include directories are copied around between targets is removed. CMake should handle this.; - Some dependency and target management is simplified (or rather modernised with target-based cmake); - A broken dependency in RooFit is fixed, which was previously hidden by the cheating with include directories. ## What remains to be done:; It is likely that more builtins (or rather `FindXXX` have to be converted to `IMPORTED` targets, so they don't provoke this error again. A broken configuration can be detected by; 1. Having CMake pick up a dependency in some common directory; 2. Either; - Placing a lot of `#error`-ROOT headers in there or; - Searching `compile_commands.json` for `-I/my/include/directory/`; 3. Fixing the `FindXXX` for this dependency.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8709:1086,simpl,simplified,1086,https://root.cern,https://github.com/root-project/root/pull/8709,1,['simpl'],['simplified']
Usability,"People know that they can use `TF1::SetParameters()` to set the; parameter values of a TF1. For example, when you have two parameters:; ```C++; TF1 myexpo(""myexp"", ""[coef] * std::exp(-[rate] * x)"", 0, 10);; myexpo.SetParameters(1.0, 0.5);; ```. When people get rid of all parameters except for one, they therefore; automatically assume that this will work:. ```C++; TF1 myexpo(""myexp"", ""std::exp(-[rate] * x)"", 0, 10);; myexpo.SetParameters(0.5);; ```. However, it doesn't work because `SetParameters` requires at least two; arguments. This commit suggests to fix that and generalize the function; to take only one parameter as well. This reduces the surprises people have when interacting with a TF1 and; therefore improves the user experience for first-time ROOT users.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11052:729,user experience,user experience,729,https://root.cern,https://github.com/root-project/root/pull/11052,1,['user experience'],['user experience']
Usability,"Performance visualization in the RNtupleMetrics can allow the encapsulation of more complex type of metrics, which can allow the extraction of more usefull information, as oposssed to previous, simple, agreggate counter. This PR currently encapsulates 4 fully tested variants of histogram metrics and deploys it's most sophisticated variant onto the analysis of the volume of read requests when loading a page or cluster, by default. The following 4 variants are available, mainly referred to by their key usage:. - `RNTupleHistoInterval` : User-provided set of intervals.; - `RNTupleHistoCounterLog` : Histogram on a log scale.; - `RNTupleHistoActiveLearn` : Active learning phase to adjust to data distribution.; - `RNTupleFixedWidthHistogram` : Fixed width bins with constant time filling. Developed under a summer student project by Rui Reis and supervised by Javier Lopez Gomes and Jakob Blomer.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8880:194,simpl,simple,194,https://root.cern,https://github.com/root-project/root/pull/8880,2,"['learn', 'simpl']","['learning', 'simple']"
Usability,"Ping @Axel-Naumann. Clearly I have nothing to do with these test failures, so what should I do next?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4688#issuecomment-565079915:20,Clear,Clearly,20,https://root.cern,https://github.com/root-project/root/pull/4688#issuecomment-565079915,1,['Clear'],['Clearly']
Usability,"Please have a look at this simplification commit. . I am not 100% happy with the new names I have introduced. A similiar commit should be made for Classification as well. The EvaluateAllMethods functions is still a monster. As for the modification in the AdaBoost: that is the only untested change in this commit (please test the change). For easier reviewing, I have separated this pull in 4 commits. The clang-format just changes whitespace. The main commit is ""[TMVA] Simplify code for regression summary"". Why this commit?; ##############; Reason was the wrong order of results. There were not ordered by RMS. Looking at the code revealed the mess :-)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3694:27,simpl,simplification,27,https://root.cern,https://github.com/root-project/root/pull/3694,2,"['Simpl', 'simpl']","['Simplify', 'simplification']"
Usability,Please note that this is a double edge sword. On one hand it is simplifying the tutorials in a way that works well.; On the other hand it removes any demonstration (or did we keep at least one?) of how to use `R__LOAD_LIBRARY` that is necessary in case the library is (intentionally) not on the `LD_LIBRARY_PATH`.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14684#issuecomment-1944897019:64,simpl,simplifying,64,https://root.cern,https://github.com/root-project/root/pull/14684#issuecomment-1944897019,2,['simpl'],['simplifying']
Usability,"Please see https://root.cern/doc/master/classTHistPainter.html#HP20a AXIS option is not listed for TH2Poly.; If I run your code example under ROOT 6.22/06 I get the attached figure; ![c1](https://user-images.githubusercontent.com/55505042/112357480-91467500-8c9d-11eb-9f04-4bbf630ecafe.png); As you can see, a frame is drawn around the bin. What happens in fact, and what is not seen, since the code example fills the histogram with a negative value, is that what is drawn is a scatter plot. If I extend the code as follows:; ```; TH2Poly* h2pol = new TH2Poly(""p2"",""p2"",0,4,0,4);; Double_t x[4] = {0.,0.,2.,2.};; Double_t y[4] = {0.,2.,2.,0.};; TGraph *g = new TGraph(4,x,y);; h2pol->AddBin(g);; h2pol->Fill(1.,1.,-3);. Double_t x2[4] = {1.,1.,3.,3.};; Double_t y2[4] = {2.,4.,4.,2.};; TGraph *g2 = new TGraph(4,x2,y2);; h2pol->AddBin(g2);; h2pol->Fill(2.,3.,3);; h2pol->Draw(""axis""); ```; I get the following picture which clearly demonstrates it; ![c2](https://user-images.githubusercontent.com/55505042/112357745-ceab0280-8c9d-11eb-8167-3b3b2cd603bb.png); So if I draw h2pol with ""AXIS"" option, it is simply ignored, and a scatter plot is drawn.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7673#issuecomment-806026334:924,clear,clearly,924,https://root.cern,https://github.com/root-project/root/issues/7673#issuecomment-806026334,4,"['clear', 'simpl']","['clearly', 'simply']"
Usability,"Please use https://root-forum.cern.ch to discuss issues. A GitHub bug report is most useful only once it's clear that it is indeed an issue with ROOT and that we know how to reproduce it. This here is *not* and issue with ROOT, at least it's all but obvious why it would be. The crash happens in `Fatima::ReadSensitive(G4Event const*)` or something called by it, and that's not ROOT.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11071#issuecomment-1199109958:107,clear,clear,107,https://root.cern,https://github.com/root-project/root/issues/11071#issuecomment-1199109958,2,['clear'],['clear']
Usability,"Possible reason for the problem, in Cling (also Clang) some headers are included automatically at startup to simplify the operation. In the case of CUDA, the order of the headers is really important because CUDA has to annotate the `stl` functions to be available on CPU and GPU (e.g. `int std::abs(int n)` -> `__device__ __host__ std::abs(int n))`. If the order is not correct, various things can happen (no GPU version available, redefinition errors, error messages that have nothing to do with the actual problem ...). A good starting point for bug hunting is to compare the startup process of vanilla cling and ROOT cling.; * A good starting point for Cling the is the function [`CIFactory::createCIImpl()`](https://github.com/root-project/root/blob/de3514c2a88f653584108d2be64e28f50a2b29da/interpreter/cling/lib/Interpreter/CIFactory.cpp#L1214); * In ROOT, some extra headers are injected (before?) in the [TCling](https://github.com/root-project/root/blob/a56901942dfefa6e7e2e7df397a60c9d1cda31a0/core/metacling/src/TCling.cxx#L1327) class",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7518#issuecomment-808738232:109,simpl,simplify,109,https://root.cern,https://github.com/root-project/root/issues/7518#issuecomment-808738232,2,['simpl'],['simplify']
Usability,Preserve JSROOT when generating reference guide,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8599:42,guid,guide,42,https://root.cern,https://github.com/root-project/root/issues/8599,2,['guid'],['guide']
Usability,"Pretty much the same motivation of having new headers in ROOTSYS/include/ROOT. The upshot is that the third party codebase will become clearer of that `TList.h` is a ROOT thing; and more importantly we will define away a class of problems we have when installing ROOT. Right now on some systems we install everything in `/usr/include`, which is not a good practice unless one is libc.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/16327#issuecomment-2320251654:135,clear,clearer,135,https://root.cern,https://github.com/root-project/root/issues/16327#issuecomment-2320251654,2,['clear'],['clearer']
Usability,Prevent potential infinite recursion and simplify part of the code. This fixes the issue #13233 and doesn't affect the already closed Jira issue [#9260](https://sft.its.cern.ch/jira/browse/ROOT-9260),MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13284:41,simpl,simplify,41,https://root.cern,https://github.com/root-project/root/pull/13284,1,['simpl'],['simplify']
Usability,"Previously if a user with Python2 didn't have pyspark installed on the system it would trigger the wrong error; ```; File ""/home/vpadulan/Programs/rootproject/rootinstall/devrelease/lib/DistRDF/Backends/Spark/Backend.py"", line 22, in <module>; except ModuleNotFoundError:; NameError: name 'ModuleNotFoundError' is not defined; ```; Switch to the base class `ImportError` which is Python2 compatible, also improve the error message to include the link to the installation guide for pyspark (this works equally for Python2 and Python3):; ```; File ""/home/vpadulan/Programs/rootproject/rootinstall/devrelease/lib/DistRDF/Backends/Spark/Backend.py"", line 23, in <module>; raise ImportError((""cannot import module 'pyspark'. Refer to ""; ImportError: cannot import module 'pyspark'. Refer to https://spark.apache.org/docs/latest/api/python/getting_started/install.html for instructions on how to install PySpark on your system.; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7705:471,guid,guide,471,https://root.cern,https://github.com/root-project/root/pull/7705,1,['guid'],['guide']
Usability,"Previously, it tried to use the clear method which does not exist. Corresponding unit tests are available on this branch:. https://github.com/bbockelm/roottest/tree/makeproject_bitset. @pcanal",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/61:32,clear,clear,32,https://root.cern,https://github.com/root-project/root/pull/61,1,['clear'],['clear']
Usability,Print value fixes introduced based on comments after the first pull request.; Removed the old code and made various changes to make the code simpler.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/76:141,simpl,simpler,141,https://root.cern,https://github.com/root-project/root/pull/76,1,['simpl'],['simpler']
Usability,"Probably due to historical reasons, the Minuit2 code uses several systems to report errors, warnings, and debug info. Some of these only work when certain compile flags are set (WARNINGMSG and DEBUG). I would like to unify these systems and use the MnPrint facilities consistently everywhere. This would have the advantage that debug info can be turned on at any time without recompiling and it has additional advantages for frontends to Minuit2, like [iminuit](https://github.com/scikit-hep/iminuit). I would like to work on this, but need some feedback before I invest time. ### Proposed changes. Currently, there are three systems to report info, errors, warnings, and debug messages. The latter two need to be enabled with compile flags (WARNINGMSG and DEBUG). Examples from VariableMetricBuilder.cxx:. Direct use of the MnPrint facilities (this is the ""proper"" way); ```c++; if (PrintLevel() > 1) {; MnPrint::PrintState(std::cout, result.back(), ""VariableMetric: Iteration # "",result.size()-1);; }; ```; Use of MnPrint macros for info messages that are only enabled when WARNINGMSG is set; ```c++; #ifdef WARNINGMSG; MN_INFO_MSG(""VariableMetricBuilder: initial matrix not pos.def."");; #endif; ```; Use of DEBUG and std::cout; ```c++; #ifdef DEBUG; std::cout<<""VariableMetricBuilder convergence when edm < ""<<edmval<<std::endl;; #endif; ```; The latter two need to be enabled at compile-time. If they are enabled, there is no fine-grained run-time control, because the MnPrint system only distinguishes two verbosity levels 0 and 1. On level 0, only errors are reported. On level 1, errors and ""info"" are reported. I propose to enhance this by two more levels. - level 0: report errors; - level 1: all of level 0 + warnings; - level 2: all of level 1 + info; - level 3: all of level 2 + debug. and add the corresponding macros; ```c++; MN_WARN_MSG; MN_WARN_MSG2; MN_WARN_VAL; MN_WARN_VAL2; MN_DEBUG_MSG; MN_DEBUG_MSG2; MN_DEBUG_VAL; MN_DEBUG_VAL2; ```; in addition to the existing MN_INFO_* and MN",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6421:546,feedback,feedback,546,https://root.cern,https://github.com/root-project/root/issues/6421,1,['feedback'],['feedback']
Usability,"Problem here is that `Describe` defined in `tree/dataframe/inc/ROOT/RDF/RInterface.hxx` returns a string. The simplest solution is to call `print(df.Describe())` to format properly the string. ""Fixing"" the desired output would change the existing usage of `Describe()` - returned type change from string to void and printing inside of the Describe. This is what is going on:; ```python; def foo(): # returns string; return ""a\nb"". def bar(): # void; print(""a\nb""). foo() # this is our case, giving excplicitly ""a\nb""; bar() # this is good; print(foo()) # this is good; ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8893#issuecomment-1006570773:110,simpl,simplest,110,https://root.cern,https://github.com/root-project/root/issues/8893#issuecomment-1006570773,2,['simpl'],['simplest']
Usability,"Protect `strlen(nullptr)` in gpad and graf classes, improve/simplify TMultiGraph ""pads"" drawing",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10855:60,simpl,simplify,60,https://root.cern,https://github.com/root-project/root/pull/10855,2,['simpl'],['simplify']
Usability,Provide methods to check if sending via websocket is possible; Fix - correctly handle negative parameter values in TF1/TF2; Fix - clear range flag when drawings are cleared; Fix - do not forget reset pads cache when changing TWebCanvas,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2945:130,clear,clear,130,https://root.cern,https://github.com/root-project/root/pull/2945,2,['clear'],"['clear', 'cleared']"
Usability,"Public interface creating an interpreter transaction, needs locking. I attach a stack trace from a condor job running with the latest nightly build a Python script (AGC benchmark), which led to the change in this PR. I'm not sure how to create a simple reproducer/test yet unfortunately. [htcondor-worker-trace.txt](https://github.com/root-project/root/files/12642962/htcondor-worker-trace.txt)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13657:246,simpl,simple,246,https://root.cern,https://github.com/root-project/root/pull/13657,1,['simpl'],['simple']
Usability,PyROOT] Fix infinite loop in `TMemoryRegulator::ClearProxiedObjects()`,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15106:48,Clear,ClearProxiedObjects,48,https://root.cern,https://github.com/root-project/root/pull/15106,1,['Clear'],['ClearProxiedObjects']
Usability,"RColor is pure color storage - RGBA or name.; RAttrColor is attribute class to extract colors from RDrawable attributes; Should simplify code. Provide several more ""well-known"" colors.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5107:128,simpl,simplify,128,https://root.cern,https://github.com/root-project/root/pull/5107,1,['simpl'],['simplify']
Usability,RDF Progress bar seems to ignore Range() calls,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/15323:4,Progress bar,Progress bar,4,https://root.cern,https://github.com/root-project/root/issues/15323,1,['Progress bar'],['Progress bar']
Usability,RDF progress bar,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8685:4,progress bar,progress bar,4,https://root.cern,https://github.com/root-project/root/issues/8685,2,['progress bar'],['progress bar']
Usability,REve: Add option to draw axis guides,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12634:30,guid,guides,30,https://root.cern,https://github.com/root-project/root/pull/12634,2,['guid'],['guides']
Usability,"RField support for user-defined classes that behave as collections of elements. These classes specify a ""collection proxy"" that provides access to the elements in the collection.; A legacy collection proxy is provided in the form of an instance of a class derived from `TVirtualCollectionProxy`. The collection proxy for a class is typically set during initialization, usually using `TClass::CopyCollectionProxy()` or similar. In this pull request, we introduce support for legacy collection proxies derived from the `TVirtualCollectionProxy` class, although in later stages, RNTuple might provide this functionality through an interface different interface. At a bare minimum, the user is required to provide an implementation for the following functions in `TVirtualCollectionProxy`:; - `HasPointers()`, `GetProperties()`, `GetValueClass()`, `GetType()`, `Sizeof()`: for general information about the collection and its value type.; - `Sizeof()`, `At()`, `Clear()`, and `Insert()`: for element access; - `PushProxy()`, `PopProxy()`: for selecting the target object. A usage example can be seen [here](https://github.com/root-project/root/pull/11525/files#diff-81832cd72f5d9af1508fd153abdf63b6406256248f1d1440f966e82e628da141). ## Changes or fixes:; - Added class `RCollectionClassField`, representing a field of a user-defined class that behaves as a collection that is compliant with the `TVirtualCollectionProxy` interface.; Given that the `RField<T>` primary template definition (that used if no specialization matches) uses `RClassField` to store members of a class, we rely on an additional helper type (`IsCollectionProxy<T>`) to annotate that a particular class has an associated collection proxy (see example below).; ```c++; // Alternatively, this can be specified via a member type in the user-defined class; see the documentation; template <>; struct IsCollectionProxy<ProxiedCollection> : std::true_type {};. auto model = RNTupleModel::Create();; auto fieldKlass = model->MakeField<MyCl",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11525:987,Clear,Clear,987,https://root.cern,https://github.com/root-project/root/pull/11525,1,['Clear'],['Clear']
Usability,RFitPanel missing from reference guide,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7304:33,guid,guide,33,https://root.cern,https://github.com/root-project/root/issues/7304,2,['guid'],['guide']
Usability,"RNTuple stores data in a directory. Upon opening this directory in TBrowser, not the opaque internal keys should be displayed but a user-friendly representation of the ntuple structure (fields). Thus, a new TDirectoryFile bit is introduced that should indicate to the TBrowser that an object of the type set in the directory's title shall take care of the in-directory browsing. @bellenot @Axel-Naumann Please have a look.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4081:132,user-friendly,user-friendly,132,https://root.cern,https://github.com/root-project/root/pull/4081,1,['user-friendly'],['user-friendly']
Usability,"RNTuple's minifile writer seems to create subtly corrupted ROOT files. If such a file is opened by `TFile` in update mode and reopened for reading, the map reads like. ```; 20220511/094820 At:100 N=104 TFile ; 20320223/050248 At:204 N=68423 CX = -11523.26 ; 20531200/160357 At:68627 N=14215937 CX = -24.78 ; 20531200/160357 At:14284564 N=1 END ; ```. On first sight, the file remains usable/readable though.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10559:384,usab,usable,384,https://root.cern,https://github.com/root-project/root/issues/10559,1,['usab'],['usable']
Usability,"ROOT's build directory (or any project's) should be included in .gitignore (it helps with a lot of tools as well as IDE/code editor file switchers). Now, 2 years ago [I proposed to reserve ""_build""](https://github.com/root-project/root/pull/8009) in .gitignore as a simple build directory name that we could use. That PR was closed in favor of [removing the ""build"" directory](https://github.com/root-project/root/issues/8031) from ROOT's sources and use that name instead. Since then I have been naming my build directories something that the current .gitignore would ignore: `cmake-build-foo` or similar. I realize it might seem silly, but it would be a non-negligible quality of life improvement for me if I could just use `cmake-build` instead, hence this PR (while we wait for #8031).",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12881:266,simpl,simple,266,https://root.cern,https://github.com/root-project/root/pull/12881,1,['simpl'],['simple']
Usability,"ROOT-v6.22.06/src/ROOT/v6.22.06/io/io/src/TStreamerInfo.cxx:1586; #15 0x00007f7919c76b47 in (anonymous namespace)::TMemberInfo::operator!= (this=0x7ffe32cab7e0, other=...) at /build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-v6.22.06/src/ROOT/v6.22.06/io/io/src/TStreamerInfo.cxx:2690; #16 0x00007f7919c78fa0 in TStreamerInfo::CompareContent (this=0x30bc290, cl=0x372fc40, info=0x0, warn=false, complete=false, file=0x2e19f80) at /build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-v6.22.06/src/ROOT/v6.22.06/io/io/src/TStreamerInfo.cxx:3058; #17 0x00007f7919c6ec4f in TStreamerInfo::BuildCheck (this=0x30bc290, file=0x2e19f80, load=true) at /build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-v6.22.06/src/ROOT/v6.22.06/io/io/src/TStreamerInfo.cxx:1139; #18 0x00007f7919c2d155 in TFile::ReadStreamerInfo (this=0x2e19f80) at /build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-v6.22.06/src/ROOT/v6.22.06/io/io/src/TFile.cxx:3557; #19 0x00007f7919c20f28 in TFile::Init (this=0x2e19f80, create=false) at /build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-v6.22.06/src/ROOT/v6.22.06/io/io/src/TFile.cxx:823; #20 0x00007f7919c1f0ae in TFile::TFile (this=0x2e19f80, fname1=0x2a29630 ""simplest-53432.root"", option=0x7ffe32cac239 """", ftitle=0x7f791cfb8014 """", compress=101) at /build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-v6.22.06/src/ROOT/v6.22.06/io/io/src/TFile.cxx:483; #21 0x00007f7919c2f8f4 in TFile::Open (url=0x7f791cfb8000 ""simplest-53432.root"", options=0x7f791cfb8014 """", ftitle=0x7f791cfb8014 """", compress=101, netopt=0) at /build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-v6.22.06/src/ROOT/v6.22.06; ```; * perhaps there is a problem with the `FixCollectionV5`. ### Setup; 1. ROOT 6.22/06 (crashes) vs ROOT 6.22/00 (reads OK); 2. CentOS7 x86_64 (lxplus); 3. `/cvmfs/sft.cern.ch/lcg/views/LCG_99` (tried different arches, same crash) vs `/cvmfs/sft.cern.ch/lcg/views/LCG_98` (reads OK)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7276:3872,simpl,simplest-,3872,https://root.cern,https://github.com/root-project/root/issues/7276,2,['simpl'],['simplest-']
Usability,"RWebWindow uses credit-based data transport. ; Default number of credits was always 10 and can be too small.; Now this default value can be changed via ""WebGui.ConnCredits"" variable. In WebEve checks amount of available credits to suppress highlight operations - main source of small packets send to server.; Let avoid situation when such small packets over-flood communication channel. Latest JSROOT code with better organization how TCanvas and TFrame painters provided when required.; Previous implementation was not adequate, while cannot take into account that object may be drawn on TCanvas or on RCanvas. Now it clearly stated in the code.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6920:619,clear,clearly,619,https://root.cern,https://github.com/root-project/root/pull/6920,1,['clear'],['clearly']
Usability,"Rebased to fix conflicts, the last 3 commits are the only new ones. A type `RVecN` has been introduced which exposes the small buffer size as a template parameters, and `RVec` inherits publicly from it fixing the small buffer size to a reasonable value. For now all mathematical operators and helper functions still deal with `RVec`, simply switching everything to taking _and returning_ `RVecN` instead is a breaking change.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7502#issuecomment-869834863:334,simpl,simply,334,https://root.cern,https://github.com/root-project/root/pull/7502#issuecomment-869834863,2,['simpl'],['simply']
Usability,"Rebased to fix conflicts. Feedback from today's PPP: `#var`s should be treated like `rdfentry_` or like a function call, they should not appear in column lists and they should not be Snapshotted out if not through an alias/define.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7354#issuecomment-802137872:26,Feedback,Feedback,26,https://root.cern,https://github.com/root-project/root/pull/7354#issuecomment-802137872,1,['Feedback'],['Feedback']
Usability,"Recently, we accidentally introduced a bug into RooFit when removing the IO constructor of `RooBernstein`, and we brought it back months later: https://github.com/root-project/root/pull/10816. It's unexpected that a class with a `ClassDef` version greater than zero (meaning that it's clearly intended for IO) can even compile without an IO constructor, essentially breaking it for IO!. Could we add some checks at compile time to make sure that any class with a non-zero `ClassDef` version has an IO constructor implemented?",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10824:285,clear,clearly,285,https://root.cern,https://github.com/root-project/root/issues/10824,1,['clear'],['clearly']
Usability,Ref guide version changer,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5863:4,guid,guide,4,https://root.cern,https://github.com/root-project/root/pull/5863,2,['guid'],['guide']
Usability,Refactored reference guide webpage of RDataFrame. See each commit message for the parts that have been changed.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9606:21,guid,guide,21,https://root.cern,https://github.com/root-project/root/pull/9606,1,['guid'],['guide']
Usability,Reference guide version changer. first try. Needs more test and tuning.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5863:10,guid,guide,10,https://root.cern,https://github.com/root-project/root/pull/5863,1,['guid'],['guide']
Usability,"Regarding the efficiency, I don't know what's the proper way to benchmark the cumulative histogram generation. In the following simple benchmark targeting the `hpx` 1D histogram in `tutorials/hsimple.root`, the difference is not much, though `TH1::GetCumulativeIncExc` seems slightly faster. ```; [yuehshun@lxplus8s13 root-build]$ ./bin/root -l tutorials/hsimple.root; root [0]; Attaching file tutorials/hsimple.root as _file0...; (TFile *) 0x372cc00; root [1] std::chrono::time_point<std::chrono::high_resolution_clock> start = std::chrono::high_resolution_clock::now(); TH1 *hpxCumu = hpx->GetCumulative(); std::chrono::time_point<std::chrono::high_resolution_clock> stop = std::chrono::high_resolution_clock::now();; root [2] static_cast<std::chrono::duration<double>>(stop - start).count(); (double) 0.00026606600; root [3] .q; [yuehshun@lxplus8s13 root-build]$ cd ../root-build.incexc/; [yuehshun@lxplus8s13 root-build.incexc]$ ./bin/root -l tutorials/hsimple.root; root [0]; Attaching file tutorials/hsimple.root as _file0...; (TFile *) 0x3c458b0; root [1] std::chrono::time_point<std::chrono::high_resolution_clock> start = std::chrono::high_resolution_clock::now(); TH. 1 *hpxCumu = hpx->GetCumulativeIncExc(); std::chrono::time_poroot [2] static_cast<std::chrono::duration<double>>(stop - start).count(); (double) 0.00024825600; root [3] .q; [yuehshun@lxplus8s13 root-build.incexc]$ cd ../root-build; [yuehshun@lxplus8s13 root-build]$ ./bin/root -l tutorials/hsimple.root; root [0]; Attaching file tutorials/hsimple.root as _file0...; (TFile *) 0x2b9a7d0; root [1] std::chrono::time_point<std::chrono::high_resolution_clock> start = std::chrono::high_resolution_clock::now(); TH1 *hpxCumu = hpx->GetCumulative(); std::chrono::time_point<std::chrono::high_resolution_clock> stop = std::chrono::high_re; solution_clock::now();; root [2] static_cast<std::chrono::duration<double>>(stop - start).count(); (double) 0.00027867100; root [3] .q; [yuehshun@lxplus8s13 root-build]$ cd ../root-build.inc",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11949#issuecomment-1361867780:128,simpl,simple,128,https://root.cern,https://github.com/root-project/root/pull/11949#issuecomment-1361867780,2,['simpl'],['simple']
Usability,"Regarding the titular issue, I have been thinking about it for a bit and I don't think we can do much better than what @pieterdavid already implemented. Solutions considered:. 1. Implicitly converting `TClonesArrays` to `RVecs` would be a) backward-incompatible and b) a silent perf degradation, as it requires a copy. Moreover, if we did this I don't see a migration path that doesn't require that users revise all their TClonesArrays-related logic; 2. Adding a `TClonesArrays2RVec` helper function: it would require a copy (or it would have to return a clunky `RVec<T*>`). It is also trivial to implement for users that need it and don't mind the downsides.; 3. Adding a RDF toggle to tweak ""read TClonesArrays as RVecs"" or not: requires adding a bunch of extra logic to the column-reading mechanism for a feature that might end up being mostly unused (modern data models don't use TClonesArrays), and it would require the extra copy (i.e. silent performance degradation). The best seems to be 3, but feature toggles complicate internals and are typically not easy to discover (might end up mostly unused). It seems simpler to ask users to explicitly do the conversion in a `Redefine` if they need/want to. Sorry I could not come up with something nice :confused: . I will close this in a few days unless people have something against it.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8644#issuecomment-883552286:1118,simpl,simpler,1118,https://root.cern,https://github.com/root-project/root/issues/8644#issuecomment-883552286,2,['simpl'],['simpler']
Usability,Reland simplify loadpcm,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3747:7,simpl,simplify,7,https://root.cern,https://github.com/root-project/root/pull/3747,2,['simpl'],['simplify']
Usability,"Related to #11245 . The `-O` option of hadd can be used to force the recompression of the whole target tree (including branches and baskets) to the compression algorithm set with `-f` option. This is not clear in the current `hadd` help message.; The first commit updates the help for the `-O` option, most probably this can be further improved so suggestions are welcome!. Other commits are style changes to the message for a clearer output and code. After this PR:; ```; $: hadd -h; usage: hadd [-a A] [-k K] [-T T] [-O O] [-v V] [-j J] [-dbg DBG] [-d D] [-n N]; [-cachesize CACHESIZE]; [-experimental-io-features EXPERIMENTAL_IO_FEATURES] [-f F]; [-fk FK] [-ff FF] [-f0 F0] [-f6 F6]; TARGET SOURCES. OPTIONS:; -a Append to the output; -k Skip corrupt or non-existent files, do not exit; -T Do not merge TTree objects; -O If hadd is used to merge TTree objects, compress the whole target tree; (including its branches and baskets) with the desired compression; algorithm. This can be set for example through the '-f' option; -v Explicitly set the verbosity level: 0 request no output, 99 is the; default; -j Parallelize the execution in multiple processes; -dbg Parallelize the execution in multiple processes in debug mode (Does; not delete partial files stored inside working directory); -d Carry out the partial multiprocess execution in the specified; directory; -n Open at most 'maxopenedfiles' at once (use 0 to request to use the; system maximum); -cachesize Resize the prefetching cache use to speed up I/O operations (use 0 to; disable); -experimental-io-features Used with an argument provided, enables the corresponding experimental; feature for output trees; -f Gives the ability to specify the compression level of the target file; (by default 4); -fk Sets the target file to contain the baskets with the same compression; as the input files (unless -O is specified). Compresses the meta data; using the compression level specified in the first input or the; compression setting after f",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11254:204,clear,clear,204,https://root.cern,https://github.com/root-project/root/pull/11254,2,['clear'],"['clear', 'clearer']"
Usability,"Remaining points and questions arising from @hageboeck's review:. 1. https://github.com/root-project/root/pull/8700#discussion_r672508683 Should RooRealL have I/O? It is currently disabled by setting ClassDef version to 0.; 2. https://github.com/root-project/root/pull/8700#discussion_r672509759 RooFit naming convention puts underscores in front of member names. This is discouraged, since underscore prefix is reserved for C++ implementations. I introduced some new members with underscore suffix instead, which is also common practice e.g. in the Google C++ guidelines. I think this is not something we should spend too much time on now, but maybe good to keep in mind for the future.; 3. https://github.com/root-project/root/pull/8700#discussion_r672519457 The configuration parameters (GlobalObservables etc.): should we unify them or keep like this?; 4. https://github.com/root-project/root/pull/8700#discussion_r672538377 This should be checked by Wouter. In addition, some other remaining questions:; 1. `testRooRealL.getValRooAddition` fails because it doesn't know `RooFormulaVar`... I'm not sure what this means, but I vaguely remember that (I think) @hageboeck and @cburgard were talking about this, so I was hoping you may be able to help me out with fixing that test.; 2. In an ideal world I would have liked to add a serial implementation of the `LikelihoodGradientWrapper` class. Probably, we can reuse a lot of `RooGradMinimizerFcn` for this and it should be rather straightforward. However, this will take time. The advantage would be that we could add a test to this PR that covers all that is added, basically by just running a minimization. Note that I do have such a full-coverage test, but only for the MultiProcess minimization, where I implemented `LikelihoodGradientWrapper` in the parallel `LikelihoodGradientJob` class. So this test will come in ""PR 7"" (see overview). So, up for discussion, two choices: A: add (probably mostly useless except for testing this PR) ""Likelih",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8700#issuecomment-915217168:561,guid,guidelines,561,https://root.cern,https://github.com/root-project/root/pull/8700#issuecomment-915217168,2,['guid'],['guidelines']
Usability,Remove VariationsNode and simplify node creation,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10565:26,simpl,simplify,26,https://root.cern,https://github.com/root-project/root/pull/10565,2,['simpl'],['simplify']
Usability,"Remove dependency from TBufferFile.; Now simply duplicate some code from TBufferFile in TBufferXML.; This is last version, which is fully compatible with previous XML I/O. Next steps - introduce TBufferText class, which will be base for JSON and XML classes.; Several methods will be shared between these two classes.; And both XML and JSON will use text actions for objects streaming, ; which may lead into incompatible changes in XML format.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1481:41,simpl,simply,41,https://root.cern,https://github.com/root-project/root/pull/1481,1,['simpl'],['simply']
Usability,"Remove one layer of indirection by merging MakeColumnReadersHelper; and MakeColumnReader. Less code, we avoid some repeated checks,; and MakeColumnReader is not a bit simpler to call directly, which; we will need to implement RVariedColumnReaders for systematic variations. CC: @bendavid -- I think you are touching this code too, sorry! :sweat_smile:",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9275:167,simpl,simpler,167,https://root.cern,https://github.com/root-project/root/pull/9275,1,['simpl'],['simpler']
Usability,Reorganise the ref guide main page to highlight the Manual. The tutorial and course are listed in a separated paragraph. Fix for typo.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8887:19,guid,guide,19,https://root.cern,https://github.com/root-project/root/pull/8887,1,['guid'],['guide']
Usability,Reported here: https://connect.microsoft.com/VisualStudio/feedback/details/3143729,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1295:58,feedback,feedback,58,https://root.cern,https://github.com/root-project/root/pull/1295,1,['feedback'],['feedback']
Usability,"Reproduce #5069 again - something went wrong when I want to merge it. Simple search for following includes were done:. * `TSystem.h`; * `TStyle.h`; * `TClass.h`; * `TEnv.h`; * `TObjString.h`; * `TObjArray.h`; * `TList.h`. These are relative ""big"" includes, therefore can improve compilation and dependencies. Let see which tests are affected",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5071:70,Simpl,Simple,70,https://root.cern,https://github.com/root-project/root/pull/5071,1,['Simpl'],['Simple']
Usability,"Reproducer:. ```cpp; #include <ROOT/RDataFrame.hxx>; #include <ROOT/RDFHelpers.hxx>; #include <cstdlib>. int main(); {; auto df = ROOT::RDataFrame(10).Filter(""rdfentry_ > 0"", ""Title with special chars: !@#$%^&*()-=_+{}[]<>?/"");; ROOT::RDF::SaveGraph(df, ""out.dot"");; std::system(""dot -Tpng out.dot > out.png"");; }; ```. yields:. ```; Error: not well-formed (invalid token) in line 1; ... <HTML>Title with special chars: !@#$%^&*()-=_+{}[] ...; in label of node 1; ```. `out.dot` has the following contents:. ```dot; digraph {; 	1 [label=<Title with special chars: !@#$%^&*()-=_+{}[]<>?/>, style=""filled"", fillcolor=""#0f9d58"", shape=""hexagon""];; 	0 [label=<Empty source<BR/>Entries: 10>, style=""filled"", fillcolor=""#f4b400"", shape=""ellipse""];; 	0 -> 1;; }; ```. and changing it to the following seems to fix the problem (enclosing `label` value between quotes rather than between `<>`, substituting `<BR/>` with `\n`:. ```dot; digraph {; 	1 [label=""Title with special chars: !@#$%^&*()-=_+{}[]<>?/"", style=""filled"", fillcolor=""#0f9d58"", shape=""hexagon""];; 	0 [label=""Empty source\nEntries: 10"", style=""filled"", fillcolor=""#f4b400"", shape=""ellipse""];; 	0 -> 1;; }; ```. @ikabadzhov I am not sure whether we need to use HTML rather than plain strings for something else than line breaks. If not, then the two simple substitutions above might be a viable fix.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11173:1306,simpl,simple,1306,https://root.cern,https://github.com/root-project/root/issues/11173,1,['simpl'],['simple']
Usability,"Reproducer:; ```; void gerrors() {; TCanvas *c1 = new TCanvas(""c1"",""A Simple Graph with error bars"",200,10,700,500);. const Int_t n = 10;; Float_t x[n] = {-0.22, 0.05, 0.25, 0.35, 0.5, 0.61,0.7,0.85,0.89,0.95};; Float_t y[n] = {1,2.9,5.6,7.4,9,9.6,8.7,6.3,4.5,1};; Float_t ex[n] = {.05,.1,.07,.07,.04,.05,.06,.07,.08,.05};; Float_t ey[n] = {.8,.7,.6,.5,.4,.4,.5,.6,.7,.8};; TGraphErrors *gr = new TGraphErrors(n,x,y,ex,ey);; gr->SetTitle(""TGraphErrors Example"");; gr->SetMarkerColor(4);; gr->SetMarkerStyle(21);; gr->Draw(""AP|>"");. c1->Update();; auto l = new TLegend(0.45,0.65,0.8,0.8,"""",""NDC"");; l->SetBorderSize(0.);; l->SetTextFont(42);; l->AddEntry(gr, ""TGraphErrors new title"", ""e"");; l->Draw();; }. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14022:70,Simpl,Simple,70,https://root.cern,https://github.com/root-project/root/pull/14022,1,['Simpl'],['Simple']
Usability,"Resolves point 1. of [ROOT-9349](https://sft.its.cern.ch/jira/browse/ROOT-9349): ""[TDF] Only invoke the interpreter once per event loop"". Instead of having one single `JitTransformation` function with two entry points (`CallJit{Define,Filter}`) we now have two separate functions `JitDefine` and `JitFilter` that share several helper functions. There is slightly more code repetition than before, but the code is _much_ simpler. By the time ROOT-9849 is completed `JitDefine` and `JitFilter` will be different enough to justify this separation.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1844:420,simpl,simpler,420,https://root.cern,https://github.com/root-project/root/pull/1844,1,['simpl'],['simpler']
Usability,"Restructure generic pythonization with the following idea:. 1. We would like to have a `_className.py` per class, where all pythonizations are added. However, for the very generic ones, a `_generic.py` file is added.; 2. Rename the implementation of the pretty printing (generic) pythonization so that it's much more clear what you have to expect in the file.; 3. ~~Rename the C++ side of the pythonization from `GenericPythonization` to `AddPrettyPrintingPyz` so that the python side of the pythonization is much more readable. This allows us to see all added pythonizations directly in the pythonization `_className.py` files.~~ We agreed on keeping teh `GenericPyz.cxx` filename of the source, although we want to rename the function `PythonizeGeneric` in a more meaningful way to `AddPrettyPrintingPyz`. That keeps the structure of the sources (one file per class) and enables us to see all pythonization for a class on the python side in the `_class.py` files.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2467:317,clear,clear,317,https://root.cern,https://github.com/root-project/root/pull/2467,1,['clear'],['clear']
Usability,"Result from `git-bisect` on LLVM/Clang between current `release/13.x` and `llvmorg-13-init`:; ```; git bisect start; # bad: [9d9efb1f67ff70e996b1cb7fa00e24b9121be226] [lld][CMake] Add LLD_DEFAULT_NOSTART_STOP_GC; git bisect bad 9d9efb1f67ff70e996b1cb7fa00e24b9121be226; # good: [5369517d20dd362a178a1b2d6c398d8898ee4620] Bump the trunk major version to 13; git bisect good 5369517d20dd362a178a1b2d6c398d8898ee4620; # bad: [711a473cd9e3c8e63ad3460d49fdab1545634dd2] Update testcase for D101333.; git bisect bad 711a473cd9e3c8e63ad3460d49fdab1545634dd2; # bad: [11b70b9e3a7458b5b78c30020b56e8ca563a4801] Revert ""[NPM][CGSCC] FunctionAnalysisManagerCGSCCProxy: do not clear immutable function passes""; git bisect bad 11b70b9e3a7458b5b78c30020b56e8ca563a4801; # good: [97ec8fa5bb07e3f5bf25ddcb216b545cd3d03b65] [Coverage] Store compilation dir separately in coverage mapping; git bisect good 97ec8fa5bb07e3f5bf25ddcb216b545cd3d03b65; # bad: [4096ae06f47af9db2c2550a2c34979edfbd91b8d] [lldb] Support DWARF-5 DW_FORM_line_strp (used by GCC); git bisect bad 4096ae06f47af9db2c2550a2c34979edfbd91b8d; # bad: [d65ddca83ff85c7345fe9a0f5a15750f01e38420] [ValueTracking] ComputeKnownBits - minimum leading/trailing zero bits in LSHR/SHL (PR44526); git bisect bad d65ddca83ff85c7345fe9a0f5a15750f01e38420; # good: [15a74b64dfa9bc1213cd582415f849b4dba51bad] [VPlan] Manage pairs of incoming (VPValue, VPBB) in VPWidenPHIRecipe.; git bisect good 15a74b64dfa9bc1213cd582415f849b4dba51bad; # good: [dd68f3cf2899c554cab7baf3ccdcd3f987d77736] [RISCV] Support insertion of misaligned subvectors; git bisect good dd68f3cf2899c554cab7baf3ccdcd3f987d77736; # good: [97a304cc8f949e40693d63b855b4b24bc81fa729] [scan-build-py] Add sarif-html support in scan-build-py; git bisect good 97a304cc8f949e40693d63b855b4b24bc81fa729; # bad: [0f279c7a5c34eaae797c325c18614def21eba921] Revert ""patch"" it wass my mistake inusing git; git bisect bad 0f279c7a5c34eaae797c325c18614def21eba921; # bad: [56d228a14e3631de157ae98dd61d21193e4502d",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9547#issuecomment-1011201311:665,clear,clear,665,https://root.cern,https://github.com/root-project/root/issues/9547#issuecomment-1011201311,2,['clear'],['clear']
Usability,"Result from the discussion in today's PPP:. Option 1:; - The `Range` node will always stay single threaded and nothing changes here; - We add a new overload for the ctor which takes the range, similar to the `TEntryList` version (but more user friendly); - Upside: Simple to understand; - Downside: Yet another ctor overload, which needs to be implemented for all existing interfaces, e.g. the factory functions. Option 2:; - We let `Range` run with MT enabled if (and just if) the `Range` node is the only one in the graph and the first one after the root node; - Upside: Not another ctor overload; - Downside: Confusing for the user (?)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7702:265,Simpl,Simple,265,https://root.cern,https://github.com/root-project/root/issues/7702,1,['Simpl'],['Simple']
Usability,"Revert ""Further simplify the code. We do not need to use complex disc…",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3734:16,simpl,simplify,16,https://root.cern,https://github.com/root-project/root/pull/3734,2,['simpl'],['simplify']
Usability,"Revert ""[Cling] Simplify std::tuple/pair value printer""",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14197:16,Simpl,Simplify,16,https://root.cern,https://github.com/root-project/root/pull/14197,1,['Simpl'],['Simplify']
Usability,"Revert ""[cmake] Xcode 14 warns about -undefined dynamic_lookup; simply suppress:""",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12045:64,simpl,simply,64,https://root.cern,https://github.com/root-project/root/pull/12045,2,['simpl'],['simply']
Usability,"Revert ""[cmake] simplify copies of misc files into build directory""",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9872:16,simpl,simplify,16,https://root.cern,https://github.com/root-project/root/pull/9872,2,['simpl'],['simplify']
Usability,"Reverting RVec's SBO implementation until we have a proper fix for the crashes seen in ROOT-10079.; ROOT-10079 also reports the discussion and measurements that motivate the reverts. The reverts were not simple: it's a lot of changes and subsequent unrelated commits overwrote part of them (e.g. a change in implementation of `Combinations`, a renaming of many preprocessor flags from `TVec` to `RVec`). I hope I didn't screw it up.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3845:204,simpl,simple,204,https://root.cern,https://github.com/root-project/root/pull/3845,1,['simpl'],['simple']
Usability,Revised and simplified in #1305 .,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1227#issuecomment-343250194:12,simpl,simplified,12,https://root.cern,https://github.com/root-project/root/pull/1227#issuecomment-343250194,2,['simpl'],['simplified']
Usability,"Revisit the doxygen formatting for ROOT 7 graphics.; Make new groups to better reflect the structure in ""Functional part""of the Reference guide.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4473:138,guid,guide,138,https://root.cern,https://github.com/root-project/root/pull/4473,1,['guid'],['guide']
Usability,"Revisiting the hist/hist headers to make them doxygen compatible . Some data members were not commented properly (not the right format). So the comments do not appear on the ref guide, or worst, sometimes a wrong comment appear on a data member.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7726:178,guid,guide,178,https://root.cern,https://github.com/root-project/root/pull/7726,1,['guid'],['guide']
Usability,"Right - @smuzaffar was quite clear that we should separate build failures from test failures. But we now fail for build failures, too, so maybe including test failures in the failed state makes sense? Anyway, just pinging @smuzaffar for his recommendation + arguments before we decide what to do here!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12307#issuecomment-1542423864:29,clear,clear,29,https://root.cern,https://github.com/root-project/root/issues/12307#issuecomment-1542423864,2,['clear'],['clear']
Usability,"Right, I am making this request on behalf of ATLAS, who are writing this type of data member as part of the Event Header structure (in the GUIDs to be exact) which means it is in every data format ever produced (except maybe end-user flat ntuple files). And we have a single global EDM for everything, so changing the Header definition would create a schema difference between the new class and the old one in files. I am a bit afraid to go in that direction, it may create a mess. ; I will still check if some clever ROOT schema evolution may help here.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11732#issuecomment-1318679697:139,GUID,GUIDs,139,https://root.cern,https://github.com/root-project/root/issues/11732#issuecomment-1318679697,1,['GUID'],['GUIDs']
Usability,"Right, clear now. Thanks! This can be closed",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10640#issuecomment-1137195752:7,clear,clear,7,https://root.cern,https://github.com/root-project/root/issues/10640#issuecomment-1137195752,2,['clear'],['clear']
Usability,"Right, good point, the name of the tree (or let's call it dataset) is useful!. Personally I find the markdown syntax too heavy. But if we find a majority for it, I'm happy to implement it ;). Edit: There's the problem for the dataset name that it's not given for all data sources and we would have to make a difference between TTree datasource and for example the simple one with the `RDataFrame(N)` constructor.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7561#issuecomment-809409719:364,simpl,simple,364,https://root.cern,https://github.com/root-project/root/issues/7561#issuecomment-809409719,2,['simpl'],['simple']
Usability,"Right, of course the tests are correctly failing now where they still use `Offset` for the `NewStyle` likelihoods :). We should probably do two things to finish this PR:; 1. Add a test somewhere (I guess `testLikelihoodGradientJob.cxx` is as good a place as any) that fails when creating a likelihood with the two arguments together. The test can simply check whether the output of `createNLL` is `0`.; 2. Remove `Offset` from the `NewStyle` likelihood creation lines. _Side note:_ I think it would be much better if [`createNLL` just throws here](https://github.com/root-project/root/blob/master/roofit/roofitcore/src/RooAbsPdf.cxx#L1032) instead of returning zero and causing segfaults along the way. But this is probably an issue for a different PR. Would probably be good to run by Wouter to make sure there are no valid usecases of returning a `nullptr`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11650#issuecomment-1330379864:347,simpl,simply,347,https://root.cern,https://github.com/root-project/root/pull/11650#issuecomment-1330379864,2,['simpl'],['simply']
Usability,"Right, so this means this PR is adding a new method that allows to address the cases such as the one reported by the linked issue, but it's not a drop-in replacement, the user needs to actively know that the new method exists and use it. All clear now, thanks for the explanation.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14671#issuecomment-1957093709:242,clear,clear,242,https://root.cern,https://github.com/root-project/root/pull/14671#issuecomment-1957093709,2,['clear'],['clear']
Usability,"RooCacheManager` and `RooObjCacheManager` classes as transient; whereever they are used in RooFit, effectively excluding them from I/O. This change was made primarily to fix a bug happening when models are; read back from a ROOT file (the pointes in `RooAbsArg::_cacheList` were; not correct anymore), but it also has the nice effect of reducing the; size of RooFit models. The classes were almost de-facto removed from I/O already, because; almost all of their data members were excluded from I/O anyway. The only; exceptions are the following data members:. * `RooObjCacheManager::_clearOnRedirect`. * `RooObjCacheManager::_allowOptimize`. * `RooAbsCache::_owner`. All of these values are set in the respective constructors and are never; changed. To make these values consistent even if a class that uses a; cache is read back from a ROOT file, the correct constructor for the; cache is now also called in the default I/O constructors of the classes. A simple reproducer to see problem with `RooAbsArg::_cacheList` after reading back the model:. ```C++; #define private public. #include ""RooWorkspace.h""; #include ""RooGaussian.h"". #include ""TFile.h"". void reproducer() {. {; RooWorkspace w(""w"",""w"");; w.factory(""RooGaussian::gaus(x[0,-10,10],mean[0,-10,10],sigma[1,0.1,10.0])"");; w.writeToFile(""file.root"");. auto gaus = w.pdf(""gaus"");; std::cout << &gaus->_normMgr << std::endl;; std::cout << gaus->getCache(0) << std::endl;; std::cout << gaus->numCaches() << std::endl;. gaus->IsA()->GetListOfDataMembers()->Print();; }. {; TFile f1(""file.root"");; auto w =f1.Get<RooWorkspace>(""w"");. auto gaus = w->pdf(""gaus"");; std::cout << &gaus->_normMgr << std::endl;; std::cout << gaus->getCache(0) << std::endl;; std::cout << gaus->numCaches() << std::endl;. delete w;; }. }; ```. Here the nice report from @will-cern (thanks!!) that motivated this PR to give some more context:. > have been recently working on a workflow that involved repeatedly writing and reading workspaces, and I wanted to understand",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8764:1028,simpl,simple,1028,https://root.cern,https://github.com/root-project/root/pull/8764,1,['simpl'],['simple']
Usability,"RooFit proxies act similar to a smart pointer. It was, however, not; possible to mutate the pointed-to object if the owning proxy was const.; That's counter-intuitive. A proxy to a const object can still be achieved by choosing the template; parameter const, e.g.; RooTemplateProxy<const RooAbsPdf>. (cherry picked from commit 976f1273b4fcd257f96fcf77c367b2704aba7fa5)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5969:157,intuit,intuitive,157,https://root.cern,https://github.com/root-project/root/pull/5969,2,['intuit'],['intuitive']
Usability,"RooFit proxies act similar to a smart pointer. It was, however, not; possible to mutate the pointed-to object if the owning proxy was const.; That's counter-intuitive. A proxy to a const object can still be achieved by choosing the template; parameter const, e.g.; ```; RooTemplateProxy<const RooAbsPdf>; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5966:157,intuit,intuitive,157,https://root.cern,https://github.com/root-project/root/pull/5966,1,['intuit'],['intuitive']
Usability,"RooFormula was overhauled, which seems to be the only place where regexes show up in diffs. I think there's two simple things we can do to trace it down in a second:; - You attach a debugger and set a breakpoint on exception throw.; - You post an example that the root team can run. In the end, it can probably be solved by escaping the relevant characters in the name of an object.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7115#issuecomment-777299090:112,simpl,simple,112,https://root.cern,https://github.com/root-project/root/issues/7115#issuecomment-777299090,2,['simpl'],['simple']
Usability,"ST printing, remove it, or keep it ""rotten"" as you put it? We have significant coverage of it, and we can witness that it's doing a good job. I have two answers (sorry!). My preference is for someone to step up and maintain it because, as you point out, it can perform useful work that people are already using today and so it should be actively maintained. However, I don't have the time to commit to it myself, and code reviewers have never traditionally required patch authors to spend much effort on -ast-print support, so this maintenance isn't likely to happen without someone dedicating effort to it. If nobody steps up to maintain it, my personal preference would be to remove the feature, but it'd definitely require a community RFC to do so -- that gives everyone an opportunity to speak up about why it's critical to keep it (and hopefully drums up a volunteer to maintain it with more regularity). It's not at all clear to me how the community would react to such an RFC, and it's also not clear to me whether we'd need to do OTHER work to prep for removing the functionality (e.g., if ObjC modernization rewriting relies on -ast-print being ""good enough"", we might want to also rip out ObjC moderanization rewriting at the same time, which is another RFC, and so on). FWIW, I'd be happy to be a reviewer for any reviews maintaining or improving `-ast-print` behavior in community (not trying to apply pressure!). > We'd be happy to keep this change minimal, e.g. escape only what needs to be escaped rather than going all in on showing the original spelling of the source code. I think for something that minimal, the cost / benefit ration would be about right. That's just my opinion; your opinion is what counts here!. In terms of the changes you need to make to keep -ast-print working for you, I guess I see two ways of going about it. You can either do just the `CreateImplicit()` modifications so that you can do special handling of raw string literals. That'd be the smallest chan",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10830#issuecomment-1171474521:1208,clear,clear,1208,https://root.cern,https://github.com/root-project/root/pull/10830#issuecomment-1171474521,4,['clear'],['clear']
Usability,"Same as #3938, but for 6.18; When running eve7 application snapshot, server does not have functionality at all.; Therefore special highlight or selection requests cannot be processed.; Also add simple checks when selection is not possible.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3939:194,simpl,simple,194,https://root.cern,https://github.com/root-project/root/pull/3939,1,['simpl'],['simple']
Usability,Second iteration of the distributed RunGraphs function. The logic is greatly simplified now.; * There is no need (at this moment) to provide separate implementations of RunGraphs for each distributed backend. Both Spark and Dask support submitting tasks from multiple Python threads. So a common ThreadPool is cleaner and also allows to use different backends at the same time in principle; * The `GetValue` method of the proxy has been split in two functions to separate its functionalities. The `execute_graph` method is called in `RunGraphs`,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9344:77,simpl,simplified,77,https://root.cern,https://github.com/root-project/root/pull/9344,1,['simpl'],['simplified']
Usability,"See `tutorials/pyroot/pyroot004_NumbaDeclare.py`: we currently support `RVec<int>` or similar in the signature of the Python function passed to Numba, but we don't support `RVecI`, `RVecD` and the other aliases. Maybe Ivan can take a look with Enric's guidance?",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9898:252,guid,guidance,252,https://root.cern,https://github.com/root-project/root/issues/9898,1,['guid'],['guidance']
Usability,See explanation about the User's Guide here: https://github.com/root-project/root/issues/7284,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7279#issuecomment-785885584:33,Guid,Guide,33,https://root.cern,https://github.com/root-project/root/issues/7279#issuecomment-785885584,1,['Guid'],['Guide']
Usability,"See https://github.com/root-project/root/pull/12650. On an extreme example:; ```; 15,272,928 entries; 152,739 baskets (and as many clusters); 10,000 Actual TTreeCache buffer size (minimum allowed); 8,442 estimated buffer size of TTreeCache (1.5 times compressed buffer size); 400 bytes per baskets; 100 entries per baskets (i.e. per clusters); 25 number of cluster per TTreeCache buffer for single branch with default size.; 1 float per entry (reading a single branch).; ```; This repairs the performance of a simple TTree::Draw of a single branch; from 1 hour back down to 7s (performance seem in v6.12). One additional improvement, increase the performance by 20% on that same example.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12651:510,simpl,simple,510,https://root.cern,https://github.com/root-project/root/pull/12651,1,['simpl'],['simple']
Usability,"See https://root-forum.cern.ch/t/segfault-when-using-schema-evolution/43765. Hello,. We have an issue that we have not been able to solve, nor understand. We hope you can provide some help. We have a class written into a TTree with one of its Base class having been modified. We have udpated the class version during the modification. In the ROOT file, we have version 1 of the class (TVHit) while in the current software, we have version 2 of the class. We wrote in the LinkDef file a #pragma instruction on how to transform v1 into v2. When this #pragma line is omitted, we obviously read the wrong information from the input file, because the definition in the code does not correspond to the definition on file (as expected). But when using the #pragma line, we simply get a segfault while trying to read the TTree. I have prepared a self-contained minimal working example attached to this topic: [mwe.tgz|attachment](upload://34Fdg60DY7tGGh6cw40YICFFhLy.tgz) (224.3 KB) . The archive contains the following README.md with more details on how to reproduce the issue, and on the exact content of the archive:. Steps to reproduce issue on Minimal Working Example (MWE); =============================; - Set the ROOT_INCLUDE_PATH and LD_LIBRARY_PATH; `source env.sh`; - Compile the minimal persistency library; `make`; - Run test code on new persistency (opens pluto_newpers.root and reads the tree successfully); `root read_updated.C\(1\)`; or; `read_updated 1`; - Run test code on old persistency (opens pluto_oldpers.root and crashes when trying to read the tree); `root read_updated.C(\(0\)`; or; `read_updated 0`. The crash is traced back to line 109 of PersistencyDICT.cxx; `static Long_t offset_Onfile_TVHit_fMCTrackID = oldObj->GetClass()->GetDataMemberOffset(""fMCTrackID"");`; where GetClass returns a nullptr. Content of the archive; ======================; - The header files in include contain the current definition of the minimal persistency necessary to ; read the input files (TVHit ve",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7754:766,simpl,simply,766,https://root.cern,https://github.com/root-project/root/issues/7754,1,['simpl'],['simply']
Usability,"See the commit messages for more details. The first commit in this PR partly fixes https://github.com/root-project/root/issues/9196. Simple code to reproduce the issue that this PR is fixing:; ```C++; #include ""RooRealVar.h"". #include ""TSystem.h"". void reproducer(); {; ProcInfo_t pinfo;; for(std::size_t i = 0; i < 10000; ++i) {. RooRealVar x(""x"",""x"",0);; RooRealVar y(x);. if(i % 500 == 0) {; gSystem->GetProcInfo(&pinfo);; std::cout << i << "" memory usage "" << pinfo.fMemResident; << "" "" << pinfo.fMemVirtual << std::endl;; }. }; }; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9270:133,Simpl,Simple,133,https://root.cern,https://github.com/root-project/root/pull/9270,1,['Simpl'],['Simple']
Usability,"See the linked PR for a hack to fix the issue. Looking at the issue in a debug build, I could find out that cppyy is the culprit. The issue is that if you import ROOT in another process (and the import happens in a previously pickled function), then cppyy is not there and some random INCREF on the cppyy module segfaults because of accessing a nullptr. It's to be discussed how to fix this properly since the implicit contracts done by pickle are not clear to me.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6765#issuecomment-730306449:452,clear,clear,452,https://root.cern,https://github.com/root-project/root/issues/6765#issuecomment-730306449,2,['clear'],['clear']
Usability,"Seems to be, cling/llvm9 have problems to parse OCCI headers.; If oracle plugin enabled, root crashes when running hsimple.C.; Looking in back-trace, one can identify that it crashes by accessing or rebuilding libOracle module.; Most simple way to resolve issue - remove OCCI includes from `TOracle...` header files.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7497:234,simpl,simple,234,https://root.cern,https://github.com/root-project/root/issues/7497,1,['simpl'],['simple']
Usability,"Seems to be, simple `// NOLINT` should do the job",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7412#issuecomment-794193604:13,simpl,simple,13,https://root.cern,https://github.com/root-project/root/issues/7412#issuecomment-794193604,2,['simpl'],['simple']
Usability,"SelectionDAGISel::SelectAllBasicBlocks(llvm::Function const&) (in /home/axel/build/root/24/rel/lib/libCling.so); ==30221== by 0x9E3214B: llvm::SelectionDAGISel::runOnMachineFunction(llvm::MachineFunction&) [clone .part.0] (in /home/axel/build/root/24/rel/lib/libCling.so); ==30221== by 0x98D5399: (anonymous namespace)::X86DAGToDAGISel::runOnMachineFunction(llvm::MachineFunction&) (in /home/axel/build/root/24/rel/lib/libCling.so); ==30221== by 0x9FE37CA: llvm::MachineFunctionPass::runOnFunction(llvm::Function&) (in /home/axel/build/root/24/rel/lib/libCling.so); ==30221== by 0xB1BAA47: llvm::FPPassManager::runOnFunction(llvm::Function&) (in /home/axel/build/root/24/rel/lib/libCling.so); ==30221== by 0xB1BAAD0: llvm::FPPassManager::runOnModule(llvm::Module&) (in /home/axel/build/root/24/rel/lib/libCling.so); ==30221== by 0xB1B9A9F: llvm::legacy::PassManagerImpl::run(llvm::Module&) (in /home/axel/build/root/24/rel/lib/libCling.so); ==30221== by 0x965F899: llvm::orc::SimpleCompiler::operator()(llvm::Module&) (in /home/axel/build/root/24/rel/lib/libCling.so); ==30221== by 0x84B1E3A: std::_Function_handler<llvm::Expected<unsigned long> (), llvm::orc::LazyEmittingLayer<llvm::orc::LegacyIRCompileLayer<cling::IncrementalJIT::RemovableObjectLinkingLayer, llvm::orc::SimpleCompiler> >::EmissionDeferredModule::find(llvm::StringRef, bool, llvm::orc::LegacyIRCompileLayer<cling::IncrementalJIT::RemovableObjectLinkingLayer, llvm::orc::SimpleCompiler>&)::{lambda()#1}>::_M_invoke(std::_Any_data const&) (in /home/axel/build/root/24/rel/lib/libCling.so); ==30221== by 0x84A2F16: cling::IncrementalExecutor::executeWrapper(llvm::StringRef, cling::Value*) const (in /home/axel/build/root/24/rel/lib/libCling.so); ==30221== by 0x8441754: cling::Interpreter::RunFunction(clang::FunctionDecl const*, cling::Value*) (in /home/axel/build/root/24/rel/lib/libCling.so); ==30221== by 0x844457C: cling::Interpreter::EvaluateInternal(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<cha",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8899:1920,Simpl,SimpleCompiler,1920,https://root.cern,https://github.com/root-project/root/issues/8899,1,['Simpl'],['SimpleCompiler']
Usability,"Sergey, I have refactored GL.controller.js to have separate viewer classes for JSRoot and THREE (and for RenderCore). The changes here are completely incompatible. Can you please undo the GL.controller changes and then we put them back into the JSRoot painter after the refactoring is merged?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4966#issuecomment-584792756:179,undo,undo,179,https://root.cern,https://github.com/root-project/root/pull/4966#issuecomment-584792756,2,['undo'],['undo']
Usability,"Sergey, all good questions, thank you :). > 1. Do we need to include all these fonts into ROOT repository? Font files are big and used only via random generator in tutorial. No, we can remove most of them, rebase and force-push to the branch. > 2. How to deal with other fonts? Maybe one can include one default font in `ui5/eve7/` folder, one or two fonts as examples in tutorials and provide recipe where other fonts can be found?. Yes, we could do that. Font textures and metrics files are generated from TTF via https://github.com/osschar/sdf_atlas. It's a small tool, easy to build on linux -- so we could provide instructions for this and also a catalog/web-site with a bunch of pre-generated fonts. > 3. If I understand correct, `REveText` rendering will be only supported with RenderCore? That about three.js? Beside fonts support it is easy to implement text rendering there. Yes, I know ... they have a monster implementation(s) of fonts. Seeing that I went looking for something super simple and still good looking :). Now, this is a bit unfortunate ... but I don't think I have the bandwidth to keep Three fully supported. Also, the low-level, renderer- and shader-level support we are getting from RenderCore (in particular, for picking & rendering of instanced objects and the upcoming spline-based line rendering) is making it possible to support features and performance optimizations that I do not think would be doable in Three with the time budget we all have and the level of changes we can do in core Three (zero, unless we can hack over it locally). > 4. Is it possible to support other font formats - like TTF or OTF? ROOT already includes such fonts, is it an option?. This would be nice, sdf_atlas could be incorporated into root (it requires minimal GL support which we already have) -- and one could then generate the missing SDF fonts during the startup of a demo/application. License is free to use in whatever way, just keep the copyright notice. But it only supports TTF",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15812#issuecomment-2161600927:996,simpl,simple,996,https://root.cern,https://github.com/root-project/root/pull/15812#issuecomment-2161600927,2,['simpl'],['simple']
Usability,"Several changes were made. Firstly, several bugs were fixed in converttonotebook.py. The filter was modified to replace the \notebook line in a simple manner. Many tutorials were modified slightly, either ensuring tabs were three spaces as well as adding `-js`or `-nodraw` options. Finally, preprocessor statements involving `__CINT__` were removed from the tutorials, as well as `gStyle->SetPalette(1)`",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/216:144,simpl,simple,144,https://root.cern,https://github.com/root-project/root/pull/216,1,['simpl'],['simple']
Usability,"Several improvements to the [`RooDataSet` constructor](https://root.cern.ch/doc/master/classRooDataSet.html#a6a2302f27e1b016a0351f6e0a0329fa2) that takes command arguments to import other data:. 1. Automatically create weight variable when importing multiple data slices (closes #11487); 2. Support importing also RooDataHists (also as slices for combined datasets), and filling the weight errors correctly to match the `weightSquared()`; 3. Create the weight variable on the fly if it was specified by name in `WeightVar()` but is not in the list of variables; 4. Have a default argument for `WeightVar(=""weight"")`, because that's usually the name anyway; 5. Fix `RooVectorDataStore::loadValues()` for loading values from another vector data store: so far it used `assignValueOnly` to copy the values over, but the values might have errors, like for example in the case of importing a RooDataHist. That's why the regular `RooAbsCollection::assign()` is used now. All of these changes result in several code simplifications in the cases where RooDataSets are imported from other data, and fixes the bugs that might have been because the `weightSqaured()` was usually not transferred correctly.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12227:1008,simpl,simplifications,1008,https://root.cern,https://github.com/root-project/root/pull/12227,1,['simpl'],['simplifications']
Usability,"Should be cleared up. Using `depends_on :xcode if MacOS.version <= :catalina`, this gets the right paths and works. Will close here, and hopefully the PR will be merged soon in homebrew.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7881#issuecomment-900729941:10,clear,cleared,10,https://root.cern,https://github.com/root-project/root/issues/7881#issuecomment-900729941,2,['clear'],['cleared']
Usability,"Should be something as simple as:. ```; git clone our/llvm/fork; git clone cling; git checkout cling-latest; cmake -DLLVM_ENABLE_PROJECTS=clang -DCMAKE_BUILD_TYPE=Debug -DLLVM_TARGETS_TO_BUILD=""host;nvptx"" -DLLVM_EXTERNAL_PROJECTS=""cling"" -DLLVM_EXTERNAL_CLING_SOURCE_DIR=/path/to/where/we/cloned/cling ../llvm; make check-cling; ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14972#issuecomment-1998169426:23,simpl,simple,23,https://root.cern,https://github.com/root-project/root/issues/14972#issuecomment-1998169426,2,['simpl'],['simple']
Usability,"Should fix the following compilation warnings with `gcc 11` and the current `builtin_tbb`:; ```; In file included from ginclude/tbb/tbb.h:48,; from /home/vpadulan/Programs/rootproject/root/core/imt/src/TThreadExecutor.cxx:10:; ginclude/tbb/concurrent_hash_map.h: In constructor 'tbb::interface5::internal::hash_map_base::hash_map_base()':; ginclude/tbb/concurrent_hash_map.h:131:24: warning: 'void* memset(void*, int, size_t)' clearing an object of type 'struct tbb::interface5::internal::hash_map_base::bucket' with no trivial copy-assignment; use value-initialization instead [-Wclass-memaccess]; 131 | std::memset(my_embedded_segment, 0, sizeof(my_embedded_segment));; | ~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~; ginclude/tbb/concurrent_hash_map.h:93:16: note: 'struct tbb::interface5::internal::hash_map_base::bucket' declared here; 93 | struct bucket : tbb::internal::no_copy {; | ^~~~~~; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9067:427,clear,clearing,427,https://root.cern,https://github.com/root-project/root/pull/9067,1,['clear'],['clearing']
Usability,Should we also update: User's guide: documentation/users-guide/Trees.md ?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6600#issuecomment-712221990:30,guid,guide,30,https://root.cern,https://github.com/root-project/root/pull/6600#issuecomment-712221990,4,['guid'],['guide']
Usability,"Similar to #1777 but cleaned up and clearly separated from #1856. Implements memory adoption of `TVec` and `std.vector` for data-types `int`, `unsigned int`, `long`, `unsigned long`, `float` and `double` with numpy arrays using `numpy.asarray(root_obj)`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1871:36,clear,clearly,36,https://root.cern,https://github.com/root-project/root/pull/1871,1,['clear'],['clearly']
Usability,"Simple C++ code to demonstrate the problem:; ```C++; TF1{""f1"", ""1.0++x++x*x++x*x*x"", -1.0, 1.0}.Print();; ```; Before this commit, running this line gave you:; ```; Formula based function: f1; f1 : 1.0++x++x*x++x*x*x Ndim= 1, Npar= 3, Number= 0; Formula expression:; ([p0]*(1.0))+([p1]*(x))+([p2]*(x*x))+([p2]*(x*x))*x; ```. The problem is that `TFormula::HandleLinear()` uses pattern-matching to; replace the strings representing the linear terms. This is problematic; if one of the strings is a substring of another one.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8801:0,Simpl,Simple,0,https://root.cern,https://github.com/root-project/root/pull/8801,1,['Simpl'],['Simple']
Usability,"Simple PR, changes the year from 2023 to 2024",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14447:0,Simpl,Simple,0,https://root.cern,https://github.com/root-project/root/pull/14447,1,['Simpl'],['Simple']
Usability,Simple TGraph ctor,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10588:0,Simpl,Simple,0,https://root.cern,https://github.com/root-project/root/pull/10588,1,['Simpl'],['Simple']
Usability,Simple `Int_t(v)` truncation was used for conversion user or NDC coordinates into pixel.; And of course it does not match very often. To somehow compensate this behavior strange `rounding = 0.00005` was introduced long time ago. Now use normal `TMath::Nint(v)`. And `rounding` no longer necessary. Also move inlined TPad methods into source file - `inline` makes no sense with virtual methods. This PR fixes #14546,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14837:0,Simpl,Simple,0,https://root.cern,https://github.com/root-project/root/pull/14837,1,['Simpl'],['Simple']
Usability,Simple addition of the GetColumnType function to distributed RDF. . This PR fixes #15039,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16347:0,Simpl,Simple,0,https://root.cern,https://github.com/root-project/root/pull/16347,1,['Simpl'],['Simple']
Usability,Simple backport of the latest fixes that landed in master.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1538:0,Simpl,Simple,0,https://root.cern,https://github.com/root-project/root/pull/1538,1,['Simpl'],['Simple']
Usability,Simple fix to force LLVM to use CXX1Y when cxx14 is enabled.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/195:0,Simpl,Simple,0,https://root.cern,https://github.com/root-project/root/pull/195,1,['Simpl'],['Simple']
Usability,"Simple grammar fix correcting ""to"" to ""too"" and adjusting confusing period usage.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4740:0,Simpl,Simple,0,https://root.cern,https://github.com/root-project/root/pull/4740,1,['Simpl'],['Simple']
Usability,Simple mods for TText.hxx,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1873:0,Simpl,Simple,0,https://root.cern,https://github.com/root-project/root/pull/1873,1,['Simpl'],['Simple']
Usability,"Simple notebook test times out when root7=on, webgui=Off",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/16689:0,Simpl,Simple,0,https://root.cern,https://github.com/root-project/root/issues/16689,1,['Simpl'],['Simple']
Usability,"Simple repo:; ```C++; void repo() {; int i = 10000;; TTree t(""t"", ""title"");; t.Branch(""b"", &i, ""i/I"");; for (int e = 0; e < 50000000; ++e) {; t.Fill();; }; t.Draw(""b.i"");; std::cout << ((TH1*)gDirectory->FindObject(""htemp""))->GetMaximum() << '\n';; }; ```; Prints `1.67772e+07` and really shouldn't.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6671#issuecomment-791285746:0,Simpl,Simple,0,https://root.cern,https://github.com/root-project/root/issues/6671#issuecomment-791285746,1,['Simpl'],['Simple']
Usability,"Simple reproducer at the ROOT prompt:. ```cpp; ~ root -l; root [0] ROOT::RVec<std::vector<float>> rv(10);; root [1] rv[ROOT::RVecI{1,1,0,0,0,0,0,0,0,0}][0].capacity(); ROOT_prompt_1:1:1: warning: ignoring return value of function declared with 'nodiscard' attribute [-Wunused-result]; rv[ROOT::RVecI{1,1,0,0,0,0,0,0,0,0}][0].capacity(); ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~; (unsigned long) 18446720510731583839. *** Break *** segmentation violation; ```. The implementation of `RVecN RVecN::operator[](const RVecN<V, M> &conds) const` assumes that the type is trivially-constructible, using `reserve` + copy-assignment + manual resizing (which never properly constructs the new elements) rather than `reserve` + `push_back` (which would constructs the new elements in place). This seems to be also the root cause of the crash/hang reported at https://root-forum.cern.ch/t/root-snapshot-function-seems-to-be-blocked-when-using-vector-vector-float/53696 .",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12398:0,Simpl,Simple,0,https://root.cern,https://github.com/root-project/root/issues/12398,1,['Simpl'],['Simple']
Usability,"Simple search for following includes were done:. * `TSystem.h`, ; * `TStyle.h`; * `TClass.h`; * `TEnv.h`; * `TObjString.h`; * `TObjArray.h`; * `TList.h`. These are relative ""big"" includes, therefore can improve compilation and dependencies. Let see which tests are affected",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5069:0,Simpl,Simple,0,https://root.cern,https://github.com/root-project/root/pull/5069,1,['Simpl'],['Simple']
Usability,"Simpler reproducer:; ```; {; gStyle->SetOptStat(0);; gStyle->SetOptTitle(0);. auto C = new TCanvas();; C->Divide(2,1);. auto h15 = new TH1F(""h15"",""h15"", 3, 10, 15);; auto h25 = new TH1F(""h25"",""h25"", 5, 0, 25);. h15->Fill(11,.5);; h15->Fill(12,1.);; h15->Fill(14,.5);; h15->SetLineWidth(3);. h25->Fill(1,1);; h25->Fill(6,2);; h25->Fill(11,3);; h25->Fill(16,2);; h25->Fill(23,1);; h25->SetLineColor(2);; h25->SetLineWidth(3);; h25->SetMinimum(.05);. C->cd(1);; h25->Draw(""hist"");; h15->Draw(""hist same"");; gPad->SetLogy(1);; gPad->SetGridx(1);; gPad->SetGridy(1);. C->cd(2);; h25->Draw(""hist"");; h15->Draw(""hist same"");; gPad->SetGridx(1);; gPad->SetGridy(1);; }; ```; <img width=""673"" alt=""Screenshot 2023-03-07 at 16 52 02"" src=""https://user-images.githubusercontent.com/4697738/223475015-4d72384f-e7d0-4d1c-8428-c3addbcd7973.png"">",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12394#issuecomment-1458405064:0,Simpl,Simpler,0,https://root.cern,https://github.com/root-project/root/issues/12394#issuecomment-1458405064,1,['Simpl'],['Simpler']
Usability,Simpler version of line.cxx,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1920:0,Simpl,Simpler,0,https://root.cern,https://github.com/root-project/root/pull/1920,1,['Simpl'],['Simpler']
Usability,Simplification of building builtin LZ4 and fixing ROOT-9071,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1225:0,Simpl,Simplification,0,https://root.cern,https://github.com/root-project/root/pull/1225,1,['Simpl'],['Simplification']
Usability,Simplifies `RNTuple::Show` and fixes the ntpl005 tutorial. Show now uses unconditionally the model bound to the reader.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12667:0,Simpl,Simplifies,0,https://root.cern,https://github.com/root-project/root/pull/12667,1,['Simpl'],['Simplifies']
Usability,Simplifies script and allows to capture (and log) essential config values. Some more drive-by code fixes. # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13488:0,Simpl,Simplifies,0,https://root.cern,https://github.com/root-project/root/pull/13488,1,['Simpl'],['Simplifies']
Usability,"Simplifies types, considerably.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2302:0,Simpl,Simplifies,0,https://root.cern,https://github.com/root-project/root/pull/2302,1,['Simpl'],['Simplifies']
Usability,Simplifies usage for the use-case:. https://root-forum.cern.ch/t/thttpserver-without-items-from-groot-only-explicitly-registered/24640,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/624:0,Simpl,Simplifies,0,https://root.cern,https://github.com/root-project/root/pull/624,1,['Simpl'],['Simplifies']
Usability,Simplify CMake integration of LLVM,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13221:0,Simpl,Simplify,0,https://root.cern,https://github.com/root-project/root/pull/13221,1,['Simpl'],['Simplify']
Usability,Simplify CallFunc,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10850:0,Simpl,Simplify,0,https://root.cern,https://github.com/root-project/root/pull/10850,1,['Simpl'],['Simplify']
Usability,Simplify CallFunc. NFC,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12745:0,Simpl,Simplify,0,https://root.cern,https://github.com/root-project/root/pull/12745,1,['Simpl'],['Simplify']
Usability,Simplify Code. NFC.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2452:0,Simpl,Simplify,0,https://root.cern,https://github.com/root-project/root/pull/2452,1,['Simpl'],['Simplify']
Usability,Simplify Doxyfile,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8451:0,Simpl,Simplify,0,https://root.cern,https://github.com/root-project/root/pull/8451,1,['Simpl'],['Simplify']
Usability,"Simplify EmptyCollection(). Thanks, Wolf Behrenhoff!",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1577:0,Simpl,Simplify,0,https://root.cern,https://github.com/root-project/root/pull/1577,1,['Simpl'],['Simplify']
Usability,Simplify PgSQL plugin,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9738:0,Simpl,Simplify,0,https://root.cern,https://github.com/root-project/root/pull/9738,1,['Simpl'],['Simplify']
Usability,Simplify ProcessRunCommand(),MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4926:0,Simpl,Simplify,0,https://root.cern,https://github.com/root-project/root/pull/4926,1,['Simpl'],['Simplify']
Usability,Simplify callfunc more,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11193:0,Simpl,Simplify,0,https://root.cern,https://github.com/root-project/root/pull/11193,1,['Simpl'],['Simplify']
Usability,Simplify check for out-of-source build,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4132:0,Simpl,Simplify,0,https://root.cern,https://github.com/root-project/root/pull/4132,1,['Simpl'],['Simplify']
Usability,Simplify cling value,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11380:0,Simpl,Simplify,0,https://root.cern,https://github.com/root-project/root/pull/11380,1,['Simpl'],['Simplify']
Usability,"Simplify code, remove race condition. It didn't do much harm, but it's also not a good idea to show this in a tutorial ... - [x] tested changes locally; - [x] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9352:0,Simpl,Simplify,0,https://root.cern,https://github.com/root-project/root/pull/9352,1,['Simpl'],['Simplify']
Usability,Simplify complex code to build URI string from components,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7612:0,Simpl,Simplify,0,https://root.cern,https://github.com/root-project/root/pull/7612,1,['Simpl'],['Simplify']
Usability,Simplify distrdf relnotes for v6.26,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9526:0,Simpl,Simplify,0,https://root.cern,https://github.com/root-project/root/pull/9526,1,['Simpl'],['Simplify']
Usability,Simplify implementation of TBufferMerger using TFileMerger directly,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/577:0,Simpl,Simplify,0,https://root.cern,https://github.com/root-project/root/pull/577,1,['Simpl'],['Simplify']
Usability,Simplify implementation of TClass::FindClassOrBaseMethodWithId(),MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/908:0,Simpl,Simplify,0,https://root.cern,https://github.com/root-project/root/pull/908,1,['Simpl'],['Simplify']
Usability,Simplify llvm::Module emission in the JIT.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1050:0,Simpl,Simplify,0,https://root.cern,https://github.com/root-project/root/pull/1050,1,['Simpl'],['Simplify']
Usability,Simplify memory regulation logic,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16837:0,Simpl,Simplify,0,https://root.cern,https://github.com/root-project/root/pull/16837,1,['Simpl'],['Simplify']
Usability,Simplify query for include directories,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4201:0,Simpl,Simplify,0,https://root.cern,https://github.com/root-project/root/pull/4201,1,['Simpl'],['Simplify']
Usability,Simplify some graphics examples.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14457:0,Simpl,Simplify,0,https://root.cern,https://github.com/root-project/root/pull/14457,2,['Simpl'],['Simplify']
Usability,Simplify table proxy builders,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3497:0,Simpl,Simplify,0,https://root.cern,https://github.com/root-project/root/pull/3497,1,['Simpl'],['Simplify']
Usability,"Simplify test code as a consequence, add a test.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3021:0,Simpl,Simplify,0,https://root.cern,https://github.com/root-project/root/pull/3021,2,['Simpl'],['Simplify']
Usability,Simplify the deregistration procedure to `RLoopManager` and avoid relying on the order during member destruction of `RColumnRegister`.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10072:0,Simpl,Simplify,0,https://root.cern,https://github.com/root-project/root/pull/10072,1,['Simpl'],['Simplify']
Usability,Simplify the platform-dependent part of a couple of add_custom_command,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12341:0,Simpl,Simplify,0,https://root.cern,https://github.com/root-project/root/pull/12341,1,['Simpl'],['Simplify']
Usability,Simplify the reading loop (thanks Axel!),MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9982:0,Simpl,Simplify,0,https://root.cern,https://github.com/root-project/root/pull/9982,1,['Simpl'],['Simplify']
Usability,Simplify the test for std::make_unique,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1210:0,Simpl,Simplify,0,https://root.cern,https://github.com/root-project/root/pull/1210,1,['Simpl'],['Simplify']
Usability,Simplify travis runner,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1775:0,Simpl,Simplify,0,https://root.cern,https://github.com/root-project/root/pull/1775,1,['Simpl'],['Simplify']
Usability,Simplify version definition,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13620:0,Simpl,Simplify,0,https://root.cern,https://github.com/root-project/root/pull/13620,1,['Simpl'],['Simplify']
Usability,Simplify writing multiple `RNTuple`s in a single open `TFile`.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6224:0,Simpl,Simplify,0,https://root.cern,https://github.com/root-project/root/pull/6224,1,['Simpl'],['Simplify']
Usability,Simply include `...fwd.h` in the `...h` header and you're guaranteed that they typedefs are consistent.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8224#issuecomment-865010365:0,Simpl,Simply,0,https://root.cern,https://github.com/root-project/root/pull/8224#issuecomment-865010365,1,['Simpl'],['Simply']
Usability,Simply load MultiView.C macro and does not try to compile it; It only defines some simple service GUI structures,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7218:0,Simpl,Simply,0,https://root.cern,https://github.com/root-project/root/pull/7218,2,"['Simpl', 'simpl']","['Simply', 'simple']"
Usability,Simply reuses the XXHASH implementation from the LZ4 library (also; used in the LZ4 frame format). @oshadura @jblomer - this should provide reasonable protection against bit-flips.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/907:0,Simpl,Simply,0,https://root.cern,https://github.com/root-project/root/pull/907,1,['Simpl'],['Simply']
Usability,Since root-project/root@10a0dec we do not expose flags from the build system; directly to rootcling. We use that opportunity to simplify the setup while; preparing rootcling for the new argument parser.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4269:128,simpl,simplify,128,https://root.cern,https://github.com/root-project/root/pull/4269,1,['simpl'],['simplify']
Usability,"Since the distributed RDataFrame feature is experimental let's give it access to more modern features of the Python language. 3.7 seems a good compromise between maturity (released in October 2018) and features (typing, dataclasses). **NOTE**:; I'm uncertain about whether giving a message at configure time that DistRDF is active in the build process. I have put a simple message for now, could be changed or removed. Let me know your opinions",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9060:366,simpl,simple,366,https://root.cern,https://github.com/root-project/root/pull/9060,1,['simpl'],['simple']
Usability,"Since the errors are true and valid, shouldn't we keep them? Or make them more clear as in `you are trying to access a system-protected file"" or something similar?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14865#issuecomment-1973061065:79,clear,clear,79,https://root.cern,https://github.com/root-project/root/pull/14865#issuecomment-1973061065,2,['clear'],['clear']
Usability,"Small update to give further context, the following seemingly similar but subtly different snippet works also for ROOT 6.32. ```python; import ROOT. def main():; ROOT.gInterpreter.ProcessLine(""const auto myvec = TVectorT<float>();""); print(ROOT.myvec). if __name__ == ""__main__"":; raise SystemExit(main()); ```. And it is clear that in this case ProcessLine tries much harder than Declare to automatically load libraries that might be necessary to evaluate the line. Also, the reproducer from the issue description fails with the same error in ROOT latest master.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/16601#issuecomment-2393259545:322,clear,clear,322,https://root.cern,https://github.com/root-project/root/issues/16601#issuecomment-2393259545,2,['clear'],['clear']
Usability,"Snapshot, Cache, Define and Filter did not check that the types of; columns used as arguments in jitted code were valid (in particular,; that the type of custom columns was correctly understood by cling).; This patch provides a function that performs the validity check,; GetValidatedArgTypes, that is used everywhere instead of GetColumnTypes; (now unused and therefore deleted) and ColumnName2ColumnTypeName. An exception with a user-friendly error message is thrown in case of; error, which fixes ROOT-10458.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5595:431,user-friendly,user-friendly,431,https://root.cern,https://github.com/root-project/root/pull/5595,1,['user-friendly'],['user-friendly']
Usability,"So @jblomer naively asked ""what about ZLIB"", and it turns out to be equally wrong... I also added a test that at least catches the compression side of things. For the decompression, it's a bit harder because it's not clear how to check if the library read more bytes than it should have (without it running into errors because of decompression errors).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14523#issuecomment-1923740442:217,clear,clear,217,https://root.cern,https://github.com/root-project/root/pull/14523#issuecomment-1923740442,2,['clear'],['clear']
Usability,"So I finally managed to get back to this and try a few things and as a result in my tests I managed to go from 82 MB of overhead to 62 MB. See https://github.com/root-project/root/pull/13641 for the actual code. While there is still a few things to cleanup, I think what I have is fairly general and quite self contained change, so I would appreciate feedback and if people like it, instructions on how to proceed to make sure this ends up upstream. The solution is based on a newly introduced `PagedVector<T>` which allows registering callbacks which get invoked whenever the associated range is accessed the first time. At such point, the range is actually allocated and each element of the range is passed to the callback. Initially I developed a mechanism to be general enough to do complex initialisations of the elements, however I later realised this is not actually needed. In order to optimise the issue with the large vectors `TypesLoaded` and `DeclsLoaded` one only needs to have something which does the default construction of their elements for ranges which are small enough to avoid to large upfront allocations. The code which is currently there in root / clang is already smart enough to lazily initialise only the elements which are actually needed, so the whole issue is to find a good tradeoff between number of ranges and sparse enough ones. A few caveats:. - `PagedVector` is a bad name, I agree. Suggestions are welcome.; - At the moment the implementation allows generic callbacks for ranges, however as I said we only need default initialisation. Removing such flexibility should buy another 1 MB from my test.; - In case `DeclID*` and `QualType` can default to all 0, one could probably achieve the same result in a more elegant way using calloc / realloc.; - There are probably other vectors which can be optimised in the same way, in particular IdentifiersLoaded as already mentioned by @vgvassilev. Comments?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13000#issuecomment-1715921216:351,feedback,feedback,351,https://root.cern,https://github.com/root-project/root/issues/13000#issuecomment-1715921216,2,['feedback'],['feedback']
Usability,"So I produced the documentation locally, and compressed that (gz took less than 5 minutes, while xz around 20 minutes). File sizes are different:. > 701M rootdoc.tar.gz; 458M rootdoc.tar.xz. so the latter is 240Mb (35\%) less than the former. It seems that .xz is worthy to be offered for download. I'm pretty sure that is present in most recent distributions (it was in Fedora already several years ago when I used that). If we talk about usability, bandwidth is an important parameter too.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7295#issuecomment-787148271:440,usab,usability,440,https://root.cern,https://github.com/root-project/root/issues/7295#issuecomment-787148271,2,['usab'],['usability']
Usability,So commenting that line cures the problem with your initial macro . Now I need to understand why that line was put there and why it changes the axis attributes of your histogram ! ... I invite @osschar to this discussion as he is the author of this code (https://github.com/root-project/root/blob/master/graf3d/gl/src/TGLAxisPainter.cxx#L574) . I am temped to simply comment the line but that's weird as fAxis is [a member of TGLAxisPainterBox](https://github.com/root-project/root/blob/aa21d63ca3a1f4cdb2b559e4cb1c2c2d7eb65f34/graf3d/gl/inc/TGLAxisPainter.h#L145) and that should not affect the axis of your TH2F ... That's a real puzzle ...,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8618#issuecomment-875425406:360,simpl,simply,360,https://root.cern,https://github.com/root-project/root/issues/8618#issuecomment-875425406,2,['simpl'],['simply']
Usability,So far we only trigger an assertion in LLVM when we can't find the; modulemap file which is not very user-friendly. With this patch; we actually prints an error message in this situation.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/527:101,user-friendly,user-friendly,101,https://root.cern,https://github.com/root-project/root/pull/527,1,['user-friendly'],['user-friendly']
Usability,"So far, one had to remove string attributes of a RooAbsArg with the; `RooAbsArg::removeStringAttribute(const char* key, const char* value)`; method, passing `nullptr` as a value. Passing a `nullptr` to a function; that takes a `const char*` is not supported in PyROOT, as explained in; GitHub issue #10954. Therefore, a new function is added to RooAbsArg to; remove a string attribute without having to use `nullptr`. This new function called `removeStringAttribute()` is now used in all; the ROOT code to remove string attributes from RooAbsArgs, and also; mentioned in the warnings that tell the user that they might want to; remove the `fitrange` attribute. The verb `remove` was chosen instead of `delete`, `clear`, or `erase`,; because there was already a `RooAbsArg::removeServer()` method.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10957:712,clear,clear,712,https://root.cern,https://github.com/root-project/root/pull/10957,1,['clear'],['clear']
Usability,"So far, the signature for the function that is called for the vectorized evaluation was this one:. ```c++; void RooAbsReal::computeBatch(double* output, size_t nEvents,; RooFit::Detail::DataMap const& dataMap) const; ```. This commit is suggesting a new signature:. ```c++; void doEval(RooFit::EvalContext & ctx) const;; ```. The idea is to make the signature as short as possible, so it doesn't have to be changed anymore if more information needs to be passed. That's why the only parameter is now an `EvalContext` object, reminicint of the old `RunContext` object that fulfilled this task in the very first implementation of the BatchMode by Stephan. The name is now simply `doEval`, because the overloaded term ""Batch"" should be dropped. It needed to be something with ""evaluate"", because there is also `RooAbsReal::evaluate()` and we are talking about ""evaluation backends"". The motivation to change this interface now is because I want to write a documentation for developers (like CMS combine mainteiners) on how to use these new interfaces. And if they start to use it, the interfaces should not change anymore. Than's why I'm doing this change now, which I had in mind already for some time.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13939:670,simpl,simply,670,https://root.cern,https://github.com/root-project/root/pull/13939,1,['simpl'],['simply']
Usability,"So indeed this other test does not work; ```python; import ROOT. ROOT.gInterpreter.Declare(r'''; struct A{; int mA{42};; A() {}; A(const A&) = delete;; template<typename T = int>; A(A &&) {}; };; int foo(A a = A{}) { return a.mA; }; '''). print(ROOT.foo()); ```; ```; input_line_36:18:45: error: call to deleted constructor of 'A'; new (ret) (int) (((int (&)(A))foo)(*(A*)args[0]));; ^~~~~~~~~~~~; input_line_35:5:5: note: 'A' has been explicitly marked deleted here; A(const A&) = delete;; ^; ```. Also, it seems to me that indeed in the case of a templated move constructor, the AST generated by clang simply does not report it in the class definition data, see [this example](https://godbolt.org/#z:OYLghAFBqd5QCxAYwPYBMCmBRdBLAF1QCcAaPECAMzwBtMA7AQwFtMQByARg9KtQYEAysib0QXACx8BBAKoBnTAAUAHpwAMvAFYTStJg1DIApACYAQuYukl9ZATwDKjdAGFUtAK4sGIAMykrgAyeAyYAHI%2BAEaYxCAA7KQADqgKhE4MHt6%2BASlpGQKh4VEssfFJdpgOmUIETMQE2T5%2BgVU1AnUNBMWRMXGJtvWNzbltwz1hfWUDCQCUtqhexMjsHAoExF4OANQAgiYJVhp7O2c7YQQ7LAdHkmaHACIm/sen53sQczuHVgnPJ3O%2BwgaAYG325gAbN8Xo8dlh6ARMC83kCkSxkgYkS83AQAJ7JRisTA7AAqP38cMuL2wJkBHwgpyhUJhRyedNuz1eHMuO34qEZOyYFLhtz%2Bj1ZFh2xEwBGWDCFADobiifv8ORwFrROABWXh%2BDhaUioThuazWHYKJYrEnmfw8UgETSahYAaxAZh1%2Bk4kn1zuNnF4ChAGkdzoWcFgSDQGLocXIlBjyTj8WQBiMXEhGiYCiUjT4dCRxGDEGi/uiYQaeM4DorzGIeIA8tFtNUndxeDG2IJGwxaNXDbwsNEvMA3GJaMGO6QsCxDMBxIOZ3gZTUAG6YKdGzCqapeJE13iXTDape0PDRYhVjxYf2bPAsQ8LKgGYAKABqeEwAHdG4SDQ6/CCCIYjsFIMiCIoKjqEuuhcPo84oOalj6BewaQAsqDJI4AhTrwqAbsQxB4Fg6FfLYJ5tpkLgMO4ngtBIZhBLRvSlOUICQvk6Q4Vk9G5FwTGpNxmSsf08Sce0PFdCMfF%2BAJFH2FJEyiTM4lDN0oxyUxGzdCp7HQosyyrBIWq6n6S4mhwOyqAAHJCAC0kKSDsabzjsmaKhonk7BAOZ5jxCjfBAuCECQPxmPacy8O2WhzG6HpeqevqkAaRqWUGIZhoOEYwIgIBLAQyT7gmIKoLG9DEBExKcLZDlOTswDIMg7n%2BIqZi8Jg%2BBEMR6B6EBwiiOI4H9VBaj%2BnBpDfleyRPt6HB6il/qWY2%2B5FVcqBUNZdmOc5rlGO5kKed5vm5nEAVBR45VxOFkXReG8VcIqCTPTqZhmAAnP4OrPe9NmZpxSXmWlga2JlMWaqQkZ5TmBAlUmKZVWwNXbfVe3AAdR0aD5flnZkgUdV1JAkX1sggUN0gjUoY2wXoknURAriaSAkihiEUxsQMX1cYUvE5H4LPczxemc16dOdBMTMC2LDDSZMJRiQEosS7JzOhjpjTC/EX0LJsm",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14426#issuecomment-1917903939:604,simpl,simply,604,https://root.cern,https://github.com/root-project/root/pull/14426#issuecomment-1917903939,2,['simpl'],['simply']
Usability,"So this problem has been known for 5 years :( https://github.com/root-project/root/pull/4320 but we manage to indeed lose track of it. That PR used the following more concise pattern:; ```; TView() {} // NOLINT: not allowed to use = default because of TObject::kIsOnHeap detection, see ROOT-10300; ```; where both the `NOLINT` is indeed useful to avoid spurious tool recommendation and the wording was clear but should probably be updated (`ROOT-10300` is a ticket number in the JIRA instance which is now read-only). It would be good to add some wording in the `TObject` documentation.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15469#issuecomment-2150303383:402,clear,clear,402,https://root.cern,https://github.com/root-project/root/pull/15469#issuecomment-2150303383,2,['clear'],['clear']
Usability,"So what you need is `GENERATE_QHP` enabled in Doxyfile while generating the reference guide , right ? Have you tried it ? does the result doxygen produces is what you need ?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8781#issuecomment-901257232:86,guid,guide,86,https://root.cern,https://github.com/root-project/root/issues/8781#issuecomment-901257232,2,['guid'],['guide']
Usability,"So, we just removed the assert that makes us aware that we need to; rethink this flag. I don't see a clear solution at the moment, but; this PR at least makes us aware that we need to solve this issue. For now I just removed it and we see what exactly Jenkins complains; about when it runs the tests.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1049:101,clear,clear,101,https://root.cern,https://github.com/root-project/root/pull/1049,1,['clear'],['clear']
Usability,Solution: don't run PR builds while I reboot root.cern! I.e.: sorry! :-(. But shouldn't we wait until the PR builds are green? Simply restarting should help. Let me know!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3218#issuecomment-451901816:127,Simpl,Simply,127,https://root.cern,https://github.com/root-project/root/pull/3218#issuecomment-451901816,1,['Simpl'],['Simply']
Usability,"Some debug symbols seem to be missing so we don't have line number information, but this log is already enough to confirm my hypothesis above: 2.9 GB come from std::vector allocations performed by `RDF::FillHelper::Exec<ROOT::VecOps::RVec<float>, 0>`. The simplest workaround is to specify a binning for the histograms. I am not sure whether this is a common enough problem to warrant a fix in RDF if the fix involves thread synchronization or other potential performance pessimizations. Alternatively, if we can come up with a mutex-free algorithm to automatically select binnings that are compatible among threads that might be the best option -- some related discussion on this topic is [here](https://sft.its.cern.ch/jira/browse/ROOT-8883). Moving this to priority ""default"" since there is a workaround. EDIT: another workaround is to run on fewer events, which might be reasonable since this kind of usecase is typically part of an exploratory phase of the analysis.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6676#issuecomment-716447711:256,simpl,simplest,256,https://root.cern,https://github.com/root-project/root/issues/6676#issuecomment-716447711,2,['simpl'],['simplest']
Usability,"Some further debugging (but really just dumping notes from some experiments):; * The problem of `histhistdrawv7testUnit` can be simplified, in some approximation, to:; ```; root [0] TClass::GetClass(""ROOT::Experimental::RHist<1, double, ROOT::Experimental::RHistStatContent, ROOT::Experimental::RHistStatUncertainty>""); root.exe: /home/jhahnfel/ROOT/src/interpreter/llvm/src/tools/clang/lib/AST/Decl.cpp:4120: unsigned int clang::FunctionDecl::getODRHash() const: Assertion `hasODRHash()' failed.; ```; * Even simpler, just trying to create an object of that template instantiation fails:; ```; root [0] ROOT::Experimental::RHist<1, double, ROOT::Experimental::RHistStatContent, ROOT::Experimental::RHistStatUncertainty> h;; root.exe: /home/jhahnfel/ROOT/src/interpreter/llvm/src/tools/clang/lib/AST/Decl.cpp:4120: unsigned int clang::FunctionDecl::getODRHash() const: Assertion `hasODRHash()' failed.; ```; * Funnily enough, the `using RH1D = RHist<1, double, RHistStatContent, RHistStatUncertainty>` works just fine; same if I remove the second `STAT` template and only leave `RHistStatContent`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12062#issuecomment-1419006181:128,simpl,simplified,128,https://root.cern,https://github.com/root-project/root/pull/12062#issuecomment-1419006181,4,['simpl'],"['simpler', 'simplified']"
Usability,"Some measurements from `ntpl-perf01`; `ttreeTBufferMerger` is a simple program that writes 20000000 entries (2 branches) with each thread. The first timing is with `master`, then the first commit from this PR, and finally the second commit (removing the queue):; <details>; <summary>full data</summary>. ```; ntpl-perf01:/data/ssdext4/jonas/20231113; ttreeTBufferMerger 20000000 16; User time (seconds): 406.16; Elapsed (wall clock) time (h:mm:ss or m:ss): 0:30.30; Maximum resident set size (kbytes): 3392068. ttreeTBufferMerger 20000000 16; User time (seconds): 404.52; Elapsed (wall clock) time (h:mm:ss or m:ss): 0:30.24; Maximum resident set size (kbytes): 3631212. ttreeTBufferMerger 20000000 16; User time (seconds): 407.27; Elapsed (wall clock) time (h:mm:ss or m:ss): 0:29.89; Maximum resident set size (kbytes): 2579396. ttreeTBufferMerger 20000000 128; User time (seconds): 6726.12; Elapsed (wall clock) time (h:mm:ss or m:ss): 2:11.26; Maximum resident set size (kbytes): 90232780. ttreeTBufferMerger 20000000 128; User time (seconds): 4558.00; Elapsed (wall clock) time (h:mm:ss or m:ss): 1:50.53; Maximum resident set size (kbytes): 34501092. ttreeTBufferMerger 20000000 128; User time (seconds): 4089.10; Elapsed (wall clock) time (h:mm:ss or m:ss): 1:40.39; Maximum resident set size (kbytes): 19870924. ntpl-perf01:/data/hddext4/jonas/20231113; ttreeTBufferMerger 20000000 16; User time (seconds): 406.02; Elapsed (wall clock) time (h:mm:ss or m:ss): 0:59.20; Maximum resident set size (kbytes): 3479780. ttreeTBufferMerger 20000000 16; User time (seconds): 405.00; Elapsed (wall clock) time (h:mm:ss or m:ss): 1:00.22; Maximum resident set size (kbytes): 4285016. ttreeTBufferMerger 20000000 16; User time (seconds): 406.67; Elapsed (wall clock) time (h:mm:ss or m:ss): 1:00.26; Maximum resident set size (kbytes): 2565488. ttreeTBufferMerger 20000000 128; User time (seconds): 6967.42; Elapsed (wall clock) time (h:mm:ss or m:ss): 4:35.79; Maximum resident set size (kbytes): 892528",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14034#issuecomment-1808248792:64,simpl,simple,64,https://root.cern,https://github.com/root-project/root/pull/14034#issuecomment-1808248792,2,['simpl'],['simple']
Usability,"Some other fields try to get this right, for example `RRecordField`. We should investigate if we can make `std::vector<char>` allocate over-aligned memory areas. The other option is to forbid over-aligned types (and possibly simplify some other code).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/16757#issuecomment-2440928601:225,simpl,simplify,225,https://root.cern,https://github.com/root-project/root/issues/16757#issuecomment-2440928601,2,['simpl'],['simplify']
Usability,Some time ago we adjust cmake files so that when building ROOT libraries we using headers from source directories and not headers from `$ROOTSYS/include`. This makes dependencies between ROOT components more clear. I just checked $ROOTSYS/include - there are 1476 files. And going this way we will double number of files.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/16327#issuecomment-2346961309:208,clear,clear,208,https://root.cern,https://github.com/root-project/root/issues/16327#issuecomment-2346961309,2,['clear'],['clear']
Usability,Some tutorials did not show correctly in the ref guide.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9125:49,guid,guide,49,https://root.cern,https://github.com/root-project/root/pull/9125,2,['guid'],['guide']
Usability,"Something went wrong, it looks like you merged the master branch into your feature branch. We need to have one (or more) commit of yours on top of the master branch, like this:. ![image](https://user-images.githubusercontent.com/10999034/150794127-6b77d3bf-9a8d-4d8e-b697-134e1c51c426.png). Instead the current situation is:. ![image](https://user-images.githubusercontent.com/10999034/150794245-1d6abf5e-2011-43fa-b598-8bb4a55c4f35.png). Usually I use `git rebase --interactive` from the command line to fix these kind of issues, see e.g. https://www.sitepoint.com/git-interactive-rebase-guide/ . To display the state of the repository I use a custom git log command that basically runs `git log --graph --decorate --oneline --abbrev-commit`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9650#issuecomment-1020120699:589,guid,guide,589,https://root.cern,https://github.com/root-project/root/pull/9650#issuecomment-1020120699,2,['guid'],['guide']
Usability,"Sorry Olivier, I missed your reply. The loop was just to see if the offset of 4 pixels appeared always, or only if the canvas was big enough. Or also to see if the offset was proportional to canvas size or not. I am not creating PNGs in the snippet above, but rather looking at the graphics are size without borders, which is what the PNG should become later. I took the logic out of the ROOT documentation:. ```; To define precisely the graphics area size of a canvas in the interactive mode, the following four lines of code should be used:; {; Double_t w = 600;; Double_t h = 600;; auto c = new TCanvas(""c"", ""c"", w, h);; c->SetWindowSize(w + (w - c->GetWw()), h + (h - c->GetWh()));; }. and in the batch mode simply do:; c->SetCanvasSize(w,h);; ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11004#issuecomment-1618360139:712,simpl,simply,712,https://root.cern,https://github.com/root-project/root/issues/11004#issuecomment-1618360139,2,['simpl'],['simply']
Usability,Sorry for my ignorance but this .qch file contains what ? I guess it cannot be the whole reference guide ? that would be a huge file ... Is it references to the guide on the web ? in that case I do not understand your statement in your first post when you said: _which is also great if you don't have internet connection_,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8781#issuecomment-901747042:99,guid,guide,99,https://root.cern,https://github.com/root-project/root/issues/8781#issuecomment-901747042,4,['guid'],['guide']
Usability,"Sorry for my late reply. Thank you very much for your answer. . I think using TArayD is an improvement than using double pointers, but I don't see any reason why not using a more standard std::vector. ; I understand also for the interface your preference for an API similar to the current TGraphAsymmError. Thank you for explaining the meaning of SetDimensionEY, I think the name is not super clear, I would maybe just call it SetEY. ; One comment on the passed array, I think the pointers should be passed as cont , since they will not be modified. . One other comment I have , I will not have a method to Set the error dimension. I think it will be better instead a AddError method that will increment by one the dimension and add all the point errors. This I think it will be more useful",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3452#issuecomment-558161625:393,clear,clear,393,https://root.cern,https://github.com/root-project/root/pull/3452#issuecomment-558161625,2,['clear'],['clear']
Usability,Sorry for this late comment. I had some other urgent matters to deal with.; My general comment is that the line width is not part of of the marker attributes. Seems to me markers attributes should remain simple. Some markers are also filled polygon. Would you like to apply the fill style to them ? I guess not. I guess the best way to implement what you need is to define new marker types. We are not limited in number. If you want a star with bigger line width we can ad a new marker type. Any way the useful line width is limited and surely smaller than 10.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4721#issuecomment-573575527:204,simpl,simple,204,https://root.cern,https://github.com/root-project/root/pull/4721#issuecomment-573575527,2,['simpl'],['simple']
Usability,"Sorry guys I've been on holidays :-) good to see that this is solved :-). > ""You"" was Axel and Philippe + whoever is doing TXNetNG these days :); > Michal (main developer of XrdCl) and I assumed the crash happens because libXrdCl was already unloaded, see xrootd issue: [xrootd/xrootd#1487](https://github.com/xrootd/xrootd/issues/1487); > ; > Now, you say the library is still loaded ... then it's probably more likely that destruction ob XrdCl global objects has already happened or was in progress (I just learned c++ is rather relaxed about how this is allowed to happen).; > ; > @simonmichal ... what do you think?. we use a nifty counter to protect against static-destruction-order-fiasco so in principle if the `libXrdCl` has not been unloaded it should not crash",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8767#issuecomment-895029183:509,learn,learned,509,https://root.cern,https://github.com/root-project/root/issues/8767#issuecomment-895029183,2,['learn'],['learned']
Usability,Sorry to hear that. It would still be great to learn possible workaround to make my project step forward.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9240#issuecomment-964801950:47,learn,learn,47,https://root.cern,https://github.com/root-project/root/issues/9240#issuecomment-964801950,2,['learn'],['learn']
Usability,"Sorry too much info, too little bandwidth :sweat_smile: If I understand correctly:. - the `is_equal` redefinition is a real issue but unrelated to RVec 2.0 (thanks @wlav for pointing that out) and now tracked by #7678 ; - you have a patch that works around the cppyy bug with `operator[]`; - iteration is broken because `RVec::begin` returns a raw pointer. In principle `begin` can absolutely return a raw pointer (I _think_ LLVM's SmallVector was designed like that for simplicity, to avoid having to define a custom iterator type). But raw pointers make for fine iterators :smile: Seems like a bug in PyROOT?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7502#issuecomment-806477941:471,simpl,simplicity,471,https://root.cern,https://github.com/root-project/root/pull/7502#issuecomment-806477941,2,['simpl'],['simplicity']
Usability,Specifically this fixes the one described at:; https://sft.its.cern.ch/jira/browse/ROOT-9773?focusedCommentId=87824&page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-87824; where the issue was that adding a single branch did not close the learning and 'worth' provoke a learning; prefill. We solved this by distinguishing at the interface level adding branch manual and adding branch as; part of the learning. We can now avoid the LearningPrefill during manual adds.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3007:267,learn,learning,267,https://root.cern,https://github.com/root-project/root/pull/3007,12,"['Learn', 'learn']","['LearningPrefill', 'learning']"
Usability,"Spun off from [discussion](https://github.com/root-project/root/pull/5934/commits/6f3ec9372b011536fc314eef0835508a07d2513b#r448782416) on #5934, this PR lets us wrap move-only types in `RResult`. We add a new method `Unwrap()` to obtain the inner type by value. The caller takes ownership of the inner type, and for move-only types the `RResult` is left in an unspecified state. I decided against adding safeguards against double-moves for now because it would result in false-positive messages for types without move specializations (e.g. `return std::move(42)`). Instead, we should make clear through documentation and examples that `Unwrap()` consumes the `RResult`. . The existing const-ref access method `Get()` has been renamed `Inspect()` following Mozilla's `RResult`-like type [here](https://searchfox.org/mozilla-central/source/mfbt/Result.h#90-91). `Get()` has caused some confusion in code review and we've been looking for alternative names. . Example: ; ```cpp; auto TestMoveOnly = []() -> RResult<std::unique_ptr<int>> {; return std::make_unique<int>(1);; };; auto res = TestMoveOnly();. // Using Inspect to make a copy won't compile; // auto copy_inner = res.Inspect();. // This will compile, but we only have read-only access; const auto& copy_inner = res.Inspect();; EXPECT_EQ(1, *copy_inner);. // Instead, Unwrap is required to get ownership of the move-only type; auto move_inner = res.Unwrap();; EXPECT_EQ(1, *move_inner);; move_inner.reset();; move_inner = std::make_unique<int>(2);; EXPECT_EQ(2, *move_inner);; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5985:589,clear,clear,589,https://root.cern,https://github.com/root-project/root/pull/5985,1,['clear'],['clear']
Usability,"Stacks with negative content generally don't function well. They are built by stacking bricks (1D histograms) or bins (1D histograms) on top of each other. If there's a negative brick in the middle, what should we do? This might need more explanation in the reference guide or even a protection to forbid histograms with negative minimum.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/15740#issuecomment-2149906358:268,guid,guide,268,https://root.cern,https://github.com/root-project/root/issues/15740#issuecomment-2149906358,2,['guid'],['guide']
Usability,"Starting from current master, we generate JSON for different v7 tutorials and embed them into HTML pages to; provide interactive images like:. https://root.cern/doc/master/draw__rh1__twoaxes_8cxx.html. For these images we are using https://root.cern/js/dev/ version, which constantly changes.; To be on the safe side, we should preserve JSROOT version with generated reference guide.; Most easy way - just copy JSROOT from ROOT sources into directory with doxygen HTML files ; and use that version of JSROOT in reference guide.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8599:377,guid,guide,377,https://root.cern,https://github.com/root-project/root/issues/8599,2,['guid'],['guide']
Usability,"Starting with the git clone --branch v6-22-00-patches https://github.com/root-project/root.git root_src branch, I identified the changes described above. However, on the RPi4 build I ran into the atomic problems. I used a simple fix to get around them. I used the standard cmake -DCMAKE_INSTALL_PREFIX=../install -DPYTHON_EXECUTABLE=/usr/bin/python3 ../root_src and when I ran into an unresolved issue, like this one:; TFile.cxx:(.text+0xb5ec): undefined reference to `__atomic_fetch_add_8'; collect2: error: ld returned 1 exit status; make[2]: *** [io/io/CMakeFiles/RIO.dir/build.make:585: lib/libRIO.so] Error 1; make[1]: *** [CMakeFiles/Makefile2:23297: io/io/CMakeFiles/RIO.dir/all] Error 2; make: *** [Makefile:152: all] Error 2; I went and added this library to the end of the line in the corresponding link.txt file:; /usr/lib/arm-linux-gnueabihf/libatomic.so.1; for these link.txt files under the build directory:; vi io/io/CMakeFiles/RIO.dir/link.txt; vi net/net/CMakeFiles/Net.dir/link.txt; vi tree/tree/CMakeFiles/Tree.dir/link.txt; vi net/netx/CMakeFiles/Netx.dir/link.txt; vi net/netxng/CMakeFiles/NetxNG.dir/link.txt; vi proof/proof/CMakeFiles/Proof.dir/link.txt; After each edit, I kept running cmake --build . -- install -j4 and eventually the build completed successfully.; Furthermore, I use ROOT with a jupyter notebook server I run on the RPi4 with systemd, so in place of; source /home/pi/root/install/bin/thisroot.sh (which I do use in the .bashrc for New Terminal), I added ; and EnvironmentFile variable EnvironmentFile=/home/pi/root/thisroot.conf; which contained:; JUPYTER_CONFIG_DIR=/home/pi/root/install/etc/notebook; MANPATH=/home/pi/root/install/man:/usr/local/man:/usr/local/share/man:/usr/share/man; SHLIB_PATH=/home/pi/root/install/lib; DYLD_LIBRARY_PATH=/home/pi/root/install/lib; CMAKE_PREFIX_PATH=/home/pi/root/install; PYTHONPATH=/home/pi/root/install/lib; LIBPATH=/home/pi/root/install/lib; JUPYTER_PATH=/home/pi/root/install/etc/notebook; ROOTSYS=/home/pi/root/i",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4561#issuecomment-718133063:222,simpl,simple,222,https://root.cern,https://github.com/root-project/root/pull/4561#issuecomment-718133063,2,['simpl'],['simple']
Usability,"Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\utility(389,1): fatal error C1060: compiler is out of heap space (compiling source file C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\lib\CodeGen\TailDuplication.cpp) [C:\build\workspace\root-pullrequests-build\build\interpreter\llvm\src\lib\CodeGen\LLVMCodeGen.vcxproj] ; - [2022-09-14T15:02:59.017Z] C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\include\llvm/Support/CommandLine.h(1218,1): fatal error C1060: compiler is out of heap space (compiling source file C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\lib\Transforms\Utils\SizeOpts.cpp) [C:\build\workspace\root-pullrequests-build\build\interpreter\llvm\src\lib\Transforms\Utils\LLVMTransformUtils.vcxproj] ; - [2022-09-14T15:02:59.017Z] C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\tuple(347,1): fatal error C1060: compiler is out of heap space (compiling source file C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\lib\Transforms\Utils\SimplifyLibCalls.cpp) [C:\build\workspace\root-pullrequests-build\build\interpreter\llvm\src\lib\Transforms\Utils\LLVMTransformUtils.vcxproj] ; - [2022-09-14T15:02:59.017Z] C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\include\llvm/Support/Casting.h(343,1): fatal error C1060: compiler is out of heap space (compiling source file C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\tools\clang\lib\ASTMatchers\ASTMatchFinder.cpp) [C:\build\workspace\root-pullrequests-build\build\interpreter\llvm\src\tools\clang\lib\ASTMatchers\obj.clangASTMatchers.vcxproj] ; - [2022-09-14T15:02:59.017Z] C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\tuple(300,1): fatal error C1060: compiler is out of heap space (compiling source file C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\lib\Transforms\Scalar\PlaceSafepoints.c",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11366#issuecomment-1246914758:2674,Simpl,SimplifyLibCalls,2674,https://root.cern,https://github.com/root-project/root/pull/11366#issuecomment-1246914758,1,['Simpl'],['SimplifyLibCalls']
Usability,"Super nice, thanks!. So `R__SUGGEST_CLASS` and `R__SUGGEST_FUNCTION` are now renamed to `R__SUGGEST_FASTER_...`? It's not always about speed, I actually prefer the original names. Can we spell the diagnostic as `it has a superior alternative` such that we do not need to distinguish class/ function anymore?. And the maybe simply `R__SUGGEST` or `R__USE_INSTEAD`?. (I wanted to write this down so I don't forget; it's likely more efficient to chat about this in person in January! 🎆 )",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3100#issuecomment-449485576:323,simpl,simply,323,https://root.cern,https://github.com/root-project/root/pull/3100#issuecomment-449485576,2,['simpl'],['simply']
Usability,Support undoing of #undef preprocessor tokens.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/645:8,undo,undoing,8,https://root.cern,https://github.com/root-project/root/pull/645,2,['undo'],['undoing']
Usability,Suppress gcc9 warnings in THistPainter.; Simplify the code.; Provides a better fix for very long stats parameters names.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3883:41,Simpl,Simplify,41,https://root.cern,https://github.com/root-project/root/pull/3883,1,['Simpl'],['Simplify']
Usability,"Sure, no problem. But when you decide to learn a bit more advanced git, we can help. I will merge this sometime before the end of this week. Cheers,",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1435#issuecomment-351153345:41,learn,learn,41,https://root.cern,https://github.com/root-project/root/pull/1435#issuecomment-351153345,2,['learn'],['learn']
Usability,"System crashes when calling `strlen(nullptr)`, therefore protect in cases when argument can be directly set as external parameter. Simplify TMultiGraph::PaintPads, do not use `TString` as `strlen()` argument",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10855:131,Simpl,Simplify,131,https://root.cern,https://github.com/root-project/root/pull/10855,1,['Simpl'],['Simplify']
Usability,TBulkRead::GetEntriesSerialized should simply work with destructive; serialization. Not sure why the check is there.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6558:39,simpl,simply,39,https://root.cern,https://github.com/root-project/root/pull/6558,1,['simpl'],['simply']
Usability,"TCP_NODELAY, (char*)val, &optlen) == -1) {; | ^~~~~~~; | |; | int*; In file included from /builddir/root-6.24.06/core/unix/src/TUnixSystem.cxx:101:; /usr/include/sys/socket.h:348:50: note: initializing argument 5 of 'int getsockopt(int, int, int, void*, socklen_t*)'; 348 | int getsockopt (int, int, int, void *__restrict, socklen_t *__restrict);; | ^~~~~~~~~~~~~~~~~~~~~; ```; is the next error. The problem stems from the fact, that the condition for using `socklen_t` is (among others) glibc:; ```c; #if (defined(R__AIX) && !defined(_AIX43)) || \; (defined(R__SUNGCC3) && !defined(__arch64__)); # define USE_SIZE_T; #elif defined(R__GLIBC) || defined(R__FBSD) || \; (defined(R__SUNGCC3) && defined(__arch64__)) || \; defined(R__OBSD) || defined(MAC_OS_X_VERSION_10_4) || \; (defined(R__AIX) && defined(_AIX43)) || \; (defined(R__SOLARIS) && defined(_SOCKLEN_T)); # define USE_SOCKLEN_T; #endif; ```; [Here](https://pubs.opengroup.org/onlinepubs/9699919799/xrat/V4_xsh_chap02.html#tag_22_02_10_06) is some context:; > All socklen_t types were originally (in BSD UNIX) of type int. During the development of POSIX.1-2017, it was decided to change all buffer lengths to size_t, which appears at face value to make sense. When dual mode 32/64-bit systems came along, this choice unnecessarily complicated system interfaces because size_t (with long) was a different size under ILP32 and LP64 models. Reverting to int would have happened except that some implementations had already shipped 64-bit-only interfaces. The compromise was a type which could be defined to be any size by the implementation: socklen_t. I am not sure how to approach this, because the standardization of `socklen_t` seems fairly recent, but in the long run, avoiding this whole types dance altogether and simply using explicit `socklen_t` seems to make most sense and will make for a simpler code. I will appreciate any comments, especially regarding any compatibility issues this might cause - else I will add this to the PR.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9253#issuecomment-963600314:7333,simpl,simply,7333,https://root.cern,https://github.com/root-project/root/issues/9253#issuecomment-963600314,4,['simpl'],"['simpler', 'simply']"
Usability,"TDataFrame's user guide uses the term ""column"" interchangeably with ""branch"". At the same time, ""column"" is preferred as it is more general and will still be appropriate when TDataFrame will read data formats other than ROOT's. This commit updates the user-facing method signatures and the method documentations to use preferably use ""column"". This commit also adds some minor improvements to method descriptions.; It introduces no functional changes.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/814:18,guid,guide,18,https://root.cern,https://github.com/root-project/root/pull/814,1,['guid'],['guide']
Usability,"TF1 objects, created in the TFitEditor, were not destroyed properly.; Also use more clear c++11 syntax for STL containers; Do not generate long names like ""PrevFit-7-PrevFit-5-PrevFit-1"" for fit functions",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3810:84,clear,clear,84,https://root.cern,https://github.com/root-project/root/pull/3810,1,['clear'],['clear']
Usability,TLine simplification,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1926:6,simpl,simplification,6,https://root.cern,https://github.com/root-project/root/pull/1926,2,['simpl'],['simplification']
Usability,TLine.hxx uses const TPadPos&; TPadLength.hxx allows expression like: 0.3_normal*TMath::Cos(angle) + 0.5_normal; line.cxx is much simpler,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1920:130,simpl,simpler,130,https://root.cern,https://github.com/root-project/root/pull/1920,1,['simpl'],['simpler']
Usability,TMVA Errors while building the reference guide.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10461:41,guid,guide,41,https://root.cern,https://github.com/root-project/root/issues/10461,2,['guid'],['guide']
Usability,TMVA regression output code simplification,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3694:28,simpl,simplification,28,https://root.cern,https://github.com/root-project/root/pull/3694,2,['simpl'],['simplification']
Usability,TSVG (old code) is like TPDF or TPostScript is simply producing an SVG file from what is displayed it does not create a new color.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16348#issuecomment-2328279111:47,simpl,simply,47,https://root.cern,https://github.com/root-project/root/pull/16348#issuecomment-2328279111,2,['simpl'],['simply']
Usability,TTree users guide,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6358:12,guid,guide,12,https://root.cern,https://github.com/root-project/root/pull/6358,2,['guid'],['guide']
Usability,"TTree::CopyAddresses has the built-in pre-condition that the input and; output branches are of the same kind. Clones might be added, however,; for which the pre-condition is violated. This is currently the case,; for example, with certain usages of RDataFrame::Snapshot, which might; create an output branch that is a simple TBranch while the input branch; is e.g. a TBranchElement. This results in wrong data being written out. With this patch we detect this case and complain.; A proper fix will be proposed soon. The issue is tracked as #8295.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8314:318,simpl,simple,318,https://root.cern,https://github.com/root-project/root/pull/8314,2,['simpl'],['simple']
Usability,TTreeFormula give the wrong result in case of renaming rule (both simple and complex),MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14493:66,simpl,simple,66,https://root.cern,https://github.com/root-project/root/issues/14493,2,['simpl'],['simple']
Usability,"T_P(RDFVary, VariationsForWithNoVariations); {; ROOT::RDataFrame df(10);; auto h = df.Define(""x"", [] { return 1; }).Histo1D<int>(""x"");; @@ -250,7 +254,7 @@ TEST(RDFVary, VariationsForWithNoVariations); EXPECT_EQ(hs.GetKeys(), std::vector<std::string>{""nominal""});; }; ; -TEST(RDFVary, GetVariations); +TEST_P(RDFVary, GetVariations); {; auto df = ROOT::RDataFrame(10).Define(""x"", [] { return 0; }).Define(""y"", [] { return 10; });; auto df2 = df.Vary(""x"", SimpleVariation, {}, 2); @@ -269,7 +273,7 @@ TEST(RDFVary, GetVariations); ""Variations {x:0, x:1} affect column x\nVariations {xy:0, xy:1} affect columns {x, y}\n"");; }; ; -TEST(RDataFrameInterface, VaryFriend); +TEST(RDFVary, VaryFriend); {; int x = 0;; TTree main(""main"", ""main"");; @@ -295,7 +299,7 @@ TEST(RDataFrameInterface, VaryFriend); EXPECT_EQ(sum2vars[""var:0""], 43);; }; ; -TEST(RDFVary, ResultMapIteration); +TEST_P(RDFVary, ResultMapIteration); {; auto df = ROOT::RDataFrame(10).Define(""x"", [] { return 0; }).Vary(""x"", SimpleVariation, {}, 2);; auto s = df.Sum<int>(""x"");; @@ -327,7 +331,7 @@ TEST_P(RDFVary, VaryDefinePerSample); EXPECT_EQ(ss[""x:1""], 2 * 10);; }; ; -TEST(RDFVary, SaveGraph); +TEST_P(RDFVary, SaveGraph); {; ROOT::RDataFrame df(1);; auto c = df.Define(""x"", [] { return 0; }); @@ -622,7 +626,7 @@ TEST_P(RDFVary, DefineDependingOnVariations); EXPECT_EQ(sums[""yshift:low""], 410);; }; ; -TEST(RDFVary, VaryAndAlias); +TEST_P(RDFVary, VaryAndAlias); {; auto df = ROOT::RDataFrame(10).Define(""x"", [] { return 1; }).Alias(""y"", ""x"").Vary(""x"", SimpleVariation, {}, 2);; auto s1 = df.Sum<int>(""y"");; @@ -1000,7 +1004,7 @@ struct MyCounter : public ROOT::Detail::RDF::RActionImpl<MyCounter> {; }; };; ; -TEST(RDFVary, VaryBook); +TEST_P(RDFVary, VaryBook); {; auto d = ROOT::RDataFrame(10); .Define(""x"", [](ULong64_t e) { return int(e); }, {""rdfentry_""}); @@ -1385,7 +1389,7 @@ TEST_P(RDFVary, VaryProfiles); EXPECT_DOUBLE_EQ(h2s[""x:1""].GetMean(), 4.5);; }; ; -TEST(RDFVary, VaryReduce); +TEST_P(RDFVary, VaryReduce); {; auto",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10715#issuecomment-1150873429:3955,Simpl,SimpleVariation,3955,https://root.cern,https://github.com/root-project/root/pull/10715#issuecomment-1150873429,1,['Simpl'],['SimpleVariation']
Usability,"Templated constructors actually work since last week (except not yet on Mac due to a bug in TClingCallFunc; I needed them for shared_ptr), and yes they're a hack. Code is in repo, but not yet released. ADL will never work properly in full automatic mode, but is already covered most of the way. I'm having that discussion right now with a user who wants to turn Python tuples into std::tuples: the problem is underspecified on the Python side. So although it can be made to generally work, user-provided types are necessary to cover corner cases, e.g. by handing template arguments to std::make_tuple. Python's three-way comparison operator is only syntax, not semantics, so the spaceship would simply be broken down in Python's richcompare and the only real issue again is ROOT/meta giving wrong overloads. That said, I'm moving away from operator lookups: not only are the overloads often wrong, so I'm doing my own ADL, but also TClingCallFunc generates broken code on Mac and Windows. Rather, I want to use a generic comparison template and let SFINAE deal with it. The difference between removing std::, giving wrong overloads, etc. and string <-> decl is that the former is a problem b/c ROOT/meta gives the _wrong_ results. Strings are sometimes clunky, but perfectly fine if they are correct. Yes, letting clang parse names (as done for function template lookups already) is exactly what should happen. But the next step is to funnel the results to the Python mappings, not expose cppyy to decls or their intricate details. E.g. the converters and executor lookups should be a combination of strings and categories, just like it is now (except that the categories are derived from string parsing, like looking for ends_in('*')). Doing that selection based on decls as suggested here and in the e-mail thread with Gerhard makes no sense whatsoever: you'd have to maintain three times the same functionality. I would want something like this:. ```; opaque_handle h = what_is(parent, name); type_",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3579#issuecomment-478718847:695,simpl,simply,695,https://root.cern,https://github.com/root-project/root/pull/3579#issuecomment-478718847,2,['simpl'],['simply']
Usability,Test 25 had a minor difference in size compared to the reference value stored; in the reference file. This is a simple ratio plot example. All the other formats are; ok. A pdf comparison with a previous version shows that the two pdf files are the; same. So we give a bit more error margin.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12343:112,simpl,simple,112,https://root.cern,https://github.com/root-project/root/pull/12343,2,['simpl'],['simple']
Usability,Test failure in `alma9-clang` unrelated:; ```txt; TEST FAILURES:; 470:gtest-tree-dataframe-test-dataframe-simple; ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16385#issuecomment-2337861300:106,simpl,simple,106,https://root.cern,https://github.com/root-project/root/pull/16385#issuecomment-2337861300,2,['simpl'],['simple']
Usability,"Test failures were due to a dirty build directory. I logged into the node, ran `cmake .`, and the headers were then found. If the headers are not found in other builds, please clear the build directory of the affected node(s), so that the roottest targets get recreated.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/851#issuecomment-321595336:176,clear,clear,176,https://root.cern,https://github.com/root-project/root/pull/851#issuecomment-321595336,2,['clear'],['clear']
Usability,"Thank you @jalopezg-r00t :partying_face: I'll rebase the commits shortly and a bit indiscriminately. > I would just suggest testing it again on `olsky-03` or similar, when available. All clear on our (thankfully operational) HPE cluster with daos / libdaos 2.2.0.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11480#issuecomment-1312341311:187,clear,clear,187,https://root.cern,https://github.com/root-project/root/pull/11480#issuecomment-1312341311,2,['clear'],['clear']
Usability,Thank you @petruccs for opening this issue and the feedback. You are right that one needs to use`GetPaintedGraph` for this. I will improve the documentation and add a tutorial example.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10139#issuecomment-1072149923:51,feedback,feedback,51,https://root.cern,https://github.com/root-project/root/issues/10139#issuecomment-1072149923,2,['feedback'],['feedback']
Usability,Thank you Amadio for your feedback. I don't know what are the formatting pbs because I can't see travis results but I fixed conflicts.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1239#issuecomment-343641047:26,feedback,feedback,26,https://root.cern,https://github.com/root-project/root/pull/1239#issuecomment-343641047,2,['feedback'],['feedback']
Usability,"Thank you all for your input! It is clear that the changes in this PR do not improve the situation by any means. Interestingly, this PR has triggered three new failures for exactly these two tutorials. I don't see how the failures on Windows can be related to the changes of this PR, but they are slightly more informative than usual and they were never seen before in the CI. For the failure on Mac ARM, we are hitting https://github.com/root-project/cling/issues/370 which I wasn't even aware of 😄 . Yet another reason not to merge these changes 🙂 . ### Windows 64 bit. https://github.com/root-project/root/actions/runs/7693740131/job/20963073314?pr=14472. ```; Test #951: tutorial-v7-ntuple-ntpl007_mtFill .........................................................***Failed 2.06 sec; ; Processing C:/ROOT-CI/src/tutorials/v7/ntuple/ntpl007_mtFill.C...; Warning in <[ROOT.NTuple] Warning C:\ROOT-CI\src\tree\ntuple\v7\src\RPageStorageFile.cxx:52 in __cdecl ROOT::Experimental::Detail::RPageSinkFile::RPageSinkFile(class std::basic_string_view<char,struct std::char_traits<char> >,const class ROOT::Experimental::RNTupleWriteOptions &)>: The RNTuple file format will change. Do not store real data with this version of RNTuple!; Fatal: (typedValue->size() % fItemSize) == 0 violated at line 1986 of `C:\ROOT-CI\src\tree\ntuple\v7\src\RField.cxx'; aborting; CMake Error at C:/ROOT-CI/build/RootTestDriver.cmake:232 (message):; error code: Exit code 0xc0000374; ```. ```; 1258/2174 Test #960: tutorial-v7-concurrentfill.cxx ............................................................***Failed 6.42 sec; ; Processing C:/ROOT-CI/src/tutorials/v7/concurrentfill.cxx...; CMake Error at C:/ROOT-CI/build/RootTestDriver.cmake:232 (message):; error code: Access violation; ```. ### Windows 32bit . https://github.com/root-project/root/actions/runs/7693740131/job/20963073797?pr=14472. ```; 1242/2175 Test #950: tutorial-v7-ntuple-ntpl007_mtFill .........................................................***Fail",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14472#issuecomment-1915527940:36,clear,clear,36,https://root.cern,https://github.com/root-project/root/pull/14472#issuecomment-1915527940,2,['clear'],['clear']
Usability,Thank you everyone for your tips. I have learned a bunch of new concepts. The last two commits have added those changes. I am very grateful for the help I have been getting. Thank you everyone.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8225#issuecomment-858035785:41,learn,learned,41,https://root.cern,https://github.com/root-project/root/pull/8225#issuecomment-858035785,2,['learn'],['learned']
Usability,Thank you for all the help and patience guys. I'm learning a lot.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7024#issuecomment-760058242:50,learn,learning,50,https://root.cern,https://github.com/root-project/root/pull/7024#issuecomment-760058242,2,['learn'],['learning']
Usability,"Thank you for the additional information! We are setting up a big endian node here, which will make working on this issue simpler.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12426#issuecomment-1470788474:122,simpl,simpler,122,https://root.cern,https://github.com/root-project/root/issues/12426#issuecomment-1470788474,2,['simpl'],['simpler']
Usability,"Thank you for the answer: I wish I had noticed `TParameter` years ago, since `RooInt` did the job but it was clearly not the semantically correct choice.; We'll give a chance to `TParameter` for the future, and try to surrogate `RooInt` (and `RooFloat`) in the new code.; I'll update and eventually close this issue when we see it works.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/16380#issuecomment-2336431234:109,clear,clearly,109,https://root.cern,https://github.com/root-project/root/issues/16380#issuecomment-2336431234,2,['clear'],['clearly']
Usability,"Thank you for the bug report! Our 32bit CI is currently not running on the experimental namespace (including RNTuple). Let us fix that first, which will make it simpler to fix this issue.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12427#issuecomment-1458084140:161,simpl,simpler,161,https://root.cern,https://github.com/root-project/root/issues/12427#issuecomment-1458084140,2,['simpl'],['simpler']
Usability,"Thank you for the comments @ashlaban and @amadio . Based on the feedback these are the steps I took. This PR was for the first evaluation of GSoC and I am closing it. New PR is #778. * Make a new branch from first commit and cherry pick my commits one by one, amending them and rewriting history such that commits are merged into 3 working commits.; * From now I'll always `rebase` before merging and make sure that commits build correctly. ; * Changing intendation to 3 spaces.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/693#issuecomment-315903251:64,feedback,feedback,64,https://root.cern,https://github.com/root-project/root/pull/693#issuecomment-315903251,1,['feedback'],['feedback']
Usability,Thank you for the feedback. I 'll try to implement something in the next days and open a PR. If you then could have a look will be great; Cheers,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7332#issuecomment-864851951:18,feedback,feedback,18,https://root.cern,https://github.com/root-project/root/issues/7332#issuecomment-864851951,2,['feedback'],['feedback']
Usability,Thank you for the fix! ; It appears that while forcing the use of `RooFoamGenerator` I simply skipped that code path...,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12286#issuecomment-1425901083:87,simpl,simply,87,https://root.cern,https://github.com/root-project/root/issues/12286#issuecomment-1425901083,2,['simpl'],['simply']
Usability,"Thank you for the initiative!. You're also replacing `__MAKECINT__` with `__MAKECLING__`, but I'm not sure we should do this. In the guide, it reads that the `__MAKECINT__` macro is deprecated:; documentation/users-guide/Cling.md. Maybe @pcanal can confirm, but from that paragraph I understand that the replacement for `__MAKECING__` in `__ROOTCLING__`, and not `__MAKECLING__`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15513#issuecomment-2111282912:133,guid,guide,133,https://root.cern,https://github.com/root-project/root/pull/15513#issuecomment-2111282912,4,['guid'],['guide']
Usability,"Thank you for the quick response, @couet, your example code helps!; However, is this peculiarity mentioned in the ROOT documentation? This behavior was not so clear to me from the [TAttText documentation](https://root.cern.ch/doc/master/classTAttText.html), and it looks like setting the text color to white in my naïve way does work in some other contexts, e.g.:; ```; void jant2(){; auto c = new TCanvas(""c"",""c"",800,600);; auto pave = new TPaveText(0.25,0.25,0.75,0.75,""NDC"");; pave->SetTextColor(kWhite); // setting all text to white this time (not line-by-line changes); pave->AddText(""This line is in white."");; pave->AddText(""This line is also in white."");; pave->Draw();; c->Draw();; }; ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6593#issuecomment-706268776:159,clear,clear,159,https://root.cern,https://github.com/root-project/root/issues/6593#issuecomment-706268776,2,['clear'],['clear']
Usability,"Thank you for this PR.; Since we include <cmath> I agree we should use `std::sqrt` instead simple `sqrt` that is defined in <math>. We should probably change other similar files in the genvector package. . For this PR, it would be nice if you cleanup the commit history and squash the commits in a single one to have a cleaner history; Thank you. Lorenzo",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7909#issuecomment-822312306:91,simpl,simple,91,https://root.cern,https://github.com/root-project/root/pull/7909#issuecomment-822312306,2,['simpl'],['simple']
Usability,Thank you for your guidance Sergey! I'm glad this got done right :),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15812#issuecomment-2255129356:19,guid,guidance,19,https://root.cern,https://github.com/root-project/root/pull/15812#issuecomment-2255129356,2,['guid'],['guidance']
Usability,"Thank you for your reminders, I will for sure follow the procedure once I am convinced this works fine for all ALICE usecases. Having a PR on the v6-28-00-patches branch merely simplifies sharing something which can be immediately used in the ALICE software stack. Could you please advise regarding the data structure to use? I could not find one that fits the needed sparseness.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13641#issuecomment-1719035285:177,simpl,simplifies,177,https://root.cern,https://github.com/root-project/root/pull/13641#issuecomment-1719035285,2,['simpl'],['simplifies']
Usability,"Thank you so much @eguiraud for the comments! I have addressed all of them and updated the commits accordingly, also splitting them in smaller commits to make intentions clearer. New tests are still missing, but I would appreciate if you could take another look. In particular, these changes hopefully streamline the code a bit:; * `rdf_uuid`: this was previously not well named, since we need something that contains both an identifier for the current RDataFrame instance and also one for the current (distributed) execution of that RDataFrame (e.g. to separate to consecutive triggers of the computation graph). I have added the type `ExecutionIdentifier` that holds both. This class is now used everywhere (in Ranges.py, HeadNode.py) and should improve readability.; * I merged `CloneResultPtr` and `CloneResultMap` into `CloneResultAndAction`. This helps making the logic in DistRDF more simple (i.e. is what allows the usage of `singledispatch` to distinguish different ways of cloning actions of the distributed computation graph).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12363#issuecomment-1581162133:170,clear,clearer,170,https://root.cern,https://github.com/root-project/root/pull/12363#issuecomment-1581162133,4,"['clear', 'simpl']","['clearer', 'simple']"
Usability,"Thank you very much! Great that is works now!. The fix also needs to be backported to the 6.26 branch, since the problem is also in that release cycle since 6.26.02. I would appreciate if at some point there would be another 6.26 patch release. In RooFit, the small bug fixes were already piling up:; https://github.com/root-project/root/issues/11534. And especially with this issue fixed, a new release could be worthwhile. We know that this bug broke some ATLAS RooFit workspaces already, so this fix has a clear benefit. I'll ask ATLAS whether it helps to have a patch release for 6.26 or if they moved on to 6.28 anyway.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12783#issuecomment-1556797954:509,clear,clear,509,https://root.cern,https://github.com/root-project/root/issues/12783#issuecomment-1556797954,2,['clear'],['clear']
Usability,"Thank you very much! I'm sure there must be a way to do that. However, I think this must be a rather rare demand, so this should be some second-order feature...; But it may also be that it is already possible through command line/environment arguments - maybe someone who knows CMake could guide how to do that.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12744#issuecomment-1549824735:290,guid,guide,290,https://root.cern,https://github.com/root-project/root/issues/12744#issuecomment-1549824735,2,['guid'],['guide']
Usability,"Thank you! I made the modification. Still not clear to me, why it is necessary. But this is not a (very) performance-critical path, so it's fine.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14731#issuecomment-1948143634:46,clear,clear,46,https://root.cern,https://github.com/root-project/root/pull/14731#issuecomment-1948143634,2,['clear'],['clear']
Usability,"Thanks @bellenot ! I don't know what happened to [the PR build](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/81795/console), but I did not notice these failures, sorry about that. Can you please reduce the amount of ifdef'd code to:. ```cpp; #ifdef _WIN32; const std::string type = ""struct `private: virtual void __thiscall RDataFrameInterface_TypeUnknownToInterpreter_Test::TestBody(void)'::`2'::SimpleType"";; #else; const std::string type = ""RDataFrameInterface_TypeUnknownToInterpreter_Test::TestBody()::SimpleType"";; #endif; ```. and then simply use `type` in the error strings that we check?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5612#issuecomment-628129578:571,simpl,simply,571,https://root.cern,https://github.com/root-project/root/pull/5612#issuecomment-628129578,4,"['Simpl', 'simpl']","['SimpleType', 'simply']"
Usability,"Thanks @eguiraud for all your comments! I've updated the text, I believe it is now clearer and more to the point.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12121#issuecomment-1405524377:83,clear,clearer,83,https://root.cern,https://github.com/root-project/root/pull/12121#issuecomment-1405524377,2,['clear'],['clearer']
Usability,"Thanks @pfs . @couet it is not clear to me whether this copy constructor has been implemented or not from the conversation, but it should be pretty straightforward. Can you take care, or, if already done, close the issue directly? Thanks!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13075#issuecomment-1926390637:31,clear,clear,31,https://root.cern,https://github.com/root-project/root/issues/13075#issuecomment-1926390637,2,['clear'],['clear']
Usability,"Thanks @vepadulano for the comment. I agree with your proposal. I went for an approach with addition of new options because I found `SetCompression{Algorithm,Level}` and assumed that it's desirable to have that level of flexibility. But I think since `SetCompressionSettings` takes care of both, the better user experience is to have single option with better documentation. Hence, I'll revert the changes from b5200e148be517112143fcb5e6d489dbc2d86dd4 and improve documentation.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14714#issuecomment-1952406831:307,user experience,user experience,307,https://root.cern,https://github.com/root-project/root/pull/14714#issuecomment-1952406831,2,['user experience'],['user experience']
Usability,"Thanks Enric!. > it also removes the part about AsRNode (to be discussed). how will users find out about the feature now? . > to be discussed too what to do with the section ""Distributed execution in Python"", I think it deserves to be outside of the PyROOT box, but perhaps we could rename it to just ""Distributed execution"". good for me (EDIT: as long as we still clearly state that it's Python-only). > The doxygen entry for MakeNumpyDataFrame comes from the function with that name that implements the pythonization. If we don't want it to appear in the reference guide with that name, we could rename it to e.g. MakeNumpyDataFrameImpl. Or we can surround it with `\cond`/`\endcond` doxygen commands. I don't have a preference.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9611#issuecomment-1016215896:365,clear,clearly,365,https://root.cern,https://github.com/root-project/root/pull/9611#issuecomment-1016215896,4,"['clear', 'guid']","['clearly', 'guide']"
Usability,Thanks Jonas! We might have to call some ROOT clean-up routine that is usually called by the ROOT-injected exit handler to make sure TFiles are closed correctly and similar. @pcanal might know if there is a simple way to do that.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7075#issuecomment-764675439:207,simpl,simple,207,https://root.cern,https://github.com/root-project/root/pull/7075#issuecomment-764675439,2,['simpl'],['simple']
Usability,"Thanks Vincenzo! I think the most important change in this PR is that PyROOT does not register the `EndOfProcessCleanups` call with _Python's_ atexit mechanism anymore, but it uses the classic handlers mechanism that `TApplication` already uses. And that means that now PyROOT objects will de deleted before `EndOfProcessCleanups` is called, which is an important change in behavior but I think it is the intended/correct behavior. I am not sure we need the combo `std::call_once` + `std::once_flag` data member, a static counter seems simpler and it does the job (unless we expect that TApplication and PyROOT could try to register the handler _concurrently_, but I can't imagine how that would happen). With this said I'm the least qualified person to decide on whether we want to go with this or not, I'll leave it to the other reviewers.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10753#issuecomment-1155283317:536,simpl,simpler,536,https://root.cern,https://github.com/root-project/root/pull/10753#issuecomment-1155283317,2,['simpl'],['simpler']
Usability,"Thanks a lot @pcanal for this improvement: experiments will appreciate. Given that we still run, with somewhat lower frequency than others, 6.26 builds and tests, would a simple test for 6.26 be of help in roottest?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15006#issuecomment-2010652089:171,simpl,simple,171,https://root.cern,https://github.com/root-project/root/pull/15006#issuecomment-2010652089,2,['simpl'],['simple']
Usability,"Thanks a lot for your comment!. > * sometimes I would have found useful to be able to pass python number anywhere a RooAbsReal is required, although I suspect this may require a pythonization for each pdf. Yes, I would like this too, but it's technically not easy to implement without changing the source for all PDFs. Maybe I will have an idea at some point as I learn more about PyROOT, but for now I have none. > * `RooSimultaneous` map constructor does not accept a python dictionary yet. That's a very good idea!. > * one thing that surprised me a couple of times at the beginning is that `RooAbsArg` does not keep its servers alive from the python GC so you actually need the same workarounds as in C++ (importing frequently to a workspace).; However, I suspect that if they did keep servers alive, server redirection would likely lead to desync between the C++ and python views of the graph. That's a pretty good idea too. I guess one can simply create new Python references to each server that are set as an attribute of the server, such that they are always kept alive. But you're right, server redirection would break this, unless there are Pythonizations for that one too.... So I still need to think if this is worth it, also considering that users can also use the RooWorkspace factory interface to create PDFs, which doesn't have this problem.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11421#issuecomment-1257762156:364,learn,learn,364,https://root.cern,https://github.com/root-project/root/issues/11421#issuecomment-1257762156,4,"['learn', 'simpl']","['learn', 'simply']"
Usability,"Thanks a lot for your feedback @pcanal, I have fixed up the code convention mistakes in https://github.com/root-project/root/pull/586/commits/99fbdcd4fe8b90ebfa29f7ec27cb1f47353ac62f",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/586#issuecomment-303357716:22,feedback,feedback,22,https://root.cern,https://github.com/root-project/root/pull/586#issuecomment-303357716,1,['feedback'],['feedback']
Usability,"Thanks a lot, Vassil. It is still work in progress. It implies a lot of changes and I thought it better if I could receive feedback the earliest possible. There will be tests and I'll try to improve the documentation.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/567#issuecomment-301234996:123,feedback,feedback,123,https://root.cern,https://github.com/root-project/root/pull/567#issuecomment-301234996,1,['feedback'],['feedback']
Usability,"Thanks everyone for the valuable feedback! I changed the behaviour of the feature to make it simpler to use correctly, and also added one or two perks:. * `OnParameterUpdate` (was `RegisterCallback`) now takes a callable that will be invoked once every specified number of entries on a partial result in _one_ of the worker threads. It will never be invoked concurrently; * `OnParameterUpdateSlot` takes a callable that will be invoked once every specified number of entries on a partial result in each of the worker threads. It will be invoked concurrently, and will also take as argument the ""processing slot"" number the partial result belongs to; * passing `0` as `everyNEvents` parameter to `OnParameterUpdate[Slot]` makes it so that the callback is invoked just once [per slot] before starting the event loop",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1037#issuecomment-331721438:33,feedback,feedback,33,https://root.cern,https://github.com/root-project/root/pull/1037#issuecomment-331721438,4,"['feedback', 'simpl']","['feedback', 'simpler']"
Usability,Thanks for all the feedback. A more comprehensive solution to avoid spurious lookups triggered by TClass::GetClass will be proposed.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13341#issuecomment-1862225290:19,feedback,feedback,19,https://root.cern,https://github.com/root-project/root/pull/13341#issuecomment-1862225290,2,['feedback'],['feedback']
Usability,"Thanks for all the insights! We are still learning how to cope with all the different interfaces. It is possible that at some point all this extra configuration will be collected in a single place to make it easier for new users to activate from distributed RDataFrame directly. It would be amazing if you could try again your reproducer with the next nightlies if you have time, thank you so much :smile: !; Let's continue the discussion in private for other topics",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9429#issuecomment-993713171:42,learn,learning,42,https://root.cern,https://github.com/root-project/root/issues/9429#issuecomment-993713171,2,['learn'],['learning']
Usability,"Thanks for noting this problem. Note that the first new Error message is inaccurate. For example,; ```; gInterpreter->GenerateDictionary(""std::vector<TNamed*>"","""");; ```; works perfectly. And in my opinion the 2nd error message might be too noisy for this kind of error. Either way, my understanding of the problem is simply a missing nullptr checking which was apply to 'just' TCint.cxx at a time we had both TCint and TCintWithCling.cxx:; ```; commit 40ff05f286d494f930c00d81942b845f240a74f9; Author: Axel Naumann <Axel.Naumann@cern.ch>; Date: Thu Jan 19 09:46:31 2012 +0000. Fix Coverity 39060 (deref of 0 ptr); ; ; git-svn-id: http://root.cern.ch/svn/root/trunk@42716 27541ba8-7e3a-0410-8455-c3a389f83636. diff --git a/core/meta/src/TCint.cxx b/core/meta/src/TCint.cxx; index 311e2f2d99..b9babb70e6 100644; --- a/core/meta/src/TCint.cxx; +++ b/core/meta/src/TCint.cxx; @@ -1165,6 +1165,7 @@ Int_t TCint::GenerateDictionary(const char *classes, const char *includes /* = 0; // gInterpreter->GenerateDictionary(""myclass"",""myclass.h;myhelper.h"");; ; if (classes == 0 || classes[0] == 0) return 0;; + if (!includes) includes = """";; ; // Split the input list; std::vector<std::string> listClasses;; ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1724#issuecomment-371907648:318,simpl,simply,318,https://root.cern,https://github.com/root-project/root/pull/1724#issuecomment-371907648,2,['simpl'],['simply']
Usability,"Thanks for opening this issue!. The training part of TMVA is not developed anymore, that's why this issue was not be addressed. Sorry for not giving any feedback and leaving it in limbo state for so long. See also: https://indico.cern.ch/event/1356068/contributions/5709442/attachments/2811744/4907885/ML4EP_Feedback.pdf. Quote from slide 4:; > We want to support experiments inference (C++) for cases that are difficult to; implement or require heavy dependencies.; We don’t want to compete with existing industry tools for training.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7092#issuecomment-2046133207:153,feedback,feedback,153,https://root.cern,https://github.com/root-project/root/issues/7092#issuecomment-2046133207,2,['feedback'],['feedback']
Usability,"Thanks for the attention to it. Maybe I was too enthusiastic in the context of displayed objects and interactive root sessions. I'm not an expert, but still learning. Th RDirectory looks interesting. Subroutines leaving global objects lying around still seems funny. It could be convenient for casual scripting. As an example of a main routine, and a subroutine that ""makes"" a TCanvas that persists after a .x, I'd be inclined to skin the cat this way:. ```; // my_subroutines.C; void my_subroutine(unique_ptr<TCanvas> &x) {; x.reset() // TCanvas requires the extra step, see note below.; x.reset(new TCanvas());; // .. do something with it.; }; ```. ```; //make_canvas.C; namespace root_global { ; unique_ptr<TCanvas> c1;; }. void make_canvas() {; // we decide at the top level to use a global here:; my_subroutine(root_global::c1);. //This one doesn't use a global and will die, our choice; unique_ptr<TCanvas> local_canvas;; my_subroutine(local_canvas);; }; ```; or if being a little more lazy, I'd likely use static instead of the namespace, but the root interpreter doesn't respect translation unit boundaries well. Really I'd use a class though in case I need to add more global things easily:. ```; //display.h. class display {; private:; unique_ptr<TCanvas> c1;; public:; void make_canvas() {; c1.reset(); ; c1.reset(new TCanvas());; }; };; ```; And use it like:; ```; //make_display.C; #include ""display.h"". namespace root_global { ; display my_display;; }. // main routine:; void make_display() { ; // This one will stick around; root_global::my_display.make_canvas();. // This one wont. ; display local_display;; local_display.make_canvas();; }; ```. There are two main differences compared to the PR. 1) I'm not letting the subroutine allocate heap objects that aren't handled explicitly by the caller. 2) I'm using standard C++ that even works fine right now in root 6. That's nice because it's easier to learn, recognize, understand, and apply elsewhere. Maybe it's a bonus that syntax f",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7305#issuecomment-787621241:157,learn,learning,157,https://root.cern,https://github.com/root-project/root/pull/7305#issuecomment-787621241,2,['learn'],['learning']
Usability,"Thanks for the clarification!. Speaking of needs, I still need https://github.com/root-project/root/pull/8546 for my project, which deals with huge amounts of integer waveforms, but after two years I closed it because I was getting no more feedback / responses. (I am happy to reopen it once there is someone able to review it.)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9156#issuecomment-1813907124:240,feedback,feedback,240,https://root.cern,https://github.com/root-project/root/pull/9156#issuecomment-1813907124,2,['feedback'],['feedback']
Usability,"Thanks for the comment @linev . I clearly see your point and I got to admit I was not thinking much about compatibility when I wrote this feature although this is a crucial point for a toolkit like ROOT. About the default value for the constructor everything is totally fine.; About the redefined virtual functions, I am not 100% sure what is the best way to resolve the problem. Probably providing a default value for the new parameter like I did for TAttMarker::SaveMarkerAttributes will not be enough.; I was asking myself whether it is better to overload the virtual function with the additional parameter or to define a complete new function with a different name. Maybe you can give me an advice on how to resolve this problem since am not fully familiar with the concept of virtual functions and the consequences of a particular implementation. All the best,; Simon Spies",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4721#issuecomment-571182962:34,clear,clearly,34,https://root.cern,https://github.com/root-project/root/pull/4721#issuecomment-571182962,2,['clear'],['clearly']
Usability,"Thanks for the comment! I agree that it's not clear how meaningful `weightError` is for RooDataSet, but still the only two classes that derive from RooAbsData are RooDataHist and RooDataSet. Both of them reimplement `weightError` in a non-trivial way. Or are you thinking about some user classes that might inherit from `RooAbsData`? In that case they would not compile because not all purely virtual functions are implemented. But I'd argue that this a good thing, because then the user is made aware that `weightError` should be implemented with a dummy value. Actually, it can even be dangerous that we choose this dummy value ourselves (why zero and not `nan` for example?). I think purely virtual functions are safer than ""dummy functions"", and they are also more self-documenting because we know that every inheriting class will be overloading this function.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8137#issuecomment-838795380:46,clear,clear,46,https://root.cern,https://github.com/root-project/root/pull/8137#issuecomment-838795380,2,['clear'],['clear']
Usability,"Thanks for the comment. At this point this issue seems to conflate two things: ; 1. The dependencies of python tests. This should have been addressed by #16555 ; 2. The missing symbols. If 1. is confirmed to be solved, I would say that at least this issue ought to be closed and one about missing symbols opened. However, even if an issue dedicated to the missing symbols is opened, it's not clear, at least to me, how the problem can be reproduced. So far we have no indication of it in our CI: can it be due to a somewhat imprecise formulation of the python dependencies in the `requirements.txt` file that affects your platform?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/16553#issuecomment-2384870116:392,clear,clear,392,https://root.cern,https://github.com/root-project/root/issues/16553#issuecomment-2384870116,2,['clear'],['clear']
Usability,"Thanks for the education, I just wrote down what I learned.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/564#issuecomment-300600704:51,learn,learned,51,https://root.cern,https://github.com/root-project/root/pull/564#issuecomment-300600704,1,['learn'],['learned']
Usability,Thanks for the feedback @will-cern ! The expert is now in the loop.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/16244#issuecomment-2291348314:15,feedback,feedback,15,https://root.cern,https://github.com/root-project/root/issues/16244#issuecomment-2291348314,2,['feedback'],['feedback']
Usability,Thanks for the feedback Philippe and Danilo!; will modify it and send the corresponding tests,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/864#issuecomment-322990975:15,feedback,feedback,15,https://root.cern,https://github.com/root-project/root/pull/864#issuecomment-322990975,2,['feedback'],['feedback']
Usability,Thanks for the feedback!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7711#issuecomment-828443447:15,feedback,feedback,15,https://root.cern,https://github.com/root-project/root/pull/7711#issuecomment-828443447,2,['feedback'],['feedback']
Usability,Thanks for the feedback! Then it looks ready to me :),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10366#issuecomment-1219758325:15,feedback,feedback,15,https://root.cern,https://github.com/root-project/root/pull/10366#issuecomment-1219758325,2,['feedback'],['feedback']
Usability,"Thanks for the feedback. Could the function be overriden ?; ```; TGraph::SaveAs(...); {; if (std::ends_with("".csv"")); {; //do something; }; else; {; TObject::SaveAs(...);; }; }; ```. Or alternatively, in TObject::SaveAs, do the following:. ```; if ends_with('.csv') and ClassName() == ""TGraph""); {; ... do something; }; else; {; ...do what does now; }; ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9491#issuecomment-1058270647:15,feedback,feedback,15,https://root.cern,https://github.com/root-project/root/issues/9491#issuecomment-1058270647,2,['feedback'],['feedback']
Usability,Thanks for the feedback. I think I fixed them now.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7237#issuecomment-784245202:15,feedback,feedback,15,https://root.cern,https://github.com/root-project/root/pull/7237#issuecomment-784245202,2,['feedback'],['feedback']
Usability,"Thanks for the feedback. Just as a suggestion, I think it would still be possible to migrate from that Makefile to a CMakeLists.txt. That way, one could configure via the command line what part of the docs to build, instead of having to modify the makeinput.sh script, which in turn modifies the git source directory, which brings us back to https://github.com/root-project/root/issues/8947",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8950#issuecomment-934484956:15,feedback,feedback,15,https://root.cern,https://github.com/root-project/root/issues/8950#issuecomment-934484956,2,['feedback'],['feedback']
Usability,Thanks for the feedback. Reverted now.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10055#issuecomment-1060733471:15,feedback,feedback,15,https://root.cern,https://github.com/root-project/root/pull/10055#issuecomment-1060733471,2,['feedback'],['feedback']
Usability,"Thanks for the info. Since the behaviour is very counter intuitive, I would consider this a bug. I will soon have a fix. Progress on this is tracked here:; https://sft.its.cern.ch/jira/browse/ROOT-10259",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4167#issuecomment-519957336:57,intuit,intuitive,57,https://root.cern,https://github.com/root-project/root/pull/4167#issuecomment-519957336,2,['intuit'],['intuitive']
Usability,"Thanks for the patch, Advait!. My thoughts: If the function is added to ROOT as is, I'd implement it in the header and simply `return a==b`. The C/C++ cast from `bool` to `int` is effectively a Kronecker Delta. That said, I'm not sure if the function as such does in practice what users expect. Floating point values are hardly ever exactly equal, but usually one tests for them to be equal within +/ epsilon. I'll assign to @lmoneta.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8719#issuecomment-886443983:119,simpl,simply,119,https://root.cern,https://github.com/root-project/root/pull/8719#issuecomment-886443983,2,['simpl'],['simply']
Usability,"Thanks for the proposal backed up by a concrete potential solution. I like the idea of having something automated that in case of problems, simply does nothing. One thing that changes though is the squashing. ; This is something to discuss. In your opinion, @vgvassilev , what do we loose by automatically squashing commits intended for backports?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14889#issuecomment-1981051931:140,simpl,simply,140,https://root.cern,https://github.com/root-project/root/issues/14889#issuecomment-1981051931,2,['simpl'],['simply']
Usability,"Thanks for the quick feedback!. I've tried with `client.wait_for_workers(1)` before creating the RDF, but it doesn't have the expected effect: it just waits forever after printing `DEBUG:Starting job: 12241446.0` (debugging activated with `import logging; logging.basicConfig(format='%(levelname)s:%(message)s', level=logging.DEBUG)`). I can see the job in `condor_q` come and go, but the blocking call is never released for some reason (note that I'm not a Dask expert by any means). I'll try again once #9431 is merged; in particular I'm interested in using Dask's [adaptive worker management](https://jobqueue.dask.org/en/latest/advanced-tips-and-tricks.html#how-to-handle-job-queueing-system-walltime-killing-workers), so that the exact number of submitted jobs is not fixed a priori but automatically adapts to the workload...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9429#issuecomment-992593304:21,feedback,feedback,21,https://root.cern,https://github.com/root-project/root/issues/9429#issuecomment-992593304,2,['feedback'],['feedback']
Usability,"Thanks for the reply!; Yes, I have some Start-Stop-Pause TThread derived classes for my DAQ within a GUI, that I've been using since ROOT5. I only use one thread, apart from the GUI, so I do not really need something that has nWorkers for very parallel tasks. It's just the main GUI window (thread) and a DAQ running behind the scenes.; The CPP code of the class is posted here:; https://root-forum.cern.ch/t/trentrantrwlock-thread-lock-program-freezes/45116/11; In principle, I would be happy to replace with something more modern, but I would need some help with the migration or some 'tutorial' on how to change from TThread to other newer options. Note: I use this in a standalone CMake application, that runs with app.Run and ends with a CloseWindow() and a gApplication->Terminate(). Not sure if that changes the 'order' of deletion somehow. I will investigate further.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8297#issuecomment-852823982:51,Pause,Pause,51,https://root.cern,https://github.com/root-project/root/issues/8297#issuecomment-852823982,1,['Pause'],['Pause']
Usability,"Thanks for the review @dpiparo!. So far, the only failure is the one on ubuntu 2204 that was also seen before this PR:; https://github.com/root-project/root/pull/13775#issuecomment-1743080607. If there are no regressions in the CI output with respect to the other PR I linked, I will merge this PR and then follow up with more backports tomorrow based on the feedback from the nightlies.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13777#issuecomment-1743507531:359,feedback,feedback,359,https://root.cern,https://github.com/root-project/root/pull/13777#issuecomment-1743507531,2,['feedback'],['feedback']
Usability,"Thanks for the review @eguiraud , regarding :. > the _extra_args relay logic could be documented a bit better (I'm not sure MethodTemplateWrapper's init method needs to take extra_args as argument, but MethodTemplateGetter's docs should mention that the extra_args are passed when constructing the wrapper_class instance. I think this is already clear enough in the docs of `__get__` in `MethodTemplateGetter`:; ```; Returns:; instance of MethodTemplateWrapper subclass: contains a handle to; the original implementation of the method template that is; bound to `instance` and, possibly, some extra arguments to be; used when receiving a call.; ```; also `_extra_args` is documented as:; ```; _extra_args (tuple): extra arguments to be used by the wrapper object; when receiving a call.; ```; And the extra args need to be passed when constructing the getter, so they can be passed to the wrapper (the user that is pythonizing a class only deals with the getter).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10341#issuecomment-1094750476:346,clear,clear,346,https://root.cern,https://github.com/root-project/root/pull/10341#issuecomment-1094750476,2,['clear'],['clear']
Usability,"Thanks for the review! No, there is no unit test for this IO rule, but I tested it locally. I don't think it's worth it to include a test for this simple IO rule, because such a test also always needs a file storing an object of the old class version, and I think it's not good to have too many binary files in the repository without strong reasons.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10909#issuecomment-1181836400:147,simpl,simple,147,https://root.cern,https://github.com/root-project/root/pull/10909#issuecomment-1181836400,2,['simpl'],['simple']
Usability,"Thanks for the review!. > Are all RooStats tutorials dependent on XML ? I think some of them, not using the HIstFactory to create the input workspace, could work without XML. Anyway for simplicity is probably better excluding all if XML is not present. No, not all of them. In the past, I think Windows was built without XML, so it was more important to be pedantic with the vetos there to have at least some test coverage of RooStats on Windows. Nowadays, no test configuration has `xml=OFF` anyway. > Thanks for simplifying the rs401d to use the RooGenericPdf. In the past it was too slow to use with CINT the generic PDF, now with Cling should not be a problem. Yes, I measured the timing, and there was no slowdown from using `RooGenericPdf` in this particular case!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14074#issuecomment-1818475645:186,simpl,simplicity,186,https://root.cern,https://github.com/root-project/root/pull/14074#issuecomment-1818475645,4,['simpl'],"['simplicity', 'simplifying']"
Usability,"Thanks for the review!. The only tutorial for that feature silently gives wrong results: IMO this is a bugfix, not a new feature. Also considering that there are people who would clearly benefit from this being in 6.32 (analysis grand challenge).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15173#issuecomment-2044568142:179,clear,clearly,179,https://root.cern,https://github.com/root-project/root/pull/15173#issuecomment-2044568142,2,['clear'],['clearly']
Usability,"Thanks for these changes. I apologise for coming back to them so late. ; I would like to hear also what @pcanal has to say about the mechanics of the code, however the change seems a net improvement with respect to the current situation. I would like to start pointing out a few aspects of the PR which could be improved before merging (if consensus in the review is reached):; - There is one test failure, on all platforms but windows: do you need help to figure out why the test is failing?; - The number of commits seem to high, can they be squashed together into fewer commits (one commit) with clear commit messages?; - There is no test for the functionality: can one or more tests be added in roottest? If you need some examples, we can dig them out for you (in the `root/meta/` directory one should have plenty of examples)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14813#issuecomment-2038169206:599,clear,clear,599,https://root.cern,https://github.com/root-project/root/pull/14813#issuecomment-2038169206,2,['clear'],['clear']
Usability,"Thanks for this quick patch. We have observed similar issues also at other places of the code, when calling TClass::New(), but we always found simple workarounds there as well. Together with #6535 (where we have a patch as well) these were the *only* issues in the entire H1@HERA analysis packages when going from ROOT5.34 to ROOT6.20. albeit it was initially developed for ROOT2.25 and CINT. Congrats to the ROOT developers!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6670#issuecomment-714299930:143,simpl,simple,143,https://root.cern,https://github.com/root-project/root/issues/6670#issuecomment-714299930,2,['simpl'],['simple']
Usability,Thanks for you PR. I put it in. May be it would be nice to have small examples showing how to use these new features ? We could refer to them in the ref guide of THStack and TMultiGraph,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/371#issuecomment-282737620:153,guid,guide,153,https://root.cern,https://github.com/root-project/root/pull/371#issuecomment-282737620,1,['guid'],['guide']
Usability,"Thanks for your PR, @guiguem !. After a discussion within the team we decided not to apply it for the following reasons:; - RooFit is not even enabled by default. If we reconsider that ROOT should really be built with RooFit then we will revisit your PR (or something similar).; - it is fairly trivial to add `RooFit` to CMake's `find_package` https://root.cern.ch/how/integrate-root-my-project-cmake / to add a `-lRooFit` behind `root-config --libs`, so adding this to our build system doesn't appear to be a huge simplification for users. I hope this explanation reduces a bit the frustration that our decision might cause - we do appreciate your suggestion especially as it's a PR!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1002#issuecomment-330508193:515,simpl,simplification,515,https://root.cern,https://github.com/root-project/root/pull/1002#issuecomment-330508193,2,['simpl'],['simplification']
Usability,"Thanks for your proposal! We won't need `std::shared_ptr<std::vector<Double_t>>` as datatype; `std::vector<Double_t>` would be enough as this allows cheap move operations. Then again, so does `Double_t *`. Did you consider simply implementing a move operator for `TGraph`?. We must avoid all backward incompatible interface changes. I didn't look in detail but the amount of code changes here suggests that this isn't the case for this draft?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9610#issuecomment-1056797487:223,simpl,simply,223,https://root.cern,https://github.com/root-project/root/pull/9610#issuecomment-1056797487,2,['simpl'],['simply']
Usability,"Thanks for your report! I think much of this would cause churn without much benefit on the users' side: they would simply hate us for littering them with deprecation warnings that they just don't care about. Instead, we moved away from these types in new code (RDataFrame, RNTuple, etc); new tutorials are also just using standard types. I don't know whether anything but this will be constructive / productive enough. What are your thoughts?. I'd certainly like to use std features for the underlying types / values for what's in Rtypes as much as possible, instead of rolling out own. But that seems orthogonal.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12208#issuecomment-1413764933:115,simpl,simply,115,https://root.cern,https://github.com/root-project/root/issues/12208#issuecomment-1413764933,2,['simpl'],['simply']
Usability,"Thanks to @bellenot for providing the Windows part. I have squashed it into the main commit and added a `Co-Authored-By: Bertrand Bellenot @bellenot` line (hope, that's the best way to give credit?). > BTW, do we have any specific test for this?. If I should write tests (sounds like everything else is fine), I could need a small bit of guidance (could you point me at a test, that I could learn from / extend?). Also rebased.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7031#issuecomment-801033691:338,guid,guidance,338,https://root.cern,https://github.com/root-project/root/pull/7031#issuecomment-801033691,4,"['guid', 'learn']","['guidance', 'learn']"
Usability,"Thanks! An idea: the KHelpAbout in the browsers, it might be helpful to replace with a simple TGLabel containing gHelpAbout in a Tgtab e.g. or tgwindow",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15056#issuecomment-2042007736:87,simpl,simple,87,https://root.cern,https://github.com/root-project/root/pull/15056#issuecomment-2042007736,2,['simpl'],['simple']
Usability,"Thanks!. For the tab-completion, I checked and it looks it could be done in a more or less simple way I guess (pseudocode):. ```; fCommand->Connect(""TabPressed()"", ""TGCommandPlugin"", this, ""HandleTab()"");. void TGCommandPlugin::HandleTab(); {; const std::string line = fCommandBuf->GetString();; const size_t cur = fCursorIX; //; std::vector<string> result;; gInterpreter->CodeComplete(line, cur, result);; for(auto& res : result); {; //todo append to output window; }; }; ```; Note: inspired by TClingTabCompletion::Complete function.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7180#issuecomment-779807875:91,simpl,simple,91,https://root.cern,https://github.com/root-project/root/issues/7180#issuecomment-779807875,2,['simpl'],['simple']
Usability,Thanks!. The changes are clear enough that I dare merge them without bothering the code owners. :-),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6253#issuecomment-680846985:25,clear,clear,25,https://root.cern,https://github.com/root-project/root/pull/6253#issuecomment-680846985,2,['clear'],['clear']
Usability,"Thanks, @egpbos and @jspaaks ! Validation succeeds now. > suggest to add a GitHub Actions workflow. AFAICT we need this to be integrated with our release workflow. Once that's a GH Action we can also migrate the `CITATION.cff` generation and validation there. I *think* it's fairly hard to break the file given that it's generated by a script; I also dislike the pile of dependencies of `cffconvert` for a simple thing like validation, IMO it's too heavy to add it to the script producing `CITATION.cff`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8626#issuecomment-876311455:406,simpl,simple,406,https://root.cern,https://github.com/root-project/root/pull/8626#issuecomment-876311455,2,['simpl'],['simple']
Usability,"Thanks, @pcanal. I will move the code. Hopefully after that we can merge. I also had a request to test this “across the ocean”, so if you could try to compare before/after by running something simple using data at CERN (or let me know of a file publicly avaiable via XRootD in Fermilab or other location in the US), I would appreciate it.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11644#issuecomment-1308989870:193,simpl,simple,193,https://root.cern,https://github.com/root-project/root/pull/11644#issuecomment-1308989870,2,['simpl'],['simple']
Usability,"Thanks, @vgvassilev!!! Once the problem was identified as the issue with those paths, a very nice and simple solution became obvious.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7881#issuecomment-900730523:102,simpl,simple,102,https://root.cern,https://github.com/root-project/root/issues/7881#issuecomment-900730523,2,['simpl'],['simple']
Usability,"Thanks, @vgvassilev. Just to be clear, since I didn't find branches named `llvm13`, you mean these?. * https://github.com/vgvassilev/llvm/tree/cling-patches-llvm13; * https://github.com/vgvassilev/clang/tree/cling-patches-llvm13; * https://github.com/vgvassilev/cling/tree/cling-patches-llvm13",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10294#issuecomment-1186244868:32,clear,clear,32,https://root.cern,https://github.com/root-project/root/pull/10294#issuecomment-1186244868,2,['clear'],['clear']
Usability,"Thanks, Philippe. I added that information to the old thread on the forum. I also found what you were saying in the manual (so it is present somewhere in the documentation, though I usually read the reference guide).; About my initial feature request: I think this is a continuous wish of users to have a vector for ints (and other types) when you have a vector for doubles. So it's up to you whether you add this support or not (me personally no longer need that).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8517#issuecomment-867417636:209,guid,guide,209,https://root.cern,https://github.com/root-project/root/issues/8517#issuecomment-867417636,2,['guid'],['guide']
Usability,"Thanks. I do not understand. I proposed a simple reproducer that illustrates a bad user experience, very bad, that makes the system unusable. What is the strategy to fix this bug?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/15474#issuecomment-2120092013:42,simpl,simple,42,https://root.cern,https://github.com/root-project/root/issues/15474#issuecomment-2120092013,4,"['simpl', 'user experience']","['simple', 'user experience']"
Usability,"Thanks. We have slightly different systems and configs; ```; System: Darwin-24.1.0; ROOT Platform: macosx; ROOT Architecture: macosxarm64; Processor: 8 core Apple M2 (arm64); Build type: Release; Install path: /install/; Compiler: AppleClang 16.0.0.16000026; C++ standard: 20; Compiler flags:; -- ; - C: -m64 -pipe -W -Wall -fsigned-char -fno-common -Qunused-arguments -pthread; - C (build type specific): -O3 -DNDEBUG; - C++: -Wc++11-narrowing -Wsign-compare -Wsometimes-uninitialized -Wconditional-uninitialized -Wheader-guard -Warray-bounds -Wcomment -Wtautological-compare -Wstrncat-size -Wloop-analysis -Wbool-conversion -m64 -pipe -W -Wall -Woverloaded-virtual -fsigned-char -fno-common -Qunused-arguments -pthread -stdlib=libc++; - C++ (build type specific): -O3 -DNDEBUG; -- Linker flags:; - Executable: -mmacosx-version-min=15.1; - Module: ; - Shared: ; ```. For the moment, I cannot yet reproduce the issue on our devel/build nodes. As you saw, I added in the loop our Apple and graphics expert in the loop. Do you manage to start a browser when starting root in batch mode, i.e. `root -b` (as a test, of course it's not overly useful for the user experience)?; I can propose a temporary workaround to unblock you: could you try to boot root enabling web graphics (still experimental): `root --web`?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/16428#issuecomment-2350896986:1153,user experience,user experience,1153,https://root.cern,https://github.com/root-project/root/issues/16428#issuecomment-2350896986,2,['user experience'],['user experience']
Usability,"Thanks. Would such a PR be likely to be accepted? I programmed other things involving histograms two years ago and did not get further feedback / revision (https://github.com/root-project/root/pull/8546) on how to proceed, thus I am not sure if I should embark in new PRs at the moment, until the others are solved.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10660#issuecomment-1464032410:135,feedback,feedback,135,https://root.cern,https://github.com/root-project/root/issues/10660#issuecomment-1464032410,2,['feedback'],['feedback']
Usability,"Thanks. Yes, that's what would be needed. I didn't try it with ROOT but it works well with all my other Cmake projects. It generates a .qch file that one can then import as Help Guide within QtCreator; See https://www.creatis.insa-lyon.fr/~grenier/?p=273",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8781#issuecomment-901736698:178,Guid,Guide,178,https://root.cern,https://github.com/root-project/root/issues/8781#issuecomment-901736698,1,['Guid'],['Guide']
Usability,"That are our coding conventions which can be enforced with clang-format and our configuration file which is located in the root top directory (.clang-format). Before proceeding with anything such as formatting, more doxygen documentation and the tutorial macro I would wait for @lmoneta and @couet to give you feedback. This will probably happen next week because of the Easter break.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/515#issuecomment-295371138:310,feedback,feedback,310,https://root.cern,https://github.com/root-project/root/pull/515#issuecomment-295371138,1,['feedback'],['feedback']
Usability,"That is a good point that I overlooked. The case I was thinking of instead was the question of distinct files opened by distinct threads whose objects might reference the file. [In the case you describe, it is not clear how much it matters which of the TFile instance with the same uuid is being used when following a reference (as they are semantically equivalent] [Actually it might matter for lifetime issues ... ;( ]",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10318#issuecomment-1090957110:214,clear,clear,214,https://root.cern,https://github.com/root-project/root/pull/10318#issuecomment-1090957110,2,['clear'],['clear']
Usability,"That is not quite surprising as the problem is likely to do with some type of schema evolution (particularly sensitive to this set of change are map/multimap where the key or value is an enum). In addition to having a simpler example, you could consider trying out https://github.com/root-project/root/pull/10230 which contains all the fixes I have been making (and is currently passing all but one of the tests I have/examples).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10282#issuecomment-1086030662:218,simpl,simpler,218,https://root.cern,https://github.com/root-project/root/issues/10282#issuecomment-1086030662,2,['simpl'],['simpler']
Usability,That was already discussed many time in the past. The problem is that doing that de pdf and ps files generated will be super huge and people will not realize it if they are running in batch. Some people had disk saturated. Col2 was explicitly created for that. So if we do what we suggest we do exactly what we wanted to avoid. All that is explained in de reference guide,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6822#issuecomment-728877631:366,guid,guide,366,https://root.cern,https://github.com/root-project/root/issues/6822#issuecomment-728877631,2,['guid'],['guide']
Usability,"That will be hard to respect, because that means unless we introduce a new `testsupport=OFF` configuration flag, gtest would always be a dependency of ROOT with `-fail-on-missing=ON` then. I don't see at the moment how I can respect all of these constraints:. 1. Keep configuration simple by not introducing new build flags; 2. Make `ROOT_ADD_GTEST` fully usable in downstream code even if ROOT was not built with unit tests; 3. Don't add `gtest` as an unavoidable build dependency of ROOT if you have `fail-on-missin=ON`; 4. Respect `fail-on-missing`. Which of these constraints should be relaxed?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/16612#issuecomment-2396463790:282,simpl,simple,282,https://root.cern,https://github.com/root-project/root/issues/16612#issuecomment-2396463790,4,"['simpl', 'usab']","['simple', 'usable']"
Usability,"That's a nice demo, @dpiparo, and how it's commonly done. Or you can just copy the collection, if it's not too expensive. As for the actual issue: it should be clear that reader views should not be sortable. We can't make this explicitly clear with `const` because ROOT and it's users are not very consistent with that keyword, as @Axel-Naumann said. So there is no solution here - ROOT and C++ just allow you to shoot yourself in the foot :slightly_smiling_face:",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13314#issuecomment-2046122952:160,clear,clear,160,https://root.cern,https://github.com/root-project/root/issues/13314#issuecomment-2046122952,4,['clear'],['clear']
Usability,"That's an option. Inevitably, we will need some common infrastructure which is ROOT-specific for the root.git test and we will have to solve this sooner or later. For the particular tests we are refactoring, I'd like to keep them in root.git for the usual reasons such as they run fast and are part of the commit history which makes changes a lot clearer. In that case I will have to keep the code duplication or drop the checks for diagnostics.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5297#issuecomment-615066525:347,clear,clearer,347,https://root.cern,https://github.com/root-project/root/pull/5297#issuecomment-615066525,2,['clear'],['clearer']
Usability,That's great! Out of curiousity: How does the error message look like for `Filter('x = 0')`?\; And I don't think that this breaks any existing code. Writing back to the input arguments is clearly a super weird thing in RDF and would rely on implementation details that are not visible to the user.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6526#issuecomment-702072629:188,clear,clearly,188,https://root.cern,https://github.com/root-project/root/pull/6526#issuecomment-702072629,2,['clear'],['clearly']
Usability,"That's right, I could (and did) use a system libzmq, except to build the ppoll file, I need to include a few headers from the libzmq source which are not distributed with Linux packages. Previously, I had included those headers with RooFitZMQ. I ripped them out again, because with the built-in they became unnecessary. Edit: indeed, patching is probably not the right word, it's an addition, but it uses libzmq internal headers. Hope I'm making myself clear, sorry for the confusion.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8385#issuecomment-870471097:453,clear,clear,453,https://root.cern,https://github.com/root-project/root/pull/8385#issuecomment-870471097,2,['clear'],['clear']
Usability,That's the user's guide... it is deprecated ... you should not use it.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10722#issuecomment-1151073680:18,guid,guide,18,https://root.cern,https://github.com/root-project/root/issues/10722#issuecomment-1151073680,2,['guid'],['guide']
Usability,"The Fedora Packaging Guidelines some time ago added a section on packaging javascript files. This section says that minified scripts should be treated as compiled code. And like for programs written in other languages, pre-compiled code that is part of the sources must not be used in packaging, but must be regenerated from sources during the package build. I recently implemented these guidelines in the root package and found some issues. This pull request has three commits. 1) The word ""default"" is a reserved word in the language, and when used as a key in a dictionary it must be quoted. The yuicompressor minifier complains about this:; ```; $ yuicompressor etc/notebook/JsMVA/js/DecisionTree.js ; [ERROR] in etc/notebook/JsMVA/js/DecisionTree.js; 57:24:invalid property id; ```; 2. In one place (and one place only) in the script a construct from a very new version of the javascript standard is used for defining default values to function parameters. This unnecessarily makes the code incompatible with old browsers. It also makes it hard to run the minification during the package build as both yuicompressor and uglufyjs choke on it.; ```; $ yuicompressor etc/notebook/JsMVA/js/NeuralNetwork.js ; [ERROR] in etc/notebook/JsMVA/js/NeuralNetwork.js; 509:75:missing ) after formal parameters; ```; ```; $ uglifyjs etc/notebook/JsMVA/js/NeuralNetwork.js -c -m; Parse error at etc/notebook/JsMVA/js/NeuralNetwork.js:509,73; = function (divid, netobj, oldStructure=false) {; ^; SyntaxError: Unexpected token operator «=», expected punc «,»; ```; 3. The code has not been updated to reflect changes in jsroot. The code still tries to load d3.v3.min.js from jsroot. In the current version of jsroot the d3 script has been updated to version 4 and the file is now called d3.min.js. The pull request changes the name of the file in the two places where it is referenced, so it should now find the file. However this change is incomplete since the d3 API changes between the versions and some portin",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1520:21,Guid,Guidelines,21,https://root.cern,https://github.com/root-project/root/pull/1520,2,"['Guid', 'guid']","['Guidelines', 'guidelines']"
Usability,"The IO for the tests statistics never worked anyway, not even for a simple Gaussian likelihood. It is better to exclude the old test statistics classes complete from IO. Like this, the users don't even attempt to do IO with them, and to developers it's clear that IO backwards compatibility is not necessary, taking away some maintenance burden. Here are some simple scripts to show that storing test statistics doesn't work anyway. Create a NLL object, write it of file and minimize it:; ```c++; void write(); {; using namespace RooFit;. RooRealVar x(""x"", ""x"", -10, 10);; RooRealVar mean(""mean"", ""mean of gaussian"", 1, -10, 10);; RooRealVar sigma(""sigma"", ""width of gaussian"", 1, 0.1, 10);. RooGaussian gauss(""gauss"", ""gaussian PDF"", x, mean, sigma);. auto *data = gauss.generateBinned(x, 10000);. auto nll = gauss.createNLL(*data);. RooWorkspace ws(""ws"");; ws.import(*nll);. ws.Print();. ws.writeToFile(""ws.root"");. RooMinimizer m{*nll};; m.setPrintLevel(-1);; m.minimize(""Minuit"", ""migrad"");; auto res = m.save();. res->Print();; }; ```. Attempt to read the NLL and minimize it again:; ```c++; void open() {. auto f = TFile::Open(""ws.root"");. auto ws = f->Get<RooWorkspace>(""ws"");. ws->Print();. ws->function(""nll_gauss_genData"")->Print();. auto nll = static_cast<RooNLLVar*>(ws->function(""nll_gauss_genData""));. auto& pdf = nll->function();; auto& data = nll->data();. RooMinimizer m{*nll};; m.setPrintLevel(-1);; m.minimize(""Minuit"", ""migrad"");; auto res = m.save();. res->Print();; }; ```. The result is completely off this time. It was also confirmed with Wouter in one of the RooFit meetings that IO of the old test statistics never really worked and was also not intended to be done.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11909:68,simpl,simple,68,https://root.cern,https://github.com/root-project/root/pull/11909,3,"['clear', 'simpl']","['clear', 'simple']"
Usability,"The IO of RooFit proxies can be quite fragile sometimes, and it can happen when reading a RooProduct that the `_proxyList` is not synced with the proxy members. In dbc96810, I decided to throw an exception is this case, but I realized this was too strong: too many old workspace are affected. In all cases that I know of, one can simply recover by correctly resetting the `_proxyList`. This is now what is done, and only a warning is printed. The warning includes information on all the proxies, so the user can figure out themselves if what RooFit is doing here is correct.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12046:330,simpl,simply,330,https://root.cern,https://github.com/root-project/root/pull/12046,1,['simpl'],['simply']
Usability,The PR changes TDF's source code as well as the tutorials. A related PR that changes the tests is open in roottest. I also added an extra commit with a minor fix to TDF's user guide.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/703:176,guid,guide,176,https://root.cern,https://github.com/root-project/root/pull/703,1,['guid'],['guide']
Usability,"The PR speeds up by factors (5x-7x) the simple reproducer of the issue we now have thanks to @sawenzel : ; ```.cpp; // Inspired by Alice production code, extracted from the surrounding context; #include ""TF1.h"". void Foo(int N) {; double am = 90;; double awidth = 1;; for (int i = 0; i < N; ++i) {; static TF1 rbw(""rbw"", ""pow([1],2)*pow([0],2)/(pow(x*x-[0]*[0],2)+pow(x*x*[1]/[0],2))"", -10, 10);; rbw.SetRange(am - 5 * awidth, am + 5 * awidth);; rbw.SetParameter(0, am);; rbw.SetParameter(1, awidth);; am = rbw.GetRandom();; if (am <-100000000) std::cout << am << std::endl; // to avoid compiler optimisations; }; }. int main(); {; Foo(1000);; return 0;; }; ```; The code is faster because the fast code path is taken in the PluginHandler because the right type is used in the GSLIntegratorPlugin (unsigned long, via the size_t typedef), and not just a compatible one (unsigned int).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/15579#issuecomment-2161409421:40,simpl,simple,40,https://root.cern,https://github.com/root-project/root/issues/15579#issuecomment-2161409421,4,['simpl'],['simple']
Usability,"The R Users' Guide is generated by doxygen https://root.cern.ch/doc/master/md_bindings_r_doc_users-guide_ROOTR_Users_Guide.html; It is referenced in the INPUT string in Doxyfile only via ""../../bindings/r/"". So its name does not matter.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5678#issuecomment-633394232:13,Guid,Guide,13,https://root.cern,https://github.com/root-project/root/pull/5678#issuecomment-633394232,1,['Guid'],['Guide']
Usability,"The RCutFlowReport class could benefit of a Merge method since it would ease the implementation of the Report RDataFrame operation in a distributed environment.; In a situation where two chunks of a dataset have been processed separately, a report for each chunk would only contain filtering information of that chunk. In this case, merging the two reports together should provide general information on the cut flow of the entire dataset. Right now, the Merge function works as follows:; It takes another RCutFlowReport as argument (passed by reference).; The fCutInfos member of the current RCutFlowReport is stored in a temporary variable and then cleared.; For each TCutInfo, another TCutInfo with the same name is searched in the other report.; The information on all the entries and the passed entries is then summed up between the two objects.; Finally a new TCutInfo with the resulting information is added to the initial RCutFlowReport. The clearing of fCutInfos is needed since the fPass and fAll members of TCutInfo are const.; If seen appropriate, the const keyword can be removed, then the fCutInfos could be just updated each time. A very simple test has been added. TODO:; - [ ] Add more thorough tests.; - [ ] Decide on the return type of the Merge function (now is void).; - [ ] Possibly overload the function with RCutFlowReport* as argument.; - [ ] Finally add documentation when everything is set.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4174:651,clear,cleared,651,https://root.cern,https://github.com/root-project/root/pull/4174,3,"['clear', 'simpl']","['cleared', 'clearing', 'simple']"
Usability,"The ROOT user guide is consider as frozen and the ""d"" URL should not be considered. This ia a copy of the old web site.; The new web site is: https://root.cern",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7279#issuecomment-785834714:14,guid,guide,14,https://root.cern,https://github.com/root-project/root/issues/7279#issuecomment-785834714,2,['guid'],['guide']
Usability,"The RResult class overwrites the `new` operator to prevent (make it harder for) heap creation of RResult objects. This does not work with PyROOT. E.g., PyROOT can't call `RFieldBase::Create()`. This patch removes the new operator overwrites. This should be a small safety compromise for PyROOT usability. Also: fixes namespace layering and moves RResultBase out of the Internal namespace.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14463:294,usab,usability,294,https://root.cern,https://github.com/root-project/root/pull/14463,1,['usab'],['usability']
Usability,"The RooNameSet class is too complicated considering that it fulfills a; rather simple purpose, which is to serialize the names of objects in a; RooArgSet to a string that can be used to select objects from other; RooArgSets. This commit proposes to replace the RooNameSet class by new functions in; the RooHelpers namespace: `getColonSeparatedNameString` and; `selectFromArgSet`. These functions make use of `std::string` to be much; less verbose than the original RooNameSet class.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7819:79,simpl,simple,79,https://root.cern,https://github.com/root-project/root/pull/7819,1,['simpl'],['simple']
Usability,"The RooRealAnalytic class, and implementation detail of the RooRealIntegral, was not really necessary. You can get the same functionality when creating the corresponding analytic integral just with `createIntegral()`, and then wrapping the integral in a RooRealBinding. There are many unit tests that cover such hybrid integrals, but a simple code snippet to quickly test it is this one:. ```c++; RooWorkspace ws;; ws.factory(""Gaussian::gauss(x[-10, 10], mu[0, -10, 10], sigma[0.1, 3, 10])"");; RooArgSet iset{*ws.var(""x""), *ws.var(""sigma"")};. std::unique_ptr<RooAbsReal> integral{ws.pdf(""gauss"")->createIntegral(iset)};; integral->Print(""v"");; std::cout << integral->getVal() << std::endl;; ```. This commit is the first of a new effort to make the RooFit integral code simpler, in order to make it easier to eventually implement numerical integrals on the GPU.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13334:336,simpl,simple,336,https://root.cern,https://github.com/root-project/root/pull/13334,2,['simpl'],"['simple', 'simpler']"
Usability,"The RooStringVar class is planned to get deprecated soon, hence RooFit; code that is still using it is getting migrated away from it. In the RooCmdConfig case, one can use simple configuration structs; insread of RooStringVar. This change is tested by many unit tests in RooFit, as the; `RooCmdConfig` is used in many places, for example `RooAbsPdf::fitTo`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10106:172,simpl,simple,172,https://root.cern,https://github.com/root-project/root/pull/10106,1,['simpl'],['simple']
Usability,"The RooWorkspace sometimes stores some RooArgSet prefixed with `CACHE_`; in itself to cache for example parameters or constraint sets. These cache sets are invalidated when elements are removed from them by; `RooWorkspace::RecursiveRemove()`. In this case, they should be removed; from the workspace such that they can be correctly recomputed later. This change fixes problems like this one reported on the forum:; https://root-forum.cern.ch/t/how-to-properly-redefine-pdf-in-rooworkspace/50757. In that usecase, the following sequence of events happened:. 1. Create pdf in workspace; 2. Fit this pdf (triggering the caching of the set of parameters); 3. Recursively remove everything from the workspace, but not the cache; sets as they are hidden from the user. The cached parameter sets are; now empty, as all parameters got removed from the workspace; 4. The same pdf from step 1 is recreated; 5. Fitting of this new pdf will now fail, because RooFit thinks it has; zero free parameters, as the call to `getParameters()` now returns; the cleared cache set!. An additional commit in this PR applies some general modernization of the RooWorkspace code.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10952:1041,clear,cleared,1041,https://root.cern,https://github.com/root-project/root/pull/10952,1,['clear'],['cleared']
Usability,"The THistRange class define a generic bin range region which can be used to efficiently iterate over bins.; It is used to create a THBinIterator class which can used to iterate over bins; without using for loops over axis or simple global bin iterations.; Example for computing histogram integral in a given range: . ```; auto hist = new TH1D(""h1"",""h1"",100,-5,5);; hist->FillRandom(""gaus""); ; hist->GetXaxis()->SetRange(40,60); ; THistRange r(hist); ; double integral = 0; ; for (auto & bin : r) { integral += hist->GetBinContent(bin); }; std::cout << ""integral "" << integral << std::endl;; ```. Add also a test program which measures the ieration time. When iterating over a multi-dimensional histogram (e.g. 3 d) the new iteration can be up to 10 times faster.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6795:225,simpl,simple,225,https://root.cern,https://github.com/root-project/root/pull/6795,1,['simpl'],['simple']
Usability,"The TRandom3 generator was observed to fail; a very simple test on the SetSeed/GetSeed interface:. ```; gRandom->SetSeed(11);; auto a = gRandom->GetSeed();; gRandom->SetSeed(12);; auto b = gRandom->GetSeed();; assert(a != b);; ```. Indeed a `GetSeed()` following any `SetSeed(seed)` call always returns the magic number 624. This is because in the current implementation. `GetSeed() { return fMT[fCount624]; }`. we access memory location `fMT[624]` which does not exist in fMT ... and so the value of fCount624 is returned, which happens to be `624`. This commit fixes this bug by imposing an index range between 0 and 623.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14135:52,simpl,simple,52,https://root.cern,https://github.com/root-project/root/pull/14135,1,['simpl'],['simple']
Usability,"The TSpline3::SaveAs and TSpline5::SaveAs methods have two types of bugs. 1); if (klow > fNp-1) klow = fNp-1 is generally true such that equidistant knots are not used.; if (klow > fNp-1) klow = fNp-1 looks ok, to be used in lines 931, 1737. 2) double constants are written with %g resulting in a major loss of precision.; Proposed fix :; replace %g with %.17g; replace char numb[20] --> char numb[30]; replace snprintf(numb,20, --> snprintf(numb,30,. Can be checked as follows :; ```; const int n=11;; Double_t x[n],y[n];; for(int i=0; i<n; ++i) {; x[i]=i*0.1;; y[i]=sqrt(2.)*pow(x[i],2); // simple quadratic polynomial; }; //TSpline3* s=new TSpline3(""spline"", 0, 1, y, n);; TSpline5* s=new TSpline5(""spline"", 0, 1, y, n);; s->SaveAs(""spline.cc"");; int prec=15,wid=prec+7;; .L spline.cc; std::cout << "" x"" << setw(wid) << ""y"" << setw(wid) << ""spline"" << setw(wid) << ""diff"" << '\n';; for(int i=0; i<n; ++i) {; std::cout << setw(5) << x[i] << setw(wid) << y[i] << setw(wid) << spline(x[i]) << setw(wid) << y[i]-spline(x[i]) << std::endl;; }; ```. With the proposed changes, function and spline values agree, diff = 0. Loss in precision by writing double values with an insufficient number of digits in root has been observed before, see https://sft.its.cern.ch/jira/browse/ROOT-8844; Maybe a good idea to check this more generally. Cheers, Helmut Burkhardt. [TSpline.cxx.zip](https://github.com/root-project/root/files/10480476/TSpline.cxx.zip)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12091:593,simpl,simple,593,https://root.cern,https://github.com/root-project/root/issues/12091,1,['simpl'],['simple']
Usability,"The TypeID2TypeName function looks for generic types via TClass::GetClass, thus taking a lock. If we only need to check for simple types such as bool or unsigned char, we should not need that. This change decreases contention in heavily multithreaded runs. In a test run of the AGC with 1 file and 128 threads, these are the results:. Before:; Executing the computation graphs took 23.37 seconds After:; Executing the computation graphs took 5.55 seconds. ## Notes. I was investigating a performance degradation of the AGC signalled on the forum https://root-forum.cern.ch/t/rootdataframe-and-multithreading-in-6-32/61752 . git bisect brought me to [this commit](https://github.com/root-project/root/commit/4cac104e75d15c6744144b1f0e43dcf87c35bc8a) which seems to be at least contributing to the degradation.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16528:124,simpl,simple,124,https://root.cern,https://github.com/root-project/root/pull/16528,1,['simpl'],['simple']
Usability,The User's will not be update in the future. It is not referenced form the new web site. The base of the Doc is the Reference Guide now and the Manual Is an overview helping to navigate into it. Se the explanation here: https://root.cern/manual/,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7284#issuecomment-785861664:126,Guid,Guide,126,https://root.cern,https://github.com/root-project/root/issues/7284#issuecomment-785861664,1,['Guid'],['Guide']
Usability,"The [documentation](https://cmake.org/cmake/help/latest/command/enable_language.html) says:. > Enable a language (CXX/C/Fortran/etc); >; >**enable_language(<lang> [OPTIONAL] )**; >This command enables support for the named language in CMake. This is the same as the; >project command but does not create any of the extra variables that are created by the; >project command. Example languages are CXX, C, Fortran.; >; >This command must be called in file scope, not in a function call. Furthermore, **it must; >be called in the highest directory common to all targets using the named language**; >directly for compiling sources or indirectly through link dependencies. It is simplest to; >enable all needed languages in the top-level directory of a project.; >; >The **OPTIONAL** keyword is a placeholder for future implementation and **does not currently work**. So, should we just add this logic directly into the top `CMakeLists.txt` file?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/891#issuecomment-325334622:674,simpl,simplest,674,https://root.cern,https://github.com/root-project/root/pull/891#issuecomment-325334622,2,['simpl'],['simplest']
Usability,"The `#ifndef __CLING__` was really needed, you can easily double-check. About whether we should have `main`s in the tutorials: `git grep 'int main' $ROOTSYS/tutorials` tells me I'm not the first one to think it's useful :smile: If we want a general guideline on this I can bring up the topic at the next team meeting.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6337#issuecomment-691140036:249,guid,guideline,249,https://root.cern,https://github.com/root-project/root/pull/6337#issuecomment-691140036,2,['guid'],['guideline']
Usability,"The `-Dall` option is for enabling all ROOT features, which should not include dedicated tests. The DistRDF tests should only be used by developers and packagers, so it's not a ""feature"" that should automatically be enabled. Also, if someone enables these tests it's clearly intentional. If the requirements for the tests are not present, there should therefore be a configuration failure, no matter if `fail-on-missing` is enabled or not.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15464:267,clear,clearly,267,https://root.cern,https://github.com/root-project/root/pull/15464,1,['clear'],['clearly']
Usability,"The `-fabi-version=6` flag was added to the compilation of; `geom/vecgeom` in https://github.com/guitargeek/root/commit/ded69d0daad299f528fb172a0e922215ac18615b without any explanation. But recently, it caused some compilation problems with `std::unique-ptr`; in newer GCC versions. Simple reproducer:; ```c++; #include <memory>. int main() { std::unique_ptr<int>(nullptr); }; ```; Compile with `g++ -fabi-version=6 -o test test.cpp`, using GCC 13.2. So the implementation of `std::unique_ptr` in the standard library; version that comes with gcc 13.2.1 is incompatible with that (super old); gcc abi version. Since it's not clear why this flag is there to begin with, I suggest to; remove it so it doesn't cause further problems. The ABI version 6 is very old anyway (it came with GCC 4.7 in 2012). Closes https://github.com/root-project/root/pull/12315.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13751:283,Simpl,Simple,283,https://root.cern,https://github.com/root-project/root/pull/13751,2,"['Simpl', 'clear']","['Simple', 'clear']"
Usability,The `Histo1D` case comes from a pythonization that replaces the original proxy method by a Python function. Perhaps the same pythonization could take care of forwarding to the original method when possible. What is not clear is why `Count` and `Report` do not print docs.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9023#issuecomment-925569986:219,clear,clear,219,https://root.cern,https://github.com/root-project/root/issues/9023#issuecomment-925569986,2,['clear'],['clear']
Usability,"The `RooParamHistFunc` doesn't take any observable RooRealVar as; constructor argument. It assumes as observable the internal variables in; the passed RooDataHist. This means it is in most contexts unusable,; because the input can't be changed, other than loading a different bin; in the dataset. This also breaks the Barlow-Beeston tutorial since the new evaluation; backend is the default, and it is more sentitive to these issues:; https://root.cern.ch/doc/master/rf709__BarlowBeeston_8C.html. There was actually a constructor that took a `RooAbsArg x`, but it was; simply ignored. To fix all these problems, the existing constructors were replaced by a; new one that takes the observable explicitly, and this is mentioned in; the release notes. The class is not used much, because ussually people use HistFactory or; CMS combine for these kind of fits. To backport to ROOT 6.32.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15224:569,simpl,simply,569,https://root.cern,https://github.com/root-project/root/pull/15224,1,['simpl'],['simply']
Usability,"The `RooParametricStepFunction` is not used much, but still there is an; issue requesting to explain its usage better that needs to be closed. I don't think it's worth it to have a tutorial for it, but nothing; speaks about having a little complete usage example script in the; reference guide instead of the code stub that is there right now. This change to the documentation goes together with some gentle code; modernization in this commit. Closes #7748.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10798:288,guid,guide,288,https://root.cern,https://github.com/root-project/root/pull/10798,1,['guid'],['guide']
Usability,"The `TClonesArray.__setitem__` pythonization was introduced in commit 67db9e5 with PR #3423. However, this pythonization is quite unnatural, because a `TObjArray` should not adopt external memory. In fact, on in the C++ side, all `TObjArray`-inherited methods that take a `TObject *` and that would adopt these objects are flagged as `MayNotUse` for good reasons!; See: https://github.com/root-project/root/blob/master/core/cont/inc/TClonesArray.h#L56. Supporting this element setting only on the Python side therefore comes with a very high cost of hacking deep into CPyCppyy, and the benefit of this is not clear because the PR that introduced this feature didn't refer to any user request. Hence, this commit suggests to remove this pythonization, with the ultimate goal of relying less on the usage of CPyCppyy internals.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14485:609,clear,clear,609,https://root.cern,https://github.com/root-project/root/pull/14485,1,['clear'],['clear']
Usability,"The `computeCategoryOldStyle` function in the RooMultiCategory class; gave wrong results in case the multi-category uses categories where the; ordinal number of the category doesn't match the category index. Since the `computeCategoryOldStyle` function was still used for; assertions in debug mode, this caused unnecessary assertion failures as; reported on the forum:. https://root-forum.cern.ch/t/roorealvar-setbinning-with-name-in-pyroot/51069. The code in the forum, together with some added printouts in; `RooMultiCategory::evaluate()` clearly demonstrated that the old-style; implementation is wrong. As the new implementation is already tested for a few releases now, the; most sustainable way to fix the wrong assertion failure is to simply; remove the comparison with the old-style interfaces in debug builds. Since after this change, the `RooMultiCatIter` is only used for the deprecated; `RooSuperCategory::MakeIterator()`, this PR also suggests to remove that; deprecated function together with the `RooMultiCatIter`. This is kind of a followup to https://github.com/root-project/root/pull/5502.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11117:541,clear,clearly,541,https://root.cern,https://github.com/root-project/root/pull/11117,2,"['clear', 'simpl']","['clearly', 'simply']"
Usability,"The `rf507_debugtools` tutorial shows a functionality that doesn't work,; so it should be removed. The only way to get something useful out of; this tutorial is to recompile ROOT, changing the preprocessor macros; `TRACRE_CREATE` and `TRACE_DESTROY` to be defined in `RooTrace.h`.; That's way to advanced for the audience of the tutorials. The usage; example from the tutorial is moved to the reference guide.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12934:403,guid,guide,403,https://root.cern,https://github.com/root-project/root/pull/12934,1,['guid'],['guide']
Usability,"The attached image shows a summary of differences on KNL with 128 threads. Notice how the wait time is significantly reduced from 1485.7s to 1105s. There are also 2936 less waits than before. CPU time of all threads is reduced by ~50s. These are not hugely visible in real runtime, because we are limited by I/O to the disk, essentially, but it would be clearly visible if I/O ceases to be the main bottleneck. The two figures on the bottom show that the time during which the threads run is shorter after the changes introduced in this PR. For reference, the running time without using VTune is about 40s. ![screenshot](https://user-images.githubusercontent.com/249404/27963876-988c7862-6336-11e7-9598-e48c4c760a5e.png). ![screenshot](https://user-images.githubusercontent.com/249404/27964106-678b94b8-6337-11e7-9464-5cc1f4312bd1.png). ![screenshot](https://user-images.githubusercontent.com/249404/27964127-7ed03c78-6337-11e7-8832-7c61643b4939.png)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/747#issuecomment-313710392:354,clear,clearly,354,https://root.cern,https://github.com/root-project/root/pull/747#issuecomment-313710392,1,['clear'],['clearly']
Usability,"The attempt to fix the following test that was failing:; roottest-python-basic-operator; led to the necessity of adding the possibility for the user to call a namespace inside cppyy.gbl.ROOT by simply typing ROOT.Namespace instead of ROOT.ROOT.Namespace. ; Two bugs in cppyy were also found during this attempt, both fixed by the maintainer of the repo.; The test mentioned above now succeeds.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3963:194,simpl,simply,194,https://root.cern,https://github.com/root-project/root/pull/3963,1,['simpl'],['simply']
Usability,The best solution is to simply remove the ClassImp which are deprecated and offer very little value added. Another solution is to simply add an empty line about of the two ClassImp so that there are not on the same line number.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10948#issuecomment-1195998820:24,simpl,simply,24,https://root.cern,https://github.com/root-project/root/issues/10948#issuecomment-1195998820,4,['simpl'],['simply']
Usability,"The changes to the class still hold valid, I was held back by a strange behaviour in `clang-format`. Will resume work asap, thanks",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3962#issuecomment-509963855:106,resume,resume,106,https://root.cern,https://github.com/root-project/root/pull/3962#issuecomment-509963855,2,['resume'],['resume']
Usability,"The code has been cleaned, the requested changes done and the number of commits reduced and with better messages. This PR is far from being finished, but these latest changes should make following development easier and the addition of new vectorized implementations more clear.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/655#issuecomment-325232794:272,clear,clear,272,https://root.cern,https://github.com/root-project/root/pull/655#issuecomment-325232794,1,['clear'],['clear']
Usability,"The code in TTree is known to not be ""exception safe"" (it was written before exceptions were usable in practice), so it should never throw any exception . But also it should not interfere and should not change the return value of GetEntry. If I understood correctly and just catching the exception is changing the return value, could you confirm that it does so ""also"" in C++?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9154#issuecomment-951163261:93,usab,usable,93,https://root.cern,https://github.com/root-project/root/issues/9154#issuecomment-951163261,2,['usab'],['usable']
Usability,"The code inlining mechanism uses the doxygen command [`\include`](https://www.doxygen.nl/manual/commands.html#cmdinclude). This command does not allow to specify the type of code to be inlined (C++ or python) the only two options available are `doc` and `lineno`. I guess the ""code"" is considered as C/C++ that's why the highlighting is not correct for that python example. I'll try to find a solution. The simplest would have been an option `.py` like for the `\code` doxygen command (see help). I tried but it does not work.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12851#issuecomment-1558888571:407,simpl,simplest,407,https://root.cern,https://github.com/root-project/root/issues/12851#issuecomment-1558888571,2,['simpl'],['simplest']
Usability,"The code looks fine to me. I don't think using vector::reserve is needed in this case. . It would be nice to test the performance in a complex fix which takes some time and uses heavily the cache, The tutorial are maybe too simple and the fitting is too fast. ; If you can maybe simplify your workspace and make a standalone running example would be great. ; Also, did you observe a substantial performance penalty when creating the std::vector in recalculateCache instead of having as a data member of the class ? . Lorenzo",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/116#issuecomment-293337111:224,simpl,simple,224,https://root.cern,https://github.com/root-project/root/pull/116#issuecomment-293337111,2,['simpl'],"['simple', 'simplify']"
Usability,The command I'm running was simply `root` to get the interactive prompt. The full output of trying to run `1+2` is below:. ```log; $ root -b -q -x -e 1+2; input_line_1:1:2: fatal error: module 'libc' imported by AST file '/home/cburr/mambaforge/conda-bld/root_1609268594446/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placeh/lib/std.pcm' found in a different module map file (/home/cburr/mambaforge/conda-bld/root_1609268594446/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placeh/etc/cling/libc.modulemap) than when the importing AST file was built (/home/cburr/mambaforge/conda-bld/root_1609268594446/work/build-dir/etc/cling/libc.modulemap); #include <new>; ^; input_line_1:1:2: note: imported by module 'std' in '/home/cburr/mambaforge/conda-bld/root_1609268594446/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placeh/lib/std.pcm'; Warning in cling::IncrementalParser::CheckABICompatibility():; Failed to extract C++ standard library version.; 'at_quick_exit' not defined; <<< cling interactive line includer >>>: fatal error: module file '/home/cburr/mambaforge/conda-bld/root_1609268594446/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placeh/lib/libc.pcm' is out of date and needs to be rebuilt; Failed to load module libc; Failed to load module std; Failed to load module _Builtin_intrinsics; Failed to load module ROOT_Foundation_C; Failed to load module ROOT_Rtypes; Failed to load mod,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6385#issuecomment-752250076:28,simpl,simply,28,https://root.cern,https://github.com/root-project/root/pull/6385#issuecomment-752250076,2,['simpl'],['simply']
Usability,The commit message seems pretty clear to me. Can you suggest something?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12276#issuecomment-1427114379:32,clear,clear,32,https://root.cern,https://github.com/root-project/root/pull/12276#issuecomment-1427114379,2,['clear'],['clear']
Usability,"The compilation error seems to be due to a mismatch between the toolchain that was used to compile ROOT and the toolchain you are using to compile your program (e.g. different glibc version). I don't know enough about nixOS to suggest a fix. The massif output shows little memory usage (`mem_heap_B=72938`). Can you try using `root.exe` instead of `root` as the command? By removing one layer of indirection we might help massif see things properly (but of course if we can run on a compiled program rather than through the interpreter it makes everything simpler). Cheers,; Enrico",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9087#issuecomment-951644988:556,simpl,simpler,556,https://root.cern,https://github.com/root-project/root/issues/9087#issuecomment-951644988,2,['simpl'],['simpler']
Usability,"The corresponding leaflist letters are 'G' and 'g'.; A new class TLeafG is added -- basically a copy of TLeafL with; [U]Long64_t changed to [U]Long_t. This fixes ROOT-8885, ""Cannot create a branch of long, unsigned long,; std::size_t types"". For review convenience, I attach the diffs betwen `TLeafL.{h,cxx}` and `TLeafG.{h,cxx}`:; - [TLeafLGh.diff](https://github.com/root-project/root/files/5355689/TLeafLGh.txt); - [TLeafLGcxx.diff](https://github.com/root-project/root/files/5355684/TLeafLGcxx.txt). @Axel-Naumann `TTreeReader` seems to deal with long integers just fine. Nothing to do there, right?. ~~@pcanal where can I add tests?~~. - [x] add tests in tree/treeplayer/test/leafs.cxx; - [x] update `TypeName2ROOTTypeName` in `tree/dataframe/src/RDFUtils.cxx`; - [x] update doc of class TTree; - [x] update doc of `TBranch::TBranch(TTree *tree, const char *name, void *address, const char *leaflist, Int_t basketsize, Int_t compress)`; - [x] update doc of `TBranch* TTree::Branch(const char* name, void* address, const char* leaflist, Int_t bufsize /* = 32000 */)`; - [x] update user's guide: documentation/users-guide/Trees.md",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6600:1092,guid,guide,1092,https://root.cern,https://github.com/root-project/root/pull/6600,2,['guid'],['guide']
Usability,"The current API forces the user to copy the entire fColumnRanges map and do a map lookup if they want to iterate the column ranges. With this change, one can simply access the underlying map directly, avoiding extra work in most cases. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16022:158,simpl,simply,158,https://root.cern,https://github.com/root-project/root/pull/16022,1,['simpl'],['simply']
Usability,"The current code goes through different codepaths depending on the platform. One of the codepaths relies on a non-standard extension (variable-length arrays) and the other manually allocates and frees a char array.; Using a std::string, while losing a bit of performance on Linux/Mac, simplifies and unifies the codepaths and avoids using non-standard C++ (which in turns enable building with -Werror).; The perf hit is most likely negligible, especially given the use of dynamic_cast in the same block.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16476:285,simpl,simplifies,285,https://root.cern,https://github.com/root-project/root/pull/16476,1,['simpl'],['simplifies']
Usability,"The current idea is the following: . 1. For algorithms using only pdf: ; ```; TUnuranContDist dist(pdf); ; ```; 2. For algorithm using pdf + its derivative: ; ```; TUnuranContDist dist(pdf, &dpdf); ; ```; 3. For algorithms using pdf + derivative + pdf: ; ```; TUnuranContDist dist(pdf, &dpdf); ; dist.SetCdf(cdf);; ```; 4. For algorithms using only the cdf: ; ```; TUnuranContDist dist(); ; dist.SetCdf(cdf);; ```. I agree cases 3 and 4 are not very nice, also in case 4 one is forced to have the input functions cloned. ; I would prefer to not change the existing constructor for not breaking the backward compatibility. ; What about adding a constructor like this one: ; ```; TUnuranContDist dist(const ROOT::Math::IGenFunction * pdf, ; ROOT::Math::IGenFunction * dpdf, ; ROOT::Math::GenFunction * cpdf, bool isLogPdf = false, bool copyFunc = false); ; ```; and similar for the TF1 case ? . Thank you for the feedback !",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8196#issuecomment-849462802:911,feedback,feedback,911,https://root.cern,https://github.com/root-project/root/issues/8196#issuecomment-849462802,2,['feedback'],['feedback']
Usability,"The different overloads of `RooAbsRealLValue::inRange()` implemented; different tolerances when checking if a value `x` falls inside a; specific range. Some overloads checked if the interval; `[x - 1e-6, x + 1e6]` is overlapping with the range, an other overload; checked if the interval `[x - 1e-8*x, x + 1e8*x]` is overlapping. It's better is this is done consistently and predictably so this commit; suggests to leave out these epsilon margins that were never documented.; For backwards compatibility, one can set a custom relative or absolute; epsilon via the `RooNumber` interface. Also, the checks if the range limits are `RooNumber::isInfinite()` were; removed. They were mathematically redundant, since in RooFit, +/-; infinity is simply defined as +/-1e30. This PR fixes some corner cases in which you get paradox results from rage checks, like in this example:; ```C++; RooRealVar x{""x"", ""x"", 1e-6, 2e-6};; RooRealVar y{""y"", ""y"", 1e30, 1e30};. std::cout << x.inRange(0.0, nullptr) << std::endl;; std::cout << y.inRange(0.0, nullptr) << std::endl;; // both checks will return true without this PR!; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11999:739,simpl,simply,739,https://root.cern,https://github.com/root-project/root/pull/11999,1,['simpl'],['simply']
Usability,"The direct reason of the failure seems to be that, at least when using SWAN, the ROOT installation is somehow ill-formed. This is a simpler reproducer that just uses Spark primitives to try to run the `root-config` command on the worker. ![image](https://github.com/root-project/root/assets/15638895/f53c6803-7e0d-44cc-80be-160f4065af9c). In all fairness, I don't understand the reason to call into that command in the first place, which happens [here](https://github.com/root-project/root/blob/07872d92719e3682213d732956a32f16be5eacf3/bindings/pyroot/pythonizations/python/ROOT/_pythonization/_tmva/__init__.py#L47), so I will investigate if that is needed at all.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13798#issuecomment-1745696812:132,simpl,simpler,132,https://root.cern,https://github.com/root-project/root/issues/13798#issuecomment-1745696812,2,['simpl'],['simpler']
Usability,"The distributed RDataFrame tutorials/tests have to create cluster objects, which take up resources on the machine. This is another step towards a clearer resource usage for both tutorials and tests. Whenever a cluster object is created, it now uses RESOURCE_LOCK test property to signal that no other cluster object should be created while the previous one is still running. This PR addresses the tutorials in the root repository, a sibling PR will address the tests in roottest",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11439:146,clear,clearer,146,https://root.cern,https://github.com/root-project/root/pull/11439,1,['clear'],['clearer']
Usability,The documentation is correct but you should use the one corresponding to your ROOT version.; See at the top of https://root.cern.ch/doc/master/classRooCategory.html you can change the ROOT version.; Choose 6.18 and you will get the right documentation corresponding to ROOT 6.18. The ROOT reference guide has several occurrences : https://root.cern/reference/,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6625#issuecomment-708509017:299,guid,guide,299,https://root.cern,https://github.com/root-project/root/issues/6625#issuecomment-708509017,2,['guid'],['guide']
Usability,"The example for range-based iteration in `TList.cxx` uses a pattern that; can yield compiler warnings for some GCC versions:. ```; warning: loop variable 'obj' is always a copy because the range of type 'TList' does not return a reference [-Wrange-loop-analysis]; ```. To avoid spreading this pattern, this commit suggests to change the; example to explicitly use the `TObject *` type, which also makes the; example clearer. One of the occurrences of this pattern in RooFit is also changed to `TObject *` to avoid a warning in the Ubuntu 18 nightlies:; https://lcgapp-services.cern.ch/root-jenkins/job/root-incremental-master/LABEL=ROOT-ubuntu1804-clangHEAD,SPEC=noimt/11389/parsed_console/log_content.html#WARNING1. A memory leak in the `HeatmapAnalyzer.cxx` is also fixed.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12442:416,clear,clearer,416,https://root.cern,https://github.com/root-project/root/pull/12442,1,['clear'],['clearer']
Usability,"The extended term needs a special correction, it should not just be; reevaluated with the squared weights replacing the weights. This is not; implemented correctly. The way how weights are handled in the batch mode was also simplified.; Previously, a dummy `RooRealVar` was created for the weight and the; squared weight each, but now the conventional name for the weight; variable is used directly to look up the names in the data map. In the second commit, a unit test is added for this, inspired by the following forum post:; https://root-forum.cern.ch/t/batchmode-gives-wrong-errors-with-sumw2errors/49597/8",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10467:224,simpl,simplified,224,https://root.cern,https://github.com/root-project/root/pull/10467,1,['simpl'],['simplified']
Usability,"The fact that `wait_for_workers` waits forever looks to me like the Dask job is never actually started. You should double check that a simple Dask application with the same config but doing something else unrelated to RDF is working. Let's see, something like this should suffice (inspired by the dask [docs](https://examples.dask.org/delayed.html) and your reproducer):; ```python; import time; import random. from dask import delayed; from dask.distributed import Client; from dask_jobqueue import HTCondorCluster. cluster = HTCondorCluster(cores=1, processes=1, memory=""1GB"", disk=""0.1GB"", job_extra={""jobflavour"": ""espresso""}); cluster.scale(jobs=1); client = Client(cluster). # Try with and without this; client.wait_for_workers(1). def inc(x):; time.sleep(random.random()); return x + 1. def dec(x):; time.sleep(random.random()); return x - 1. def add(x, y):; time.sleep(random.random()); return x + y. inc = delayed(inc); dec = delayed(dec); add = delayed(add). x = inc(1); y = dec(2); z = add(x, y). print(f""Result is: {z.compute()}""); ```. Coming back to RDF, the `npartitions` parameter corresponds to how many distributed tasks will be sent to the Dask scheduler. Supposing you know something about how many resources you have or the layout of your ROOT dataset, you could set this manually in the RDataFrame constructor like; ```python; df = RDataFrame(""treename"",""filename.root"",daskclient=client,npartitions=NPARTITIONS); ``` ; A good parallelisation can often be obtained when the number of partitions is roughly 3x the amount of cores you can use.; UPDATE:. > in particular I'm interested in using Dask's adaptive worker management, so that the exact number of submitted jobs is not fixed a priori but automatically adapts to the workload... Sounds good, then the `npartitions` parameter could be adjusted based on how many TTree clusters you have in your dataset. Roughly one task every 4-5 clusters should be a good starting point.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9429#issuecomment-992602348:135,simpl,simple,135,https://root.cern,https://github.com/root-project/root/issues/9429#issuecomment-992602348,2,['simpl'],['simple']
Usability,"The fact that gradient computations are supported in a `ROOT::Math`; function wrapper was only transmitted by the static class type. However, this is rather inconvenient:. 1. If you forget to downcast your function to the gradient type, the; provided gradient won't be used. 2. Many minimizer function signatures must be overloaded for both the; function with and without gradients. 3. In RooFit, this caused particular pain: depending on if an external; gradient is provided, the function wrapper in the `RooMinimizer`; needs to have a different base class, and the RooMinimizer needs to; cast it correctly when fitting. This commit suggests two new virtual functions:. * `IBaseFunctionMultiDimTempl::HasGradient()` for multi-dim functions. * `IBaseFunctionOneDim::HasGradient()` for 1D functions. Like this, the gradient support can be queried without dynamic casting; at runtime, simplifying lots of other code.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12257:883,simpl,simplifying,883,https://root.cern,https://github.com/root-project/root/pull/12257,1,['simpl'],['simplifying']
Usability,The failing part is:; ```; /Users/ktf/src/sw/osx_arm64/AliEn-Runtime/v2-19-le-local1/include/ApMon.h:59:9: note: expanding this definition of '_POSIX_VERSION'; #define _POSIX_VERSION 200101L; ^; /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/sys/unistd.h:79:9: note: other definition of '_POSIX_VERSION'; #define _POSIX_VERSION 200112L; ^; ```; One of the two might be coming (indirectly) through a precompiled module (associated with a dictionary). It is not clear why `ApMon.h` does not include `unistd.h` in the first place.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12762#issuecomment-1535382726:520,clear,clear,520,https://root.cern,https://github.com/root-project/root/issues/12762#issuecomment-1535382726,2,['clear'],['clear']
Usability,"The fill pattern sector made a crash on Mac with Cocoa.; The problem was mentioned here: https://root-forum.cern.ch/t/fillcolor-bug-in-root-6-22/43599/2; The fix was found by Timur:; «Filling with patterns is based on callbacks, and those callbacks need an extra information from ROOT, which; is passed as a parameter. Previously, we had this information as a stack-allocated object whose address we were passing. Starting from macOS 11/SDK 10.16, the rendering callback may be triggered when stack-allocated object had already exited its scope and finished its lifetime. Another change we need now — PatternContext also has to care about ‘fImage’ — retain and release then needed, simple non-owning reference is not working anymore.»",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7264:682,simpl,simple,682,https://root.cern,https://github.com/root-project/root/pull/7264,1,['simpl'],['simple']
Usability,"The first commit introduces `DefineSlotEntry`, analogous to `DefineSlot` but also passes the entry number to the registered callable. The second commit is a simple refactoring of `Define` to separate user interface from internal details and error checking.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1216:157,simpl,simple,157,https://root.cern,https://github.com/root-project/root/pull/1216,1,['simpl'],['simple']
Usability,The first large gap (just before 4s) seems longer in the 'after'. Do we know where the other threads are stopped (and what the running thread does) both in the before and the after. Do we know where (some of) the gaps are stopped in the main regime?. > TBufferMerger random number generation test on my machine (Core i7 6700). Is that with or without the lock removed (both test are needed to get a clear view).,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1251#issuecomment-343556195:399,clear,clear,399,https://root.cern,https://github.com/root-project/root/pull/1251#issuecomment-343556195,2,['clear'],['clear']
Usability,The fix in simple: we should not use the keyword `\brief` it is not needed.; If That's ok wit you I can make a PR to remove it .,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6433#issuecomment-700811492:11,simpl,simple,11,https://root.cern,https://github.com/root-project/root/issues/6433#issuecomment-700811492,2,['simpl'],['simple']
Usability,"The fix is 'simple':; ```; diff --git a/core/metacling/src/TCling.cxx b/core/metacling/src/TCling.cxx; index 7fe65825ea..656396ffcd 100644; --- a/core/metacling/src/TCling.cxx; +++ b/core/metacling/src/TCling.cxx; @@ -6646,9 +6646,13 @@ void TCling::RefreshClassInfo(TClass *cl, const clang::NamedDecl *def, bool alia; cl->ResetCaches();; TClass::RemoveClassDeclId(cci->GetDeclId());; if (def) {; - // It's a tag decl, not a namespace decl.; - cci->Init(*cci->GetType());; - TClass::AddClassToDeclIdMap(cci->GetDeclId(), cl);; + if (cci->GetType()) {; + // It's a tag decl, not a namespace decl.; + cci->Init(*cci->GetType());; + TClass::AddClassToDeclIdMap(cci->GetDeclId(), cl);; + } else {; + Error(""RefreshClassInfo"", ""Should not need to update the classInfo a non type decl: %s"", oldDef->getNameAsString().c_str());; + }; }; }; } else if (!cl->TestBit(TClass::kLoading) && !cl->fHasRootPcmInfo) {; ```; ```; root [0] namespace std { namespace Detail {} }; root [1] auto c = TClass::GetClass(""Detail""); (TClass *) 0x12ef3d7b0; root [2] namespace Detail {}; Error in <TInterpreter::RefreshClassInfo>: Should not need to update the classInfo a non type decl: Detail; ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8828#issuecomment-2372486833:12,simpl,simple,12,https://root.cern,https://github.com/root-project/root/issues/8828#issuecomment-2372486833,2,['simpl'],['simple']
Usability,"The fix seems fine (we are indeed using `fail-on-missing` by default through the spack package). It is still not entirely clear in advance which features require connectivity, and which don't (or even what to do in advance in order to pre-populate the FetchContent locations). There is also confusion with the names of the features: `builtin_` would lead one to think it's provided with the source tree but it isn't, except for `builtin_openui5` where it is the opposite.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11603#issuecomment-2102644827:122,clear,clear,122,https://root.cern,https://github.com/root-project/root/issues/11603#issuecomment-2102644827,2,['clear'],['clear']
Usability,"The fix works in my standalone ROOT test. To test the integration with DD4hep and the LHCb detector, the simplest is to add it to the SFT nightlies.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11272#issuecomment-1232170822:105,simpl,simplest,105,https://root.cern,https://github.com/root-project/root/issues/11272#issuecomment-1232170822,2,['simpl'],['simplest']
Usability,The following PR makes clear THTML is legacy code:; https://github.com/root-project/root/pull/7312,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7295#issuecomment-787793209:23,clear,clear,23,https://root.cern,https://github.com/root-project/root/issues/7295#issuecomment-787793209,2,['clear'],['clear']
Usability,"The following custom Streamer works around the issue:; ```; template <typename Flags>; inline void CalArray<Flags>::Streamer(TBuffer &R__b); {; // Stream an object of class CalArray<PadFlags>. if (R__b.IsReading()) {; UInt_t R__s, R__c;; Version_t R__v = R__b.ReadVersion(&R__s, &R__c);; if (R__v <= 3) {; {; UInt_t start, count;; Version_t vers = R__b.ReadVersion(&start, &count);. std::vector<int> R__stl;; R__stl.clear();; int R__n;; R__b >> R__n;; R__stl.reserve(R__n);; for (int R__i = 0; R__i < R__n; R__i++) {; Int_t readtemp;; R__b >> readtemp;; R__stl.push_back(readtemp);; }; R__b.CheckByteCount(start, count, ""stl collection of enums"");. mFlags.clear();; auto data = reinterpret_cast<unsigned short*>(R__stl.data());; constexpr size_t delta = sizeof(int)/sizeof(Flags);; for(int i = 0; i < R__n; ++i); mFlags.push_back(static_cast<PadFlags>( data[i] ));; }; int tmp;; R__b >> tmp;; mPadSubset = static_cast<PadSubset>(tmp);. R__b.CheckByteCount(R__s, R__c, CalArray::IsA());; } else {; R__b.ReadClassBuffer(CalArray<Flags>::Class(),this, R__v, R__s, R__c);; }; } else {; R__b.WriteClassBuffer(CalArray<Flags>::Class(),this);; }; }; ```; [Call to `ReadClassBuffer` was corrected to add missing parameters]",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/16312#issuecomment-2334928339:416,clear,clear,416,https://root.cern,https://github.com/root-project/root/issues/16312#issuecomment-2334928339,4,['clear'],['clear']
Usability,"The functionality of Cache is all there. The only issue remaining is caching a cached TDF (let's call this latter ""A"") without destroying the cache of the cached (meaning ""A""). This is a side effect of the optimisation in place to deliver data with zero-copies to transformations and actions requesting it. As for testing, checking the caching works with IMT on needs to be done. The extra mile would consist in checking statically that T does not have a copy constructor and react. How to react is not completely clear to me yet. There are two ways perhaps to solve this problem: 1. Act on the container, keeping in mind that the containers which form the cache must support random access for MT execution. 2. Act on the contained type, wrapping objects in some way.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1056#issuecomment-332682497:514,clear,clear,514,https://root.cern,https://github.com/root-project/root/pull/1056#issuecomment-332682497,2,['clear'],['clear']
Usability,"The generic fill helper was called FillParHelper, now it is just; called FillHelper, which suggests it is what we use by default. The special case of the one-dim histogram filling helper that buffers; values and delayes the actual histogram filling to the end of the; processing had the deceptively simple name FillHelper, it is now; called DelayedFillHelper to call out that it is doing something; interesting.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10138:299,simpl,simple,299,https://root.cern,https://github.com/root-project/root/pull/10138,1,['simpl'],['simple']
Usability,The getNameAsString interface causes a lot of temporary allocations.; The analysis if a decl is a cling-style wrapper can work only on a; simple declarations on the global scope. This patch filters out complex declarations (eg in namespaces) and; checks only the identifier content. The patch reduces the memory footprint difference shown in root-project/root#3012.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3593:138,simpl,simple,138,https://root.cern,https://github.com/root-project/root/pull/3593,1,['simpl'],['simple']
Usability,"The good news is that I have been able to reproduce your success with our build of 6.24/04 and 6.24/06. Unfortunately, I was also able to reproduce our failures with 6.28/00-rc1 in the same environment. I'd be grateful if you could turn your attention to investigating why the fix does not work for more recent ROOT source. BTW: in order to use Ninja, one needs simply to execute `setup ninja` before executing the CMake command.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10861#issuecomment-1401209723:362,simpl,simply,362,https://root.cern,https://github.com/root-project/root/issues/10861#issuecomment-1401209723,2,['simpl'],['simply']
Usability,"The idea for this change comes from my own experiments with upgrading LLVM during my time as student worker (and I can't reliably tell if I wrote the code during paid hours or in my free time, hence the funny list of authorships). It would allow to drop one possibly contentious patch for Clang, so I wanted to get the change out for feedback. One thing I currently don't understand are two test failures in `gtest-math-mathcore-test-CladDerivatorTests` and `gtest-hist-hist-test-TFormulaGradientTests` - but only with the second commit that removes the then unneeded patch. I can make the tests pass again by adding back only the `WasReplaced` bit:; ```diff; diff --git a/interpreter/llvm/src/tools/clang/include/clang/AST/Stmt.h b/interpreter/llvm/src/tools/clang/include/clang/AST/Stmt.h; index 403b88ac3a..5e1581f098 100644; --- a/interpreter/llvm/src/tools/clang/include/clang/AST/Stmt.h; +++ b/interpreter/llvm/src/tools/clang/include/clang/AST/Stmt.h; @@ -131,7 +131,8 @@ protected:; ; unsigned : NumStmtBits;; ; - unsigned NumStmts : 32 - NumStmtBits;; + unsigned WasReplaced : 1;; + unsigned NumStmts : 32 - (NumStmtBits + 1);; ; /// The location of the opening ""{"".; SourceLocation LBraceLoc;; @@ -1328,6 +1329,7 @@ public:; explicit CompoundStmt(SourceLocation Loc); : Stmt(CompoundStmtClass), RBraceLoc(Loc) {; CompoundStmtBits.NumStmts = 0;; + CompoundStmtBits.WasReplaced = 0;; CompoundStmtBits.LBraceLoc = Loc;; }; ; diff --git a/interpreter/llvm/src/tools/clang/lib/AST/Stmt.cpp b/interpreter/llvm/src/tools/clang/lib/AST/Stmt.cpp; index 0a4d403106..cc8c6888b8 100644; --- a/interpreter/llvm/src/tools/clang/lib/AST/Stmt.cpp; +++ b/interpreter/llvm/src/tools/clang/lib/AST/Stmt.cpp; @@ -293,6 +293,7 @@ CompoundStmt::CompoundStmt(ArrayRef<Stmt *> Stmts, SourceLocation LB,; SourceLocation RB); : Stmt(CompoundStmtClass), RBraceLoc(RB) {; CompoundStmtBits.NumStmts = Stmts.size();; + CompoundStmtBits.WasReplaced = 0;; setStmts(Stmts);; CompoundStmtBits.LBraceLoc = LB;; }; @@ -316,6 +3",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7488#issuecomment-797417462:334,feedback,feedback,334,https://root.cern,https://github.com/root-project/root/pull/7488#issuecomment-797417462,2,['feedback'],['feedback']
Usability,"The idea is to catch branch names, which will lead to problems when using the tree with `Draw` or `MakeClass`.; This can either be the member variables (branch names and `b_`branch names) which have to keep the generated code compilable (and ensure it does what it is expected to do). And the variable names should not lead to confusion with formula evaluation in Draw (e.g. branch names which are pure numbers). The tests suggested here are:; - test if branch name is a valid c++ variable name (w/o testing keywords).; - test if branch name begins with ""b_"" (potential problem with MakeClass). on top of that, I also have a [black list](https://github.com/pseyfert/tmva-branch-adder/blob/master/src/blacklist.cpp) of unfortunate branch names: methods of TTrees, which would clash in MakeClass, c++ keywords, variable types, and things TTree::Draw can parse (though I don't see how `TTree::Draw(""cos(x)"")` would clash with `TTree::Draw(""cos"")` if there is a variable named `cos`. Because the function `cos` wouldn't work without argument, and the variable `cos` wouldn't work with argument). I only warn here and don't abort the branch initialisation, not to break third party code (variables with `.` are probably common [e.g. dynamically generated from float](http://lhcb-release-area.web.cern.ch/LHCb-release-area/DOC/davinci/latest_doxygen/d9/d80/_tuple_tool_cone_isolation_8cpp_source.html#l00204) ). Feedback request:; I'm unsure if putting the blacklist into TBranch.cxx is really the best solution to apply here.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/185:1406,Feedback,Feedback,1406,https://root.cern,https://github.com/root-project/root/pull/185,1,['Feedback'],['Feedback']
Usability,"The idea is to have an identifier that describes the used datasource (or TTree or simple DF), make this info accessible as public API and also add it to `Describe`. See the discussion here:. https://github.com/root-project/root/issues/7561#issuecomment-817629082. https://github.com/root-project/root/issues/7561#issuecomment-817717882. Remember to make the identifier returned by this API subject to change because it's for interactive use and not to be parsed automatically.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7828:82,simpl,simple,82,https://root.cern,https://github.com/root-project/root/issues/7828,1,['simpl'],['simple']
Usability,"The idea of the TEmulatedTuple is as follow:; ```; // Handle the special case of 'tuple' where we ignore the real implementation; // details and just overlay a 'simpler'/'simplistic' version that is easy; // for the I/O to understand and handle.; ```; and whenever TClass needs interpreted information about a tuple, it will get/use the interpreted information about the equivalent TEmulatedTuple",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2093#issuecomment-392934264:161,simpl,simpler,161,https://root.cern,https://github.com/root-project/root/pull/2093#issuecomment-392934264,4,['simpl'],"['simpler', 'simplistic']"
Usability,"The issue in CMSSW is fixed now by just not doing a ranged fit, but in ROOT master this performance regression still needs to be fixed. Here is a simple reproducer for the problem, with the code extracted from the CMSSW source linked in the initial post:; ```c++; void script(); {; using namespace RooFit;. RooRealVar x(""x"", """", 0, 10);. RooRealVar mean(""mu"", """", 5.0, 0, 10);; RooRealVar width(""width"", """", 1.0, 0.1, 10);; RooRealVar sigma(""sigma"", """", 2.0, 0.1, 10);; RooVoigtian voigt(""voigt"", """", x, mean, width, sigma);. RooRealVar lambda(""lambda"", """", -0.01, -100., 1.);; RooExponential expo(""expo"", """", x, lambda);. RooRealVar b(""n_bkg"", """", 100., 0, 1000);; RooRealVar s(""n_sig"", """", 1000., 0, 10000);. RooAddPdf model(""model"", """", {voigt, expo}, {s, b});. std::unique_ptr<RooDataSet> data{model.generate(x)};. model.fitTo(*data, Range(0.0, 10.0), PrintLevel(-1));; }; ```. Most likely, this issue was caused by https://github.com/root-project/root/pull/11455. I set the priority to `high` now, because this is a regression that also affects experiment workflows and it needs to be fixed before the 6.28 release for sure! Therefore, this issue is also added to the 6.28 milestone.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11637#issuecomment-1297108209:146,simpl,simple,146,https://root.cern,https://github.com/root-project/root/issues/11637#issuecomment-1297108209,2,['simpl'],['simple']
Usability,"The issue is also present in master. Simple C++ repro:. ```cpp; #include ""Math/Vector3D.h""; #include ""Math/Vector4D.h""; #include ""TChain.h""; #include ""ROOT/RVec.hxx""; #include ""ROOT/RDataFrame.hxx""; #include <vector>; #include <iostream>; using namespace ROOT::Math;; using namespace ROOT::VecOps;. int main(); {; ROOT::RDataFrame(1); .Define(""vec"", [] { return XYZVector(10, 10, 10); }); .Snapshot<XYZVector>(""Particle"", ""f1.root"", {""vec""});; ROOT::RDataFrame(1); .Define(""vec"", [] { return std::vector<XYZTVector>{XYZTVector(30, 30, 30, 30)}; }); .Snapshot(""Vertex"", ""f3.root"", {""vec""});. std::cout << ROOT::RDataFrame(""Vertex"", ""f3.root"").GetColumnType(""vec"") << std::endl;. TChain ch1(""Particle"");; ch1.Add(""f1.root"");; TChain ch3(""Vertex"");; ch3.Add(""f3.root"");; ch1.AddFriend(&ch3, ""vertex"");. std::cout << ROOT::RDataFrame(ch1).GetColumnType(""vertex.vec"") << std::endl;. return 0;; }; ```. This prints the wrong type (the type of the _other_ `vec` branch) in the second case. Calling `vertex.vec` something else, e.g. `vertex.vec2`, removes the ambiguity. Work in progress.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6944#issuecomment-747632478:37,Simpl,Simple,37,https://root.cern,https://github.com/root-project/root/issues/6944#issuecomment-747632478,1,['Simpl'],['Simple']
Usability,"The job was full RECO with 8 threads, reading raw data and writing RECO, AOD, MINIAOD and DQMIO. Details are in Slava's slides from yesterday, but it is a generic enough RECO job that it should show up in any standard RECO workflow writing AOD and MINIAOD. The effect on cmsRun timing was definitely exaggerated by having 8 threads, as the occasional long pauses from LZMA sometimes blocked the other threads too (the job time speedups I quoted were wall clock, not cpu).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/194#issuecomment-232409319:356,pause,pauses,356,https://root.cern,https://github.com/root-project/root/pull/194#issuecomment-232409319,1,['pause'],['pauses']
Usability,"The last comments from @pikacic and @eguiraud have been addressed, namely:; - Possibility to define pythonizor functions with either one parameter (class proxy) or two parameters (class proxy and fully-qualified name of the class).; - Support for immediate pythonizations of classes that have already been used at the time of the registration of a pythonization.; - Prevent confusion with `is_prefix=True` not matching classes in nested namespaces. Now a separate parameter for the namespace exists to make it clear that pythonizors are applied to a certain namespace (default is global namespace), e.g.:; ```python; @pythonization(""RVec<"", ns=""ROOT::VecOps"", is_prefix=True); def pythonizor_RVec(klass, name):; ...; ```. Note that multiple `@pythonization` decorators can be stacked if a pythonizor targets classes in multiple namespaces:; ```python; @pythonization(""A""); @pythonization(""B"", ns=""NS""); def pythonizor_for_A_and_NS_B(klass):; ...; ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9128#issuecomment-982514902:510,clear,clear,510,https://root.cern,https://github.com/root-project/root/pull/9128#issuecomment-982514902,2,['clear'],['clear']
Usability,"The logic of `SnapshotImpl` has been refactored to move the single-thread initialization and execution inside the `SnapshotHelper` class, and the multi-thread in `SnapshotHelperMT`. This code simplification also puts `Snapshot` in line with other actions, moving most of the logic inside `TDFActionHelpers.hxx`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/692:192,simpl,simplification,192,https://root.cern,https://github.com/root-project/root/pull/692,1,['simpl'],['simplification']
Usability,"The main change in this PR is that the `CustomColumn` term is replaced by the clearer, shorter `Define` term. This require quite a few changes all over RDataFrame internals. Motivation for the change can be found below, copy-pasted from the commit message. This will make future backports a bit of a pain, but I think it's worth doing it now, for the following reasons:; * we are at a historical low of RDF-related open bugs -> less backports are expected in the future; * recent large refactorings in RAction.hxx (#6220) and in the column reader logic (#6170) already make backports much less likely to apply cleanly to release branches, so if there is a less bad time to do this, it's probably now; * expected upcoming refactorings necessary to support bulk entry processing will put another nail in the coffin of backportable bug-fixes; * I think we can all agree that RCustomColumn is a terribly opaque name for something that at this point we all know as a ""Define"", and in a few years I'd rather not have doctoral students complain about how my class names are completely arbitrary and unnecessarily hard to understand . The original commit message:. Until recently, RCustomColumns could correspond to data-source columns; or defined columns. Due to recent refactorings, RCustomColumns are now; back to serving only their original purpose: representing Define nodes; in the computation graph.; RCustomColumn is a very opaque name, and it crops up when debugging,; reading code and looking at performance profilings. The new name,; RDefine, clearly describes what the class is supposed to do and it is in; line with RDF's naming convention (we already have RFilter). Other names also become much more readable and shorter:; RBookedCustomColumns becomes RBookedDefines, RJittedCustomColumn becomes; RJittedDefine, and so forth.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6223:78,clear,clearer,78,https://root.cern,https://github.com/root-project/root/pull/6223,2,['clear'],"['clearer', 'clearly']"
Usability,"The main motivation is because it is a clear blocker for proper cross-compilation. Also, the tutorial itself is already run as the first tutorial irrespective of the build configuration so the test is actually repeated.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15930:39,clear,clear,39,https://root.cern,https://github.com/root-project/root/pull/15930,1,['clear'],['clear']
Usability,"The memory leak reported in #7890 is related to use MemPoolForRooSets. This simple code shows the increase of memory when using MemPoolForRooSets. ; ```; void testMemPool() {. RooRealVar x(""x"",""x"",0,10);; RooRealVar y(""y"",""x"",0,10);. ProcInfo_t pinfo; . for (int i = 0; i < 1000000000; ++i) {; if (i % 100000 == 0) {; gSystem->GetProcInfo(&pinfo);; std::cout << i << "" memory usage "" << pinfo.fMemResident << "" "" << pinfo.fMemVirtual << std::endl;; }; auto s1 = new RooArgSet(x,y);. delete s1;. }. }. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7933:76,simpl,simple,76,https://root.cern,https://github.com/root-project/root/issues/7933,1,['simpl'],['simple']
Usability,"The method has now following signature: `TTree.AsMatrix(columns=None, exclude=None, return_labels=False)`. `columns`: Can be a list with branch names, for `None` is `tree.GetListOfBranches()` taken.; `exclude` Can be a list with branch names, simply removed from `columns`; `return_labels`: If true a tuple with `(column_names, numpy_array)` is returned, otherwise only the array. The `return_labels` feature is to be discussed.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1872#issuecomment-382732284:243,simpl,simply,243,https://root.cern,https://github.com/root-project/root/pull/1872#issuecomment-382732284,2,['simpl'],['simply']
Usability,"The minimizer test quite often did not converge. As a result there were; many spurious test failures. The test is tuned to converge _much_ more reliably by increasing the; learning rate (0.0001 -> 0.001), and the number of early stopping epochs; (5 -> 50). This commit also makes the `testMinimization` test the minimizer; _without_ using momentum (this code path was previously untested here). The following code was used to benchmark changes (only single precision; part of the test was tested and some aux text was commented out if you; want to reproduce):; ```; for i in `seq 100`; do tmva/tmva/test/DNN/testMinimizationCpu; done | awk '{print $6;}' | python -c 'import numpy; import fileinput; a = map(float, fileinput.input()); print(numpy.std(a), numpy.mean(a), numpy.min(a), numpy.max(a))'; ```. Results (typical values):; - Old version: 2.70*10^{-7} (std dev), 3.34*10^5 (mean), 2.27*10^{-6} (min), 0.0017 (max); - New verstion: 2.59 * 10^{-6} (std dev), 2.51*10*{-6} (mean), 1.16*10*{-7} (min), 1.37*10^{-5} (max). Time taken is roughly doubled (~1 sec -> ~2 secs). All results on local mac.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1958:172,learn,learning,172,https://root.cern,https://github.com/root-project/root/pull/1958,1,['learn'],['learning']
Usability,"The next 6.28 patch release should remove the `RooPower` and; `RooExpPoly` classes. It is an unfortunate but unavoidable change:; different classes with the same name and `ClassDef` version were used in; the CMS collaboration since at least the Higgs discovery. This name; collision caused massive problems in backwards compatibility and was; blocking CMS from picking up ROOT 6.30 for statistical analysis. These classes were only introduced with ROOT 6.28.00 and not widely; advertised, so people should not be affected by this removal. Based on; the feedback to this patch release, the `RooPower` and `RooExpPoly`; classes will either be removed or renamed in the upcoming ROOT 6.32. For the CMS usecase, these classes don't need to be removed from 6.28; because they are skipping this ROOT release for combine. However, for; the sake of consistency, the classes are retroactively removed from all; release branches <= 6.30. The corresponding PR in ROOT 6.30:; https://github.com/root-project/root/pull/15299",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15330:553,feedback,feedback,553,https://root.cern,https://github.com/root-project/root/pull/15330,1,['feedback'],['feedback']
Usability,"The next 6.30 patch release should remove the `RooPower` and; `RooExpPoly` classes. It is an unfortunate but unavoidable change:; different classes with the same name and `ClassDef` version were used in; the CMS collaboration since at least the Higgs discovery. This name; collision caused massive problems in backwards compatibility and is; blocking CMS from picking up ROOT 6.30 for statistical analysis. These classes were only introduced with ROOT 6.28.00 and not widely; advertised, so people should not be affected by this removal. Based on; the feedback to this patch release, the `RooPower` and `RooExpPoly`; classes will either be removed or renamed in the upcoming ROOT 6.32.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15299:552,feedback,feedback,552,https://root.cern,https://github.com/root-project/root/pull/15299,1,['feedback'],['feedback']
Usability,"The old PyROOT (pre 2019) had a slightly different `atexit` handler than the new one. The hard shutdown mode is different: `ClearProxiedObjects()` is called before the final `gROOT->EndOfProcessCleanups()`. I had the impresstion that this is redundant, and indeed the old PyROOT didn't do it. This commit suggests to only call `ClearProxiedObjects()` in soft shutdown mode, in an attempt to avoid the frequent crashes seen at the end of PyROOT tutorials, especially on Ubuntu 24.10. See also the original PRs where this functionality was introduced:. * https://github.com/root-project/root/pull/4687; * https://github.com/root-project/root/pull/4753",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16671:124,Clear,ClearProxiedObjects,124,https://root.cern,https://github.com/root-project/root/pull/16671,2,['Clear'],['ClearProxiedObjects']
Usability,The old users' guide contains valuable information for the geometry package. As it will be removed this PR imports all this documentation into the Reference Guide.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9059:15,guid,guide,15,https://root.cern,https://github.com/root-project/root/pull/9059,2,"['Guid', 'guid']","['Guide', 'guide']"
Usability,"The original ROOT CBShape and Johnson classes provided limited documentation on the effects of parameter variations on their respective distribution shapes. To improve clarity and usability for future users of these RooFit classes, I conducted a detailed study illustrating how changes in key parameters influence these distribution shapes.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16817:180,usab,usability,180,https://root.cern,https://github.com/root-project/root/pull/16817,1,['usab'],['usability']
Usability,"The original idea was to have to interface GetBulkEntries and GetEntriesSerialized where in the former the byte-swap is done by the routine and in the later the byte-swap is done by the user. (See SimpleReadFunc vs SimpleBulkReadFunc in https://github.com/root-project/root/blob/28f728b67b5409580ec0ba4d71fa9ab35683fb26/tree/tree/test/BulkApi.cxx). GetBulkEntries was updating the buffer associated with the TBasket in place and thus is no longer reusable (unless the leaf reading was non destructive .. for example for char). GetEntriesSerialized was not modifying the buffer and hence did not care about the destructiveness ... It looks like somewhere down the line (likely around the time we introduced the TBufferFile as the content passing mechanism) this distinction became moot (GetBulkEntries is discarding the basket anyway and in the lastest PR, I have to make a copy when it make not be done) .... . But then again, scanning through the git history, I am even more confused ... (why would TLeafF ever be considered non-destructive ...)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6520#issuecomment-701717286:197,Simpl,SimpleReadFunc,197,https://root.cern,https://github.com/root-project/root/issues/6520#issuecomment-701717286,2,['Simpl'],"['SimpleBulkReadFunc', 'SimpleReadFunc']"
Usability,"The original table format cannot be properly rendered by GH flavored markdown. This PR attempts to clear up the formatting, respecting the formatting specs (and limits thereof) of GH flavored Markdown.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16798:99,clear,clear,99,https://root.cern,https://github.com/root-project/root/pull/16798,1,['clear'],['clear']
Usability,"The problem has been simplified to:; ```; {; double x = 6.25;; double y = 1.5625000232831;; double y1 = -y;; double y2 = y;; double yv = -0.5;. auto c1 = new TCanvas(""c1"", ""c1"", 0, 0, 700, 525);; c1->Range(-x, y1, x, y2);. TLine *line = new TLine();; line->DrawLine(-x, yv, x, yv) ->SetLineColor(kRed);. double r = 1./(y2-y1);; line->DrawLineNDC(0., r*(yv-y1),; 1., r*(yv-y1))->SetLineColor(kBlue);. }; ```; DrawlLine paint a red horizontal line at `yv = 0.5`. DrawLineNDC does the same in NDC coordinates. The 2 lines should overlap but they don't (by 1 pixel). Note that the values defined at the beginning of the macro are those that make the problem. As soon as you change, for instance, `y` the lines will overlap. Same if you change interactively the canvas size.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14546#issuecomment-1943627143:21,simpl,simplified,21,https://root.cern,https://github.com/root-project/root/issues/14546#issuecomment-1943627143,2,['simpl'],['simplified']
Usability,"The problem is in automatic reading the objects, probably for some missing library (as in this case the `TMath::Abs` definition). I think we had similar issues with TFormula/TF1 before. ; There is the simple workaround:; ```; auto legends = file->Get(""legends""); legends->Draw();; ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12559#issuecomment-1494518922:201,simpl,simple,201,https://root.cern,https://github.com/root-project/root/issues/12559#issuecomment-1494518922,2,['simpl'],['simple']
Usability,"The problem is that RDF tries to open the file to check that it's valid. The logic for the file opening is at https://github.com/root-project/root/blob/962009b8c2057199c2229c3ef9938ac4d315d10a/tree/dataframe/src/RLoopManager.cxx#L1133 . In particular, because of the presence of the `?` token, the string is parsed as a glob. Now in many cases that would be harmless albeit a tiny overhead (it would just return the same file name to open), but in this particular case it triggers a faulty behaviour. The glob parsing attempts at traversing the remote xrootd directory (see [here](https://github.com/root-project/root/blob/962009b8c2057199c2229c3ef9938ac4d315d10a/tree/tree/src/InternalTreeUtils.cxx#L471)), but since the permission is just for the single file with the token and not for the entire directory, it leads to the `user access restricted` error you post above. Now, I believe the most sane course of action would be to refine the logic that checks whether the input file name is a glob. I could simply add a check for the `xrd.wantprot` token, but probably we want to have a more authoritative list of all the tokens that should make the file name not be parsed as a glob. This probably includes not only xrootd tokens but also anything https-related. Or we could adopt a different strategy for glob detection altogether. Thoughts @dpiparo @pcanal ?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/16475#issuecomment-2365248206:1007,simpl,simply,1007,https://root.cern,https://github.com/root-project/root/issues/16475#issuecomment-2365248206,2,['simpl'],['simply']
Usability,"The problem is that both shapes are composite, and TGeoCompositeShape does not currently support generating mesh points on segments. If you were to replace the pvPipeBottom with a simple tube the overlap would probably be detected, but of course you cannot do that. So you are hitting the boolean-boolean combination which is worst supported unfortunately by the geometry checker and can miss overlaps.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6556#issuecomment-705445777:180,simpl,simple,180,https://root.cern,https://github.com/root-project/root/issues/6556#issuecomment-705445777,2,['simpl'],['simple']
Usability,"The problem was not even AutoParsing, it was that we're failing to unload any function.; For example, this fails:; ```; root [0] struct Marker { ~Marker() { fprintf(stdout,""dest\n""); } };; root [1] .L lib/libEdm.so; root [2] .L lib/libStrip.so; root [3] Marker m1;; root [4] Marker m2;; root [5] Marker(); (Marker) @0x559ab2f03100; root [6] .undo 3; root [7] SiStripCluster *s; ; root [8] SiStripCluster obj; ; SiStripCluster; ROOT_prompt_8:1:16: error: variable has incomplete type 'SiStripCluster'; SiStripCluster obj;; ^; libStrip dictionary forward declarations' payload:5:132: note: forward declaration of 'SiStripCluster'; class __attribute__((annotate(R""ATTRDUMP(splitLevel@@@0)ATTRDUMP""))) __attribute__((annotate(""$clingAutoload$SiStripCluster.h""))) SiStripCluster;; ```. Some evil side effect is happening when a function is called..",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2852#issuecomment-435986645:342,undo,undo,342,https://root.cern,https://github.com/root-project/root/pull/2852#issuecomment-435986645,2,['undo'],['undo']
Usability,"The problem with trying one after the other is that the number of combinations quickly goes through the roof. Consider that a python-side proxy can be freely converted from/to `T*`, `T**`, `T[]`, `T&`, `T&&`, and their `std::shared_ptr<>` and `std::unique_ptr<>` equivalents. So, that may mean 15 tries. If there are 3 arguments, the number of combinations is 455, faculty being what it is. Sure, I can make some educated guess to put the most likely candidates first, and that is basically when is currently going on. But a single lookupHelper call for template instantiation can already be too slow to be usable: e.g. for PCL they run (after the first 7-14s loading, which modules should fix) they are still of the order of 0.1s. (We have discussed that problem, too: contrary to normal Clang usage, Cling dumps everything in a single translation unit, vastly increasing the number of possible matches. Try going after `operator<<(std::ostream&)` or `operator==` in the global namespace, for example.). You mention int, but there are `int8_t`, `uint8_t` (these are often `char` varieties), `short`, `unsigned short`, `int16_t`, `uint16_t`, `int`, `unsigned int`, `long`, `unsigned long`, `long long`, and `unsigned long long` to try. Sure, let's do `str` to `const char*`, but that won't work for `std::string&`, and `std::string` usage is more common. But ah, what about `wchar_t`, `char16_t`, `char32_t`, `std::wstring`?. Collections, sure, but what if instead I have a tuple or list on the Python side and the template expects some STL container? Then it can not just be that STL container of say `T*`, but also the STL container of pointer any of the base classes, or worse, a mix thereof. And what if the tuple isn't actually targeting a container, but is an initalizer_list? There is often no (relevant) type information available at that point in Python, but many cases can still be resolved b/c the C++ side has some hints. For example `template<typename T, int N> void func(const std::array",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6393#issuecomment-696889449:607,usab,usable,607,https://root.cern,https://github.com/root-project/root/issues/6393#issuecomment-696889449,2,['usab'],['usable']
Usability,"The py3 behavious is not a feature of this PR. You can add this to `Pythonize.cxx` and simply run `import ROOT`:. ```cpp; if ( name == ""TObject"" ) {; // support for the 'in' operator; Utility::AddToClass( pyclass, ""__contains__"", (PyCFunction) TObjectContains, METH_O );; PyObject_Print(PyObject_GetAttrString(pyclass, ""__contains__""), stdout, 0);; ...; }; ```. **py2:**; ```; >>> import ROOT; <unbound method TObject.__contains__>>>>; ```. **py3:**; ```; >>> import ROOT; <bound method __contains__ of <NULL>>>>> ; ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1777#issuecomment-378181987:87,simpl,simply,87,https://root.cern,https://github.com/root-project/root/pull/1777#issuecomment-378181987,2,['simpl'],['simply']
Usability,"The range is not used in RooParamHIstFunc::analyticalIntegralWN, see https://root.cern/doc/master/RooParamHistFunc_8cxx_source.html#l00247; as reported in https://root-forum.cern.ch/t/createintegral-giving-wrong-results/43508. . Simple code to reproduce:; ```; void testParamHistFunc() { ; ; RooRealVar x(""x"",""x"",0,10); ; TH1D h1(""h1"",""h1"",20,0,10); ; TF1 f1(""f1"",""gaus""); f1.SetParameters(1,5,1); ; h1.FillRandom(""f1"",1000); ; ; RooDataHist dh(""dh"",""dh"",x,&h1); ; RooParamHistFunc phf(""phf"","""",x,dh); ; phf.Print(""t""); ; x.setRange(""R1"",0,5); ; ; auto ig1n = phf.createIntegral(x,x); ; std::cout << ig1n->getVal() << std::endl; ; auto igr1 = phf.createIntegral(x,x,""R1""); ; std::cout << igr1->getVal() << std::endl; ; ; }",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7182:229,Simpl,Simple,229,https://root.cern,https://github.com/root-project/root/issues/7182,1,['Simpl'],['Simple']
Usability,"The roottest-python-cmdLineUtils test sometimes fails with error along the line of:; ```; 16/22 Test #1217: roottest-python-cmdLineUtils-SimpleRootrm1CheckOutput .......***Failed 0.86 sec; -- TEST COMMAND --; cd /home/pcanal/root_working/build/master-debug/roottest/python/cmdLineUtils; /usr/bin/timeout -s USR2 270s /home/pcanal/root_working/build/master-debug/bin/rootls -1 victim1.root; -- BEGIN TEST OUTPUT --; dir; hprof; hprof; hpxpy; hpxpy; tof. -- END TEST OUTPUT --; -- BEGIN OUTDIFF OUTPUT --; --- /home/pcanal/root_working/code/root/roottest/python/cmdLineUtils/SimpleRootrm.ref Thu Dec 3 17:25:54 2020; +++ /home/pcanal/root_working/build/master-debug/roottest/python/cmdLineUtils/SimpleRootrm1CheckOutput.log Fri Jan 15 15:57:03 2021; @@ -1,4 +1,6 @@; dir; hprof; +hprof; +hpxpy; hpxpy; tof. -- END OUTDIFF OUTPUT --. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7054:573,Simpl,SimpleRootrm,573,https://root.cern,https://github.com/root-project/root/issues/7054,1,['Simpl'],['SimpleRootrm']
Usability,"The same problem shows with web canvas (@linev ?) for instance with this simple macro:; ```; void lineonaxis(){; auto c1 = new TCanvas(""c1"", ""c1"", 0, 0, 700, 525);; c1->SetGridy();; TH1F *f = gPad->DrawFrame(-5, -1.25, 5, 1.25);; f->GetYaxis()->SetNdivisions(10);; f->GetXaxis()->SetNdivisions(0);. auto line = new TLine();; line->SetLineColor(kRed);; line->DrawLine(-5, -1., 5 , -1.);; line->DrawLine(-5, -0.5, 5 , -0.5);; line->DrawLine(-5, 0., 5 , 0.);; line->DrawLine(-5, 0.5, 5 , 0.5);; line->DrawLine(-5, 1., 5 , 1.);; }; ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14546#issuecomment-1943905642:73,simpl,simple,73,https://root.cern,https://github.com/root-project/root/issues/14546#issuecomment-1943905642,2,['simpl'],['simple']
Usability,"The summary is simple (and still the same after applying [`38b0d88` (#16722)](https://github.com/root-project/root/pull/16722/commits/38b0d88d1d51fe914a6aff3645f03a483e31588a):. On first run in a clean directory with `BLAS` missing, we get:; ```; ctest -R gtest-tmva-pymva-TestRModelParserPyTorch; Test project /home/pcanal/root_working/build/quick-devel; Start 349: gtest-tmva-pymva-TestRModelParserPyTorch; 1/1 Test #349: gtest-tmva-pymva-TestRModelParserPyTorch ... Passed 16.11 sec. 100% tests passed, 0 tests failed out of 1. Total Test time (real) = 16.37 sec; ```; and if we immediately re-run we get:; ```; ctest -R gtest-tmva-pymva-TestRModelParserPyTorch; Test project /home/pcanal/root_working/build/quick-devel; Start 349: gtest-tmva-pymva-TestRModelParserPyTorch; 1/1 Test #349: gtest-tmva-pymva-TestRModelParserPyTorch ...***Failed 9.10 sec; ```; and the error is:; ```; [ RUN ] RModelParser_PyTorch.SEQUENTIAL_MODEL; IncrementalExecutor::executeFunction: symbol 'sgemm_' unresolved while linking [cling interface function]!; ```; indicates that on the 2nd runs, the test want symbols from the `BLAS` library.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/16719#issuecomment-2427294206:15,simpl,simple,15,https://root.cern,https://github.com/root-project/root/issues/16719#issuecomment-2427294206,2,['simpl'],['simple']
Usability,"The test failures report the file created during the test does not exist, but this node ran the test fine https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/124359/testReport/projectroot.tree.tree/test/gtest_tree_tree_test_entrylist_enterrange/ . Probably using the same filename for multiple tests leads to a recreation/deletion of the file that is then not usable by the new test?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8740#issuecomment-895859603:381,usab,usable,381,https://root.cern,https://github.com/root-project/root/pull/8740#issuecomment-895859603,2,['usab'],['usable']
Usability,"The test h2 shows how to generated animated gif from snapshots of the canvas without taking a lock (but by using the gThreadXAR mechanism ... which we probably need to (eventually) 'replace'). If there is no easy and/or clear translation of this example, I recommend we keep it until such a time where we have a clear replacement. Thanks,; Philippe.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1531#issuecomment-359073042:220,clear,clear,220,https://root.cern,https://github.com/root-project/root/pull/1531#issuecomment-359073042,4,['clear'],['clear']
Usability,"The things we need to do before merging this PR and can probably be done by various people in parallel. Cling standalone:; - [x] Fix cling CUDA tests; - [ ] Fix the remaining test failures (6, see below); - [x] Revert the commit 'FIXME: Undo this change and debug why we have PendingInstances.'. <details>; <summary>Cling test failures</summary>. Failures in `master` on my system:; ```; Cling :: CodeUnloading/PCH/VTables.C; Cling :: DynamicLibraryManager/callable_lib_L_AB_order1.C; ```. Remaining failures (excluding the ones above):; ```; Cling :: CodeGeneration/Symbols.C; Cling :: CodeUnloading/AtExit.C; Cling :: CodeUnloading/PCH/VTablesClingPCH.C; Cling :: CodeUnloading/RereadFile.C; Cling :: ErrorRecovery/StoredState.C; Cling :: MultipleInterpreters/MultipleInterpreters.C; ```; </details>. ROOT:; - [x] Compare the build size against master; - [x] Compare the `.pcm` file size against master; - [ ] Add flags to ignore compilation warnings coming from llvm; - [x] Remove the FIXME from commit 'Add another symbol generator to resolve the generated lazy symbol' - the explanation is in the commit; - [x] Fix the llvm::StringRef conversion failures on OSX. <details>; <summary>; Binary Size this PR needs 13% more space (2.3 vs 2. GB); </summary>. ```; du -hs root-release-llvm13; 2.3G	.; (base) vvassilev@vv-nuc /build/vvassilev/root-release-llvm13 $ du -hs ../root-release-master/; 2.0G	../root-release-master/; ```. </details>. <details>; <summary>; Module files need ~5% more space on disk (215 vs 206 MB); </summary>. ```; diff -y llvm13 master ; 424K	lib/ASImageGui.pcm				 |	444K	lib/ASImageGui.pcm; 468K	lib/ASImage.pcm					 |	484K	lib/ASImage.pcm; 4.2M	lib/_Builtin_intrinsics.pcm			 |	4.0M	lib/_Builtin_intrinsics.pcm; 48K	lib/_Builtin_stddef_max_align_t.pcm		 |	44K	lib/_Builtin_stddef_max_align_t.pcm; 200K	lib/Cling_Runtime_Extra.pcm			 |	132K	lib/Cling_Runtime_Extra.pcm; 100K	lib/Cling_Runtime.pcm					100K	lib/Cling_Runtime.pcm; 11M	lib/Core.pcm					 |	9.6M	lib/Core.pcm; 56",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10294:237,Undo,Undo,237,https://root.cern,https://github.com/root-project/root/pull/10294,1,['Undo'],['Undo']
Usability,"The tutorials ""tutorial-pyroot-geometry-py"" and ""tutorial-pyroot-na49view-py"" were failing in Experimental PyROOT because of the absence of an extra lookup performed inside gROOT, which was implemented in the old PyROOT in the function LookupCppInstance(). ; It was decided to solve this problem by adding this third lookup to the _fallback_getattr() function inside _facade.py. ; This also allow to get an object inside gROOT by simply typing:; `ROOT.a`; instead of ; `ROOT.gROOT.FindObject(a)`",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4084:430,simpl,simply,430,https://root.cern,https://github.com/root-project/root/pull/4084,1,['simpl'],['simply']
Usability,"The undo buffer should only be kept for the current line (as in GNU readline). This commit clears the undo buffer in `Editor::ResetText()`, which is called after reading an input line. Fixes #10182. ## Checklist:; - [X] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #10182.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10192:4,undo,undo,4,https://root.cern,https://github.com/root-project/root/pull/10192,3,"['clear', 'undo']","['clears', 'undo']"
Usability,"The variables present in TError.h are used throughout the ROOT libraries. Anytime one of these variables is requested, e.g. with a simple test such as `python -c ""import ROOT; ROOT.kError""`, the interpreter will lookup the corresponding symbol. Previously, the variables were declared and defined in the header directly but were not generating any symbol since the linkage was internal. With this commit, provide external linkage to these variables so that the corresponding symbols are materialized in libCore.so. As a consequence, a huge number of extra lookups by cling is avoided. This is in direct reference to https://github.com/root-project/root/pull/14261#issuecomment-1863067950 , a followup issue to the original issue at https://github.com/cms-sw/cmssw/issues/43077. These are the results of the patch:. Before:; ```; $: strace -z -f -o log.txt -e trace=openat python3 -c 'import ROOT;print(ROOT.kError);'; $: grep openat log.txt | wc -l; $: 16279; ```. After:; ```; $: strace -z -f -o log.txt -e trace=openat python3 -c 'import ROOT;print(ROOT.kError);'; $: grep openat log.txt | wc -l; $: 417 ; ```. FYI @smuzaffar",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14276:131,simpl,simple,131,https://root.cern,https://github.com/root-project/root/pull/14276,1,['simpl'],['simple']
Usability,"The weak pointer was used to track whether the node that Report was hanging from went out of scope, but since a while the ownership model of nodes in the computation graph (child owns parent) guarantees that as long as the ReportHelper (and the corresponding action node) is around, the node it hangs from will be around as well.; We can use a simple raw pointer instead.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11798:344,simpl,simple,344,https://root.cern,https://github.com/root-project/root/pull/11798,1,['simpl'],['simple']
Usability,There are some grammatical mistakes and cases of misspelling in the users-guide directory. I corrected the misspellings and corrected the grammar in some of the sentences.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3816:74,guid,guide,74,https://root.cern,https://github.com/root-project/root/pull/3816,1,['guid'],['guide']
Usability,"There is an infinite loop in; `PyROOT::TMemoryRegulator::ClearProxiedObjects()`:. ```C++; while (!fObjectMap.empty()) {; auto elem = fObjectMap.begin();; auto cppobj = elem->first;; auto klassid = elem->second;; auto pyclass = CreateScopeProxy(klassid);; auto pyobj = (CPPInstance *)MemoryRegulator::RetrievePyObject(cppobj, pyclass);. if (pyobj && (pyobj->fFlags & CPPInstance::kIsOwner)) {; ...; } else {; // Non-owning proxy, just unregister to clean tables.; // The proxy deletion by Python will have no effect on C++, so all good; MemoryRegulator::UnregisterPyObject(pyobj, pyclass);; }; }; ```. In the second code branch, the object is not removed from the `fObjMap`,; if `UnregisterPyObject` doesn't call the unregister hook because it; quits early. This can happen if there is not C++ object corresponding to; the regulated python object, causing an infinite loop because; `fObjectMap` never gets empty. Although this seems like an obvious logic error, this was only noticed; after the cppyy upgrade. Probably the code path was not hit before. Addresses; https://github.com/root-project/root/issues/15085#issuecomment-2031363812. This PR also includes a second refactoring commit to reduce the amount of C++ code in PyROOT. **This could maybe also fix the problem with the distributed RDataFrame test timeouts!**",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15106:57,Clear,ClearProxiedObjects,57,https://root.cern,https://github.com/root-project/root/pull/15106,1,['Clear'],['ClearProxiedObjects']
Usability,There is long-standing issue https://sft.its.cern.ch/jira/browse/ROOT-7530. As intermediate solution one must clearly state current limitations in class docu.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8148:110,clear,clearly,110,https://root.cern,https://github.com/root-project/root/issues/8148,1,['clear'],['clearly']
Usability,"There is much easier solution - do not introduce boolean variables and make check in place like:. if ((where == ""local"") || (where == ""qt5"")). I just want to keep code more clear - first parsing of all options and then creating web output. ; I will provide better solution - if nor CEF neither Qt5 available, ""local"" option is error and should be indicated so. I will add appropriate commit soon",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1964#issuecomment-386075518:173,clear,clear,173,https://root.cern,https://github.com/root-project/root/pull/1964#issuecomment-386075518,2,['clear'],['clear']
Usability,"There is no change for the user, but for packaging it makes things easier. See also https://github.com/root-project/root/pull/15402. Actually this is still a draft PR,I first wanted to see if all platforms are happy with the C++ changes. The next step is to move the `JupyROOT` submodule to `ROOT.JupyROOT`. Also this will have no effect on the user, because the user never imports this module themselves: it is implicitly imported by `ROOT` in a notebook environment. The overall goal of these PRs is to have a single python module (`ROOT`) instead of the current 4 (ROOT, JsMVA, JupyROOT, and DistRDF). For packagers, and for Root as a Python package in general, that would make things clearer and easier: from installing root, you get the module `ROOT`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15404#issuecomment-2092457591:688,clear,clearer,688,https://root.cern,https://github.com/root-project/root/pull/15404#issuecomment-2092457591,2,['clear'],['clearer']
Usability,"There is no reason to not have `JsMVA` as a submodule of ROOT, but it would clearly simplify things. In particular, this would simplify the life of packagers. Right now, ROOT creates several separate directories in `site-packages`, which prompts e.g. the Fedora guys to create separate packages for each of them:; https://packages.fedoraproject.org/pkgs/root/. I think a `python3-jsmva` package is clearly an overkill, and with this commit we can change the situation (the package name doesn't even contain `root`, so how would one even know where it comes from). Another benefit of this change is that the JsMVA Python sources are now correctly tracked by CMake, so they are re-copied of you update them in the source directory. The python sources are re-formatted on this occasion.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15402:76,clear,clearly,76,https://root.cern,https://github.com/root-project/root/pull/15402,4,"['clear', 'simpl']","['clearly', 'simplify']"
Usability,"There is still no fix for this yet, but I have changed the title to make clear that this problem is more general. Also there is the same issue in JIRA, that I'll now close because it is a duplicate of this GitHub issue:; https://sft.its.cern.ch/jira/browse/ROOT-9776. The proper fix would be in my opinion to tag the relevant functions in C++ with an attribute, and then have these considered by PyROOT to set the `_creates` attribute automatically.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11397#issuecomment-1432035579:73,clear,clear,73,https://root.cern,https://github.com/root-project/root/issues/11397#issuecomment-1432035579,2,['clear'],['clear']
Usability,There is very simple fix to make `TNetXNGFile::Close()` reentrant.; See PR: https://github.com/root-project/root/pull/13559,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13503#issuecomment-1697016701:14,simpl,simple,14,https://root.cern,https://github.com/root-project/root/issues/13503#issuecomment-1697016701,2,['simpl'],['simple']
Usability,"There is very simple solution. Specify for master page:; ```; enableScrolling=""false""; ```; Scrolling should be ok then",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4591#issuecomment-547390059:14,simpl,simple,14,https://root.cern,https://github.com/root-project/root/pull/4591#issuecomment-547390059,2,['simpl'],['simple']
Usability,"There was no followup here on the discussion on what should be in the manual and in the reference guide, but I think this discussion is not directly connected to removing this outdated statement about STL splitting from the users guide. So I would suggest to merge this PR as is, thanks @olantwin! If you want to follow up on adding this information to the reference guide (doxygen) or have other suggestions to improve the documentation, feel free to open more PRs :slightly_smiling_face:",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12551#issuecomment-1882573439:98,guid,guide,98,https://root.cern,https://github.com/root-project/root/pull/12551#issuecomment-1882573439,6,['guid'],['guide']
Usability,These PR fixes several issues in pymva: . - the scikit-learn methods require some update for new version of scikit-learn; - the disabling of eager execution for model prediction causes an issue on MacOS with the multi-processing. The tests are automatically restarted by the multi-processing. This is now avoided by not disabling eager-execution on MacOS platform. ; - Using .keras file is problematic for MacOS arm. (load_models does not work). Go back using .h5 files,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13634:55,learn,learn,55,https://root.cern,https://github.com/root-project/root/pull/13634,2,['learn'],['learn']
Usability,These changes let to reimplement string streamers in derived classes to provide better simpler representation of string in JSON/XML/SQL,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/42:87,simpl,simpler,87,https://root.cern,https://github.com/root-project/root/pull/42,1,['simpl'],['simpler']
Usability,"These minor changes seem to affect the way in which TTreeCache interacts with different IO classes, e.g. TTree/TChain vs TTreeReader. In `TTreeCache::FillBuffer` the change in values of `fEntryCurrent` and `fEntryNext`, respectively the first entry of the current cluster and the first entry of the next cluster, has been moved before an `if` condition that was causing an early exit from the function.; This, in conjunction with the change in `TTreeReader::SetEntriesRange` apparently fixes the issues with the cache when running a simple program that uses only TTreeReader. At the same time, the changes affect the interaction of the cache with a TTree-only program in a way that now is throwing a log error:; ```Error in <TTreeCache::FillBuffer>: Inconsistency: fCurrentClusterStart=821695 fEntryCurrent=821695 fNextClusterStart=1643390 but fEntryCurrent should not be in between the two```. I'm not sure why these changes affect positively the TTreeReader examples and negatively the TTree ones. Some links to these examples follow.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5365:533,simpl,simple,533,https://root.cern,https://github.com/root-project/root/pull/5365,1,['simpl'],['simple']
Usability,"These two files are almost 1000 LOC long combined, and contain several different classes (all of RDataFrame's different kinds of computation graph nodes). Splitting them in one file per class has three benefits:; 1) it makes dependencies between all classes much clearer; 2) It makes it much simpler to refactor or further develop one of the nodes (which incidentally is why I started this effort); 3) it makes for a good occasion to review and clean up our include lists",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2709:263,clear,clearer,263,https://root.cern,https://github.com/root-project/root/pull/2709,2,"['clear', 'simpl']","['clearer', 'simpler']"
Usability,"They do, but they are not at odd. libImt is presently the tool used via TROOT to get the status of the activation of ImplicitMT. That requires the load of libImt and the invocation of a function. This PR made of 1 commit simplifies the mechanism, avoiding to load libImt (and initialise the entire TROOT) in case only the activation status of ImplicitMT is required.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1127#issuecomment-334141079:221,simpl,simplifies,221,https://root.cern,https://github.com/root-project/root/pull/1127#issuecomment-334141079,2,['simpl'],['simplifies']
Usability,This PR add support for batch normalisation for MethodDL (deep learning in TMVA); The code has been developed mainly by Liam Bartsch (trainee in June 2019),MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3998:63,learn,learning,63,https://root.cern,https://github.com/root-project/root/pull/3998,1,['learn'],['learning']
Usability,"This PR addresses the TODO comments to remove the superfluous public getters / properties logic in `TreeHeadNode`. Currently, just parses the user arguments in the `__init__` method and stores the needed attributes. My idea is that in the end we'll only need to store `npartitions` and `tree` (which are always needed) plus `defaultbranches` and `friendinfo` as ""optional"" class attributes (meaning they are initialized to `None` and changed if some conditions apply). . For simplicity, in this PR I still leave `treename` and `inputfiles` attributes which are needed in the `Ranges.get_clusters` function. The next PRs will address:; * The assumption we only have one unique treename in the RDataFrame; * Change in `Ranges.get_clusters` to accept a `TTree` instance as argument, pairing it with new C++ functions in `ROOT::Internal::TreeUtils` to retrieve a vector of clusters (plus some other metadata) depending if it's a TTree or TChain. If the logic for this PR is approved I'll add more docs and commit messages",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8816:475,simpl,simplicity,475,https://root.cern,https://github.com/root-project/root/pull/8816,1,['simpl'],['simplicity']
Usability,"This PR addresses the code quality issues identified by @Axel-Naumann and @lmoneta . One of the points raised can be tackled in multiple ways. The purpose of publishing this PR now with the **[Do Not Merge]** tag is to facilitate discussion (see last section). I can then apply what we agree upon, update the PR and Lorenzo can merge. . ## Solved; The following issues have been addressed (1 commit per issue more or less): . * Compilation warnings are solved.; * Assumptions about the size of passed matrices are asserted where appropriate.; * Flow of control in unit tests is simplified by exiting early with an error code when a test fails.; * Floating point arithmetic issue solved when checking whether a float is actually an int. ## Discussion. One of the comments has to do with the overly verbose signature of propagation functions in all architectures. This is caused because we always need to pass the convolution parameters besides the actual inputs and outputs (strides, padding, kernel sizes are already 7 parameters that are often passed together). . One proposed solution is to capture them in a struct (perhaps called `ConvParams`) and then pass this struct around instead. I like this approach because it greatly simplifies the signatures. . An alternative approach could be to let the layer methods pass a pointer (or reference) to the calling object (`this`). The advantage is that the verbose functions accept different parameters, for example the forward prop expects the convolution parameters (stride, padding, kernel size) while the backward pass expects the input and output size. Passing a reference to the layer itself will allow each function to pick what it needs, thus allowing us to simplify all calls with a common strategy. I would like to hear opinions on which method to choose.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2321:578,simpl,simplified,578,https://root.cern,https://github.com/root-project/root/pull/2321,3,['simpl'],"['simplified', 'simplifies', 'simplify']"
Usability,"This PR adds (a first version of) the `RNTupleIndex`, which is an in-memory structure that maps RNTuple field values (or combinations thereof) to an entry index in the RNTuple for which the index was built. Currently, the index only resides in memory and thus has to be (re)build each time. `RNTupleIndex` will be used by the `RNTupleProcessor` to enable dataset joins and will be as transparent as possible to users. Currently, no public interface is foreseen. At this point, no persistification is foreseen, but this might be added in the future. The implementation of the `RNTupleIndex` in this PR is hash-based. An implementation that is vector-based (but with the same interface) will also be considered. The idea is to benchmark and evaluate both implementations (and potentially more). Based on the results we can decide which one to actually use (or alternatively make multiple implementations available if they show clear tradeoffs in different use cases).",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15116:925,clear,clear,925,https://root.cern,https://github.com/root-project/root/pull/15116,1,['clear'],['clear']
Usability,"This PR adds a new data source for `RDataFrame` that is able to provide data from SQlite `SELECT` queries. It will be useful for cvmfs, where we have file catalogs and monitoring information in sqlite files. For instance, one can do. auto rdf = ROOT::RDF::MakeSqliteDataFrame(""catalog.sqlite"", ""select * from catalog"");; auto h = rdf.Define(""lname"", ""name.length()"").Histo1D(""lname"");. to show the distribution of file name sizes. There are probably more use cases, for instance sqlite export of conditions data. This is work in progress, I'm posting it for early comments and feedback. My open points are. - Unit and integration tests are yet to be done; - The data source work single-threaded only at the moment. I initially thought it might be enough to return only a single row in `GetEntryRanges()` to make it thread-safe but that's apparently not enough. So I'm now thinking to wrap `SetEntry()` and `GetEntryRanges()` in a mutex.; - The code is not reusing `TSQLiteServer`. It felt like it requires stretching the `TSQLServer` interface in perhaps unwanted ways, for saving only a handful of direct sqlite API calls. On the other hand, with (probably quite a bit) more work it might be possible to have a more general data source that works on any SQL result set.; - Determining column types in SQlite is tricky as it is dynamically typed and in principle each row can have different column types. If a table column is queried as is, I can use the default/declared column type. For expressions, I'll use the type of the first row of the result set. Still it can result in a column to be of type `NULL` where subsequent rows actually have meaningful values. My guess is that the current heuristic is practical enough, and of course the user can formulate the `SELECT` query to avoid ambiguity.; - It would not be impossible to add support for remote reading of sqlite files. To do so, one can add a custom implementation of an sqlite virtual file system to have data pouring in directly from HTT",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2322:577,feedback,feedback,577,https://root.cern,https://github.com/root-project/root/pull/2322,1,['feedback'],['feedback']
Usability,This PR adds a simple metric (`nPagesCommitted`) to `RPageSinkFile` which is newly accessible through `RNTupleWriter`. The implementation mirrors `RNTupleReader`. I refactored the `RPageSinkFile` constructors to delegate metrics initialization to a new private constructor as in `RNTupleReader`. There are definitely many other metrics to be added.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7235:15,simpl,simple,15,https://root.cern,https://github.com/root-project/root/pull/7235,1,['simpl'],['simple']
Usability,"This PR adds branch type inference to Histo1D with weights, as well as Histo2D, Histo3D, Profile1D and Profile2D both with and without weights.; Code has been simplified. Docs have been updated. A related PR in roottest introduces testing for the new functionality.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/532:159,simpl,simplified,159,https://root.cern,https://github.com/root-project/root/pull/532,1,['simpl'],['simplified']
Usability,"This PR adds some (mostly size and compression-related) methods to the `RNTupleInspector` utility class. There are some small TODOs left, but I first wanted to collect some feedback. - [x] tested changes locally; - [x] updated the docs (if necessary); - [ ] add support for all field structures in `GetColumnsForField`; - [ ] decide on when to collect the (size) data: on creation of the `RNTupleInspector` object (how it is done now), or in a more on-the-fly approach",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12395:173,feedback,feedback,173,https://root.cern,https://github.com/root-project/root/pull/12395,1,['feedback'],['feedback']
Usability,"This PR adds some (mostly size and compression-related) methods to the `RNTupleInspector` utility class. There are some small TODOs left, but I first wanted to collect some feedback. - [x] tested changes locally; - [x] updated the docs (if necessary); - [x] add support for all field structures in `GetColumnsForField`; - [x] decide on when to collect the (size) data: on creation of the `RNTupleInspector` object (how it is done now), or in a more on-the-fly approach",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12396:173,feedback,feedback,173,https://root.cern,https://github.com/root-project/root/pull/12396,1,['feedback'],['feedback']
Usability,"This PR adds vectorized implementations of several functions in TMath. It is a work in progress, just to receive early feedback. Currently, the following functions are vectorized and tested:. - TMath::Min; - TMath::Gaus; - TMath::BreitWigner; - TMath::CauchyDist; - TMath::LaplaceDist; - TMath::LaplaceDistI. TODO:; - [ ] Refactor the tests to avoid repeated code.; - [ ] Implement remaining functions.; - [ ] Discuss what to do with functions that, i.e., receive an Int_t and return a Double_t. When vectorizing this kind of patterns, one problem arises: the length of integers and double vectors cannot be assumed to be the same. Any comment is more than welcome.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/655:119,feedback,feedback,119,https://root.cern,https://github.com/root-project/root/pull/655,1,['feedback'],['feedback']
Usability,This PR aims to add tutorials of PyTorch Interface in TMVA and is an extension to the main PR i.e #5757. Feel free to comment and share feedback.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6273:136,feedback,feedback,136,https://root.cern,https://github.com/root-project/root/pull/6273,1,['feedback'],['feedback']
Usability,"This PR aims to fix the problem of inconsistency in `TFormula::SetParNames()` and `TFormula::SetParameters()` functions as described in #7805. I have added warning if more values are provided than the actual number of parameters of `TFormula` object, original behaviour of the function is maintained apart from the added warning. Some test will fail due to the added warning, please tell if I should remove the warning or resolve the root cause of the warnings ( For instance, `TF1` using `TFormula::SetParameters()` and always passing 11 arguments is one cause of failing tests) . I would also like to slightly modify behaviour of these functions such that value and names of only specified parameters should be changed, current behaviour is to reset the value and names of parameters which aren't specified, but this change may negatively impact programs using these functions. But still, I think this change will make these functions more intuitive. Please tell if I should add this change. . This PR fixes #7805",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7812:942,intuit,intuitive,942,https://root.cern,https://github.com/root-project/root/pull/7812,1,['intuit'],['intuitive']
Usability,"This PR and their roottest sibling PR contain fixes for the following tests:. Roottest python basic tests:; - roottest-python-basic-basic; - roottest-python-basic-overload. Roofit tutorials fixed by the addition of a pythonisation to get the using declarations of `RooAbsData` into `RooDataHist`. This pythonisation will not be needed anymore when a general solution is provided by the bindings, mainly by merging this Cppyy patch into ROOT: https://bitbucket.org/wlav/cppyy-backend/src/master/cling/patches/using_decls.diff; - tutorial-roofit-rf106_plotdecoration-py; - tutorial-roofit-rf610_visualerror-py; - pyunittests-pyroot-pyz-roodatahist-ploton; - tutorial-roofit-rf315_projectpdf-py; - tutorial-roofit-rf402_datahandling-py. Related to https://bitbucket.org/wlav/cppyy/issues/66/cppoverload-addmethod-cppoverload-clears; - tutorial-roofit-rf307_fullpereventerrors-py; - tutorial-roofit-rf706_histpdf-py. Some fixes for the following test, although it still can't be re-enabled due to https://bitbucket.org/wlav/cppyy/issues/145/enum-values-not-defined-as-constants; - roottest-python-basic-datatype. Some fixes for the following test, but still can't be re-enabled (more issues to investigate):; - roottest-python-regression-regression",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4294:822,clear,clears,822,https://root.cern,https://github.com/root-project/root/pull/4294,1,['clear'],['clears']
Usability,"This PR changes names such as `ROOT::RDF::MakeCsvDataFrame` to the nicer/clearer convention `ROOT::RDF::FromCSV`, deprecating the previous spellings. Although what's nicer and clearer is generally subjective, I think there is strong enough evidence in this case to warrant the change: . - https://root-forum.cern.ch/t/makenumpydataframe-function-name/50566; - the `FromXXX` naming convention is already widespread across libraries and programming languages (e.g. [rust naming conventions](https://rust-lang.github.io/api-guidelines/naming.html#naming), [pandas](https://pandas.pydata.org/pandas-docs/stable/reference/frame.html#serialization-io-conversion); - the current naming convention does not work for factory functions that we might want in the future such as `ROOT::RDF::FromJSONDatasetSpec` (`MakeJSONDatasetSpecDataFrame`, `MakeJSONDataFrame`?). ### To do. - [x] check with @jblomer that moving `ROOT::Experimental::MakeNTupleDataFrame` to `ROOT::RDF::Experimental::FromNTuple` (not the change of namespace) is ok; - [x] rename `ROOT.RDF.MakeNumpyDataFrame` to `ROOT.RDF.FromNumpy`: @etejedor how do I deprecate a Python-only method?; - [x] `FromCSV` vs `FromCsv` -- I think it should be `CSV`, just like we already have [`TBufferJSON::FromJSON`](https://root.cern/doc/master/classTBufferJSON.html#abefb8455a4514bc7ea5e722ebd2dc203). P.S.; in case it wasn't clear, this is basically a RFC :)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11125:73,clear,clearer,73,https://root.cern,https://github.com/root-project/root/pull/11125,4,"['clear', 'guid']","['clear', 'clearer', 'guidelines']"
Usability,"This PR extends the type templation that was already present in some classes in the GenVector library to improve support for using vectorised (Vc) types. Specifically it :-. 1. Extends the templation to the Plane3D, Transformation3D and Translation3D types.; 2. Where necessary provides specialised methods for the vector types, when the original code was not generic enough to work in both scalar and vector scenarios. Typically this happens in the case of conditionals, where the differences required (booleans versus masks) are difficult to avoid. This PR is not complete, in that there are still some classes in GenVector that still do not support Vc types, as they are still not templated, such as the Rotation like transformations. It would be nice to add this at some point, but the code associated to these is more extensive (3DConversions.cxx for instance) and that will require some work. My changes pass the built in ROOT tests. In addition I have prepared a simple test case for the Vc types (attached) that I have used to check the scalar and vector types give equivalent results. Tested on OS X with the compilation command. clang++ -O3 -mavx2 -mfma `root-config --cflags` -I/Users/chris/Projects/Vc/install/include main.cpp `root-config --libs` -lGenVector /Users/chris/Projects/Vc/install/lib/libVc.a. [main-cpp.txt](https://github.com/root-project/root/files/820450/main-cpp.txt)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/394:970,simpl,simple,970,https://root.cern,https://github.com/root-project/root/pull/394,1,['simpl'],['simple']
Usability,"This PR fixes ROOT-9453 (""Cannot instantiate RVec<bool>"") and some related issues. The different semantics of std::vector<bool> make memory adoption through a; custom allocator more complex -- namely, `RAdoptAllocator<bool>` must be; rebindable to `RAdoptAllocator<unsigned long>`, but if adopted memory is; really a buffer of bools, reinterpretation of the adopted buffer as a; different type is going to break things in horrible ways.; As a workaround, `RAdoptAllocator<bool>` is specialized to be a simple; allocator that forwards calls to `std::allocator`, never adopts memory, and; can be rebound to any other allocator (as it never adopts memory it can; rebind the same way that `std::allocator` can). Note that this is not enough to support `RVec<bool>` columns in `RDataFrame`, for two main reasons:; * `TTreeReaderArray<bool>` is broken, see [ROOT-9570](https://sft.its.cern.ch/jira/browse/ROOT-9570); * `RVec<bool>` cannot be constructed from a `(bool *, std::size_t)` pair and cannot adopt memory (because `RAdoptAllocator<bool>` cannot adopt memory, because of the problems mentioned above) . So `RDataFrame` would still have to treat `RVec<bool>` differently:; * use a `TTreeReaderValue<std::vector<bool>>` to read the data from disk correctly; * copy the data into an `RVec<bool>`, without relying on memory adoption. These changes might be added by a future PR as they are outside of the scope of ROOT-9453 (""Cannot instantiate RVec<bool>""), _if_ this proposed solution to ROOT-9453 is accepted.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2433:502,simpl,simple,502,https://root.cern,https://github.com/root-project/root/pull/2433,1,['simpl'],['simple']
Usability,"This PR fixes a problem in fixing the parameter when using the linear fitter. ; This simple examples shows the problem (the fixed parameter is always the first one) instead of the second one; ```; {; auto h1 = new TH1D(""h1"",""h1"",20,0,10);; h1->FillRandom(""pol0"");; auto f1 = new TF1(""f1"",""pol1"");; f1->FixParameter(1,0);; h1->Fit(f1,"""");; }; ```; the bug is caused by `TLinearMinimizer::SetVariable` returning false instead of true. . The PR fixes also the counting of the total number of free parameters",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11982:85,simpl,simple,85,https://root.cern,https://github.com/root-project/root/pull/11982,1,['simpl'],['simple']
Usability,"This PR fixes a regression introduced in a recent update to extend the templation in GenVector (PR #394). It turns out that this update broke the multiplication of a Transform3D by a Plane3D. This regression was spotted in the LHCb nightly build which tests against the master of ROOT. e.g. https://lhcb-nightlies.cern.ch/logs/build/nightly/lhcb-lcg-dev3/105/x86_64-centos7-gcc62-opt/LHCb/#show_error1538. The error is. ```; /build/jenkins-build-new/workspace/nightly-builds/build/build/LHCB/LHCB_HEAD/Det/RichDet/src/Lib/DeRichHPDPanel.cpp:673:52: error: no match for 'operator*' (operand types are 'const Transform3D {aka const ROOT::Math::Impl::Transform3D<double>}' and 'Gaudi::Plane3D {aka ROOT::Math::Impl::Plane3D<double>}'); 	 m_localPlane = geometry()->toLocalMatrix() * m_detectionPlane;. /build/jenkins-build-new/workspace/nightly-builds/build/build/LHCB/LHCB_HEAD/Det/RichDet/src/Lib/DeRichPMTPanel.cpp:407:46: error: no match for 'operator*' (operand types are 'const Transform3D {aka const ROOT::Math::Impl::Transform3D<double>}' and 'Gaudi::Plane3D {aka ROOT::Math::Impl::Plane3D<double>}'); 	 m_localPlane = geometry()->toLocalMatrix() * m_detectionPlane;; ```. This PR fixes this by adding an explicit operator for this. I have also extended the GenVector Vc test to explicitly cover this operation, as it was clearly one not covered in the ROOT tests so far.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/453:1327,clear,clearly,1327,https://root.cern,https://github.com/root-project/root/pull/453,1,['clear'],['clearly']
Usability,"This PR fixes the incorrect calculation of the compressed size by the `RNTupleInspector`. Because the vector of compressed page sizes is not cleared after each loop iteration, the accumulation needs to happen only after the loop has finished. - [x] tested changes locally; - [x] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14316:141,clear,cleared,141,https://root.cern,https://github.com/root-project/root/pull/14316,1,['clear'],['cleared']
Usability,"This PR fixes the jira item, refactors the code of the models in order to simplify and reduce code duplication and extends significantly the test coverage.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1759:74,simpl,simplify,74,https://root.cern,https://github.com/root-project/root/pull/1759,1,['simpl'],['simplify']
Usability,"This PR has been rebased and simplified to leverage the changes introduced by #11828. Accessing single pages that are remotely caged is now unsupported unless page buffering is enabled as a source option (which is by default the case). More details in the updated PR description. The change precludes storing the cage sizes in metadata or upper-bounding it in `RPageSourceDaos`, though it constrains that the entire page-group is requested and fetched - as the allocated buffer size for a cage depends on the sum of all the compressed sizes stored in the individual locators of requested pages belonging to that cage.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11466#issuecomment-1359215581:29,simpl,simplified,29,https://root.cern,https://github.com/root-project/root/pull/11466#issuecomment-1359215581,2,['simpl'],['simplified']
Usability,This PR improve the search for contour points when contour touches the parameter limits. . Improve also debugging and simplify the case when all parameters are fixed,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13966:118,simpl,simplify,118,https://root.cern,https://github.com/root-project/root/pull/13966,1,['simpl'],['simplify']
Usability,"This PR is a 'downgrade' is code simplicity that should not be necessary. However the underlying fix is not ready (and won't until August), so we could temporarily merge this if need be.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15733#issuecomment-2194299016:33,simpl,simplicity,33,https://root.cern,https://github.com/root-project/root/pull/15733#issuecomment-2194299016,2,['simpl'],['simplicity']
Usability,This PR is a first simple implementation of the ternary plots requested [here](https://sft.its.cern.ch/jira/browse/ROOT-8378) and [here](https://root-forum.cern.ch/t/triangle-or-ternary-plot/8825/19). It is a Work In Progress.; This class is functional but very simple. The final idea would be to have a class allowing to make ternary plot as the ones shown [here](https://commons.wikimedia.org/wiki/Category:Ternary_phase_diagrams) or [here](https://en.wikipedia.org/wiki/Ternary_plot). It seems there exists Python library under free licence to do so: [python-ternary](https://github.com/marcharper/python-ternary).,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6713:19,simpl,simple,19,https://root.cern,https://github.com/root-project/root/pull/6713,2,['simpl'],['simple']
Usability,"This PR is a work in progress for a parallel version of the snapshot action introduced recently to TDataFrame. This version compiles and passes the `test_snaphot.C` test from roottest.git, but still needs quite a bit of work. I imported the files we use with attributed authorship for each part, but we now need to move them to the right place if needed and refactor the interfaces according to feedback from various sources. Please feel free to make comments directly on the code, and I will try to address everything by the deadline for branching out 6.10.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/533:395,feedback,feedback,395,https://root.cern,https://github.com/root-project/root/pull/533,1,['feedback'],['feedback']
Usability,"This PR is a work-in-progress. Submitting mainly to get feedback and test on all platforms (it compiles and tests run on my machines). `TDataFrame.hxx` neared the 2000 lines, so I decided to bite the bullet and disentangle it in logically separated parts. `TDataFrame`'s functionality is now divided as follows:. - `TDataFrame.{hxx,cxx}`: class `TDataFrame`; - `TDataFrameInterface.{hxx,cxx}`: class `TDataFrameInterface`; - `TDFNodes.{hxx,cxx}`: class `TDataFrameImpl`, `TDataFrameAction{,Base}`, `TDataFrameBranch{,Base}`, `TDataFrameFilter{,Base}`; - `TActionResultProxy.hxx`: class `TActionResultProxy`; - `TDFOperations.{hxx,cxx}`: all `*Operation` classes; - `TDFTraitsUtils.hxx` -> `TDFUtils.{hxx,cxx}`: all helper functions and meta-helpers. I also ran `clang-format` and `include-what-you-use` on these files to improve coding style and useless/misplaced includes. I plan to squash all commits into just two/three (one for splitting, one for formatting, one for the includes) if/when the changes will be green-lit. **Open issues**; - [x] `TActionResultProxy::TriggerRun` is still in `TDataFrame.hxx` because it depends on TDataFrameImpl. Moving it into `TActionResultProxy.hxx` would cause a circular include dependency; - [x] `ColumnName2ColumnTypeName` is in `TDataFrameInterface.{hxx,cxx}`, but being an helper function it should actually be in `TDFUtils.hxx`. This would cause a circular include dependency with `TDFNodes.hxx` due to `TDataFrameImpl`; - [x] same for `CallCreateAction`, but the circular dependency is with `TActionResultProxy`. This function is much less general than the former though, so maybe it could stay in `TDataFrameInterface.{hxx,cxx}`; - [x] `TSlotStack` is now declared and defined at namespace scope in `TDFNodes.cxx`. Declaration and definitions should be split, the class itself should probably be nested inside `TDataFrameImpl`",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/423:56,feedback,feedback,56,https://root.cern,https://github.com/root-project/root/pull/423,1,['feedback'],['feedback']
Usability,This PR is meant to slim down the man pages while feedback from experts is collected.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1544:50,feedback,feedback,50,https://root.cern,https://github.com/root-project/root/pull/1544,1,['feedback'],['feedback']
Usability,This PR is now fine and can be merged. I will add now also a simple test for the new mod. operator,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/977#issuecomment-349961499:61,simpl,simple,61,https://root.cern,https://github.com/root-project/root/pull/977#issuecomment-349961499,2,['simpl'],['simple']
Usability,"This PR looks a big improvement in fixing #7890 and #7933. Here are some test results run on Ubuntu 20. - Test create/delete a RooArgSet, simple example shown in #7933. - with current mater (i.e. including #7904 and #7935): ; - Time to create/delete 10M RooArgSet : 125 sec; - Increase of Memory ~ 1 GB; - with master + this PR: ; - Time to create/delete 10M RooArgSet : 0.8 sec; - total memory increase + 25 Mb); - using 6.15 (before including current MemPoolForRooSets (-> #2866 ); - Time to create/delete 10M RooArgSet : 2.9 sec; - memory increase : 0 ; ; - Running RooStats toy generation + likelihood evaluation on Histfactory tutorial model using in totoal 300k toys: ; ```; StandardHypoTestInvDemo(""$ROOTSYS/tutorials/histfactory/results/example_combined_GaussExample_model.root"",""combined"",""ModelConfig"","""",""obsData"",0,0,true,2,0,5,100000); ```. - master : Time: 344 sec Memory : ~ 3.5 GB; - master + this PR : Time: 157 sec Memory: 570 Mb; - 6.15 Time: 197 sec Memory: 240 Mb; . Runing the master on MacOsX, I have observed a much smaller memory increase, but a much longer time spent with allocating/deallocating RooArgSet's when their total count increases.; This is not observed anymore after applying this PR. So in conclusion:. - this PR fixes the increase time spent in allocate/deallocate RooArgSet over time, which will slow down toys analysis when number of toys increase; - there is still some increase in memory usage, but it is much smaller than before.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7954#issuecomment-824721395:138,simpl,simple,138,https://root.cern,https://github.com/root-project/root/pull/7954#issuecomment-824721395,2,['simpl'],['simple']
Usability,This PR makes the TFile Layout documentation visible in; the Doxygen ROOT reference Guide. - The .txt file have been turned into markdown; - Doxyfile have io/doc/TFile folder as input; - References/links between the pages have been setup; - The \tableofcontents Doxygen functionality has been turned ON; - Some typos have been fixed. Still two links need to be resolved:; http://root.cern.ch/root/RootDoc.html; http://root.cern.ch/root/htmldoc/examples/Version302.news.html,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7891:84,Guid,Guide,84,https://root.cern,https://github.com/root-project/root/pull/7891,1,['Guid'],['Guide']
Usability,This PR migrates the TMVA Deep Learning classes (RNN) for new cud version 9,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15601:31,Learn,Learning,31,https://root.cern,https://github.com/root-project/root/pull/15601,1,['Learn'],['Learning']
Usability,"This PR moves the responsibility of knowing which custom columns have been defined at which point of the functional graph from `TCustomColumn` to `TInterface`. As an added improvement `TInterface` now checks that custom columns do not override each other (which was wrongly allowed before). As a consequence, `TCustomColumn` nodes are not required to be in the functional graph anymore (their function was to signal the point where a certain column name became valid), allowing simplifications of the graph traversing that TDF does during the event loop (e.g. to check all filters in a functional chain). `Define` now returns the same type as the node it was called on rather than `TInterface<TCustomColumn<Fun, PrevNode>>`. For this reason this PR is expected to break `test_templateRecursionLimit`, which depends on the exact type returned by `Define`. The test will be fixed by a separate PR to roottest.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/924:478,simpl,simplifications,478,https://root.cern,https://github.com/root-project/root/pull/924,1,['simpl'],['simplifications']
Usability,This PR needs to have its history rewritten - possible simply squashing all commits.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13596#issuecomment-1705308623:55,simpl,simply,55,https://root.cern,https://github.com/root-project/root/pull/13596#issuecomment-1705308623,2,['simpl'],['simply']
Usability,"This PR propagates the disconnect action from TFileCacheRead to TFilePrefetch. This is needed to restore TFilePrefetch compatibility with the CMS use of kDoNotDisconnect to swap TTreeCaches. CMS frequently swaps TTree caches with code like. filePtr_->SetCacheRead(cache, nullptr , TFile::kDoNotDisconnect);; branch->GetEntry(entryNumber);; filePtr_->SetCacheRead(nullptr, nullptr , TFile::kDoNotDisconnect);. This is done partially for ownership reasons and partially because CMS uses multiple TTreeCaches for different use cases (one cache for frequently read branches, a second for less frequently accessed branches, and potentially one or two more specialized use cases). kDoNotDisconnect tells the TFile that this cache may later be reconnected to the TFile, so it should not disconnect the cache from the file. TFile propagates the flag to TFileCacheRead, but TFileCacheRead does not propagate it to TFilePrefetch. If pre-fetching is enabled, TFilePrefetch clears its cached blocks due to this commit:. https://github.com/root-project/root/commit/4290bf4942285b754b2edb7bffd122bcf36c979d. which added clearing of the read and pending prefetch lists when SetFile() is called. This violates the assumptions made by TTreeCache in the kDoNotDisconnect case, leading to a deadlock where `TTreeCache::ReadBufferPrefetch` waits forever on a buffer that has been cleared from the prefetched and pending lists. This patch propagates the kDisconnect/kDoNotDisconnect action flag to `TFilePrefetch::SetFile`, only clearing the fetched and pending lists in the kDisconnect case. (The same end could be accomplished more simply by just not calling TFilePrefetch::SetFile() for the kDoNotDisconnect case; propagating the action seems more correct to me, but it is a matter of taste.)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1769:962,clear,clears,962,https://root.cern,https://github.com/root-project/root/pull/1769,5,"['clear', 'simpl']","['cleared', 'clearing', 'clears', 'simply']"
Usability,This PR provides some optimisation for Cuda. In particular: . - optimise update weights/gradient of SGD and ADAM/ ; - We avoid now creating temporary matrices in SGD ; - For ADAM it is more efficient defining three new updates functions which will blenched on the GPU. This also avoid creating temporaries . These changes speed-up by almost a factor of 2 the code in GPU for dense layer when using ADAM and restore the previous performances for SGD. - optimise also computation of convolutional weight gradients. ; In this case we can just simply use the ScaleAdd function. A speed up of ~ 20% is obtained . This PR also adds a commit that remove the computation of correlation matrix in case of large number of variables,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2502:540,simpl,simply,540,https://root.cern,https://github.com/root-project/root/pull/2502,1,['simpl'],['simply']
Usability,"This PR purges the old ; ```c++; ""evaluateBatch|getValBatch|getLogValBatch""(std::size_t begin, std::size_t batchSize); ```; interface of the roofit classes with the ; ```c++; ""evaluateSpan|getValues|getLogs""(BatchHelpers::RunContext& evalData, const RooArgSet* normSet); ```. To this point, both interfaces exist. In this PR the old methods are deleted and the code is cleared, with the exception of marking the purged methods as `= delete` in RooAbsReal.cxx, to prevent users that write their own PDF classes to use them or overwrite them. In the very few cases where users have already implemented such a deleted function, they will get a compilation error, so I will make sure that there's a detailed and easy walkthrough in the release notes of the next versions of how to port their code to use the new interface. The process is very simple, so the users that have used the old interface are more advanced than needed to make this change.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6841:369,clear,cleared,369,https://root.cern,https://github.com/root-project/root/pull/6841,2,"['clear', 'simpl']","['cleared', 'simple']"
Usability,"This PR puts in place a facade for ROOT to become a Python module with custom behaviour, in a similar way it is done for the current PyROOT.; https://github.com/root-project/root/blob/master/bindings/pyroot/ROOT.py#L560. For now this is just a simple skeleton that redirects lookups to cppyy's global namespace, and more investigation on the logic implemented by the facade of the current PyROOT is necessary.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3351:244,simpl,simple,244,https://root.cern,https://github.com/root-project/root/pull/3351,1,['simpl'],['simple']
Usability,"This PR refactors (or rather, rewrites) `hadd`'s argument parsing code to achieve the following improvements:; - code is simpler to follow, more consistent among different flags and extracted from main; - adding new flags is easier; - allows the familiar syntax of `-j2` in addition to `-j 2`. As a bonus, and for consistency with `-cachesize=`, all flags can now also be passed as `-j=2` (except for `-f` which has a special logic).; - allows passing flags after the positional arguments; - hadd will abort when encountering invalid flag arguments, instead of just printing a message. In the name of code simplification, this PR doesn't attempt to replicate the same exact error-reporting behavior string-by-string as the current version, but the results should ideally be the same. I ran the roottest suite and all tests pass but we might want to add more tests to be sure. ## Checklist:. - [x] tested changes locally; - [x] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16090:121,simpl,simpler,121,https://root.cern,https://github.com/root-project/root/pull/16090,2,['simpl'],"['simpler', 'simplification']"
Usability,"This PR replaces #3924 by Susrya. Integrates his code with the new developments (RTensor) for CPu and in addition extends his implmentation by : ; - fixing backpropagation for GRU; - add cuDNN implmentation for GPU for simple RNN, LSTM and GRU",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4911:219,simpl,simple,219,https://root.cern,https://github.com/root-project/root/pull/4911,1,['simpl'],['simple']
Usability,"This PR serves the same purpose as this one: #4695 ; However, I think that older PR was never merged, because it was opened before the hotfix #4698 and therefore was not able to compile. In this PR I simply format all code that has been added for the TGraphMultiErrors class using clang-format and the format settings file provided by ROOT.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4777:200,simpl,simply,200,https://root.cern,https://github.com/root-project/root/pull/4777,1,['simpl'],['simply']
Usability,This PR simplifies the trait whether an `RField` is mappable. It furthermore simplifies the use of this trait inside `RNTupleView`,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12143:8,simpl,simplifies,8,https://root.cern,https://github.com/root-project/root/pull/12143,2,['simpl'],['simplifies']
Usability,"This PR solves the problem of documenting our python requirements and adding a test that checks if we satisfy them at runtime. #5938 solves three main problems (plus a couple smaller things): a bug in an RDF tutorial, a bug in the vetoing of tutorials, and it adds a nice-to-have, namely having a single test fail that's clearly called ""test-if-numba-is-there"" rather than having all numba tests red. If what I said above is in the ballpark of correct, there is no conflict with #5938. so I still think this PR could go in modulo the missing requirements -- consider my approval conditional to agreeing on what should go in requirements.txt (i'll stay out of the discussion about whether pandas should be in there or not :D)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5408#issuecomment-654947753:321,clear,clearly,321,https://root.cern,https://github.com/root-project/root/pull/5408#issuecomment-654947753,2,['clear'],['clearly']
Usability,This PR undoes part of #426 for simplification and ignores some tutorials that depends on tutorials which are already ignored on ARM.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/433:8,undo,undoes,8,https://root.cern,https://github.com/root-project/root/pull/433,2,"['simpl', 'undo']","['simplification', 'undoes']"
Usability,"This Pull request adds tutorials for RModelParser_ONNX, RModelParser_Keras, and RModelParser_PyTorch.; This depends on the SOFIE's Keras Parser (#8430) & PyTorch Parser (#8684). This work is a part of my project **ROOT Storage of Deep Learning Models** of Google Summer of Code'21. Project Link: https://summerofcode.withgoogle.com/projects/#5424575602491392",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8874:235,Learn,Learning,235,https://root.cern,https://github.com/root-project/root/pull/8874,1,['Learn'],['Learning']
Usability,"This Pull request refactors `DaosEventQueue` and asynchronous event management in `RDaos`, with improved performance and simplified polling of pending read-write requests. ; Better performance is achieved by eliminating the significant overhead that comes with instantiating event queues with every new request. Instead, event queues are now permanent and pool-wide, managed by `RPool`. ; The use of a symbolic parent event per call to `VectorReadWrite` better represents the intent behind that function, which is to only return upon successful processing of all asynchronous requests sent through it. ## Changes or fixes:; - Symbolic parent events are tied to batched asynchronous events originating from a single RW call, for easier polling.; - Poolwide event queues that are shared among its underlying containers and persist between RW calls, thus avoiding the expensive operation of creating queues every time `VectorReadWrite` is called.; - Explicit marking of request calls as synchronous in `FetchUpdateArgs` to bypass the queue. In such cases, object fetch/update calls to DAOS are sent with a null event pointer to signal that the request is blocking.; - The functions `daos_event_test` and `daos_event_parent_barrier`, used for polling and sending parent events respectively, are added to `libdaos_mock`. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10795:121,simpl,simplified,121,https://root.cern,https://github.com/root-project/root/pull/10795,1,['simpl'],['simplified']
Usability,This Pull requests fixes an issue when evaluating regression networks using CNN or RNN architectures. ; It fixes to use the correct input shape. In addition: ; - include changes in #8573 for adding DL with GPU to regression tutorials; - fix an issue with drawing too often progress bar when evaluating regression,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8960:273,progress bar,progress bar,273,https://root.cern,https://github.com/root-project/root/pull/8960,1,['progress bar'],['progress bar']
Usability,"This adds functionality to directly parse and create normalized sums as `TF1` objects (as opposed to creating `TF1NormSum` objects and then `TF1` functions from those), when our formula is of the form `NSUM(f1, f2, ...)`. This constructor is also more convenient than that of `TF1NormSum` because we allow the user to use a formula directly as function (such as `x^2`). Examples:; * `TF1 *f = new TF1(""f"", ""NSUM([sg] * gaus, [bg] * expo)"")`; * `TF1 *f = new TF1(""f"", ""NSUM(.5 * expo, .5 * (x + 1)^2)"")`. Note that this code uses the constructor for `TF1NormSum` which parses a formula. The constructor using the vectors of formulas may have been a better choice, but I could not get that constructor to work, even for the simplest inputs (I suspect it might be buggy).",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/799:722,simpl,simplest,722,https://root.cern,https://github.com/root-project/root/pull/799,1,['simpl'],['simplest']
Usability,"This allows programs (such as 3rd party readers) to create a RNTuple anchor while keeping it clear that ""regular"" users are not meant to do that.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16786:93,clear,clear,93,https://root.cern,https://github.com/root-project/root/pull/16786,1,['clear'],['clear']
Usability,"This almost broke me... I've been trying to find for days why ROOT would not build correctly in one particular (fairly complicated) setup for me. I just couldn't figure out why I wouldn't get the files meant for the `etc/` directory in my installation. Turns out that it was because in this weird setup I put the ROOT source code into a directory inside of another CMake project, into a directory that had `/CMakeFiles/` as part of its path. And would you know, macOS still comes with a case insensitive file system, so this exclusion rule was triggering for the full contents of the `etc/` directory in this setup. After realising this, I modified my project's setup to put the ROOT source code into a safer location. But this update should still help people avoid a similar situation later on... P.S. I checked in a simple standalone example that this formalism should do the right thing. (Took me some tries to find ""just the right"" incantation.)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1625:818,simpl,simple,818,https://root.cern,https://github.com/root-project/root/pull/1625,1,['simpl'],['simple']
Usability,"This broke the build on all EPEL-based distributions where the headers are in `/usr/include/xrootd`, but `XRootDConfig.cmake` reports `/usr/include`. I believe this is an error in how the `rpm` is packaged, but we cannot fix it immediately. Our CI was also very clear about this problem by failing on 5 platforms (!), 3x Fedora and 2x Alma Linux, which I would again like to point out must be always checked before merging! I'm reverting the second commit in https://github.com/root-project/root/pull/14170 to restore our builds and also help the LCG people.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13752#issuecomment-1838159186:262,clear,clear,262,https://root.cern,https://github.com/root-project/root/pull/13752#issuecomment-1838159186,2,['clear'],['clear']
Usability,"This broke the tests:; ```; 729: Processing /home/jhahnfel/ROOT/src/tutorials/graphs/scatter.C...; 729: In file included from input_line_10:1:; 729: /home/jhahnfel/ROOT/src/tutorials/graphs/scatter.C:39:43: error: use of undeclared identifier 'scat'; 729: TPaletteAxis *palette = (TPaletteAxis*)scat->GetGraph()->GetListOfFunctions()->FindObject(""palette"");; 729: ^; ```. Tutorials are executed as part of the CI and therefore should *never* be merged with `[skip-ci]`! The simple fix is in https://github.com/root-project/root/pull/15923.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15871#issuecomment-2188647929:474,simpl,simple,474,https://root.cern,https://github.com/root-project/root/pull/15871#issuecomment-2188647929,2,['simpl'],['simple']
Usability,"This bug Edward reports was described at the ROOT forum two years ago by me in [this thread](https://root-forum.cern.ch/t/integral-with-limits-under-frac/31891). The MWE from that thread of mine can be further simplified down to just three lines of code actually:; ```; void drawl(); {; TLatex l;; l.DrawLatex(0.5, 0.3, ""#frac{#int_{0} v dt}{2}"");; }; ```; This snippet crashes (when ran in 6.14/04) with the same; ```; *ERROR<TLatex>: Missing denominator for #frac; ==> #frac{@{#int_{0}} v dt}{2@}; ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6851#issuecomment-731616986:210,simpl,simplified,210,https://root.cern,https://github.com/root-project/root/issues/6851#issuecomment-731616986,2,['simpl'],['simplified']
Usability,This can be done at compile time with a static_assert too but the message offered to the user is not as clear.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3745:104,clear,clear,104,https://root.cern,https://github.com/root-project/root/pull/3745,1,['clear'],['clear']
Usability,This change (removing TBuffer.h from TDirectory.h) has a very high probably of breaking user code. This is cleaner so unless @Axel-Naumann objects it should go in but we need to call it clearly in (the beginning of) the release notes (the other header moves should probably be called there too).,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5123#issuecomment-597126662:186,clear,clearly,186,https://root.cern,https://github.com/root-project/root/pull/5123#issuecomment-597126662,2,['clear'],['clearly']
Usability,"This class holds all necessary parameters to start any supported web display.; These are kind of browser, width, height, URL and extra URL options.; Simplifies for the future extension of that API.; Also let ""hide"" some implementation details, but keeping interface clear",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2845:149,Simpl,Simplifies,149,https://root.cern,https://github.com/root-project/root/pull/2845,2,"['Simpl', 'clear']","['Simplifies', 'clear']"
Usability,"This clearly signals ownership transfer and avoids circumventing smart pointer semantics. For more details on passing the vector by value, see also commit c7dac7370d.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16779:5,clear,clearly,5,https://root.cern,https://github.com/root-project/root/pull/16779,1,['clear'],['clearly']
Usability,This commit adds support for using RooNllVarNew in code-squashing/AD. It also adds a new test that uses code-squashing and AD based derivatives to minimize a simple model.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12576:158,simpl,simple,158,https://root.cern,https://github.com/root-project/root/pull/12576,1,['simpl'],['simple']
Usability,This commit reverts root-project/root@69568116cd. The CtorsConstants variable is not used. The commit log has a simple tests which now works without this patch. Thanks to Jonas Hahnfeld (@hahnjo) for pointing this out!,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10827:112,simpl,simple,112,https://root.cern,https://github.com/root-project/root/pull/10827,1,['simpl'],['simple']
Usability,"This depends on #5998 . - TMVA was somehow vetoing dataframe python tutorials. These have been reactivated.; - The vetoing logic in general has been overhauled, so it's more straight-forward, and the number of active / vetoed tutorials is correctly reported by cmake.; - Fix a few tutorials that wouldn't launch or compile. ### Overhaul of veto-or-fail when python packages are missing; Disable (instead of veto) python tutorials that cannot work when python packages are missing. This happens by listing the required packages when registering the test or tutorial:; ```; ROOT_ADD_PYUNITTEST(pyroot_pyz_ttree_branch ttree_branch.py PYTHON_DEPS numpy); ```; Before launching the tutorial/test, cmake will run a fixture, which is a simple `import <package>`. If this passes, all dependent tutorials/tests are run. If it fails, it looks like this:; ![image](https://user-images.githubusercontent.com/16205615/86784643-0c112680-c062-11ea-84a8-8ef4c5eb8e23.png). The advantage of this is that one doesn't even have to open the test output, because cmake already communicates clearly that the failure is due to missing packages. As discussed in Moday's meeting, all tests with extra runtime dependencies now are also labelled `python_runtime_deps`. This gets assigned automatically if `PYTHON_DEPS` is not empty.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5938:730,simpl,simple,730,https://root.cern,https://github.com/root-project/root/pull/5938,2,"['clear', 'simpl']","['clearly', 'simple']"
Usability,"This does not compile although it should:. ```cpp; #include <ROOT/RDataFrame.hxx>. class SimpleFiller {; TH1D fHisto;. public:; SimpleFiller() : fHisto("""", """", 128, 0., 0.) {}; SimpleFiller(const SimpleFiller &) = default;; SimpleFiller(SimpleFiller &&) = default;. void Fill(double x) { fHisto.Fill(x); }; void Merge(const std::vector<SimpleFiller *> &others); {; TList l;; for (auto *o : others); l.Add(&o->GetHisto());; fHisto.Merge(&l);; }. TH1D &GetHisto() { return fHisto; }; };. class MaxSlotHelper : public ROOT::Detail::RDF::RActionImpl<MaxSlotHelper> {; const std::shared_ptr<unsigned int> fMaxSlot; // final result; std::vector<unsigned int> fMaxSlots; // per-thread partial results; public:; MaxSlotHelper(unsigned int nSlots); : fMaxSlot(std::make_shared<unsigned int>(std::numeric_limits<unsigned int>::lowest())),; fMaxSlots(nSlots, std::numeric_limits<unsigned int>::lowest()); {; }; MaxSlotHelper(MaxSlotHelper &&) = default;; MaxSlotHelper(const MaxSlotHelper &) = delete;; using Result_t = unsigned int;; std::shared_ptr<unsigned int> GetResultPtr() const { return fMaxSlot; }; void Initialize() {}; void InitTask(TTreeReader *, unsigned int) {}; void Exec(unsigned int slot, unsigned int /*slot2*/) { fMaxSlots[slot] = std::max(fMaxSlots[slot], slot); }; void Finalize() { *fMaxSlot = *std::max_element(fMaxSlots.begin(), fMaxSlots.end()); }. std::string GetActionName() { return ""MaxSlot""; }; };. int main() {; auto df = ROOT::RDataFrame(1).Define(""x"", [] { return 1; });; SimpleFiller sf;; auto filled = df.Fill(sf, {""x""});; MaxSlotHelper ms(1);; auto max = df.Book<int>(ms, {""x""});; }; ```. The problem is with the template type deduction using forwarding references, we probably need to pass the `T` through `std::decay` to remove ref/const qualifiers.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8465:89,Simpl,SimpleFiller,89,https://root.cern,https://github.com/root-project/root/issues/8465,8,['Simpl'],['SimpleFiller']
Usability,"This does not completely resolve the issue of the race conditions, but simplifies the implementation of TBufferMerger a lot by doing away with the ThreadFileMerger imported from GeantV and using TFileMerger directly.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/577:71,simpl,simplifies,71,https://root.cern,https://github.com/root-project/root/pull/577,1,['simpl'],['simplifies']
Usability,"This example would need to be modified before being put in tutorials:. 1. It should be formatted the proper way. See for instance [this one](https://github.com/root-project/root/blob/master/tutorials/graphics/arrows.C). The header should be formatted that way with a proper author name at the end.; 2. The description of the macro should be more than just a brief. May be some explanation about the site it refers to would help. In particular the download link should be to ScientificColourMaps7.zip I guess.; 3. You are using a TTree do read the .txt file. Why not, but that might be a bit ""too much"" just to read an ascii file of 3 columns. A standard C/C++ ASCII file reading is enough.; 4. The files have already 255 colors. So you do not need CreateGradientColorTable to interpolate the colors simply build the palette with the colors you read.; 5. Yes a static function in TColor would be also a possibiblity but the same comments apply.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8098#issuecomment-968998294:799,simpl,simply,799,https://root.cern,https://github.com/root-project/root/issues/8098#issuecomment-968998294,2,['simpl'],['simply']
Usability,"This feature is implemented via a composite pythonizor that matches `TGraph`, `TGraph2D` and their error subclasses, and pythonises their getter methods of the X,Y,Z coordinate and error arrays, which in C++ return a pointer to double. The pythonisation consists in setting the size of the array buffer that the getter method returns, so that it is known in Python and the buffer is fully usable (its length can be obtained, it is iterable).",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3540:389,usab,usable,389,https://root.cern,https://github.com/root-project/root/pull/3540,1,['usab'],['usable']
Usability,"This finally fixes https://github.com/scikit-hep/iminuit/issues/637. The following changes are implemented:. 1) Store information that MnHesse reached call limit in MinimumError; - Add new states MnUnset, MnPosDef, and MnReachedCallLimit to MinimumError::Status; - Switch MinimumError status storage from bools to enum, since there is actually only one unique state at a time and toggling the bools correctly is error-prone; it also simplifies the implementation. 2) Propagate information from MinimumError to FunctionMinimum via Add. I slightly simplified the implementation of VariableMetricBuilder, the variable `hessianComputed` was not needed, the information whether Hesse was run can be obtained from the MinimumState object. Other changes (which could be broken into a separate PR):; - Removed trivial implementations of copy ctor and copy assignment in MnUserParameterState, the defaults should be used instead (rule of 0)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8176:433,simpl,simplifies,433,https://root.cern,https://github.com/root-project/root/pull/8176,2,['simpl'],"['simplified', 'simplifies']"
Usability,"This fixes #11747. As seen in https://github.com/cms-sw/cmssw/issues/40091 the code in `TPad::Close`:; ```; if (fPrimitives); fPrimitives->Clear();; if (fView) {; if (!ROOT::Detail::HasBeenDeleted(fView)) delete fView;; fView = nullptr;; }; if (fFrame) {; if (!ROOT::Detail::HasBeenDeleted(fFrame)) delete fFrame;; fFrame = nullptr;; }; ```; is failing in the case of reading a pad from a file in at least some circumstances. `TPad::Streamer` explicit set the bit `kCanDelete` on all objects in the list of primitives, thus including the view and the frame which have their `kCanDelete` bit explicitly reset elsewhere (in the code run during the initial creation of the frame and view). This means that avoiding the a double deletion (the first is now during the `fPrimitives->Clear()`) relies on the heuristic of `HasBeenDeleted` to work properly, at least in the case seen in cmssw above) it does not and lead to crash.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11763:139,Clear,Clear,139,https://root.cern,https://github.com/root-project/root/pull/11763,2,['Clear'],['Clear']
Usability,"This fixes #11747. As seen in https://github.com/cms-sw/cmssw/issues/40091 the code in `TPad::Close`:; ```; if (fPrimitives); fPrimitives->Clear();; if (fView) {; if (!ROOT::Detail::HasBeenDeleted(fView)) delete fView;; fView = nullptr;; }; if (fFrame) {; if (!ROOT::Detail::HasBeenDeleted(fFrame)) delete fFrame;; fFrame = nullptr;; }; ```; is failing in the case of reading a pad from a file in at least some circumstances. `TPad::Streamer` explicit set the bit `kCanDelete` on all objects in the list of primitives, thus including the view and the frame which have their `kCanDelete` bit explicitly reset elsewhere (in the code run during the initial creation of the frame and view). This means that avoiding the a double deletion (the first is now during the `fPrimitives->Clear()`) relies on the heuristic of `HasBeenDeleted` to work properly, at least in the case seen in cmssw above) it does not and lead to crash. Backport of https://github.com/root-project/root/pull/11763",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11849:139,Clear,Clear,139,https://root.cern,https://github.com/root-project/root/pull/11849,2,['Clear'],['Clear']
Usability,"This fixes #9136. Without this commit, SelectLooper would select the 'GenericLooper'; in the case of an emulated proxy for STL collection with (in the; name) a custom allocator. However the GenericLooper only usable; for collection with a compiled collection proxy. In particular, GenericLooper is calling the 'Next' function which; is not defined for vector ... and emulated collection. Using; it lead to an assert complaining (right fully so) that an; 'undefined' function is being called.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9764:209,usab,usable,209,https://root.cern,https://github.com/root-project/root/pull/9764,1,['usab'],['usable']
Usability,"This fixes 2 out of 3 failing cases in ROOT-9946 (https://sft.its.cern.ch/jira/browse/ROOT-9946),; and throws an exception with a clearer error for the third case (i.e. escaped strings, which still requires fixing I think?). @dpiparo in particular, lexertk fails to correctly tokenize a string like this, due to the escaped double quotes:; ```c++; std::cout << \""check\"" << std::endl; return x;; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3407:130,clear,clearer,130,https://root.cern,https://github.com/root-project/root/pull/3407,1,['clear'],['clearer']
Usability,"This fixes and cleans up the Travis runner; most notably, things like modern CMake and clang 5.0 now come by default (since last December). In theory, this should build much faster since several minutes per job was being spent waiting for apt-get to work. This moves the scripts in `.travis` to `.ci/*`. * CMake 3.9 is now installed by default on Travis: https://docs.travis-ci.com/user/build-environment-updates/2017-12-12/; * Clang 5.0 (and clang-format, clang-tidy) are now installed on Travis; * Move extensive setup to .ci/*; * Fix usage of yaml keys; * Avoid if statements by using build matrix entries; * Note clearly that one block of code will not run; * Remove comments about interleaved macOS",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1775:617,clear,clearly,617,https://root.cern,https://github.com/root-project/root/pull/1775,1,['clear'],['clearly']
Usability,This fixes that we often rebuild parts of ROOT by just doing simple git things. Before this change; we had this dependency on the header VCSRevision.h which is used by different parts of LLVM:; ```; interpreter/llvm/src/include/llvm/Support/VCSRevision.h:; input: CUSTOM_COMMAND; /home/teemperor/root/root-trunk2/.git/logs/HEAD <- Timestamp of this changes a lot!; /home/teemperor/root/root-trunk2/interpreter/llvm/src/cmake/modules/GenerateVersionFromCVS.cmake; outputs:; interpreter/llvm/src/include/llvm/Support/llvm_vcsrevision_h; interpreter/llvm/src/include/llvm/Support/CMakeFiles/llvm_vcsrevision_h; ```. After this change we no longer have the git head in here:. ```; teemperor@ftlserver ~/r/trunk-build2> ninja -t query interpreter/llvm/src/include/llvm/Support/VCSRevision.h; interpreter/llvm/src/include/llvm/Support/VCSRevision.h:; outputs:; interpreter/llvm/src/include/llvm/Support/CMakeFiles/llvm_vcsrevision_h; ```. I added two commits: One that fixes the current builds in a hacky way and one that is doing it properly but only goes into effect once we have the next LLVM upgrade (as the flag for configuring this is just added recently).,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/813:61,simpl,simple,61,https://root.cern,https://github.com/root-project/root/pull/813,1,['simpl'],['simple']
Usability,"This fixes the warning messages observed in RootBench when evaluating a not normalised RooAddPdf; where fixCoefNormalizationSet has been called. This PR should be back ported to 6.24. Now `RooAddPdf::getValV` does not print anymore the warning but avoids that `RooAbsPdf::getValV` set the stored `_normSet` to a null pointer when the passed `nset` is a null pointer. In this case `RooAddPdf` uses the default normalization set for defining the coefficients and evaluating when a normalization set is not passed explicitly , i.e. when calling `RooAddPdf::getVal(nulptr)`. ; This might have the side effect to not use the reference normalization that could have been defined previously using `fixCoefNormalization`. It is not clear if this is a wanted feature, since I don't see cases where one would need to evaluate an unnormalized `RooAddPdf`. Eventually another PR could remove `RooAddPdf::getValV`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8030:724,clear,clear,724,https://root.cern,https://github.com/root-project/root/pull/8030,1,['clear'],['clear']
Usability,"This follow-up PR further improved the situation after #12380. In particular, the staging area of a collection cannot (apparently) be iterated -- see; https://github.com/root-project/root/blob/master/io/io/src/TGenCollectionProxy.cxx#L1573.; Other uses in the ROOT repository rely on `TVirtualCollectionProxy::At()`. However, we can instead exploit the fact that the staging area is backed by an array, i.e. the elements are contiguous in memory. Use this optimization also for `kSTLvector` collections, which was a TODO anyways. This should also provide an advantage/simplification to PR #12948. ## Checklist:; - [x] tested changes locally; - [x] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13197:568,simpl,simplification,568,https://root.cern,https://github.com/root-project/root/pull/13197,1,['simpl'],['simplification']
Usability,"This follows the C++ Core Guidelines item F.16, 'For ""in"" parameters, pass cheaply-copied types by value and others by reference to const.' `RClusterIndex` consists of two 64-bit values which for most recent platforms with 64-bit pointers is cheap to copy and better to pass in two registers instead of passing a pointer to stack memory. This in turn helps some recursive calls in RNTuple, for example `RColumn::ReadV` (at the moment of writing). In numbers, this scores a single-digit performance improvement in the usual ATLAS analysis benchmark, -5% analysis runtime on my system. The other usual benchmarks show no changes beyond fluctuations. This changes was prepared by running; ```; $ git grep -l ""RClusterIndex &"" | xargs sed -i ""s/const \(ROOT::Experimental::\)\?RClusterIndex &/\\1RClusterIndex /g""; ```; then reverting the change in `RNTupleUtil.hxx` for the copy-constructor and copy-assignment operator, and finally running clang-format.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14406:26,Guid,Guidelines,26,https://root.cern,https://github.com/root-project/root/pull/14406,1,['Guid'],['Guidelines']
Usability,"This follows the proposal and discussion during the ROOT team meeting on 22/01/2024 (https://indico.cern.ch/event/1368009/). The goal for these new guidelines is to keep the git history as organized as possible, as well as have something to point (new) contributors to. A few related points/questions remain open:; - [x] Do we want to keep both `[NFC]` and `[skip-ci]` tags (what is the difference, if any)?; - [ ] Do we want to we enable automatic labeling of PRs, e.g. through https://github.com/actions/labeler?; - [ ] How are the scopes for commit summaries defined?",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14410:148,guid,guidelines,148,https://root.cern,https://github.com/root-project/root/pull/14410,1,['guid'],['guidelines']
Usability,"This follows up on a previous commit 92fbd0db47 with the title:; ```; [RF] Modernize `RooVectorDataStore::RealFullVector` class; ```. It changed the type of the `RooVectorDataStore::RealFullVector` members from `std::vector<double>*` to `std::unique_ptr<std::vector<double>>` while increasing the class version. However, while reasing old workspaces with the previous class version worked perfectly fine, there were logged errors when writing and then reading back a dataset with weight errors in ROOT `master`:. ```; TStreamerInfo::BuildOld:0: RuntimeWarning: Cannot convert RooVectorDataStore::RealFullVector::_vecE from type: vector<double> to type: vector<double>, skip element; TStreamerInfo::BuildOld:0: RuntimeWarning: Cannot convert RooVectorDataStore::RealFullVector::_vecEL from type: vector<double> to type: vector<double>, skip element; TStreamerInfo::BuildOld:0: RuntimeWarning: Cannot convert RooVectorDataStore::RealFullVector::_vecEH from type: vector<double> to type: vector<double>, skip element; ```. This was very unexpected. Maybe there is some problem with the IO of class members of type `std::unique_ptr<std::vector<double>>`. This commit suggests to fix this problem by using `std::vector<double>` directly, which makes the code much simpler anyway. It also allows us to get rid of a workaround in `RealFullVector::Streamer()` where it was not clear if this workaround is still needed or not. The class version is not incremented further, because the last increment only happened a few days ago, and no new ROOT version has been released since then.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12503:1259,simpl,simpler,1259,https://root.cern,https://github.com/root-project/root/pull/12503,2,"['clear', 'simpl']","['clear', 'simpler']"
Usability,"This goes hand-in-hand with #169 . ; These were found in a different way, though: ; By creating them with their default constructor and trying to stream them to a memory buffer (the ""StreamingTest"" of https://github.com/olifre/rootStaticAnalyzer ). . This PR demotes some class-versions for classes which break when streamed (and which are not supposed to be streamed) and makes one more member transient which should be transient (in TTreeFormula). . There's one more remaining issue:. ```; Error in <TStreamerInfo::Build>: TRandom1, discarding: const unsigned int* fTheSeeds, no [dimension]; ```. I'm not sure what the ""dimension"" should be for this member - it's not so clear from the ranlux code to me. . More issues are probably still there since rootStaticAnalyzer right now excludes some classes from testing completely if their construction / destruction using the default constructor fails.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/170:673,clear,clear,673,https://root.cern,https://github.com/root-project/root/pull/170,1,['clear'],['clear']
Usability,"This has been changed:. - Refactor PyRandomForest (coding style, smoother python integration, easier multi-class integration); - Enable multi-class classification; - Create unit-test usable with `ctest -V -R PyMVA-RandomForest` for binary classification; - Add return error codes to `PyMethodBase::Unserialize()` function; - Mark ` tmva/pymva/test/Classification.C` as deprecated (lacks dataloader, I'll remove it if PyGTB is ported as well to ctest unit-test)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/303:183,usab,usable,183,https://root.cern,https://github.com/root-project/root/pull/303,1,['usab'],['usable']
Usability,"This is a PR including a lot of work on the convolutional layer. It can be logically divided the following parts:. 1. Back propagation in CUDA (this was the most complex). 2. Forward propagation in CUDA (this was a comparatively simpler task). 3. Helper static methods such as a column based sum reduction and matrix equality checkers for every architecture. 4. An element by element detailed test case for backward and forward propagation. The one on forward propagation was designed and solved on paper. I was not able to do the same for back-propagation, instead I considered the CPU implementation to be correct and asserted that the CUDA outputs the same result. 5. Trivial bug fixes.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2216:229,simpl,simpler,229,https://root.cern,https://github.com/root-project/root/pull/2216,2,['simpl'],['simpler']
Usability,"This is a followup to commit 47c250898f3. The new algorithm to figure out the servers of a RooRealIntegral could get very expensive for large computation graphs, as seen with the ATLAS Higgs combinaiton. The problem was that there was a loop over an arguments clients for each argument in the computation graph. In this commit, loop is replaced by another loop over the computation graph in which one iterates only over the servers of the arguments that depend on the integration variables. I think this logic is even more intuitive to understand as well. I learned also that iterating over clients is never a good idea, because while the number of servers is well defined, there can be arbitrary many clients, making the performance very unpredictable. It was verified with flamegraphs that the performance of the likelihood creation for the ATLAS Higgs combinaiton model is now again identical to the state before commit 47c250898f3.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11619:523,intuit,intuitive,523,https://root.cern,https://github.com/root-project/root/pull/11619,2,"['intuit', 'learn']","['intuitive', 'learned']"
Usability,"This is a proposal for an update of the Python-related documentation of RDataFrame. The first commit just moves the Python-related docs from `RDataFrame.cxx` to `_rdataframe.py` (in the `_pythonization` folder), so that it is shown in the PyROOT box. The second commit does a bit of rewording / reordering of what was there; it also removes the part about `AsRNode` (to be discussed). The third commit adds a new subsection about the pythonizations of `Histo1D`, etc. to accept a tuple for the model argument. EDIT: to be discussed too what to do with the section ""Distributed execution in Python"", I think it deserves to be outside of the PyROOT box, but perhaps we could rename it to just ""Distributed execution"". EDIT2: The doxygen entry for `MakeNumpyDataFrame` comes from the function with that name that implements the pythonization. If we don't want it to appear in the reference guide with that name, we could rename it to e.g. `MakeNumpyDataFrameImpl`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9611:887,guid,guide,887,https://root.cern,https://github.com/root-project/root/pull/9611,1,['guid'],['guide']
Usability,"This is a pull request for the development of PyTorch Interface in TMVA leveraging the PyMVA module. Feel free to comment and share feedback. I'm also maintaining a [blog](https://anirudhdagar.github.io/gsoc/) for updating my progress and sharing some insights about my project. # Progress. ## Header; - [x] Add Initial Structure for MethodPyTorch header file. ## Class MethodPyTorch; - [x] Implement the basic outline of the MethodPyTorch Class.; - [x] Implement the DeclareOptions methods.; - [x] Implement ProcessOptions methods.; - [x] Implement SetupTorchModel method.; - [x] Implement train methods. (Done); - [x] Implement simple basic structure for training; - [x] Add ability to load code from users; - [x] Convert numpy based dataloaders in TMVA to PyTorch dataloaders; - [x] Use default (optional optimizer SGD); - [x] Add savebest model; - [x] Add scheduler; - [x] Implement Validation; - [x] Add model prediction function loading ability; - [x] Implement user code ability; - [x] Implement helper function. ## Tests; - [x] Add testPyTorchClassification.C; - [x] Add generatePyTorchModelClassification.py; - [x] Load, Train model and test all the parameter arguments; - [x] Verify response after model prediction function is added.; - [x] Add testPyTorchMulticlass.C; - [x] Add generatePyTorchModelMulticlass.py; - [x] Load, Train model and test all the parameter arguments; - [x] Verify response after model prediction function is added.; - [x] Add testPyTorchRegression.C; - [x] Add generatePyTorchModelRegression.py; - [x] Load, Train model and test all the parameter arguments; - [x] Verify response after model prediction function is added. ## GPU; - [x] Make GPU Compatible (Require GPU for testing). ## Tutorials; These are implemented in #6273. ## Documentation; - [x] Improve docs",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5757:132,feedback,feedback,132,https://root.cern,https://github.com/root-project/root/pull/5757,2,"['feedback', 'simpl']","['feedback', 'simple']"
Usability,"This is a remnant of [ROOT-9254](https://sft.its.cern.ch/jira/browse/ROOT-9254). We don't need the support for dots in `TTree::GetLeaf()` anymore, but I was dragging the branch along, and this simplifies the function and makes it easy to read, so might be worth merging.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2076:193,simpl,simplifies,193,https://root.cern,https://github.com/root-project/root/pull/2076,1,['simpl'],['simplifies']
Usability,"This is a simple fix to reduce imbalance in multi-thread event-loops; with no data-source: previously we spawned one task per worker thread. Expected to break `test_emptysource`, which is fixed by [PR 96](https://github.com/root-project/roottest/pull/96) in roottest.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1104:10,simpl,simple,10,https://root.cern,https://github.com/root-project/root/pull/1104,1,['simpl'],['simple']
Usability,"This is a simplification of Snapshot's logic itself and a small performance optimization as we don't invoke the interpreter separately for each Snapshot call but we now take advantage of the same machinery that's already used by all other actions (and that merges all code to be jitted together). This PR fixes the Snapshot side of [ROOT-9790](https://sft.its.cern.ch/jira/browse/ROOT-9790), ""Lazy jitting of Cache and Snapshot"".",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6585:10,simpl,simplification,10,https://root.cern,https://github.com/root-project/root/pull/6585,1,['simpl'],['simplification']
Usability,"This is a simplified version of #7752 . It does not provide the same protection against evil doing; this will come in a subsequent PR, where `Transaction` ownership will be passed through `unique_ptr`s. Note to reviewers @vgvassilev @pcanal : You have reviewed all but the last commit, ""LookupHelper must not unload Transactions""",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7773:10,simpl,simplified,10,https://root.cern,https://github.com/root-project/root/pull/7773,1,['simpl'],['simplified']
Usability,This is a suggestion for two improvements to the class:. 1. The projected pdf should be extended if the pdf it is projecting is also extended.; 2. The projection should respect the normalization range if one is given. Submitting this PR to solicit feedback on these proposals,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12658:248,feedback,feedback,248,https://root.cern,https://github.com/root-project/root/pull/12658,1,['feedback'],['feedback']
Usability,"This is an attempt to add xRooFit to ROOT in a way that means the files from xRooFit do not need to be modified but the built code will not interfere with users who build different xRooFit on top of ROOT. I tested this locally and it compiled on my mac with the upstream master, and I was able to compile xRooFit locally on top of it and a few quick tests suggested both were usable. Creating the PR to see what the CI makes of it ....",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11851:376,usab,usable,376,https://root.cern,https://github.com/root-project/root/pull/11851,1,['usab'],['usable']
Usability,"This is an interesting situation. The build on mac12arm/cxx20 did not fail, it's ""unstable"". All tests pass but there are warnings triggered by TBB. The version is simply too old (2019). On Mac13, cxx17 or cxx20, TBB does not even build. A PR is coming to propose a fix.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13720#issuecomment-1735428320:164,simpl,simply,164,https://root.cern,https://github.com/root-project/root/pull/13720#issuecomment-1735428320,2,['simpl'],['simply']
Usability,"This is an old branch I had from when I was working on ROOT, but at the time I could not merge it because it required at least CMake 3.12 to work, and we were still requiring only 3.9 at the time. I took the time to rework the commits against the current master yesterday and today, as rebasing was too hard. The original pull request that contained these changes was https://github.com/root-project/root/pull/4299, but the refactoring of core/ was removed. I hope now this would be ok to merge to simplify a bit how libCore is built and avoid having to add include directories by hand to targets that link against libCore.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10690:498,simpl,simplify,498,https://root.cern,https://github.com/root-project/root/pull/10690,1,['simpl'],['simplify']
Usability,"This is another simple reproducible example: ; ```; #include <iostream>; #include <vector>. void Dummy(const std::vector<size_t> & targetShape) {; std::cout << ""target shape "";; for (size_t i = 0; i < targetShape.size(); i++) std::cout << targetShape[i] << "" "";; std::cout << std::endl;; }. struct Test1 {; Test1() {; Dummy({ 1 , 2 , 3, 4 });; }; };. struct Test2 {; Test2() {; Dummy({ 5 , 6 , 7});; }. };",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12164#issuecomment-1410442720:16,simpl,simple,16,https://root.cern,https://github.com/root-project/root/issues/12164#issuecomment-1410442720,2,['simpl'],['simple']
Usability,"This is critical because we might load who knows what into the frameworks. But because the fix is rather intrusive, and the OP has a simple workaround, I'll *not* backport the fixes to our existing release branches.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7955#issuecomment-856839812:133,simpl,simple,133,https://root.cern,https://github.com/root-project/root/issues/7955#issuecomment-856839812,2,['simpl'],['simple']
Usability,"This is dealt with in cppyy with a patch to TCling at https://github.com/wlav/cppyy-backend/blob/25caf988cef1f2f76705c07b7262f076e8ed0e01/cling/src/core/metacling/src/TClingCallFunc.cxx#L468-L485 . Applying this patch as-is is not possible as it does not work on all platforms and is not generic enough (doesn't take into account the case of a templated move constructor). More in general, it is not yet clear to me that we want to force the implicit move in these cases. Python does not have the equivalent concepts of smart pointers, move semantics etc., so the line is quite blurry here.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14425#issuecomment-1935515180:404,clear,clear,404,https://root.cern,https://github.com/root-project/root/issues/14425#issuecomment-1935515180,2,['clear'],['clear']
Usability,"This is done for consistency with the other backports.; The old header RStringView.h is left for backwards compatibility, and it simply includes ROOT/RStringView.hxx. Due to our cmake rules this change requires a removal of $ROOTSYS/core; (or anyway a regeneration of the cmake rules for it) in build; directories used for incremental builds. I think of this PR as a ""nice to have"", and I see no downsides, but feel free to close it if you are against such a change. @vgvassilev I did not know how to update `build/unix/module.modulemap` so I left it as is, let me know if it requires changes.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1635:129,simpl,simply,129,https://root.cern,https://github.com/root-project/root/pull/1635,1,['simpl'],['simply']
Usability,This is done in TImageDump via gStyle->SetImageScaling(x); x being a multiplication factor.; This new feature is now used in the ref guide generation with x=3.; Pictures in the ref guide are now much shaper and the text is as clear the rest of the text in the doc.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1850:133,guid,guide,133,https://root.cern,https://github.com/root-project/root/pull/1850,3,"['clear', 'guid']","['clear', 'guide']"
Usability,"This is first step to make Web GUI code running in multiple threads.; There are many threads introduced and many communication patterns are supported. 1. Provide special thread, which handle all http requests of THttpServer.; This thread serves JavaScript/HTML files and redirects websocket requests to recipients.; Try to reduce access to global ROOT structures from that thread - only list of classes for the moment is used. Potentially many THttpServer instances with such thread can run fully independent. 2. Let run websocket handlers (THttpWSHandler) in separate threads. ; Requires correct locking of shared resources. 3. Support special threads for sending data via websocket from server to clients. ; When many clients are connected to the same TWebWindow, slowest client can ; break down performance. With use of such specialized thread problem can be solved. 4. Implement all necessary locks and protections to use many TWebWindows in different user threads. ; Provide TWebWindow::Run(double) method, which allows to run window code in any user thread. . Introduce tutorials/v7/draw_mt.cxx macro, which shows how three RCanvas instances can run; in three independent thread and regularly updated. Of course, default behavior should work - all functionality runs in main thread. ; Means THttpServer requests processing, websockets processing, RCanvas handling - ; everything runs in main application thread. Simple, but not scalable. This is very preliminary code , I still plan to change/extend some API.; Any comments comments are welcome",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2487:1418,Simpl,Simple,1418,https://root.cern,https://github.com/root-project/root/pull/2487,1,['Simpl'],['Simple']
Usability,This is fixed by https://github.com/root-project/root/pull/7951 . Just wait the ref guide is rebuild. It is building now.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7996#issuecomment-826896706:84,guid,guide,84,https://root.cern,https://github.com/root-project/root/issues/7996#issuecomment-826896706,2,['guid'],['guide']
Usability,This is indeed a good improvement. A few comments/opinions:; * The variable are used within `Cling` and thus should probably be prefixed by `CLING_` rather than `ROOT_`; * The setting used/necessary is complex and maybe we ought to provide a simpler mechanism (some thing similar to ; ```; export CLING_LDSYSPATH=`cling print_ld_syspath();`; ```; * The (pre-existing) duplication of the code/feature dealing with `ldsyspath` is less than optimal.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12613#issuecomment-1514918749:242,simpl,simpler,242,https://root.cern,https://github.com/root-project/root/pull/12613#issuecomment-1514918749,2,['simpl'],['simpler']
Usability,"This is just a proposal for a simple but hopefully useful feature.; The idea is to let people check the type of a given RDF column:; ```cpp; df.GetColumnType(""x""); // returns e.g. ""int""; ```. Some usecases in which `GetColumnType` might be useful:; 1. a help to use RDF in interpreted C++ (check the type of a column, then call `df.Take<T>(""x"")` with the right type; 2. a help to write PyROOT utilities on top of RDF: often such utilities need to jit some RDF call but have no way to know what are the required template types; 3. easy way to programmatically get the type of a TTree branch (`TTree::Print` is easy but does not return anything, `TLeaf::GetTypeName` is less straightforward to use correctly, e.g. if I'm not mistaken it returns `int` for an `int[n]`). What do people think? Pinging @stwunsch @amadio @dpiparo @etejedor @Axel-Naumann",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2393:30,simpl,simple,30,https://root.cern,https://github.com/root-project/root/pull/2393,1,['simpl'],['simple']
Usability,"This is kind of annoying, both locally and in Jenkins. Is it maybe as simple to solve as; ```diff; diff --git a/root/meta/MakeProject/CMakeLists.txt b/root/meta/MakeProject/CMakeLists.txt; index 308fa288..d090321f 100644; --- a/root/meta/MakeProject/CMakeLists.txt; +++ b/root/meta/MakeProject/CMakeLists.txt; @@ -1,4 +1,4 @@; -ROOTTEST_GENERATE_DICTIONARY(stl_makeproject_test stl_makeproject_test.h LINKDEF stl_makeproject_test_linkdef.h); +ROOTTEST_GENERATE_DICTIONARY(stl_makeproject_test stl_makeproject_test.h LINKDEF stl_makeproject_test_linkdef.h DEPENDS Hist) . if(ROOT_runtime_cxxmodules_FOUND); # FIXME: For C++ modules builds, module.modulemap is generated during configuration time; ```; ?. At least, this makes `ninja stl_makeproject_test` succeed on a freshly configured build for me :thinking:",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9600#issuecomment-1018559183:70,simpl,simple,70,https://root.cern,https://github.com/root-project/root/issues/9600#issuecomment-1018559183,2,['simpl'],['simple']
Usability,"This is low priority, but I add more eyes to it: perhaps we can have a simple idea.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10535#issuecomment-1925606745:71,simpl,simple,71,https://root.cern,https://github.com/root-project/root/issues/10535#issuecomment-1925606745,2,['simpl'],['simple']
Usability,"This is meant to address the issues described in [ROOT-9739](https://sft.its.cern.ch/jira/browse/ROOT-9739). The update to the Davix configuration should not be controversial, I just added arguments forcing Davix to use the same LibXml2 library found by ROOT as well. The update to VDT is a bit weirder though. 😦 Unfortunately VDT executes a python script simply by calling `python <script>` during the CMake configuration. If there is not `python` executable in `$PATH` at this time, that fails. Now, ideally the `python` name should not be hardcoded into the VDT code at all, it should be set dynamically to whatever [FindPythonInterp](https://cmake.org/cmake/help/v3.0/module/FindPythonInterp.html) finds as `PYTHON_EXECUTABLE`. But I wanted to solve it at ""this level"" for now. So I changed the code to call CMake explicitly for configuring VDT, in an environment in which `python` should be available. (As long as it **is** called `python`. But let's not worry about that for now...). Overall, this is all for making it possible to build ROOT in the very small Ubuntu virtual machines that I use to provide ATLAS analysis release images for our users.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2829:356,simpl,simply,356,https://root.cern,https://github.com/root-project/root/pull/2829,1,['simpl'],['simply']
Usability,"This is necessary to give the user a clear error message, since otherwise the build will go on and fail anyway with a cryptic message. See [ROOT-9441](https://sft.its.cern.ch/jira/browse/ROOT-9441).",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2150:37,clear,clear,37,https://root.cern,https://github.com/root-project/root/pull/2150,1,['clear'],['clear']
Usability,"This is not really a bug, the layout is simply not set to expand X & Y, The PR #7516 solves it.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7435#issuecomment-799543441:40,simpl,simply,40,https://root.cern,https://github.com/root-project/root/issues/7435#issuecomment-799543441,2,['simpl'],['simply']
Usability,"This is really good stuff. ARM nodes are appearing on WLCG and testing on that platform will automatically improve the sw stacks of LHC experiments. The test failure needs some thinking but it does not seem a complex issue. If I may suggest this, I would also make sure that a clear indicator of the platform appears in the label of the build (""ARM"", ""Aarch""...)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16526#issuecomment-2375944990:277,clear,clear,277,https://root.cern,https://github.com/root-project/root/pull/16526#issuecomment-2375944990,2,['clear'],['clear']
Usability,"This is sadly more verbose, but I thought I'd bring all the other iterators in line with C++17 where inheriting from std::iterator is deprecated (https://en.cppreference.com/w/cpp/iterator/iterator). ; I mostly followed the guidelines here https://www.fluentcpp.com/2018/05/08/std-iterator-deprecated/",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5890:224,guid,guidelines,224,https://root.cern,https://github.com/root-project/root/pull/5890,1,['guid'],['guidelines']
Usability,"This is seen in https://cdcvs.fnal.gov/redmine/issues/25893 and is triggered by a change in CLHEP::Hep3Vector (from 3 individual members to a single array) that is stored in a sub-object of a simple object (no collection involved, it works in that case).",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8428:192,simpl,simple,192,https://root.cern,https://github.com/root-project/root/issues/8428,1,['simpl'],['simple']
Usability,"This is significant change on top of original PR. Interface of THttpServer classes changed in several places.; 1. To make clear ownership, `std::shared_ptr<THttpCallArg>` is used to exchange these objects; between application code and THttpServer.; 2. Also use `std::shared_ptr<THttpWSEngine>` for keep clear ownership of helper objects, which are supporting different websockets kinds.; 3. Use std::string to store text or binary data, assigned to THttpCallArg. ; Before special binary storage with malloc/mfree was used. Used for content and post data.; 4. Declare several methods in http classes as deprecated. For each method there is replacement with similar functionality, but other arguments. I used ROOT 6.18 as boundary, but this can be changed; 5. Latest JSROOT",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1785#issuecomment-379734333:122,clear,clear,122,https://root.cern,https://github.com/root-project/root/pull/1785#issuecomment-379734333,4,['clear'],['clear']
Usability,"This is special drawable, which I used as playground for new functionality. `RHistStatBox` class is drawable, which hold reference to histogram and can calculate statistic in range, selected in the `RFrame` on the client side. If there are several clients (several web browsers with shown canvas) each client will be able to select zoomed range individually and get right statistic. If necessary, several `RHistStatBox` for different histograms can be shown on the RCanvas - even if only one histogram is displayed. `RHistStatBox` object instance is not send to client as simple `RText` or `RLine`. Instead - only css attributes (fill, line, text colors etc) are send. This is necessary, while otherwise histogram will be send - and it can be huge. . Special `RDrawableRequest` / `RDrawableReply` classes are introduced. They allow to submit any kind of request to selected drawable from the client. Now it is universal method to access C++ functionality from JavaScript. It is replacement to `gROOT->ProcessLine()` which was used up to now. . Dedicated `RStatBoxRequest` class used to get statbox lines every time when zooming is changed. Via `friend class` relation it can access private methods in `RHistStatBox`. This is solution for methods which should remain protected from user. For the future. `RHistStatBox` can be generalized - one can extract `RStatBox` base class and use it to implement statbox for `RGraph`, `RProfile` or any other classes where it make sense. Here is actual screenshot:; ![Canvas](https://user-images.githubusercontent.com/4936580/79573534-181ec500-80bf-11ea-9326-659b06fcbdf2.png)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5379:572,simpl,simple,572,https://root.cern,https://github.com/root-project/root/pull/5379,1,['simpl'],['simple']
Usability,"This is the current state of my experiment towards enabling finer-grained axis binning comparisons that ""axis configuration is exactly the same"" or ""axis configuration is different"". Once finished, this should enable switching between several histogram merging logics, including... - The current implementation, which is maximally fast but a bit too limited (it doesn't even allow the target histogram to grow to span the source histogram range if it is able to).; * Note that said implementation did already gain some superpowers in the current state of this PR, such as ability to merge when axis bin borders are _slightly_ different.; - More permissive implementations, which trade speed for generality. Here's what should IMO be added before this PR can be considered ready to merge:. - [x] Tests, lots of them. There's some very tricky code in there, even if it got clearer over time...; - [ ] Performance optimizations to reduce the impact of comparing axis binning, including...; * [ ] Not comparing every axis bin border when the axes are equidistant; * [ ] Reducing reliance on virtual function calls, especially in loops; * [ ] Possibly early algorithm exit as soon as complete conclusions are reached (but this will only benefit worst-case scenarios where axis binnings are very different, so...); - [ ] Demonstration of a more permissive histogram merging algorithm, to cross-check that the current binning comparison info adequately enables writing one as intended.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5725:871,clear,clearer,871,https://root.cern,https://github.com/root-project/root/pull/5725,1,['clear'],['clearer']
Usability,"This is the first attempt for merging the bulk IO APIs (hidden inside the `ROOT::Internal` namespace). The initial goal here is to start getting reviewer attention and feedback. The bulk IO APIs aim to provide as fast access as possible in the case where the user is using relatively simple datatypes and the objects can be deserialized ""non-destructively"" (i.e., in-place in the existing memory buffers). For example - primitives and lists of primitives are supported; anything needing references are not. Despite the fact many of ROOT's very useful deserialization features are not supported, the limited feature set covers a range of analysis use cases. In particular, the current version of CMS's proposed NanoAOD format can be read solely via bulk APIs. Where the bulk IO APIs are applicable, we see an order-magnitude improvement in event rates for some use cases (including CMS NanoAOD). The speedup becomes more noticeable as the data read from the event is smaller (meaning the traditional ROOT IO overheads are larger). Somewhere in the neighborhood of 5KB objects read per event is the point where bulk IO APIs should be noticeably faster. This PR provides three interfaces:; - A raw, low-level interface. The user can invoke the bulk IO APIs directly and get a buffer of primitive types, serialized or deserialized. It is not envisioned this is used by users, but by API writers.; - A `TTreeReader`-like interface, `TTreeReaderFast`. This is meant to be used by users; it utilizes the low-level interface to retrieve the serialized buffer and templated code will inline the deserializing as part of iterating through the tree. The speed here is gained by the fact only a single pass in memory is needed to deserialize *and* apply user code, rather than two.; - The intent is that this interface can be extended in the future and used by `TDataFrame`, provided we can make `TDataFrame` sufficiently fast.; - A Python-based `numpy` export interface. This exposes the (possibly serialized) me",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/943:168,feedback,feedback,168,https://root.cern,https://github.com/root-project/root/pull/943,2,"['feedback', 'simpl']","['feedback', 'simple']"
Usability,"This is the manifestation of a known problem with the `std::string_view` converters, that can be reproduced without RDataFrame:; ```Python; import ROOT; import cppyy. cppyy.cppdef(""""""; void foo(std::string_view input) { std::cout << input << std::endl; }; """"""). my_string = cppyy.gbl.std.string(""test""). cppyy.gbl.foo(my_string); ```; You'll see that the output in ROOT 6.32 is empty, meaning the `string_view` is not correctly initialized. This causes the RDF code to crash. This problem was already fixed in upstream cppyy, and we have a PR open to apply these fixes:; https://github.com/root-project/root/pull/16212. However, the fix is breaking some other tests, so we can't apply them yet. Thanks for the report though, because this makes it clearer how #16212 needs to be prioritized. In the meantime, the workaround is to convert your `std::strings` into Python strings, because the conversion to `std::string_view` works for them:; ```python; for col in cols:; print(col); print( tmprdf.GetColumnType(str(col) )); ```; This workaround is also backwards compatible.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/16298#issuecomment-2306614607:747,clear,clearer,747,https://root.cern,https://github.com/root-project/root/issues/16298#issuecomment-2306614607,2,['clear'],['clearer']
Usability,"This is the second attempt for merging the bulk IO APIs (hidden inside the ROOT::Internal namespace); original version was in #943; this is a large rebase and update (particularly, removing the buffer sharing between the ROOT and the user). The initial goal here is to get another round of @pcanal attention and feedback. The bulk IO APIs aim to provide as fast access as possible in the case where the user is using relatively simple datatypes and the objects can be deserialized ""non-destructively"" (i.e., in-place in the existing memory buffers). For example - primitives and lists of primitives are supported; anything needing references are not. Despite the fact many of ROOT's very useful deserialization features are not supported, the limited feature set covers a range of analysis use cases. In particular, the current version of CMS's proposed NanoAOD format can be read solely via bulk APIs. Where the bulk IO APIs are applicable, we see an order-magnitude improvement in event rates for some use cases (including CMS NanoAOD). The speedup becomes more noticeable as the data read from the event is smaller (meaning the traditional ROOT IO overheads are larger). Somewhere in the neighborhood of 5KB objects read per event is the point where bulk IO APIs should be noticeably faster. This PR provides three interfaces:. * A raw, low-level interface. The user can invoke the bulk IO APIs directly and get a buffer of primitive types, serialized or deserialized. It is not envisioned this is used by users, but by API writers.; * A TTreeReader-like interface, TTreeReaderFast. This is meant to be used by users; it utilizes the low-level interface to retrieve the serialized buffer and templated code will inline the deserializing as part of iterating through the tree. The speed here is gained by the fact only a single pass in memory is needed to deserialize and apply user code, rather than two.; * The intent is that this interface can be extended in the future and used by TDataFrame, pr",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2519:312,feedback,feedback,312,https://root.cern,https://github.com/root-project/root/pull/2519,2,"['feedback', 'simpl']","['feedback', 'simple']"
Usability,"This is very first attempt to make ROOT I/O conform RDrawable classes with attributes.; Means objects which are managed with `shared_ptr` duplicated by direct pointer, which is used only for I/O (see `RDrawableAttributes::fContIO` member in RDrawingAttr.hxx file). Attributes stored in `std::unordered_map<std::string, std::unique_ptr<Value_t>>` class. `Value_t` has several sub-classes. It potentially can be replaced by `std::variant<bool,int,double,std::string>` once we had it full support for I/O (especially for JSON). Special ""Visitor"" class can access or modify attributes. ""Visitor"" should be base class for all kind of LineAttr, FillAttr, ... classes. Visitor can has list of default values which first: specify name and kind of existing fields, and provide defaults which can be applied to the object. RStyleNew class is set blocks of attributes with selector rule (like in vanila CSS). For the moment selector not really implemented - just simple type of class match. I/O same as for attributes, therefore RStyleNew can be transported to client in same way as attributes. In JSON attributes storage looks like:; ```; ""fAttr"" : {; ""_typename"" : ""ROOT::Experimental::RDrawableAttributes"",; ""fContIO"" : {; ""_typename"" : ""ROOT::Experimental::RDrawableAttributes::Record_t"",; ""user_class"" : """",; ""map"" : {; ""_typename"": ""unordered_map<string,ROOT::Experimental::RDrawableAttributes::Value_t*>"", ; ""line_width"": {; ""_typename"" : ""ROOT::Experimental::RDrawableAttributes::DoubleValue_t"",; ""v"" : 2; }; }; }; }; ```; I can easily exclude ""_typename"" already now. ; Also one can implement compressions rule for `DoubleValue_t` class - store only ""v"" data member that finally we should get:; ```; ""line_width"": 2; ```; New DrawableAttributes class can be use in `RPadLength` implementation.; It has three components: ""fUser"", ""fPixel"", ""fNormal"". These components can be created only when really specified. This solves problem of **undefined** state for user-coordinate part.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4352:952,simpl,simple,952,https://root.cern,https://github.com/root-project/root/pull/4352,1,['simpl'],['simple']
Usability,"This is work done by Alex Saperstein, and ANL SULI who worked with me. While working on TTreeCache learning, our Summer Intern (Alex Saperstein) observed that for simple TTrees, the basket size optimization isn’t optimal for two reasons: 1) rounding down to 512 byte blocks 2) neglecting to accommodate for ROOT offsets stored in the baskets. As a result, e.g. with simple (constant size) float array branches the basket size is to small resulting in two baskets per auto-flush. The change would be pretty straight-forward: tree/tree/src/TTree.cxx. Line; -6583 newBsize = newBsize - newBsize%512;. Should become:; +6583 if (pass) { // only on the second pass so that it doesn't interfere with scaling; +6583 Int_t nevbuf = branch->GetBasket(0)->GetNevBuf();; +6583 newBsize = newBsize + (nevbuf \* sizeof(Int_t) \* 2); // make room for meta data; +6583 newBsize = newBsize - newBsize%512 + 512; // rounds up; +6583 }. Tests on simple data show that with this the baskets end up more appropriately sized so that all the auto-flush data fits.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/238:99,learn,learning,99,https://root.cern,https://github.com/root-project/root/pull/238,4,"['learn', 'simpl']","['learning', 'simple']"
Usability,"This issue was brought up for discussion within the team. As things currently stand, the benefits of introducing the uppercase version of these function in the `VecOps` namespace is not clear. The decision is to close this issue for now, if more users will identify this as a blocker for their use cases then we can reassess the decision. Thanks a lot @jolly-chen for taking the time to address this!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7697#issuecomment-1952800171:186,clear,clear,186,https://root.cern,https://github.com/root-project/root/issues/7697#issuecomment-1952800171,2,['clear'],['clear']
Usability,This looks like a nasty mix of runtime reflection information and IO (we use TEmulatedTuple to abstract from implementation details of the tuple class in the stl to perform IO in a simple way). @pcanal would you be able to suggest a path to improve the current situation?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8875#issuecomment-2076689182:181,simpl,simple,181,https://root.cern,https://github.com/root-project/root/issues/8875#issuecomment-2076689182,2,['simpl'],['simple']
Usability,This looks like an inconsistency in your build. I don't know how to reproduce this. If you have a step-by-step guide on how to end up with this breakage please let us know and re-open this ticket!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8178#issuecomment-848621017:111,guid,guide,111,https://root.cern,https://github.com/root-project/root/issues/8178#issuecomment-848621017,2,['guid'],['guide']
Usability,"This looks pretty good. One potential drawback (or maybe it is 'documented away') is that we now have 'more' possibility of the git tag and its RVersion.hxx to be out-of-sync. . Another thing that is not clear is whether (or not) we are losing the recording of the git commit in the ROOT banner:; ```; ------------------------------------------------------------------; | Welcome to ROOT 6.27/01 https://root.cern |; | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |; | Built for macosx64 on Feb 03 2022, 23:36:26 |; | From heads/pairOffset@v6-25-02-395-g873cf57666 |; | With Apple clang version 12.0.0 (clang-1200.0.32.29) |; | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |; ------------------------------------------------------------------; ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10077#issuecomment-1062072980:204,clear,clear,204,https://root.cern,https://github.com/root-project/root/pull/10077#issuecomment-1062072980,2,['clear'],['clear']
Usability,"This makes it possible to use _build as a build directory name under; the source directory. The actual preferred build directory name would; be `build`, but it's already taken by project files. There is a precedent in roottest in reserving `build` in .gitignore,; and some C++ project layout guidelines such as [pitchfork](https://bit.ly/3vlQwC9); suggest the usage of `build` as a reserved, preferred name for build; directories (or `_build` as a fallback).; Other precedents are entries such as `cmake-build` and `.build` in; this .gitignore, with the exact same rationale, because those are; the build directory names that CLion and VSCode pick.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8009:292,guid,guidelines,292,https://root.cern,https://github.com/root-project/root/pull/8009,1,['guid'],['guidelines']
Usability,"This makes releasing waaay simpler, more reliable, and possibly at some point convertible to a Github action?",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13620:27,simpl,simpler,27,https://root.cern,https://github.com/root-project/root/pull/13620,1,['simpl'],['simpler']
Usability,This makes the code much simpler and avoids using virtual implemetation classes with dubious inheritance chains.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12355:25,simpl,simpler,25,https://root.cern,https://github.com/root-project/root/pull/12355,1,['simpl'],['simpler']
Usability,"This method called from `CPyCppyy::CPPMethod` destructor, but also from assign operator.; Means it is strongly advisable to clear pointers to avoid potential use of destroyed objects.; Also `fConverters` must be cleaned. Indirectly discovered via DeepCode analyzers:",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7692:124,clear,clear,124,https://root.cern,https://github.com/root-project/root/issues/7692,1,['clear'],['clear']
Usability,This new release includes several fixes helping to simplify RooFit AD backend. See more at: https://github.com/vgvassilev/clad/releases/tag/v1.4,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14794:51,simpl,simplify,51,https://root.cern,https://github.com/root-project/root/pull/14794,1,['simpl'],['simplify']
Usability,"This patch includes:; - Remove existing modulemap.overlay files; Cling now can generate virtual overlay files on-demand.; - Implement `-modulemap_overlay` flag to Cling; This flag is used to tell Cling the location of modulemaps to be; overlayed. (eg. stl.modulemap, libc.modulemap); - Generate and load virtual modulemap in Cling; It is in Interpreter constructor, happens as part of cxxmodules; initialization step.; - Implement an interface to Clang CompilerInvocation which can take FileSystem pointer; Previously, Clang only took a ""string of filenames"" which clearly doesn't; work for our usecase. We already discussed this new interface at; modules meeting, so this change will land upstream.; - Add a file existence check in Clang; When compiling a pcm and when Clang saw the #include with which pcm was available; (or being generated implicitly), Clang was putting a notation of the full path to this pcm.; This caused an error when build directory was deleted, because the path didn't exist anymore. This patch enables modules to be binary distributed, and to make it; work in CMSSW enviroment.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3267:565,clear,clearly,565,https://root.cern,https://github.com/root-project/root/pull/3267,1,['clear'],['clearly']
Usability,"This patch is a tentative fix to JIRA bug [ROOT-9907](https://sft.its.cern.ch/jira/browse/ROOT-9907) (TGeoNavigator::FindNextBoundaryAndStep yields nonsensical answers with overlapping volumes). The bug seems to be due to the fact that `/CUVE_1/FAIS_1/PLAQUE_2` fails the `Contains()` check on line 1416, despite the fact that (or because?) the point is exactly on the volume boundary. Therefore, `PLAQUE_2` is not considered **at all** for limiting the current step length, which is unsound. By suppressing the `Contains()` check, we allow `snext` to be set to 0.0, which is a sensible response in this situation. I am not sure whether suppressing this check is entirely reasonable. I perused the source code for a few `TGeoShape`s and I have the impression that `DistFromOutside()` returne `TGeoShape::Big()` if the point happens to be inside the shape, but I could not find any documentation where this post-condition is clearly spelt out. If this is true for any shape, then I would argue that it is safe to omit the `Contains()` check (at worst we will end up with `snext=TGeoShape::Big()`, which is exactly what we had with the check anyway). @agheata, I hope you can take a look at this patch. Perhaps you are also aware of other places in `TGeoNavigator` where it may be wise to apply a similar correction...? Thanks.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3291:924,clear,clearly,924,https://root.cern,https://github.com/root-project/root/pull/3291,1,['clear'],['clearly']
Usability,This patch moves code which does similar things into standalone routines. This; way we make more clear the intent of use.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3865:97,clear,clear,97,https://root.cern,https://github.com/root-project/root/pull/3865,1,['clear'],['clear']
Usability,"This patch reimplemented signal handling in CMSSW. It avoids async-unsafe functions in signal handler. For reference, see the link https://github.com/bbockelm/cmssw/blob/stacktrace_handler_revisit/FWCore/Services/src/InitRootHandlers.cc. I tried this patch with some simple multi-thread test cases and it worked fine. Is there any complicated test cases I can run? I think this patch is not very ready to merge, but it achieved basic functions. Any criticisms are welcome.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/96:267,simpl,simple,267,https://root.cern,https://github.com/root-project/root/pull/96,1,['simpl'],['simple']
Usability,"This patch should simplify the cmssw modules setup. cc: @davidlange6, @smuzaffar, @oshadura",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4660:18,simpl,simplify,18,https://root.cern,https://github.com/root-project/root/pull/4660,1,['simpl'],['simplify']
Usability,"This patch was found by at least 3 different people. For example, I found it using the ""perf"" tool (if I remeber correctly, it was using gcc 4.8.4 back then and added -fno-omit-frame-pointer for compilation). The improvement of course depends on the settings. I don't understand why it takes so long to accept this patch. It is obviously correct - since if you use dynamic_cast and then do NOT check for nullptr and happily dereference the result, you can as well use a static_cast - if the old code was correct, the new one is correct as well. And the other cases, where you can simply remove the cast, are obvioulsly correct as well. By the way, I am still waiting for the invitation for a meeting in -1 month, as was announced here: https://root.cern.ch/phpBB3/viewtopic.php?f=15&t=22880 - and please please consider my patches there as well. At least give feedback. This one with the casts is by far the easiest patch. And an unrelated thing: 2 days ago I added a patch for long branch names (trying it via jira to see it that is faster): https://sft.its.cern.ch/jira/projects/ROOT/issues/ROOT-8578 - it was assigned to Helge Voss, but I think that might not be correct. For me, Helge seems to be working on algorithms mainly, but the patch is a technicality in one TMVA file and one TTree file.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/327#issuecomment-280571695:580,simpl,simply,580,https://root.cern,https://github.com/root-project/root/pull/327#issuecomment-280571695,2,"['feedback', 'simpl']","['feedback', 'simply']"
Usability,"This prevent the inappropriate execution on a rule intent for; an inner object on the outer object('s memory space). In a case where the top level branch is:; ```; 1 edm::Wrapper<std::vector<pat::CompositeCandidate, std::allocator<pat::CompositeCandidate> > >; ```; which contains; ```; 2 16, obj, vector<pat::CompositeCandidate> simple base pat::PATObject<reco::CompositeCandidate>; 3 360, overlapItems_, vector<edm::PtrVector<reco::Candidate> > simple base edm::PtrVectorBase; 4 48, cachedItems_, atomic<vector<const void*>*> ***TRANSIENT-WITH-RULE**; ```; The TStreamerInfo Action Sequence for (4) was being executed the obj branch/level. The bug was that GatherArtificialElements would drill through (3) eventhough; it was not split and it did so because it did not recognize there was a branch for; it because it added (errorneously) the name of the base class in the branch prefix.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2860:330,simpl,simple,330,https://root.cern,https://github.com/root-project/root/pull/2860,4,['simpl'],['simple']
Usability,"This proposed new Strategy in minuit2 is the same migrad behaviour as Strategy=2 but with the following changes to the Hesse calculation:; * The step and g2 tolerances have been zeroed so that the 7 cycles are forced in the diagonal-term calculation. This was found to be necessary in cases where asimov datasets were used for the minimization and there were very few iterations for the approximate covariance to be determined from. ; * Central finite difference is used for mixed partial derivatives. This requires 3 extra function evaluations per derivative, but is necessary in the case of minima where there is high curvature (in the case of high stats) and the forward finite difference (default) behaviour leads incorrectly to a non-positive-definite covariance matrix; * Return the uncorrected covariance matrix, even if it is not positive definite. This useful for checking just how far from positive-definiteness the matrix is by being able to examine the eigenvalues. . Additionally, a lower bound on the precision allowed for the spread of eigenvalues of the ""hessian"" correlation matrix (computing a correlation matrix with the hessian as if it was a covariance matrix) was reduced from 1e-6 to 1e-12 (see MnHesse.cxx) ... it is not clear why 1e-6 was the lower bound previously, but current machine precision can beat that (I get locally 1e-8). I left a comment about whether this lower bound should be made configurable or not... This new strategy was tested with a model with high statistics (almost 50 million events) where the migrad minimization was successful but the hessian was being forced positive definite. With this new Strategy 3 the hessian is accurate and positive definite in all cases tested.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13109:1245,clear,clear,1245,https://root.cern,https://github.com/root-project/root/pull/13109,1,['clear'],['clear']
Usability,"This pull request addresses Pere's comments and adds some more changes like a simple test for VecCore functionality and better support for latest VecCore changes (from version 0.3.2 to 0.4.0). It should be ready for merging, but I'd like to see all tests pass first. I tested on my own machine with several combinations of `vc=ON/OFF`, `builtin_vc=ON/OFF` and `veccore=ON/OFF`, `builtin_veccore=ON/OFF`. It should all work properly. However, since external VecCore cannot find a builtin Vc, requesting `builtin_vc=ON` and `veccore=ON` will trigger `builtin_veccore=ON` automatically. Please feel free to to make more suggestions for extra changes if necessary.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/497:78,simpl,simple,78,https://root.cern,https://github.com/root-project/root/pull/497,1,['simpl'],['simple']
Usability,"This pull request adds `std::tuple<...>` RField support (see notes below). Follow-up PR of #10631. ## Changes or fixes:; - Amend `RRecordField` offsets computation: account for padding inserted before each member to comply with the alignment requirements of the type.; - Add `std::tuple` RField support.; ISO C++ does not guarantee neither specific layout nor member names for `std::tuple`.; Therefore, for the type-erased `RTupleField`, we guess the offsets assuming that most implementations store it as a standard-layout type with members reversed w.r.t. the type list. A test has been added to check that this renders usable `RTupleField`s in all CI configurations, even when padding is added (see `char` members). ; **EDIT:** most implementations including libstdc++ (gcc), libc++ (llvm), and MSVC name members as `_0`, `_1`, ..., `_N-1`, following the order of the type list.; Use TClass to get their offsets; in case a particular `std::tuple` implementation does not define such members, an assertion will fail.; This fixes the issue of libc++ using a different member ordering w.r.t. other STL implementations (see failing test below).; - Update `specifications.md` accordingly. ## Checklist:; - [X] tested changes locally; - [X] updated the docs (if necessary). This PR fixes #10632.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10652:622,usab,usable,622,https://root.cern,https://github.com/root-project/root/pull/10652,1,['usab'],['usable']
Usability,"This pull request allows one to use user-defined (and some predefined) functions with different variables and/or parameters from what was given in the original definition. For example, a function originally defined on variable `x` with parameter `[0]` can now easily be applied to variable `y` with parameter `[alpha]` as part of another function definition. The syntax for the `TFormula` is as follows:; * `f(var0, var1, var2, ..., param0, param1, param2, ...)`. Furthermore, this PR introduces a few shortcuts:; * The syntax `[n..m]` for ranges of numbered parameters (for example, `[1..3]` expands to `[1],[2],[3]`); * To simply replace/rename parameters, the variables may be omitted; * Otherwise, if redefining variables, the parameters may be omitted (except, of course, if substituting them all for parameters if the numbers of parameters and variables are equal). This PR supports the nesting of functions (but still not recursive definitions!).",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/860:625,simpl,simply,625,https://root.cern,https://github.com/root-project/root/pull/860,1,['simpl'],['simply']
Usability,"This pull request fixes the unloading of member functions of templated classes. Specifically, the body of member functions of a templated class only gets instantiated when the function is first used, e.g. in this example below, the body for the member function `T f(T x)` (where `T` is a typename template argument for the templated struct `Foo`) will not get instantiated until `f()` is first used.; ```; `-ClassTemplateDecl; |-TemplateTypeParmDecl referenced typename depth 0 index 0 T; |-CXXRecordDecl struct Foo definition; | |-DefinitionData; | `-CXXMethodDecl f 'T (T)'; | |-ParmVarDecl 0x55e5787cac70 referenced x 'T'; | `-CompoundStmt; | `-ReturnStmt; | `-DeclRefExpr 'T' lvalue ParmVar 0x55e5787cac70 'x' 'T'; `-ClassTemplateSpecializationDecl struct Foo definition; |-DefinitionData; |-TemplateArgument type 'int'; | `-BuiltinType 'int'; |-CXXMethodDecl f 'int (int)' <<<< Instantiation pending; | `-ParmVarDecl x 'int':'int'; |-CXXConstructorDecl implicit used constexpr Foo 'void () noexcept' inline default trivial; ```; Such functions should not be deleted from the AST, but returned to the 'pending instantiation' state. Also, any function template instantiation, even if coming from an external AST source, needs some handling in order for it to be re-emitted the next time. ## Changes or fixes:; - Replace `StaticVarCollector` by simpler code. Static local variables always appear in the enclosing `DeclContext`; - Apply the patch described above. ## Checklist:; - [x] tested changes locally; - [x] updated the docs (if necessary); - [x] Passes cling test suite. This PR fixes #10049, #6439, #7970, [ROOT-10848](https://sft.its.cern.ch/jira/browse/ROOT-10848) and [ROOT-8084](https://sft.its.cern.ch/jira/browse/ROOT-8084) and (hopefully also [ROOT-8245](https://sft.its.cern.ch/jira/browse/ROOT-8245)).",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13565:1347,simpl,simpler,1347,https://root.cern,https://github.com/root-project/root/pull/13565,1,['simpl'],['simpler']
Usability,"This pull request implements the Ctrl+L keybinding (clear terminal screen) in ROOT's textinput. ## Changes or fixes:; - Adds the `Display::Clear()` member function, which clears the visible part of the screen on a TTY and moves the cursor to the home position. For Windows, this requires to temporarily enable processing of VT control sequences.; - Provide implementation for the `kCmdClearScreen` editor command. ## Checklist:; - [X] tested changes locally. This PR fixes #10057.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10078:52,clear,clear,52,https://root.cern,https://github.com/root-project/root/pull/10078,3,"['Clear', 'clear']","['Clear', 'clear', 'clears']"
Usability,"This pull request improves the internal in-memory layout of `RNTupleLocator`, its serialization/deserialization, and introduces some changes to the binary specification (see list of individual changes below). ## Changes or fixes:; - **FIX** discrepancy between non-disk locators specification and implementation: [specifications.md, Section ""Locators and Envelope Links""](https://github.com/root-project/root/blob/master/tree/ntuple/v7/doc/specifications.md#locators-and-envelope-links) stated that on non-disk locators, the 24LSb of _Size_ specify the size of the locator (and not only the size of the payload). However, _Size_ stored only the size of the payload.; - Use a `std::variant<...>` to represent type-specific information stored in the locator.; - Separate serialization of non-simple locators (i.e. those having the `T` bit set to 1). Serialization for those types is provided by `{Serialize,Deserialize}LocatorPayloadXxx()`.; - For non-disk locators (i.e., those with `T == 1`), add a _Reserved_ 8bit field that can be used by concrete backends to store 8bits of additional information per locator.; To accommodate that, _Size_ has been reduced to 16 bits, i.e. the maximum size of a locator is now 64kB, which is still enough.; - Explicitly store the locator type in a dedicated member in the `RNTupleLocator` structure. This makes it possible to have different type values even if the payload structure is identical, i.e. use the same alternative in the `fPosition` variant.; **NOTE:** given the reorder of members, `sizeof(RNTupleLocator)` is preserved before and after the changes in this branch, at least in x86_64 and libstdc++.; - Reassign the first representable value for the _Type_ (0x01) for URI string locators. This makes the entire contiguous range [0x02, 0x7f] assignable for concrete backends.; **NOTE:** given that URI locators were so far unused in produced files, the change should not break existing ntuples.; - Provide a new locator payload format: `RNTupleLocatorOb",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11828:790,simpl,simple,790,https://root.cern,https://github.com/root-project/root/pull/11828,1,['simpl'],['simple']
Usability,"This pull request introduces ntuple management at the DAOS container level, extending support for more than one ntuple to populate a container. ## Changes or fixes:; - Support for up to 2\^32 - 1 ntuples in a DAOS container, by assigning an index to a previously-unused portion of the DAOS Object ID address space. The index thus induces a subspace dedicated for all objects belonging to a given ntuple. The zeroth space (index `0`) is reserved for any container-wide metadata objects that may need to be stored in the future.; - `ROOT::Experimental::Detail::RDaosContainerNTupleLocator` is a structure that concentrates the functionality for locating and retrieving stored metadata from an ntuple by its name.; - The structure hashes the name into a well-distributed 32-bit index. Collisions are expressly forbidden to simplify implementation; a different ntuple name must be provided to the sink upon creation if an ntuple stored in the container with another name happens to have the same hash (index).; - The sink (in `RPageSinkDaos` ctor) uses the locator to assign an index for a new ntuple, which may fail if the name's resulting hash collides with some other ntuple present unless the name matches. Overwriting (""recreating"") an existing ntuple is allowed in this context.; - The source (in `RPageSourceDaos::AttachImpl()`) locates the ntuple by the name to validate that it is indeed present in storage (otherwise, an exception is thrown). The objects that are read for this validation are reused as part of the ntuple metadata deserialization procedure when attaching. ; - Unit test coverage is provided for the following cases: write and read from different ntuples in a container; and attempt to open an ntuple that was not stored there. ## Checklist:. - [x] tested changes locally + cluster on single client with libdaos 2.2.0; - [x] updated the docs (if necessary). This PR fixes #10958",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11480:820,simpl,simplify,820,https://root.cern,https://github.com/root-project/root/pull/11480,1,['simpl'],['simplify']
Usability,"This pull request is a attempt to fix the problem described here:; https://root-forum.cern.ch/t/graphical-and-variable-cuts-in-ttree-draw/32862. When a selection including a graphical cut and and other cut is done on a tree having array variables, the selected entries depend in the order in which the graphical and the normal cut are done. The simplest macro showing the problem (using the root file attached to the forum) is:. ```; {; auto file = new TFile(""ptmac.root"");; auto C = new TCanvas();; C->Divide(2,1);. TCutG *gcut = new TCutG(""CUTG"",5);; gcut->SetVarX(""z"");; gcut->SetVarY(""theta"");; gcut->SetPoint(0,-30,2);; gcut->SetPoint(1,-10,5);; gcut->SetPoint(2,-5,40);; gcut->SetPoint(3,-50,25);; gcut->SetPoint(4,-30,2);. C->cd(1); tree->Draw(""z"",""z>-20 && CUTG"","""",10000);; C->cd(2); tree->Draw(""z"",""CUTG && z>-20"","""",10000);; }; ```. without this fix the two plots are different whereas they should be the same. . Not being an expert in that part of the ROOT code, I am not completely sure this fix is the best.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3591:345,simpl,simplest,345,https://root.cern,https://github.com/root-project/root/pull/3591,1,['simpl'],['simplest']
Usability,"This pull request is the result of work done by David Clark as a summer intern at Argonne:; To prepare for multi-threaded workflows, a preloading and retaining clusters feature is introduced. This change will prevent additional reads from occurring when reading events out of sequence.; ; By setting the `MaxVirtualSize` of the tree to a negative value, entire clusters will be loaded into memory and previous clusters will be retained - the absolute value of `MaxVirtualSize` indicates how many additional clusters will be kept in memory.; ; If `TTree MaxVirtualSize` is set to a negative value, `GetEntry()` will load the entire cluster into memory, not just the first basket. `GetBasket()` is modified to call a new function `GetFreshCluster()` if `MaxVirtualSize` is negative. This function is responsible for returning a new basket and clearing out clusters from memory. Because clusters can have varying numbers of baskets, `GetFreshCluster()` reuses the first basket and clear the rest of the baskets. Reusing all baskets may be more efficient, but adds significant complexity and would not affect the typical case where each cluster only contains a single basket (all the baskets will be reused here).; ; To test the performance of the change, I read 1000 entries (about 1 GB) from a tree of randomly generated data consisting of 2000 branches. Every read had a 2.5% chance of reading 10 entries back or a 2.5% chance of reading 10 entries forward from the current entry. - Without the change enables there were 1.5 GB read in 31102 read calls. ; - With MaxVirtualSize set to -1, there were 1.1 GB read in 90 read calls.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/796:841,clear,clearing,841,https://root.cern,https://github.com/root-project/root/pull/796,2,['clear'],"['clear', 'clearing']"
Usability,"This pull request makes the ordering of parameters more intuitive. In particular, parameters whose names begin with a 'p' will only be considered numeric if followed by a number, and otherwise will be sorted in regular alphabetical order (so now [phi] will come after [alpha]). It is especially important to have an intuitive ordering of parameters, since we will be introducing syntax to specify parameters positionally.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/857:56,intuit,intuitive,56,https://root.cern,https://github.com/root-project/root/pull/857,2,['intuit'],['intuitive']
Usability,"This pull request provides a page allocator that caches previous allocations up to a certain limit. The cache is thread-local and defaults to 16 pages per thread (~1MiB per thread for default-sized pages). This PR is largely based on the concepts in #8634. Reuse of memory allocations in `RPageAllocatorCache` not only reduces calls to the global allocator but also heap fragmentation. The global allocator is thread-safe albeit locked; thus, to also reduce contention, the cache in `RPageAllocatorCache` is thread-local.; Given the small size of the (per-thread) cache, the internal structure is a simple `std::deque`. Anything more complex is not justified at the moment of this writing. . **NOTE:** Performance evaluation (specially for the multi-threaded case) should be inserted here tomorrow. ## Changes or fixes:; - Add `RPageAllocatorCache`: this templated allocator returns pages that have at least the required capacity. `DeletePage()` does not immediately deallocate memory; instead, pages are returned to a thread-local cache, dropping the smallest allocated buffer if the cache is full. If a previous page cannot be recycled, the underlying allocator `AllocT` (`RPageAllocatorHeap` by default) is used to allocate memory.; - Change the signature of `RPageSource::UnsealPage()`: `SealPage()`, the counterpart of `UnsealPage()` takes an RPage and returns an RSealedPage. Make the interface of `UnsealPage()` symmetric and return an RPage.; - Make `UnsealPage()` use `RPageAllocatorCache` by default.; - Remove stray `RPageAllocator{File,Daos}` classes. ## Checklist:; - [X] tested changes locally; - [X] updated the docs (if necessary). This PR supersedes #8634.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12279:599,simpl,simple,599,https://root.cern,https://github.com/root-project/root/pull/12279,1,['simpl'],['simple']
Usability,"This pull request replaces the implementation of `InputValidator::validate()` by simpler, more maintainable code that also fixes JIRA issue [ROOT-9202](https://sft.its.cern.ch/jira/browse/ROOT-9202). The previous implementation was unable to properly handle line continuation after ',' or '\\'. Specifically, it skipped over non-punctuation tokens, entering continuation mode even if ',' or '\' were not the last tokens in the input, e.g.; ```; int a, b; ```; or; ```; int a \ b; ```; caused cling to request more input, where it shouldn't. ## Changes or fixes:; - MetaLexer:; - Return `/*` and `*/` as independent tokens.; - Added `ReadToEndOfLine()` function (consume input until '\r', '\n', or EOF).; - Added `MetaLexer::RAII` that saves the current lexing position and restores it on destruction.; - Remove unused `LexPunctuatorAndAdvance()`.; - Rewrite of `InputValidator::validate()`. ## Checklist:; - [X] tested changes locally. Fixes [ROOT-9202](https://sft.its.cern.ch/jira/browse/ROOT-9202).",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8771:81,simpl,simpler,81,https://root.cern,https://github.com/root-project/root/pull/8771,1,['simpl'],['simpler']
Usability,This pull request simplifies the implementation of `RPageSourceDaos::LoadClusters()` as a prior step to handling the population of the page zero. A follow-up PR factors out common code for handling `kTypePageZero` locators in storage backends + enables their population in the DAOS backend. ## Checklist:; - [x] tested changes locally,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13381:18,simpl,simplifies,18,https://root.cern,https://github.com/root-project/root/pull/13381,1,['simpl'],['simplifies']
Usability,"This pull request slighly improves RClusterPool to reduce contention (due to `fLockXxxQueue` being held) in I/O and unzip; threads. To this end, each thread keeps its local buffer of elements to be processed. On wakeup, the local copy is swapped with `fXxxQueue`, which not only reduces contention but also reduces the overall number of allocations, as the internal storage of both copies is reused. The local copy should be cleared before the `std::swap()` in the next iteration. Also, the unzip thread is just notified once after all the elements are pushed into the queue. ## Checklist:; - [X] tested changes locally",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12044:425,clear,cleared,425,https://root.cern,https://github.com/root-project/root/pull/12044,1,['clear'],['cleared']
Usability,"This reduces the time to run Hesse in the ATLAS Higgs benchmark from; 123 s to 92 seconds. Given that some models take hours for this, this is a significant; improvement for the user experience. Further improvement is possible by analyzing the computation graph a bit; more to find more independent parameters (e.g., the different gammas for; stat uncertainties from different bins).",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16394:178,user experience,user experience,178,https://root.cern,https://github.com/root-project/root/pull/16394,1,['user experience'],['user experience']
Usability,"This reverts commit 2ecf45e5a37ab3f1108c5a9068b3cf330242b9dd, and makes some extra adjustments for Davix 0.6.7 to build or provide a clear error if something is missing in the system.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1907:133,clear,clear,133,https://root.cern,https://github.com/root-project/root/pull/1907,1,['clear'],['clear']
Usability,This seems fixed the symptoms. The real issue was fixed by introducing clearer separation of the way we compile some parts in core.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/722#issuecomment-312380227:71,clear,clearer,71,https://root.cern,https://github.com/root-project/root/pull/722#issuecomment-312380227,1,['clear'],['clearer']
Usability,This server/file has much more problems. ; Server uses more complex redirection rules with `x-accel-redirect` and `x-sendfile` headers.; Plus redirected filename uses URI coding.; Simple change of upper/lower case does not help. By default ROOT uses `TDavixFile` for http files reading and it ~~only~~ also fails on this file.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14429#issuecomment-1911770622:180,Simpl,Simple,180,https://root.cern,https://github.com/root-project/root/issues/14429#issuecomment-1911770622,1,['Simpl'],['Simple']
Usability,"This should be the last crop of fixes needed by ROOT-10216. In brief, the changes are to replace lookup by simpler search to avoid nested; initialization of TClasses (leading to the outer nested initialization; to end using deleted memory). Some explanation of the reasons for and details of the actual changes. With. ```; namespace User {; class TrackerVtxBase; class BeamFlux : public User::TrackerVtxBase; class NTrackerVtx : public User::BeamFlux; }; ```. We had a crash during BuildOld for User::BeamFlux. ```; User::TBaseObject triggers replacement routines.; reaches NTrackerVtx; calls (unnecessary) TStreamerBase::InitStreaming() and BuildOld for BeamFlux; in BuildOld look at base User::TrackerVtxBase (and record pointer value in baseclass); calls Init on the TStreamerElement base; this triggers the creation of the TClass for User::TrackerVtxBase; but BuildOld kept a stale pointer to the old TClass (was baseclass variable).; ```. Solution: replace raw pointer by a TClassRef. TCompInfo::Update did a TClass::GetClass for all type that were not classes :(; Usually it is just a waste of time.; In this case, one such type is User::TContext::Time (an enum) use as part; of User::TContext .. Consequently, before the dictionary TClass for User::TContext was constructed,; another class requested the update of the emulated StreamerInfo for the (still); emulated User::TContext, this in turn provoked the (unnecessary) call to; TClass::GetClass on ‘User::TContext::Time’ which provoked the creation of; the TClass for User::TContext … one of the steps is to absorb the existing; StreamerInfo (including the one being updated) and clear them (i.e. delete; the TCompInfo array) … upon return the result of the TClass::GetClass (a nullptr); is stored in deleted memory. Solution: Don’t call TClass::GetClass on non-type. ```; User::TDatum is loaded; provokes update of a StreamerInfo with a TTrueParticle; *spurrious* InitStreaming provoke need for TTrueParticle TClass; start consuming the TTr",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4389:107,simpl,simpler,107,https://root.cern,https://github.com/root-project/root/pull/4389,2,['simpl'],['simpler']
Usability,"This simple code, gives a strange behaviour when running it within the ROOT prompt in 6.28 and master.; In ROOT master and 6,28 it seems the vector is initialised with the values used the first time and not with the new ones. ; It works fine in 6.26, where the second time the vector passed to the DummyBroadCast function is initialised correctly. . ```; .L testBroadCast.hxx; Test1::Session s1;; Test2::Session s2;; ```. Here is the code : `testBroadCast.hxx`. ```; #include <iostream>; #include <vector>. template<class T>; void DummyBroadCast(const T* data, std::vector<size_t> shape, std::vector<size_t> targetShape) {. std::cout << ""target shape "";; for (size_t i = 0; i < targetShape.size(); i++) std::cout << targetShape[i] << "" "";; std::cout << std::endl;. }. namespace Test1 {. struct Session {; ; std::vector<float> fTensor_conv0bias = std::vector<float>(4);; float * tensor_conv0bias = fTensor_conv0bias.data();; std::vector<float> fTensor_conv0biasbcast = std::vector<float>(64);; float * tensor_conv0biasbcast = fTensor_conv0biasbcast.data();. Session() {. std::vector<size_t> shape = { 4 , 1 , 1 };; std::vector<size_t> targetShape = { 2 , 4 , 4, 4 };; DummyBroadCast(tensor_conv0bias, shape, targetShape);. }. };; }. namespace Test2 {. struct Session {. std::vector<float> fTensor_conv0bias = std::vector<float>(4);; float * tensor_conv0bias = fTensor_conv0bias.data();; std::vector<float> fTensor_conv0biasbcast = std::vector<float>(100);; float * tensor_conv0biasbcast = fTensor_conv0biasbcast.data();. Session() {. std::vector<size_t> shape = { 4 , 1 , 1 };; std::vector<size_t> targetShape = { 2 , 4 , 5, 5 };; DummyBroadCast(tensor_conv0bias, shape, targetShape);; // DummyBroadCast(tensor_conv0bias, { 4 , 1 , 1 }, { 2 , 4 , 5, 5 });. }. };; }; ```; ; This affects some failures seen in SOFIE test like ; https://lcgapp-services.cern.ch/root-jenkins/view/ROOT%20Nightly/job/root-nightly-master/LABEL=ROOT-ubuntu2204,SPEC=soversion,V=master/lastCompletedBuild/testReport/projectroo",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12164:5,simpl,simple,5,https://root.cern,https://github.com/root-project/root/issues/12164,1,['simpl'],['simple']
Usability,"This simplifies client code and it makes it simpler to evolve RColumnRegister internals in the future, which will be needed e.g. for bulk processing in RDF.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10844:5,simpl,simplifies,5,https://root.cern,https://github.com/root-project/root/pull/10844,2,['simpl'],"['simpler', 'simplifies']"
Usability,"This test is disabled because it is broken in ctest! Even if you install all dependencies in a fresh virtual env with:; ```; pip install -r requirements.txt; ```; it will not notice that some requirements like pytorch or tensorflow are there. This is observed on both macOS and Linux.; Just running the test with python dependency_versions.py works fine, so the problem relates to the ctest configuration. Here is the output when I ran the test with Python in a fresh environment with all dependencies installed:; ```; /home/rembserj/spaces/master/root/src/root/bindings/pyroot/pythonizations/test/dependency_versions.py:2: DeprecationWarning: pkg_resources is deprecated as an API. See https://setuptools.pypa.io/en/latest/pkg_resources.html; import pkg_resources; Attempting requirement 'numpy>=1.4.1'; Attempting requirement 'scikit-learn'; Attempting requirement 'xgboost'; Attempting requirement 'tensorflow'; Attempting requirement 'torch'; Attempting requirement 'numba>=0.47.0; python_version < ""3.11""'; Attempting requirement 'numba>=0.57.0; python_version >= ""3.11"" and python_version < ""3.12""'; Attempting requirement 'cffi>=1.9.1'; Attempting requirement 'notebook>=4.4.1'; Attempting requirement 'metakernel>=0.20.0'; Ignore dependency pyspark>=2.4; Ignore dependency dask>=2022.08.1; python_version >= ""3.8""; Ignore dependency distributed>=2022.08.1; python_version >= ""3.8""; .; ----------------------------------------------------------------------; Ran 1 test in 0.149s. OK; ```. And here is the output with ctest:; ```; AILED (errors=1); Attempting requirement 'numpy>=1.4.1'; Attempting requirement 'scikit-learn'; Attempting requirement 'xgboost'; Attempting requirement 'tensorflow'; Attempting requirement 'torch'; Attempting requirement 'numba>=0.47.0; python_version < ""3.11""'; Attempting requirement 'numba>=0.57.0; python_version >= ""3.11"" and python_version < ""3.12""'; Attempting requirement 'cffi>=1.9.1'; Attempting requirement 'notebook>=4.4.1'; Attempting requirement 'me",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15272:836,learn,learn,836,https://root.cern,https://github.com/root-project/root/pull/15272,1,['learn'],['learn']
Usability,"This turned out to be quite a bit harder to fix than I anticipated, but now almost all headers should be picked from the source directory, and many missing dependencies were added. After I also fix `ROOT_GENERATE_EXECUTABLE()` to use headers from the source directory, then generate headers out of `${CMAKE_BINARY_DIR}/include` and add them to their respective owning targets, we should be able to move the headers to the build directory only at the very end of the build in order to make ROOT usable from the build directory. However, in order to catch missing includes and other dependencies at build time, we need to keep using headers from the source directory only during the build.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4299:494,usab,usable,494,https://root.cern,https://github.com/root-project/root/pull/4299,1,['usab'],['usable']
Usability,This tutorial was not properly displayed in the ref guide.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8203:52,guid,guide,52,https://root.cern,https://github.com/root-project/root/pull/8203,1,['guid'],['guide']
Usability,This updates the checked in version of the TMVA User's guide to reflect the state of the tex sources.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2465:55,guid,guide,55,https://root.cern,https://github.com/root-project/root/pull/2465,1,['guid'],['guide']
Usability,This was a nice exercise which demonstrated that fine grained parallelism can be exploited easily for reading individual branches. The amount of areas which need further investigation cannot be tackled at the moment. I therewith propose to keep this PR in mind in the future when it will be necessary to parallelise reading within an individual branch and take home the lessons learned during the development of this code.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1468#issuecomment-366987643:378,learn,learned,378,https://root.cern,https://github.com/root-project/root/pull/1468#issuecomment-366987643,2,['learn'],['learned']
Usability,"This was the intent, the regex was simply broken and did not take the trailing versioning part into account.; Now, -patches as minor "".99"", otherwise as expected.; This can be improved in the future by also adding the commit count to patches, aka 6.16.06.42 for the 42th commit after 6.16.06.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3864:35,simpl,simply,35,https://root.cern,https://github.com/root-project/root/pull/3864,1,['simpl'],['simply']
Usability,This will allow us to simplify our ASTConsumer model instead of creating many multiplexers that are not needed. That should simplify adoption of latest versions of clad.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15398:22,simpl,simplify,22,https://root.cern,https://github.com/root-project/root/pull/15398,2,['simpl'],['simplify']
Usability,"This works now fine on 6.28/04, it no longer crashes. ```; root -l; root [0] int x; (int) 0; root [1] .undo; root [2] x; (int) 0; root [3] .undo; root [4] .undo; root [5] x; input_line_12:2:3: error: use of undeclared identifier 'x'; (x); ^; Error in <HandleInterpreterException>: Error evaluating expression (x); Execution of your code was aborted.; root [6] x; input_line_14:2:3: error: use of undeclared identifier 'x'; (x); ^; Error in <HandleInterpreterException>: Error evaluating expression (x); Execution of your code was aborted.; root [7] int x; (int) 0; root [8] int x; (int) 0; root [9] x; (int) 0; root [10] x; (int) 0; root [11] x; (int) 0; root [12] x; (int) 0; root [13] .undo; root [14] x; (int) 0; root [15] .undo 5; root [16] x; input_line_23:2:3: error: use of undeclared identifier 'x'; (x); ^; Error in <HandleInterpreterException>: Error evaluating expression (x); Execution of your code was aborted.; root [17] .q; ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10178#issuecomment-1812233608:103,undo,undo,103,https://root.cern,https://github.com/root-project/root/issues/10178#issuecomment-1812233608,10,['undo'],['undo']
Usability,Those `VecCore not found` bugs should be fixed by clearing the build directory. They are related to my own changes to avoid copying headers to the build directory.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/855#issuecomment-321843681:50,clear,clearing,50,https://root.cern,https://github.com/root-project/root/pull/855#issuecomment-321843681,2,['clear'],['clearing']
Usability,"Throw in a couple of `gSystem->ProcessEvents()`, maybe? :-) No idea whether that's enough to make it usable.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1037#issuecomment-331253724:101,usab,usable,101,https://root.cern,https://github.com/root-project/root/pull/1037#issuecomment-331253724,2,['usab'],['usable']
Usability,"To avoid fallback to numeric differentiation because the function is not; inlined. The pullbacks were automatically generated with Clad master, and then; manually simplified. It was carefully checked that the updated unit; tests cover all code branches of the pullback.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15501:163,simpl,simplified,163,https://root.cern,https://github.com/root-project/root/pull/15501,1,['simpl'],['simplified']
Usability,To be clear - these changes **DOES NOT CHANGE** command provided to `rootcling`. Both `include_directories(` and `target_include_directories(libname ... )` will end up in rootcling command. ; For the moment it is just expression that we do not need them for dictionary.; All these changes only will have real effect after #5181.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5269#issuecomment-607160197:6,clear,clear,6,https://root.cern,https://github.com/root-project/root/pull/5269#issuecomment-607160197,2,['clear'],['clear']
Usability,"To be clear this was failing from the original LLVM update, not because of; https://github.com/root-project/cling/commit/aea1940093488a51f8f8a970f1b68facb3fab324 or https://github.com/root-project/cling/commit/70bf1a3e8b3760af657dd1f22b81195ee6b3adb6 ?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/628#issuecomment-307480582:6,clear,clear,6,https://root.cern,https://github.com/root-project/root/pull/628#issuecomment-307480582,1,['clear'],['clear']
Usability,"To be clear, it seems to me that the following:. ```C++; diff --git a/tree/tree/src/TBranch.cxx b/tree/tree/src/TBranch.cxx; index c69a3a95e3..e80e45d8be 100644; --- a/tree/tree/src/TBranch.cxx; +++ b/tree/tree/src/TBranch.cxx; @@ -1403,6 +1403,7 @@ Int_t TBranch::GetBasketAndFirst(TBasket *&basket, Long64_t &first,; /// to perform bulk IO (reasonable type, single TLeaf, etc); the bulk IO may; /// still fail, depending on the contents of the individual TBaskets loaded.; Bool_t TBranch::SupportsBulkRead() const {; + return true;; return (fNleaves == 1) &&; (static_cast<TLeaf*>(fLeaves.UncheckedAt(0))->GetDeserializeType() != TLeaf::DeserializeType::kDestructive);; }; @@ -1432,7 +1433,7 @@ Int_t TBranch::GetBulkEntries(Long64_t entry, TBuffer &user_buf); // TODO: eventually support multiple leaves.; if (R__unlikely(fNleaves != 1)) return -1;; TLeaf *leaf = static_cast<TLeaf*>(fLeaves.UncheckedAt(0));; - if (R__unlikely(leaf->GetDeserializeType() == TLeaf::DeserializeType::kDestructive)) {return -1;}; +// if (R__unlikely(leaf->GetDeserializeType() == TLeaf::DeserializeType::kDestructive)) {return -1;}; ; // Remember which entry we are reading.; fReadEntry = entry;; @@ -1488,8 +1489,7 @@ Int_t TBranch::GetBulkEntries(Long64_t entry, TBuffer &user_buf); Int_t N = ((fNextBasketEntry < 0) ? fEntryNumber : fNextBasketEntry) - first;; //printf(""Requesting %d events; fNextBasketEntry=%lld; first=%lld.\n"", N, fNextBasketEntry, first);; if (R__unlikely(!leaf->ReadBasketFast(user_buf, N))) {; - Error(""GetBulkEntries"", ""Leaf failed to read.\n"");; - return -1;; + leaf->ReadBasket(user_buf);; }; user_buf.SetBufferOffset(bufbegin);; ```. works just fine with all the basic types.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6520#issuecomment-701704099:6,clear,clear,6,https://root.cern,https://github.com/root-project/root/issues/6520#issuecomment-701704099,2,['clear'],['clear']
Usability,"To be clear, this would just be a first step towards (partially enabled) modules on Windows",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12602#issuecomment-1787077863:6,clear,clear,6,https://root.cern,https://github.com/root-project/root/pull/12602#issuecomment-1787077863,2,['clear'],['clear']
Usability,"To be clear:. ```C++; 1 #include <TTree.h>; 2 #include <TBufferFile.h>; 3; 4 int foo() {; 5 // Otherwise, we keep with the current ROOT defaults.; 6 auto tree = new TTree(""T"", ""A ROOT tree."");; 7 short f = 1;; 8 tree->Branch(""myBranch"", &f, 32000, 1);; 9 for (Long64_t ev = 0; ev < 32000; ev++) {; 10 tree->Fill();; 11 }; 12 tree->Print();; 13; 14 TBufferFile branchbuf(TBuffer::kWrite, 32 * 1024);; 15 TBranch *branchF = tree->GetBranch(""myBranch"");; 16; 17 auto count = branchF->GetBulkRead().GetEntriesSerialized(0, branchbuf);; 18 return count;; 19 }; ```. does not work:. ```; Processing foo.cc...; ******************************************************************************; *Tree :T : A ROOT tree. *; *Entries : 32000 : Total = 65257 bytes File Size = 0 *; * : : Tree compression factor = 1.00 *; ******************************************************************************; *Br 0 :myBranch : myBranch/S *; *Entries : 32000 : Total Size= 64957 bytes All baskets in memory *; *Baskets : 2 : Basket Size= 32000 bytes Compression= 1.00 *; *............................................................................*; Error in <TBranch::GetEntriesSerialized>: Encountered a branch with destructive deserialization; failing. (int) -1; ```. However if I change `f` to be an `int` or a `float`, it does.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6520#issuecomment-703591130:6,clear,clear,6,https://root.cern,https://github.com/root-project/root/issues/6520#issuecomment-703591130,2,['clear'],['clear']
Usability,"To be more complete here is a reproducer:; ```; void ratioplot2() {; gStyle->SetOptStat(0);; auto c1 = new TCanvas(""c1"", ""fit residual simple"");; auto h1 = new TH1D(""h1"", ""h1"", 50, -5, 5);; h1->FillRandom(""gaus"", 2000);; h1->Fit(""gaus"", ""0"");; h1->GetXaxis()->SetTitle(""x"");; auto rp1 = new TRatioPlot(h1);; rp1->Draw();; rp1->GetLowerRefYaxis()->SetTitle(""ratio"");; rp1->GetLowerRefYaxis()->SetNdivisions(2); // the number of divisions is not changed on the Y axis lower plot.; rp1->GetUpperRefYaxis()->SetTitle(""entries"");; }; ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9172#issuecomment-949697288:135,simpl,simple,135,https://root.cern,https://github.com/root-project/root/issues/9172#issuecomment-949697288,2,['simpl'],['simple']
Usability,To be reopened to clear clutter.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6665#issuecomment-713659494:18,clear,clear,18,https://root.cern,https://github.com/root-project/root/pull/6665#issuecomment-713659494,2,['clear'],['clear']
Usability,"To clear it up in detail. With the current implementation `v[idx]` is resolved to selecting the elements by the indices **only** if the idx is of type `RVec<size_t>`. In case it is implicitely casted, from `{0, 1, 2, ...}`, the type `RVec<size_t>` is the preferred type because it's an specific overload. See following examples:. ```cpp; using namespace ROOT::VecOps;; RVec<float> v = {1, 2, 3, 4};. // Take indices explicitely; // Select directly the overload operator[](const RVec<size_t>&); RVec<size_t> idx = {0, 1};; cout << v[idx] << endl;; // Returns: { 1, 2 }. // Take indices by implicit cast; // Resolves to RVec<size_t> because it's the ""strongest"" overload; cout << v[{0, 1}] << endl;; // Returns: { 1, 2 }. // Make selection; RVec<int> s1 = {1, 1, 0, 0};; cout << v[s1] << endl;; // Returns: { 1, 2 }; RVec<unsigned int> s2 = {1, 1, 0, 0};; cout << v[s2] << endl;; // Returns: { 1, 2 }; cout << v[v<3] << endl;; // Returns: { 1, 2 }; ```. @dpiparo @bluehood From my point of view, this is exactly the expected behaviour (TBD).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2621#issuecomment-421941066:3,clear,clear,3,https://root.cern,https://github.com/root-project/root/pull/2621#issuecomment-421941066,2,['clear'],['clear']
Usability,To do that - simply checkout roottest into the `root` source directory. The build directory will utilize that instead of downloading its own copy.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/84#issuecomment-174390878:13,simpl,simply,13,https://root.cern,https://github.com/root-project/root/pull/84#issuecomment-174390878,1,['simpl'],['simply']
Usability,To make the RReader usable in multi-thread we ned to move the loch to all the COmpute funcitions in order to protect the setting of the input variables. This fixes #16600 as suggested in https://root-forum.cern.ch/t/tmva-rreader-not-multithread-safe/59662,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16616:20,usab,usable,20,https://root.cern,https://github.com/root-project/root/pull/16616,1,['usab'],['usable']
Usability,"To separate those we have now, a simple way is to use this add-on: https://addons.mozilla.org/en-US/firefox/addon/grayscale-browsing/. It will show https://root.cern.ch/doc/master/classTColor.html in grayscale mode. ![image](https://user-images.githubusercontent.com/10653970/117177407-47d76280-add1-11eb-9081-9bac9d4b4bd5.png). You can immediately see that the color scale in rainbow is not continuous, which is then misleading for colour-blinded in a 2D plot (not so much in a 3D surf like this one). kCMYK is also not great because it's dark, then lighter, then half-dark again. Others like kAquamarine have almost no contrast, it would be almost impossible to see sth there. So that would be a quick way to separate them. The idea is that the grayscale should be as proportional as possible, and monotonously increasing or decreasing. Unless it is symmetrical, then it is fine to have white in the borders and black in the centre (for example for example an axis that goes between -40 degrees and + 40 degrees, the 0 has a meaning). I guess one could do something similar for just removing red, green or blue from the image using GIMP, but for the moment with just grayscale it would be already a step.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8098#issuecomment-832849033:33,simpl,simple,33,https://root.cern,https://github.com/root-project/root/issues/8098#issuecomment-832849033,2,['simpl'],['simple']
Usability,"To this end, we now propagate compile-time information on how many columns are varied (one or more than one simultaneously) down from `Vary` to `RVariation`. We can take advantage of this information to simplify a number of; helper functions, e.g. substituting SFINAE with simple function; overloading, and to specify a storage type for results of `Vary ` expressions potentially different from the type returned by the expression itself, which will be necessary to implement bulk evaluation of systematic variations.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11149:203,simpl,simplify,203,https://root.cern,https://github.com/root-project/root/pull/11149,2,['simpl'],"['simple', 'simplify']"
Usability,Today I learned: returning a local variable calls the move-ctor by default if available.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1224:8,learn,learned,8,https://root.cern,https://github.com/root-project/root/pull/1224,1,['learn'],['learned']
Usability,"Today I read User's Guide and spotted many mistakes I noticed when reading it for the first time 15 years ago. I thought that now is the time for me to act and to finally fix them.; I'm not a native speaker, so I don't insist on all of them (I still doubt the usage of articles when I write this small report). If it's really easier for you, the next time I can try to make a push release with the corrections. The good thing that I noted is that there are some fixes in the recent html pages compared to the pdf User's Guide of 2018, so I refer to this page when I cite the mistakes:; https://root.cern/root/htmldoc/guides/users-guide/Trees.html. 14.3; is the use the TTree::Show method; \- to use; 14.4; the branches and the leaves, is TTree::Print.; \- no need for a comma; 14.6; boxes"".; \- no need for the quote.; witch is marked; \- which is marked; exposed expression; \- I think that would sound better as ""set expression"" or another adjective.; Below them there are two text widgets; \- possible, but I think 'there' is redundant here.; for specifying; \- to specify; \-\- I think this text should be checked by a native speaker for articles and other issues.; When the “Rec” box is checked, the Draw and Scan commands; \- no need for quotes around Rec (or add them around Draw and Scan); 14.7; This picture shows the TTree class:; \- should be rewritten with a reference to the picture. On the pdf manual the picture is on a separate page, away from this line!; 14.7.3; save all branch buffers every n byte.; \- bytes.; 14.7.4; When a TTree is memory resident, you set it up so that it retains retain only the last few entries.; \- retains; For example, this can be very useful for monitoring purpose.; \- just for monitoring, remove 'purpose'. Maybe rewrite this phrase.; 14.7.6; The function TTree::GetUserInfo() allows adding any object defined by a user to the tree that is not depending on the entry number.; \- allows to add to the tree any user\-defined object that doesn't depend on.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7284:20,Guid,Guide,20,https://root.cern,https://github.com/root-project/root/issues/7284,4,"['Guid', 'guid']","['Guide', 'guide', 'guides']"
Usability,"Today I searched for User's guide on the site, and wanted to share several ideas for improvement. 1\) Remove duplicate links.; In modern Web Development it's appreciated that same content has only one link on the site, and a link is meaningful in itself (see Django guidelines).; For example: from the main page I can see a link to the documentation,; https://root.cern/d/documentation.html; If I delete the last part, I get; https://root.cern/d/; which is a) meaningless b) same as the main page. ; The third link to that same page is ; https://root.cern/d/index.html. Surprisingly, the link; https://root.cern/index.html; has different contents!. Probably there is little surprise that there exists the 2nd version of the site,; https://root.cern.ch/ (with its own index.html, and all these links).; I think there should be one canonical link, and other links should redirect to that. . 2a) https://root.cern/d/documentation.html ; should ideally become just ; https://root.cern/documentation. 2b) or all documentation should be put into one directory with a clearer name, like; https://root.cern/doc/; In that case the manual (and other docs) should also be in that directory, not at; https://root.cern/manual/. 3a) User Guide is located at; https://root.cern/d/guides/users-guide.html; On parent path; https://root.cern/d/guides/; there is an automatic list of guides (which is better than nothing/forbidden), but it would be better if it was not automatic (had the same design as the other site). 3b) the same for; https://root.cern/doc/; (automatic list). 4\) As I understand, the main page for documentation is; https://root.cern.ch/d/documentation.html; There is also; https://root.cern/doc/master/; these two pages should probably be one page. 5\) Rearrange ""Provide your feedback""; I think github issues should go before the Forum in the list of options (if there are really two ways), because one can see closed and open issues (on the Forum I found several complaints about the links, but ",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7282:28,guid,guide,28,https://root.cern,https://github.com/root-project/root/issues/7282,2,['guid'],"['guide', 'guidelines']"
Usability,"Try to better fix https://github.com/root-project/root/issues/8051; In the files `Vector2-4-3D.h` the definitions in the fwd files are now duplicated, ; in order typedef like `PtEtaPhiMVector` appears defined in `Vector4D.h` in the ref guide; as it is the file users should include.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8224:236,guid,guide,236,https://root.cern,https://github.com/root-project/root/pull/8224,1,['guid'],['guide']
Usability,Try to simply update xrootd version (by M.K.Simon),MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8963:7,simpl,simply,7,https://root.cern,https://github.com/root-project/root/pull/8963,2,['simpl'],['simply']
Usability,Trying to revive this PR: did we get feedback from ATLAS? @guitargeek,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16175#issuecomment-2309556326:37,feedback,feedback,37,https://root.cern,https://github.com/root-project/root/pull/16175#issuecomment-2309556326,2,['feedback'],['feedback']
Usability,Tutorials order in the reference guide,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8342:33,guid,guide,33,https://root.cern,https://github.com/root-project/root/issues/8342,2,['guid'],['guide']
Usability,"Two fixes here:; - `REQUIRED` flag in cmake function `find_python_module` did not work because of wrongly set variable; - If the module is not found, then the function prints the response of the `import <module>` python call. This pollutes probably the cmake output if the error message of python is not simply sth like 'no module found with this name' or the function is too often called on not available modules. It looks like this:. ```; -- Found py_keras: /usr/lib/python3.5/site-packages/keras ; -- Failed to find Python module theano: Traceback (most recent call last):; File ""<string>"", line 1, in <module>; ImportError: No module named 'theano'; -- Could NOT find py_theano (missing: PY_THEANO) ; -- Found py_tensorflow: /usr/lib/python3.5/site-packages/tensorflow; ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/280#issuecomment-253640317:304,simpl,simply,304,https://root.cern,https://github.com/root-project/root/pull/280#issuecomment-253640317,1,['simpl'],['simply']
Usability,"Two fixes in CMake, which were in the way for RooFit work:; - Improve documentation/interfaces for passing LinkDefs in `ROOT_STANDARD_LIBRARY_PACKAGE`. Some functions suggest that multiple LinkDefs can be passed, but it doesn't work. I found out when trying to get this done for RooFit. The solution is to refactor all RF linkdefs into one, but with this PR, I want to make it clear that multiple LinkDefs will not work.; - ROOT_ADD_GTEST didn't allow for test labels such as LONGTEST etc. With this change, they are passed on.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4968:377,clear,clear,377,https://root.cern,https://github.com/root-project/root/pull/4968,1,['clear'],['clear']
Usability,"Typically, disparate errors that are all kinda the same mean an error was set prior by some other operation and not cleared. What then happens is that the next (any) Python operation fails, setting its own error. This is something that's new:; ```; +Exception ignored in PyObject_HasAttr(); consider using PyObject_HasAttrWithError(), PyObject_GetOptionalAttr() or PyObject_GetAttr():; ```; and may help narrow it down.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16748#issuecomment-2442692217:116,clear,cleared,116,https://root.cern,https://github.com/root-project/root/pull/16748#issuecomment-2442692217,2,['clear'],['cleared']
Usability,Undo commit bed0e943466f5cc5c86bfaf434858ba1ab8202ca.; It has some side effects for images inline via Macro_Begin/Macro End,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5433:0,Undo,Undo,0,https://root.cern,https://github.com/root-project/root/pull/5433,1,['Undo'],['Undo']
Usability,"Unfortunately I am not being paid by CERN, and I am quite overloaded. I have to dedicate my effort to work on the projects I am being paid for. Of course, I can just live with the classes as they are written. I just thought it would be good to dedicate a bit of my time to give you just some feedback/ideas so that you understand how to improve my own user experience. Of course, I understand that my user experience might be different to that of the average user experience, and the ROOT priorities are others. But it is not me who must push for CERN reputation.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14173#issuecomment-1852074907:292,feedback,feedback,292,https://root.cern,https://github.com/root-project/root/issues/14173#issuecomment-1852074907,8,"['feedback', 'user experience']","['feedback', 'user experience']"
Usability,Unfortunately simply removing `export std_config` as you suggest appears not to be sufficient with a build as described in https://github.com/root-project/root/issues/10861#issuecomment-1378895796. Trying to see if I can get more information...,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10861#issuecomment-1398569350:14,simpl,simply,14,https://root.cern,https://github.com/root-project/root/issues/10861#issuecomment-1398569350,2,['simpl'],['simply']
Usability,"Unlike histograms, `TGraph` points are not necessarily stored in memory in ascending ""X"" coordinate pattern. Generaly speaking, when adding points to the `TGraph`, they are not sorted with respect to their X values. I noticed that this breaks the fitting algorithm. . In my particular case, the `TGraph` was filled ""backwards"" - starting with points with larger X values and adding points in decreasing X. Graph plots just fine and visually looks just the same the same as if it was filled in ascending X manner. However, a simple `""gaus""` fit did not converge and ended up having a negative normalization constant (`Constant` fitting parameter). # This Pull request:; Modifies the way the `BinData` object is populated with `TGraph` points. Instead of adding `TGraph`'s points to the `BinData` in the same pattern they are aligned in the memory, we add points to the `BinData` in strictly ascending order of their X values, starting with lowest. ## Changes or fixes:; An `indexRemap` vector is created prior to populating the `BinData` object for a `TGraph`. This vector governs a new iteration strategy for the `TGraph` points allowing for the adding of the graph points to the `BinData` starting with points with lowest X coordinate values and in ongoing ascending order. ## Checklist:. - [ yes ] tested changes locally; - [ not needed ] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11183:524,simpl,simple,524,https://root.cern,https://github.com/root-project/root/pull/11183,1,['simpl'],['simple']
Usability,"Unrelated note. > auto view = ntuple->GetView<float>(""double"");; > modelA->MakeField<std::int32_t>(""int"", 42);. We strive/want to have the name of the column to be usable identifiers (so that they can be used in reading code as-if they actually were identifier (See TTree::Draw syntax and RDataFrame). Could you (likely in a separate/new PR) update the test/example to not use just the datatype as column names?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8227#issuecomment-846080791:164,usab,usable,164,https://root.cern,https://github.com/root-project/root/pull/8227#issuecomment-846080791,2,['usab'],['usable']
Usability,Update User's Guide pdf,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7279:14,Guid,Guide,14,https://root.cern,https://github.com/root-project/root/issues/7279,1,['Guid'],['Guide']
Usability,Update and simplify some code for C++14,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9071:11,simpl,simplify,11,https://root.cern,https://github.com/root-project/root/pull/9071,2,['simpl'],['simplify']
Usability,Update build guide for cling,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15972:13,guid,guide,13,https://root.cern,https://github.com/root-project/root/pull/15972,2,['guid'],['guide']
Usability,Update links of the ref guide main page,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8062:24,guid,guide,24,https://root.cern,https://github.com/root-project/root/pull/8062,2,['guid'],['guide']
Usability,Update the documentation of the TImer class showing that one needs to call ; TMVA::gConfig().SetDrawProgressBar(true);. to have the progress bar visible. . This fixes ROOT-9974,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5120:132,progress bar,progress bar,132,https://root.cern,https://github.com/root-project/root/pull/5120,1,['progress bar'],['progress bar']
Usability,Update the ref guide main page,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8887:15,guid,guide,15,https://root.cern,https://github.com/root-project/root/pull/8887,2,['guid'],['guide']
Usability,"Update:. After a very productive chat with @eguiraud we found out that this time `TTree::ChangeFile` is not trying to delete the `TBufferMergerFile`s attached to the `TBufferMerger`, but the `TFileMerger` attached to said `TBufferMerger`. The initial patch does not work since the `fOutputFile` member of `TFileMerger` is not a derivate of `TMemFile` and is the one that is getting changed in the process. The design of `TFileMerger` is of using `fOutputFile` as the file where all the data is merged, so of course it should never be deleted. A simple call to `TTree::SetMaxTreeSize()` with a very large size inside `ROOT::Internal::RDF::SnapshotHelperMT::Finalize()` solves the reproducer I attached in the last message.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6570#issuecomment-708403160:545,simpl,simple,545,https://root.cern,https://github.com/root-project/root/pull/6570#issuecomment-708403160,2,['simpl'],['simple']
Usability,Updated markdown documentation(user guide) for ROOT-R. Cheers.; Omar.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/131:36,guid,guide,36,https://root.cern,https://github.com/root-project/root/pull/131,1,['guid'],['guide']
Usability,"Updated. > It seems ok for me... I do not see how it could be more ""friendly""?. By *fiendly* I mean ""prevent damaging or changing the appearance of due to line break, especially when long strings are encountered"". In the original patch, it provided a general way (from `TVirtulaPS`) to specify different characters (aside from white spaces) to break the line at, and the option to drop the white space at which the line break happens to prevent additional white spaces from showing up in the image when cutting through a long sentence. In the updated patch, a customised `PrintFast` method is created inside `TSVG` that provides more customization (e.g. it's natural to cut between tags `><` in XML) in addition to features from the original patch, while keeping the `TVirtualPS` simple.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9518#issuecomment-1047616127:780,simpl,simple,780,https://root.cern,https://github.com/root-project/root/pull/9518#issuecomment-1047616127,2,['simpl'],['simple']
Usability,Updates of latex files of TMVA users guide,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5710:37,guid,guide,37,https://root.cern,https://github.com/root-project/root/pull/5710,1,['guid'],['guide']
Usability,Usability of TExecutor::MapReduce,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7871:0,Usab,Usability,0,https://root.cern,https://github.com/root-project/root/issues/7871,1,['Usab'],['Usability']
Usability,Usability. The drawing options are the more common entity to be accessed. I will add a DrawAndGetDrawable in a future revision.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1130#issuecomment-334249130:0,Usab,Usability,0,https://root.cern,https://github.com/root-project/root/pull/1130#issuecomment-334249130,1,['Usab'],['Usability']
Usability,"Use `=delete` specifier for copy/assign methods which were marked as ""not implemented"". Remove copy/assign operator for following classes:; * TVirtualGeoTrack; * TGeoTrack; * TGeoUniformMagField; * TGeoPolygon; * TGeoBuilder; * TGeoPhysicalNode; * TGeoStateInfo; * TGeoManager. In most these classes copy constructor was copying pointer on internal allocated memory.; Means it was clearly errors and cannot be used this way. Also implement TGeoBoolNode::AssignPoints() method.; Used in all `GetNpoints` methods to set points arrays.; Plus modernize TGeoBoolNode classes - uses `override` specifier.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5058:381,clear,clearly,381,https://root.cern,https://github.com/root-project/root/pull/5058,1,['clear'],['clearly']
Usability,Use clear =delete statements in TObjectSpy and TBufer3D classes declarations,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4524:4,clear,clear,4,https://root.cern,https://github.com/root-project/root/pull/4524,1,['clear'],['clear']
Usability,"Use exactly the same BrowserModel for implementing hierarchy browser in both components; Code is maintained with RBrowser, Geometry viewer reuses components.; C++ I/O classes also moved to RBrowserItem.hxx, make I/O model more flexible to support fully different items in the future.; Simplify data structures in RBrowser, first sorting approach is shown",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3759:285,Simpl,Simplify,285,https://root.cern,https://github.com/root-project/root/pull/3759,1,['Simpl'],['Simplify']
Usability,Use in the Deep Learning the Fast implementation of Tanh from VDT,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2567:16,Learn,Learning,16,https://root.cern,https://github.com/root-project/root/pull/2567,1,['Learn'],['Learning']
Usability,"Use of cmake should significantly simplify porting on different platforms; Fix compilation and running issues on Windows, provide readme; Fix tiny issue with initialization of QWebEngine - it only can be used before creation of QApplication",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7811:34,simpl,simplify,34,https://root.cern,https://github.com/root-project/root/pull/7811,1,['simpl'],['simplify']
Usability,"Use the correct syntax for the `START` command, which is:; ```; START ""title"" [/D path] [options] ""command"" [parameters]; ```; This prevent the following error with the `.forum bug` command:; ```; root [0] .forum bug; The system cannot accept the START command parameter ""https://root-forum.cern.ch/new-topic?category=ROOT&tags=bug&body=___%0A_Please read [tips for efficient and successful posting](https:%2F%2Froot-forum.cern.ch%2Ft%2Ftips-for-efficient-and-successful-posting%2F28292) and [posting code](https:%2F%2Froot-forum.cern.ch%2Ft%2Fposting-code-read-this-first%2F28293)_%0A%0A%23%23%23 Describe the bug%0A<!--%0AA clear and concise description of what the wrong behavior is.%0A-->%0A%23%23%23 Expected behavior%0A<!--%0AA clear and concise description of what you expected to happen.%0A-->%0A%0A%23%23%23 To Reproduce%0A<!--%0ASteps to reproduce the behavior:%0A1. Your code that triggers the issue: at least a part%3B ideally something we can run ourselves.%0A2. Don't forget to attach the required input files!%0A3. How to run your code and %2F or build it, e.g. %60root myMacro.C%60, ...%0A-->%0A%0A%23%23%23 Setup%0A%60%60%60%0AROOT v6.29%2F01%0ABuilt for win32 on Jun 26 2023, 07:55:07%0AFrom heads%2Fmaster@v6-29-01-1740-ga5471d735c%0AWith MSVC 19.29.30146.0%0ABinary directory: C:\Users\bellenot\build\x86\release\bin%0A%60%60%60%0A%0A<!--%0APlease specify also how you obtained ROOT, such as %60dnf install%60 %2F binary download %2F you built it yourself.%0A-->%0A%0A%23%23%23 Additional context%0A<!--%0AAdd any other context about the problem here.%0A-->&"".; root [1]; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13106:626,clear,clear,626,https://root.cern,https://github.com/root-project/root/pull/13106,4,['clear'],['clear']
Usability,User guide: remove contradiciton on STL splitting,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12551:5,guid,guide,5,https://root.cern,https://github.com/root-project/root/pull/12551,2,['guid'],['guide']
Usability,"Using `.L` or `__attribute__((constructor))` or static initialization are good alternatives. However that does not improve usability of `.x` .; As mentioned in the first post, entry function still need renaming when file get renamed.; Also we get function redefinition error when `.x` or `.L` two scripts with same name. For example `dir0/test.C` and `dir1/dir2/test.C` (with completely different content) cannot both define their `test(...)` entry functions. They cannot be put into different namespaces either otherwise cling does not recognize them as entry functions. However, `__main__(...)` approach suffers from multiple definitions too. Unless cling unloads/drops symbol `__main__` after executing it (btw. In this case will static variables of `__main__` get destructed too?)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11299#issuecomment-1235581331:123,usab,usability,123,https://root.cern,https://github.com/root-project/root/issues/11299#issuecomment-1235581331,2,['usab'],['usability']
Usability,"Using `||` means that *any* event type would trigger the CI, as long as it was done against the main ROOT repository. I open this PR to understand why that condition was there in that way, I am sure there is a reason but it's undocumented",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14615:226,undo,undocumented,226,https://root.cern,https://github.com/root-project/root/pull/14615,1,['undo'],['undocumented']
Usability,"Using approach as before, just perform multiple `JSROOT.draw` inside; this special HTML file. When producing PDF - all these images should; be dump in single file. In all other cases correspondent number of; image files will be created. Advantage of such approach - starting web browser and loading JSROOT; scripts happens only once. Improve PDF generation. Simple 100 images can be generated in ~3 seconds (instead of 70s if doing one by one)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13244:358,Simpl,Simple,358,https://root.cern,https://github.com/root-project/root/pull/13244,1,['Simpl'],['Simple']
Usability,"Very nice PR. Thank you very much for your contribution!; Could you also please provide a simple test, to be sure the transformation is doing the right thing ? ; Thank you",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4141#issuecomment-527153019:90,simpl,simple,90,https://root.cern,https://github.com/root-project/root/pull/4141#issuecomment-527153019,2,['simpl'],['simple']
Usability,"Very nice PR. The negation functionality will be a clear upgrade of the present infrastructure. For what concerns Filter and Map, I am in favour of keeping them but *maybe* it could be discussed what is their interplay with the ones provided by VecOps for TVecs (#1613). I am of course ready to revise the implementations in #1613.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1612#issuecomment-364567901:51,clear,clear,51,https://root.cern,https://github.com/root-project/root/pull/1612#issuecomment-364567901,2,['clear'],['clear']
Usability,Very nice! Interactive rebase is awesome once you learn how to use it! 👏,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8426#issuecomment-862436129:50,learn,learn,50,https://root.cern,https://github.com/root-project/root/pull/8426#issuecomment-862436129,2,['learn'],['learn']
Usability,"Voila! Here the new plot, without the `--full-dataset` flag we run on a preskimmed and reduced subset from our own xrootd space, which finishes in ~30s. ![ref](https://user-images.githubusercontent.com/6951222/89196380-6a222280-d5aa-11ea-90d9-fb69441dca5c.png). @hageboeck Happy with this setup? With that runtime I hope we can also keep it in the doxygen build to keep the setup simple.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6107#issuecomment-668071388:380,simpl,simple,380,https://root.cern,https://github.com/root-project/root/pull/6107#issuecomment-668071388,2,['simpl'],['simple']
Usability,WIP - [TExecutor] Usability of TExecutor::MapReduce,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14718:18,Usab,Usability,18,https://root.cern,https://github.com/root-project/root/pull/14718,1,['Usab'],['Usability']
Usability,"Warning like:; ```; geom/geom/src/TGeoManager.cxx:521:4: warning: this ‘if’ clause does not guard... [-Wmisleading-indentation]; 521 | if (fHashVolumes) fHashVolumes->Clear(""nodelete""); SafeDelete(fHashVolumes);; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8316:167,Clear,Clear,167,https://root.cern,https://github.com/root-project/root/pull/8316,1,['Clear'],['Clear']
Usability,"Was this mean to go to https://github.com/root-project/root/pull/2603 ? 'Cause this one is nice and simple. Look, you get *way* fewer comments from me if you don't create PRs with 1400 lines changed in 32 files! You asked for it :-). Much of these comments are also style/pattern comments; I hope that we can move to applying them in future code even more than seeing it fixed here. But yes, apologies for killing you ;-)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2634#issuecomment-422505316:100,simpl,simple,100,https://root.cern,https://github.com/root-project/root/pull/2634#issuecomment-422505316,2,['simpl'],['simple']
Usability,"We also want a dedicated `GetDataSourceInfo`, because we have either `fDataSet->GetLabel()`, if there's a `fDataSource`, or a `TTree/TChain` type if there is a `df.GetTree` or it's a simple dataframe aka `RDataFrame(N)` if none if this is true. Coming in a separate PR.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7561#issuecomment-817717882:183,simpl,simple,183,https://root.cern,https://github.com/root-project/root/issues/7561#issuecomment-817717882,2,['simpl'],['simple']
Usability,"We are probably missing an I/O rule along the line of; ```; #pragma read sourceClass=""TNDArrayT<float>"" targetClass=""TNDArrayT<float>"" source=""Int_t fNumData; float *fData;"" target=""fData"" versions=""1"" code=""{ fData.clear(); for(int i = 0; i < onfile.fNumData; ++i) fData.push_back(onfile.fData[i]); }""; ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10382#issuecomment-1096759521:216,clear,clear,216,https://root.cern,https://github.com/root-project/root/issues/10382#issuecomment-1096759521,2,['clear'],['clear']
Usability,"We are really grateful for this feedback. The initial RHist prototype benefited a lot from it and became an even better base for the work that came after (see, e.g. https://indico.cern.ch/event/1403741/#1-thoughts-on-efficient-parall). I am marking this item as ""Won't fix"", but it should really be ""Thank you!"".",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7971#issuecomment-2241265389:32,feedback,feedback,32,https://root.cern,https://github.com/root-project/root/issues/7971#issuecomment-2241265389,2,['feedback'],['feedback']
Usability,"We are still discussing the names. The current proposal is:; ```; using TFilePtr = std::unique_ptr<TFile>;. /// Open a file with `name` for reading.; ///; /// \note: Synchronizes multi-threaded accesses through locks.; static TFilePtr OpenForRead(std::string_view name, const Options_t &opts = Options_t());. /// Open an existing file with `name` for reading and writing. If a file with; /// that name does not exist, an invalid RFilePtr will be returned.; ///; /// \note: Synchronizes multi-threaded accesses through locks.; static TFilePtr OpenForUpdate(std::string_view name, const Options_t &opts = Options_t());. /// Open a file with `name` for reading and writing. Fail (return an invalid; /// `RFilePtr`) if a file with this name already exists.; ///; /// \note: Synchronizes multi-threaded accesses through locks.; static TFilePtr Create(std::string_view name, const Options_t &opts = Options_t());. /// Open a file with `name` for reading and writing. If a file with this name; /// already exists, delete it and create a new one. Else simply create a new file.; ///; /// \note: Synchronizes multi-threaded accesses through locks.; static TFilePtr Recreate(std::string_view name, const Options_t &opts = Options_t());; ```. In the meantime, you should indeed start getting familiar with the testing infrastructure. See io/io/test for some examples.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14017#issuecomment-1821818413:1044,simpl,simply,1044,https://root.cern,https://github.com/root-project/root/pull/14017#issuecomment-1821818413,2,['simpl'],['simply']
Usability,We can change the code in the ROOT facade such that `gROOT` is always; retrieved via cppyy. This was done for `gInterpreter` and `gSystem`; already anyway. This is part of the general campaign of avoiding pythonization code in C++.; The experience of the last weeks has clearly shown that this is less robust than having the code on the Python side (see for example the discussion in #15788).,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15833:270,clear,clearly,270,https://root.cern,https://github.com/root-project/root/pull/15833,1,['clear'],['clearly']
Usability,We completely agree and the above PR implements what you propose. Apologies for the long wait for such a simple thing!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9805#issuecomment-1600982681:105,simpl,simple,105,https://root.cern,https://github.com/root-project/root/issues/9805#issuecomment-1600982681,2,['simpl'],['simple']
Usability,"We decided in a TMVA meeting that we want to update the TMVA User's Guide, e.g., such as Simon did recently for the new DNN method. That's the reason for the latex code. As far as I know (and are able to use grep), there's not yet a pandoc integration for the TMVA User's guide such as done for the other docs.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/391#issuecomment-284779477:272,guid,guide,272,https://root.cern,https://github.com/root-project/root/pull/391#issuecomment-284779477,1,['guid'],['guide']
Usability,We do not use cmake to build the reference guide. It is a separated Makefile.; Yes that file might be huge. How are managed the pictures ? they are somehow included in it ?; I will try what is suggested in your insa-lyon link,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8781#issuecomment-901752118:43,guid,guide,43,https://root.cern,https://github.com/root-project/root/issues/8781#issuecomment-901752118,2,['guid'],['guide']
Usability,"We don't update existing ROOT releases. The fix will be in the next ROOT release, which is either 6.32.08 or 6.34.00. And thanks for the feedback! Good that you know about these options already.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/16419#issuecomment-2377653005:137,feedback,feedback,137,https://root.cern,https://github.com/root-project/root/issues/16419#issuecomment-2377653005,2,['feedback'],['feedback']
Usability,"We get these symbols even for a simple hello world message. While it is not clear if we can skip all weak undefined symbols, we can certainly skip those which get resolved to libgcj.so and libitm.so. Oddly enough gcc emits a weak undefined symbol to _Jv_RegisterClasses (resolved in libgcj.so) which is some gcc/java library. _ITM_deregisterTMCloneTable and _ITM_registerTMCloneTable are emitted because (resolved in libitm.so) of pointer arithmetics for transactional memory support. The current understanding is that we can safely omit these when harvesting library dependencies. This should fix the rootbench builds.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4254:32,simpl,simple,32,https://root.cern,https://github.com/root-project/root/pull/4254,2,"['clear', 'simpl']","['clear', 'simple']"
Usability,We have a clear path to deal with this behaviour.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10556#issuecomment-1968330234:10,clear,clear,10,https://root.cern,https://github.com/root-project/root/issues/10556#issuecomment-1968330234,2,['clear'],['clear']
Usability,"We have identified in previous meetings (see [here](https://indico.cern.ch/event/945804/) and [here](https://indico.cern.ch/event/956672/)) that a typical HEP analysis benefits from a `Define` version, which evaluates only once per ""dataset"". The identifier of a ""dataset"" is not yet clear. An example scenario is given below (event weights per sample, typical for simulated datasets):. ```cpp; // Construct RDF; RDataFrame df(tree, files);. // Declare computations; auto get_scale = [](const Identifier_t& dataset); {; // dataset = filename.root/treename; if (dataset.contains(""Data"")) return 1.0;; else if (dataset.contains(""DY"")) return 0.9;; else if (dataset.contains(""WJets"")) return 1.1;; else throw std::runtime_error(""Unknown dataset"");; };; auto h = df.DefinePerSample(""weight"", get_scale); .Histo1D(""nMuon"", ""weight"");. // Access result; h->Draw();; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6745:284,clear,clear,284,https://root.cern,https://github.com/root-project/root/issues/6745,1,['clear'],['clear']
Usability,"We have seen several times in the past that users (and also ROOT devs) have a hard time figuring out what integer corresponds to ""zstd with default compression level"" (and conversely what the integer 205 means in terms of compression settings). This is due to a combination of factors:. - `hadd --help` is wrong and does not mention that the compression algorithm can be specified besides the compression level: this is https://github.com/root-project/root/issues/6438; - `ROOT:::CompressionSettings` is undocumented (I only just now realized that it does precisely this conversion). One of the overloads has one line of documentation that mention it is deprecated but it is not actually deprecated with `R__DEPRECATE` ; - expected usage of `RCompressionSetting::EAlgorithm::EValues` is unclear (see https://root.cern/doc/master/structROOT_1_1RCompressionSetting_1_1EAlgorithm.html), the docs should probably point to `ROOT::CompressionSettings`. The docstring ""Note: this is only temporarily a struct and will become a enum class hence the name. "" should probably not appear in Doxygen, seems to be a not for developers; - `ROOT::CompressionSettings` requires that the user mentions the desired compression level. most of the time users just want to use whatever ROOT's default is. IIRC there is an enum for that too, but I could not find it in Doxygen. I would suggest the following improvements:; - `hadd --help` should mention that `-f` can also be used to trigger the compression algorithm, and it could have an examples section that shows how to use it and mentions `ROOT::CompressionSettings` as the API to recover the required integer given the desired compression algorithm; - `RCompressionSetting` should be documented with an example usage and pointers to the enums/structs to be used in conjunction to it; - the deprecated `RCompressionSetting` should be actually deprecated; - `RCompressionSetting` should provide a default value for the second argument that simply provides ROOT's defaul",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8444:504,undo,undocumented,504,https://root.cern,https://github.com/root-project/root/issues/8444,1,['undo'],['undocumented']
Usability,"We have this standard tutorial: https://root.cern/doc/master/canvas2_8C.html; Without your change, the axis titles appear as you see on the reference guide online.; With your change, all the titles disappear",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8235#issuecomment-847886843:150,guid,guide,150,https://root.cern,https://github.com/root-project/root/pull/8235#issuecomment-847886843,2,['guid'],['guide']
Usability,We helped CINT parse complex code and that is not needed anymore. This will help further simpliciations when parsing dictionaries with rootcling.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12259:89,simpl,simpliciations,89,https://root.cern,https://github.com/root-project/root/pull/12259,1,['simpl'],['simpliciations']
Usability,"We implemented an iterator for field metadata in #5848, which I used to simplify `RNTupleDS` construction. I thought I'd also take the opportunity to start a `RNTupleDS` test suite (as seen at the DataFrame level, there's existing functionality tests over here: https://github.com/root-project/root/blob/master/tree/ntuple/v7/test/ntuple_rdf.cxx",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5910:72,simpl,simplify,72,https://root.cern,https://github.com/root-project/root/pull/5910,1,['simpl'],['simplify']
Usability,"We intentionally keep macros ""illegal C++"": we have a C++ interpreter and we should benefit from this, removing parts of C++ not needed for interactive use, *especially* for tutorials. We find this simplifies the tutorials. We have exceptions for tutorials where we believe many uses will be compiled. . Being able to compile the tutorials isn't a benefit in and by itself. This PR here came out of https://github.com/root-project/root/pull/10004 which claims ""Precompiles C++ script to potentially speedup (slightly) documentation building"". If that's indeed correct then that's a bug in cling. cling must be as fast as compiled code (if using the same optimizer, the same clang version as cling links against etc). So I'd like to better understand the motivation of this?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10195#issuecomment-1075129814:198,simpl,simplifies,198,https://root.cern,https://github.com/root-project/root/pull/10195#issuecomment-1075129814,2,['simpl'],['simplifies']
Usability,"We really only want Google tests in root.git (I realize I did not word that clearly enough), so I will apply your test (thanks!) to our dedicated roottest.git repo. Could you split the test into a separate commit? That way I don't mess with your changes as much :-) Or if you don't mind me messing with your commits I can also split this myself - let me know.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7031#issuecomment-804060890:76,clear,clearly,76,https://root.cern,https://github.com/root-project/root/pull/7031#issuecomment-804060890,2,['clear'],['clearly']
Usability,"We see the assert ""Specialization is already registered as lazy"" triggered; due to a hash collision of two sets of template arguments: the arguments; are different but the hash happens to be identical. Be more specific when; claiming that the specialization was already registered as lazy, by not; only comparing the hash, but also the template arguments we found under; that hash key (""structurallyEquals"" is good enough here). Fixes macOS builds with assertions enabled:; $ root.exe -l -b tutorials/multicore/mp001_fillHistos.C; where these two specializations have the same hash:. ClassTemplateSpecializationDecl 0x1019a3478 </Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/type_traits:1364:1, col:113> col:50 imported in std.type_traits hidden <undeserialized declarations> struct remove_reference definition; |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init; | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr; | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param; | |-MoveConstructor exists simple trivial needs_implicit; | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param; | |-MoveAssignment exists simple trivial needs_implicit; | `-Destructor simple irrelevant trivial needs_implicit; `-TemplateArgument type '(lambda at /Users/axel/build/root/master/deb/include/nlohmann/json.hpp:17411:24)'. while looking for the argument. RecordType 0x1038b8be0 'class (lambda at /Users/axel/build/root/master/deb/tutorials/multicore/mp001_fillHistos.C:23:20)'. # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9248:1141,simpl,simple,1141,https://root.cern,https://github.com/root-project/root/pull/9248,4,['simpl'],['simple']
Usability,"We should follow the shutdown procedure from FrontendAction::EndSourceFile which ensures clang is properly torn down. This patch allows us to write a module file without having to explicitly call CompilerInstance::clearOutputFiles. This is part of a patch intending to lay down some infrastructure to fix the conditional build of the clang-internal module _Builtin_intrinsics.pcm in the context of cmssw. I've found an easier way to do so, however, this is of generic importance for ROOT.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4675:214,clear,clearOutputFiles,214,https://root.cern,https://github.com/root-project/root/pull/4675,1,['clear'],['clearOutputFiles']
Usability,"We've discovered a bug in the backward compatibility of ROOT, which we hope can be fixed ASAP. Simply opening the attached root file (`root workspace; [workspace.root.zip](https://github.com/root-project/root/files/6334250/workspace.root.zip); .root` or otherwise) works fine in 6.22.00 but fails in 6.22.06 and master. **ROOT Crashes** which is definitely a bug, right?. I've traced the problem to https://github.com/root-project/root/blob/94a9ef70c5df97b4144a2963111702a0dcb65214/io/io/src/TStreamerInfo.cxx#L1594 ... the problem is that `old->GetValueClass()` ends up being a nullptr. Something was introduced into 6.22 branch and master branch in the past 12 months that makes this null. I am hoping a developer working on this area of the project will have an idea what's happened here!. Thanks!; Will",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7912:95,Simpl,Simply,95,https://root.cern,https://github.com/root-project/root/issues/7912,1,['Simpl'],['Simply']
Usability,"Web-based geometry viewer now extracted into separate library. Rename classes: `REveGeomViewer` -> `RGeomViewer`. By this also simplify handling of so-called ""server-side shapes"" - less data can be transferred, no extra workaround for normals calculations. Ease usage of geometry viewer in `RBrowser`. Update JSROOT",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11554:127,simpl,simplify,127,https://root.cern,https://github.com/root-project/root/pull/11554,1,['simpl'],['simplify']
Usability,"Well not quite, it broke clean builds on the `master` branch on basically all platforms... Not clear why, investigating.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12149#issuecomment-1661811809:95,clear,clear,95,https://root.cern,https://github.com/root-project/root/pull/12149#issuecomment-1661811809,2,['clear'],['clear']
Usability,"Well, I do not think it is a graphics issue. Nothing is drawn simply because the number of entries is 0:; ```; root [0] auto h2 = new TH2I(""h2"", ""h2"", 10, 0, 1, 2, 0, 2);; root [1] h2->AddBinContent(16,5); root [2] h2->GetEntries(); (double) 0.0000000; ```; May be @lmoneta may know.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14153#issuecomment-1833962747:62,simpl,simply,62,https://root.cern,https://github.com/root-project/root/issues/14153#issuecomment-1833962747,2,['simpl'],['simply']
Usability,"Well, I do not think we can rely on a given bash version just to get a pid .; Can we not have a more simple standard way to get a such identifier ?; or may be we can just have a counter ?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9966#issuecomment-1081606634:101,simpl,simple,101,https://root.cern,https://github.com/root-project/root/pull/9966#issuecomment-1081606634,2,['simpl'],['simple']
Usability,"Well, I don't think it's a GUI issue at all, but more a design issue. Why not simply organize your histograms in directories (`TDirectory`)?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13352#issuecomment-1657939361:78,simpl,simply,78,https://root.cern,https://github.com/root-project/root/issues/13352#issuecomment-1657939361,2,['simpl'],['simply']
Usability,"Well, actually it was less work than I thought.; I implemented now all the additions, changes and suggestions from @lmoneta. I used now std::vector everywhere it's features are useful. For the rest I stayed with using arrays to stay similar to all other TGraph objects. I moved the functions GetPointX, GetPointY, SetPointX, SetPointY and GetObjectInfo to the TGraph class because they apply to any TGraph object and only were in my custom class cause I could not implement them in TGraph without using a custom Root installation. I replaced the funtion SetNErrorDimensions by the functions AddYError and DeleteYError as proposed by @lmoneta. Since I think the meaning of ""dimension"" might not be 100% clear, I exchanged it to a term claryfing that it corresponds to different y errors. Besides that I implemented some further features and fixed a memory leak in the function PaintGraphMultiErrors in the TGraphPainter class. I also added a test macro testing the most critical features like streaming the class, adding / deleting points and y errors and the summation of y errors for fitting with different methods.; Furthermore, I added a small tutorial macro that shows how to use the basic functionalities of the class.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3452#issuecomment-559211358:702,clear,clear,702,https://root.cern,https://github.com/root-project/root/pull/3452#issuecomment-559211358,2,['clear'],['clear']
Usability,"Well, it was never needed as such ... it was just to make includes simpler and avoid ifdefs in every TGL file :) I'm just saying you had to change every file that used it and this is really not necessary.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4095#issuecomment-535595924:67,simpl,simpler,67,https://root.cern,https://github.com/root-project/root/pull/4095#issuecomment-535595924,2,['simpl'],['simpler']
Usability,"Well, it's a DY sample, so physically spoken we would expect the upper one (?) Let's say, it's not so clear what's going on :sweat_smile:",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6671#issuecomment-712711356:102,clear,clear,102,https://root.cern,https://github.com/root-project/root/issues/6671#issuecomment-712711356,2,['clear'],['clear']
Usability,"Well, one thing that is clear is that this problem seems to be associated with specific sites. For my 'test' job:. [test job](https://bigpanda.cern.ch/task/23578674/). The sites that are successful either have local reading, or they use xrootd without problems. The latter are: ; SWT2_CPB; IN2P3-LPSC_LAKE; RAL. For the failures, these are all just xrootd problems, at sites:; IN2P3-CPPM; CERN-T0; TOKYO; BNL. So I would suspect some difference in the xrootd installation between these two sites. (I personally have no idea how to check this.)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6948#issuecomment-747328346:24,clear,clear,24,https://root.cern,https://github.com/root-project/root/issues/6948#issuecomment-747328346,2,['clear'],['clear']
Usability,"Well, sorry but since we are in the process of moving to a Web based GUI (using openUI5), and since this is quite simple to be implemented on the user side, I don't think we're going to create a new widget. But we'll discuss this and I'll come back to you.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7156#issuecomment-776008358:114,simpl,simple,114,https://root.cern,https://github.com/root-project/root/issues/7156#issuecomment-776008358,2,['simpl'],['simple']
Usability,"Well, that argument would apply to 95 % percent of the classes in ROOT then :D Users that are adventurous to use this probably also know about C++ ownership. I personally don't think the added complexity and less clear ownership when using `shared_ptr` + `weak_ptr` is justified in this case. I think `shared_ptr` should only be used when there are really shared resources in the implementation details, not as a general solution to prevent the user from making memory management mistakes. As you say, it gives also mixed messages on how to manage the resources. Would you be okay with leaving it like this for now? We can always revisit this if need be...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12348#issuecomment-1439898961:213,clear,clear,213,https://root.cern,https://github.com/root-project/root/pull/12348#issuecomment-1439898961,2,['clear'],['clear']
Usability,"Well, there is simply no need of `gSystem->UnixPathName` all over the place...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1646#issuecomment-366686690:15,simpl,simply,15,https://root.cern,https://github.com/root-project/root/pull/1646#issuecomment-366686690,2,['simpl'],['simply']
Usability,"Well, this simple example works just fine for me on Windows and CentOS7:; ```; void testSignalSlot(); {; TGMainFrame *mainframe = new TGMainFrame(gClient->GetRoot(), 300, 170);; TGCheckButton *myTGCheckBox = new TGCheckButton(mainframe, new TGHotString(""Change Text""), -1);; mainframe->AddFrame(myTGCheckBox, new TGLayoutHints(kLHintsCenterX | kLHintsCenterY));; TGTextButton *myButton = new TGTextButton(mainframe, ""&Any Text"");; mainframe->AddFrame(myButton, new TGLayoutHints(kLHintsExpandX | kLHintsCenterY));; myTGCheckBox->Connect(""Clicked()"", ""TGTextButton"", myButton, ""ChangeText(=\""LEGOlegoemoryABCDEF\"")"");; mainframe->MapSubwindows();; mainframe->Layout();; mainframe->MapWindow();; }; ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7195#issuecomment-779084167:11,simpl,simple,11,https://root.cern,https://github.com/root-project/root/issues/7195#issuecomment-779084167,2,['simpl'],['simple']
Usability,"Well, we have other PRs tagged [WIP] ... so I guess that's fine.. I just do no like the idea of having clearly faulty code in a PR.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6469#issuecomment-704322903:103,clear,clearly,103,https://root.cern,https://github.com/root-project/root/pull/6469#issuecomment-704322903,2,['clear'],['clearly']
Usability,What Cling is really crashing on is the definition of `art::ensurePointer` or more precisely any function definition with a `try`-`catch` block as body (which I just learned is valid C++...). The problem can be seen with; ```c++; .rawInput; void f() try { } catch (...) { }; ```; (on the ROOT prompt),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9664#issuecomment-1020964451:166,learn,learned,166,https://root.cern,https://github.com/root-project/root/issues/9664#issuecomment-1020964451,2,['learn'],['learned']
Usability,"What I did with definitions is a bit too simple. If you use `target_add_defintions` (only possible for imported interface targets in CMake 3.11+), CMake strips the `-D` if there is one. If you directly set the property, however, it's up to the user to strip it. I'm still interested in the result of this test build, but I'll need to fix the definitions addition before continuing.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1959#issuecomment-385710986:41,simpl,simple,41,https://root.cern,https://github.com/root-project/root/pull/1959#issuecomment-385710986,2,['simpl'],['simple']
Usability,What about DrawCopy instead of DrawClone (keeping the simple cd) ?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5680#issuecomment-633416576:54,simpl,simple,54,https://root.cern,https://github.com/root-project/root/pull/5680#issuecomment-633416576,2,['simpl'],['simple']
Usability,What about including [this](https://root.cern/root/htmldoc/guides/users-guide/ROOTUsersGuide.html#numerical-integration) in the reference guide on [this page](https://root.cern/doc/master/group__Integration.html) ?. @lmoneta what do you think ?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7740#issuecomment-810160931:59,guid,guides,59,https://root.cern,https://github.com/root-project/root/issues/7740#issuecomment-810160931,6,['guid'],"['guide', 'guides']"
Usability,"What can be done here is rather simple. The bottleneck last time I checked is rootcling (dictionary generation). There are two reasons:; * cmake -- dictionary generation depends on LinkDef and header files and both artifacts are available from the beginning. However, the cmake build system does not have separate targets for dictionary generation and library generation. That leads to forcing rootcling to wait for the expensive linking step of each library. For example, instead of building `Y.pcm` once we are done with building `X.pcm` we wait for the linker to link `X.so`.; * rootcling is unnecessary slow -- the tool has grown organically and in many cases we make many iterations over the AST where we don't need them. Some of the larger scale ideas have been outlined here since years: https://github.com/root-project/root-evolution/pull/5 In fact, we don't need to get so much into the refactoring rootcling, attaching a profiler and seeing the bottlenecks should be easy. For example, iirc, we make several passes over the AST to harvest the selection rules instead of making a single pass.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6432#issuecomment-2001956688:32,simpl,simple,32,https://root.cern,https://github.com/root-project/root/issues/6432#issuecomment-2001956688,2,['simpl'],['simple']
Usability,"What simpler fix do you suggest? Currently `-Dbuiltin_zlib=ON` is broken. I would prefer to fix it first, because that's the real cause of the problem with AfterImage.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1527#issuecomment-362516152:5,simpl,simpler,5,https://root.cern,https://github.com/root-project/root/pull/1527#issuecomment-362516152,2,['simpl'],['simpler']
Usability,What we learned from todays PPP:. - We probably want to call it better like `Describe` (done); - We have to document clearly that the output is subject to change and should not be parsed (done); - Add number of DF runs is useful (done); - We have to figure out what to show if there are hundreds of columns; - ~We should try to follow a markdown style formatting to make it look nice in jupyter and friends~ (IMHO: Too complex),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7561#issuecomment-807097352:8,learn,learned,8,https://root.cern,https://github.com/root-project/root/issues/7561#issuecomment-807097352,4,"['clear', 'learn']","['clearly', 'learned']"
Usability,"When I naively set `SetLowBottomMargin(gStyle->GetPadBottomMargin())` and `SetUpTopMargin(gStyle->GetPadTopMargin())` they end up being different than for a simple histogram, i.e. axis labels that should fit disappear. The below example also has `SetSeparationMargin(0)` but that does not change the outer margins. ![image](https://github.com/root-project/root/assets/12029880/e0917420-0de3-4723-8ab8-531a4c6ee48f). That is jsroot plot though, on the ""normal"" one the font size for the ratio plot is bigger and even more disappears at the bottom. :(. ![image](https://github.com/root-project/root/assets/12029880/47b9ecd1-b1d5-415a-be88-d99a03a97624). The left/right margins where easy to change and the most annoying ones visually imo, so that is what I did.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15893#issuecomment-2180723430:157,simpl,simple,157,https://root.cern,https://github.com/root-project/root/pull/15893#issuecomment-2180723430,2,['simpl'],['simple']
Usability,"When TCanvas created with TWebCanvas, it will be marked as batch; This prevent most of calls to gVirtualX, while batch canvas not allowed to use TVirtualX interface. This allows to use standard TVirtualX instance - no any special huge class with simple redirection",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2805:246,simpl,simple,246,https://root.cern,https://github.com/root-project/root/pull/2805,1,['simpl'],['simple']
Usability,"When a RooDataSet is constructed without a weight variable, weights are ignored when events; are added to the dataset. Now, there will be a clear warning notifying the user that an event; weight is being ignored.; The documentation has also been updated. See also:; https://root-forum.cern.ch/t/fit-to-a-weighted-unbinned-data-set/33495",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3657:140,clear,clear,140,https://root.cern,https://github.com/root-project/root/pull/3657,1,['clear'],['clear']
Usability,"When building the reference guide, some notebook generation for the TMVA tutorials generate errors:. ```; [NbConvertApp] Writing 3244 bytes to /home/sftnight/build/workspace/root-makedoc-master/rootspi/rdoc/master_TMP/notebooks/TMVA_SOFIE_ONNX.C.nbconvert.ipynb; In file included from input_line_8:1:; /home/sftnight/build/workspace/root-makedoc-master/rootspi/rdoc/src/master/tutorials/tmva/TMVA_SOFIE_ONNX.C:15:12: error: no type named 'RModelParser_ONNX' in namespace 'TMVA::Experimental::SOFIE'; SOFIE::RModelParser_ONNX Parser;; ~~~~~~~^; ```. ```; [NbConvertApp] Writing 4914 bytes to /home/sftnight/build/workspace/root-makedoc-master/rootspi/rdoc/master_TMP/notebooks/TMVA_SOFIE_RDataFrame.C.nbconvert.ipynb; In file included from input_line_8:1:; /home/sftnight/build/workspace/root-makedoc-master/rootspi/rdoc/src/master/tutorials/tmva/TMVA_SOFIE_RDataFrame.C:28:10: fatal error: 'Higgs_trained_model.hxx' file not found; #include ""Higgs_trained_model.hxx""; ^~~~~~~~~~~~~~~~~~~~~~~~~; Info in <TMVA_SOFIE_RDataFrame>: You need to run TMVA_Higgs_Classification.C to generate the Keras trained model; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10461:28,guid,guide,28,https://root.cern,https://github.com/root-project/root/issues/10461,1,['guid'],['guide']
Usability,"When composing the expressions to jit autoparsing is redundant as we; know what and when to synthesize. This patch has two effects, first it limits the recursive behavior of; autoparse and autoload (useful for modules); and secondly avoids deep call; chains of virtual function calls. EDIT: Rationale -- I was working on a new, cxxmodules-based implementation of TCling::GetClassSharedLibs which does not rely on rootmap files. I had to debug a few failures in RDF and I noticed the recursive calls to autoparse and autoload always without success. I thought it might be a simplification (and performance optimization) if we disabled that part.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3765:573,simpl,simplification,573,https://root.cern,https://github.com/root-project/root/pull/3765,1,['simpl'],['simplification']
Usability,"When creating an object in a RooWorkspace and making a deepcopy (via `cloneTree`), one would expect that this can be imported into another RooWorkspace. However, that only works if the original workspace is still in-memory and has not been deleted yet, which seems to be a bug (given that `cloneTree` is supposed to give a copy completely independent of the original workspace).; The issue is that the exensiveObjectCache-pointer in the clone still points to the old workspace. This can be alleviated by simply resetting the expensiveObjectCache pointer in the RooAbsArg copy constructor. I have attached a patch that fixes the problem for me.; [eocache-segfault.txt](https://github.com/root-project/root/files/5312235/eocache-segfault.txt)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6529:504,simpl,simply,504,https://root.cern,https://github.com/root-project/root/issues/6529,1,['simpl'],['simply']
Usability,"When filling the result after the second fit , the covariance matrix, global correlations, parameter bounds and parameter Names were not cleared, and the new values were appended to the previous one.; This is now fixed by clearing the vectors. This fixes the problem reported in https://root-forum.cern.ch/t/problem-retrieving-minuit2-correlation-matrix/44120",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7670:137,clear,cleared,137,https://root.cern,https://github.com/root-project/root/pull/7670,2,['clear'],"['cleared', 'clearing']"
Usability,"When first doing a chi2 fit and later nll or vice-versa, RooFit didn't; remember the range of the last fit correctly, since it wasn't cleared; before a new fit starts. Now, it's cleared before all fits. Looking for the bug, I found two places where cleanups/improvements were in order.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5469:134,clear,cleared,134,https://root.cern,https://github.com/root-project/root/pull/5469,2,['clear'],['cleared']
Usability,"When generating the reference guide tutorial pages the doxygen ROOT filter invokes the Python script `makeimage.py` to generate the pictures produce by the tutorials. This Python script relies on the fact the canvases produced by the tutorial (Python ones) are still in memory after execution. They are retrieved with `ROOT.gROOT.GetListOfCanvases()` . ; In the case of most `df*.py` examples it works fine: the later command gives the list of canvases. But with `df103_NanoAODHiggsAnalysis.py` it gives an empty list of canvases because the canvases are created in a sub-function called `plot`. Python does some memory clean up at the end of `plot` and delete the canvas in memory. Adding `ROOT.SetOwnership(d, False)` allows to keep the canvases alive in the list of canvases after the macro execution.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5221:30,guid,guide,30,https://root.cern,https://github.com/root-project/root/pull/5221,1,['guid'],['guide']
Usability,"When generating the reference guide tutorial pages the doxygen ROOT filter invokes the Python script makeimage.py to generate the pictures produce by the tutorials. This Python script relies on the fact the canvases produced by the tutorial (Python ones) are still in memory after execution. They are retrieved with ROOT.gROOT.GetListOfCanvases() .; In the case of most df*.py examples it works fine: the later command gives the list of canvases. But with df103_NanoAODHiggsAnalysis.py it gives an empty list of canvases because the canvases are created in a sub-function called plot. Python does some memory clean up at the end of plot and delete the canvas in memory. Adding ROOT.SetOwnership(d, False) allows to keep the canvases alive in the list of canvases after the macro execution.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5230:30,guid,guide,30,https://root.cern,https://github.com/root-project/root/pull/5230,1,['guid'],['guide']
Usability,"When integrating the discretely-sampled RooCurves, the algorithm; implemented in RooCurve::average() was unnecessarily complicated. The existing midpoints were only considered for the trapezoidal rule if; they are away from the interval limits with an arbitrary tolerance,; which seems like a premature optimization to me. In particular, the logic was not correct if all midpoints were close to; the limits without this tolerance, resulting in issue https://github.com/root-project/root/issues/9838. Instead of making that case work correctly by implementing more code; branches, this commit suggests to simply don't do this tolerace check; and use all available midpoints for the trapezoidal integration rule. A unit test with the reproducer from https://github.com/root-project/root/issues/9838 is also implemented. Closes https://github.com/root-project/root/issues/9838. There are two additional commits in this PR with general code improvements.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16099:604,simpl,simply,604,https://root.cern,https://github.com/root-project/root/pull/16099,1,['simpl'],['simply']
Usability,"When iterating over the `clients()` to clear the clients caches, the list of clients itself might also be changed during the iteration. We therefore can't do a range-based loop. This fixes the last remaining RooFit ASAN build failure in `testRooAddPdf`. This is a followup to efd468b4947.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11698:39,clear,clear,39,https://root.cern,https://github.com/root-project/root/pull/11698,1,['clear'],['clear']
Usability,"When multiple threads are touching the list of cleanups, another thread can delete the object retrieved via TObjLink::GetObject(), and then when it is dereferenced in ob->TestBit(...) it causes a crash in ROOT. Stack trace (simplified):; ```; in TObject::TestBit (this=0x0, f=33554432) at TObject.h:159; ^^^; in TList::RecursiveRemove (this=0xb3c3e0, obj=0x7ff3547da6b0); at root/core/cont/src/TList.cxx:717; ^^^; in THashList::RecursiveRemove (this=0xb504b0, obj=0x7ff3547da6b0); at root/core/cont/src/THashList.cxx:286; in TObject::~TObject (this=0x7ff3547da6b0, __in_chrg=<optimized out>); at root/core/base/src/TObject.cxx:88; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/719:224,simpl,simplified,224,https://root.cern,https://github.com/root-project/root/pull/719,1,['simpl'],['simplified']
Usability,"When processing a TTree with TTreeProcessorMT, each thread creates and uses its own TTreeView (by using a TThreadedObject<TTreeView>). . Until now, in the case of interleaved execution of tasks, the second task could overwrite the first's TFile and TTree, causing crashes when the first task resumed execution. This PR modifies TTreeView so that it supports several tasks opening and using different TFiles at the same time, solving the issue described above.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/828:292,resume,resumed,292,https://root.cern,https://github.com/root-project/root/pull/828,1,['resume'],['resumed']
Usability,"When running RDF/TTreeProcessorMT with large numbers of threads and files with files on xrootd significant lock contention is still present through ```TPluginHandler::LoadPlugin()``` and ```TPluginHandler::ExecPlugin()``` which are called from ```TFile::Open()```. This PR minimizes the use of locks, which are now only needed the first time a given TPluginHandler is called for various initialization steps. This change now completely eliminates the use of the global write lock during RDF event loops also for files read from xrootd and finishes addressing https://github.com/root-project/root/issues/7710. For a simple test case:. Create the files:; ```cpp; #include ""TFile.h""; #include ""TTree.h""; #include ""TString.h""; #include <thread>. void testwrite() {. const unsigned int nfiles = 4000;; const unsigned int nentries = 1000*1000;. float outval = 1.;. for (unsigned int ifile = 0; ifile < nfiles; ++ifile) {; TFile *fout = TFile::Open(TString::Format(""test_%i.root"", ifile), ""RECREATE"");; TTree *tree = new TTree(""tree"", """");; tree->Branch(""outval"", &outval);; for (unsigned int ientry = 0; ientry < nentries; ++ientry) {; tree->Fill();; }; tree->Write();; fout->Close();; }. }; ```. run the event loop:; ```python; import ROOT; ROOT.ROOT.EnableImplicitMT(). chain = ROOT.TChain(""tree""); chain.Add(""root://eoscms.cern.ch//store/cmst3/group/wmass/bendavid/iotestinput/test_*.root""). d = ROOT.ROOT.RDataFrame(chain); res = d.Sum(""outval""). resval = res.GetValue(); print(resval); ```. Testing with 256 threads:. before:; ```; Percent of CPU this job got: 1077%; Elapsed (wall clock) time (h:mm:ss or m:ss): 1:51.82; ```. after:; ```; Percent of CPU this job got: 5626%; Elapsed (wall clock) time (h:mm:ss or m:ss): 0:54.89; ```; (in fact there is still some possible lock contention/parameter tuning within the xrootd client itself which could improve things further)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11631:615,simpl,simple,615,https://root.cern,https://github.com/root-project/root/pull/11631,1,['simpl'],['simple']
Usability,"When running eve7 application snapshot, server does not have functionality at all.; Therefore special highlight or selection requests cannot be processed.; Also add simple checks when selection is not possible.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3938:165,simpl,simple,165,https://root.cern,https://github.com/root-project/root/pull/3938,1,['simpl'],['simple']
Usability,"When specified, all kinds of JS scripts and ui5 files will be loaded from; URL path, which includes such version tag. Therefore when version is; changed in C++, all related scripts will be automatically reloaded. . This helps to solve browser cache problem, especially for; development phase. Normally browser heavily uses cached files, but if; one changes these files, one should explain every user that he/she must; clear the cache. With provided solution no any user intervention are; required.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4063:418,clear,clear,418,https://root.cern,https://github.com/root-project/root/pull/4063,1,['clear'],['clear']
Usability,"When testing the refactored signal handler, I noticed that a few obscure (but not impossible!) Unix signals cause ROOT to exit without reseting the TTY state back to its original state. This PR simply adds a few extra signals to `TerminalConfigUnix` and bumps the signal count as appropriate.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/246:194,simpl,simply,194,https://root.cern,https://github.com/root-project/root/pull/246,1,['simpl'],['simply']
Usability,"When the expected number of events becomes negative, this can happen for some combinations of the parameters, ; `RooAbsPdf::extendedTerm` prints an error message, but return also a zero value. ; A zero value is WRONG bacause it is a valid value which is then used in the total likelihood computation, confusing the minimization and ending up in a good wrong result. . It should return a NaN, that is now correctly propagated and handle by RooFit. . Simple example reproducing the problem: ; ```; {; RooWorkspace w;; w.factory(""mu[1,-1.5,10]"");; w.factory(""prod::ns(1,mu)"");; w.factory(""prod::nb(b[1,0,10],theta[1])"");; w.factory(""sum::ntot(ns,nb)"");; w.factory(""Uniform::ff(x[0,1])"");; w.factory(""SUM::pdf(ntot*ff)"");. auto pdf = w.pdf(""pdf"");; auto x = w.var(""x"");; RooDataSet d(""data"",""data"",*x);; d.add(*x); ; auto nll = pdf->createNLL(d);. auto pl = w.var(""mu"")->frame();; nll->plotOn(pl);. pl->Draw();; }. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8011:449,Simpl,Simple,449,https://root.cern,https://github.com/root-project/root/issues/8011,1,['Simpl'],['Simple']
Usability,"When the input data to fill an histogram contains infinity or Nan, the automatic axis computation does not work anymore. ; This PR fixes by excluding the non-finite data in the min/max computation. This simple code shows the problem:; ```; double x[] = {1.1,2.2,3.3,TMath::Infinity()};; auto h1 = new TH1D(""h1"",""h1"",10,1,0);; h1->FillN(4,x,nullptr);; h1->Draw();; ```. and it works after applying this PR, with the infinity values appearing in the overflow bin.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10187:203,simpl,simple,203,https://root.cern,https://github.com/root-project/root/pull/10187,1,['simpl'],['simple']
Usability,"When the user passes a gradient to the `ROOT::Math::Minimizer` via inheriting from the `ROOT::Math::IMultiGradFunction`, the error level is only considered correctly if `SetFunction()` is **called after** `SetErrorDef()`, which is completely unexpected. This should either be fixed, or if not possible, the minimizer should error out if you try to set the function too early. This bug is the reason why it took me so long to figure out to use the analytical gradient provided by `clad` in the minimizer for RooFit: I just couldn't understand why the uncertainties were wrong and until now thought it was because the gradient was wrong or not handled correctly by the minimizer. But in the end, it was all just this simple configuration problem. This code reproduces the issue with the example of finding the minimum of a simple parabola:; ```C++; double eval(double x) { return x * x; }. double evalDerivative(double x) {return 2 * x; }. class MyFunc : public ROOT::Math::IMultiGenFunction {; public:; ROOT::Math::IMultiGenFunction *Clone() const override { return new MyFunc; }; unsigned int NDim() const override { return 1; }. private:; double DoEval(const double *x) const override { return eval(x[0]); }; };. class MyGradFunc : public ROOT::Math::IMultiGradFunction {; public:; ROOT::Math::IMultiGenFunction *Clone() const override { return new MyFunc; }; unsigned int NDim() const override { return 1; }; private:; double DoEval(const double *x) const override { return eval(x[0]); }; double DoDerivative(const double *x, unsigned int /*icoord*/) const override { return evalDerivative(x[0]); }; };. template<class Func>; void minimize(Func const& func); {; std::unique_ptr<ROOT::Math::Minimizer> m{ROOT::Math::Factory::CreateMinimizer(""Minuit2"")};; m->SetPrintLevel(1);. // Set initial value, step size, and range; m->SetLimitedVariable(0, ""x"", 10, 1, -50, 50);. // The error level will be ignored in the IMultiGradFunction case without; // any warning to the user! Swapping the next two lines ",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12338:715,simpl,simple,715,https://root.cern,https://github.com/root-project/root/issues/12338,2,['simpl'],['simple']
Usability,"When url has options before, it was not correctly released; Following code always produced memory leak:. TUrl url;; url.SetUrl(""http://server/file?arg=1&arg2=2"");; url.SetUrl(""http://server/file?arg=1&arg2=2"");. Simplify handling of options",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4908:212,Simpl,Simplify,212,https://root.cern,https://github.com/root-project/root/pull/4908,1,['Simpl'],['Simplify']
Usability,"When using FitSlicesX() and FitSlicesY(), current version of ROOT doesn't allow us to set the range of fit in the other axis. By adding simple piece of code, it'll process TCutG.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3427:136,simpl,simple,136,https://root.cern,https://github.com/root-project/root/pull/3427,1,['simpl'],['simple']
Usability,"When using option ""x"" for TPrincipal::MakeHistograms(), the histogram is made with the number of bins as calculated by:; `Int_t xbins = fNumberOfDataPoints/100;`; If the number of data points is less than 100, this will try to make a histogram with 0 bins. The code still functions, as TH1 itself compensates by setting the number of bins to 1, and issuing a warning. But clearly TPrincipal could be smarter to avoid the unnecessary / unhelpful warning. The same happens for the calculation of `dbins` with the ""d"" option. Sidenote: this was a non-urgent issue I raised 7 years ago, but if no one else has been complaining, it's clearly a low priority ;-). https://sft.its.cern.ch/jira/browse/ROOT-8238. -Gene",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12926:372,clear,clearly,372,https://root.cern,https://github.com/root-project/root/pull/12926,2,['clear'],['clearly']
Usability,"When using the SofieFunctor to integrate the SOFIE inference in RDF from Python, it works if we declare in C++ and; JIT the code as in line 51 of the tutorial `tmva/TMVA_SOFIE_RDataFrame.py`, see ; https://github.com/root-project/root/blob/master/tutorials/tmva/TMVA_SOFIE_RDataFrame.py#L51. but if we replace that line with ; ```; sofie_functor = ROOT.TMVA.Experimental.SofieFunctor[7,'TMVA_SOFIE_Higgs_trained_model::Session'](0,""""); ```; and then later use the other signature of `RDataFrame::Define`; ```; df1.Define(""DNN_Value"", sofie_functor, [""rdfslot_"",""m_jj"", ""m_jjj"", ""m_lv"", ""m_jlv"", ""m_bb"", ""m_wbb"", ""m_wwbb""]); ```. it does not work. Doing: ; `print(sofie_functor)` results in None object. Trying also this , it does not work: ; ```; df1.Define(""DNN_Value"", ROOT.TMVA.Experimental.SofieFunctor[7,'TMVA_SOFIE_Higgs_trained_model::Session'](0,""""), [""rdfslot_"",""m_jj"", ""m_jjj"", ""m_lv"", ""m_jlv"", ""m_bb"", ""m_wbb"", ""m_wwbb""]); ```. Trying instead to make a simpler reproducible with a similar template functor works fine.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10684:964,simpl,simpler,964,https://root.cern,https://github.com/root-project/root/issues/10684,1,['simpl'],['simpler']
Usability,"When using the `CONV` operator in TF1 with a different range, but re-using the same function, the new range is not used correctly. ; This code shows the problem: ; ```; auto f1 = new TF1(""f1"",""CONV(ROOT::Math::breitwigner_pdf(x,[1],[0]),gaus)"",0,10);; f1->SetParameters(5,1,1,0,1); ; f1->Draw(); // this is ok; // do convolution in a different range; auto f2 = new TF1(""f2"",""CONV(ROOT::Math::breitwigner_pdf(x,[1],[0]),gaus)"",10,20); ; f2->SetParameters(15,1,1,0,1);; f2->Draw(); // WRONG result because it performs convolution in 0,10 instead of 10,20; ```. This problem has been reported in https://root-forum.cern.ch/t/fitting-histograms-convolution/44973/7. A simple workaround is just to call:; ```; f2-SetRange(10,20); ; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8252:664,simpl,simple,664,https://root.cern,https://github.com/root-project/root/issues/8252,1,['simpl'],['simple']
Usability,"When using the non-homebrew cmake, make sure you removed the previous CMakeCache.txt. As a brutal measure you can temporarily rename/ops/homebrew; that should also move it out of the way... Can you explain why you don't want to use homebrew's build of ROOT? This seems much simpler than building ROOT yourself - unless you want to help develop ROOT, of course! ;-)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12648#issuecomment-1523186097:274,simpl,simpler,274,https://root.cern,https://github.com/root-project/root/issues/12648#issuecomment-1523186097,2,['simpl'],['simpler']
Usability,"When we want to autoload contents from namespaces we end up in; Sema::LookupQualifiedName; then we issue a callback to; FindExternallyVisibleName which forwards to LookupObject. Lookup object; takes a DeclContext as an argument. This argument is always the primary; lookup context (which for a NamespaceDecl is the original namespace. Regular autoloading does not consider this (or has chosen not to) because; this reduces the amount of autoloads. Such autoloads can happen when; resolving template specializations when computing a decl's linkage by; clang's CodeGen. This in turn loads unexpected libraries such as RooFit; when trying to resolve all template specializations of __to_raw_pointer; (located in &lt;memory&gt;), including the one taking a HistFactory::Data*.; The amount of deserializations might be reduced by applying [D29951](https://reviews.llvm.org/D29951). That way we end up needlessly loading RooFit and showing it's weird; banner, potentially breaking a lot of tests. This behavior can be considered as broken because we hide information; about possible redeclarations which can affect the linkage computation or; other checks in codegen. If we fix the bug we will probably explode; ROOT's memory footprint and make the gap between standard ROOT and ROOT; with modules even bigger. Since it is not clear how much work and issue resolving is required for; standard ROOT, we can probably only live with the workaround of the missing; concept: moving entities in namespaces whose autoloading requires declarations; to be in the PCH. For instance, ROOT::Experimental::TDataFrame.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1337:1321,clear,clear,1321,https://root.cern,https://github.com/root-project/root/pull/1337,1,['clear'],['clear']
Usability,"When x is at the bin edge values numerical error can cause the computation of the bin to be the one before (or after). Correct for this case assuming the bin edge are computed as in `TH1::getBinLowEdge` and `TH1::GetBinUpEdge`. It is clear that the bin edge values are represented as floating point, so depending on how they are computed they can be sometime different. However, it is better to have teh consistency to return the correct value when computed as internally in TAxis. This should fix the problem reported in https://root-forum.cern.ch/t/bug-in-taxis-findbin/57210 and #14091. A test is also added for FindBin",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14105:234,clear,clear,234,https://root.cern,https://github.com/root-project/root/pull/14105,1,['clear'],['clear']
Usability,"While ROOT master is now building successfully for us, there are some downstream packages that suffer from this change. They can probably be fixed by exporting the ROOT_INCLUDE_PATH, but to better understand where things go wrong I made a very simple repeater. I think on any centos7 with the sft cvmfs this should work; ```; source /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev3/Fri/CMake/3.20.0/x86_64-centos7-gcc10-dbg/CMake-env.sh; source /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev3/Fri/ROOT/HEAD/x86_64-centos7-gcc10-dbg/ROOT-env.sh. git clone https://gitlab.cern.ch/sailer/root_repeater.git; cd root_repeater; mkdir build; cd build. cmake -D nlohmann_json_DIR=$JSONMCPP__HOME/lib64/cmake/nlohmann_json \; -D Python_ROOT_DIR=$PYTHON__HOME \; -D Vc_DIR=$VC__HOME/lib/cmake/Vc \; ..; make; ./RunTest; ```. Just linking an executable to ROOTTPython (https://gitlab.cern.ch/sailer/root_repeater/-/blob/master/CMakeLists.txt#L17); leads to an error like this; ```; ./RunTest ; <<< cling interactive line includer >>>: fatal error: module file '/build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT-HEAD-build/lib/Vc.pcm' not found: module file not found; <<< cling interactive line includer >>>: note: imported by module 'MathCore' in '/cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev3/Fri/ROOT/HEAD/x86_64-centos7-gcc10-dbg/lib/MathCore.pcm'; Failed to load module MathCore; Failed to load module Hist; Failed to load module ROOTBrowsable; Failed to load module Unfold; Failed to load module RHTTPSniff; Failed to load module HistPainter; Failed to load module PyMVA; Failed to load module RHTTP; Failed to load module FitPanel; Failed to load module ProofDraw; Failed to load module Unuran; Failed to load module Quadp; Failed to load module Genetic; Failed to load module Eve; Failed to load module GeomPainter; Failed to load module TreeViewer; Failed to load module Physics; Failed to load module EG; Failed to load module Tree; Failed to load module HistFactory; Fai",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9594#issuecomment-1029801305:244,simpl,simple,244,https://root.cern,https://github.com/root-project/root/issues/9594#issuecomment-1029801305,2,['simpl'],['simple']
Usability,"While TCanvas, shown in web-browser, marked as batch canvas, all customs object painting performed via gVirtualPS classes. Therefore one need to catch all these calls and record for SVG creation in the client. TWebPadPainter is remained as fall-back solution if some objects painter does not follow strictly the ROOT painting logic. ; Highly optimize data which are transferred to clients - avoid large TObject overhead for simple fill/line/marker attributes. ; Try to merge painting if there are too many objects on the TCanvas - like in tutorials/graphics/greyscale.C macro. In such case simple SVG fails - one should try to combine primitives drawn with same attributes",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2862:424,simpl,simple,424,https://root.cern,https://github.com/root-project/root/pull/2862,2,['simpl'],['simple']
Usability,"While benchmarking the change I discovered something fascinating.; This simple benchmark only tests retrieval of a custom column:; ```c++; TDataFrame d(1000000000ull);; d.Define(""ans"", [] { return 42; }); .Foreach([](int) {}, {""ans""});; ```. The relevant code path that changes between master and this PR is the following:; ```patch; T &TColumnValue<T>::Get(Long64_t entry); {; - if (!fReaderValues.empty()) {; - return *(fReaderValues.back()->Get());; - } else {; - fCustomColumns.back()->Update(fSlot, entry);; - return fIsDataSourceColumn ? **fDSValuePtrs.back() : *fCustomValuePtrs.back();; + switch (fColumnKind) {; + case EColumnKind::kTreeArray: /*dealt with in the other `Get` overload*/; + case EColumnKind::kTreeValue: return *(fReaderValues.back()->Get());; + case EColumnKind::kCustomColumn: fCustomColumns.back()->Update(fSlot, entry); return *fCustomValuePtrs.back();; + case EColumnKind::kDataSource: fCustomColumns.back()->Update(fSlot, entry); return **fDSValuePtrs.back();; }; +; ```; Looks _faster_ right?. On my workstation `perf stat` yields the following instruction counts and runtimes (single-thread executable compiled with `-g -O2`):; ```; # MASTER; 99,494,923,915 instructions:u; 9.844 seconds. # PR; 103,495,337,205 instructions:u; 11.049 seconds; ```. The `switch-case` is sensibly slower and results in more cpu instructions than the `if-else` over `std::vector::empty` on this artificial yet very representative benchmark. I thought this might have been a cache-friendliness issue and was almost ready to give up on this PR, but luckily plotting stacktraces showed that the culprit is inlining:. **MASTER**; ![image](https://user-images.githubusercontent.com/10999034/30910728-3b607ff4-a386-11e7-928e-6a404a485cf6.png). **PR**; ![image](https://user-images.githubusercontent.com/10999034/30910790-7f808562-a386-11e7-90f9-f1417c712f86.png). The `Get` method is not inlined when it contains the `switch-case`!; I will come up with a change that maintains inlining intact s",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1060#issuecomment-332489724:72,simpl,simple,72,https://root.cern,https://github.com/root-project/root/pull/1060#issuecomment-332489724,2,['simpl'],['simple']
Usability,"While debugging the failure triggered by a recent PR updating the behavior of `gDirectory`: https://github.com/root-project/root/pull/11908#issuecomment-1361086304 (The reported error is that a name/symbol that should have been detected and loaded by Cling was not found ... the direct cause was that `gDirectory` was unexpectedly `nullptr`), I discovered that notebooks (or a least the way they are run in the test `JupyROOT-ROOT_kernel_notebook`), runs several threads to actually execute the cells. It is also clear from my investigation that it does not enable thread safety. Whether we need to change depends on whether `Jupyter` (or the way it is use here) guaranteed that only one of the thread would ever be run concurrently (if not then we must enable thread safety). However, one more thing to consider is that when thread safety is enabled, each thread get its own thread local gDirectory pointers. If each cell is run in a separate thread, then change to `gDirectory` in one cell will not be reflected in the next cell. (this would be true also for any user level thread local variable).",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11955:513,clear,clear,513,https://root.cern,https://github.com/root-project/root/issues/11955,1,['clear'],['clear']
Usability,"While doing some unrelated work I stumbled on an incosistency. Since the fix was so simple, I decided to go for a pr.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6978:84,simpl,simple,84,https://root.cern,https://github.com/root-project/root/pull/6978,1,['simpl'],['simple']
Usability,"While many widgets will access JSROOT, try to always access JSROOT version from top server location; One cannot simply use src=""/jsrootsys/scripts/JSRoot.core.js"" while it does not work with FastCGI.; Therefore one have to use relative paths like ""../../jsrootsys/scripts/JSRoot.core.js"".; More efficiently will use browser cache",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7124:112,simpl,simply,112,https://root.cern,https://github.com/root-project/root/pull/7124,1,['simpl'],['simply']
Usability,"While the current behaviour is clearly a bug and needs to be fixed, I would also appreciate a workaround that I could use right now. Maybe there is some function/static method to call to clean up the global caches (if that is indeed a problem of caching).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10577#issuecomment-1126366016:31,clear,clearly,31,https://root.cern,https://github.com/root-project/root/issues/10577#issuecomment-1126366016,2,['clear'],['clearly']
Usability,"While thinking about collisions and the index storage, one thought that crossed my mind is to template the index based on the index field type(s). I'm not sure if that's a good idea, one of the immediate question being ""do we want `RNTupleIndex<std::string>` and `RNTupleIndex<std::uint64_t>` to be different types?"" But still maybe something to consider, it might simplify the field value storage (if needed) and the entire hashing business...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15116#issuecomment-2242991029:365,simpl,simplify,365,https://root.cern,https://github.com/root-project/root/pull/15116#issuecomment-2242991029,2,['simpl'],['simplify']
Usability,"While virtual `Copy(TObject &obj)` method is used in copy constructors, wrong cast may happen.; Simplest reproducer:; ```; TProfile p;; TH1D h(p);; ```; Causes fatal crash:; ```; Fatal in <TProfile::Copy>: Cannot copy a TProfile in a TH1D; aborting; #0 0x00007f2293b0a83a in wait4 () from /lib64/libc.so.6; #1 0x00007f2293a7403b in do_system () from /lib64/libc.so.6; #2 0x00007f22942c5a3d in TUnixSystem::StackTrace() () from /home/linev/build/webgui/lib/libCore.so; #3 0x00007f229418294c in DefaultErrorHandler(int, bool, char const*, char const*) () from /home/linev/build/webgui/lib/libCore.so; #4 0x00007f22942497bd in ErrorHandler () from /home/linev/build/webgui/lib/libCore.so; #5 0x00007f22941988f4 in TObject::Fatal(char const*, char const*, ...) const () from /home/linev/build/webgui/lib/libCore.so; #6 0x00007f227d6fbde8 in TProfile::Copy(TObject&) const [clone .cold] () from /home/linev/build/webgui/lib/libHist.so; #7 0x00007f227d80aba7 in TH1D::TH1D(TH1D const&) () from /home/linev/build/webgui/lib/libHist.so; #8 0x00007f228c9dc028 in ?? (); #9 0x00007f2293f83460 in ?? (); #10 0x00007f228f062cfe in cling::IncrementalExecutor::runStaticInitializersOnce(cling::Transaction&) () from /home/linev/build/webgui/lib/libCling.so; #11 0x00007f228efd6ea4 in cling::Interpreter::executeTransaction(cling::Transaction&) () from /home/linev/build/webgui/lib/libCling.so; #12 0x00007f228f07511c in cling::IncrementalParser::commitTransaction(llvm::PointerIntPair<cling::Transaction*, 2u, cling::IncrementalParser::EParseResult, llvm::PointerLikeTypeTraits<cling::Transaction*>, llvm::PointerIntPairInfo<cling::Transaction*, 2u, llvm::PointerLikeTypeTraits<cling::Transaction*> > >&, bool) () from /home/linev/build/webgui/lib/libCling.so; #13 0x00007f228f076c68 in cling::IncrementalParser::Compile(llvm::StringRef, cling::CompilationOptions const&) () from /home/linev/build/webgui/lib/libCling.so; #14 0x00007f228efd4bb8 in cling::Interpreter::EvaluateInternal(std::__cxx11::basic_string<cha",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10919:96,Simpl,Simplest,96,https://root.cern,https://github.com/root-project/root/issues/10919,1,['Simpl'],['Simplest']
Usability,Why can't compilers simply ignore these options when they don't know?,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3108:20,simpl,simply,20,https://root.cern,https://github.com/root-project/root/pull/3108,1,['simpl'],['simply']
Usability,Why don't you simply make one animated gif with the two canvases on top of each other ? it should be possible ? The tool you are using to make them does not allow this ?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1839#issuecomment-383958682:14,simpl,simply,14,https://root.cern,https://github.com/root-project/root/pull/1839#issuecomment-383958682,2,['simpl'],['simply']
Usability,"Why not just leave the issue open? If anyone from the community finds the issue interesting - they can start working on it. However, I kindly propose enabling the ""Discussion"" functionality for the repository and then moving the issue to the ""Discussions"" under the ""Ideas"" built-in label. Having the issue closed is not clear for newcomers since they at first look at open issues to start work at, not closed issues.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/15778#issuecomment-2154460609:321,clear,clear,321,https://root.cern,https://github.com/root-project/root/issues/15778#issuecomment-2154460609,2,['clear'],['clear']
Usability,"With 16 threads, the cache is simply too small.; These are thread specific values anyway.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2675:30,simpl,simply,30,https://root.cern,https://github.com/root-project/root/pull/2675,1,['simpl'],['simply']
Usability,"With `TObjString` is relatively simple - if it used in the code, include should be there. Very similar with `TObjArray`. When removing `TEnv.h`, I checked if `gEnv` there. When removing `TSystem.h` - if `gSystem` used.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5069#issuecomment-592083756:32,simpl,simple,32,https://root.cern,https://github.com/root-project/root/pull/5069#issuecomment-592083756,2,['simpl'],['simple']
Usability,With new version (1.4) of scikit-learn the bool parameters must be passed as bool and not anymore as integers. In addition in AdaBoost base_estimator was renamed to estimator. This Pull request should fix failures observed in PR builds when the new version (1.4) of scikit-learn is used,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14977:33,learn,learn,33,https://root.cern,https://github.com/root-project/root/pull/14977,2,['learn'],['learn']
Usability,"With output variable you mean adding PARENT_SCOPE, or something else? This doesn't seem to require fixes in root test; ... but; So I make REFLEX_.. a function and then simply do ` set(gensrcdict ${dictionary}.cxx PARENT_SCOPE)` I get this error:. ```; CMake Error at /home/sailer/software/buildroot/RootMacros.cmake:183 (add_custom_command):; add_custom_command Wrong syntax. A TARGET or OUTPUT must be specified.; Call Stack (most recent call first):; /home/sailer/software/roottest/cmake/modules/RoottestMacros.cmake:349 (REFLEX_GENERATE_DICTIONARY); /home/sailer/software/roottest/root/meta/dictSelection/CMakeLists.txt:1 (ROOTTEST_GENERATE_REFLEX_DICTIONARY); ```. If I keep the first `set(gensrcdict...)` and add this ` set(gensrcdict ${dictionary}.cxx PARENT_SCOPE)` after the `add_custom_command` call I at least don't get any obvious cmake errors I can connect with these changes. Could you trigger the CI, please? I would like to know if these changes are at least working. To not have USES, one would check if `${dictionary}` is a target or not (I don't think this was a requirement before?) and then do what was done with the list given to USES before.; This can potentially affect existing uses of REFLEX_GENERATE_DICTIONARY. ```cmake; IF(TARGET ${dictionary}); LIST(APPEND include_dirs $<TARGET_PROPERTY:${dictionary},INCLUDE_DIRECTORIES>); LIST(APPEND definitions $<TARGET_PROPERTY:${dictionary},COMPILE_DEFINITIONS>); ENDIF(); ```; ```cmake; IF(TARGET ${dictionary}); target_sources(${dictionary} PRIVATE ${gensrcdict}); ENDIF(); ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5019#issuecomment-587575128:168,simpl,simply,168,https://root.cern,https://github.com/root-project/root/pull/5019#issuecomment-587575128,2,['simpl'],['simply']
Usability,"With the current ROOT `master` and `v626` branch, the reading of some RooFit workspaces crashes consistently. To reproduce this problem, one can try to read the [WS-Comb-STXS_toy workspace](https://gitlab.cern.ch/kran/toyws/-/blob/master/WS-Comb-STXS_toy.root) from ATLAS:. ```bash; # run this in the terminal first to not run out of stack space.; ulimit -S -s unlimited; ```. ```C++; auto f = TFile::Open(""toyws/WS-Comb-STXS_toy.root"");; auto w = (RooWorkspace*)f->Get(""combWS"");; ```. This crash was introduced by these two commits, that were also backported to v626:; 1. https://github.com/root-project/root/commit/79e101cdb08c39667b3012b56883932f2fa9ed11; 2. https://github.com/root-project/root/commit/a5d205a66accf3ce45d7a10958b3782690db4097. I list these two commits together, because ROOT doesn't compile at that first commit. So the second commit it the first one that compiles and crashes. The commit before these two, 819b4e321, is still OK. If it would help to produce a simpler reproducer workspace, I'm glad to help out by trying to build one.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10282:983,simpl,simpler,983,https://root.cern,https://github.com/root-project/root/issues/10282,1,['simpl'],['simpler']
Usability,"With the following changes; ```; diff --git a/bindings/pyroot/pythonizations/python/ROOT/__init__.py b/bindings/pyroot/pythonizations/python/ROOT/__init__.py; index 52d23a6fc3..790432eb3d 100644; --- a/bindings/pyroot/pythonizations/python/ROOT/__init__.py; +++ b/bindings/pyroot/pythonizations/python/ROOT/__init__.py; @@ -79,6 +79,7 @@ def cleanup():; # Hard teardown: run part of the gROOT shutdown sequence.; # Running it here ensures that it is done before any ROOT libraries; # are off-loaded, with unspecified order of static object destruction.; + print(""Calling EndOfProcessCleanups from __init__.py""); backend.gROOT.EndOfProcessCleanups(); ; atexit.register(cleanup); diff --git a/core/base/src/TApplication.cxx b/core/base/src/TApplication.cxx; index 8bdaa03f8d..9a02160611 100644; --- a/core/base/src/TApplication.cxx; +++ b/core/base/src/TApplication.cxx; @@ -86,6 +86,7 @@ static void CallEndOfProcessCleanups(); // set gROOT in its end-of-life mode which prevents executing code, like; // autoloading libraries (!) that is pointless ...; if (gROOT) {; + std::cout << ""Calling EndOfProcessCleanups from TApplication\n"";; gROOT->SetBit(kInvalidObject);; gROOT->EndOfProcessCleanups();; }; ```. I get this; ```; $: python -c ""import ROOT""; Calling EndOfProcessCleanups from __init__.py; $: python -c ""import ROOT; ROOT.TH1F""; Calling EndOfProcessCleanups from __init__.py; Calling EndOfProcessCleanups from TApplication; ```. i.e. it looks to me that as long as anything is done in the PyROOT application other than simply importing the module, the second cleanup routine is called at the end of the process (after the Python one). Either one of these should probably not be called",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10743#issuecomment-1154462514:1528,simpl,simply,1528,https://root.cern,https://github.com/root-project/root/issues/10743#issuecomment-1154462514,2,['simpl'],['simply']
Usability,"With the latest refactorings, MakeColumnReaders does not actually; create the column readers but simply gets them from RLoopManager or RColumnRegister.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11306:97,simpl,simply,97,https://root.cern,https://github.com/root-project/root/pull/11306,1,['simpl'],['simply']
Usability,"With the upgrade, BackendPasses was modifying a TargetMachine that was not used by SimpleCompiler. Change that by; - using a SimpleCompiler that uses IncrementalJIT::TM;; - moving the TM creation to IncrementalJIT, and giving access to it. This reduces the runtime of https://github.com/root-project/root/issues/11927 to; - before llvm upgrade: 2.69s; - llvm13, without this commit: ???; - llvm13, with this commit: 2.89s i.e, a slow-down of 7% (that is likely caused by the different emission mechanism of Orc-v2; to be confirmed...). # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11945:83,Simpl,SimpleCompiler,83,https://root.cern,https://github.com/root-project/root/pull/11945,2,['Simpl'],['SimpleCompiler']
Usability,"With the upgrade, BackendPasses was modifying a TargetMachine that was not used by SimpleCompiler. Change that by; - using a SimpleCompiler that uses IncrementalJIT::TM;; - moving the TM creation to IncrementalJIT, and giving access to it. This reduces the runtime of https://github.com/root-project/root/issues/11927 to; - before llvm upgrade: 2.69s; - llvm13, without this commit: ???; - llvm13, with this commit: 2.89s i.e, a slow-down of 7% (that is likely caused by the different emission mechanism of Orc-v2; to be confirmed...). (cherry picked from commit d3793f2bb8c5948f4c64947c7f76fb0b0e1a3567). # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12096:83,Simpl,SimpleCompiler,83,https://root.cern,https://github.com/root-project/root/pull/12096,2,['Simpl'],['SimpleCompiler']
Usability,"With this (large) patch, RAction, RFilter, RDefine, RRange and RVariation learn how to operate on ranges of N masked entries instead of one entry at a time. Currently ranges are always of size 1, but most of RDF's internal logic has been parameterized over that size. Notably, RAction, RFilter, RDefine and RDefineReader should be now almost completely ""bulkified"" while RVariation and other column readers (e.g. RVariationReader and RTreeColumnReader) still have some logic that assumes a bulk size of 1 (e.g. they only store a single result/value at a time). **Note**: This is still a draft PR because the performance impact of these changes, when using a bulk size of 1, seems to be significant.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11517:74,learn,learn,74,https://root.cern,https://github.com/root-project/root/pull/11517,1,['learn'],['learn']
Usability,With this PR SOFIE can parse simple recurrent networks containing RNN /LSTM layers combined with fully connected layer. ; The new added operators are: ; - Slice; - Squeeze/Unsqueeze,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9369:29,simpl,simple,29,https://root.cern,https://github.com/root-project/root/pull/9369,1,['simpl'],['simple']
Usability,"With this PR the doxygen directory (./) is not included in the INPUT list of files. Only the top file `mainpage.md` is listed . This way we do not need to exclude the macros and scripts needed to build the documentation. Also the temporary file create in the doxygen directory do not pollute the list of files in the reference guide. Finally, the file `launcher.py` in the `tutorials` directory, is excluded from the reference guide.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8451:327,guid,guide,327,https://root.cern,https://github.com/root-project/root/pull/8451,2,['guid'],['guide']
Usability,"Without a better place to put this (should I open a follow-up issue?):. > 1. Try to reproduce the problem with vanilla lli of LLVM 9 to check that this is not related to the way Cling incrementally JITs and executes. I can reproduce the problem with vanilla `lli -O0` of LLVM 9.0.1 for the following simple C program compiled to LLVM IR with `clang -S -emit-llvm print.c`:; ```c; #include <stdio.h>. int main() {; printf(""Hello from JIT\n"");; }; ```. Higher optimization levels (default is `-O2`) make the problem go away, as does `--global-isel=0`. So far, so consistent. > 2. Figure out exactly why GlobalISel emits different branch instructions, and whether this is a problem in the framework or of the generated IR.; > 3. Verify if the same happens with LLVM 11/12 (whatever Cling will move to next), and possibly fix the underlying issue in LLVM upstream's `main`. LLVM 11.1.0 does not show the problem with `lli -O0` by default due to https://github.com/llvm/llvm-project/commit/366ab0d086a457b085e3c9ba1c987d5499079cd6, but forcing `--global-isel=1` still fails. The commit message is light on details, but I'd say this confirms it's a framework problem of GlobalISel. I would guess that the problem persists in `main` (unless somebody fixed since the last release).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7419#issuecomment-799389082:300,simpl,simple,300,https://root.cern,https://github.com/root-project/root/pull/7419#issuecomment-799389082,2,['simpl'],['simple']
Usability,"Work in progress branch for simplifying offset column indexing. All the basic vector tests are passing, but I think there is a problem with cluster indexes. There are three failing tests that trigger an assertion at the page storage level: ; https://github.com/root-project/root/blob/7e50fa81489e6b33e086d925046548158709d3b7/tree/ntuple/v7/src/RPageStorageFile.cxx#L263. 1. https://github.com/root-project/root/blob/7e50fa81489e6b33e086d925046548158709d3b7/tree/ntuple/v7/test/ntuple.cxx#L359; 2. https://github.com/root-project/root/blob/7e50fa81489e6b33e086d925046548158709d3b7/tree/ntuple/v7/test/ntuple.cxx#L534; 3. https://github.com/root-project/root/blob/7e50fa81489e6b33e086d925046548158709d3b7/tree/ntuple/v7/test/ntuple_raw.cxx#L75. which I think means I'm creating bad `clusterIndex` values at some point, probably from `GetCollectionInfo`. . @jblomer would you mind taking a look? I am a little confused about columnIndexes inside `GetCollectionInfo`. I think the problem might be from when we pass a cluster boundary, `idxStart` should be set to some sensible value based on the cluster (0 wasn't working for me).",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5714:28,simpl,simplifying,28,https://root.cern,https://github.com/root-project/root/pull/5714,1,['simpl'],['simplifying']
Usability,"Work in progress to fully generalize gradient interfaces, in order to allow vectorization and parallelization of the fitting methods that make use of them. The implementation of Chi2 gradient has been parallelized and vectorized: these new implementations are unit tested and benchmarked against the simple scalar serial case. To do: test the general use case, where the user simply calls the fitting method specifying that the gradient should be used. Early reviews are more than welcome!",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/793:300,simpl,simple,300,https://root.cern,https://github.com/root-project/root/pull/793,2,['simpl'],"['simple', 'simply']"
Usability,"Would that answer your concerns:; ```; cat T.C ; struct S {};. root -l -b; root [0] #undef TRY; root [1] .I /home/vagrant/workspace/root/src/interpreter/cling/include/; root [2] .I /home/vagrant/workspace/root/src/interpreter/llvm/src/include/; root [3] .I /home/vagrant/workspace/root/src/interpreter/llvm/src/tools/clang/include; root [4] .I /usr/lib/llvm-5.0/include; root [5] #include ""cling/Interpreter/Interpreter.h""; root [6] #include ""cling/Interpreter/LookupHelper.h""; root [7] cling::runtime::gCling->getLookupHelper().findType(""S"", cling::LookupHelper::NoDiagnostics).isNull(); (bool) true; root [8] #include ""T.C""; root [9] cling::runtime::gCling->getLookupHelper().findType(""S"", cling::LookupHelper::NoDiagnostics).isNull(); (bool) false; root [10] .undo 2; root [11] cling::runtime::gCling->getLookupHelper().findType(""S"", cling::LookupHelper::NoDiagnostics).isNull(); (bool) true; root [12] .q; ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2483#issuecomment-413984860:763,undo,undo,763,https://root.cern,https://github.com/root-project/root/pull/2483#issuecomment-413984860,2,['undo'],['undo']
Usability,"Wow, love this!. Random unsolicited feedback: ROOT convention for commit messages is to use the imperative mood and start with a capital letter ([we are not alone](https://chris.beams.io/posts/git-commit/)), and it might be useful to split the changes in different commits per repo subdirectories (tree, roofit, hist, math...) in case parts of this need to be reverted later for whatever reason.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6007#issuecomment-656194773:36,feedback,feedback,36,https://root.cern,https://github.com/root-project/root/pull/6007#issuecomment-656194773,2,['feedback'],['feedback']
Usability,"Wow, you were fast in spotting this :smiley: I think there's a relatively simple fix, see https://github.com/root-project/root/pull/11148",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11128#issuecomment-1208232344:74,simpl,simple,74,https://root.cern,https://github.com/root-project/root/issues/11128#issuecomment-1208232344,2,['simpl'],['simple']
Usability,"Wrap owning pointers in the RooFit tutorials in `std::unique_ptr`. This has three benefits:. 1. Less memory leaks in tutorials (`delete` was almost never done); 2. Tutorials would also run if the `RooFit::OwningPtr` were to be defined at `std::unique_ptr`, which is useful for debug builds; 3. Users learn about automatic memory management correctly",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12927:300,learn,learn,300,https://root.cern,https://github.com/root-project/root/pull/12927,1,['learn'],['learn']
Usability,"X.sdk/System/Library/Frameworks (framework directory); End of search list.; # 1 ""/dev/null""; # 1 ""<built-in>"" 1; # 1 ""<built-in>"" 3; # 439 ""<built-in>"" 3; # 1 ""<command line>"" 1; # 1 ""<built-in>"" 2; # 1 ""/dev/null"" 2. $ clang++ -isysroot /Library/Developer/CommandLineTools/SDKs/MacOSX.sdk -x c++ /dev/null -E -v; Apple clang version 16.0.0 (clang-1600.0.26.3); Target: arm64-apple-darwin24.0.0; Thread model: posix; InstalledDir: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin; ignoring nonexistent directory ""/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1""; ""/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/clang"" -cc1 -triple arm64-apple-macosx15.0.0 -Wundef-prefix=TARGET_OS_ -Wdeprecated-objc-isa-usage -Werror=deprecated-objc-isa-usage -Werror=implicit-function-declaration -E -disable-free -clear-ast-before-backend -disable-llvm-verifier -discard-value-names -main-file-name null -mrelocation-model pic -pic-level 2 -mframe-pointer=non-leaf -fno-strict-return -ffp-contract=on -fno-rounding-math -funwind-tables=1 -fobjc-msgsend-selector-stubs -target-sdk-version=15.0 -fvisibility-inlines-hidden-static-local-var -fno-modulemap-allow-subdirectory-search -target-cpu apple-m1 -target-feature +v8.5a -target-feature +aes -target-feature +crc -target-feature +dotprod -target-feature +fp-armv8 -target-feature +fp16fml -target-feature +lse -target-feature +ras -target-feature +rcpc -target-feature +rdm -target-feature +sha2 -target-feature +sha3 -target-feature +neon -target-feature +zcm -target-feature +zcz -target-feature +fullfp16 -target-abi darwinpcs -debugger-tuning=lldb -target-linker-version 1115.7.3 -v -fcoverage-compilation-dir=/Users/stognini -resource-dir /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/clang/16 -isysroot /Library/Developer/CommandLineTools/SDKs/MacOSX.sdk -internal-isystem /Library",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16494#issuecomment-2374779123:6145,clear,clear-ast-before-backend,6145,https://root.cern,https://github.com/root-project/root/pull/16494#issuecomment-2374779123,2,['clear'],['clear-ast-before-backend']
Usability,"X.sdk/System/Library/Frameworks (framework directory); End of search list.; # 1 ""/dev/null""; # 1 ""<built-in>"" 1; # 1 ""<built-in>"" 3; # 439 ""<built-in>"" 3; # 1 ""<command line>"" 1; # 1 ""<built-in>"" 2; # 1 ""/dev/null"" 2. + clang++ -isysroot /Library/Developer/CommandLineTools/SDKs/MacOSX.sdk -x c++ /dev/null -E -v; Apple clang version 16.0.0 (clang-1600.0.26.3); Target: arm64-apple-darwin23.6.0; Thread model: posix; InstalledDir: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin; ignoring nonexistent directory ""/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1""; ""/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/clang"" -cc1 -triple arm64-apple-macosx14.0.0 -Wundef-prefix=TARGET_OS_ -Wdeprecated-objc-isa-usage -Werror=deprecated-objc-isa-usage -Werror=implicit-function-declaration -E -disable-free -clear-ast-before-backend -disable-llvm-verifier -discard-value-names -main-file-name null -mrelocation-model pic -pic-level 2 -mframe-pointer=non-leaf -fno-strict-return -ffp-contract=on -fno-rounding-math -funwind-tables=1 -fobjc-msgsend-selector-stubs -target-sdk-version=15.0 -fvisibility-inlines-hidden-static-local-var -fno-modulemap-allow-subdirectory-search -target-cpu apple-m1 -target-feature +v8.5a -target-feature +aes -target-feature +crc -target-feature +dotprod -target-feature +fp-armv8 -target-feature +fp16fml -target-feature +lse -target-feature +ras -target-feature +rcpc -target-feature +rdm -target-feature +sha2 -target-feature +sha3 -target-feature +neon -target-feature +zcm -target-feature +zcz -target-feature +fullfp16 -target-abi darwinpcs -debugger-tuning=lldb -target-linker-version 1115.7.3 -v -fcoverage-compilation-dir=/Users/pcanal/root_working/builds/master.debug/src/tutorials/v7/ntuple -resource-dir /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/clang/16 -isysroot /Library/Developer/Comm",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16494#issuecomment-2375170248:6483,clear,clear-ast-before-backend,6483,https://root.cern,https://github.com/root-project/root/pull/16494#issuecomment-2375170248,2,['clear'],['clear-ast-before-backend']
Usability,"X.sdk/System/Library/Frameworks (framework directory); End of search list.; # 1 ""/dev/null""; # 1 ""<built-in>"" 1; # 1 ""<built-in>"" 3; # 439 ""<built-in>"" 3; # 1 ""<command line>"" 1; # 1 ""<built-in>"" 2; # 1 ""/dev/null"" 2. + clang++ -isysroot /Library/Developer/CommandLineTools/SDKs/MacOSX.sdk -x c++ /dev/null -E -v; Apple clang version 16.0.0 (clang-1600.0.26.3); Target: arm64-apple-darwin23.6.0; Thread model: posix; InstalledDir: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin; ignoring nonexistent directory ""/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1""; ""/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/clang"" -cc1 -triple arm64-apple-macosx14.0.0 -Wundef-prefix=TARGET_OS_ -Wdeprecated-objc-isa-usage -Werror=deprecated-objc-isa-usage -Werror=implicit-function-declaration -E -disable-free -clear-ast-before-backend -disable-llvm-verifier -discard-value-names -main-file-name null -mrelocation-model pic -pic-level 2 -mframe-pointer=non-leaf -fno-strict-return -ffp-contract=on -fno-rounding-math -funwind-tables=1 -fobjc-msgsend-selector-stubs -target-sdk-version=15.0 -fvisibility-inlines-hidden-static-local-var -fno-modulemap-allow-subdirectory-search -target-cpu apple-m1 -target-feature +v8.5a -target-feature +aes -target-feature +crc -target-feature +dotprod -target-feature +fp-armv8 -target-feature +fp16fml -target-feature +lse -target-feature +ras -target-feature +rcpc -target-feature +rdm -target-feature +sha2 -target-feature +sha3 -target-feature +neon -target-feature +zcm -target-feature +zcz -target-feature +fullfp16 -target-abi darwinpcs -debugger-tuning=lldb -target-linker-version 1115.7.3 -v -fcoverage-compilation-dir=/Users/pcanal/root_working/builds/master.module -resource-dir /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/clang/16 -isysroot /Library/Developer/CommandLineTools/SDKs/MacOS",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16494#issuecomment-2377172429:6457,clear,clear-ast-before-backend,6457,https://root.cern,https://github.com/root-project/root/pull/16494#issuecomment-2377172429,2,['clear'],['clear-ast-before-backend']
Usability,"Yeah, I found it in the guide. Thanks a lot. Best Regards，; Long LI; --------------------------------------------------------------------------; Institute of Frontier and Interdisciplinary Science, Shandong University. Addr：NO.72 Binhaidadao,Jimo,Qindao,PRC; E-mail: longli@mail.sdu.edu.cn; Tel: +86 13176405608 ; . On 11/17/2020 16:28，Olivier Couet<notifications@github.com> wrote：. Col2 option is a bitmap Representation of the histogram to make the col option very fast when the histogram has many bins and the bin size is close to one pixel. But this bitmap graphics and ps and pdf are vector graphics. So col2 produces an empty plot. This is not a bug. This feature is explained in the THistPainter reference guide (look at it) in the COL Option section.; —; You are receiving this because you authored the thread.; Reply to this email directly, view it on GitHub, or unsubscribe.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6822#issuecomment-728772136:24,guid,guide,24,https://root.cern,https://github.com/root-project/root/issues/6822#issuecomment-728772136,4,['guid'],['guide']
Usability,"Yeah, I wrote those docs :sweat_smile: but I am not sure they should say ""stored as 64 bit"". @pcanal I guess we can fix this test such that writing and reading back a `Long_t` leaf works correctly both on 32bit and 64bit architectures, but what happens when you write that data on a 64bit machine and read it on a 32bit machine or vice-versa?. @ellert in this test we really want to test `long int` support (see be6a62ee84317), so I think the appropriate fix would be to simply use a smaller value than the current `2^33` on 32bit machines, rather than switching to `long long`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10302#issuecomment-1091685848:471,simpl,simply,471,https://root.cern,https://github.com/root-project/root/pull/10302#issuecomment-1091685848,2,['simpl'],['simply']
Usability,"Yep, but it seems that this issue is still buggy in master. They suggest a workaround, but not sure... ```; QUICK FIXES FOR USERS:. If you personally encounter this ""Error in line 4595: Opening and ending tag; mismatch."", and you just want to fix that issue, then the solution is to; either make sure that all your enums are documented or that they are; appropriately hidden (nested in an undocumented class, or nested in a; filtered-out namespace (e.g., ""detail"")). This is what I did, it fixed all; my issues.; ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8781#issuecomment-1011076618:389,undo,undocumented,389,https://root.cern,https://github.com/root-project/root/issues/8781#issuecomment-1011076618,2,['undo'],['undocumented']
Usability,Yes . may be it is the simplest. Will do.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1702#issuecomment-370835794:23,simpl,simplest,23,https://root.cern,https://github.com/root-project/root/pull/1702#issuecomment-370835794,2,['simpl'],['simplest']
Usability,Yes 63 can be calculated but in that case 113 will need to be set. Yes we can have a named constant but the comment on the ligne setting 63 is clear enough I guess.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1546#issuecomment-360156026:143,clear,clear,143,https://root.cern,https://github.com/root-project/root/pull/1546#issuecomment-360156026,2,['clear'],['clear']
Usability,Yes I do this mistake too from time to time :-) (reducing the number of input files in Doxyfile and forget to restore te right version before committing). You simply need to change Doxyfile to the correct version and push it again to this PR.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3552#issuecomment-532091018:159,simpl,simply,159,https://root.cern,https://github.com/root-project/root/pull/3552#issuecomment-532091018,2,['simpl'],['simply']
Usability,Yes I made a typo. It is fixed now. The full information about TTree should be in the Reference Guide. We will not update the User's guide any more. It could be useful if you point stuff you find in the User's Guide but not in the Reference or in the Manual. That would help us to update both. By the way: Try to find something about RDataFrame in the user's Guide.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7284#issuecomment-785901630:96,Guid,Guide,96,https://root.cern,https://github.com/root-project/root/issues/7284#issuecomment-785901630,5,"['Guid', 'guid']","['Guide', 'guide']"
Usability,"Yes I would like some feedback on the use of std::vector so I can take care of that appropriately together with rebasing. If this strategy is agreed I can also clean up a bit more to avoid the redundant size counters, etc.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7499#issuecomment-828637952:22,feedback,feedback,22,https://root.cern,https://github.com/root-project/root/pull/7499#issuecomment-828637952,2,['feedback'],['feedback']
Usability,Yes but the list of folders does not follow the classes naming .... You may need more something like `-DENABLE_HIST` .... but then is the `hist` folder we have `hist` and `histpainter` subfolders which might be enabled separately ... and this is a simple example there is much more complex structures for which we need a precise picking which is done by `makeinput.sh`,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8950#issuecomment-934499934:248,simpl,simple,248,https://root.cern,https://github.com/root-project/root/issues/8950#issuecomment-934499934,2,['simpl'],['simple']
Usability,"Yes but we do not need to have consecutive ranges and I think encoding the following way is clearer:; ""xy"" -> [0, 1000]; ""X"" -> [2000, 3000]; ""y"" -> [4000, 5000]",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1553#issuecomment-360485266:92,clear,clearer,92,https://root.cern,https://github.com/root-project/root/pull/1553#issuecomment-360485266,2,['clear'],['clearer']
Usability,Yes that's what is said in the DrawClone documentation. But what about using simply Draw instead of DrawClone in these examples ?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5680#issuecomment-633408762:77,simpl,simply,77,https://root.cern,https://github.com/root-project/root/pull/5680#issuecomment-633408762,2,['simpl'],['simply']
Usability,"Yes the first approach might be the simplest.; In your example you separate value with tabs. I thought `.csv` meant ""comma separated value"" therefore should we better do:; ```; outfile << x[i] << "","" << y[i] << std::endl;. ```; ?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9491#issuecomment-1058992368:36,simpl,simplest,36,https://root.cern,https://github.com/root-project/root/issues/9491#issuecomment-1058992368,2,['simpl'],['simplest']
Usability,"Yes this is a way towards this. There are more steps (TFile, TKey and adding custom streamers for the TProto* classes and a few others) so not simple but likely straight-forward.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6532#issuecomment-721762456:143,simpl,simple,143,https://root.cern,https://github.com/root-project/root/pull/6532#issuecomment-721762456,2,['simpl'],['simple']
Usability,"Yes we are working on the manual. And please if you see something missing in Manual or in the reference guide which is no where else but in the Old User's Guide, let us know and we will make sure it appears somewhere. ; I guess we can close this issue now ?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7284#issuecomment-785937049:104,guid,guide,104,https://root.cern,https://github.com/root-project/root/issues/7284#issuecomment-785937049,3,"['Guid', 'guid']","['Guide', 'guide']"
Usability,"Yes, @amadio , that was a nice intuition of yours. The comment also goes beyond this particular item and shows we really explored the topic in depth :) I am closing the issue.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7709#issuecomment-1833892432:31,intuit,intuition,31,https://root.cern,https://github.com/root-project/root/issues/7709#issuecomment-1833892432,2,['intuit'],['intuition']
Usability,"Yes, I know about rootbrowse. The TBrowser was just the simplest example I have. It's not the only custom command line option I'm using, I also use this to manipulate gStyle, load .so files, etc. . Of course I am fully aware that my complaint feels a lot like https://xkcd.com/1172/...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8850#issuecomment-1079234719:56,simpl,simplest,56,https://root.cern,https://github.com/root-project/root/issues/8850#issuecomment-1079234719,2,['simpl'],['simplest']
Usability,"Yes, I know, but since this is quite a high level change, I don't think I will introduce it in the `TGCommandPlugin` class. You should do that in your own application. For example, you can simply copy and paste what is done in `TRint.cxx`:; ```; // Goto into raw terminal input mode; char defhist[kMAXPATHLEN];; snprintf(defhist, sizeof(defhist), ""%s/.root_hist"", gSystem->HomeDirectory());; logon = gEnv->GetValue(""Rint.History"", defhist);; // In the code we had HistorySize and HistorySave, in the rootrc and doc; // we have HistSize and HistSave. Keep the doc as it is and check; // now also for HistSize and HistSave in case the user did not use; // the History versions; int hist_size = gEnv->GetValue(""Rint.HistorySize"", 500);; if (hist_size == 500); hist_size = gEnv->GetValue(""Rint.HistSize"", 500);; int hist_save = gEnv->GetValue(""Rint.HistorySave"", 400);; if (hist_save == 400); hist_save = gEnv->GetValue(""Rint.HistSave"", 400);; const char *envHist = gSystem->Getenv(""ROOT_HIST"");; if (envHist) {; hist_size = atoi(envHist);; envHist = strchr(envHist, ':');; if (envHist); hist_save = atoi(envHist+1);; }; Gl_histsize(hist_size, hist_save);; Gl_histinit((char *)logon);; ```; You can even specify your own history file, if you don't want to use the default.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7180#issuecomment-780840424:189,simpl,simply,189,https://root.cern,https://github.com/root-project/root/issues/7180#issuecomment-780840424,2,['simpl'],['simply']
Usability,"Yes, I noted that, but it looks like it's a shorter version of that in the User's Guide. I hope ""new"" doesn't mean that it will replace the existing manual (or, even worse, to create a second source of the same documentation)?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7284#issuecomment-785858085:82,Guid,Guide,82,https://root.cern,https://github.com/root-project/root/issues/7284#issuecomment-785858085,1,['Guid'],['Guide']
Usability,"Yes, I see it with a simple 1D histogram, too, no need for secondary axes. But... Ok I found out the issue. I do see the artifact only if I call:; `c->SetFillStyle(0);`",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9763#issuecomment-1026887078:21,simpl,simple,21,https://root.cern,https://github.com/root-project/root/issues/9763#issuecomment-1026887078,2,['simpl'],['simple']
Usability,"Yes, I see same problem in JSROOT. It is because we are using different coordinates inside frame for axes/grids/histogram drawings and for `TLine` which is drawn in the pad coordinates. Main problem here that left/top coordinates of the frame are rounded integer values. ; And then axis position calculated relative to this rounded values.; In this example vertical coordinate of the frame should be `52.5`, but rounded to `52` or `53`.; Drawing will be perfect when canvas vertical size is 500. I see no simple solution here. ; To fix problem we have to change fX1, fY1, fX2, fY2 members of the TPad every time canvas width or height is changing. More easy solution is to provide extra draw option for `TLine` (and similar classes) where coordinates calculated using frame functions. Then it automatically will be adjusted to the rounded position of the frame",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14546#issuecomment-1944053421:505,simpl,simple,505,https://root.cern,https://github.com/root-project/root/issues/14546#issuecomment-1944053421,2,['simpl'],['simple']
Usability,"Yes, better than the ""That should fix a recent nightly failure with gcc11"" that Philippe commented on, thanks for improving it!. Compared to just including the actual diagnostic (something Philippe and I generally try to do these days, something that has proven super helpful several times), your current log:; ```; That should fix a recent nightly failure with gcc11 avoiding to require; module ""bits/ranges_base.h"" in C++20 context.; ```. does not call out; - that it's during dictionary generation; - that the modulemap requires the module feature 'cplusplus20' (your log seems to suggest that the error surfaces when compiled in C++20 mode, while this error shows up when compiling in C++14 or 17); - that the issue is also with GCC12 headers (your message seems to suggest that it's only with GCC11 headers); - the ""stack trace"", i.e. `/usr/include/c++/12/experimental/string_view:43:10: note: submodule of top-level module 'std' implicitly imported here` and then `/home/sftnight/build/night/LABEL/ROOT-fedora36/SPEC/default/V/master/build/include/Rtypes.h:195:10: fatal error: could not build module 'ROOT_Foundation_Stage1_NoRTTI'` and then `#include ""TIsAProxy.h""`. In general we tell our users (+/- always) ""can we please see the actual diagnostic"", and for the same reasons it's super helpful to include them here. The time we discussed this is waaay larger than the time it would have taken you to update the log to what Philippe proposes, rather than updating it to something that tries to address the issues (but seemingly fails?). But it's Philippe's review, I let him comment / deal with this if you still prefer to keep your current commit log. I simply wanted to add an explanation why Philippe suggests the inclusion of the actual diagnostic (and why I found it convincing and do it ever since he propose it to me).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12276#issuecomment-1429251757:1664,simpl,simply,1664,https://root.cern,https://github.com/root-project/root/pull/12276#issuecomment-1429251757,2,['simpl'],['simply']
Usability,"Yes, but we meant it would be useful to add also a note or link to it in the Users Guide: https://root.cern.ch/root/htmldoc/guides/users-guide/Threads.html",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7216#issuecomment-1057548805:83,Guid,Guide,83,https://root.cern,https://github.com/root-project/root/issues/7216#issuecomment-1057548805,5,"['Guid', 'guid']","['Guide', 'guide', 'guides']"
Usability,"Yes, documentation is not there.; Many settings are not RBrowser specific, but applied for all web widgets: canvases, geometry viewer, eve7, browser, fit panel.; Major settings are mentioned here:; https://root.cern/doc/master/classROOT_1_1Experimental_1_1RWebWindowsManager.html ; See CreateServer and ShowWindow methods. Chrome and Firefox browser are required for batch mode.; For normal interactive mode any modern web browser should do the job.; But in fact, most of them are just modifications of chrome - beside firefox. ; To be clear - old `Internet Explorer` is not ""modern"" browser and therefore not supported.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10259#issuecomment-1090486006:536,clear,clear,536,https://root.cern,https://github.com/root-project/root/issues/10259#issuecomment-1090486006,2,['clear'],['clear']
Usability,"Yes, it is clearly a difference is setup. In the failing one the `BLAS` library is not installed (or not found) and the real problem is that this result in a very obscure and hard to understand failure:; ```; IncrementalExecutor::executeFunction: symbol 'saxpy_' unresolved while linking [cling interface function]!; IncrementalExecutor::executeFunction: symbol 'sgemm_' unresolved while linking [cling interface function]!; ```; Instead we should either; * fail to configure if BLAS is missing; or ; * disable the components that require BLAS when configuring whe BLAS is missing; or; * disable the test that require BLAS when BLAS is not there. and at the very least we should list somewhere (if not already done so, but I don't see it) that the `BLAS` library is required to successfully run the tests and some of the features.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/16720#issuecomment-2425048725:11,clear,clearly,11,https://root.cern,https://github.com/root-project/root/issues/16720#issuecomment-2425048725,2,['clear'],['clearly']
Usability,"Yes, it is not supported up to now.; In #10344 I implement exactly this feature.; In the settings dialog one can specify flag ""Append to canvas"", which does exactly the same as ""same"" draw option. Thanks for providing useful feedback!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10265#issuecomment-1090470674:225,feedback,feedback,225,https://root.cern,https://github.com/root-project/root/issues/10265#issuecomment-1090470674,2,['feedback'],['feedback']
Usability,"Yes, it is same problem. Actually, solution is very simple and I implement it with JSROOT. ; One can copy it to the C++",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9364#issuecomment-1012969310:52,simpl,simple,52,https://root.cern,https://github.com/root-project/root/issues/9364#issuecomment-1012969310,2,['simpl'],['simple']
Usability,"Yes, of course! I will also copy it here:. The rationale behind this change is that the public methods will (in most cases) be directly used by end users, so there is no need to further propagate potential errors. It removes the need to `Unwrap` the importer object returned by `Create`, making it more intuitive to use. As a potential downside, this means that in case the importer is used in more elaborate call; chains this propagation is of course not possible anymore. A possible solution could be to have methods for both, although this will obviously add some bloat.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12565#issuecomment-1488072046:303,intuit,intuitive,303,https://root.cern,https://github.com/root-project/root/pull/12565#issuecomment-1488072046,2,['intuit'],['intuitive']
Usability,"Yes, of course, I can reproduce the error in regular C++ with something as simple as <https://godbolt.org/z/rnqWer3bj>:; ```cpp; #include <ranges>; using namespace std;; #include <range/v3/views.hpp>; ```; but I see 2 errors in this example:; - using std::ranges and ranges at the same time (not really an error, but a bit silly); - `using namespace std` before including `range/v3/views.hpp` (actually `using namespace std` should be considered an error by itself). The following code works:; ```cpp; #include <ranges>; #include <range/v3/views.hpp>; using namespace std;; ```; still a bit silly, but it works. So, I'm sorry, but I do not buy the comment that developers of libraries should always put `::` in front of every top level namespace. I believe it is fairy reasonable to assume that nobody does `using namespace std;` before including any header.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13001#issuecomment-1591318680:75,simpl,simple,75,https://root.cern,https://github.com/root-project/root/issues/13001#issuecomment-1591318680,2,['simpl'],['simple']
Usability,"Yes, that's a tricky part ... I hope your changes do not break anything. ... that's not clear just looking at the PR. Also I guess this way of handling the options comes from THisPainter. so to be consistent you might want to change it there too... but that's a much bigger thing .....",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5898#issuecomment-647544231:88,clear,clear,88,https://root.cern,https://github.com/root-project/root/pull/5898#issuecomment-647544231,2,['clear'],['clear']
Usability,"Yes, that's to be expected because of the error in the command:; `qhelpgenerator index.qhp`. I checked locally and I am seeing the same error. It seems the index.qhp file is corrupted here because of a mismatch in section opening and closing tags:; ```. <toc>; <section title=""ROOT master"" ref=""index.html"">; <section title=""ROOT Reference Documentation"" ref=""index.html"">; <section title=""Introduction"" ref=""index.html#autotoc_md0"" />; <section title=""Manuals"" ref=""index.html#autotoc_md1"" />; <section title=""Tutorials and courses"" ref=""index.html#autotoc_md2"" />; <section title=""Provide your feedback"" ref=""index.html#autotoc_md3"" />; </section>; </section>; </section>; <section title=""Tutorials"" ref=""group__Tutorials.html"" />; ```; I guess I will have to file another bug report in doxygen :s",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8781#issuecomment-1011056200:596,feedback,feedback,596,https://root.cern,https://github.com/root-project/root/issues/8781#issuecomment-1011056200,2,['feedback'],['feedback']
Usability,"Yes, we will have to consistently undo a set of other changes, namely in the tmva cmake files and rootcling.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6999#issuecomment-758267044:34,undo,undo,34,https://root.cern,https://github.com/root-project/root/pull/6999#issuecomment-758267044,2,['undo'],['undo']
Usability,Yes. Issue is clarified. - I can see the classlist on the browser at home and in the office.; - I cannot see it at the pit .... but this all hints to a funny browser setup there. I have to investigate. Thanks a lot to all for the clarification and please take my apologies for ; creating noise about an issue which was clearly my fault!. Thanks a lot!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/15906#issuecomment-2185817262:319,clear,clearly,319,https://root.cern,https://github.com/root-project/root/issues/15906#issuecomment-2185817262,2,['clear'],['clearly']
Usability,"Yes. The link goes into detail, but record arrays are essentially arrays of structs— contiguous in memory, rowwise across named, differently typed members. You can also specify per-member alignment, in case your operating system has weird alignment rules. The user can then refer to rows of the record array with integer slices and columns with strings in square brackets. Since the data are rectangular, these slices are accomplished through constant strides. I've often wondered what the big deal about Pandas was, since these are the features people describe as the benefits of Pandas, but they've been available in Numpy for years. I've since learned that Pandas additionally has smarter indexing than Numpy's position-based indexing, but that's not needed for something that's essentially a set, like a set of events. (Not needed until we aggregate somehow.)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1872#issuecomment-384268662:647,learn,learned,647,https://root.cern,https://github.com/root-project/root/pull/1872#issuecomment-384268662,2,['learn'],['learned']
Usability,"You are night, we need to make sure that ROOT compiles if there is already ROOT on the system, or at least that you get a clear error. There is already an open issue about this, so I'll close this issue as duplicate:; https://github.com/root-project/root/issues/13101",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14337#issuecomment-2046073774:122,clear,clear,122,https://root.cern,https://github.com/root-project/root/issues/14337#issuecomment-2046073774,2,['clear'],['clear']
Usability,"You are right, extra boilerplate in the tutorials is not good. But This PR is not meant to me merged as is, I did it to explore why `ClearProxiedObjects()` is needed also for hard shutdown. And the set of code that I needed to add to the tutorials made to reason more or less clear: there is some issue with `TH1` specifically.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16671#issuecomment-2410483715:133,Clear,ClearProxiedObjects,133,https://root.cern,https://github.com/root-project/root/pull/16671#issuecomment-2410483715,3,"['Clear', 'clear']","['ClearProxiedObjects', 'clear']"
Usability,"You called it ""simple"", you tricked us into reviewing! :P",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5453#issuecomment-618903622:15,simpl,simple,15,https://root.cern,https://github.com/root-project/root/pull/5453#issuecomment-618903622,2,['simpl'],['simple']
Usability,You can simply disable `imt` (`-Dimt=OFF`) and `builtin_tbb` (-D`builtin_tbb=OFF`).,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8742#issuecomment-888087500:8,simpl,simply,8,https://root.cern,https://github.com/root-project/root/issues/8742#issuecomment-888087500,2,['simpl'],['simply']
Usability,You can use `R` or `ATTRDUMP`. I just like the freedom we have of using more telling raw string delimiters than `R`. It's also not clear whether such a chance (from `ATTRDUMP` to `R`) is worth the churn.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10830#issuecomment-1168354018:131,clear,clear,131,https://root.cern,https://github.com/root-project/root/pull/10830#issuecomment-1168354018,2,['clear'],['clear']
Usability,You do not have any Draw() method for the TFeynmanEntry. You have a Add() method which will add the new object in the list of object in TFeynman. So you need to have a Tlist in TFeynman holding the list of all the TFeynman entry buildingthe diagram. The Draw method of TFeynman will simply do AppendPad and will pout the whole diagram in the list of primates of the current pad (gPad) . TFeynmanEntry will have a Paint and the Paint method of TFeynman will call all the Paint of the TFeynmanEntry in the TList ... Really it is the same structure as TLegend.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7820#issuecomment-819336796:283,simpl,simply,283,https://root.cern,https://github.com/root-project/root/pull/7820#issuecomment-819336796,2,['simpl'],['simply']
Usability,"You mean `gStyle->GetAxisMaxDigits()`?. I guess, one should understand why it happens.; How I can reproduce it?. As a workaround, I can add simple check in this function that it returns meaningful positive value from the range [0..100]",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12513#issuecomment-1490325536:140,simpl,simple,140,https://root.cern,https://github.com/root-project/root/pull/12513#issuecomment-1490325536,2,['simpl'],['simple']
Usability,You mean as a progress bar? 'Cause I am *sure* that clang is making progress - I doubt that have a `if (opt == O2) sleep(120)` ;-),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2360#issuecomment-417276705:14,progress bar,progress bar,14,https://root.cern,https://github.com/root-project/root/pull/2360#issuecomment-417276705,2,['progress bar'],['progress bar']
Usability,"You probably mean ""are now in development phase"".; As of today, I see that ; 1) there is no better document than the User's guide (the chapter about trees there looks more comprehensive to me than in the manual).; 2) it is still available from the site, people may use that. ; 3) the manual has no pdf. For me it's very important, because I don't want to be online to read docs. I could use `wget`, but when I have a ready pdf, I chose the latter. I honestly think that User's Guide is well-written and useful. I think that to do small updates to that (at least to sync the pdf version with html) is better now, until the manual is finalized and is definitely better than the old guide.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7284#issuecomment-785897720:124,guid,guide,124,https://root.cern,https://github.com/root-project/root/issues/7284#issuecomment-785897720,5,"['Guid', 'guid']","['Guide', 'guide']"
Usability,You would like to have the whole Reference Guide generated via Doxygen in pdf format ? ; Doxygen is able to generate Latex (then pdf) ... We can try but I am afraid that will be a monster file...,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7421#issuecomment-799484591:43,Guid,Guide,43,https://root.cern,https://github.com/root-project/root/issues/7421#issuecomment-799484591,1,['Guid'],['Guide']
Usability,You're very welcome! And thanks for the feedback!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/15336#issuecomment-2159926070:40,feedback,feedback,40,https://root.cern,https://github.com/root-project/root/issues/15336#issuecomment-2159926070,2,['feedback'],['feedback']
Usability,Your comment is very valid. In the particular case you mentioned that would mean your TPaveLabel has wh ot ww = 0 ? so it won't be really useful. But I agree It should not crash. By chance do you have a simple reproducer ?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6344#issuecomment-692111232:203,simpl,simple,203,https://root.cern,https://github.com/root-project/root/issues/6344#issuecomment-692111232,2,['simpl'],['simple']
Usability,Your fix is fine. ; I see that the arrows are not responsive on Mac also,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7184#issuecomment-778014086:50,responsiv,responsive,50,https://root.cern,https://github.com/root-project/root/pull/7184#issuecomment-778014086,2,['responsiv'],['responsive']
Usability,"ZN11__cling_N5015__cling_Un1Qu30EPv(i8*) local_unnamed_addr #0 {; %2 = load i8*, i8** bitcast (%""class.cling::Interpreter.0""** @_ZN5cling7runtime6gClingE to i8**), align 8, !tbaa !2; @@ -39,9 +39,9 @@; %5 = load i1 (%class.TSystem*, i8*, i32)**, i1 (%class.TSystem*, i8*, i32)*** %4, align 8, !tbaa !6; %6 = getelementptr inbounds i1 (%class.TSystem*, i8*, i32)*, i1 (%class.TSystem*, i8*, i32)** %5, i64 135; %7 = load i1 (%class.TSystem*, i8*, i32)*, i1 (%class.TSystem*, i8*, i32)** %6, align 8; - %8 = tail call zeroext i1 %7(%class.TSystem* %3, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str, i64 0, i64 0), i32 zeroext 0); + %8 = tail call zeroext i1 %7(%class.TSystem* %3, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str, i64 0, i64 0), i32 zeroext 0); %9 = zext i1 %8 to i64; - tail call void @_ZN5cling7runtime8internal15setValueNoAllocEPvS2_S2_cy(i8* %2, i8* %0, i8* nonnull inttoptr (i64 283833264 to i8*), i8 signext 1, i64 %9); + tail call void @_ZN5cling7runtime8internal15setValueNoAllocEPvS2_S2_cy(i8* %2, i8* %0, i8* nonnull inttoptr (i64 283832976 to i8*), i8 signext 1, i64 %9); ret void; }; ; @@ -65,4 +65,4 @@; !5 = !{!""Simple C++ TBAA""}; !6 = !{!7, !7, i64 0}; !7 = !{!""vtable pointer"", !5, i64 0}; -$8 = void; +$10 = void; ```. Please ignore this. The issue seems to be caused by the plugin manager which is trying to resolve a url. The crash is still present for `root.exe -l -b -e 'gSystem->AccessPathName(""httppp://KKKKK"",kFileExists)'` which just goes over the available plugins and asks if one could resolve the url. The current flow is that we first parse the string `gSystem->AccessPathName(""httppp://KKKKK"",kFileExists)` and start executing it. Then, at execution time, we realize that might be a url and start parsing and executing various file fetch plugins (davix, http...) and then upon execution of `etc/plugins/TSystem/P050_TWebSystem.C` we crash. The code of the plugin is nothing complicated:; ```c++; void P050_TWebSystem(); {; gPluginMgr->AddHand",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8072#issuecomment-982075814:1874,Simpl,Simple,1874,https://root.cern,https://github.com/root-project/root/issues/8072#issuecomment-982075814,1,['Simpl'],['Simple']
Usability,"[ ] Checked for duplicates; <!--; Please search in; * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ## Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->. *New PyROOT* fails to (de)serialize the ROOT objects using `pickle` (or `dill`) if `ROOT` module is not pre-imported. ; If one pre-imports `ROOT` module, deserialization is successful, otherwise it results in the segmentation fauilt. ; It is definitely related to *new PyROOT* - with *old PyROOT*, deserialization is successfull both with `pickle` and `dill`.; . (For `python3` there is another problem described in [issue#6370](https://github.com/root-project/root/issues/6370) ); ## Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->; Deseriazation should *not* depend on pre-import of `ROOT`. ## To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->. see this [gist](https://gist.github.com/VanyaBelyaev/1403e2ea8853ad68d7a7fba1e3496f67) where there are reproducers both for `pickle` and for `dill`. The first lines in the scritps show the test matrix: It fails for `LCG_98` and for lcg-dev3-slot, while is it successful for LCG versions from LCG_95 to LCG_97a. (see the environment part in the reproducers) ; ; ## Setup. 1. ROOT version 6.22-6.23; 2. Operating system lxplus ; 3. How you obtained ROOT: lxplus , cvmfs, LCG . ## Additional context; <!--; Add any other context about the problem here.; -->; It could have something common with [issue#6370](https://github.com/r",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6552:388,clear,clear,388,https://root.cern,https://github.com/root-project/root/issues/6552,2,['clear'],['clear']
Usability,[CI] Add `xgboost` and `scikit-learn` to requirements,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15183:31,learn,learn,31,https://root.cern,https://github.com/root-project/root/pull/15183,2,['learn'],['learn']
Usability,[CMake] Simplify build configuration with Python 3,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15401:8,Simpl,Simplify,8,https://root.cern,https://github.com/root-project/root/pull/15401,1,['Simpl'],['Simplify']
Usability,[CMake] Simplify search for X11 components,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16008:8,Simpl,Simplify,8,https://root.cern,https://github.com/root-project/root/pull/16008,1,['Simpl'],['Simplify']
Usability,[Cling] Simplify std::tuple value printer,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13619:8,Simpl,Simplify,8,https://root.cern,https://github.com/root-project/root/pull/13619,1,['Simpl'],['Simplify']
Usability,[Cling][Backport] Simplify tuple value printer,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13887:18,Simpl,Simplify,18,https://root.cern,https://github.com/root-project/root/pull/13887,1,['Simpl'],['Simplify']
Usability,[Core] 1MB less RSS at root startup with simple optimisations,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3383:41,simpl,simple,41,https://root.cern,https://github.com/root-project/root/pull/3383,2,['simpl'],['simple']
Usability,[Core] Attempt to make TThreadExecutor usable even if (build option) IMT=OFF,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6298:39,usab,usable,39,https://root.cern,https://github.com/root-project/root/pull/6298,2,['usab'],['usable']
Usability,"[CppInterOp](https://github.com/compiler-research/CppInterOp) exposes API from Clang and LLVM in a mostly backward compatibe way. The API support downstream tools that utilize interactive C++ by using the compiler as a service. Adopting more of CppInterOp in ROOT will help simplify the LLVM migration process and allow us to upstream more patches to either CppInterOp or LLVM. @aaronj0, you can take it from here.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16296:274,simpl,simplify,274,https://root.cern,https://github.com/root-project/root/pull/16296,1,['simpl'],['simplify']
Usability,"[CppInterOp](https://github.com/compiler-research/CppInterOp) exposes API from Clang and LLVM in a mostly backward compatibe way. The API support downstream tools that utilize interactive C++ by using the compiler as a service. This PR is the first step in using pure clang based reflection API in meta, and part of eventually integrating the JITCall and DynamicLibraryManager infrastructure. Adopting more of CppInterOp in ROOT will help simplify the LLVM migration process and allow us to upstream more patches to either CppInterOp or LLVM.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16814:439,simpl,simplify,439,https://root.cern,https://github.com/root-project/root/pull/16814,1,['simpl'],['simplify']
Usability,"[DF] Add a missing include, make some code slightly clearer",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9190:52,clear,clearer,52,https://root.cern,https://github.com/root-project/root/pull/9190,2,['clear'],['clearer']
Usability,[DF] Add two simple tutorials in C++ and Python,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8990:13,simpl,simple,13,https://root.cern,https://github.com/root-project/root/pull/8990,2,['simpl'],['simple']
Usability,[DF] Improve progress bar finalization,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13855:13,progress bar,progress bar,13,https://root.cern,https://github.com/root-project/root/pull/13855,2,['progress bar'],['progress bar']
Usability,[DF] Make API clearer w.r.t. what can/cannot be null,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11471:14,clear,clearer,14,https://root.cern,https://github.com/root-project/root/pull/11471,2,['clear'],['clearer']
Usability,[DF] Section of RDF reference guide about RDF+RVec,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7086:30,guid,guide,30,https://root.cern,https://github.com/root-project/root/issues/7086,2,['guid'],['guide']
Usability,[DF] Simplification/refactoring of dataframe_regression gtests,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6550:5,Simpl,Simplification,5,https://root.cern,https://github.com/root-project/root/pull/6550,1,['Simpl'],['Simplification']
Usability,[DF] Simplify BoolArray helper class,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7484:5,Simpl,Simplify,5,https://root.cern,https://github.com/root-project/root/pull/7484,1,['Simpl'],['Simplify']
Usability,[DF] Simplify EXPECT_EQ call,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10723:5,Simpl,Simplify,5,https://root.cern,https://github.com/root-project/root/pull/10723,1,['Simpl'],['Simplify']
Usability,[DF] Simplify MakeColumnReaders,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9275:5,Simpl,Simplify,5,https://root.cern,https://github.com/root-project/root/pull/9275,1,['Simpl'],['Simplify']
Usability,[DF] Simplify RTreeColumnReader destructor,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16158:5,Simpl,Simplify,5,https://root.cern,https://github.com/root-project/root/pull/16158,1,['Simpl'],['Simplify']
Usability,[DF] Simplify adding friend info in distributed task,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10244:5,Simpl,Simplify,5,https://root.cern,https://github.com/root-project/root/pull/10244,1,['Simpl'],['Simplify']
Usability,[DF] Simplify column reader ownership model,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11314:5,Simpl,Simplify,5,https://root.cern,https://github.com/root-project/root/pull/11314,1,['Simpl'],['Simplify']
Usability,"[DF] Simplify df003_profiles.{C,py}",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11087:5,Simpl,Simplify,5,https://root.cern,https://github.com/root-project/root/pull/11087,1,['Simpl'],['Simplify']
Usability,[DF] Simplify friend trees creation in RLoopManager,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12262:5,Simpl,Simplify,5,https://root.cern,https://github.com/root-project/root/pull/12262,1,['Simpl'],['Simplify']
Usability,[DF] Simplify internals now that lifetimes are simpler,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2536:5,Simpl,Simplify,5,https://root.cern,https://github.com/root-project/root/pull/2536,3,"['Simpl', 'simpl']","['Simplify', 'simpler']"
Usability,[DF] Simplify logic now that lifetimes are simpler,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2594:5,Simpl,Simplify,5,https://root.cern,https://github.com/root-project/root/pull/2594,3,"['Simpl', 'simpl']","['Simplify', 'simpler']"
Usability,[DF] Simplify reading of RDataSource columns,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6208:5,Simpl,Simplify,5,https://root.cern,https://github.com/root-project/root/pull/6208,1,['Simpl'],['Simplify']
Usability,[DF] Simplify reg-/deregistration with RLoopManager,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10653:5,Simpl,Simplify,5,https://root.cern,https://github.com/root-project/root/pull/10653,1,['Simpl'],['Simplify']
Usability,[DF] Trigger the creation of notebooks for RDF simple tutorials,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9002:47,simpl,simple,47,https://root.cern,https://github.com/root-project/root/pull/9002,2,['simpl'],['simple']
Usability,[DF] Use auto instead of auto* when it's clear type is a pointer,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2126:41,clear,clear,41,https://root.cern,https://github.com/root-project/root/pull/2126,2,['clear'],['clear']
Usability,[DF] User-friendly error in case of Fill signature mismatch,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9895:5,User-friendly,User-friendly,5,https://root.cern,https://github.com/root-project/root/pull/9895,1,['User-friendly'],['User-friendly']
Usability,[DF][DOC] Small amendments to user guide,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2105:35,guid,guide,35,https://root.cern,https://github.com/root-project/root/pull/2105,4,['guid'],['guide']
Usability,[DF][NFC] Change RDF reference guide,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9606:31,guid,guide,31,https://root.cern,https://github.com/root-project/root/pull/9606,2,['guid'],['guide']
Usability,[DF][NFC] Fix error in user guide image,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6032:28,guid,guide,28,https://root.cern,https://github.com/root-project/root/pull/6032,2,['guid'],['guide']
Usability,[DF][NFC] Mention conversion to RNode in user guide,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2974:46,guid,guide,46,https://root.cern,https://github.com/root-project/root/pull/2974,2,['guid'],['guide']
Usability,[DF][NFC] Simplify BoolArray helper class,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7487:10,Simpl,Simplify,10,https://root.cern,https://github.com/root-project/root/pull/7487,1,['Simpl'],['Simplify']
Usability,[DF][ntuple] simplify RNTupleDS construction with new fields iterator,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5910:13,simpl,simplify,13,https://root.cern,https://github.com/root-project/root/pull/5910,2,['simpl'],['simplify']
Usability,[DF][skip-ci] Minor updates to RDF user guide,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7797:40,guid,guide,40,https://root.cern,https://github.com/root-project/root/pull/7797,2,['guid'],['guide']
Usability,[DF][skip-ci] Revise user guide,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7388:26,guid,guide,26,https://root.cern,https://github.com/root-project/root/pull/7388,2,['guid'],['guide']
Usability,[DOC] Fix Alias example usage in TDF user guide,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1542:42,guid,guide,42,https://root.cern,https://github.com/root-project/root/pull/1542,2,['guid'],['guide']
Usability,[Do not merge][PyROOT] Don't call `ClearProxiedObjects()` in hard shutdown mode,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16671:35,Clear,ClearProxiedObjects,35,https://root.cern,https://github.com/root-project/root/pull/16671,1,['Clear'],['ClearProxiedObjects']
Usability,[Doc] Add PyMVA introduction and Keras documentation to TMVA Users Guide,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/391:67,Guid,Guide,67,https://root.cern,https://github.com/root-project/root/pull/391,1,['Guid'],['Guide']
Usability,[Doc] Resolving grammatical errors and spellings in user-guides,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3816:57,guid,guides,57,https://root.cern,https://github.com/root-project/root/pull/3816,2,['guid'],['guides']
Usability,[Exp PyROOT][ROOT-10395] Clear PyErr after getting __cpp_name__,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4623:25,Clear,Clear,25,https://root.cern,https://github.com/root-project/root/pull/4623,1,['Clear'],['Clear']
Usability,[GL] Add scaling factors for width and bounding-box size used when drawing simple axes in TGLViewer,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11180:75,simpl,simple,75,https://root.cern,https://github.com/root-project/root/pull/11180,2,['simpl'],['simple']
Usability,[NFC][CONTRIBUTING] Extend contribution guidelines,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14410:40,guid,guidelines,40,https://root.cern,https://github.com/root-project/root/pull/14410,2,['guid'],['guidelines']
Usability,[NFC][TMVA] Users guide -- update instructions for randomised trees,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3256:18,guid,guide,18,https://root.cern,https://github.com/root-project/root/pull/3256,2,['guid'],['guide']
Usability,"[PyROOT, Graphics] Cannot pause pyROOT script with `input()` and see canvases",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13744:26,pause,pause,26,https://root.cern,https://github.com/root-project/root/issues/13744,2,['pause'],['pause']
Usability,[PyROOT] Simplify lookup logic,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5187:9,Simpl,Simplify,9,https://root.cern,https://github.com/root-project/root/pull/5187,1,['Simpl'],['Simplify']
Usability,[RDF] Add progress bar + event statistics,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8675:10,progress bar,progress bar,10,https://root.cern,https://github.com/root-project/root/pull/8675,2,['progress bar'],['progress bar']
Usability,"[RDF] Re-enable all of dataframe_{cache,simple,interface}",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2066:40,simpl,simple,40,https://root.cern,https://github.com/root-project/root/pull/2066,2,['simpl'],['simple']
Usability,"[RDF] Re-enable dataframe_{interface,simple}",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2083:37,simpl,simple,37,https://root.cern,https://github.com/root-project/root/pull/2083,2,['simpl'],['simple']
Usability,[RDataFrame] Inaccurate example of progress bar from documentation,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/15040:35,progress bar,progress bar,35,https://root.cern,https://github.com/root-project/root/issues/15040,2,['progress bar'],['progress bar']
Usability,"[RDrawable] change drawable identifier logic, simplify painting",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4469:46,simpl,simplify,46,https://root.cern,https://github.com/root-project/root/pull/4469,2,['simpl'],['simplify']
Usability,"[README] Remove link to removed ""Bug reporting guidelines"":",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6834:47,guid,guidelines,47,https://root.cern,https://github.com/root-project/root/pull/6834,2,['guid'],['guidelines']
Usability,"[RF-8932] When a RooCurve is plotted as a filled polygon, one point has; to be added at the lower left of the plot to close the polygon.; A few lines of code have been cleaned up and simplified.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4759:183,simpl,simplified,183,https://root.cern,https://github.com/root-project/root/pull/4759,1,['simpl'],['simplified']
Usability,"[RF-8932] When a RooCurve is plotted as a filled polygon, one point has; to be added at the lower left of the plot to close the polygon.; A few lines of code have been cleaned up and simplified. See also here:; https://root-forum.cern.ch/t/odd-behaviour-using-drawoption-f/19104. https://root-forum.cern.ch/t/plotting-issue-with-multiple-filled-pdfs-using-addto/25746",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4760:183,simpl,simplified,183,https://root.cern,https://github.com/root-project/root/pull/4760,1,['simpl'],['simplified']
Usability,[RF] Add function to clear Minuit status history in RooMinimizer,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13610:21,clear,clear,21,https://root.cern,https://github.com/root-project/root/pull/13610,2,['clear'],['clear']
Usability,[RF] Avoid clearing full RunContext after each NLL evaluation,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7344:11,clear,clearing,11,https://root.cern,https://github.com/root-project/root/pull/7344,2,['clear'],['clearing']
Usability,[RF] Cannot turn off useless messages with RooMCStudy unbinned fits + Progress bar would be better.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9489:70,Progress bar,Progress bar,70,https://root.cern,https://github.com/root-project/root/issues/9489,1,['Progress bar'],['Progress bar']
Usability,[RF] Change buffer management in BatchMode such that queues get cleared,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10736:64,clear,cleared,64,https://root.cern,https://github.com/root-project/root/pull/10736,2,['clear'],['cleared']
Usability,[RF] Clear out `RooFit.h` header with outdated compiler fix,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10231:5,Clear,Clear,5,https://root.cern,https://github.com/root-project/root/pull/10231,1,['Clear'],['Clear']
Usability,[RF] Clearly mark `RooFit::CloneData()` as deprecated,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12330:5,Clear,Clearly,5,https://root.cern,https://github.com/root-project/root/pull/12330,1,['Clear'],['Clearly']
Usability,[RF] Documentation and usability improvements,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7997:23,usab,usability,23,https://root.cern,https://github.com/root-project/root/pull/7997,2,['usab'],['usability']
Usability,[RF] Improve some documentation and usability,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8070:36,usab,usability,36,https://root.cern,https://github.com/root-project/root/pull/8070,2,['usab'],['usability']
Usability,[RF] Make Offset(“bin”) usable for CLs method,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/15959:24,usab,usable,24,https://root.cern,https://github.com/root-project/root/issues/15959,2,['usab'],['usable']
Usability,[RF] Refactor RooFitHS3 to solve various bugs and improve usability,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9482:58,usab,usability,58,https://root.cern,https://github.com/root-project/root/pull/9482,2,['usab'],['usability']
Usability,[RF] Simplify HistFactory models,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8167:5,Simpl,Simplify,5,https://root.cern,https://github.com/root-project/root/pull/8167,1,['Simpl'],['Simplify']
Usability,[RF] Speed improvement and a little usability,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6090:36,usab,usability,36,https://root.cern,https://github.com/root-project/root/pull/6090,2,['usab'],['usability']
Usability,[RF] Usability improvements for RooArgSet.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6323:5,Usab,Usability,5,https://root.cern,https://github.com/root-project/root/pull/6323,1,['Usab'],['Usability']
Usability,[RF] remove RooGradMinimizerFcn and simplify RooMinimizer configuration,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11716:36,simpl,simplify,36,https://root.cern,https://github.com/root-project/root/pull/11716,2,['simpl'],['simplify']
Usability,[RF][HF] Clearly mark interpolation code 3 as unknown,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13809:9,Clear,Clearly,9,https://root.cern,https://github.com/root-project/root/pull/13809,1,['Clear'],['Clearly']
Usability,"[ROOT-10093] When generating events with simultaneous PDFs that contain; further simultaneous PDFs, the category tags of each generated event have to be updated to yield a usable dataset.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3738:172,usab,usable,172,https://root.cern,https://github.com/root-project/root/pull/3738,1,['usab'],['usable']
Usability,"[ROOT-10277] When creating a lot of datasets in RooFit, TFoam eventually; crashed, since it was using a TRefArray, which does some global UID; magic that overflows. Replacing the TRefArray by a simple vector of; indices fixes that.; This is possible, since the TRefArray only points to active elements in; another collection, so simply storing the index in that collection is; sufficient. A ROOT-6.20 TFoam was created on lxplus, and written to a file. Reading; this file, and generating the 10 next random numbers is tested now. @pcanal ; Please check the schema evolution for me. Is it correct to ""read"" an array of pointers like this?; ```; TFoamCell **fCells;; fCells = onfile.fCells;; ```; It seems to work, but I'm unsure if that's just by luck (e.g. since the file is still open).",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5412:194,simpl,simple,194,https://root.cern,https://github.com/root-project/root/pull/5412,2,['simpl'],"['simple', 'simply']"
Usability,"[ROOT-10586](https://sft.its.cern.ch/jira/browse/ROOT-10586) is caused by a missing `<cmath>` include, which resulted in old GCC 6 not ""seeing"" the floating-point overloads of `std::abs` and getting confused at which integer overload of `std::abs` it should pick when a `double` is passed in. This was not caught during testing because we test on recent compilers with a C++17-compatible STL implementation, where if you see some overloads of `std::abs`, you see all of them. By switching to `std::fabs` in addition to fixing the include, I guarantee that if this happens again during an overeager include cleanup, the compiler error message will be clearer. Old compilers will now complain about a missing declaration of `std::fabs`, rather than a failed overload resolution of integer `std::abs`. Fixes ROOT-10586.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5062:650,clear,clearer,650,https://root.cern,https://github.com/root-project/root/pull/5062,1,['clear'],['clearer']
Usability,[ROOT-10802] We need a clear explanation of cycle numbers in our docs,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14584:23,clear,clear,23,https://root.cern,https://github.com/root-project/root/issues/14584,2,['clear'],['clear']
Usability,[ROOT-130] Update Minuit2 User Guide,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14551:31,Guid,Guide,31,https://root.cern,https://github.com/root-project/root/issues/14551,1,['Guid'],['Guide']
Usability,"[R] #undef Free, simply because. And ROOT-9258.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3053:17,simpl,simply,17,https://root.cern,https://github.com/root-project/root/pull/3053,2,['simpl'],['simply']
Usability,"[SaveGraph](https://root.cern/doc/master/namespaceROOT_1_1RDF.html#ac06a36e745255fb8744b1e0a563074c9) would benefit from the following improvements:. - [x] usage of static variables should be removed, in order to make `SaveGraph` safe to be called concurrently from multiple threads; - [x] a tutorial should be added, and an example usage should be included in the docs in the reference guide. ### Additional context; <!--; Add any other context about the problem here.; -->. Related old jira tickets:; - https://sft.its.cern.ch/jira/browse/ROOT-11023 (this is the original issue regarding the usage of statics in the implementation of SaveGraph); - https://sft.its.cern.ch/jira/browse/ROOT-9721 (this contains a draft tutorial and an old SaveGraph bug report)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9145:387,guid,guide,387,https://root.cern,https://github.com/root-project/root/issues/9145,1,['guid'],['guide']
Usability,[TCanvas] How to set the size for Canvas to show more histograms clearly when using THttpServer?,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10657:65,clear,clearly,65,https://root.cern,https://github.com/root-project/root/issues/10657,2,['clear'],['clearly']
Usability,[TDF] Add ranges to user guide + a little bit of code formatting,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/449:25,guid,guide,25,https://root.cern,https://github.com/root-project/root/pull/449,2,['guid'],['guide']
Usability,[TDF] Clear TTreeReaderValues before exiting TBB tasks,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/837:6,Clear,Clear,6,https://root.cern,https://github.com/root-project/root/pull/837,1,['Clear'],['Clear']
Usability,[TDF] Simplify action creation logic,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/348:6,Simpl,Simplify,6,https://root.cern,https://github.com/root-project/root/pull/348,1,['Simpl'],['Simplify']
Usability,"[TDF] Simplify logic, reduce instructions in column value reading",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1060:6,Simpl,Simplify,6,https://root.cern,https://github.com/root-project/root/pull/1060,1,['Simpl'],['Simplify']
Usability,[TDF] Update user guide,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/418:18,guid,guide,18,https://root.cern,https://github.com/root-project/root/pull/418,4,['guid'],['guide']
Usability,"[TDF][TO REVERT] Disable dataframe_{interface,simple} tests",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1906:46,simpl,simple,46,https://root.cern,https://github.com/root-project/root/pull/1906,2,['simpl'],['simple']
Usability,[TGL] Add scaling factor for TGLViewer axis guides.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10573:44,guid,guides,44,https://root.cern,https://github.com/root-project/root/pull/10573,2,['guid'],['guides']
Usability,"[TMVA] API-Support for SGD Optimizer:; * Add Base Class VOptimizer.; * Add Derived Class TSGD with Momentum implementation.; * Add Unit Tests for SGD Optimizer.; * Modify the MethodDL Tests to include parsing options for Optimizer. An example Training Strategy string may look like,. ```; ""LearningRate=1e-1,Optimizer=SGD,Momentum=0.9,Repetitions=1,""; ""ConvergenceSteps=20,BatchSize=256,TestRepetitions=10,""; ""WeightDecay=1e-4,Regularization=L2,""; ""DropConfig=0.0+0.5+0.5+0.5, Multithreading=True""; ```. Reference Implementation: Tensorflow; Blog Post: https://www.sravikiran.com/GSOC18//2018/07/09/sgd/",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2309:290,Learn,LearningRate,290,https://root.cern,https://github.com/root-project/root/pull/2309,1,['Learn'],['LearningRate']
Usability,[TMVA] Enhance usability of CVResults and Envelope interfaces,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1694:15,usab,usability,15,https://root.cern,https://github.com/root-project/root/pull/1694,2,['usab'],['usability']
Usability,[TMVA] Fix evaluation of regression events for TMVA Deep Learning,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8960:57,Learn,Learning,57,https://root.cern,https://github.com/root-project/root/pull/8960,1,['Learn'],['Learning']
Usability,[TMVA] Optimizer choice simplification,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3414:24,simpl,simplification,24,https://root.cern,https://github.com/root-project/root/pull/3414,2,['simpl'],['simplification']
Usability,[TMVA] Optimizer choice simplification (Update of #3414),MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3493:24,simpl,simplification,24,https://root.cern,https://github.com/root-project/root/pull/3493,2,['simpl'],['simplification']
Usability,[TMVA] Update User's Guide authors,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2399:21,Guid,Guide,21,https://root.cern,https://github.com/root-project/root/pull/2399,1,['Guid'],['Guide']
Usability,[The way it is implemented](https://root.cern.ch/doc/master/TF1_8cxx_source.html#l01408) makes it mandatory to have an active pad with the TF1 drawn in it. That's why you need to add these `gPad->Update()` if you really want to use this function (see my first example). My second reply does exactly the same thing as DrawIntegral without the `GetSelectedPad()`. That's the simpler/better way when you run compiled ROOT like you.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13708#issuecomment-1734857976:373,simpl,simpler,373,https://root.cern,https://github.com/root-project/root/issues/13708#issuecomment-1734857976,2,['simpl'],['simpler']
Usability,"[This commit](https://github.com/root-project/root/commit/48bb3f69e0a7ab3641a5f10a189d89b214e0fb18#diff-1b09d441e22aa3d48c645df3c0ee3e713e400e82c58983e106fd58c6bfdb4d6fR184-R185) broke the following usecase by changing the return type of `RNTupleModel::GetField` from a non-const RFieldBase to a const RFieldBase. ```cpp; auto r = RNTupleReader::Open(""r"", fileGuard.GetPath());; const RFieldBase *rvecf = r->GetModel()->GetField(""v"");; // ERROR: GenerateValue is non-const, rvecf is a const pointer; auto rvecv = rvecf->GenerateValue();; ROOT::RVec<int> *v = rvecv.Get<ROOT::RVec<int>>();; ```. Before that commit, the above snippet was valid code, and there is no simple alternative. As per a discussion with @jblomer , the preferred solution would be to also make `RFieldBase::{GenerateValue,CaptureValue,DestroyValue}` const. However,. > reading an entry needs to be fixed up in this case. Because currently, LoadEntry iterates over the RFieldValues and calls Read on their associated fields. RField::Read() is non-const because a new page may need to be mapped in",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10408:665,simpl,simple,665,https://root.cern,https://github.com/root-project/root/issues/10408,1,['simpl'],['simple']
Usability,"[UPDATE]: The problem is in the default internal flag used for computing the combined error. Code below works if one uses correct settings. See comments below. The TGraphMultiErrors does not implement correctly the overloads from TGraph of the error getters. ; In case of multiple errors, the function should returned , according to the documentation, the combined error, summing them in quadrature assuming they are un-correlated. This causes that a wrong error is used when fitting.; See https://root-forum.cern.ch/t/tgraphmultierrors-fitting/47807. To reproduce: ; ```; TGraphMultiErrors g;; g.AddPoint(2,3);; double e1[1] = {1};; double e2[1] = {3}; ; g.AddYError(1, e1, e1);; g.AddYError(1, e2, e2); ; std::cout << g.GetEYlow()[0] << std::endl;; ```. As a side note, the interface needs several improvements ! It is not clear how to correctly fill the input errors. ; One should probably use just std::vector and make it clear how points and errors are referenced in the input arrays.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9335:825,clear,clear,825,https://root.cern,https://github.com/root-project/root/issues/9335,2,['clear'],['clear']
Usability,[VecOps] Interaction between memory adoption and `clear` yields wrong results,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6796:50,clear,clear,50,https://root.cern,https://github.com/root-project/root/issues/6796,2,['clear'],['clear']
Usability,[Web Graphics] Two failures with one simple PyROOT plotter,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/15474:37,simpl,simple,37,https://root.cern,https://github.com/root-project/root/issues/15474,2,['simpl'],['simple']
Usability,[bugfix] Update SimplexBuilder.cxx to fix #6775,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10492:16,Simpl,SimplexBuilder,16,https://root.cern,https://github.com/root-project/root/pull/10492,1,['Simpl'],['SimplexBuilder']
Usability,[ci] Simplify clang-format options for compatibility with older versions,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14741:5,Simpl,Simplify,5,https://root.cern,https://github.com/root-project/root/pull/14741,1,['Simpl'],['Simplify']
Usability,[cling] Set up TargetMachine for JITLink and simplify its creation,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12218:45,simpl,simplify,45,https://root.cern,https://github.com/root-project/root/pull/12218,2,['simpl'],['simplify']
Usability,[cling] Simplify mangling by using mangleAndIntern,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15914:8,Simpl,Simplify,8,https://root.cern,https://github.com/root-project/root/pull/15914,1,['Simpl'],['Simplify']
Usability,[cling] Simplify symbol overrides and `addOrReplaceDefinition`,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15966:8,Simpl,Simplify,8,https://root.cern,https://github.com/root-project/root/pull/15966,1,['Simpl'],['Simplify']
Usability,[cling] Undocumented behaviour of root macro_C.so,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14772:8,Undo,Undocumented,8,https://root.cern,https://github.com/root-project/root/issues/14772,1,['Undo'],['Undocumented']
Usability,[cling] Use deduction guides for llvm::ArrayRef,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14219:22,guid,guides,22,https://root.cern,https://github.com/root-project/root/issues/14219,4,['guid'],['guides']
Usability,[cling] crash / compilation exception after undo,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10178:44,undo,undo,44,https://root.cern,https://github.com/root-project/root/issues/10178,2,['undo'],['undo']
Usability,[clingutils] simplify TMetaUtils::GetCppName,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7463:13,simpl,simplify,13,https://root.cern,https://github.com/root-project/root/pull/7463,2,['simpl'],['simplify']
Usability,[cmake] Xcode 14 warns about `-undefined dynamic_lookup`; simply suppress,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11691:58,simpl,simply,58,https://root.cern,https://github.com/root-project/root/pull/11691,2,['simpl'],['simply']
Usability,[cmake] simplify copies of misc files into build directory,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9834:8,simpl,simplify,8,https://root.cern,https://github.com/root-project/root/pull/9834,2,['simpl'],['simplify']
Usability,[cmake] simplify include dirs handling in ROOT_GENERATE_DICTIONARY,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5573:8,simpl,simplify,8,https://root.cern,https://github.com/root-project/root/pull/5573,2,['simpl'],['simplify']
Usability,[conversionWithChecksum.tgz](https://github.com/root-project/root/files/14102267/conversionWithChecksum.tgz). contains the full example:. ```; root.exe -b -l -q writedata.C+; root.exe -b -l -q simpleread.C+ ; ```; ```; ***********************************; * Row * Instance * seg_split *; ***********************************; Error in <TBufferFile::CheckByteCount>: object of class vector<CSCSegment> read too few bytes: 4 instead of 24; * 0 * 0 * 0 *; ***********************************; Error in <TBufferFile::CheckByteCount>: object of class vector<MatchedCSCSegment> read too few bytes: 12 instead of 24; ***********************************; * Row * Instance * seg_unspl *; ***********************************; Error in <TBufferFile::CheckByteCount>: object of class vector<MatchedCSCSegment> read too few bytes: 12 instead of 24; Error in <TBufferFile::CheckByteCount>: object of class vector<MatchedCSCSegment> read too few bytes: 12 instead of 24; * 0 * 0 * 1 *; ***********************************. ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14491#issuecomment-1917587621:193,simpl,simpleread,193,https://root.cern,https://github.com/root-project/root/issues/14491#issuecomment-1917587621,2,['simpl'],['simpleread']
Usability,[core] 1 missing Undo revert Classdef version,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15021:17,Undo,Undo,17,https://root.cern,https://github.com/root-project/root/pull/15021,1,['Undo'],['Undo']
Usability,[core] Simplify typedef of `[U]Long64_t`,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16040:7,Simpl,Simplify,7,https://root.cern,https://github.com/root-project/root/pull/16040,1,['Simpl'],['Simplify']
Usability,[cxxmodules] Simplify LoadPCM,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3715:13,Simpl,Simplify,13,https://root.cern,https://github.com/root-project/root/pull/3715,1,['Simpl'],['Simplify']
Usability,[cxxmodules] Simplify and use more meaningful variable names. NFC.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4155:13,Simpl,Simplify,13,https://root.cern,https://github.com/root-project/root/pull/4155,1,['Simpl'],['Simplify']
Usability,[df] Avoid lock to check simple typeids,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16528:25,simpl,simple,25,https://root.cern,https://github.com/root-project/root/pull/16528,2,['simpl'],['simple']
Usability,[doc] CMake flag for building Doxygen reference guide,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8950:48,guid,guide,48,https://root.cern,https://github.com/root-project/root/issues/8950,2,['guid'],['guide']
Usability,[histv7] Simplify class structure:,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5986:9,Simpl,Simplify,9,https://root.cern,https://github.com/root-project/root/pull/5986,1,['Simpl'],['Simplify']
Usability,[math] Add virtual HasGradient() to ROOT::Math function base classes and simplify them,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12257:73,simpl,simplify,73,https://root.cern,https://github.com/root-project/root/pull/12257,2,['simpl'],['simplify']
Usability,[math] remove unused param from SimplexSeedGenerator::operator(),MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15981:32,Simpl,SimplexSeedGenerator,32,https://root.cern,https://github.com/root-project/root/pull/15981,1,['Simpl'],['SimplexSeedGenerator']
Usability,[ntuple] Simplifications for concrete page storage classes,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4247:9,Simpl,Simplifications,9,https://root.cern,https://github.com/root-project/root/pull/4247,1,['Simpl'],['Simplifications']
Usability,[ntuple] Simplify RPageSourceFriends::LoadClusters() implementation,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9148:9,Simpl,Simplify,9,https://root.cern,https://github.com/root-project/root/pull/9148,1,['Simpl'],['Simplify']
Usability,[ntuple] Simplify `RPageSourceDaos::LoadClusters()`,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13381:9,Simpl,Simplify,9,https://root.cern,https://github.com/root-project/root/pull/13381,1,['Simpl'],['Simplify']
Usability,[ntuple] Speed up reading/writing of simple vectors,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13590:37,simpl,simple,37,https://root.cern,https://github.com/root-project/root/pull/13590,2,['simpl'],['simple']
Usability,[ntuple] WIP simplify offset column indexing,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5714:13,simpl,simplify,13,https://root.cern,https://github.com/root-project/root/pull/5714,2,['simpl'],['simplify']
Usability,[ntuple] remove parameter from simple SealPage overload,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15849:31,simpl,simple,31,https://root.cern,https://github.com/root-project/root/pull/15849,2,['simpl'],['simple']
Usability,[ntuple] simplify REntry implementation,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14756:9,simpl,simplify,9,https://root.cern,https://github.com/root-project/root/pull/14756,2,['simpl'],['simplify']
Usability,[r] Rename R Users Guide file to have less spaces.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5678:19,Guid,Guide,19,https://root.cern,https://github.com/root-project/root/pull/5678,1,['Guid'],['Guide']
Usability,[reproducer_9252.tar.gz](https://github.com/root-project/root/files/7488905/reproducer_9252.tar.gz). Adding a simple reproducer of the failing case. See README in the tar file for instruction.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9252#issuecomment-962218564:110,simpl,simple,110,https://root.cern,https://github.com/root-project/root/issues/9252#issuecomment-962218564,2,['simpl'],['simple']
Usability,[rootcling] Deep is always set to false. Simplify. NFC,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4235:41,Simpl,Simplify,41,https://root.cern,https://github.com/root-project/root/pull/4235,1,['Simpl'],['Simplify']
Usability,[rootcling] Remove unused code. Simplify.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4198:32,Simpl,Simplify,32,https://root.cern,https://github.com/root-project/root/pull/4198,1,['Simpl'],['Simplify']
Usability,[rootcling] Simplify pch generation,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4168:12,Simpl,Simplify,12,https://root.cern,https://github.com/root-project/root/pull/4168,1,['Simpl'],['Simplify']
Usability,[rootcling]Simplify dictionary stream splitting logic,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5345:11,Simpl,Simplify,11,https://root.cern,https://github.com/root-project/root/pull/5345,1,['Simpl'],['Simplify']
Usability,[skip ci][ci] Simplify root 626 yml and run 6.26/8 nightlies every other day,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15568:14,Simpl,Simplify,14,https://root.cern,https://github.com/root-project/root/pull/15568,1,['Simpl'],['Simplify']
Usability,[skip-CI][DF][NFC] Mention AsRNode in the progress bar documentation,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15041:42,progress bar,progress bar,42,https://root.cern,https://github.com/root-project/root/pull/15041,2,['progress bar'],['progress bar']
Usability,[skip-CI][ci] Simplify yml files configuring nightlies,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14882:14,Simpl,Simplify,14,https://root.cern,https://github.com/root-project/root/pull/14882,1,['Simpl'],['Simplify']
Usability,[skip-ci] Add a warning on the User's Guide.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10888:38,Guid,Guide,38,https://root.cern,https://github.com/root-project/root/pull/10888,1,['Guid'],['Guide']
Usability,[skip-ci] Import the old user's guide into the reference Guide.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9059:32,guid,guide,32,https://root.cern,https://github.com/root-project/root/pull/9059,3,"['Guid', 'guid']","['Guide', 'guide']"
Usability,[skip-ci] Simplify distrdf relnotes for v6.26,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9527:10,Simpl,Simplify,10,https://root.cern,https://github.com/root-project/root/pull/9527,1,['Simpl'],['Simplify']
Usability,[skip-ci] fix ref guide build for non master branch,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12382:18,guid,guide,18,https://root.cern,https://github.com/root-project/root/pull/12382,2,['guid'],['guide']
Usability,[skip-ci] improve the cleanup after the ref guide build,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9076:44,guid,guide,44,https://root.cern,https://github.com/root-project/root/pull/9076,2,['guid'],['guide']
Usability,[skip-ci] remove reference to the old user's guide,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9063:45,guid,guide,45,https://root.cern,https://github.com/root-project/root/pull/9063,2,['guid'],['guide']
Usability,[skip-ci]. This PR introduces the parsing of documentation to be included in the reference guide for PyROOT pythonizations of ROOT classes. It makes the necessary settings to activate the parsing of C++-like docs in Python files and adds the first example of such docs: the pythonizations of `TArray` and its subclasses. The PyROOT docs are enclosed in a box that is placed after the documentation of the C++ files. The style of that box has been defined to match the style of the docs page (background and border):. ![image](https://user-images.githubusercontent.com/8089558/88268039-0d815680-ccd2-11ea-9223-b2c8cccf6be2.png),MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6068:91,guid,guide,91,https://root.cern,https://github.com/root-project/root/pull/6068,1,['guid'],['guide']
Usability,[skip-ci]; In notebook this script generates:; ```; Error in <TXMLEngine::ParseFile>: Unexpected end of xml file; ```; This patch deactivate the notebook generation as this error seems to be the last one preventing to have; the ref guide build green.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10483:232,guid,guide,232,https://root.cern,https://github.com/root-project/root/pull/10483,1,['guid'],['guide']
Usability,"[skip-ci][NFC][DF] Fix doxygen formatting, simplify wording",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13148:43,simpl,simplify,43,https://root.cern,https://github.com/root-project/root/pull/13148,2,['simpl'],['simplify']
Usability,[skip-ci][ci][docu] Generate ref guide with Makefile and Github Actions,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15769:33,guid,guide,33,https://root.cern,https://github.com/root-project/root/pull/15769,2,['guid'],['guide']
Usability,[skip=-ci] \ was not displayed in ref guide.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11184:38,guid,guide,38,https://root.cern,https://github.com/root-project/root/pull/11184,2,['guid'],['guide']
Usability,[tcling] Use more variables to denote clearly the state and intent.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3896:38,clear,clearly,38,https://root.cern,https://github.com/root-project/root/pull/3896,2,['clear'],['clearly']
Usability,[textinput] Clear the terminal screen on Ctrl+L,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10078:12,Clear,Clear,12,https://root.cern,https://github.com/root-project/root/pull/10078,1,['Clear'],['Clear']
Usability,[textinput] Clear undo buffer after taking an input line,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10192:12,Clear,Clear,12,https://root.cern,https://github.com/root-project/root/pull/10192,3,"['Clear', 'undo']","['Clear', 'undo']"
Usability,[textinput] Undo buffer misses one entry in the actual sequence,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10182:12,Undo,Undo,12,https://root.cern,https://github.com/root-project/root/issues/10182,1,['Undo'],['Undo']
Usability,[textinput] segmentation violation on Undo shortcut,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10180:38,Undo,Undo,38,https://root.cern,https://github.com/root-project/root/issues/10180,1,['Undo'],['Undo']
Usability,[tmva][pymva] Changes for new version (1.4) of scikit-learn,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14977:54,learn,learn,54,https://root.cern,https://github.com/root-project/root/pull/14977,2,['learn'],['learn']
Usability,[treereader] Clearer error message in SetEntriesRange,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10705:13,Clear,Clearer,13,https://root.cern,https://github.com/root-project/root/pull/10705,1,['Clear'],['Clearer']
Usability,[tutorials] Simplify TMVA_SOFIE_RDataFrame.py.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11458:12,Simpl,Simplify,12,https://root.cern,https://github.com/root-project/root/pull/11458,1,['Simpl'],['Simplify']
Usability,[v6-32-00-patches] [skip-ci] improve labeling in candle plot examples. | Fix warnings in timeaxis3.C | Simplify timeonaxis.C and make the year labels clearer | simplify timeonaxis examples. | Remove an unused variable and use exact dates.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15674:103,Simpl,Simplify,103,https://root.cern,https://github.com/root-project/root/pull/15674,5,"['Simpl', 'clear', 'simpl']","['Simplify', 'clearer', 'simplify']"
Usability,[v626][cmake] Xcode 14 warns about `-undefined dynamic_lookup`; simply suppress:,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11693:64,simpl,simply,64,https://root.cern,https://github.com/root-project/root/pull/11693,2,['simpl'],['simply']
Usability,[v628][CI] Add `xgboost` and `scikit-learn` to requirements,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15237:37,learn,learn,37,https://root.cern,https://github.com/root-project/root/pull/15237,2,['learn'],['learn']
Usability,[v630][CI] Add `xgboost` and `scikit-learn` to requirements,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15238:37,learn,learn,37,https://root.cern,https://github.com/root-project/root/pull/15238,2,['learn'],['learn']
Usability,[webcanv] Clearly indicate error in the canvas,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16424:10,Clear,Clearly,10,https://root.cern,https://github.com/root-project/root/pull/16424,1,['Clear'],['Clearly']
Usability,"[webgui] `RWebWindow::ClearOnClose` functionality, custom visibility in geo viewer",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12463:22,Clear,ClearOnClose,22,https://root.cern,https://github.com/root-project/root/pull/12463,1,['Clear'],['ClearOnClose']
Usability,"[webgui] adoption of jsroot v6, improve usability with ROOT6 classes",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6739:40,usab,usability,40,https://root.cern,https://github.com/root-project/root/pull/6739,2,['usab'],['usability']
Usability,[webgui] introduce simple RWebWindow tutorial,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4022:19,simpl,simple,19,https://root.cern,https://github.com/root-project/root/pull/4022,2,['simpl'],['simple']
Usability,"[wincxxmodules] Simplify includes, Expose M_PI for Windows",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6309:16,Simpl,Simplify,16,https://root.cern,https://github.com/root-project/root/pull/6309,1,['Simpl'],['Simplify']
Usability,"\VC\Tools\MSVC\14.32.31326\include\tuple(74,90): fatal error C1060: compiler is out of heap space (compiling source file C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\lib\CodeGen\TargetLoweringObjectFileImpl.cpp) [C:\build\workspace\root-pullrequests-build\build\interpreter\llvm\src\lib\CodeGen\LLVMCodeGen.vcxproj] ; - [2022-09-14T15:02:59.017Z] C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\xutility(1274,1): fatal error C1060: compiler is out of heap space (compiling source file C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\lib\Transforms\Utils\SimplifyCFG.cpp) [C:\build\workspace\root-pullrequests-build\build\interpreter\llvm\src\lib\Transforms\Utils\LLVMTransformUtils.vcxproj] ; - [2022-09-14T15:02:59.017Z] C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\include\llvm/ADT/SmallVector.h(841,1): fatal error C1060: compiler is out of heap space (compiling source file C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\lib\Transforms\Utils\SimplifyIndVar.cpp) [C:\build\workspace\root-pullrequests-build\build\interpreter\llvm\src\lib\Transforms\Utils\LLVMTransformUtils.vcxproj] ; - [2022-09-14T15:02:59.017Z] C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\utility(389,1): fatal error C1060: compiler is out of heap space (compiling source file C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\lib\CodeGen\TailDuplication.cpp) [C:\build\workspace\root-pullrequests-build\build\interpreter\llvm\src\lib\CodeGen\LLVMCodeGen.vcxproj] ; - [2022-09-14T15:02:59.017Z] C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\include\llvm/Support/CommandLine.h(1218,1): fatal error C1060: compiler is out of heap space (compiling source file C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\lib\Transforms\Utils\SizeOpts.cpp) [C:\build\workspace\root-pullrequests-build\bui",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11366#issuecomment-1246914758:1382,Simpl,SimplifyIndVar,1382,https://root.cern,https://github.com/root-project/root/pull/11366#issuecomment-1246914758,1,['Simpl'],['SimplifyIndVar']
Usability,"\\""\\"", float f=1.f) with arguments:"" << std::endl;; std::cout << ""a: "" << a << std::endl;; std::cout << ""b: "" << b << std::endl;; std::cout << ""c: "" << c << std::endl;; std::cout << ""d: "" << d << std::endl;; std::cout << ""e: "" << e << std::endl;; std::cout << ""f: "" << f << std::endl;; }; Simple(float a, float b, float c,float d=1.f) {; std::cout << ""Simple(float a, float b, float c,float d=1.f) with arguments:"" << std::endl;; std::cout << ""a: "" << a << std::endl;; std::cout << ""b: "" << b << std::endl;; std::cout << ""c: "" << c << std::endl;; std::cout << ""d: "" << d << std::endl;; }; };. class Minimal{; public:; Minimal(int a, float b, float c=1.0f) {; std::cout << ""Minimal(int a, float b, float c=1.0f) with arguments:"" << std::endl;; std::cout << ""a: "" << a << std::endl;; std::cout << ""b: "" << b << std::endl;; std::cout << ""c: "" << c << std::endl;; }; Minimal(float a, float b) {; std::cout << ""Minimal(float a, float b) with arguments:"" << std::endl;; std::cout << ""a: "" << a << std::endl;; std::cout << ""b: "" << b << std::endl;; }; };; '''; ). a = int(1); b = float(2.2); c = float(3.3); d = float(4.4). simple = cppyy.gbl.Simple(a, b, c, d); minimal = cppyy.gbl.Minimal(a, b); ```. The constructors in `Simple` mimic the constructors of `TColor`. The `Minimal` class should show the same issue with less constructor arguments. Passing an `int` as first argument is not enough to distinguish between these two constructors; ```; Minimal(int a, float b, float c=1.0f); Minimal(float a, float b); ```; This is the result of the script above; ```; (cppyy-venv) vpadulan@fedorathinkpad-T550 [~/Projects/rootcode/ROOT-GITHUB-7790]: pip freeze; cppyy==1.9.5; cppyy-backend==1.14.3; cppyy-cling==6.21.6; CPyCppyy==1.12.4; (cppyy-venv) vpadulan@fedorathinkpad-T550 [~/Projects/rootcode/ROOT-GITHUB-7790]: python cppyy_simple_reproducer.py ; Simple(float a, float b, float c,float d=1.f) with arguments:; a: 1; b: 2.2; c: 3.3; d: 4.4; Minimal(float a, float b) with arguments:; a: 1; b: 2.2; ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7790#issuecomment-828426447:1371,simpl,simple,1371,https://root.cern,https://github.com/root-project/root/issues/7790#issuecomment-828426447,5,"['Simpl', 'simpl']","['Simple', 'simple']"
Usability,"\include\llvm/CodeGen/MachineInstr.h(459,43): fatal error C1060: compiler is out of heap space (compiling source file C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\lib\CodeGen\MachineFunction.cpp) [C:\build\workspace\root-pullrequests-build\build\interpreter\llvm\src\lib\CodeGen\LLVMCodeGen.vcxproj] ; - [2022-04-08T22:11:47.619Z] C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\tools\clang\include\clang/AST/Decl.h(2878,59): fatal error C1060: compiler is out of heap space (compiling source file C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\tools\clang\lib\Frontend\LayoutOverrideSource.cpp) [C:\build\workspace\root-pullrequests-build\build\interpreter\llvm\src\tools\clang\lib\Frontend\obj.clangFrontend.vcxproj] ; - [2022-04-08T22:11:47.619Z] C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\include\llvm/IR/Instructions.h(4611,1): fatal error C1060: compiler is out of heap space (compiling source file C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\lib\Transforms\Scalar\SimplifyCFGPass.cpp) [C:\build\workspace\root-pullrequests-build\build\interpreter\llvm\src\lib\Transforms\Scalar\LLVMScalarOpts.vcxproj] ; - [2022-04-08T22:11:47.619Z] C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\lib\CodeGen\SelectionDAG\SelectionDAGBuilder.cpp(10480,1): fatal error C1060: compiler is out of heap space [C:\build\workspace\root-pullrequests-build\build\interpreter\llvm\src\lib\CodeGen\SelectionDAG\LLVMSelectionDAG.vcxproj] ; - [2022-04-08T22:11:47.619Z] C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\include\llvm/Support/Casting.h(229,1): fatal error C1060: compiler is out of heap space (compiling source file C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\lib\Transforms\IPO\WholeProgramDevirt.cpp) [C:\build\workspace\root-pullrequests-build\build\interpreter\llvm\src\lib\Transforms\IPO\LLVMipo.vcxproj] . And 29 more",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10366#issuecomment-1093410595:3526,Simpl,SimplifyCFGPass,3526,https://root.cern,https://github.com/root-project/root/pull/10366#issuecomment-1093410595,1,['Simpl'],['SimplifyCFGPass']
Usability,"_; > source ~/critic/ups/setup_for_development -d; > buildtool --generator=ninja -j12 -T; > ; > The test that demonstrates the MT error often hangs due to a memory error (I believe). If the above tests don't complete, then CTRL+C out of them and try running the single problematic test:; > ; > ctest -V -R ProductMix_wraparound_r; > ; > You will see printout like:; > ; > 213: ...; > 213: Begin processing the 99th record. run: 1 subRun: 0 event: 99 at 09-Dec-2020 14:09:34 CST; > 213: Begin processing the 100th record. run: 1 subRun: 0 event: 100 at 09-Dec-2020 14:09:34 CST; > 213: %MSG-w MixingInputWrap: MixFilterTest:mixFilter@BeginModule 09-Dec-2020 14:09:34 CST run: 1 subRun: 0 event: 103; > 213: Wrapping around to initial input file for mixing after 100 secondary events read.; > 213: %MSG; > 213: ...; > ; > And then the job will usually hang or there will be a segmentation violation, both of which originate from the art::RootIOPolicy destructor.; > ; > If, after running all of the tests, you wish to run the job by hand (not using ctest), do the following:; > ; > cd $CETPKG_BUILD/critic/test/art/product-mixing/ProductMix_wraparound_r.d/; > art -c ProductMix_wraparound_r.fcl -j4; > ; > I have debugged using valgrind, helgrind, gdb, and Arm forge's DDT. Under the covers, it appears there is a spin-lock that just spins at the end of the job. When enabling memory-debugging with DDT, I get a memory error when a ROOT file is closed from the destructor of the RootIOPolicy class, a class used for product-mixing. See the attached screenshots, which include a portion of the stacktrace where the memory error is happening, and the value of the variables at the line in question (null ptrs).; > ; > I would greatly appreciate some guidance or direct help in further debugging this situation. At this point, I'm not sure whether art is using ROOT poorly, or if this is a different issue. Please let me know if it would work best to meet via Zoom.; > ; > Thanks very much,; > Kyle; > ; >",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6939:8585,guid,guidance,8585,https://root.cern,https://github.com/root-project/root/issues/6939,1,['guid'],['guidance']
Usability,"_One_ of the results will do something similar to a future (but not quite, because futures in C++ are associated with asynchronous execution). I still think that the average physicist will get as little insight in the semantics of the type from the denomination ""Handle"" as they get from ""Proxy"". Even ROOT has a `TFileOpenHandle` which does not have the semantics you describe.; There is a slice of our users which are not familiar with the experiment frameworks and/or do not use one. If you feel strongly that this is not the way to go and we need a name that clearly conveys both pointer semantics and the fact that the first access triggers the event loop, I think we'll need a discussion outside of this PR :smile:",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1855#issuecomment-381109118:563,clear,clearly,563,https://root.cern,https://github.com/root-project/root/pull/1855#issuecomment-381109118,2,['clear'],['clearly']
Usability,"_Should_ be fixed (and tested), let me know if you have any feedback (it would be great if you could pick that branch and check it fixes your usecase, or alternatively a nightly build tomorrow -- I plan to merge the fix today).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7143#issuecomment-775238821:60,feedback,feedback,60,https://root.cern,https://github.com/root-project/root/issues/7143#issuecomment-775238821,2,['feedback'],['feedback']
Usability,"__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::Value*, cling::Transaction**, bool) (./cling+0xace867); > > #10 0x0000000000b10d17 cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) (./cling+0xb10d17); > > #11 0x0000000000bad161 cling::UserInterface::runInteractively(bool) (./cling+0xbad161); > > #12 0x00000000009d28b7 main (./cling+0x9d28b7); > > #13 0x00007f024c2b0840 __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x20840); > > #14 0x0000000000a32349 _start (./cling+0xa32349); > > Stack dump:; > > 0.	Program arguments: ./cling -xcuda ; > > Segmentation fault (core dumped); > > ```; > ; > There is nothing obvious for me happening wrong in the `CIFactory.cpp`. Something likely changed in the cuda setup in llvm9. Let me know if we should make a joint debug session.; > ; > > But this is on my todo list for this week. I also see that this PR has some changes that your cling doesn't have, which is what my test is based on. So, my next step is to test the CUDA mode with the root version.; > ; > One way to test cling within ROOT would be to get this PR and then configure with `-DCMAKE_BUILD_TYPE=Debug -DLLVM_BUILD_TYPE=Debug -Dclingtest=On` and then type `make -j cling` and that should build the cling binary ready to use. The root PR does not solve my problem. I looked a little bit in the code with the gdb and found out, where the application crashes. In `IncrementalCUDADeviceCompiler::generatePTX()` the line `llvm::Module* module = m_PTX_interp->getLastTransaction()->getModule();` returns a `nullptr`. But this only happens, if I define a Cuda `__global__` kernel. If use a normal C++ statement, like `int i = 3;` or define a Cuda `__device__` function everything is fine. I'm not sure, if there more cases. @vgvassilev Do you have an idea? Maybe you saw something, which can help me, during your porting work. If not, it is not problem. Then, I simply have to spent more time.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6385#issuecomment-776591942:3714,simpl,simply,3714,https://root.cern,https://github.com/root-project/root/pull/6385#issuecomment-776591942,2,['simpl'],['simply']
Usability,"_mod"", """", RooArgSet(par, RooConst(10)));. RooGaussian gauss(""gauss"", """", x, parMod, RooConst(2.0));; RooGenericPdf pdf(""pdf"", ""gauss"", gauss);. std::unique_ptr<RooAbsReal> integ1{gauss.createIntegral(x, *pdf.getIntegratorConfig(), nullptr)};; integ1->Print(""v"");. std::cout << std::endl;. std::unique_ptr<RooAbsReal> integ2{pdf.createIntegral(x, *pdf.getIntegratorConfig(), nullptr)};; integ2->Print(""v"");; }; ```. The integral of the Gaussian has the correct value (`V`) servers (the parameters of the Gaussian):; ```; (0x7ffc9b9bf798,-S) RooRealVar::x """"; (0x7ffc9b9bf240,--) RooGaussian::gauss """"; (0x7ffc9b9bff68,V-) RooProduct::par_mod """"; (0x55ac531cd470,V-) RooConstVar::2 ""2""; ```. The integral of the `RooGenericPdf` should have the same value servers,; but it doesn't. Instead, it uses the leaves of the computation graph:; ```; (0x7ffc9b9bf798,-S) RooRealVar::x """"; (0x7ffc9b9bec88,--) RooRealSumPdf::pdf """"; (0x7ffc9b9bfb80,V-) RooRealVar::par """"; (0x55ac51984c50,V-) RooConstVar::10 ""10""; (0x55ac531cd470,V-) RooConstVar::2 ""2""; ```. That means, the direct value server `par_mod` is **skipped** now,; misrepresenting the client-server relationship. The new BatchMode makes strong use of the value-server interface for the; `RooFitDriver`, so it's very sensitive to `RooRealIntegrals` getting it; wrong. That's why this commit suggests to change the logic in `RooRealIntegral`; to always add the next direct value servers that don't depend on the; integration variable, and not the leaves. A unit test that verifies that the value servers of the integral are the; mathematically direct value servers and not the computation graph leaves; is also implemented. Closes https://github.com/root-project/root/issues/11578. The PR also fixes the same problem for the RooProjectedPdf, which is essentially a integral wrapper but it also got the server-client interface wrong. Now, it simply takes over the shape and value servers from the underlying integral, which is now implemented correctly.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11597:2174,simpl,simply,2174,https://root.cern,https://github.com/root-project/root/pull/11597,1,['simpl'],['simply']
Usability,"_range.h:43:45: warning: ‘*((void*)& CCR +16)’ may be used uninitialized in this function [-Wmaybe-uninitialized] ; - [2020-09-27T10:50:53.297Z] /mnt/build/workspace/root-pullrequests-build/root/interpreter/llvm/src/include/llvm/ADT/iterator_range.h:43:45: warning: ‘*((void*)& CCR +40)’ may be used uninitialized in this function [-Wmaybe-uninitialized] ; - [2020-09-27T10:50:55.844Z] /mnt/build/workspace/root-pullrequests-build/root/interpreter/cling/lib/Interpreter/IncrementalJIT.h:108:74: warning: ‘llvm::orc::LegacyRTDyldObjectLinkingLayer::LegacyRTDyldObjectLinkingLayer(llvm::orc::ExecutionSession&, llvm::orc::LegacyRTDyldObjectLinkingLayer::ResourcesGetter, llvm::orc::LegacyRTDyldObjectLinkingLayer::NotifyLoadedFtor, llvm::orc::LegacyRTDyldObjectLinkingLayer::NotifyFinalizedFtor, llvm::orc::LegacyRTDyldObjectLinkingLayer::NotifyFreedFtor)’ is deprecated [-Wdeprecated-declarations] ; - [2020-09-27T10:50:55.845Z] /mnt/build/workspace/root-pullrequests-build/root/interpreter/cling/lib/Interpreter/IncrementalJIT.cpp:344:33: warning: ‘llvm::orc::LegacyIRCompileLayer&lt;BaseLayerT, CompileFtor&gt;::LegacyIRCompileLayer(BaseLayerT&, CompileFtor, llvm::orc::LegacyIRCompileLayer&lt;BaseLayerT, CompileFtor&gt;::NotifyCompiledCallback) [with BaseLayerT = cling::IncrementalJIT::RemovableObjectLinkingLayer; CompileFtor = llvm::orc::SimpleCompiler; llvm::orc::LegacyIRCompileLayer&lt;BaseLayerT, CompileFtor&gt;::NotifyCompiledCallback = std::function&lt;void(long unsigned int, std::unique_ptr&lt;llvm::Module&gt;)&gt;]’ is deprecated [-Wdeprecated-declarations] ; - [2020-09-27T10:50:55.845Z] /mnt/build/workspace/root-pullrequests-build/root/interpreter/cling/lib/Interpreter/IncrementalJIT.cpp:344:33: warning: ‘llvm::orc::LazyEmittingLayer&lt;BaseLayerT&gt;::LazyEmittingLayer(BaseLayerT&) [with BaseLayerT = llvm::orc::LegacyIRCompileLayer&lt;cling::IncrementalJIT::RemovableObjectLinkingLayer, llvm::orc::SimpleCompiler&gt;]’ is deprecated [-Wdeprecated-declarations] . And 241 more",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6385#issuecomment-699619365:3249,Simpl,SimpleCompiler,3249,https://root.cern,https://github.com/root-project/root/pull/6385#issuecomment-699619365,2,['Simpl'],['SimpleCompiler']
Usability,"` of an RDF complex type column gives the following error:; ```bash; Column type: _Complex double; <cppyy.gbl.ROOT.RDF.RResultPtr<vector<_Complex double> > object at 0x7fc929ee8430>; Error pythonizing class std::vector<_Complex double>:; Traceback (most recent call last):; File ""/Users/yana/Projects/ROOT/ROOT-master/21.04.2022/root_install/lib/ROOT/_pythonization/__init__.py"", line 233, in _invoke; user_pythonizor(klass, fqn); File ""/Users/yana/Projects/ROOT/ROOT-master/21.04.2022/root_install/lib/ROOT/_pythonization/_stl_vector.py"", line 37, in pythonize_stl_vector; if klass.value_type == 'char':; AttributeError: <class cppyy.gbl.std.vector<_Complex double> at 0x7fc929c29e20> has no attribute 'value_type'. Full details:; type object 'vector<_Complex double>' has no attribute 'value_type'; 'std::vector<_Complex double>::value_type' is not a known C++ class; 'value_type' is not a known C++ template; 'value_type' is not a known C++ enum; ```. ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->; ```python; data_frame = ROOT.RDataFrame(10).Define(""x"", ""gRandom->Rndm()""); data_frame_xy = data_frame.Define(""y"", ""x*2 +1j""); data_frame_xy.Display().Print(); ```; ok so far.; ```python; column=""y""; data_frame_rnode = cppyy.gbl.ROOT.RDF.AsRNode(data_frame_xy); column_type = data_frame_rnode.GetColumnType(column); print(""Column type:"", column_type); result_ptrs = data_frame_rnode.Take[column_type](column); cpp_reference = result_ptrs.GetValue(); ```. ### Setup; <!--; 1. ROOT version; 2. Operating system; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->; 1. locally built ROOT-master from 21.04.20222. ; ```bash;",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10522:1453,clear,clear,1453,https://root.cern,https://github.com/root-project/root/issues/10522,1,['clear'],['clear']
Usability,"`: in particular, _(i)_ `RNTupleDescriptorBuilder::BeginHeaderExtension()` marks the beginning of the header extension; and _(ii)_ extension header information, including an iterator over the top-level fields may be obtained via `RNTupleDescriptor::GetHeaderExtension()`.; - Serialize/deserialize an incremental schema description, i.e. schema extension, as part of the footer envelope. This changes the layout of the footer as explained in the [updated binary format specification](https://github.com/jalopezg-git/root/blob/2ed0dd65698c937f0c06017172c6fbcdfbbb9636/tree/ntuple/v7/doc/specifications.md).; **NOTE:** another change required in the serialization code is the use depth-first serialization of columns instead. Rationale: given that; 1. New columns may appear during write as a result of schema extension; and; 2. On-disk IDs for those columns have to be assigned before serializing the next page list,. we have to ensure that these columns get the same ID both when they are seen for the first time (in page lists) and by the time the description for the schema extension is serialized.; This change only affects how the schema is serialized and does not change deserialization, i.e. the change is backwards compatible.; - `RPageSink::UpdateSchema(const RNTupleModelChangeset &)` allows incremental updates to the ntuple descriptor kept internally in the `RPageSink`, which is required, e.g. if new fields were added after the initial call to `RPageSink::Create(RNTupleModel &)`.; - Per the current state of affairs in `RPageSinkBuf`, some adjustments are also needed to keep `fInnerModel` in sync.; - Add class `RNTupleModel::RUpdater`, which provides limited support for incremental updates, e.g. addition of new fields.; - Add `RNTupleWriter::CreateModelUpdater()` that returns a usable `RUpdater` object. ## Checklist:; - [X] tested changes locally; - [X] updated the docs (if necessary); - [x] Update to format version to RC 2 -- to be done after merging both parts + split encoding",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12376:2829,usab,usable,2829,https://root.cern,https://github.com/root-project/root/pull/12376,1,['usab'],['usable']
Usability,"`Nonzero` simply goes through the input vector and checks whether an element is zero or not. The time complexity is `O(N)`. `Intersect` goes through the vector `v1` and searches each element in the vector `v2`. The approach is sorting `v2` first and loop trivially over `v1`. The resulting time complexity is `O(N1*log(N2))`. A common use-case is shown below:. ```cpp; using namespace ROOT::VecOps;. // user data, e.g., in NanoAOD format; RVec<int> Muon_charge = {1, -1, 1};; RVec<float> Muon_pt = {20.0, 30.0, 10.0};; RVec<float> Muon_eta = {1.0, -2.0, 0.5};. // make first selection based on Muon charge; auto idx_mask = Nonzero(Muon_charge>0);. // get indices that sort Muon pt with descending values and pass the previous selection; auto idx_sorted = Reverse(Argsort(Muon_pt));; auto idx_selection = Intersect(idx_sorted, idx_mask);. // get Muon eta of positive Muons sorted by pt; auto values = Take(Muon_eta, idx_selection);; // Returns: { 1, 0.5 }; ```. This scenario is very common in processing of NanoAOD files. The naming matches the numpy API with [`numpy.nonzero`](https://docs.scipy.org/doc/numpy/reference/generated/numpy.nonzero.html) and [`numpy.intersect1d`](https://docs.scipy.org/doc/numpy-1.13.0/reference/generated/numpy.intersect1d.html). **TODO:**. - [x] Write a tutorial when we agreed on the functionality.; - [x] Change the API for `Sorted` and `Reversed` to `Sort` and `Reverse` before merging this.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2620:10,simpl,simply,10,https://root.cern,https://github.com/root-project/root/pull/2620,1,['simpl'],['simply']
Usability,"`RAttrBox` had too many encapsulations. Use instead directly `RAttrFill` and newly introduced `RAttrBorder` for `RFrame`, `RBox`, `RPave`. Remove `RAttrOnFrame` class which was used in inheritance for the drawables, put ""onframe"" and ""clipping"" attributes directly in the classes where supported. Simplify naming convention. For every attributes aggregation like `RAttrLine` provide only two methods:. RAttrLine &AttrLine() { return fAttrLine; }; const RAttrLine &AttrLine() const { return fAttrLine; }. Update JSROOT to reflect changes on C++ side",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8373:297,Simpl,Simplify,297,https://root.cern,https://github.com/root-project/root/pull/8373,1,['Simpl'],['Simplify']
Usability,"`RColumnReaderBase` is now a non-template class, and only its `Get`; method is templated over the type of the value to retrieve. This alternative design has two main advantages:; - it simplifies `RAction` greatly, removing the need for the special; `RTypeErasedColumnReader` type: now all column readers are type erased; in the sense that a `RColumnReaderBase*` does not contain the type of; the column that will be read; - it makes it possible to pass `RColumnReaderBase` through interfaces; that type-erase column types, which is important to better integrate; RDF and RDataSource: in the future, `RDataSource` implementations will; be able to return specialized column readers to RDF rather than raw; pointers to the datasource values. There should be no visible difference in event loop runtimes: a virtual; call to `SomeColumnReader<T>::Get` has been substituted with a direct,; inlined call to `RColumnReaderBase::Get<T>` which in turn executes a; virtual call to `SomeColumnReader<T>::GetImpl`. Compile times and jitting times should benefit from the reduced amount; of templates.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6310:184,simpl,simplifies,184,https://root.cern,https://github.com/root-project/root/pull/6310,1,['simpl'],['simplifies']
Usability,"`RDF::Mean()` uses plain doubles. That's better than float, but far from stable. When you run with IMT, it's actually more accurate than without, because less numbers go into one accumulator, and each running sum remains smaller. So IMT/NoIMT can break your tests (even different TBB scheduling does). It was creating problems already in this simple test (note that the precision threshold for testing the mean is pretty bad, 1.E-2):; https://github.com/root-project/root/blob/7e1c74b764a60f811e898c3f6b55c0234b2b307d/roofit/RDataFrameHelpers/test/testActionHelpers.cxx#L28-L33. Maybe it's worth to increase the precision of; https://github.com/root-project/root/blob/7e1c74b764a60f811e898c3f6b55c0234b2b307d/tree/dataframe/inc/ROOT/RDF/ActionHelpers.hxx#L917. with a Kahan or Neumaier sum. Same for StdDev, maybe go for Knuth's algo or the parallel weighted variance.; https://en.wikipedia.org/wiki/Algorithms_for_calculating_variance. For Kahan, you can use; https://root.cern.ch/doc/master/classROOT_1_1Math_1_1KahanSum.html",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7395:343,simpl,simple,343,https://root.cern,https://github.com/root-project/root/issues/7395,1,['simpl'],['simple']
Usability,"``""_typename""`` was always first member in JSON object.; Therefore every next member add to object was separated with ``"",""`` - very simple.; Now, when typeinfo can be excluded, one must ensure that before first data member no any extra separators are inserted. In the #3203 only simple usecases were tested - now skipping should work everywhere.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3215:133,simpl,simple,133,https://root.cern,https://github.com/root-project/root/pull/3215,2,['simpl'],['simple']
Usability,`can't dereference invalidated vector iterator` assertion failure in `SimpleCollectionProxy.hxx`,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13568:70,Simpl,SimpleCollectionProxy,70,https://root.cern,https://github.com/root-project/root/issues/13568,1,['Simpl'],['SimpleCollectionProxy']
Usability,"`clang-format` will not be happy with the very long lines in the user guide, but on the other hand markdown only accepts table rows on a single line, so I think this case calls for an exception.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/479:70,guid,guide,70,https://root.cern,https://github.com/root-project/root/pull/479,1,['guid'],['guide']
Usability,`curl -v https://github.com:443/root-project/root/raw/master/tutorials/dataframe/df017_vecOpsHEP.root -o file.root` show the problem. `github.com` server supports `HTTP 2` while `TWebFile` uses `HTTP 1.1`. Therefore `github.com` simply refuses first request with 400 error. Not sure if there is easy way to support `HTTP 2` with `TWebFile`,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8890#issuecomment-911515928:229,simpl,simply,229,https://root.cern,https://github.com/root-project/root/issues/8890#issuecomment-911515928,2,['simpl'],['simply']
Usability,"`from ROOT import *` leads to a segmentation violation when used with Python 3.6. One could try fixing it instead of disabling it but the code which is used to install the lookup handler in the module `RootModule::SetRootLazyLookup` depends on internal CPython implementation details of the dict class which are not part of the public API. As a consequence keeping this alive will lead to very; fragile code, require continuous effort to adapt to internal changes and cause a lot of #ifdef handling. (as a matter of fact, Python 3.7 would probably already require new changes to this code already). . Also there's a statement in the bug report that `from ROOT import *` is broken in Python 3 so I don't understand why it's not disabled as it will only confuse users: https://sft.its.cern.ch/jira/browse/ROOT-8931. As such I would propose to instead have a clear error message that `from ROOT import *` does not work. This pr adds an `ImportError` which is easy to handle but cannot be just ignored by the user.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/825:856,clear,clear,856,https://root.cern,https://github.com/root-project/root/pull/825,1,['clear'],['clear']
Usability,"`gInterpreter::ProcessLine` has an important run-time cost.; Instead of calling it everytime the jitting of an action is required, we now store all the strings that are to jit in TLoopManager and do a single call to `gInterpreter::ProcessLine` before running the event-loop. A couple of life-time issues had to be resolved for this to work properly: in order to let result proxies and action helpers share ownership of the result object, I introduced (simple) manual lifetime management of a shared_ptr (weird, I know). In order to deal with deferred jitting of an action that hangs from a node whose `TInterface` has already been destroyed (can happen due to the deferral of jitting) all `BuildAndBook` functions have been made independent of `TInterface`. In the long term it might be possible to refactor the jitting mechanism so that the `TAction` (and the `TTreeReaderValue/Array`s that it contains) is jitted but the action helpers are not, lifting the requirement of manual lifetime management of a shared_ptr. Although this should be possible in principle, I currently don't see how we could integrate it with the existing logic, so I decided for this much less invasive solution. Before/after runtimes for two extreme scenarios:. `test_inference.cxx` (which performs a lot of jitting).; compile time: ~8s -> ~9s; run time: ~40s -> ~7s. 50 jitted Histo1D calls in a loop (thanks to Attila for the use-case):; run time: ~35s -> <2s. This PR conflicts with #713 . Depending on which one gets merged first I will rebase the other.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/720:452,simpl,simple,452,https://root.cern,https://github.com/root-project/root/pull/720,1,['simpl'],['simple']
Usability,"`obj.ClassName()` is not only less verbose, but also doesn't require you to include `TClass.h`. Okay I see the point that one doesn't know if it is `obj.IsA()->GetName()` or `obj.Class()->GetName()`, but to be confused by this one needs to be a `TObject` expert why knows about the difference between `IsA()` and `Class()`. Without this prior knowledge, I think the behavior of `obj.ClassName()` to give the name of the derived class is very intuitive.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10670#issuecomment-1143539344:442,intuit,intuitive,442,https://root.cern,https://github.com/root-project/root/pull/10670#issuecomment-1143539344,2,['intuit'],['intuitive']
Usability,"`sysctl -n hw.logicalcpu` works. I still think that a simple ""`-j8` where ""8"" is the number of cores you have"" is easier to access for our readers. I don't think it's the readme's job to explain how to find one's number of cores. ""`-j8` where ""8"" is the number of cores you have"" is the change I suggested you to do. Would you agree to do that?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5079#issuecomment-597561877:54,simpl,simple,54,https://root.cern,https://github.com/root-project/root/pull/5079#issuecomment-597561877,2,['simpl'],['simple']
Usability,"a class member that is already marked as a class member with the underscore prefix convention. Please replace all occurences of `this->_` in the source file with just `_`.; - [x] [`makeCrosssectionContainer()`](https://github.com/root-project/root/blob/1608dfa0d8d630617d6b529ccb090a0bbab00bbc/roofit/roofit/src/RooLagrangianMorphFunc.cxx#L2128) returns a `TPair*` that is owned by the caller. Please return `std::unique_ptr<TPair>` is this case, or even better return a `std::pair` instead (avoid using old ROOT container classes that were written before the standard library was introduced).; - [x] Similarly, [`createTH1`](https://github.com/root-project/root/blob/1608dfa0d8d630617d6b529ccb090a0bbab00bbc/roofit/roofit/src/RooLagrangianMorphFunc.cxx#L2621) returns an owning raw pointer too, while it should return a `std::unique_ptr<TH1>` in this case. Can this interface still be changed without disrupting users too much? **No, this can break usercode, so this suggestion was not implemented!**. All these flaws above have been addressed by @rahulgrit in #9912. Some more flaws were fixed in #11023. - [x] The `getCache` function takes a unused argument. It is a private function, so to signature can simply be changed and the argument removed; - [x] The unused `_ownsParameters` member should be removed. However, that's not all! There are more issues with this class that have to be resolved in a followup PR:. - [x] Various memory leaks (search for `new ` in the file and you will find them, almost everything created on the heap is leaking.; - for example, [here](https://github.com/root-project/root/blob/1608dfa0d8d630617d6b529ccb090a0bbab00bbc/roofit/roofit/src/RooLagrangianMorphFunc.cxx#L836) we even have some RooDataHists that leak; - [x] There is a static counter variable in the default constructor. It is unused and should be removed; - [x] The `RooStringVar` is used in the configuration of the class. We should investigate if it's not possible to simply use `std::string` here.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9845:2516,simpl,simply,2516,https://root.cern,https://github.com/root-project/root/issues/9845,2,['simpl'],['simply']
Usability,"a namespace:; ```py; import ROOT. ROOT.gInterpreter.Declare(; """"""; namespace ROOT{; namespace Detail{; struct MyStruct{};; void dostuff(){}; int myint;; }}; """"""; ); ```; Then try to access them in a Python session; ```py; $ python -i namespace_function.py; >>> ROOT.Detail.MyStruct; Traceback (most recent call last):; File ""<stdin>"", line 1, in <module>; AttributeError: <namespace cppyy.gbl.Detail at 0x55e51fdc7f50> has no attribute 'MyStruct'. Full details:; type object 'Detail' has no attribute 'MyStruct'; 'Detail::MyStruct' is not a known C++ class; 'MyStruct' is not a known C++ template; 'MyStruct' is not a known C++ enum; >>> ROOT.ROOT.Detail.MyStruct; <class cppyy.gbl.ROOT.Detail.MyStruct at 0x55e51fe1dd60>; >>> ROOT.Detail.dostuff; Traceback (most recent call last):; File ""<stdin>"", line 1, in <module>; AttributeError: <namespace cppyy.gbl.Detail at 0x55e51fdc7f50> has no attribute 'dostuff'. Full details:; type object 'Detail' has no attribute 'dostuff'; 'Detail::dostuff' is not a known C++ class; 'dostuff' is not a known C++ template; 'dostuff' is not a known C++ enum; >>> ROOT.ROOT.Detail.dostuff; <cppyy.CPPOverload object at 0x7f522b684eb0>; >>> ROOT.Detail.myint; Traceback (most recent call last):; File ""<stdin>"", line 1, in <module>; AttributeError: <namespace cppyy.gbl.Detail at 0x55e51fdc7f50> has no attribute 'myint'. Full details:; type object 'Detail' has no attribute 'myint'; 'Detail::myint' is not a known C++ class; 'myint' is not a known C++ template; 'myint' is not a known C++ enum; >>> ROOT.ROOT.Detail.myint; 0; ```. It's unclear how to avoid the double `ROOT.ROOT` in general. ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->. Be able to avoid typing the name twice, at least for classes/functions defined in ROOT source code. ### Setup; <!--; 1. ROOT version; 2. Operating system; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->. ROOT master on Fedora32",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8745:1952,clear,clear,1952,https://root.cern,https://github.com/root-project/root/issues/8745,1,['clear'],['clear']
Usability,"a simpler reproducer:; ```; void HV_comp_red(){; Double_t biasVoltage[28] = {80., 70., 60., 50., 40., 30., 20., 10., 9., 8., 7., 6., 5., 4., 3., 2., 1., 0.9, 0.8, 0.7, 0.6, 0.5, 0.4, 0.3, 0.2, 0.1, 0.08, 0.06};; Double_t mean0[28] = {0., -4.45, -3.81, -14.65, -11.81, -12.56, -12.25, -6.26, -9.40, -7.98, -7.14, -17.87, -12.26, -11.41, -13.35, -14.51, -7.51, -16.15, -12.67, -18.58, -8.76, -8.94, -13.75, -14.31, -12.76, -14.16, -8.24, -135.4};. auto graph0 = new TGraph(28, biasVoltage, mean0);. graph0->SetMarkerColor(2);; graph0->SetMarkerStyle(20);. TCanvas *canvas = new TCanvas(""c"", ""c"", 200,10,900,600);; canvas->SetLogx();; graph0->Draw(""a p rx"");; }; ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11938#issuecomment-1372092925:2,simpl,simpler,2,https://root.cern,https://github.com/root-project/root/issues/11938#issuecomment-1372092925,2,['simpl'],['simpler']
Usability,"ac, and certainly easier than Linux varietals), so that's a choice. Neither has Mac for that matter: folks are free to update Xcode or not. Of course, you're saved here b/c even older Clang on Mac is pretty up-to-date with C++, but no such luck on Windows. On the other hand, modern MSVC is fine, but then Clang5 underpinning Cling can not parse the C++ library headers of MSVC 19 with C++17 enabled. So catch-22. Shipped PCMs also prevent developers from using OpenMP with Cling, but at least that can still be done in libraries, which can be linked without otherwise exposing OpenMP. However, the baked-in choice for _not_ having AVX means not only that Cling can not use it, but also causes binary incompatability with libraries that were compiled with AVX enabled (e.g. many/most Eigen-based codes). Then there is the version of C++ being fixed by the PCMs (and worse, in RConfig.h and the ""backported"" stringview classes, so it's not a simple matter of wiping the local PCMs and rebuilding), meaning C++11 is the only supported version unless you do a full recompile (and see the forum for how much fun that is). And if you look at the whole list of nightlies of the past couple of weeks, and not only at the carefully selected all-green one out of a sea of red that you posted above, you'll see that non-Linux platforms fail disproportionally often. (In fact one of the recent ""green"" releases is only green b/c MacOS 10.15 and Windows10 are switched off.) That tells me that most of your developers work on Linux, and rely on the nightlies to catch any portability issues. That's a very poor approach b/c your matrix is necessarily limited given the enormous number of possible combinations. (That's another way of saying it's carefully selected.). I don't actually know if all those Linux systems are SLC, but did note for example that the build failed on SuSE Tumbleweed with gcc9, b/c SuSE does not install TBB by default to go with that compiler, and the build was missing headers as a cons",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6393#issuecomment-707273510:1592,simpl,simple,1592,https://root.cern,https://github.com/root-project/root/issues/6393#issuecomment-707273510,2,['simpl'],['simple']
Usability,"ack (most recent call first):; CMakeLists.txt:95 (include); This warning is for project developers. Use -Wno-dev to suppress it. CMake Warning (dev) at /usr/lib/llvm/15/lib/cmake/llvm/HandleLLVMOptions.cmake:1001 (option):; Policy CMP0077 is not set: option() honors normal variables. Run ""cmake; --help-policy CMP0077"" for policy details. Use the cmake_policy command to; set the policy and suppress this warning. For compatibility with older versions of CMake, option is clearing the; normal variable 'LLVM_ENABLE_RTTI'.; Call Stack (most recent call first):; CMakeLists.txt:95 (include); This warning is for project developers. Use -Wno-dev to suppress it. CMake Warning (dev) at /usr/share/cmake/Modules/CMakeDependentOption.cmake:75 (option):; Policy CMP0077 is not set: option() honors normal variables. Run ""cmake; --help-policy CMP0077"" for policy details. Use the cmake_policy command to; set the policy and suppress this warning. For compatibility with older versions of CMake, option is clearing the; normal variable 'LLVM_EXPORT_SYMBOLS_FOR_PLUGINS'.; Call Stack (most recent call first):; /usr/lib/llvm/15/lib/cmake/llvm/HandleLLVMOptions.cmake:1157 (CMAKE_DEPENDENT_OPTION); CMakeLists.txt:95 (include); This warning is for project developers. Use -Wno-dev to suppress it. -- Looking for os_signpost_interval_begin; -- Looking for os_signpost_interval_begin - not found; -- Found PythonInterp: /usr/bin/python (found version ""3.10.9""); -- Performing Test CXX_HAS_Wno_nested_anon_types; -- Performing Test CXX_HAS_Wno_nested_anon_types - Success; -- Performing Test CXX_HAS_Wno_covered_switch_default; -- Performing Test CXX_HAS_Wno_covered_switch_default - Success; -- Performing Test CXX_HAS_Wno_unused_local_typedef; -- Performing Test CXX_HAS_Wno_unused_local_typedef - Success; -- Cling version (from VERSION file): 1.0~dev; -- Cling will look for C++ headers in '/usr/lib/gcc/x86_64-pc-linux-gnu/11/include/g++-v11:/usr/lib/gcc/x86_64-pc-linux-gnu/11/include/g++-v11/x86_64-pc-linux",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11920#issuecomment-1370394653:7155,clear,clearing,7155,https://root.cern,https://github.com/root-project/root/issues/11920#issuecomment-1370394653,2,['clear'],['clearing']
Usability,"actorySimultaneous( *model );. // Minimisation; RooAbsReal* nll_hf=model_hf->createNLL(*data, Offset(kTRUE));; RooMinimizer *minuit = new RooMinimizer(*nll_hf);; minuit->setOffsetting(kTRUE);; minuit->setStrategy(1);; minuit->migrad();. // Run MINOS on the parameter of interest; minuit->minos(*parameter_of_interest);; ```; Then, the execution of MINOS in the final line results in the modification of the values of the `gamma_stat` parameters. ### Reproducer. I have set up a repository with code to reproduce the issue: https://gitlab.cern.ch/anthonyc/histfactorysimultaneousminosbug; After cloning the repository, you can run:; ```bash; root example.C; ```. After running it, you should observe the following:; ```; [...]. ======== Before MINOS ========; Lumi: 1; SigXsecOverSM: 1.11544; alpha_syst1: 0; alpha_syst2: -0.00946086; alpha_syst3: 0.0209843; gamma_stat_channel1_bin_0: 0.999547; gamma_stat_channel1_bin_1: 1.00348; nom_alpha_syst1: 0; nom_alpha_syst2: 0; nom_alpha_syst3: 0; nom_gamma_stat_channel1_bin_0: 400; nom_gamma_stat_channel1_bin_1: 100. [...]. ======== After MINOS ========; Lumi: 1; SigXsecOverSM: 1.11544; alpha_syst1: 0; alpha_syst2: -0.00946086; alpha_syst3: 0.0209843; gamma_stat_channel1_bin_0: 1.02666; gamma_stat_channel1_bin_1: 1.04061; nom_alpha_syst1: 0; nom_alpha_syst2: 0; nom_alpha_syst3: 0; nom_gamma_stat_channel1_bin_0: 400; nom_gamma_stat_channel1_bin_1: 100; nominalLumi: 1; ```; The `gamma_stat_` parameters are indeed modified. ### ROOT version. The issue was observed in ROOT 6.26/10 and 6.16/00. ### Installation method. Conda for ROOT 6.26/10, unknown for 6.16/00. ### Operating system. CentOS 7.9. ### Additional context. We're using HistFactory for our analysis. In our case, this apparent bug biases the one-dimensional projected pulls (normalised residuals) between the fitted model and data, when MINOS is called.; Since I'm still learning the ins and outs of HistFactory, I apologize if any misunderstanding on my part is causing this issue! :)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13142:3169,learn,learning,3169,https://root.cern,https://github.com/root-project/root/issues/13142,1,['learn'],['learning']
Usability,"after some changes, this should be fine. I also added a new tutorial and simplified `double32.C`",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3863#issuecomment-496032329:73,simpl,simplified,73,https://root.cern,https://github.com/root-project/root/pull/3863#issuecomment-496032329,2,['simpl'],['simplified']
Usability,"after very long pause (sorry), I've rerun my tests with dev3 LCG nightly slot and I see that performance is close to values from the start of December. Likely the the problem is solved and the issue can be closed.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11927#issuecomment-1399911161:16,pause,pause,16,https://root.cern,https://github.com/root-project/root/issues/11927#issuecomment-1399911161,2,['pause'],['pause']
Usability,ah - i still didn't get it right... learning,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/584#issuecomment-302451433:36,learn,learning,36,https://root.cern,https://github.com/root-project/root/pull/584#issuecomment-302451433,1,['learn'],['learning']
Usability,"already been compiled and loaded; Info in <ACLiC>: it will be regenerated and reloaded!; Info in <TUnixSystem::ACLiC>: creating shared library /home/blue/Scratchpad/df/optimized_template_helper/generatedcode_cpp.so; In module 'ROOTDataFrame':; /home/blue/miniconda3/envs/cern-root/include/ROOT/RResultPtr.hxx:99:73: error: no member named 'value' in 'ROOT::TypeTraits::HasBeginAndEnd<int>'; template <typename V, bool hasBeginEnd = TTraits::HasBeginAndEnd<V>::value>; ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^; /home/blue/miniconda3/envs/cern-root/include/ROOT/RResultPtr.hxx:180:13: note: in instantiation of default argument for 'RIterationHelper<int>' required here; typename RIterationHelper<T>::Iterator_t begin(); ^~~~~~~~~~~~~~~~~~~; ./generatedcode.cpp:5:29: note: in instantiation of template class 'ROOT::RDF::RResultPtr<int>' requested here; ROOT::RDF::RResultPtr<int> ptr;; ^; In module 'ROOTDataFrame':; /home/blue/miniconda3/envs/cern-root/include/ROOT/RResultPtr.hxx:99:73: error: no member named 'value' in 'ROOT::TypeTraits::HasBeginAndEnd<int>'; template <typename V, bool hasBeginEnd = TTraits::HasBeginAndEnd<V>::value>; ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^; /home/blue/miniconda3/envs/cern-root/include/ROOT/RResultPtr.hxx:189:13: note: in instantiation of default argument for 'RIterationHelper<int>' required here; typename RIterationHelper<T>::Iterator_t end(); ^~~~~~~~~~~~~~~~~~~; ./generatedcode.cpp:5:29: note: in instantiation of template class 'ROOT::RDF::RResultPtr<int>' requested here; ROOT::RDF::RResultPtr<int> ptr;; ^; TInterpreter::TCling::RegisterModule:0: RuntimeWarning: Problems declaring payload for module generatedcode_cpp_ACLiC_dict.; ```. I could not reduce the repro further. I am not sure whether this is a scenario that is supposed to work, but I _think_ so because making minor, apparently harmless changes to the repro fixes it (e.g. removing the parameter of `Foo` or deleting the first line of its body). Feel free to close if such a usecase is simply not supported.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7199:2860,simpl,simply,2860,https://root.cern,https://github.com/root-project/root/issues/7199,1,['simpl'],['simply']
Usability,"anager::runOnModule (this=0xf6a4b0, M=...) at /home/jhahnfel/ROOT/llvm13/src/interpreter/llvm/src/lib/IR/LegacyPassManager.cpp:1554; > #63 llvm::legacy::PassManagerImpl::run (this=<optimized out>, M=...) at /home/jhahnfel/ROOT/llvm13/src/interpreter/llvm/src/lib/IR/LegacyPassManager.cpp:542; > #64 0x00007fffeeaccbee in cling::IncrementalExecutor::emitModule (this=0x698d80, T=...) at /home/jhahnfel/ROOT/llvm13/src/interpreter/cling/lib/Interpreter/IncrementalExecutor.h:253; > #65 cling::IncrementalExecutor::runStaticInitializersOnce (this=0x698d80, T=...) at /home/jhahnfel/ROOT/llvm13/src/interpreter/cling/lib/Interpreter/IncrementalExecutor.cpp:251; > #66 0x00007fffeea63d43 in cling::Interpreter::executeTransaction (this=<optimized out>, T=...) at /home/jhahnfel/ROOT/llvm13/src/interpreter/cling/lib/Interpreter/Interpreter.cpp:1714; > #67 0x00007fffeea6da53 in cling::IncrementalParser::commitTransaction (this=0x4f6670, PRT=..., ClearDiagClient=<optimized out>) at /home/jhahnfel/ROOT/llvm13/src/interpreter/cling/lib/Interpreter/IncrementalParser.cpp:675; > #68 0x00007fffeea6e410 in cling::IncrementalParser::Compile (this=0x4f6670, input=..., Opts=...) at /home/jhahnfel/ROOT/llvm13/src/interpreter/cling/lib/Interpreter/IncrementalParser.cpp:846; > #69 0x00007fffeea62615 in cling::Interpreter::EvaluateInternal (this=0x4f17a0, input=..., CO=..., V=0x7fffffffcc70, wrapPoint=<optimized out>) at /home/jhahnfel/ROOT/llvm13/src/interpreter/cling/lib/Interpreter/Interpreter.cpp:1379; > #70 0x00007fffee95d98f in TCling::Calc (this=0x4f0e00, line=0x1c224b0 ""ROOT::Internal::RDF::JitFilterHelper(R_rdf::lambda0, new const char*[1]{\""a\""}, 1, \""\"", reinterpret_cast<std::weak_ptr<ROOT::Detail::RDF::RJittedFilter>*>(0x21269a0), reinterpret_cast<std::shared_ptr<ROO""..., error=0x7fffffffcd0c) at /home/jhahnfel/ROOT/llvm13/src/core/metacling/src/TCling.cxx:3556; > #71 0x00007ffff7fc97b3 in ROOT::Internal::RDF::InterpreterCalc(std::__cxx11::basic_string<char, std::char_traits<char>, std::",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10294#issuecomment-1098026446:16196,Clear,ClearDiagClient,16196,https://root.cern,https://github.com/root-project/root/pull/10294#issuecomment-1098026446,1,['Clear'],['ClearDiagClient']
Usability,and use a simple vector of pointers.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2708:10,simpl,simple,10,https://root.cern,https://github.com/root-project/root/pull/2708,1,['simpl'],['simple']
Usability,any feedback on this PR ?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8265#issuecomment-946554582:4,feedback,feedback,4,https://root.cern,https://github.com/root-project/root/pull/8265#issuecomment-946554582,2,['feedback'],['feedback']
Usability,any further feedback on this one? (I think I am not changing code in any part),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9654#issuecomment-1074169606:12,feedback,feedback,12,https://root.cern,https://github.com/root-project/root/pull/9654#issuecomment-1074169606,2,['feedback'],['feedback']
Usability,"ar, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<ROOT::Detail::RDF::RDefineBase> >, true> > >::_M_deallocate_node (__n=0x209f2f0, this=<optimized out>) at /usr/include/c++/12/bits/hashtable_policy.h:1984; #9 std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<ROOT::Detail::RDF::RDefineBase> >, true> > >::_M_deallocate_nodes (this=<optimized out>, __n=0x209f250) at /usr/include/c++/12/bits/hashtable_policy.h:2006; #10 std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<ROOT::Detail::RDF::RDefineBase> >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<ROOT::Detail::RDF::RDefineBase> > >, std::__detail::_Select1st, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >::clear (this=0x1ab6a80) at /usr/include/c++/12/bits/hashtable.h:2500; #11 std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<ROOT::Detail::RDF::RDefineBase> >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<ROOT::Detail::RDF::RDefineBase> > >, std::__detail::_Select1st, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12023:5714,clear,clear,5714,https://root.cern,https://github.com/root-project/root/issues/12023,1,['clear'],['clear']
Usability,"arameters;; fit_parameters.Add(""A"",0.118,0.01,0,1);; fit_parameters.Add(""B"",0.5,0.1,0.1,100.0);; fit_parameters.Fix(""A"");; fit_parameters.Fix(""B"");; TestChi2* FULL= new TestChi2();; MnUserParameters temp_fit_parameters=fit_parameters;; MnMigrad migrad0(*FULL, temp_fit_parameters); ; FunctionMinimum min_migrad0 = migrad0(); // OK; MnSimplex simplex0(*FULL, temp_fit_parameters);; FunctionMinimum min_simplex0 = simplex0(); // FPE; exit(0);; }; ```; ```; g++ simplex.cc -o simplex.exe $(root-config --glibs --cflags) -lMinuit2; ./simplex.exe; ```; results in . ```; The lines below might hint at the cause of the crash.; You may get help by asking at the ROOT forum http://root.cern.ch/forum; Only if you are really convinced it is a bug in ROOT then please submit a; report at http://root.cern.ch/bugs Please post the ENTIRE stack trace; from above as an attachment in addition to anything else; that might help us fixing this issue.; ===========================================================; #5 ROOT::Minuit2::SimplexBuilder::Minimum (this=0x7ffcf9555c58, mfcn=..., seed=..., maxfcn=200, minedm=0.10000000000000001) at /usr/src/debug/root-6.22.02/math/minuit2/src/SimplexBuilder.cxx:48; #6 0x00007f045c93e1cd in ROOT::Minuit2::ModularFunctionMinimizer::Minimize (this=<optimized out>, mfcn=..., gc=..., seed=..., strategy=..., maxfcn=200, toler=<optimized out>) at /usr/src/debug/root-6.22.02/math/minuit2/src/ModularFunctionMinimizer.cxx:166; #7 0x00007f045c93c737 in ROOT::Minuit2::ModularFunctionMinimizer::Minimize (this=0x7ffcf9555c48, fcn=..., st=..., strategy=..., maxfcn=200, toler=0.10000000000000001) at /usr/src/debug/root-6.22.02/math/minuit2/src/ModularFunctionMinimizer.cxx:120; #8 0x00007f045c905c51 in ROOT::Minuit2::MnApplication::operator() (this=0x7ffcf9555b00, maxfcn=200, toler=0.10000000000000001) at /usr/src/debug/root-6.22.02/math/minuit2/src/MnApplication.cxx:57; #9 0x000000000041068c in main (); ===========================================================; ```. ### Se",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6775:1807,Simpl,SimplexBuilder,1807,https://root.cern,https://github.com/root-project/root/issues/6775,1,['Simpl'],['SimplexBuilder']
Usability,"aring `A`, process the constructor (of anything involving `A` itself in `A` declaration and call ` TCling::AutoParse`; * ` TCling::AutoParse` recognizes `A` for the dictionary's `classesHeaders`; * ` TCling::AutoParse` proceeed to ask for the `payloadCode` to be processed/included (with the 'patch / fix / reversal' this is replaced by `A.h`), this `payloadCode` consist of:; ```; #include ""A.h""; #include ""B.h""; ```; * Thanks to the code guard `A.h` is skipped (well anyway it is actually being processed by the outer code !!); * `B.h` is being included is reached:; ```; class B : public A; ```; which correctly complains that `A` is not yet fully declared .... The commit log corresponding to the change is explicitly referring to this change:; ```; Associate to autoParse entries only the payload ([ROOT-6321](https://sft.its.cern.ch/jira/browse/ROOT-6321)); ; de facto implementing lazy payload parsing instead of header; parsing on demand.; ```. **It is not clear why ` TCling::AutoParse` is called with a symbol that is ""__being__"" declared.**. A work around (why we don't usually see this issue) is to generate a rootmap file (generating the c++ module should also in principle):; ```; diff Makefile.orig Makefile; 25c25; < rootcint -f ${DICT} -c ${DICTHDRS}; ---; > rootcint -rml=A -f ${DICT} -c ${DICTHDRS}; ```. Full stack trace at the starting point of the failing recursive parsing:. ```; #0 TCling::AutoParse (this=0x4c1820, cls=0x7fffffff5670 ""A"") at /local2/pcanal/cint_working/rootcling/root/core/metacling/src/TCling.cxx:6449; #1 0x00007fffea9724aa in TCling__AutoParseCallback (className=0x7fffffff5670 ""A"") at /local2/pcanal/cint_working/rootcling/root/core/metacling/src/TCling.cxx:628; #2 0x00007fffeab15723 in TClingCallbacks::tryAutoParseInternal (this=0x953710, Name=..., R=..., S=0x6a4ee0, FE=0x0) at /local2/pcanal/cint_working/rootcling/root/core/metacling/src/TClingCallbacks.cxx:661; #3 0x00007fffeab14661 in TClingCallbacks::LookupObject (this=0x953710, R=..., S=0x6a4e",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13034:4039,clear,clear,4039,https://root.cern,https://github.com/root-project/root/issues/13034,1,['clear'],['clear']
Usability,"as for simple; using struct instead of class should focus on the issue; ```; struct xy_t{; double x;; double y;; ClassDef(xy_t,1);; };; ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8295#issuecomment-851783548:7,simpl,simple,7,https://root.cern,https://github.com/root-project/root/issues/8295#issuecomment-851783548,2,['simpl'],['simple']
Usability,"as.SetLumi(1);; meas.AddConstantParam(""Lumi"");. RooStats::HistFactory::Channel chan1(""channel1"");; chan1.SetData("""","""");; RooStats::HistFactory::Sample sample1(""sample1"");; sample1.SetHistoName(""emu_OS_1b_Ma"");; sample1.SetHistoPath("""");; sample1.SetInputFile(""BLIND_separate_tt_Z_29IFB_Apr_29_histos.root"");; sample1.SetNormalizeByTheory(false);; sample1.AddNormFactor(""signalStrength"", 1, 0.8, 1.2);; sample1.AddNormFactor(""b"", 0.543, 0.5, 0.6);; sample1.AddOverallSys(""Dummy"",1,1);. RooStats::HistFactory::Sample sample2(""sample2"");; sample2.SetHistoName(""emu_OS_1b_Mb"");; sample2.SetHistoPath("""");; sample2.SetInputFile(""BLIND_separate_tt_Z_29IFB_Apr_29_histos.root"");; sample2.SetNormalizeByTheory(false);; sample2.AddNormFactor(""signalStrength"", 1, 0.8, 1.2);; sample2.AddNormFactor(""minusONE"", -1, -1.1, -0.9);; sample2.AddNormFactor(""b2"", 0.2950, 0.0, 1.0);; sample2.AddOverallSys(""Dummy"",1,1);. chan1.AddSample(sample1);; chan1.AddSample(sample2);. RooStats::HistFactory::Channel chan2(""channel2"");; chan2.SetData("""","""");; RooStats::HistFactory::Sample sample3(""sample3"");; sample3.SetHistoName(""emu_OS_2b_Mc"");; sample3.SetHistoPath("""");; sample3.SetInputFile(""BLIND_separate_tt_Z_29IFB_Apr_29_histos.root"");; sample3.SetNormalizeByTheory(false);; sample2.AddNormFactor(""signalStrength"", 1, 0.8, 1.2);; sample3.AddNormFactor(""b2"", 0.2950, 0.0, 1.0);; sample3.AddOverallSys(""Dummy"",1,1);; chan2.AddSample(sample3);. meas.AddPreprocessFunction(""b2"",""b*b"",""b[0.543,0.0,1.0]"");; meas.AddConstantParam(""minusONE"");; meas.AddChannel(chan1);; meas.AddChannel(chan2);; meas.CollectHistograms();; RooStats::HistFactory::MakeModelAndMeasurementFast(meas);; }; ```. The code and the input can be found here: `/afs/cern.ch/user/t/tdado/public/ROOT_issue_14225`. It is probably not the simplest example, but it is realistic (the histograms and the setup come from an actual measurement). Note that using only the first channel does _not_ lead to a crash. I hope this helps, let me know if I can do more.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14225#issuecomment-1857543387:2007,simpl,simplest,2007,https://root.cern,https://github.com/root-project/root/issues/14225#issuecomment-1857543387,2,['simpl'],['simplest']
Usability,"ataframe/test/module.modulemap:3:33: error: cannot emit module dataframe_splitcoll_arrayview: size must be explicitly specified for missing header file ""TwoFloats.h"" ; - [2022-04-02T22:12:27.642Z] /data/sftnight/workspace/root-pullrequests-build/build/tree/dataframe/test/module.modulemap:3:33: error: cannot emit module dataframe_splitcoll_arrayview: size must be explicitly specified for missing header file ""TwoFloats.h"" ; - [2022-04-02T22:12:27.642Z] /data/sftnight/workspace/root-pullrequests-build/build/tree/dataframe/test/module.modulemap:3:33: error: cannot emit module dataframe_splitcoll_arrayview: size must be explicitly specified for missing header file ""TwoFloats.h"" ; - [2022-04-02T22:15:05.920Z] /data/sftnight/workspace/root-pullrequests-build/build/tree/dataframe/test/module.modulemap:10:37: error: cannot emit module dataframe_simple: size must be explicitly specified for missing header file ""MaxSlotHelper.h"" ; - [2022-04-02T22:15:05.920Z] /data/sftnight/workspace/root-pullrequests-build/build/tree/dataframe/test/module.modulemap:11:36: error: cannot emit module dataframe_simple: size must be explicitly specified for missing header file ""SimpleFiller.h"" ; - [2022-04-02T22:15:05.920Z] /data/sftnight/workspace/root-pullrequests-build/build/tree/dataframe/test/module.modulemap:11:36: error: cannot emit module dataframe_simple: size must be explicitly specified for missing header file ""SimpleFiller.h"" ; - [2022-04-02T22:15:05.920Z] /data/sftnight/workspace/root-pullrequests-build/build/tree/dataframe/test/module.modulemap:10:37: error: cannot emit module dataframe_simple: size must be explicitly specified for missing header file ""MaxSlotHelper.h"" . And 4 more. ### Warnings:; - [2022-04-02T22:10:33.417Z] Warning in &lt;CheckModuleValid&gt;: warning: Couldn't find in the following specified headers in the module Core: ; - [2022-04-02T22:10:58.306Z] Warning in &lt;CheckModuleValid&gt;: warning: Couldn't find in the following specified headers in the module Thread:",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10294#issuecomment-1086733507:7077,Simpl,SimpleFiller,7077,https://root.cern,https://github.com/root-project/root/pull/10294#issuecomment-1086733507,2,['Simpl'],['SimpleFiller']
Usability,"ation/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/base/inc -Iginclude -I/mnt/build/workspace/root-pullrequests-build/root/math/mathcore/inc -I/mnt/build/workspace/root-pullrequests-build/root/math/mathcore/v7/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/imt/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/multiproc/inc -Iexternals/mnt/build/workspace/root-pullrequests-build/install/include -I/mnt/build/workspace/root-pullrequests-build/root/net/net/inc -I/mnt/build/workspace/root-pullrequests-build/root/io/io/inc -fdiagnostics-color=always -std=c++11 -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread -O3 -fPIC -std=c++11 -MD -MT math/mathmore/CMakeFiles/MathMore.dir/src/GSLRndmEngines.cxx.o -MF math/mathmore/CMakeFiles/MathMore.dir/src/GSLRndmEngines.cxx.o.d -o math/mathmore/CMakeFiles/MathMore.dir/src/GSLRndmEngines.cxx.o -c /mnt/build/workspace/root-pullrequests-build/root/math/mathmore/src/GSLRndmEngines.cxx; > * [2021-03-01T16:00:58.827Z] /mnt/build/workspace/root-pullrequests-build/root/math/mathmore/src/GSLRndmEngines.cxx:225:68: error: ‘gsl_ran_multivariate_gaussian’ was not declared in this scope. Sorry that it took me a while to look at this. I had to create an Ubuntu 16.04 virtual machine for testing. . @lmoneta, unfortunately, this error happens because Ubuntu 16.04 ships GSL version 2.1, which hasn't gsl_ran_multivariate_gaussian. The multivariate Gaussian random number generation in GSL was only introduced in version 2.2.1. I bypass this with an `#ifdef` that will define the function if the GSL version is < 2.2 by simply copying it from a higher version of GSL. Hopefully, this doesn't break the GPL license under which GSL is distributed. I think that I could also replace the function call to `gsl_ran_multivariate_gaussian` with the wrapper's full implementation. I am open to comments. I don't have access to a windows machine now; I will do the same and use a virtual machine to test that part.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7186#issuecomment-801496369:2765,simpl,simply,2765,https://root.cern,https://github.com/root-project/root/pull/7186#issuecomment-801496369,2,['simpl'],['simply']
Usability,"b/Interpreter/IncrementalJIT.cpp; index e20543b..668bf0b 100644; --- a/interpreter/cling/lib/Interpreter/IncrementalJIT.cpp; +++ b/interpreter/cling/lib/Interpreter/IncrementalJIT.cpp; @@ -352,7 +352,7 @@ IncrementalJIT::IncrementalJIT(IncrementalExecutor& exe,; this->m_Resolver};; },; m_NotifyObjectLoaded, NotifyFinalizedT(*this)),; - m_CompileLayer(m_ObjectLayer, llvm::orc::SimpleCompiler(*m_TM)),; + m_CompileLayer(m_ObjectLayer, MySimpleCompiler(*m_TM)),; m_LazyEmitLayer(m_CompileLayer) {; ; m_CompileLayer.setNotifyCompiled(NCC);; diff --git a/interpreter/cling/lib/Interpreter/IncrementalJIT.h b/interpreter/cling/lib/Interpreter/IncrementalJIT.h; index df4360f..ac4c851 100644; --- a/interpreter/cling/lib/Interpreter/IncrementalJIT.h; +++ b/interpreter/cling/lib/Interpreter/IncrementalJIT.h; @@ -38,6 +38,37 @@ namespace cling {; class Azog;; class IncrementalExecutor;; ; + class MySimpleCompiler : public llvm::orc::SimpleCompiler {; + public:; + MySimpleCompiler(llvm::TargetMachine &TM, llvm::ObjectCache *ObjCache = nullptr); + : SimpleCompiler(TM, ObjCache) {}; + CompileResult operator()(llvm::Module &M) {; + auto R = SimpleCompiler::operator()(M);; + //auto Filename = ""output.o"";; + std::error_code EC;; + //llvm::raw_fd_ostream dest(Filename, EC, sys::fs::F_None);; + ; + static unsigned counter = 0;; + std::string FileStem;; + {; + llvm::raw_string_ostream FileStemStream(FileStem);; + FileStemStream << M.getModuleIdentifier() << ""."" << ++counter;; + }; + llvm::raw_fd_ostream ModuleStream(FileStem + "".ll"", EC, llvm::sys::fs::F_None);; + ModuleStream << M;; + llvm::raw_fd_ostream ObjectStream(FileStem + "".o"", EC, llvm::sys::fs::F_None);; + ObjectStream.write(R->getBufferStart(), R->getBufferSize());; +; +/* if (R) {; + M.dump();; + //printf(""MemBuf '%.*s'\n"", (int) R->getBufferSize(), R->getBufferStart());; + printf(""MemBuf '%s'\n"", R->getBuffer().data());; + // dump M and object file *R here.; + }*/; + return R;; + }; + };; +; class IncrementalJIT {; public:; usin",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9380#issuecomment-985923087:1834,Simpl,SimpleCompiler,1834,https://root.cern,https://github.com/root-project/root/pull/9380#issuecomment-985923087,3,['Simpl'],['SimpleCompiler']
Usability,"bCling.so.6.30.04); ==721499== by 0x694CB7A: TCling::ProcessLineSynch(char const*, TInterpreter::EErrorCode*) (in /opt/root/lib/libCling.so.6.30.04); ==721499== Block was alloc'd at; ==721499== at 0x4849013: operator new(unsigned long) (in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so); ==721499== by 0x4A95EDD: TStorage::ObjectAlloc(unsigned long) (in /opt/root/lib/libCore.so.6.30.04); ==721499== by 0x2729AAAE: test() (in /tmp/tmp/test_cpp.so); ==721499== by 0x2729F039: ???; ==721499== by 0x6AA94F7: cling::IncrementalExecutor::executeWrapper(llvm::StringRef, cling::Value*) const (in /opt/root/lib/libCling.so.6.30.04); ==721499== by 0x6A31E4B: cling::Interpreter::RunFunction(clang::FunctionDecl const*, cling::Value*) (in /opt/root/lib/libCling.so.6.30.04); ==721499== by 0x6A32596: cling::Interpreter::EvaluateInternal(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::CompilationOptions, cling::Value*, cling::Transaction**, unsigned long) (in /opt/root/lib/libCling.so.6.30.04); ==721499== by 0x6A327B7: cling::Interpreter::process(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::Value*, cling::Transaction**, bool) (in /opt/root/lib/libCling.so.6.30.04); ==721499== by 0x6B09BC6: cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) (in /opt/root/lib/libCling.so.6.30.04); ==721499== by 0x693813B: HandleInterpreterException(cling::MetaProcessor*, char const*, cling::Interpreter::CompilationResult&, cling::Value*) (in /opt/root/lib/libCling.so.6.30.04); ==721499== by 0x694C6E7: TCling::ProcessLine(char const*, TInterpreter::EErrorCode*) (in /opt/root/lib/libCling.so.6.30.04); ==721499== by 0x694CB7A: TCling::ProcessLineSynch(char const*, TInterpreter::EErrorCode*) (in /opt/root/lib/libCling.so.6.30.04); ==721499== ; Error in <TList::Clear>: A list is accessing an object (0xf0ff6d0) already deleted (list name = TList); ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14504#issuecomment-1919235775:5335,Clear,Clear,5335,https://root.cern,https://github.com/root-project/root/issues/14504#issuecomment-1919235775,1,['Clear'],['Clear']
Usability,"be evaluated. In particular:; - the new implementation is unable to elide coefnorm integrals over ranges equivalents to the full range; - in the new implementation, to every coefnorm integral over the fit range correspond an integral over an empty named range. This is separate to the integral with no range, which is also done; - calling `addPdf.fixAddCoefRange(fit_range)` before the fit (a common solution if you wanted to avoid coefnorm integrals) removes the unnamed range coefnorm integrals, but not the named range ones. Note, however, that in all the test I performed these integral do not seem to affect fit results, which are the same before and after 6.28.; Instead, the problem is that those integrals may not be easy to compute: this issue was noticed because among the extra integrals was a complex numeric integral that had to be evaluated at each event in the dataset, was extremely slow, and in practice caused the fit to never converge. ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->; No extra integrals over unnamed ranges, passing the full range to fitTo does not add integrals, calling `fixAddCoefRange` removes all coefnorm integrals. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->; ```Python; import ROOT; from ROOT.RooFit import RooConst. # in this simple example the symptoms are only in the logs, in the names of the integrals evaluated; ROOT.RooMsgService.instance().addStream(ROOT.RooFit.INFO, Topic = ROOT.RooFit.Integration). x = ROOT.RooRealVar('x', '', 0, 1). g = ROOT.RooGaussian('g', '', x, RooConst(0.5), RooConst(0.2)); u = ROOT.RooUniform('u', '', x). f = ROOT.RooRealVar('f', '', 0.5, 0, 1); a = ROOT.RooAddPdf('a', '', [g, u], [f]). dt = a.generate({x}, NumEvents = 1000). x.s",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12645:1900,clear,clear,1900,https://root.cern,https://github.com/root-project/root/issues/12645,1,['clear'],['clear']
Usability,"be read from the file, as it did when read with ROOT 6.22/00.; ROOT 6.22/06 also successfully reads files created with ROOT 6.02/12 and later. ### To Reproduce; * Create any workspace file with ROOT 5.34, eg.; ```; % root -b; ROOT 5.34/32 (v5-34-32@v5-34-32, Jul 28 2015, 17:41:47 on linuxx8664gcc); root [0] RooWorkspace w(""w"");; root [1] w.factory(""Gaussian::sigx(x[-10,10],m[0,-10,10],s[3,0.1,10])"");; root [4] w.writeToFile(""simplest-53432.root"");; ```; * Since it isn't easy to get ROOT 5.34 running on CentOS7 these days, I have saved some workspace files here:; * `/afs/cern.ch/user/a/adye/public/root/bug-62206/simplest-53425.root` (created with ROOT 5.34/25); * `/afs/cern.ch/user/a/adye/public/root/bug-62206/simplest-53432.root` (created with ROOT 5.34/32); * `/afs/cern.ch/user/a/adye/public/root/bug-62206/simplest-60212.root` (created with ROOT 6.02/12); * Setup ROOT 6.22/06 and load the file:; ```; % . /cvmfs/sft.cern.ch/lcg/views/setupViews.sh LCG_99 x86_64-centos7-gcc8-dbg; % root -b; root [0] TFile::Open(""simplest-53432.root""); *** Break *** segmentation violation; ...; #10 std::__atomic_base<TVirtualStreamerInfo*>::load (__m=std::memory_order_seq_cst, this=0x1d8) at /cvmfs/sft.cern.ch/lcg/releases/gcc/8.3.0-cebb0/x86_64-centos7/include/c++/8.3.0/bits/atomic_base.h:713; #11 std::__atomic_base<TVirtualStreamerInfo*>::operator TVirtualStreamerInfo* (this=0x1d8) at /cvmfs/sft.cern.ch/lcg/releases/gcc/8.3.0-cebb0/x86_64-centos7/include/c++/8.3.0/bits/atomic_base.h:590; #12 0x00007f791c62f23e in std::atomic<TVirtualStreamerInfo*>::operator TVirtualStreamerInfo* (this=0x1d8) at /cvmfs/sft.cern.ch/lcg/releases/gcc/8.3.0-cebb0/x86_64-centos7/include/c++/8.3.0/atomic:367; #13 0x00007f791c625873 in TClass::GetStreamerInfo (this=0x0, version=0, isTransient=false) at /build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-v6.22.06/src/ROOT/v6.22.06/core/meta/src/TClass.cxx:4563; #14 0x00007f7919c70b29 in (anonymous namespace)::FixCollectionV5 (context=0x372fc40, ",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7276:1542,simpl,simplest-,1542,https://root.cern,https://github.com/root-project/root/issues/7276,1,['simpl'],['simplest-']
Usability,"build/lib/libCling.6.27.01.so] llvm::orc::LegacyRTDyldObjectLinkingLayer::ConcreteLinkedObject<std::__1::shared_ptr<llvm::RuntimeDyld::MemoryManager> >::finalize() (no debug info); [/Users/sftnight/build/workspace/roottest-pullrequests-build/build/lib/libCling.6.27.01.so] llvm::orc::LegacyRTDyldObjectLinkingLayer::ConcreteLinkedObject<std::__1::shared_ptr<llvm::RuntimeDyld::MemoryManager> >::getSymbolMaterializer(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >)::'lambda'()::operator()() const (no debug info); [/Users/sftnight/build/workspace/roottest-pullrequests-build/build/lib/libCling.6.27.01.so] llvm::JITSymbol::getAddress() (no debug info); [/Users/sftnight/build/workspace/roottest-pullrequests-build/build/lib/libCling.6.27.01.so] llvm::orc::LazyEmittingLayer<llvm::orc::LegacyIRCompileLayer<cling::IncrementalJIT::RemovableObjectLinkingLayer, llvm::orc::SimpleCompiler> >::EmissionDeferredModule::find(llvm::StringRef, bool, llvm::orc::LegacyIRCompileLayer<cling::IncrementalJIT::RemovableObjectLinkingLayer, llvm::orc::SimpleCompiler>&)::'lambda'()::operator()() const (no debug info); [/Users/sftnight/build/workspace/roottest-pullrequests-build/build/lib/libCling.6.27.01.so] llvm::JITSymbol::getAddress() (no debug info); [/Users/sftnight/build/workspace/roottest-pullrequests-build/build/lib/libCling.6.27.01.so] cling::IncrementalJIT::getSymbolAddress(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, bool) (no debug info); [/Users/sftnight/build/workspace/roottest-pullrequests-build/build/lib/libCling.6.27.01.so] cling::IncrementalExecutor::getPointerToGlobalFromJIT(llvm::StringRef) const (no debug info); [/Users/sftnight/build/workspace/roottest-pullrequests-build/build/lib/libCling.6.27.01.so] cling::Interpreter::compileFunction(llvm::StringRef, llvm::StringRef, bool, bool) (no debug info); [/Users/sftnight/build/workspace/roottest-pullrequests-build/build/lib/libCling.6.27.01.so] TCl",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10061:3061,Simpl,SimpleCompiler,3061,https://root.cern,https://github.com/root-project/root/issues/10061,2,['Simpl'],['SimpleCompiler']
Usability,but add a comment to the jitted code in order to obtain a clear error message if; the user tries to use this type in a jitted action/transformation later in the chain.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2558:58,clear,clear,58,https://root.cern,https://github.com/root-project/root/pull/2558,1,['clear'],['clear']
Usability,"by removing invocations to the root-config executable. This executable was invoked twice to check if RDataFrame was available. Such a behaviour causes a severe slowdown, especially on cvmfs. This has been replaced by a simple string comparison. Backport of 4c863d. # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13898:219,simpl,simple,219,https://root.cern,https://github.com/root-project/root/pull/13898,1,['simpl'],['simple']
Usability,"c/PyROOT_basictests.py^--fixcling"" ""-DPRE=/home/sftnight/swunsch/build/bin/root.exe^-b^-q^-l^-e^.L ArgumentPassingCompiled.C+"" ""-DOUT=/home/sftnight/swunsch/build/roottest/python/basic/basic.log"" ""-DCWD=/home/sftnight/swunsch/build/roottest/python/basic"" ""-DDIFFCMD=/home/sftnight/swunsch/python/bin/python3^/home/sftnight/swunsch/root/roottest/scripts/custom_diff.py"" ""-DCHECKOUT=true"" ""-DCHECKERR=true"" ""-DSYS=/home/sftnight/swunsch/build"" ""-DENV=LEGACY_PYROOT=False#ROOTSYS=/home/sftnight/swunsch/build#PATH=/home/sftnight/swunsch/build/bin:/home/sftnight/swunsch/python/bin:/home/sftnight/.local/bin:/home/sftnight/bin:/usr/lib64/ccache:/usr/local/bin:/usr/bin:/usr/local/sbin:/usr/sbin#PYTHONPATH=/home/sftnight/swunsch/build/lib:#LD_LIBRARY_PATH=/home/sftnight/swunsch/build/lib:/home/sftnight/swunsch/python/lib:"" ""-DCOPY=/home/sftnight/swunsch/root/roottest/python/basic/ArgumentPassingCompiled.C^/home/sftnight/swunsch/root/roottest/python/basic/ReturnValues.C^/home/sftnight/swunsch/root/roottest/python/basic/SimpleClass.C^/home/sftnight/swunsch/root/roottest/python/basic/ArgumentPassingInterpreted.C"" ""-P"" ""/home/sftnight/swunsch/build/RootTestDriver.cmake""; 1312: Environment variables: ; 1312: ROOT_HIST=0; 1312: Test timeout computed to be: 300; 1312: Info in <TUnixSystem::ACLiC>: creating shared library /home/sftnight/swunsch/build/roottest/python/basic/./ArgumentPassingCompiled_C.so; 1312: ; 1312: -- TEST COMMAND -- ; 1312: cd /home/sftnight/swunsch/build/roottest/python/basic; 1312: /usr/bin/timeout -s USR2 270s /home/sftnight/swunsch/python/bin/python3 /home/sftnight/swunsch/root/roottest/python/basic/PyROOT_basictests.py --fixcling; 1312: -- BEGIN TEST OUTPUT --; 1312: INTERNALERROR> Traceback (most recent call last):; 1312: INTERNALERROR> File ""/home/sftnight/swunsch/root/roottest/python/pytest/_pytest/main.py"", line 77, in wrap_session; 1312: INTERNALERROR> config.do_configure(); 1312: INTERNALERROR> File ""/home/sftnight/swunsch/root/roottest/python/pytest/_pytes",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6597:1671,Simpl,SimpleClass,1671,https://root.cern,https://github.com/root-project/root/issues/6597,1,['Simpl'],['SimpleClass']
Usability,"c:38; #2 0x00007f2dab05051b in do_system (line=<optimized out>) at ../sysdeps/posix/system.c:172; #3 0x00007f2dabac274b in TUnixSystem::StackTrace() () from /home/user/Builds/root_build/lib/libCore.so; #4 0x00007f2dabac7624 in TUnixSystem::DispatchSignals(ESignals) () from /home/user/Builds/root_build/lib/libCore.so; #5 <signal handler called>; #6 0x00007f2da746e068 in llvm::PHINode::getIncomingValueForBlock(llvm::BasicBlock const*) const () from /home/user/Builds/root_build/lib/libCling.so; #7 0x00007f2da82a91e8 in llvm::TryToSimplifyUncondBranchFromEmptyBlock(llvm::BasicBlock*, llvm::DomTreeUpdater*) () from /home/user/Builds/root_build/lib/libCling.so; #8 0x00007f2da83255f9 in llvm::simplifyCFG(llvm::BasicBlock*, llvm::TargetTransformInfo const&, llvm::DomTreeUpdater*, llvm::SimplifyCFGOptions const&, llvm::ArrayRef<llvm::WeakVH>) () from /home/user/Builds/root_build/lib/libCling.so; #9 0x00007f2da7e3dac6 in iterativelySimplifyCFG(llvm::Function&, llvm::TargetTransformInfo const&, llvm::DomTreeUpdater*, llvm::SimplifyCFGOptions const&) () from /home/user/Builds/root_build/lib/libCling.so; #10 0x00007f2da7e62d63 in simplifyFunctionCFGImpl(llvm::Function&, llvm::TargetTransformInfo const&, llvm::DominatorTree*, llvm::SimplifyCFGOptions const&) () from /home/user/Builds/root_build/lib/libCling.so; #11 0x00007f2da87a6698 in llvm::FPPassManager::runOnFunction(llvm::Function&) () from /home/user/Builds/root_build/lib/libCling.so; #12 0x00007f2da87a699e in llvm::legacy::FunctionPassManagerImpl::run(llvm::Function&) () from /home/user/Builds/root_build/lib/libCling.so; #13 0x00007f2da625bdb7 in cling::Interpreter::executeTransaction(cling::Transaction&) () from /home/user/Builds/root_build/lib/libCling.so; #14 0x00007f2da62a2d7a in cling::IncrementalParser::commitTransaction(llvm::PointerIntPair<cling::Transaction*, 2u, cling::IncrementalParser::EParseResult, llvm::PointerLikeTypeTraits<cling::Transaction*>, llvm::PointerIntPairInfo<cling::Transaction*, 2u, llvm::PointerL",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14037:2683,Simpl,SimplifyCFGOptions,2683,https://root.cern,https://github.com/root-project/root/issues/14037,1,['Simpl'],['SimplifyCFGOptions']
Usability,"call zeroext i1 %9(%class.TSystem* %5, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str, i64 0, i64 0), i32 zeroext 0); %11 = zext i1 %10 to i64; tail call void @_ZN5cling7runtime8internal15setValueNoAllocEPvS2_S2_cy(i8* %2, i8* %0, i8* nonnull inttoptr (i64 283832976 to i8*), i8 signext 1, i64 %11); ret void; }. declare void @_ZN5cling7runtime8internal15setValueNoAllocEPvS2_S2_cy(i8*, i8*, i8*, i8 signext, i64) local_unnamed_addr #1. declare i8* @cling_runtime_internal_throwIfInvalidPointer(i8*, i8*, i8*) local_unnamed_addr #1. ; Function Attrs: nounwind; declare void @llvm.stackprotector(i8*, i8**) #2. attributes #0 = { ""correctly-rounded-divide-sqrt-fp-math""=""false"" ""disable-tail-calls""=""false"" ""less-precise-fpmad""=""false"" ""min-legal-vector-width""=""0"" ""no-frame-pointer-elim""=""false"" ""no-infs-fp-math""=""false"" ""no-jump-tables""=""false"" ""no-nans-fp-math""=""false"" ""no-signed-zeros-fp-math""=""false"" ""no-trapping-math""=""false"" ""stack-protector-buffer-size""=""8"" ""target-cpu""=""ppc64le"" ""target-features""=""+altivec,+bpermd,+crypto,+direct-move,+extdiv,+htm,+power8-vector,+vsx,-power9-vector,-qpx"" ""unsafe-fp-math""=""false"" ""use-soft-float""=""false"" }; attributes #1 = { ""correctly-rounded-divide-sqrt-fp-math""=""false"" ""disable-tail-calls""=""false"" ""less-precise-fpmad""=""false"" ""no-frame-pointer-elim""=""false"" ""no-infs-fp-math""=""false"" ""no-nans-fp-math""=""false"" ""no-signed-zeros-fp-math""=""false"" ""no-trapping-math""=""false"" ""stack-protector-buffer-size""=""8"" ""target-cpu""=""ppc64le"" ""target-features""=""+altivec,+bpermd,+crypto,+direct-move,+extdiv,+htm,+power8-vector,+vsx,-power9-vector,-qpx"" ""unsafe-fp-math""=""false"" ""use-soft-float""=""false"" }; attributes #2 = { nounwind }. !llvm.module.flags = !{!0}; !llvm.ident = !{!1}. !0 = !{i32 1, !""wchar_size"", i32 4}; !1 = !{!""clang version 9.0.1 ""}; !2 = !{!3, !3, i64 0}; !3 = !{!""any pointer"", !4, i64 0}; !4 = !{!""omnipotent char"", !5, i64 0}; !5 = !{!""Simple C++ TBAA""}; !6 = !{!7, !7, i64 0}; !7 = !{!""vtable pointer"", !5, i64 0}; $5 = void; ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8072#issuecomment-981977924:79790,Simpl,Simple,79790,https://root.cern,https://github.com/root-project/root/issues/8072#issuecomment-981977924,1,['Simpl'],['Simple']
Usability,"cc: @devajithvs, that might also simplify your migration efforts a little..",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15398#issuecomment-2089926061:33,simpl,simplify,33,https://root.cern,https://github.com/root-project/root/pull/15398#issuecomment-2089926061,2,['simpl'],['simplify']
Usability,"cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->; Dear ROOT developers, . since, I believe, introduction of ROOT v6, after one redirects /dev/stdout to a file, by typing, for example, ; "".> a.txt"", one can no longer see what he is typing on the command line - the typed characters are saved ; to a.txt, but are not duplicated on the screen. . Moreover, pressing the up-arrow key brings to the screen usual escape characters (as shown in the example below - ; ""^[[A"" corresponds to me pressing up-arrow) and a user has to remember the contents of the command stack till he finally ; types "".>"" and gets visibility of the command prompt back. -- many thanks for taking time and looking into it, Pasha. ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->; The desired (a'la ROOT 5) behavior is that after the redirection, the output of the compiled code is redirected ; to the specified file, everything coming from /usr/stdin is also sent to that file, but also duplicated on the screen, ; so the command line is fully visible and editable at any time. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->; <pre>; murat@mu2e01:/data/murat/mu2e_dev>root.exe; ------------------------------------------------------------------; | Welcome to ROOT 6.22/06 https://root.cern |; | (c) 1995-2020, The ROOT Team; conception: R. Brun, F. Rademakers |; | Built for linuxx8664gcc on Nov 27 2020, 15:14:08 |; | From tags/v6-22-06@v6-22-06 |; | Try '.help', '.demo', '.license', '.credi",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7626:1139,clear,clear,1139,https://root.cern,https://github.com/root-project/root/issues/7626,1,['clear'],['clear']
Usability,cfitsio seems to be installed on the machine building the ref guide. Therefore it should be fine.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3112#issuecomment-444893572:62,guid,guide,62,https://root.cern,https://github.com/root-project/root/pull/3112#issuecomment-444893572,2,['guid'],['guide']
Usability,ch/root-jenkins/job/root-pullrequests-build/174396/console).; ### Errors:; - [2023-05-11T12:52:41.022Z] FAILED: core/CMakeFiles/G__Core.dir/G__Core.cxx.o ; - [2023-05-11T12:52:41.023Z] /Users/sftnight/build/workspace/root-pullrequests-build/build/core/G__Core.cxx:11318:52: error: no type named 'TVirtualRWMutex' in the global namespace; did you mean simply 'TVirtualRWMutex'? ; - [2023-05-11T12:52:41.023Z] /Users/sftnight/build/workspace/root-pullrequests-build/build/core/G__Core.cxx:11324:52: error: no type named 'TVirtualRWMutex' in the global namespace; did you mean simply 'TVirtualRWMutex'? ; - [2023-05-11T12:52:41.023Z] /Users/sftnight/build/workspace/root-pullrequests-build/build/core/G__Core.cxx:11330:53: error: no type named 'TVirtualRWMutex' in the global namespace; did you mean simply 'TVirtualRWMutex'? ; - [2023-05-11T12:52:41.023Z] /Users/sftnight/build/workspace/root-pullrequests-build/build/core/G__Core.cxx:11337:107: error: no type named 'TVirtualRWMutex' in the global namespace; did you mean simply 'TVirtualRWMutex'? ; - [2023-05-11T12:52:41.023Z] /Users/sftnight/build/workspace/root-pullrequests-build/build/core/G__Core.cxx:11355:52: error: no type named 'TReadLockGuard' in the global namespace; did you mean simply 'TReadLockGuard'? ; - [2023-05-11T12:52:41.023Z] /Users/sftnight/build/workspace/root-pullrequests-build/build/core/G__Core.cxx:11361:52: error: no type named 'TReadLockGuard' in the global namespace; did you mean simply 'TReadLockGuard'? ; - [2023-05-11T12:52:41.023Z] /Users/sftnight/build/workspace/root-pullrequests-build/build/core/G__Core.cxx:11367:53: error: no type named 'TReadLockGuard' in the global namespace; did you mean simply 'TReadLockGuard'? ; - [2023-05-11T12:52:41.023Z] /Users/sftnight/build/workspace/root-pullrequests-build/build/core/G__Core.cxx:11374:107: error: no type named 'TReadLockGuard' in the global namespace; did you mean simply 'TReadLockGuard'? ; - [2023-05-11T12:52:41.023Z] /Users/sftnight/build/workspace/root-p,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11027#issuecomment-1543945512:1195,simpl,simply,1195,https://root.cern,https://github.com/root-project/root/pull/11027#issuecomment-1543945512,2,['simpl'],['simply']
Usability,"chment in addition to anything else; that might help us fixing this issue.; ===========================================================; #6 0x00007f2da746e068 in llvm::PHINode::getIncomingValueForBlock(llvm::BasicBlock const*) const () from /home/user/Builds/root_build/lib/libCling.so; #7 0x00007f2da82a91e8 in llvm::TryToSimplifyUncondBranchFromEmptyBlock(llvm::BasicBlock*, llvm::DomTreeUpdater*) () from /home/user/Builds/root_build/lib/libCling.so; #8 0x00007f2da83255f9 in llvm::simplifyCFG(llvm::BasicBlock*, llvm::TargetTransformInfo const&, llvm::DomTreeUpdater*, llvm::SimplifyCFGOptions const&, llvm::ArrayRef<llvm::WeakVH>) () from /home/user/Builds/root_build/lib/libCling.so; #9 0x00007f2da7e3dac6 in iterativelySimplifyCFG(llvm::Function&, llvm::TargetTransformInfo const&, llvm::DomTreeUpdater*, llvm::SimplifyCFGOptions const&) () from /home/user/Builds/root_build/lib/libCling.so; #10 0x00007f2da7e62d63 in simplifyFunctionCFGImpl(llvm::Function&, llvm::TargetTransformInfo const&, llvm::DominatorTree*, llvm::SimplifyCFGOptions const&) () from /home/user/Builds/root_build/lib/libCling.so; #11 0x00007f2da87a6698 in llvm::FPPassManager::runOnFunction(llvm::Function&) () from /home/user/Builds/root_build/lib/libCling.so; #12 0x00007f2da87a699e in llvm::legacy::FunctionPassManagerImpl::run(llvm::Function&) () from /home/user/Builds/root_build/lib/libCling.so; #13 0x00007f2da625bdb7 in cling::Interpreter::executeTransaction(cling::Transaction&) () from /home/user/Builds/root_build/lib/libCling.so; #14 0x00007f2da62a2d7a in cling::IncrementalParser::commitTransaction(llvm::PointerIntPair<cling::Transaction*, 2u, cling::IncrementalParser::EParseResult, llvm::PointerLikeTypeTraits<cling::Transaction*>, llvm::PointerIntPairInfo<cling::Transaction*, 2u, llvm::PointerLikeTypeTraits<cling::Transaction*> > >&, bool) () from /home/user/Builds/root_build/lib/libCling.so; #15 0x00007f2da62ae449 in cling::MetaSema::actOnLCommand(llvm::StringRef, cling::Transaction**) () from /hom",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14037:6438,simpl,simplifyFunctionCFGImpl,6438,https://root.cern,https://github.com/root-project/root/issues/14037,2,"['Simpl', 'simpl']","['SimplifyCFGOptions', 'simplifyFunctionCFGImpl']"
Usability,"civetweb server creates pre-coinfigured number of threads and this number cannot be change once server running. Each active websocket consumes one thread, where all communication handling is performed. ; To avoid situation that simple http requests fails just while websockets blocked all threads number of; websocket connection will be limited by 90% of configured threads. Issue warning message from `TCivetweb.cxx` when websocket connection refused because of threads number like:; ```; Error in <TCivetweb::WebSocketHandler>: Only 2 threads are available, reject connection request for win3. Increase WebGui.HttpThreads parameter in rootrc, now it is 7; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13542:228,simpl,simple,228,https://root.cern,https://github.com/root-project/root/pull/13542,1,['simpl'],['simple']
Usability,"class TVirtualMonitoringReader public:TNamed //ABC for Reading Monitoring Information; (C++ compiled) class TObjectSpy public:TObject //Spy object pointer for deletion; (C++ compiled) class TObjectRefSpy public:TObject //Spy object reference for deletion; (C++ compiled) class TMethod public:TFunction //Dictionary for a class member function (method); (C++ compiled) class TQObject //Base class for object communication mechanism; (C++ compiled) class TFunction public:TDictionary //Dictionary for global function; (C++ compiled) class TPluginManager public:TObject //Manager for plugin handlers; (C++ compiled) class TPluginHandler public:TObject //Handler for plugin libraries; (C++ compiled) class TTask public:TNamed //Base class for tasks; (C++ compiled) class TQCommand public:TList public:TQObject //encapsulates the information for undo/redo a single action.; (C++ compiled) class TQUndoManager public:TQCommand //recorder of operations for undo and redo; (C++ compiled) class TSysEvtHandler public:TObject public:TQObject //ABC for handling system events; (C++ compiled) struct SysInfo_t //System information - OS, CPU, RAM.; (C++ compiled) struct CpuInfo_t //CPU load information.; (C++ compiled) struct MemInfo_t //Memory utilization information.; (C++ compiled) class TVirtualPad public:TObject public:TAttLine public:TAttFill public:TAttPad public:TQObject //Abstract base class for Pads and Canvases; (C++ compiled) class TPMERegexp protected:TPRegexp //Wrapper for Perl-like regular expression matching.; (C++ compiled) class TStringToken public:TString //String tokenizer using PCRE for finding next tokens.; (C++ compiled) class TClassGenerator public:TObject //interface for TClass generators; (C++ compiled) class TROOT public:TDirectory //Top level (or root) structure for all classes; (C++ compiled) class TVirtualStreamerInfo public:TNamed //Abstract Interface describing Streamer information for one class; (C++ compiled) class TStreamerElement public:TNamed //Base class for o",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10191#issuecomment-1084824531:2918,undo,undo,2918,https://root.cern,https://github.com/root-project/root/issues/10191#issuecomment-1084824531,2,['undo'],['undo']
Usability,"cling startup scripts are different from rootlogon.C and rootrc .; rootrc is a config file while .clingrc is a regular cling script. cling startup scripts are executed also in invocation of standalone cling binary (not from root interpreter). Question:; 1. Renaming `.cling_profile` and `.clingrc` with suffix `.C` ?; 2. Rename `.clingrc` to something else so that `.clingrc` can be reserved for cling config file in the future (if any)?; Making it a config file instead of a cling script aligns with rootrc but not with bashrc, zshrc.; 3. Drop `.clingrc` for now and keep `.cling_profile` only ? If a cling script can easily tell if it is in interactive mode then keeping only 1 script makes sense. Otherwise it is better to keep both to align with bash and other interpreter inspired by bash design. By easily telling I mean a macro like `CLING_INTERACTIVE` or something simple that does not access `gCling`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11262#issuecomment-1229254493:873,simpl,simple,873,https://root.cern,https://github.com/root-project/root/pull/11262#issuecomment-1229254493,2,['simpl'],['simple']
Usability,"clude <TROOT.h>; #include <TTreeReader.h>; #include <TTreeReaderArray.h>. void workload(TTreeReader &r) {; TTreeReaderArray<double> ra(r, ""truthCaloPt"");; while (r.Next()); ra.GetSize();; }. int main() {; ROOT::EnableImplicitMT(2);; ROOT::TTreeProcessorMT mt({""f1.root"", ""f2.root"", ""f3.root"", ""f4.root"", ""f5.root""}, ""t"");; mt.Process(workload);; }; ```. With these files: [files.zip](https://github.com/root-project/root/files/8451196/files.zip). The problem seems to be at the level of TGenCollectionProxy: multiple threads end up sharing the same TGenCollectionProxy objects, which is not thread safe (e.g. because of https://github.com/root-project/root/blob/bce5777b8f479212babb7a8af5485d9a6bbd251e/io/io/src/TEmulatedCollectionProxy.cxx#L84-L85). In principle, however, as we use different TChains/TTreeReaders in each thread, they should also access different TGenCollectionProxy instances. Example backtraces at the point of crash (this is one of several failure modes, but it's the one where the problem is clear -- both threads, at frame 0, are accessing the same TGenCollectionProxy instance):. ```; >>> thread apply all bt 10. Thread 2 (Thread 0x7fffdc0e2640 (LWP 312745) ""repro_ttreeproc""):; #0 0x00007ffff767d973 in TGenCollectionProxy::PopProxy (this=0x7fffd4016090) at ../io/io/src/TGenCollectionProxy.cxx:1333; #1 0x00007ffff7d57a15 in TVirtualCollectionProxy::TPushPop::~TPushPop (this=0x7fffdc0dad20, __in_chrg=<optimized out>) at ../core/cont/inc/TVirtualCollectionProxy.h:65; #2 0x00007ffff76274b1 in TEmulatedCollectionProxy::Destructor (this=0x7fffd4016090, p=0x7fffd40156e0, dtorOnly=false) at ../io/io/src/TEmulatedCollectionProxy.cxx:87; #3 0x00007ffff7d4f8c2 in TClass::Destructor (this=0x7fffd40152c0, obj=0x7fffd40156e0, dtorOnly=false) at ../core/meta/src/TClass.cxx:5417; #4 0x00007ffff676afdb in TBranchElement::ReleaseObject (this=0x7fffd4017590) at ../tree/tree/src/TBranchElement.cxx:4743; #5 0x00007ffff676b265 in TBranchElement::ResetAddress (this=0x7fffd4017590) ",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10357:1125,clear,clear,1125,https://root.cern,https://github.com/root-project/root/issues/10357,1,['clear'],['clear']
Usability,"cmssdt.cern.ch/SDT/jenkins-artifacts/pull-request-integration/PR-7b6638/42123/runTheMatrix-results/140.063_RunZeroBias2022D/step3_RunZeroBias2022D.log; ```#--------------------------------------------------------------------------; cling JIT session error: In graph cling-module-926-jitted-objectbuffer, section .text._ZNK4reco10HitPattern23numberOfLostTrackerHitsENS0_11HitCategoryE: relocation target ""_ZN4reco10HitPattern16missingHitFilterEt"" at address 0x4000968500f0 is out of range of Page21 fixup at 0x4001a7270114 (_ZNK4reco10HitPattern23numberOfLostTrackerHitsENS0_11HitCategoryE, 0x4001a727010c + 0x8); ----- Begin Fatal Exception 11-Oct-2024 15:08:51 CEST-----------------------; An exception of category 'FatalRootError' occurred while; [0] Processing Event run: 357735 lumi: 53 event: 87840020 stream: 0; [1] Running path 'dqmoffline_1_step'; [2] Prefetching for module NanoAODDQM/'nanoDQM'; [3] Prefetching for module SimplePATTauFlatTableProducer/'boostedTauTable'; [4] Prefetching for module PATObjectCrossLinker/'linkedObjects'; [5] Prefetching for module PATMuonRefSelector/'finalMuons'; [6] Prefetching for module PATMuonUserDataEmbedder/'slimmedMuonsWithUserData'; [7] Calling method for module EvaluateMuonMVAID/'muonMVAID'; Additional Info:; [a] Fatal Root Error: @SUB=TClingCallFunc::make_wrapper; Failed to compile; ==== SOURCE BEGIN ====; #pragma clang diagnostic push; #pragma clang diagnostic ignored ""-Wformat-security""; __attribute__((used)) __attribute__((annotate(""__cling__ptrcheck(off)""))); extern ""C"" void __cf_365(void* obj, int nargs, void** args, void* ret); {; if (ret) {; new (ret) (double) (((const reco::TrackBase*)obj)->validFraction());; return;; }; else {; (void)(((const reco::TrackBase*)obj)->validFraction());; return;; }; }; #pragma clang diagnostic pop; ==== SOURCE END ====. ----- End Fatal Exception -------------------------------------------------; Another exception was caught while trying to clean up files after the primary fatal exception. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16401#issuecomment-2407514028:1027,Simpl,SimplePATTauFlatTableProducer,1027,https://root.cern,https://github.com/root-project/root/pull/16401#issuecomment-2407514028,1,['Simpl'],['SimplePATTauFlatTableProducer']
Usability,comparing contains was more complex. I went to the simplest way for this simple test,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15897#issuecomment-2182075929:51,simpl,simplest,51,https://root.cern,https://github.com/root-project/root/pull/15897#issuecomment-2182075929,4,['simpl'],"['simple', 'simplest']"
Usability,"conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:325:9: error: no member named 'isnan' in the global namespace; using ::isnan;; ~~^; /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:326:9: error: no member named 'isnormal' in the global namespace; using ::isnormal;; ~~^; /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:327:9: error: no member named 'isgreater' in the global namespace; using ::isgreater;; ~~^; /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:328:9: error: no member named 'isgreaterequal' in the global namespace; using ::isgreaterequal;; ...; Error in <ACLiC>: Executing '/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/rootcling -v0 ""--lib-list-prefix=/Users/chenxu/tmp/aa1_cpp_ACLiC_map"" -f ""/Users/chenxu/tmp/aa1_cpp_ACLiC_dict.cxx"" -I$ROOTSYS/include -I""/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/etc/"" -I""/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/etc//cling"" -I""/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/include/"" -I""/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/include"" -I""/usr/local/include/"" -I""/opt/X11/include/"" -I""/Users/chenxu/software/install2/include/healpix_cxx/"" -D__ACLIC__ -I/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include ""/Users/chenxu/tmp/./aa1.cpp"" ""/Users/chenxu/tmp/aa1_cpp_ACLiC_linkdef.h""' failed!; ```. ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->. ### Setup. 1. ROOT version 6.24.00; 2. OS X 10.15; 3. conda install. ### Additional context; It's a bug for Mac for a long time even in other softwares.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8418:3068,clear,clear,3068,https://root.cern,https://github.com/root-project/root/issues/8418,1,['clear'],['clear']
Usability,"ct/root/issues?q=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->; Nested `RooSimultaneous` are flattened into a single `RooSimultaneous` with a `RooSuperCategory` as index. ; When plotting a `RooSimultaneous`, if the index category is derived its servers are searched inside the `ProjWData` set, and if not found the plot becomes a slice in the categories.; However, the only server of a `RooSuperCategory` is the internal `RooMultiCategory`, so in case of a nested `RooSimultaneous` the plot is always a slice.; This is basically https://github.com/root-project/root/issues/12020, except during plots and not generation. The solution is probably the same. ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->; Categories are summed over and not sliced. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->; ```python; import ROOT. x = ROOT.RooRealVar('x', '', 0, 1). c1 = ROOT.RooCategory('c1', '', {'c11': 0, 'c12': 1}); c2 = ROOT.RooCategory('c2', '', {'c21': 0}). u = ROOT.RooUniform('u', '', x); g = ROOT.RooGaussian('g', '', x, ROOT.RooFit.RooConst(0.5), ROOT.RooFit.RooConst(0.1)); s1 = ROOT.RooSimultaneous('s1', '', {'c11': u, 'c12': g}, c1); s2 = ROOT.RooSimultaneous('s2', '', {'c21': s1}, c2). proto = ROOT.RooDataSet('proto', '', {c1, c2}); c1.setIndex(0); for i in range(50):; proto.add({c1, c2}); c1.setIndex(1); for i in range(50):; proto.add({c1, c2}); ; frame = x.frame(); s2.plotOn(frame, ProjWData = ({c1, c2}",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12652:1080,clear,clear,1080,https://root.cern,https://github.com/root-project/root/issues/12652,1,['clear'],['clear']
Usability,"cts/rootcode/rntuple-importer-set-low-float-precision/repro_setfieldmodifier.py"", line 50, in main; importer.SetFieldModifier(low_precision_modifier); TypeError: void ROOT::Experimental::RNTupleImporter::SetFieldModifier(ROOT::Experimental::RNTupleImporter::FieldModifier_t modifier) =>; TypeError: could not convert argument 1; ```. The signature is [here](https://github.com/root-project/root/blob/54daf70308495bc4ec0151d38ca80f941b13875a/tree/ntupleutil/v7/inc/ROOT/RNTupleImporter.hxx#L269) with FieldModifier_t being defined within the class [here](https://github.com/root-project/root/blob/54daf70308495bc4ec0151d38ca80f941b13875a/tree/ntupleutil/v7/inc/ROOT/RNTupleImporter.hxx#L106). It looks like the automatic conversion from Python function pointer to std::function is not working in this case, note that `RFieldBase` should be `ROOT::Experimental::RFieldBase` but the fully-qualified name is stripped down to the class name only. I am sure it could be simplified, but for now see the attached reproducer which shows the error with RNTupleImporter. ### Reproducer. ```python; import ROOT; import numpy; import os. class DatasetContext:. input_file = ""input_ttree.root""; dataset_name = ""Events""; output_file = ""output_rntuple.root"". def __init__(self):; with ROOT.TFile(self.input_file, ""RECREATE"") as f:; main_tree = ROOT.TTree(self.dataset_name, self.dataset_name); x = numpy.array([0], dtype=numpy.double); y = numpy.array([0], dtype=numpy.double); main_tree.Branch(""x"", x, ""x/D""); main_tree.Branch(""y"", y, ""y/D""). x[0] = 11.; y[0] = 22.; main_tree.Fill(); x[0] = 33.; y[0] = 44.; main_tree.Fill(); x[0] = 55.; y[0] = 66.; main_tree.Fill(). main_tree.Write(). def __enter__(self):; return self. def __exit__(self, *_):; os.remove(self.input_file). def low_precision_modifier(field: ROOT.Experimental.RFieldBase) -> None:; if field.GetFieldName() == ""x"":; field.SetColumnRepresentatives(; [[ROOT.Experimental.EColumnType.kReal16]]). def main() -> None:; with DatasetContext() as dataset:;",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/16613:1478,simpl,simplified,1478,https://root.cern,https://github.com/root-project/root/issues/16613,1,['simpl'],['simplified']
Usability,"curls default behaviour is to not follow HTTP redirects, resulting in some of the tutorials not functioning as users attempt to operate on HTML error pages rather than valid ROOT files. A specific example prior to this commit would be the URL for ClassificationKeras.py. Since it's impossible to know in advance which URL's might end up having redirects in the future, I've simply added '-L' to every invocation of CURL (including in a few tests) which should prevent any issues in the future and otherwise work exactly the same for files which don't have redirects today. (curl behaviour tested on Ubuntu 20.04)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7725:374,simpl,simply,374,https://root.cern,https://github.com/root-project/root/pull/7725,1,['simpl'],['simply']
Usability,"d also for the interface your preference for an API similar to the current TGraphAsymmError. The reason I really don't want to use std::vector here is the streaming of the class. I know that there are ways to stream STL containers, but I don't know how they really work and I refuse to make the functionality of my code rely on something I don't understand.; Furthermore, using ROOT objects provides the advantage that the streaming of the storage class is fully handled by the class itself and therefore there is no need to think about the correct way to stream it. I'm also not 100% sure whether STL containers can be streamed by an automatically built streamer but ROOT classes can be streamed by them for sure.; Last but not least I hold the opinion that ROOT classes should use other ROOT classes anywhere possible, cause we, the programmers, can always change ROOT classes if we need to, but we are not able to change C++ classes. > Thank you for explaining the meaning of SetDimensionEY, I think the name is not super clear, I would maybe just call it SetEY.; > One comment on the passed array, I think the pointers should be passed as cont , since they will not be modified. I fully agree on these points. > One other comment I have , I will not have a method to Set the error dimension. I think it will be better instead a AddError method that will increment by one the dimension and add all the point errors. This I think it will be more useful. This point I don't fully understand. To me it sounds like you propose to add a function like this:; ```; void TGraphMultiErrors::AddError(const Double_t *eyL = 0, const Double_t *eyH = 0); {; SetNErrorDimensions(fNErrorDimensions + 1);; if (eyL && eyH); SetDimensionEY(fNErrorDimensions - 1, eyL, eyH);; }; ```; This would definitly be an useful addition, but I would keep the SetNErrorDimensions function, because otherwise there would be no way to reduce the amount of error dimensions which could be problematic when you want to store the obj",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3452#issuecomment-558178093:1178,clear,clear,1178,https://root.cern,https://github.com/root-project/root/pull/3452#issuecomment-558178093,2,['clear'],['clear']
Usability,"d from /home/razorr/Softwares/Installed/HEP/Root/build/include/Rtypes.h:195:; /home/razorr/Softwares/Installed/HEP/Root/build/etc/cling/std.modulemap:442:12: error: header 'bits/utility.h' not found; header ""bits/utility.h""; ^; /usr/lib/gcc/x86_64-pc-linux-gnu/11.2.0/../../../../include/c++/11.2.0/bits/ostream_insert.h:37:10: note: submodule of top-level module 'std' implicitly imported here; #include <bits/exception_defines.h>; ^; fatal error: too many errors emitted, stopping now [-ferror-limit=]; Error: Error loading the default rootcling header files.; make[2]: *** [core/CMakeFiles/G__Core.dir/build.make:474: core/G__Core.cxx] Error 1; make[1]: *** [CMakeFiles/Makefile2:24008: core/CMakeFiles/G__Core.dir/all] Error 2; make[1]: *** Waiting for unfinished jobs....; [ 75%] Building CXX object core/metacling/src/CMakeFiles/MetaCling.dir/TClingValue.cxx.o; [ 75%] Built target MetaCling; make: *** [Makefile:156: all] Error 2. ```. </details>. ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->; Root builds without any errors. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->; 1. `mkdir -p HEP/root`; 2. `cd HEP/root`; 3. `mkdir build install`; 4. `git clone --depth=1 https://github.com/root-project/root gitclone`; 5. `cd build`; 6. `cmake -DCMAKE_INSTALL_PREFIX=../install ../gitclone`; 7. `cmake --build . --target install -- -j4`. ### Setup; <!--; 1. ROOT version; 8. Operating system; 9. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->. ### Additional context; <!--; Add any other context about the problem here.; -->; 1. `gcc -v`; ```sh; Using built-in specs.; COLLECT_GCC=gcc; COLLECT_LTO_WRAPPER=/usr/lib/gcc/x86_64-pc-linux-gnu/11.2.0/lto-wrapper; Target",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10528:29463,clear,clear,29463,https://root.cern,https://github.com/root-project/root/issues/10528,1,['clear'],['clear']
Usability,"d on the input pdf,; redirecting the parameters of the pdf to the RooRealVars in the dataset.; This is not reversed, leaving the pdf in a corrupt state when the; dataset gets deleted. This can happen in particular if the SPlots object; created an owning clone of the dataset, attaches the pdf, and then goes; out of scope. This commit suggests to not attach the pdf to the dataset, as it is not; necessary. When looping over the dataset and evaluating the pdf later,; the pdf variables get synced with the dataset variables anyway. This was; done via `RooStats::SetParameters`, which is just a wrapper around; `RooAbsCollection::assign()`. I suggest to use `assign()` directly to make; more explicit to the reader what happens. It was verified that SPlot still works correctly, by looking at the output of; the `roostats/rs301_splot.C` tutorial, which is unaffected by this PR. Closes Jira issue [ROOT-8018](https://sft.its.cern.ch/jira/browse/ROOT-8018). A simpler reproducer of the problem based on the notebook in the Jira; issue is this one:. ```Python; import ROOT. bdt = ROOT.RooRealVar(""BDT"", ""some awesome BDT"", 0.0, 1.0); mass = ROOT.RooRealVar(""mass"", ""invariant mass"", 5100.0, 5300, ""MeV/c^{2}""). sigyield = ROOT.RooRealVar(""sigyield"", ""signal yield"", 100, 0, 100000); bkgyield = ROOT.RooRealVar(""bkgyield"", ""background yield"", 900, 0, 100000). bmassPDF = ROOT.RooGaussian(; ""bmass"",; ""B mass shape"",; mass,; ROOT.RooFit.RooConst(5200.0),; ROOT.RooFit.RooConst(20.0),; ); bkgmPDF = ROOT.RooExponential(; ""bkgmass"", ""bkg mass shape"", mass, ROOT.RooFit.RooConst(-1.0 / 200.0); ); combmPDF = ROOT.RooAddPdf(; ""fullmasspdf"",; ""full mass pdf"",; ROOT.RooArgList(bmassPDF, bkgmPDF),; ROOT.RooArgList(sigyield, bkgyield),; ). toydata = combmPDF.generate(ROOT.RooArgSet(bdt, mass), 10000); ROOT.SetOwnership(toydata, True). set1 = ROOT.RooArgList(sigyield, bkgyield); set2 = ROOT.RooArgList(). def make_splot(toydata):; smalldata = toydata.reduce(ROOT.RooFit.Cut(""BDT>0.0"")); ROOT.SetOwnership(small",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10811:1006,simpl,simpler,1006,https://root.cern,https://github.com/root-project/root/pull/10811,1,['simpl'],['simpler']
Usability,"d/141353/console).; ### Errors:; - [2022-04-02T22:06:39.010Z] /home/sftnight/build/workspace/root-pullrequests-build/build/tree/dataframe/test/module.modulemap:3:33: error: cannot emit module dataframe_splitcoll_arrayview: size must be explicitly specified for missing header file ""TwoFloats.h"" ; - [2022-04-02T22:06:39.010Z] /home/sftnight/build/workspace/root-pullrequests-build/build/tree/dataframe/test/module.modulemap:3:33: error: cannot emit module dataframe_splitcoll_arrayview: size must be explicitly specified for missing header file ""TwoFloats.h"" ; - [2022-04-02T22:08:03.499Z] /home/sftnight/build/workspace/root-pullrequests-build/build/tree/dataframe/test/module.modulemap:10:37: error: cannot emit module dataframe_simple: size must be explicitly specified for missing header file ""MaxSlotHelper.h"" ; - [2022-04-02T22:08:03.499Z] /home/sftnight/build/workspace/root-pullrequests-build/build/tree/dataframe/test/module.modulemap:11:36: error: cannot emit module dataframe_simple: size must be explicitly specified for missing header file ""SimpleFiller.h"" ; - [2022-04-02T22:08:03.499Z] /home/sftnight/build/workspace/root-pullrequests-build/build/tree/dataframe/test/module.modulemap:11:36: error: cannot emit module dataframe_simple: size must be explicitly specified for missing header file ""SimpleFiller.h"" ; - [2022-04-02T22:08:03.499Z] /home/sftnight/build/workspace/root-pullrequests-build/build/tree/dataframe/test/module.modulemap:10:37: error: cannot emit module dataframe_simple: size must be explicitly specified for missing header file ""MaxSlotHelper.h"" . ### Warnings:; - [2022-04-02T22:04:44.206Z] /home/sftnight/build/workspace/root-pullrequests-build/root/interpreter/cling/lib/Interpreter/IncrementalJIT.cpp:186:21: warning: moving a local object in a return statement prevents copy elision [-Wpessimizing-move] ; - [2022-04-02T22:06:05.513Z] Warning in &lt;CheckModuleValid&gt;: warning: Couldn't find in the following specified headers in the module Core: ; - [2022-0",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10294#issuecomment-1086732485:1284,Simpl,SimpleFiller,1284,https://root.cern,https://github.com/root-project/root/pull/10294#issuecomment-1086732485,1,['Simpl'],['SimpleFiller']
Usability,"d::MemoryManager> >::getSymbolMaterializer(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)::{lambda()#1}>::_M_invoke(std::_Any_data const&) (std_function.h:283); ==92602== by 0x11884A77: std::function<llvm::Expected<unsigned long> ()>::operator()() const (std_function.h:687); ==92602== by 0x11882BAB: llvm::JITSymbol::getAddress() (JITSymbol.h:297); ==92602== by 0x118B14FB: llvm::orc::LazyEmittingLayer<llvm::orc::LegacyIRCompileLayer<cling::IncrementalJIT::RemovableObjectLinkingLayer, llvm::orc::SimpleCompiler> >::EmissionDeferredModule::find(llvm::StringRef, bool, llvm::orc::LegacyIRCompileLayer<cling::IncrementalJIT::RemovableObjectLinkingLayer, llvm::orc::SimpleCompiler>&)::{lambda()#1}::operator()() const (LazyEmittingLayer.h:68); ==92602== by 0x118BD5E7: std::_Function_handler<llvm::Expected<unsigned long> (), llvm::orc::LazyEmittingLayer<llvm::orc::LegacyIRCompileLayer<cling::IncrementalJIT::RemovableObjectLinkingLayer, llvm::orc::SimpleCompiler> >::EmissionDeferredModule::find(llvm::StringRef, bool, llvm::orc::LegacyIRCompileLayer<cling::IncrementalJIT::RemovableObjectLinkingLayer, llvm::orc::SimpleCompiler>&)::{lambda()#1}>::_M_invoke(std::_Any_data const&) (std_function.h:283); ==92602== by 0x11884A77: std::function<llvm::Expected<unsigned long> ()>::operator()() const (std_function.h:687); ==92602== by 0x11882BAB: llvm::JITSymbol::getAddress() (JITSymbol.h:297); ==92602== by 0x11883A8B: cling::IncrementalJIT::getSymbolAddress(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool) (IncrementalJIT.h:191); ==92602== by 0x1188809F: cling::IncrementalExecutor::ExecutionResult cling::IncrementalExecutor::jitInitOrWrapper<void (*)(void*)>(llvm::StringRef, void (*&)(void*)) const (IncrementalExecutor.h:287); ==92602== by 0x1188109F: cling::IncrementalExecutor::executeWrapper(llvm::StringRef, cling::Value*) const (IncrementalExecutor.cpp:377); ==92602== by 0x116B01DB: cling::Interpreter::RunFunc",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9297#issuecomment-979895686:38938,Simpl,SimpleCompiler,38938,https://root.cern,https://github.com/root-project/root/issues/9297#issuecomment-979895686,2,['Simpl'],['SimpleCompiler']
Usability,"d::MemoryManager> >::getSymbolMaterializer(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)::{lambda()#1}>::_M_invoke(std::_Any_data const&) (std_function.h:283); ==92602== by 0x11884A77: std::function<llvm::Expected<unsigned long> ()>::operator()() const (std_function.h:687); ==92602== by 0x11882BAB: llvm::JITSymbol::getAddress() (JITSymbol.h:297); ==92602== by 0x118B14FB: llvm::orc::LazyEmittingLayer<llvm::orc::LegacyIRCompileLayer<cling::IncrementalJIT::RemovableObjectLinkingLayer, llvm::orc::SimpleCompiler> >::EmissionDeferredModule::find(llvm::StringRef, bool, llvm::orc::LegacyIRCompileLayer<cling::IncrementalJIT::RemovableObjectLinkingLayer, llvm::orc::SimpleCompiler>&)::{lambda()#1}::operator()() const (LazyEmittingLayer.h:68); ==92602== by 0x118BD5E7: std::_Function_handler<llvm::Expected<unsigned long> (), llvm::orc::LazyEmittingLayer<llvm::orc::LegacyIRCompileLayer<cling::IncrementalJIT::RemovableObjectLinkingLayer, llvm::orc::SimpleCompiler> >::EmissionDeferredModule::find(llvm::StringRef, bool, llvm::orc::LegacyIRCompileLayer<cling::IncrementalJIT::RemovableObjectLinkingLayer, llvm::orc::SimpleCompiler>&)::{lambda()#1}>::_M_invoke(std::_Any_data const&) (std_function.h:283); ==92602== by 0x11884A77: std::function<llvm::Expected<unsigned long> ()>::operator()() const (std_function.h:687); ==92602== by 0x11882BAB: llvm::JITSymbol::getAddress() (JITSymbol.h:297); ==92602== by 0x118A0293: cling::IncrementalJIT::IncrementalJIT(cling::IncrementalExecutor&, std::unique_ptr<llvm::TargetMachine, std::default_delete<llvm::TargetMachine> >, std::function<void (unsigned long, std::unique_ptr<llvm::Module, std::default_delete<llvm::Module> >)>)::{lambda(std::shared_ptr<llvm::orc::AsynchronousSymbolQuery>, llvm::DenseSet<llvm::orc::SymbolStringPtr, llvm::DenseMapInfo<llvm::orc::SymbolStringPtr> >)#2}::operator()(std::shared_ptr<llvm::orc::AsynchronousSymbolQuery>, llvm::DenseSet<llvm::orc::SymbolStringPtr, llvm::DenseMapInfo<llvm::orc::",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9297#issuecomment-979895686:31958,Simpl,SimpleCompiler,31958,https://root.cern,https://github.com/root-project/root/issues/9297#issuecomment-979895686,2,['Simpl'],['SimpleCompiler']
Usability,"de ""Minuit2/MnMigrad.h""; #include ""Minuit2/MnSimplex.h""; #include ""Minuit2/FCNBase.h"". #include <fenv.h>. using namespace ROOT::Minuit2;. class TestChi2 : public ROOT::Minuit2::FCNBase; {; public:; TestChi2() {}; ~TestChi2() {}; virtual double Up() const {return 1.0;}; virtual double operator () (const std::vector<double> &a) const; {; return std::pow(a.at(0)-0.11,2)+std::pow(a.at(1)-0.5,2)/100.0;; }; };. int main(int argc, char ** argv); {; feenableexcept(FE_DIVBYZERO | FE_INVALID | FE_OVERFLOW);; MnUserParameters fit_parameters;; fit_parameters.Add(""A"",0.118,0.01,0,1);; fit_parameters.Add(""B"",0.5,0.1,0.1,100.0);; fit_parameters.Fix(""A"");; fit_parameters.Fix(""B"");; TestChi2* FULL= new TestChi2();; MnUserParameters temp_fit_parameters=fit_parameters;; MnMigrad migrad0(*FULL, temp_fit_parameters); ; FunctionMinimum min_migrad0 = migrad0(); // OK; MnSimplex simplex0(*FULL, temp_fit_parameters);; FunctionMinimum min_simplex0 = simplex0(); // FPE; exit(0);; }; ```; ```; g++ simplex.cc -o simplex.exe $(root-config --glibs --cflags) -lMinuit2; ./simplex.exe; ```; results in . ```; The lines below might hint at the cause of the crash.; You may get help by asking at the ROOT forum http://root.cern.ch/forum; Only if you are really convinced it is a bug in ROOT then please submit a; report at http://root.cern.ch/bugs Please post the ENTIRE stack trace; from above as an attachment in addition to anything else; that might help us fixing this issue.; ===========================================================; #5 ROOT::Minuit2::SimplexBuilder::Minimum (this=0x7ffcf9555c58, mfcn=..., seed=..., maxfcn=200, minedm=0.10000000000000001) at /usr/src/debug/root-6.22.02/math/minuit2/src/SimplexBuilder.cxx:48; #6 0x00007f045c93e1cd in ROOT::Minuit2::ModularFunctionMinimizer::Minimize (this=<optimized out>, mfcn=..., gc=..., seed=..., strategy=..., maxfcn=200, toler=<optimized out>) at /usr/src/debug/root-6.22.02/math/minuit2/src/ModularFunctionMinimizer.cxx:166; #7 0x00007f045c93c737 in ",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6775:1265,simpl,simplex,1265,https://root.cern,https://github.com/root-project/root/issues/6775,1,['simpl'],['simplex']
Usability,"de/string.h:150:15 in libc.string.h hidden strxfrm 'size_t (char *__restrict, const char *__restrict, size_t) throw()' extern; | |-ParmVarDecl 0xb5ea258 <col:24, col:41> col:41 in libc.string.h hidden __dest 'char *__restrict'; | |-ParmVarDecl 0xb5ea2e0 <line:151:10, col:33> col:33 in libc.string.h hidden __src 'const char *__restrict'; | |-ParmVarDecl 0xb5ea360 <col:40, col:47> col:47 in libc.string.h hidden __n 'size_t':'unsigned long'; | |-NonNullAttr 0xb5ea5d0 </usr/include/sys/cdefs.h:285:44, /usr/include/string.h:152:27> 2; | `-BuiltinAttr 0xb5ea6e0 <<invalid sloc>> Implicit 788; |-CXXRecordDecl 0xb5ea710 </usr/include/xlocale.h:27:9, line:39:1> line:27:16 in libc.xlocale.h hidden struct __locale_struct definition; | |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal; | | |-DefaultConstructor exists trivial needs_implicit; | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param; | | |-MoveConstructor exists simple trivial needs_implicit; | | |-CopyAssignment simple trivial has_const_param needs_implicit implicit_has_const_param; | | |-MoveAssignment exists simple trivial needs_implicit; | | `-Destructor simple irrelevant trivial needs_implicit; | |-CXXRecordDecl 0xb5ea850 <col:9, col:16> col:16 in libc.xlocale.h hidden implicit struct __locale_struct; | |-CXXRecordDecl 0xb5ea908 parent 0xb55c1c8 <line:30:3, col:10> col:10 in libc.xlocale.h hidden struct __locale_data; | |-FieldDecl 0xb5ebd48 <col:3, col:37> col:25 in libc.xlocale.h hidden __locales 'struct __locale_data *[13]'; | |-FieldDecl 0xb5ebdf8 <line:33:3, col:29> col:29 in libc.xlocale.h hidden __ctype_b 'const unsigned short *'; | |-FieldDecl 0xb5ebe68 <line:34:3, col:14> col:14 in libc.xlocale.h hidden __ctype_tolower 'const int *'; | |-FieldDecl 0xb5ebed8 <line:35:3, col:14> col:14 in libc.xlocale.h hidden __ctype_toupper 'const int *'; | `-FieldDecl 0xb5ebfd8 <line:38:3, col:25> col:15 in libc.xlocale.h hidden __na",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10861#issuecomment-1377827282:11624,simpl,simple,11624,https://root.cern,https://github.com/root-project/root/issues/10861#issuecomment-1377827282,10,['simpl'],['simple']
Usability,"dear @guitargeek . It seems that my project has one more problem with new cppyy.; While I am trying to prepare ""easy"" reproducer, I need to ask you some advice/recipe.; The issue is with ""python""-RooAbsPdf. I need to have a RooAbdPdf class with the major; method implemented in python. Previously I have such solution, but with new cppyy; I've got two problems - first, and the drawing phase, there are error messages ; that servers are not redirected. ButI have ""correct"" fit results and the plot. ; And, the main problem is that at the end of the script the program stalls -; likely in ROOT finalization. ; It is not easy to make short, simple & easy reproducer, but I'll try to do it asap.; But, might be it is a known issue? ; What is the ""correct/recommended"" way for implementation of such ""hybrid"" pythonic RooAbdPdf?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/15085#issuecomment-2029462023:639,simpl,simple,639,https://root.cern,https://github.com/root-project/root/issues/15085#issuecomment-2029462023,2,['simpl'],['simple']
Usability,"declares its dependency on VDT in a very silly way that does not make any sense to me...). Even though it clearly ""publicly"" depends on those headers. https://github.com/root-project/root/blob/master/math/vecops/inc/ROOT/RVec.hxx#L54. ### Expected behavior. When using the exported target `ROOT::ROOTVecOps`, I would expect to be able to use `RVec.hxx` just by linking my own target against `ROOT::ROOTVecOps`. Not having to care about the ""internal"" dependency of the ROOT code on VDT myself. To fix, the following should happen:; - VDT should be used in the ROOT CMake configuration through an imported target, not through `${VDT_INCLUDE_DIRS}` and `${VDT_LIBRARIES}`. (Since these make relocation very hard.); - Once `ROOTVecOps` depends on a library like `VDT::vdt`, `ROOTConfig.cmake.in` will need to include. ```cmake; find_dependency(VDT); ```. somewhere around here: https://github.com/root-project/root/blob/master/cmake/scripts/ROOTConfig.cmake.in#L88-L99. In such a setup, as long as `builtin_vdt` is ""correctly"" installed alongside ROOT, the configuration should start becoming correct under all circumstances. ### To Reproduce. Don't really have a reproducer. But a CMake project like:. ```cmake; cmake_minimum_required( VERSION 3.10 ); project( VecOpsTest ). find_package( ROOT REQUIRED ). add_executable( VecOpsTest VecOpsText.cpp ); target_link_libraries( VecOpsTest PRIVATE ROOT::ROOTVecOps ); ```. , with a simple. ```c++; #include <ROOT/RVec.hxx>. int main() { return 0; }; ```. (as `VecOpsTest.cpp`) should be able to produce an error. As long as ROOT and VDT headers are not in the same location. Which is usually the case unfortunately... ### Setup. This is primarily an issue with ""LCG builds"" of ROOT. Where currently we have to manually take care of linking our code explicitly against VDT, even if we don't use those headers directly ourselves. ### Additional context. The report was triggered by an ATLAS analyser complaining about this issue, with their own analysis code.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11797:1666,simpl,simple,1666,https://root.cern,https://github.com/root-project/root/issues/11797,1,['simpl'],['simple']
Usability,"dk -> MacOSX15.0.sdk; drwxr-xr-x 7 root wheel 224 Apr 30 18:16 MacOSX14.5.sdk; lrwxr-xr-x 1 root wheel 14 Sep 16 20:47 MacOSX14.sdk -> MacOSX14.5.sdk; drwxr-xr-x 7 root wheel 224 Aug 21 11:15 MacOSX15.0.sdk; lrwxr-xr-x 1 root wheel 14 Sep 16 20:47 MacOSX15.sdk -> MacOSX15.0.sdk. $ clang++ -x c++ /dev/null -E -v; Apple clang version 16.0.0 (clang-1600.0.26.3); Target: arm64-apple-darwin24.0.0; Thread model: posix; InstalledDir: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin; ignoring nonexistent directory ""/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1""; ""/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/clang"" -cc1 -triple arm64-apple-macosx15.0.0 -Wundef-prefix=TARGET_OS_ -Wdeprecated-objc-isa-usage -Werror=deprecated-objc-isa-usage -Werror=implicit-function-declaration -E -disable-free -clear-ast-before-backend -disable-llvm-verifier -discard-value-names -main-file-name null -mrelocation-model pic -pic-level 2 -mframe-pointer=non-leaf -fno-strict-return -ffp-contract=on -fno-rounding-math -funwind-tables=1 -fobjc-msgsend-selector-stubs -target-sdk-version=15.0 -fvisibility-inlines-hidden-static-local-var -fno-modulemap-allow-subdirectory-search -target-cpu apple-m1 -target-feature +v8.5a -target-feature +aes -target-feature +crc -target-feature +dotprod -target-feature +fp-armv8 -target-feature +fp16fml -target-feature +lse -target-feature +ras -target-feature +rcpc -target-feature +rdm -target-feature +sha2 -target-feature +sha3 -target-feature +neon -target-feature +zcm -target-feature +zcz -target-feature +fullfp16 -target-abi darwinpcs -debugger-tuning=lldb -target-linker-version 1115.7.3 -v -fcoverage-compilation-dir=/Users/stognini -resource-dir /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/clang/16 -isysroot /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16494#issuecomment-2374779123:1370,clear,clear-ast-before-backend,1370,https://root.cern,https://github.com/root-project/root/pull/16494#issuecomment-2374779123,2,['clear'],['clear-ast-before-backend']
Usability,"dk -> MacOSX15.0.sdk; drwxr-xr-x 7 root wheel 224 Sep 25 18:33 MacOSX14.5.sdk; lrwxr-xr-x 1 root wheel 14 Sep 25 18:29 MacOSX14.sdk -> MacOSX14.5.sdk; drwxr-xr-x 7 root wheel 224 Sep 25 18:31 MacOSX15.0.sdk; lrwxr-xr-x 1 root wheel 14 Sep 25 18:29 MacOSX15.sdk -> MacOSX15.0.sdk; + clang++ -x c++ /dev/null -E -v; Apple clang version 16.0.0 (clang-1600.0.26.3); Target: arm64-apple-darwin23.6.0; Thread model: posix; InstalledDir: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin; ignoring nonexistent directory ""/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1""; ""/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/clang"" -cc1 -triple arm64-apple-macosx14.0.0 -Wundef-prefix=TARGET_OS_ -Wdeprecated-objc-isa-usage -Werror=deprecated-objc-isa-usage -Werror=implicit-function-declaration -E -disable-free -clear-ast-before-backend -disable-llvm-verifier -discard-value-names -main-file-name null -mrelocation-model pic -pic-level 2 -mframe-pointer=non-leaf -fno-strict-return -ffp-contract=on -fno-rounding-math -funwind-tables=1 -fobjc-msgsend-selector-stubs -target-sdk-version=15.0 -fvisibility-inlines-hidden-static-local-var -fno-modulemap-allow-subdirectory-search -target-cpu apple-m1 -target-feature +v8.5a -target-feature +aes -target-feature +crc -target-feature +dotprod -target-feature +fp-armv8 -target-feature +fp16fml -target-feature +lse -target-feature +ras -target-feature +rcpc -target-feature +rdm -target-feature +sha2 -target-feature +sha3 -target-feature +neon -target-feature +zcm -target-feature +zcz -target-feature +fullfp16 -target-abi darwinpcs -debugger-tuning=lldb -target-linker-version 1115.7.3 -v -fcoverage-compilation-dir=/Users/pcanal/root_working/builds/master.module -resource-dir /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/clang/16 -isysroot /Applications/Xcode.app/Contents/Developer/Pla",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16494#issuecomment-2377172429:1638,clear,clear-ast-before-backend,1638,https://root.cern,https://github.com/root-project/root/pull/16494#issuecomment-2377172429,2,['clear'],['clear-ast-before-backend']
Usability,"e = self.src_file.Get(tree_name). self.new_file = ROOT.TFile.Open(new_file, ""recreate""); self.new_tree = ROOT.TTree(tree_name, tree_name). # To access branches in 'src_tree' from 'new_tree':; self.new_tree.AddFriend(self.src_tree). # To keep track of new branches and store values:; self.new_branches = {}. def add_branch(self, name, f, value_type=""float""):; self.new_branches[name] = {}; self.new_branches[name][""f""] = f; self.new_branches[name][""name""] = name; self.new_branches[name][""value_type""] = value_type; self.new_branches[name][""value""] = value = ROOT.std.vector(value_type)(); self.new_branches[name][""tbranch""] = self.new_tree.Branch(name, value). def run(self):; nentries = self.src_tree.GetEntries(); for i in range(nentries):; # Get entry and make sure src_tree and new_tree are synced; self.src_tree.GetEntry(i); self.new_tree.GetEntry(i). # Now loop on all the branches that have been added:; for branch_name, branch_dict in self.new_branches.items():; branch_dict[""value""].clear(); # self.new_tree; branch_dict[""f""](self.new_tree); # [branch_dict['value'].push_back(result) for result in branch_dict['f'](self.new_tree)]. # Fill entry with all computed branches; self.new_tree.Fill(). if i % 10000 == 0:; print_memory(i). self.new_tree.Write(); self.new_file.Close(); self.src_file.Close(). file_path = ""_src.root"". file = ROOT.TFile.Open(file_path, ""recreate""); tree = ROOT.TTree(""DDTree"", ""DDTree""). # Branch: value1; value1_value = ROOT.std.vector(""float"")(); value1_branch = tree.Branch(""value1"", value1_value). # Branch: value2; value2_value = ROOT.std.vector(""float"")(); value2_branch = tree.Branch(""value2"", value2_value). value_length = 20; nentries = 100000; for i in range(nentries):; tree.GetEntry(i). value1_value.clear(); [value1_value.push_back(result) for result in np.random.uniform(-999, 999, value_length)]. value2_value.clear(); [value2_value.push_back(result) for result in np.random.uniform(-99, 999, value_length)]. tree.Fill(). file.Write(); file.Close(). tr",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15608:2687,clear,clear,2687,https://root.cern,https://github.com/root-project/root/pull/15608,1,['clear'],['clear']
Usability,"e ROOT plan of work 2024. The backends of RBDT are replaced with a single new backend:; the logic from the FastForest library:; https://github.com/guitargeek/XGBoost-FastForest. The logic in that library was originally taken from the GBRForest in; CMSSW:; https://github.com/cms-sw/cmssw/blob/master/CommonTools/MVAUtils/interface/GBRForestTools.h. The interface remains the same, only that the template parameter; specifying the backend is gone. This change adds support for unbalanced trees. To see the fixed logic, as one run a modified version of the `tmva101_Training.py` tutorial (remember to run `tutorials/tmva/tmva100_DataPreparation.py` first):; ```python; import ROOT; import numpy as np. from tmva100_DataPreparation import variables. def load_data(signal_filename, background_filename):; # Read data from ROOT files; data_sig = ROOT.RDataFrame(""Events"", signal_filename).AsNumpy(); data_bkg = ROOT.RDataFrame(""Events"", background_filename).AsNumpy(). # Convert inputs to format readable by machine learning tools; x_sig = np.vstack([data_sig[var] for var in variables]).T; x_bkg = np.vstack([data_bkg[var] for var in variables]).T; x = np.vstack([x_sig, x_bkg]). # Create labels; num_sig = x_sig.shape[0]; num_bkg = x_bkg.shape[0]; y = np.hstack([np.ones(num_sig), np.zeros(num_bkg)]). # Compute weights balancing both classes; num_all = num_sig + num_bkg; w = np.hstack([np.ones(num_sig) * num_all / num_sig, np.ones(num_bkg) * num_all / num_bkg]). return x, y, w. # Load data; x, y, w = load_data(""train_signal.root"", ""train_background.root""). # Fit xgboost model; from xgboost import XGBClassifier; xbdt = XGBClassifier(max_depth=3, n_estimators=500); xbdt.fit(x, y, sample_weight=w). # Save model in TMVA format; ROOT.TMVA.Experimental.SaveXGBoost(xbdt, ""myBDT"", ""tmva101.root"", num_inputs=x.shape[1]). # Load data; x, y_true, w = load_data(""test_signal.root"", ""test_background.root""). # Load trained model; File = ""tmva101.root"". bdt = ROOT.TMVA.Experimental.RBDT(""myBDT"", File). # M",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15173:1046,learn,learning,1046,https://root.cern,https://github.com/root-project/root/pull/15173,1,['learn'],['learning']
Usability,e Thread: . ### Failing tests:; - [projectroot.test.test_stressmathcore_interpreted](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/154244/testReport/projectroot/test/test_stressmathcore_interpreted/); - [projectroot.roottest.cling.offset.roottest_cling_offset_interpreted](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/154244/testReport/projectroot.roottest.cling/offset/roottest_cling_offset_interpreted/); - [projectroot.roottest.cling.other.roottest_cling_other_execValuePrint](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/154244/testReport/projectroot.roottest.cling/other/roottest_cling_other_execValuePrint/); - [projectroot.roottest.root.meta.dictSelection.roottest_root_meta_dictSelection_execAtlasTest2](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/154244/testReport/projectroot.roottest.root.meta/dictSelection/roottest_root_meta_dictSelection_execAtlasTest2/); - [projectroot.roottest.root.selector.simple.roottest_root_selector_simple_runtestLoadingSelector](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/154244/testReport/projectroot.roottest.root.selector/simple/roottest_root_selector_simple_runtestLoadingSelector/); - [projectroot.roottest.root.tree.selector.roottest_root_tree_selector_make](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/154244/testReport/projectroot.roottest.root.tree/selector/roottest_root_tree_selector_make/); - [projectroot.roottest.root.tree.reader.roottest_root_tree_reader_make](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/154244/testReport/projectroot.roottest.root.tree/reader/roottest_root_tree_reader_make/); - [projectroot.roottest.root.treeformula.stl.roottest_root_treeformula_stl_make](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/154244/testReport/projectroot.roottest.root.treeformula/stl/roottest_root_treeformula_stl_make/),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10294#issuecomment-1245798559:1554,simpl,simple,1554,https://root.cern,https://github.com/root-project/root/pull/10294#issuecomment-1245798559,4,['simpl'],['simple']
Usability,"e are a number of trivial operations that users often want to perform on dataframes that are surprisingly hard to get right, for example adding several `Define`s in a loop or conditionally adding a `Filter` depending on a runtime boolean (both use-cases are challenging in C++, trivial in python). The way I see it, difficulties boil down to the fact that different dataframe nodes have different types (because their types incorporate e.g. the type of the callable passed to a `Filter` and the type of their parent node in the computation graph). In this PR I propose to add a common base class `ROOT::RDF::RNode` to all nodes of the graph (except leaves a.k.a results, which have a completely different interface),; so that users can, for example:; * take any dataframe node by reference in non-template functions as `RNode&`; * `emplace_back` dataframe nodes in ~`std::vector<RNode>`~ `vector<RInterface<RNode>>`; * have non-const pointers to dataframe nodes. and so on. For example, conditionally adding a `Range` do a dataframe now looks like this:. ```c++; auto maybe_ranged = [&df, mustAddRange] { ; return mustAddRange ? ROOT::RDF::RNode(d.Range(1)); : ROOT::RDF::RNode(d); ; }(); ; ```. while before this PR one would have to add fake `Filter(""true"")` filters to normalize the return type of the lambda, involving the interpreter for no reason. Internal `RDataFrame` code is also simplified by the introduction of this common base class.; The only downside I can think of is that if this mechanism is abused users might end up with extra, unnecessary virtual calls in their event loop -- on the other hand, this mechanism should only be used in situations that required either complex template magic or dirty and slow tricks before. Questions:; * can we come up with a better name than `ROOT::RDF::ToCommonNodeType` for the function that upcasts any dataframe object to the same type?; * should this cast only be explicit through an upcasting function call or should we allow implicit casts?",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2182:1393,simpl,simplified,1393,https://root.cern,https://github.com/root-project/root/pull/2182,1,['simpl'],['simplified']
Usability,"e column names.; * The redefined `TClonesArray` can be snapshot correctly. ### To Reproduce; 1. Place two ROOT macros in the same directory:. `gen_tree.C`; ```C++; #include <Rtypes.h>; #include <TFile.h>; #include <TTree.h>; #include <TBranch.h>; #include <TClonesArray.h>; #include <TLorentzVector.h>. #include <string>; #include <cstdio>; #include <cstdlib>; #include <iostream>. Float_t gen_rand() {; 	return rand() / static_cast<Double_t>(RAND_MAX);; }. void gen_tree(const std::string pathFile = ""file_tcatlv.root"") {; 	TFile *tfOut = TFile::Open(pathFile.c_str(), ""RECREATE"");; 	tfOut->cd();; 	TTree *ttOut = new TTree(""Events"", ""Tree of TClonesArrays of TLorentzVectors"");; 	auto *tcaTest = new TClonesArray(""TLorentzVector"", 8);; 	size_t nVar;; 	ttOut->Branch(""TestVar1"", tcaTest);; 	ttOut->Branch(""nTestVar1"", &nVar);; 	constexpr size_t nEntries = 10;; 	for (size_t jEntry = 0; jEntry < nEntries; ++jEntry) {; 		tcaTest->Clear();; 		nVar = rand() % 8;; 		tcaTest->Expand(nVar);; 		std::cerr << ""jEntry: "" << jEntry << ""\tnVar: "" << nVar << ""\tsize: "" << tcaTest->GetSize() << std::endl;; 		for (size_t iVar = 0; iVar < nVar; ++iVar) {; 			const auto &pVar = new((*tcaTest)[iVar]) TLorentzVector(gen_rand(), gen_rand(), gen_rand(), gen_rand());; 			std::fprintf(stderr, ""(%F, %F, %F, %F) "", pVar->Px(), pVar->Py(), pVar->Pz(), pVar->M());; 		}; 		std::cerr << std::endl;; 		ttOut->Fill();; 	}; 	ttOut->Write();; 	tfOut->Close();; }. int main(int argc, char* argv[]) {; 	if (argc > 1) {; 		gen_tree(argv[1]);; 	} else {; 		gen_tree();; 	}; 	return 0;; }; ```. `reproduce.C`; ```C++; #include <Rtypes.h>; #include <TFile.h>; #include <TTree.h>; #include <TBranch.h>; #include <TH1.h>; #include <TLorentzVector.h>; #include <ROOT/RDataFrame.hxx>; #include <Math/Vector4D.h>. #include <vector>; #include <string>. void reproduce(const std::string pathFileIn = ""file_tcatlv.root"", const std::string pathFileOut = ""file_out.root"") {; 	TFile *tfIn = TFile::Open(pathFileIn.c_str());; 	TTree *ttIn = t",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9240:1798,Clear,Clear,1798,https://root.cern,https://github.com/root-project/root/issues/9240,1,['Clear'],['Clear']
Usability,"e description of what the wrong behavior is.; -->. Some classes are imported in the Python session namespace when wildcard import is used, while others aren't:. ```; vpadulan@fedorathinkpad-T550 [~]: python; Python 3.8.7 (default, Jan 20 2021, 00:00:00) ; [GCC 10.2.1 20201125 (Red Hat 10.2.1-9)] on linux; Type ""help"", ""copyright"", ""credits"" or ""license"" for more information.; >>> from ROOT import *; >>> RDataFrame; Traceback (most recent call last):; File ""<stdin>"", line 1, in <module>; NameError: name 'RDataFrame' is not defined; >>> TPyDispatcher; Traceback (most recent call last):; File ""<stdin>"", line 1, in <module>; NameError: name 'TPyDispatcher' is not defined; >>> TGHorizontalFrame; <class cppyy.gbl.TGHorizontalFrame at 0x55f59c990900>; >>> RDF; Traceback (most recent call last):; File ""<stdin>"", line 1, in <module>; NameError: name 'RDF' is not defined; >>> TTree; <class cppyy.gbl.TTree at 0x55f59cac9650>; >>> TTreeReader; <class cppyy.gbl.TTreeReader at 0x55f59ce32910>; >>> ; ```. ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->. We should be able to tell more consistenty which names are available after wildcard import, it is handled [here](https://github.com/root-project/root/blob/34fc1dcd8c12b49349c3e54c033effdb6f6354f0/bindings/pyroot/pythonizations/python/ROOT/_facade.py#L153) . ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->. `from ROOT import *` in a python session. ### Setup; <!--; 1. ROOT version; 2. Operating system; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->. ROOT master@34fc1dc; Fedora 32; built from source. ### Additional context; <!--; Add any other context about the problem here.; -->; This issue stems from #7436",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7669:1444,clear,clear,1444,https://root.cern,https://github.com/root-project/root/issues/7669,1,['clear'],['clear']
Usability,"e of spurious errors:. ```python; from array import array; import ROOT. RDataFrame = ROOT.RDF.Experimental.Distributed.Spark.RDataFrame. tree = ROOT.TTree(""tree"", ""Tree in memory""); x = array(""f"", [0]); tree.Branch(""x"", x, ""x/F""). r = ROOT.TRandomMixMax(). for i in range(100000):; x[0] = r.Gaus(10, 1); tree.Fill(). df = RDataFrame(tree). print(df.Count().GetValue()); ```. The first error is; ```; File ""/home/vpadulan/Programs/rootproject/rootinstall/devrelease/lib/DistRDF/Node.py"", line 717, in get_treename; return first_arg.GetUserInfo().At(0).GetName(); ReferenceError: attempt to access a null-pointer; ```; Since the `get_treename` function calls `GetUserInfo()` which is empty in this case. Changing that line to `return first_arg.GetName()` triggers; ```; File ""/home/vpadulan/Programs/rootproject/rootinstall/devrelease/lib/DistRDF/Backends/Base.py"", line 158, in mapper; for f in current_range.filelist:; TypeError: 'NoneType' object is not iterable; ```; And in this case the name of the tree is correctly retrieved, but the function [build_ranges](https://github.com/root-project/root/blob/bdd8a241d5ce5d2f7d3b5b273a0660d7ed52a517/bindings/experimental/distrdf/python/DistRDF/Node.py#L605) expects the inputfiles to be non-empty, otherwise the ranges will be created as if the constructor called was `RDataFrame(ULong64_t numEntries)` instead. So that's a silent fallback to something completely different from the requested input arguments. ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->. Distributed RDataFrame should raise an exception if the user is trying to process an in-memory-only tree distributedly, similarly to how it's done in TTreeProcessorMT. ### Setup; <!--; 1. ROOT version; 2. Operating system; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->. ROOT master; Fedora 32; Build from source. ### Additional context; <!--; Add any other context about the problem here.; -->",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7788:2112,clear,clear,2112,https://root.cern,https://github.com/root-project/root/issues/7788,1,['clear'],['clear']
Usability,"e times instead of once, even in a single-thread program). Unfortunately I didn't manage to disentangle the issue from RDF. The simplest way to reproduce is to add this patch to ROOT master (47f66c57ca):. ```diff; diff --git a/tree/dataframe/inc/ROOT/RDF/GraphNode.hxx b/tree/dataframe/inc/ROOT/RDF/GraphNode.hxx; index 9548c4adf0..3e39c80f33 100644; --- a/tree/dataframe/inc/ROOT/RDF/GraphNode.hxx; +++ b/tree/dataframe/inc/ROOT/RDF/GraphNode.hxx; @@ -57,6 +57,7 @@ private:; static unsigned int &GetStaticGlobalCounter(); {; static unsigned int sGlobalCounter = 1;; + printf(""static global counter:%u\n"", sGlobalCounter);; return sGlobalCounter;; }. @@ -68,7 +69,11 @@ public:; ////////////////////////////////////////////////////////////////////////////; /// \brief Resets the counter.; /// This is not strictly needed but guarantees that two consecutive request to the graph return the same result.; - static void ClearCounter() { GraphNode::GetStaticGlobalCounter() = 1; }; + static void ClearCounter(); + {; + printf(""setting counter to 1\n"");; + GraphNode::GetStaticGlobalCounter() = 1;; + }. ////////////////////////////////////////////////////////////////////////////; /// \brief Appends a node on the head of the current node; ```. and execute the following code (adapted from Ivan's repro above):. ```cpp; // repro.cpp; #include <ROOT/RDFHelpers.hxx>; #include <ROOT/RDataFrame.hxx>. void repro() {; ROOT::RDataFrame rd1(1);; auto branch1_1 = rd1.Define(""one"", ""1"").Count();; auto branch1_2 = rd1.Define(""two"", ""2"").Count();; ROOT::RDF::SaveGraph(rd1);; }. #ifndef __CLING__; int main() { repro(); }; #endif; ```. Running through the interpreter:. ```; $ root -l -b -q repro.cpp. Processing repro.cpp...; setting counter to 1; static global counter:1; static global counter:1; static global counter:1 // one again!? this counter is always increased; static global counter:2; static global counter:3; static global counter:2 // two again!?; static global counter:4; ```. the output is wrong ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9474#issuecomment-998846312:1060,Clear,ClearCounter,1060,https://root.cern,https://github.com/root-project/root/issues/9474#issuecomment-998846312,2,['Clear'],['ClearCounter']
Usability,"e very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. I have my own project that uses ROOT (and Python); my CMakeList file contains following ilnes ; ```; find_package(ROOT 6 CONFIG REQUIRED ); ...; find_package(Python3 ${PY3VERSION_ROOT} COMPONENTS Interpreter Development NumPy). ```; And it build, works, and everything is fine . To follow up development in ROOT, I regularly rebuild my project using ROOT version from LCG nighlies dev3 build. And starting from Tuesday, August 31 I have a build error - numpy i snot found. ```; -- Could NOT find Python3 (missing: Python3_NumPy_INCLUDE_DIRS NumPy) (found suitable version ""3.9.6"", minimum required is ""3.9.6""); ```. As a result all binaries/libraries in my project are invalid and result in segfaults. . It is not clear if this is ROOT,CMAKE or LCG-nighlies problem. . ### Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->. for ROOT-based project ; cmake does not find NumPy for dev3 LCG nighlies built Staring form August 31, 2021 . ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->. cmake should find NumPy . ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->. 1. lxplus.cern.ch ; 2. source /cvmfs/sft.cern.ch/lcg/views/dev3/Tue/x86_64-centos7-gcc9-opt/setup.sh; 3. any CMAKe project with these two ilnes included ; ```; find_package(ROOT 6 CONFIG REQUIRED ); ...; find_package(Python3 3.6.9 COMPONENTS Interpreter Development NumPy); ```. ### Setup; <!--; 1. ROOT version; 2. Operating system; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->. ### Additional context; <!--; Add any other context about the problem here.; -->",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8942:1368,clear,clear,1368,https://root.cern,https://github.com/root-project/root/issues/8942,1,['clear'],['clear']
Usability,"e, and wanted to share several ideas for improvement. 1\) Remove duplicate links.; In modern Web Development it's appreciated that same content has only one link on the site, and a link is meaningful in itself (see Django guidelines).; For example: from the main page I can see a link to the documentation,; https://root.cern/d/documentation.html; If I delete the last part, I get; https://root.cern/d/; which is a) meaningless b) same as the main page. ; The third link to that same page is ; https://root.cern/d/index.html. Surprisingly, the link; https://root.cern/index.html; has different contents!. Probably there is little surprise that there exists the 2nd version of the site,; https://root.cern.ch/ (with its own index.html, and all these links).; I think there should be one canonical link, and other links should redirect to that. . 2a) https://root.cern/d/documentation.html ; should ideally become just ; https://root.cern/documentation. 2b) or all documentation should be put into one directory with a clearer name, like; https://root.cern/doc/; In that case the manual (and other docs) should also be in that directory, not at; https://root.cern/manual/. 3a) User Guide is located at; https://root.cern/d/guides/users-guide.html; On parent path; https://root.cern/d/guides/; there is an automatic list of guides (which is better than nothing/forbidden), but it would be better if it was not automatic (had the same design as the other site). 3b) the same for; https://root.cern/doc/; (automatic list). 4\) As I understand, the main page for documentation is; https://root.cern.ch/d/documentation.html; There is also; https://root.cern/doc/master/; these two pages should probably be one page. 5\) Rearrange ""Provide your feedback""; I think github issues should go before the Forum in the list of options (if there are really two ways), because one can see closed and open issues (on the Forum I found several complaints about the links, but it's not clear whether they are open or clos",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7282:1061,clear,clearer,1061,https://root.cern,https://github.com/root-project/root/issues/7282,1,['clear'],['clearer']
Usability,"e>	- Compare the interpreter's state with the one; 				 saved in a given file. .stats [name]		- Show stats for internal data structures; 				 'ast' abstract syntax tree stats; 				 'asttree [filter]' abstract syntax tree layout; 				 'decl' dump ast declarations; 				 'undo' show undo stack. .T <filePath> <comment>	- Generate autoload map. .trace <repr> <id>		- Dump trace of requested respresentation; 				 (see .stats arguments for <repr>). .help			- Shows this information (also .?). .q				- Exit the program. ROOT special commands.; ===============================================================================; .L <filename>[flags]: load the given file with optional flags like; + to compile or ++ to force recompile.; Type .? TSystem::CompileMacro for a list of all flags.; .(x|X) <filename>[flags](args) :; same as .L <filename>[flags] and runs then a function; with signature: ret_type filename(args).; .credits : show credits; .demo : launch GUI demo; .help Class::Member : open reference guide for that class member (or .?).; Specifying '::Member' is optional.; .help edit : show line editing shortcuts (or .?); .license : show license; .ls : list contents of current TDirectory; .pwd : show current TDirectory, pad and style; .quit (or .exit) : quit ROOT (long form of .q); .R [user@]host[:dir] [-l user] [-d dbg] [script] :; launch process in a remote host; .qqq : quit ROOT - mandatory; .qqqqq : exit process immediately; .qqqqqqq : abort process; .which [file] : show path of macro file; .![OS_command] : execute OS-specific shell command; .!root -? : print ROOT usage (CLI options); ```. ```; root [1] .? edit. ROOT terminal keyboard shortcuts (GNU-readline style).; ==============================================================================; Arrow_Left : move cursor left [Ctrl+B]; Arrow_Right : move cursor right [Ctrl+F] [Ctrl+G]; Home : move cursor to beginning of line [Ctrl+A]; End : move cursor to end of line [Ctrl+E]; Ctrl+Arrow_Left : jump to previous word [Esc,B] [Al",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10121#issuecomment-1084927674:3244,guid,guide,3244,https://root.cern,https://github.com/root-project/root/pull/10121#issuecomment-1084927674,2,['guid'],['guide']
Usability,"eady more comparable to 6.24. Here the results of `fit-noshapes`:; ## ROOT 6.28. ```txt; FVAL = -1581.9159109118475; Edm = 0.000441898404860980383; Nfcn = 187; Lumi	 = 0.937281	 +/- 0.041571	(limited); Nmu	 = 68079	 +/- 3149.09	(limited); RawRDst	 = 0.0394995	 +/- 0.00466377	(limited); alpha_BFD1	 = -1.56966	 +/- 0.268056	(limited); Info in <Minuit2>: Minuit2Minimizer::Hesse Using max-calls 2000; Info in <Minuit2>: Minuit2Minimizer::Hesse Hesse is valid - matrix is accurate; 0.000441626; Fit ran with status 0; Stat error on R(D*) is 0.004650; EDM at end was 0.000442; RooArgList:: = (Lumi,Nmu,RawRDst,alpha_BFD1); CURRENT NUISANCE PARAMETERS:; 0: Lumi			 = 0.937281 +/- 0.0414063; 1: Nmu			 = 68079 +/- 3136.33; 3: alpha_BFD1			 = -1.56966 +/- 0.267557; ```. ## ROOT 6.24; ```txt; FVAL = -1581.92046482683691; Edm = 1.80973200685341769e-07; Nfcn = 258; Lumi	 = 0.936911	 +/- 0.041654	(limited); Nmu	 = 63811.4	 +/- 402.673	(limited); RawRDst	 = 0.0394923	 +/- 0.00466481	(limited); alpha_BFD1	 = -1.56652	 +/- 0.266527	(limited); Info in <Minuit2>: Minuit2Minimizer::Hesse Using max-calls 2000; Info in <Minuit2>: Minuit2Minimizer::Hesse Hesse is valid - matrix is accurate; 1.8221e-07; Fit ran with status 0; Stat error on R(D*) is 0.004658; EDM at end was 0.000000; RooArgList:: = (Lumi,Nmu,RawRDst,alpha_BFD1); CURRENT NUISANCE PARAMETERS:; 0: Lumi			 = 0.936911 +/- 0.0416284; 1: Nmu			 = 63811.4 +/- 401.335; 3: alpha_BFD1			 = -1.56652 +/- 0.264945; ```. There are still some problems. The produced plots don't look correct, and the `Nmu` parameter has an error that is way off. This is a problem I already see with 6.26, and it is probably related to the reorganization of the HistFactory model RooFit representation:; https://github.com/root-project/root/pull/8167. Indeed, it could be related to the new `RooBinWidthFunction`. I can only continue the investigation next week on Wednesday, if you learn something new in the meantime @yipengsun and @CoffeeIntoScience please let me know!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12729#issuecomment-1527829256:3324,learn,learn,3324,https://root.cern,https://github.com/root-project/root/issues/12729#issuecomment-1527829256,2,['learn'],['learn']
Usability,"ecutable -rdynamic; Module ; Shared -Wl,--no-undefined -Wl,--hash-style=""both"". -- Enabled support for: asimage builtin_afterimage builtin_clang builtin_cling builtin_ftgl builtin_gl2ps builtin_glew builtin_llvm builtin_lz4 builtin_lzma builtin_nlohmannjson builtin_openui5 builtin_pcre builtin_tbb builtin_vdt builtin_xrootd builtin_xxhash builtin_zstd clad dataframe gdml http imt mlp opengl proof pyroot roofit webgui root7 rpath runtime_cxxmodules shared ssl tmva tmva-cpu tmva-pymva spectrum vdt x11 xrootd; -- Configuring done (28.0s); -- Generating done (3.2s); -- Build files have been written to: /home/<user>; ```. I tried to run `cmake --build . --target install` and ended up with. ```; CMake Error: The current CMakeCache.txt directory /home/<user>/root_build/CMakeCache.txt is different than the directory /home/<user> where CMakeCache.txt was created. This may result in binaries being created in the wrong place. If you are not sure, reedit the CMakeCache.txt; CMake Error: Target DependInfo.cmake file not found; Creating directories for 'LZMA'; CMake Error: Error processing file: /home/francisco/LZMA-prefix/tmp/LZMA-mkdirs.cmake; gmake[2]: *** [CMakeFiles/LZMA.dir/build.make:108: LZMA-prefix/src/LZMA-stamp/LZMA-mkdir] Error 1; gmake[1]: *** [CMakeFiles/Makefile2:8564: CMakeFiles/LZMA.dir/all] Error 2; gmake: *** [Makefile:156: all] Error 2; ``` . ### ROOT version. supposedly the most recent ; root_v6.30.02. ### Installation method. build from source. ### Operating system. Ubuntu 23.10 . ### Additional context. I have been using Ubuntu and ROOT for some years now but when I come across this type of problems normally I can work them and come up with a solution. But all this with installations and building from source is quite new to me. When I have done it before I have never came across problems that would put me reading through the outputs.; I am sorry if it definetly not contextualized but please guide me through this issue :); Thank you in advance for your help!",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14479:5745,guid,guide,5745,https://root.cern,https://github.com/root-project/root/issues/14479,1,['guid'],['guide']
Usability,"ed behavior; <!--; A clear and concise description of what you expected to happen.; -->; `$ROOTSYS/tutorial/tmva/TMVACrossValidationApplication.C` provides a nice example of applying weights trained using the code `$ROOTSYS/tutorial/tmva/TMVACrossValidation.C`. It assumes the data file has variables `x`, `y` and `eventID`, and assigns the fold deterministically using split expression `int([eventID])%int([numFolds])`, where in this case `numFolds = 2`. ### Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->; The spectator `eventID` has integer type in training and in application, however TMVA seems to treat all variables as float, and there is problem in converting integer type into float when treating the split expression. My observation is the split expression returns 0 all the time, namely instead of assigning weights from fold `int([eventID])%int([numFolds])` it actually always assigning to fold 0 or `numFolds`. A simple fix is to require `eventID` in the data has type float. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->; Attached files contains a modified `TMVACrossValidationApplication.C` demonstrating the issues. ; It generates a tree with `x`, `y` and `eventID`, and using weights saved in `dataset/weights/` to evaluate BDTG output. ; For each eventID it decides which fold using split expression `int([eventID])%int([numFolds])` for all the cases below:; - each event with a unique eventID as integer (as in official ROOT tutorial);; - all eventID fixed to 1 as integer;; - all eventID fixed to 2 as integer (equivalent as fixed to 0);; - all eventID fixed to 1 as float;; - all eventID fixed to 2 as float (equivalent as fixed to 0);. It can be run with `root -l TMVACrossValidationApplication.C`,",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9115:981,simpl,simple,981,https://root.cern,https://github.com/root-project/root/issues/9115,1,['simpl'],['simple']
Usability,"ee also ""C:/Users/advai/Documents/Coding/HeatSimulation/CMakeFiles/CMakeOutput.log"". C:\Users\advai\Documents\Coding\HeatSimulation>cmake .; -- Selecting Windows SDK version 10.0.18362.0 to target Windows 10.0.19042.; CMake Error at C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake:872 (message):; The imported target ""ROOT::hadd"" references the file. ""C:/Users/advai/ROOT/root/bin/hadd.exe"". but this file does not exist. Possible reasons include:. * The file was deleted, renamed, or moved to another location. * An install or uninstall procedure did not complete successfully. * The installation package was faulty and contained. ""C:/Users/advai/ROOT/root/cmake/ROOTConfig-targets.cmake"". but not all the files it references. Call Stack (most recent call first):; C:/Users/advai/ROOT/root/cmake/ROOTConfig.cmake:98 (include); CMakeLists.txt:7 (find_package). -- Configuring incomplete, errors occurred!; ```; Apparently it cant find hadd.exe . ; ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->; It working?; ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->; This is my CMakeLists.txt:; ```. cmake_minimum_required(VERSION 3.0 FATAL_ERROR); project(event). find_package(ROOT COMPONENTS Graf). include_directories(${CMAKE_CURRENT_SOURCE_DIR}/include); ROOT_GENERATE_DICTIONARY(G__Event Event.h LINKDEF EventLinkDef.h). add_library(Event SHARED Event.cxx G__Event.cxx); target_link_libraries(Event PUBLIC ROOT). add_executable(Main MainEvent.cxx); target_link_libraries(Main Event); ```; I used [this](https://root.cern/manual/integrate_root_into_my_cmake_project/#full-example-event-project) as a reference. ; ### Setup; <!--; 1. ROOT version; 2. Operating system; 3. How you obtained ROOT, such as `dnf instal",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7982:4181,clear,clear,4181,https://root.cern,https://github.com/root-project/root/issues/7982,1,['clear'],['clear']
Usability,"egion of size between 0 and 8191 [-Wformat-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:5203:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:4757:26: warning: ‘char* strncpy(char*, const char*, size_t)’ output may be truncated copying 10 bytes from a string of length 10 [-Wstringop-truncation] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TSystem.cxx:1148:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing 1 byte at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 2147483649] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/proof/proofd/src/XrdProofdProtocol.cxx:527:45: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘class XrdSecEntity’; use assignment or value-initialization instead [-Wclass-memaccess] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1770:96: warning: cast between incompatible function types from ‘TVirtualPad*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1774:94: warning: cast between incompatible function types from ‘TVirtualX*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1776:95: warning: cast between incompatible function types from ‘TDirectory*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] . And 92 more. ### Failing tests:; - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootmv4CheckOutput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36231/testRe",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2453#issuecomment-411309441:1734,clear,clearing,1734,https://root.cern,https://github.com/root-project/root/pull/2453#issuecomment-411309441,2,['clear'],['clearing']
Usability,"election::kNoUsingDecls, load=true); at /opt/rh/gcc-toolset-13/root/usr/lib/gcc/x86_64-redhat-linux/13/../../../../include/c++/13/bits/atomic_base.h:837; #14 0x00007fffea9c2cce in TCling::InvalidateCachedDecl (this=0x555555b29730, Lists=..., D=0x55555b60ad18) at /home/jhahnfel/ROOT/src/core/metacling/src/TCling.cxx:6928; #15 0x00007fffea9a161f in TCling::UpdateListsOnUnloaded (this=0x555555b29730, T=...) at /home/jhahnfel/ROOT/src/core/metacling/src/TCling.cxx:6866; #16 0x00007fffeaacfd7c in cling::MultiplexInterpreterCallbacks::TransactionUnloaded (this=<optimized out>, T=...); at /home/jhahnfel/ROOT/src/interpreter/cling/lib/Interpreter/MultiplexInterpreterCallbacks.h:109; #17 0x00007fffeaacc901 in cling::Interpreter::unload (this=0x555555803e60, T=...) at /home/jhahnfel/ROOT/src/interpreter/cling/lib/Interpreter/Interpreter.cpp:1543; #18 0x00007fffeaad3f97 in cling::IncrementalParser::commitTransaction (this=0x555555c3bee0, PRT=..., ClearDiagClient=true); at /home/jhahnfel/ROOT/src/interpreter/cling/lib/Interpreter/IncrementalParser.cpp:609; #19 0x00007fffeaad4ab1 in cling::IncrementalParser::Compile (this=0x555555c3bee0, input=..., Opts=...) at /home/jhahnfel/ROOT/src/interpreter/cling/lib/Interpreter/IncrementalParser.cpp:849; #20 0x00007fffeaac91af in cling::Interpreter::DeclareInternal (this=this@entry=0x555555803e60,; input=""namespace __cppyy_internal {\nvoid init_tuple_string_unsigned_long_(tuple<string,unsigned long>*& self, const unsigned long& _1 = 0, const string& _0 = string{}) {\n self = new tuple<strin; g,unsigned lo""..., CO=..., T=T@entry=0x0) at /home/jhahnfel/ROOT/src/interpreter/cling/lib/Interpreter/Interpreter.cpp:1369; #21 0x00007fffeaac7599 in cling::Interpreter::declare (this=0x555555803e60,; input=""namespace __cppyy_internal {\nvoid init_tuple_string_unsigned_long_(tuple<string,unsigned long>*& self, const unsigned long& _1 = 0, const string& _0 = string{}) {\n self = new tuple<strin; g,unsigned lo""..., T=0x0) at /home/jhahnfel/ROOT/src/int",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16338#issuecomment-2370776890:3211,Clear,ClearDiagClient,3211,https://root.cern,https://github.com/root-project/root/pull/16338#issuecomment-2370776890,1,['Clear'],['ClearDiagClient']
Usability,"er&lt;HIST&gt;::Exec(unsigned int, const Xs& ...)::&lt;lambda(const auto:2&)&gt; [with auto:2 = std::array&lt;bool, 3&gt;; Xs = {ROOT::VecOps::RVec&lt;int&gt;, ROOT::VecOps::RVec&lt;int&gt;, ROOT::VecOps::RVec&lt;int&gt;}; typename std::enable_if&lt;ROOT::Internal::RDF::Disjunction&lt;ROOT::Internal::RDF::IsDataContainer&lt;ValTypes&gt;...&gt;::value, int&gt;::type &lt;anonymous&gt; = 0; HIST = TProfile2D]’ ; - [2022-08-05T22:57:54.253Z] /mnt/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDF/ActionHelpers.hxx:498:44: error: the value of ‘i’ is not usable in a constant expression ; - [2022-08-05T22:57:54.253Z] /mnt/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDF/ActionHelpers.hxx:512:58: error: no matching function for call to ‘GetNthElement&lt;colidx&gt;(const ROOT::VecOps::RVec&lt;int&gt;&, const ROOT::VecOps::RVec&lt;int&gt;&, const ROOT::VecOps::RVec&lt;int&gt;&)’ ; - [2022-08-05T22:57:54.254Z] /mnt/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDF/ActionHelpers.hxx:507:49: error: call to non-constexpr function ‘ROOT::Internal::RDF::FillHelper&lt;HIST&gt;::Exec(unsigned int, const Xs& ...)::&lt;lambda(const auto:2&)&gt; [with auto:2 = std::array&lt;bool, 2&gt;; Xs = {ROOT::VecOps::RVec&lt;int&gt;, ROOT::VecOps::RVec&lt;int&gt;}; typename std::enable_if&lt;ROOT::Internal::RDF::Disjunction&lt;ROOT::Internal::RDF::IsDataContainer&lt;ValTypes&gt;...&gt;::value, int&gt;::type &lt;anonymous&gt; = 0; HIST = TProfile]’ ; - [2022-08-05T22:57:54.254Z] /mnt/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDF/ActionHelpers.hxx:498:44: error: the value of ‘i’ is not usable in a constant expression ; - [2022-08-05T22:57:54.254Z] /mnt/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDF/ActionHelpers.hxx:512:58: error: no matching function for call to ‘GetNthElement&lt;colidx&gt;(const ROOT::VecOps::RVec&lt;int&gt;&, const ROOT::VecOps::RVec&lt;int&gt;&)’ . And 9 more",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11127#issuecomment-1207076516:3223,usab,usable,3223,https://root.cern,https://github.com/root-project/root/pull/11127#issuecomment-1207076516,2,['usab'],['usable']
Usability,"er::ConcreteLinkedObject<std::shared_ptr<llvm::RuntimeDyld::MemoryManager> >::getSymbolMaterializer(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)::{lambda()#1}::operator()() const (RTDyldObjectLinkingLayer.h:276); ==92602== by 0x118CA4E7: std::_Function_handler<llvm::Expected<unsigned long> (), llvm::orc::LegacyRTDyldObjectLinkingLayer::ConcreteLinkedObject<std::shared_ptr<llvm::RuntimeDyld::MemoryManager> >::getSymbolMaterializer(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)::{lambda()#1}>::_M_invoke(std::_Any_data const&) (std_function.h:283); ==92602== by 0x11884A77: std::function<llvm::Expected<unsigned long> ()>::operator()() const (std_function.h:687); ==92602== by 0x11882BAB: llvm::JITSymbol::getAddress() (JITSymbol.h:297); ==92602== by 0x118B14FB: llvm::orc::LazyEmittingLayer<llvm::orc::LegacyIRCompileLayer<cling::IncrementalJIT::RemovableObjectLinkingLayer, llvm::orc::SimpleCompiler> >::EmissionDeferredModule::find(llvm::StringRef, bool, llvm::orc::LegacyIRCompileLayer<cling::IncrementalJIT::RemovableObjectLinkingLayer, llvm::orc::SimpleCompiler>&)::{lambda()#1}::operator()() const (LazyEmittingLayer.h:68); ==92602== by 0x118BD5E7: std::_Function_handler<llvm::Expected<unsigned long> (), llvm::orc::LazyEmittingLayer<llvm::orc::LegacyIRCompileLayer<cling::IncrementalJIT::RemovableObjectLinkingLayer, llvm::orc::SimpleCompiler> >::EmissionDeferredModule::find(llvm::StringRef, bool, llvm::orc::LegacyIRCompileLayer<cling::IncrementalJIT::RemovableObjectLinkingLayer, llvm::orc::SimpleCompiler>&)::{lambda()#1}>::_M_invoke(std::_Any_data const&) (std_function.h:283); ==92602== by 0x11884A77: std::function<llvm::Expected<unsigned long> ()>::operator()() const (std_function.h:687); ==92602== by 0x11882BAB: llvm::JITSymbol::getAddress() (JITSymbol.h:297); ==92602== by 0x11883A8B: cling::IncrementalJIT::getSymbolAddress(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > c",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9297#issuecomment-979895686:38488,Simpl,SimpleCompiler,38488,https://root.cern,https://github.com/root-project/root/issues/9297#issuecomment-979895686,2,['Simpl'],['SimpleCompiler']
Usability,"er::ConcreteLinkedObject<std::shared_ptr<llvm::RuntimeDyld::MemoryManager> >::getSymbolMaterializer(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)::{lambda()#1}::operator()() const (RTDyldObjectLinkingLayer.h:276); ==92602== by 0x118CA4E7: std::_Function_handler<llvm::Expected<unsigned long> (), llvm::orc::LegacyRTDyldObjectLinkingLayer::ConcreteLinkedObject<std::shared_ptr<llvm::RuntimeDyld::MemoryManager> >::getSymbolMaterializer(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)::{lambda()#1}>::_M_invoke(std::_Any_data const&) (std_function.h:283); ==92602== by 0x11884A77: std::function<llvm::Expected<unsigned long> ()>::operator()() const (std_function.h:687); ==92602== by 0x11882BAB: llvm::JITSymbol::getAddress() (JITSymbol.h:297); ==92602== by 0x118B14FB: llvm::orc::LazyEmittingLayer<llvm::orc::LegacyIRCompileLayer<cling::IncrementalJIT::RemovableObjectLinkingLayer, llvm::orc::SimpleCompiler> >::EmissionDeferredModule::find(llvm::StringRef, bool, llvm::orc::LegacyIRCompileLayer<cling::IncrementalJIT::RemovableObjectLinkingLayer, llvm::orc::SimpleCompiler>&)::{lambda()#1}::operator()() const (LazyEmittingLayer.h:68); ==92602== by 0x118BD5E7: std::_Function_handler<llvm::Expected<unsigned long> (), llvm::orc::LazyEmittingLayer<llvm::orc::LegacyIRCompileLayer<cling::IncrementalJIT::RemovableObjectLinkingLayer, llvm::orc::SimpleCompiler> >::EmissionDeferredModule::find(llvm::StringRef, bool, llvm::orc::LegacyIRCompileLayer<cling::IncrementalJIT::RemovableObjectLinkingLayer, llvm::orc::SimpleCompiler>&)::{lambda()#1}>::_M_invoke(std::_Any_data const&) (std_function.h:283); ==92602== by 0x11884A77: std::function<llvm::Expected<unsigned long> ()>::operator()() const (std_function.h:687); ==92602== by 0x11882BAB: llvm::JITSymbol::getAddress() (JITSymbol.h:297); ==92602== by 0x118A0293: cling::IncrementalJIT::IncrementalJIT(cling::IncrementalExecutor&, std::unique_ptr<llvm::TargetMachine, std::default_dele",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9297#issuecomment-979895686:31508,Simpl,SimpleCompiler,31508,https://root.cern,https://github.com/root-project/root/issues/9297#issuecomment-979895686,2,['Simpl'],['SimpleCompiler']
Usability,"es/mmprivate.h:56,; from /builddir/root-6.24.06/core/clib/src/mmapsup.c:26:; /usr/include/unistd.h:163:5: note: previous declaration of 'getpagesize' was here; 163 | int getpagesize(void);; | ^~~~~~~~~~~; ```. The relevant part of `mmapsup.c` is:; ```c; #if defined(R__LINUX) && !defined(R__GLIBC) && !defined(__CYGWIN__) \; || (defined(__CYGWIN__) && (CYGWIN_VERSION_API_MAJOR > 0 || CYGWIN_VERSION_API_MINOR < 213)); extern size_t getpagesize PARAMS ((void));; #else; extern int getpagesize PARAMS ((void));; #endif; ```. My understanding is that as musl doesn't define `R__GLIBC`, the condition resolves in favor of declaring `getpagesize` return value as `size_t`. However, this conflicts with the declaration present in `unistd.h` (which is included several lines above this), which declares it as `int` (in accordance with the POSIX standard). The same code snippet also causes error during `core/clib/src/mvalloc.c` compilation. It's not entirely clear to me why should `getpagesize` be declared in the first place, as it is declared in the included `unistd.h` file - my guess is for some kind of compatibility, although POSIX dropped it twenty years ago and Cygwin seems to have implemented it at least four years ago, likely more, I am not sure how this works on Windows - let alone as `size_t`. Thus my suggestion is to remove the above code block from both of the mentioned files entirely, which seems to fix the problem for me (at least until the compilation fails on another problem, which I haven't analyzed yet; and I'm still able to compile for glibc too) and my question is: would it break anything crucial (as I mentioned, `getpagesize` has been deprecated for more than twenty years now (at least on UNIX-like systems), so keeping support for some potentially obscure platforms which still expect it with `size_t` return value may not be of high importance (but again, I do not know what the situation is on Windows))? And if so, what is the right way to solve this?. Here's a [lin",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9253:1304,clear,clear,1304,https://root.cern,https://github.com/root-project/root/issues/9253,1,['clear'],['clear']
Usability,"essor::readInputFromFile(llvm::StringRef, cling::Value*, unsigned long, bool) () from /home/sakib/root/lib/libCling.so; #26 0x00007ff62b940b4e in TCling::ProcessLine(char const*, TInterpreter::EErrorCode*) () from /home/sakib/root/lib/libCling.so; #27 0x00007ff62b9417da in TCling::ProcessLineSynch(char const*, TInterpreter::EErrorCode*) () from /home/sakib/root/lib/libCling.so; #28 0x00007ff6302ed70a in TApplication::ExecuteFile(char const*, int*, bool) () from /home/sakib/root/lib/libCore.so.6.24; #29 0x00007ff6302ee443 in TApplication::ProcessLine(char const*, bool, int*) () from /home/sakib/root/lib/libCore.so.6.24; #30 0x00007ff630666166 in TRint::ProcessLineNr(char const*, char const*, int*) () from /home/sakib/root/lib/libRint.so.6.24; #31 0x00007ff63066656a in TRint::HandleTermInput() () from /home/sakib/root/lib/libRint.so.6.24; #32 0x00007ff630441b62 in TUnixSystem::CheckDescriptors() () from /home/sakib/root/lib/libCore.so.6.24; #33 0x00007ff630443828 in TUnixSystem::DispatchOneEvent(bool) () from /home/sakib/root/lib/libCore.so.6.24; #34 0x00007ff630353669 in TSystem::Run() () from /home/sakib/root/lib/libCore.so.6.24; #35 0x00007ff6302eb443 in TApplication::Run(bool) () from /home/sakib/root/lib/libCore.so.6.24; #36 0x00007ff630667c0e in TRint::Run(bool) () from /home/sakib/root/lib/libRint.so.6.24; #37 0x000055b5825ea180 in main (); ===========================================================; ```. ### Describe the bug; tried to execute a code, crashes. ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->. ### To Reproduce; Steps to reproduce the behavior:; 1. ; ```; {; g = new TGraph();; ; for(i=0; i<12; i++) {; g->SetPoint(i, i, i*i + 4*i + 7);; }; ; g->SetMarkerStyle(49);; ; g->Draw(""ALP"");; }; ```; 2. .x graph2.C. ### Setup; 1. ROOT version 6.24.00; 2. Operating system ubuntu 20.04; 3. How you obtained ROOT-> binary download . ### Additional context; <!--; Add any other context about the problem here.; -->",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8367:5682,clear,clear,5682,https://root.cern,https://github.com/root-project/root/issues/8367,1,['clear'],['clear']
Usability,est.cling.template.roottest_cling_template_runtemplatefriend](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146659/testReport/projectroot.roottest.cling/template/roottest_cling_template_runtemplatefriend/); - [projectroot.roottest.root.aclic.misc.roottest_root_aclic_misc_assertROOT7027](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146659/testReport/projectroot.roottest.root.aclic/misc/roottest_root_aclic_misc_assertROOT7027/); - [projectroot.roottest.root.aclic.load.roottest_root_aclic_load_reload](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146659/testReport/projectroot.roottest.root.aclic/load/roottest_root_aclic_load_reload/); - [projectroot.roottest.root.dataframe.roottest_root_dataframe_missingBranches](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146659/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_missingBranches/); - [projectroot.roottest.python.cpp.roottest_python_cpp_advanced](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146659/testReport/projectroot.roottest.python/cpp/roottest_python_cpp_advanced/); - [projectroot.roottest.root.io.interface.roottest_root_io_interface_make](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146659/testReport/projectroot.roottest.root.io/interface/roottest_root_io_interface_make/); - [projectroot.roottest.root.meta.callfunc.roottest_root_meta_callfunc_assertUnload_auto](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146659/testReport/projectroot.roottest.root.meta/callfunc/roottest_root_meta_callfunc_assertUnload_auto/); - [projectroot.roottest.root.selector.simple.roottest_root_selector_simple_runtestLoadingSelector](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146659/testReport/projectroot.roottest.root.selector/simple/roottest_root_selector_simple_runtestLoadingSelector/). And 5 more,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10294#issuecomment-1144980019:2778,simpl,simple,2778,https://root.cern,https://github.com/root-project/root/pull/10294#issuecomment-1144980019,4,['simpl'],['simple']
Usability,est.cling.template.roottest_cling_template_runtemplatefriend](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146675/testReport/projectroot.roottest.cling/template/roottest_cling_template_runtemplatefriend/); - [projectroot.roottest.root.aclic.misc.roottest_root_aclic_misc_assertROOT7027](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146675/testReport/projectroot.roottest.root.aclic/misc/roottest_root_aclic_misc_assertROOT7027/); - [projectroot.roottest.root.aclic.load.roottest_root_aclic_load_reload](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146675/testReport/projectroot.roottest.root.aclic/load/roottest_root_aclic_load_reload/); - [projectroot.roottest.root.dataframe.roottest_root_dataframe_missingBranches](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146675/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_missingBranches/); - [projectroot.roottest.python.cpp.roottest_python_cpp_advanced](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146675/testReport/projectroot.roottest.python/cpp/roottest_python_cpp_advanced/); - [projectroot.roottest.root.io.interface.roottest_root_io_interface_make](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146675/testReport/projectroot.roottest.root.io/interface/roottest_root_io_interface_make/); - [projectroot.roottest.root.meta.callfunc.roottest_root_meta_callfunc_assertUnload_auto](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146675/testReport/projectroot.roottest.root.meta/callfunc/roottest_root_meta_callfunc_assertUnload_auto/); - [projectroot.roottest.root.selector.simple.roottest_root_selector_simple_runtestLoadingSelector](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146675/testReport/projectroot.roottest.root.selector/simple/roottest_root_selector_simple_runtestLoadingSelector/). And 5 more,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10294#issuecomment-1145207749:2778,simpl,simple,2778,https://root.cern,https://github.com/root-project/root/pull/10294#issuecomment-1145207749,4,['simpl'],['simple']
Usability,"et before being evaluated by the RooFit driver. This step was implemented in a rather hacky way, because it only became; clear gradually how important this step is, as many changes need to be; done to the computation graph before it can be used by the BatchMode. It started by ""unrolling"" the normalization integrals such that they are; separate nodes that can be evaluated by the RooFit driver. Then, it also covered the transformation of every RooProdPdf into a new; object that exposes the full intenal computation graph that is cached by; the RooProdPdf for a given norm set. These two changes where done in separate passes through the compute; graph, and there was also a third pass to figure out dependencies and; normalization sets in the graph, and some more recursive passes the; attach new servers. This all became very compilcated and hard to debug, as the separate; passes through the graph interfered with each other as well. With all the lessons learned, this commit suggests a new more general; way to compile a model for a given normalization set. It is now done in a **single recursive pass through the graph** via the; newly-proposed function; `RooAbsArg::compileForNormSet(RooAbsArg const& normSet, context)`. It's job is to make a clone of the RooAbsArg where the normalization set; is fixed to `normSet`, given some context. Now, the details of unrolling the integrals of a RooAbsPdf and replacing; the RooProdPdfs can be implemented in the overload for this function of; the specific class. There is even an overload for the RooSimultaneous; now, which contains all the logic of making the RooSimultaenous ready; for the NLL creation. There are still some rough edges in the new interface, but it is already; a big step forward that will make debugging much easier because it's now; much less compilcated to understand how the computation graph is set up; by the BatchMode. Also, this makes the speed of NLL creation with the BatchMode on par; with the speed of `createNLL()` wit",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12079:1053,learn,learned,1053,https://root.cern,https://github.com/root-project/root/pull/12079,1,['learn'],['learned']
Usability,"even as an implementation detail perhaps of a higher level more usable ; interface. I fully get the need to have a working win alpha for may, ; support all efforts to arrive there  and have 2 worries:; - The amount of ifdefs; - The (non) sturdiness of string manipulations. On 08.02.2018 11:33, Bertrand Bellenot wrote:; >; > Well, right, we could use gSystem->UnixPathname()...; >; > —; > You are receiving this because you commented.; > Reply to this email directly, view it on GitHub ; > <https://github.com/root-project/root/pull/1609#issuecomment-364070384>, ; > or mute the thread ; > <https://github.com/notifications/unsubscribe-auth/AHfJPvBOt1y6pFQxmNRkG5_698E9UAFRks5tSs2NgaJpZM4R-HWn>.; >",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1609#issuecomment-364071818:64,usab,usable,64,https://root.cern,https://github.com/root-project/root/pull/1609#issuecomment-364071818,2,['usab'],['usable']
Usability,"ew TestChi2();; MnUserParameters temp_fit_parameters=fit_parameters;; MnMigrad migrad0(*FULL, temp_fit_parameters); ; FunctionMinimum min_migrad0 = migrad0(); // OK; MnSimplex simplex0(*FULL, temp_fit_parameters);; FunctionMinimum min_simplex0 = simplex0(); // FPE; exit(0);; }; ```; ```; g++ simplex.cc -o simplex.exe $(root-config --glibs --cflags) -lMinuit2; ./simplex.exe; ```; results in . ```; The lines below might hint at the cause of the crash.; You may get help by asking at the ROOT forum http://root.cern.ch/forum; Only if you are really convinced it is a bug in ROOT then please submit a; report at http://root.cern.ch/bugs Please post the ENTIRE stack trace; from above as an attachment in addition to anything else; that might help us fixing this issue.; ===========================================================; #5 ROOT::Minuit2::SimplexBuilder::Minimum (this=0x7ffcf9555c58, mfcn=..., seed=..., maxfcn=200, minedm=0.10000000000000001) at /usr/src/debug/root-6.22.02/math/minuit2/src/SimplexBuilder.cxx:48; #6 0x00007f045c93e1cd in ROOT::Minuit2::ModularFunctionMinimizer::Minimize (this=<optimized out>, mfcn=..., gc=..., seed=..., strategy=..., maxfcn=200, toler=<optimized out>) at /usr/src/debug/root-6.22.02/math/minuit2/src/ModularFunctionMinimizer.cxx:166; #7 0x00007f045c93c737 in ROOT::Minuit2::ModularFunctionMinimizer::Minimize (this=0x7ffcf9555c48, fcn=..., st=..., strategy=..., maxfcn=200, toler=0.10000000000000001) at /usr/src/debug/root-6.22.02/math/minuit2/src/ModularFunctionMinimizer.cxx:120; #8 0x00007f045c905c51 in ROOT::Minuit2::MnApplication::operator() (this=0x7ffcf9555b00, maxfcn=200, toler=0.10000000000000001) at /usr/src/debug/root-6.22.02/math/minuit2/src/MnApplication.cxx:57; #9 0x000000000041068c in main (); ===========================================================; ```. ### Setup; CentOS7/gcc-4.8.5 root 6.22 from EPEL . ### Additional context; Not a personal priority of me, so it is unlikely that I will provode a patch in the next days.; H",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6775:1961,Simpl,SimplexBuilder,1961,https://root.cern,https://github.com/root-project/root/issues/6775,1,['Simpl'],['SimplexBuilder']
Usability,"f all_particles_pt for all the events passing the condition.; This works in ROOT versions <= 6.18.04. ### To Reproduce; I have posted at the end a small pyroot code that creates a tree with 2 vectors and an int and Draw it in an histogram. Both running in 6.20.06 and 6.18.04 should print on the terminal the content of an histogram, with 6.20.06 I see it empty. . ### Setup; ROOT version > 6.20.06 . ### Additional context. I have never seen this problem with ROOT versions <= 6.18.04; I tested 6.22.06 and the bug appears to be still there.; I have observed the same behavior opening the file with ROOT or pyroot, with files created with ROOT or pyroot. Thanks for your help!; Federica; ; =========CODE==================; ```; ##FFabbri 21/06/2021. import re, array, os; import ROOT; from ROOT import TFile, TTree, TH1F; import random. ## function to create a tree with vectors; def create_tree():. m=ROOT.std.vector('double')(); pt=ROOT.std.vector('double')(); index=array.array('i', [0]). f = TFile( 'VectorTree.root', 'RECREATE' ); tree = TTree( 'Tree', 'Tree' ); tree.Branch( 'all_particles_pt', pt); tree.Branch( 'all_particles_mass', m); tree.Branch( 'index', index,'index/I'); ; for i in range(0,500):. pt.clear(); m.clear(); ; number_of_particles=random.randint(1,5); index[0]=random.randint(1,number_of_particles); ; for j in range(0,number_of_particles):; random_pt=random.random()*(975.)+25.; random_m=random.random()*(100.)+50.; ; pt.push_back(random_pt); m.push_back(random_m); ; ; tree.Fill(); ; tree.Print(); tree.Write(); f.Close(); ; ##################; ##Function to visualize the bug; def show_bug() :; ; f = TFile( 'VectorTree.root'); tree=f.Get(""Tree""); ; h=TH1F(""h"",""h"",20,25.,1000.); ##The same bug is observed also with projection; tree.Draw(""all_particles_pt >> h"",""all_particles_mass[index]>100""); h.Print(""all""); f.Close(). #####Call the functions; if __name__ == '__main__':; ###Function to create a tree; create_tree(); ###Function to reproduce the bug; show_bug(); ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8497:1898,clear,clear,1898,https://root.cern,https://github.com/root-project/root/issues/8497,2,['clear'],['clear']
Usability,fantastic.; Maybe we can go for a subcategory or add Keras in the names? If not the name will not be clear about what the tutorials contain perhaps,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3773#issuecomment-489639066:101,clear,clear,101,https://root.cern,https://github.com/root-project/root/pull/3773#issuecomment-489639066,2,['clear'],['clear']
Usability,"fffffd9d0, cl=0x555558490b70, pointer=<optimized out>, onFileClass=<optimized out>); at /home/rembserj/spaces/master/root/src/root/io/io/src/TBufferFile.cxx:3499; #30 0x00007ffff778a22e in TClass::Streamer (onfile_class=0x0, b=..., obj=0x55555855a0c0, this=0x555558490b70); at /home/rembserj/spaces/master/root/src/root/core/meta/inc/TClass.h:610; #31 TKey::ReadObjectAny (this=0x5555569f77a0, expectedClass=<optimized out>) at /home/rembserj/spaces/master/root/src/root/io/io/src/TKey.cxx:1108; #32 0x00007ffff774aa1b in TDirectoryFile::GetObjectChecked (this=0x555556a15ce0, namecycle=<optimized out>, expectedClass=0x555558490b70); at /home/rembserj/spaces/master/root/src/root/io/io/src/TDirectoryFile.cxx:1111; #33 0x00005555555551f6 in TDirectory::Get<RooStats::HistFactory::Measurement> (this=0x555556a15ce0, namecycle=<optimized out>); at /home/rembserj/spaces/master/root/src/build/../install/include/root/TDirectory.h:207; #34 TDirectoryFile::Get<RooStats::HistFactory::Measurement> (this=0x555556a15ce0, namecycle=<optimized out>); at /home/rembserj/spaces/master/root/src/build/../install/include/root/TDirectoryFile.h:84; #35 repro () at repro.C:10; ```. So the crash is here (https://github.com/root-project/root/blob/master/io/io/src/TBufferFile.cxx#L245):; ```c++; if (nwh == 255) {; *this >> nbig;; obj->resize(nbig,'\0');; ReadFastArray((char*)obj->data(),nbig);; }; ```; I have put some debug printouts. When it crashes, `nbig` is `-1`, and resize() expects and unsigned int. The -1 becomes a very large unsigned number that exceeds the maximum allowed length of a `std::string`. To me that looks more like a problem with IO than with HistFactory (the memory layout of the `HistFactory::Measurement` classes hasn't changed from 6.26 to 6.28. Is that something that makes sense to you, @pcanal? What does this `nbig` stand for, and in which circumstances can this be `-1`?. Maybe in the best case, the fix would just be adding a simple `if(nbig >= 0)` before the call to `resize()`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12967#issuecomment-1581261520:8592,simpl,simple,8592,https://root.cern,https://github.com/root-project/root/issues/12967#issuecomment-1581261520,2,['simpl'],['simple']
Usability,fix opening reference guide with .help Class,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8025:22,guid,guide,22,https://root.cern,https://github.com/root-project/root/pull/8025,2,['guid'],['guide']
Usability,"float, default=0.001,; help=""Run only on a fraction of the total available 10 fb^-1 (only usable together with --full-dataset)""); parser.add_argument(""--full-dataset"", action=""store_true"", default=False,; help=""Use the full dataset (use --lumi-scale to run only on a fraction of it)""); parser.add_argument(""-b"", action=""store_true"", default=False, help=""Use ROOT batch mode""); parser.add_argument(""-t"", action=""store_true"", default=False, help=""Use implicit multi threading (for the full dataset only possible with --lumi-scale 1.0)""); args = parser.parse_args(). if args.b: ROOT.gROOT.SetBatch(True); if args.t: ROOT.EnableImplicitMT(). if not args.full_dataset: lumi_scale = 0.001 # The preskimmed dataset contains only 0.01 fb^-1; else: lumi_scale = args.lumi_scale; lumi = 10064.0; print('Run on data corresponding to {:.2f} fb^-1 ...'.format(lumi * lumi_scale / 1000.0)). if args.full_dataset: dataset_path = ""root://eospublic.cern.ch//eos/opendata/atlas/OutreachDatasets/2020-01-22""; else: dataset_path = ""root://eospublic.cern.ch//eos/root-eos/reduced_atlas_opendata/w""; ------------------. An exception has occurred, use %tb to see the full traceback. SystemExit: 2. SystemExit: 2. NOTEBOOK_CONVERSION_WARNING: Nbconvert failed for notebook df105_WBosonAnalysis.py.ipynb with return code 1; [NbConvertApp] Converting notebook /home/sftnight/rootdoc/notebooks/df105_WBosonAnalysis.py.ipynb to notebook; [NbConvertApp] Writing 14399 bytes to /home/sftnight/rootdoc/notebooks/df105_WBosonAnalysis.py.nbconvert.ipynb; 4.87410593033; ```. ### Expected behavior. It should convert . ### To Reproduce. Execute the command above. ### Possible Fix. I looks like the argument parsing cannot be handled properly in the notebook. It is not possible to fix (I tried) this tutorial easily as the `args` variable is used every where. I suggest to not generate the notebook (for the time being)on this example as it polutes the log of the ref guide build. Experts (@etejedor ? @vepadulano ?) eyes are needed.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10430:4460,guid,guide,4460,https://root.cern,https://github.com/root-project/root/issues/10430,1,['guid'],['guide']
Usability,"g at the ROOT forum https://root.cern/forum; Only if you are really convinced it is a bug in ROOT then please submit a; report at https://root.cern/bugs Please post the ENTIRE stack trace; from above as an attachment in addition to anything else; that might help us fixing this issue.; ===========================================================; #6 0x00007f2da746e068 in llvm::PHINode::getIncomingValueForBlock(llvm::BasicBlock const*) const () from /home/user/Builds/root_build/lib/libCling.so; #7 0x00007f2da82a91e8 in llvm::TryToSimplifyUncondBranchFromEmptyBlock(llvm::BasicBlock*, llvm::DomTreeUpdater*) () from /home/user/Builds/root_build/lib/libCling.so; #8 0x00007f2da83255f9 in llvm::simplifyCFG(llvm::BasicBlock*, llvm::TargetTransformInfo const&, llvm::DomTreeUpdater*, llvm::SimplifyCFGOptions const&, llvm::ArrayRef<llvm::WeakVH>) () from /home/user/Builds/root_build/lib/libCling.so; #9 0x00007f2da7e3dac6 in iterativelySimplifyCFG(llvm::Function&, llvm::TargetTransformInfo const&, llvm::DomTreeUpdater*, llvm::SimplifyCFGOptions const&) () from /home/user/Builds/root_build/lib/libCling.so; #10 0x00007f2da7e62d63 in simplifyFunctionCFGImpl(llvm::Function&, llvm::TargetTransformInfo const&, llvm::DominatorTree*, llvm::SimplifyCFGOptions const&) () from /home/user/Builds/root_build/lib/libCling.so; #11 0x00007f2da87a6698 in llvm::FPPassManager::runOnFunction(llvm::Function&) () from /home/user/Builds/root_build/lib/libCling.so; #12 0x00007f2da87a699e in llvm::legacy::FunctionPassManagerImpl::run(llvm::Function&) () from /home/user/Builds/root_build/lib/libCling.so; #13 0x00007f2da625bdb7 in cling::Interpreter::executeTransaction(cling::Transaction&) () from /home/user/Builds/root_build/lib/libCling.so; #14 0x00007f2da62a2d7a in cling::IncrementalParser::commitTransaction(llvm::PointerIntPair<cling::Transaction*, 2u, cling::IncrementalParser::EParseResult, llvm::PointerLikeTypeTraits<cling::Transaction*>, llvm::PointerIntPairInfo<cling::Transaction*, 2u, llvm::PointerL",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14037:6331,Simpl,SimplifyCFGOptions,6331,https://root.cern,https://github.com/root-project/root/issues/14037,1,['Simpl'],['SimplifyCFGOptions']
Usability,"g target-based CMake, and I believe I have fixed the issue of ROOT picking up its own headers here:; https://github.com/root-project/root/pull/8709 (needs rebasing). This fixed it at least for many builtins. There still might be more builtins that have the same problem, but let's go one step at a time. I solved the VDT-related part a bit differently. If I rebased, the diff would approximately read (done manually, sorry for possible indentation errors):; ```diff; DESTINATION ${CMAKE_INSTALL_INCLUDEDIR} COMPONENT extra-headers); set(vdt ON CACHE BOOL ""Enabled because builtin_vdt enabled (${vdt_description})"" FORCE); set_property(GLOBAL APPEND PROPERTY ROOT_BUILTIN_TARGETS VDT); - add_library(VDT::VDT STATIC IMPORTED GLOBAL); - set_target_properties(VDT::VDT; - PROPERTIES; - IMPORTED_LOCATION ""${VDT_LIBRARIES}""; - INTERFACE_INCLUDE_DIRECTORIES ""${VDT_INCLUDE_DIRS}""; + add_library(VDT IMPORTED SHARED); + add_dependencies(VDT BUILTIN_VDT); + set_target_properties(VDT PROPERTIES IMPORTED_LOCATION ""${VDT_LIBRARIES}""); + target_include_directories(VDT INTERFACE $<BUILD_INTERFACE:${VDT_INCLUDE_DIR}> $<INSTALL_INTERFACE:include/>); ); endif(); endif(); ```; Whether the target is declared global, static or shared, I'm not sure if it makes a big difference. I'm happy to call it `VDT::VDT`, though. I think the important part was to switch the include directories via generator expressions, and to use **SYSTEM** includes instead of includes in `FindVDT`. #11844 is missing the usage of the `VDT::VDT` target in RooFit and in tmva, but that would come into effect after a rebase of #8709. I guess therefore that we could proceed with merging #11844 if it's green, and then I rebase #8709, so I have to do the rebase work only once. Does that sound reasonable for @amadio, @krasznaa, @bellenot ?. ### Edit ; And to be clear, for `SearchInstalledSoftware` I would leave everything as proposed in Attila's commit but the change to `target_include_directories` with the two generator expressions.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11797#issuecomment-1339660363:1848,clear,clear,1848,https://root.cern,https://github.com/root-project/root/issues/11797#issuecomment-1339660363,2,['clear'],['clear']
Usability,"g::Transaction*> > > >&, bool) IncrementalParser.cpp:0:0; #32 0x000000000151d992 cling::Interpreter::Interpreter(int, char const* const*, char const*, std::__2::vector<std::__2::shared_ptr<clang::ModuleFileExtension>, std::__2::allocator<std::__2::shared_ptr<clang::ModuleFileExtension> > > const&, bool, cling::Interpreter const*) Interpreter.cpp:0:0; #33 0x00000000014a5117 std::__2::vector<std::__2::shared_ptr<clang::ModuleFileExtension>, std::__2::allocator<std::__2::shared_ptr<clang::ModuleFileExtension> > >::~vector() /scratch/greenc/test-products/clang/v14_0_6b/Linux64bit+3.10-2.17/bin/../include/c++/v1/vector:399:17; #34 0x00000000014a5117 RootClingMain(int, char**, bool) /scratch/greenc/test-products/root/v6_26_04/source/root-6.26.04/core/dictgen/src/rootcling_impl.cxx:4315:7; #35 0x00000000014b2135 ROOT_rootcling_Driver /scratch/greenc/test-products/root/v6_26_04/source/root-6.26.04/core/dictgen/src/rootcling_impl.cxx:0:16; #36 0x00000000014f6b7e main /scratch/greenc/test-products/root/v6_26_04/source/root-6.26.04/core/rootcling_stage1/src/rootcling_stage1.cxx:46:4; #37 0x00007f1551302555 __libc_start_main (/lib64/libc.so.6+0x22555); #38 0x000000000143eb89 _start (/scratch/greenc/test-products/root/v6_26_04/build/Linux64bit+3.10-2.17-c13-p3912-prof/core/rootcling_stage1/src/rootcling_stage1+0x143eb89); <snip/>; ```. ### Expected behavior. Successful build. ### To Reproduce. Attempt to build ROOT with LLVM/Clang 14.0.6 and C++17 / `libc++` (precise configuration should be irrelevant provided `runtime_cxxmodules` is `ON`). ### Additional context. This was a second, simplified attempt after `rootcling` failed to find PSTL headers (_e.g._ `__pstl_memory`) in `<clang-lib>/clang/14.0.6/include` during the ROOT build when LLVM/Clang was compiled with parallel algorithms enabled in `libc++`. ~Currently attempting to reproduce on `master` branch.~. Fail with identical error on master (https://github.com/root-project/root/tree/7b7983fa8ab9e1a4af98776f7f80bea1f9b2b0b0).",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10861:6458,simpl,simplified,6458,https://root.cern,https://github.com/root-project/root/issues/10861,1,['simpl'],['simplified']
Usability,"gcc/x86_64-unknown-linux-gnu/11.3.0/../../../../include/c++/11.3.0/x86_64-unknown-linux-gnu:/nix/store/gc7zr7wh575g1i5zs20lf3g45damwwbs-gcc-11.3.0/lib/gcc/x86_64-unknown-linux-gnu/11.3.0/../../../../include/c++/11.3.0/backward' at runtime.; -- And then fallback to: 'g++'; CMake Error: Could not open file for write in copy operation //nix/store/vqlvh9dv2prsrmk6lng8n66wgfpvra1j-llvm-13.0.1-lib/lib/cmake/cling/ClingConfig.cmake.tmp; CMake Error: : System Error: No such file or directory; CMake Error at interpreter/cling/cmake/modules/CMakeLists.txt:22 (configure_file):; configure_file Problem configuring file; ```. Possible source of the issue:; https://github.com/root-project/root/blob/master/interpreter/cling/cmake/modules/CMakeLists.txt#L4-L5. ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->; 1. The configurations works, just as it does on the 6.26 branch.; 2. If not feasible, the build error should at least guide the user / package aintainer the configuration option to solve the issue or where to find the solution. ### To Reproduce. 1. Build against the master branch (6.27, 0fafc31efb5a94472af2a6b35ded27796cb141c8) with CMake Flag `-Dbuiltin_llvm=OFF`.; (See the external context for steps to reproduce the behavior with the Nix package manager and Nixpkgs.); 2. See error. ### Setup; <!--; 1. ROOT version; 3. Operating system; 4. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->; 1. ROOT version: 6.27.* on the master branch (f9d15227e4c92eac7c6499379912d1ed24d0142b).; 2. Operating system: NixOS (Linux), on a x86_64 machine.; - system: `""x86_64-linux""`; - host os: `Linux 5.10.156, NixOS, 22.11 (Raccoon), 22.11.20221130.596a8e8`; - multi-user?: `yes`; - sandbox: `yes`; - version: `nix-env (Nix) 2.11.0`; - nixpkgs: `/nix/store/qwgw2b19ga8dr7c6wfpd6p87bdjyrnha-source`; 4. Build with Nix and get dependencies from Nixpkgs. ### Additional context. Here is the build steps to reproduce ",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11920:2030,guid,guide,2030,https://root.cern,https://github.com/root-project/root/issues/11920,1,['guid'],['guide']
Usability,"gcc14 issue warning when `std::vector<char>` is used. Also simplify loop over points. ```; In file included from /usr/include/c++/14/x86_64-suse-linux/bits/c++allocator.h:33,; from /usr/include/c++/14/bits/allocator.h:46,; from /usr/include/c++/14/vector:63,; from /home/linev/git/webgui/math/minuit2/inc/Minuit2/MnPlot.h:14,; from /home/linev/git/webgui/math/minuit2/src/MnPlot.cxx:10:; In member function ‘void std::__new_allocator<_Tp>::deallocate(_Tp*, size_type) [with _Tp = char]’,; inlined from ‘constexpr void std::allocator< <template-parameter-1-1> >::deallocate(_Tp*, std::size_t) [with _Tp = char]’ at /usr/include/c++/14/bits/allocator.h:208:35,; inlined from ‘static constexpr void std::allocator_traits<std::allocator<_Up> >::deallocate(allocator_type&, pointer, size_type) [with _Tp = char]’ at /usr/include/c++/14/bits/alloc_traits.h:513:23,; inlined from ‘constexpr std::vector<_Tp, _Alloc>::_M_realloc_append(_Args&& ...)::_Guard::~_Guard() [with _Args = {char}; _Tp = char; _Alloc = std::allocator<char>]’ at /usr/include/c++/14/bits/vector.tcc:616:18,; inlined from ‘constexpr void std::vector<_Tp, _Alloc>::_M_realloc_append(_Args&& ...) [with _Args = {char}; _Tp = char; _Alloc = std::allocator<char>]’ at /usr/include/c++/14/bits/vector.tcc:688:7,; inlined from ‘constexpr std::vector<_Tp, _Alloc>::reference std::vector<_Tp, _Alloc>::emplace_back(_Args&& ...) [with _Args = {char}; _Tp = char; _Alloc = std::allocator<char>]’ at /usr/include/c++/14/bits/vector.tcc:123:21,; inlined from ‘constexpr void std::vector<_Tp, _Alloc>::push_back(value_type&&) [with _Tp = char; _Alloc = std::allocator<char>]’ at /usr/include/c++/14/bits/stl_vector.h:1301:21,; inlined from ‘void ROOT::Minuit2::MnPlot::operator()(double, double, const std::vector<std::pair<double, double> >&) const’ at git/webgui/math/minuit2/src/MnPlot.cxx:51:18:; /usr/include/c++/14/bits/new_allocator.h:172:33: warning: ‘void operator delete(void*, std::size_t)’ called on pointer ‘<unknown>’ with nonzero offs",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16359:59,simpl,simplify,59,https://root.cern,https://github.com/root-project/root/pull/16359,1,['simpl'],['simplify']
Usability,"gth of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:4757:26: warning: ‘char* strncpy(char*, const char*, size_t)’ output may be truncated copying 10 bytes from a string of length 10 [-Wstringop-truncation] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:490:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing between 2147483648 and 2147483647 bytes at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 4294967295] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:761:21: warning: ‘%lu’ directive writing between 1 and 20 bytes into a region of size between 0 and 8191 [-Wformat-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/proof/proofd/src/XrdProofdProtocol.cxx:527:45: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘class XrdSecEntity’; use assignment or value-initialization instead [-Wclass-memaccess] ; - /mnt/build/workspace/root-pullrequests-build/root/core/meta/src/TClass.cxx:686:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TSystem.cxx:1148:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing 1 byte at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 2147483649] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1770:96: warning: cast between incompatible function types from ‘TVirtualPad*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1774:94: warning: cast between incompatible function types from ‘TVirtualX*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void*",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2176#issuecomment-409167887:1250,clear,clearing,1250,https://root.cern,https://github.com/root-project/root/pull/2176#issuecomment-409167887,14,['clear'],['clearing']
Usability,"gth,content-type,accept-ranges; Access-Control-Allow-Methods: HEAD,GET; Content-Type: multipart/byteranges; boundary=61c842e35204a0c7. --61c842e35204a0c7; Content-range: bytes 0-15/414239. root�mdR; --61c842e35204a0c7; Content-range: bytes 1000-1015/414239. 1ZGqP��; --61c842e35204a0c7--; ```. And here is result from cernbox:; ```; curl -ik https://cernbox.cern.ch/remote.php/dav/public-files/1Cy1HIf03Ca76Dm/test_ntuples_200123.root -H ""Range: bytes=0-15,1000-1015"" --output - (15.06. 11:15:25) !11380 ; HTTP/1.1 206 Partial Content; Access-Control-Allow-Origin: *; Content-Disposition: attachment; filename=""test_ntuples_200123.root""; Content-Length: 389; Content-Range: ; Content-Security-Policy: default-src 'none';; Content-Type: application/octet-stream; Date: Thu, 15 Jun 2023 09:15:48 GMT; Etag: ""329762575417868288:9d274a18""; Last-Modified: Wed, 24 May 2023 12:22:19 +0000; Oc-Etag: ""329762575417868288:9d274a18""; Oc-Fileid: eoshome-t!103034857; Server: nginx/1.20.1; Strict-Transport-Security: max-age=63072000; Vary: Origin; X-Content-Type-Options: nosniff; X-Download-Options: noopen; X-Frame-Options: SAMEORIGIN; X-Permitted-Cross-Domain-Policies: none; X-Robots-Tag: none; X-Xss-Protection: 1; mode=block. --1941f188e1f15cbc8af2c2ce8ba24411209981093834f193e96822568cbb; Content-Range: bytes 0-15/4667337; Content-Type: application/octet-stream. root��dG7�; --1941f188e1f15cbc8af2c2ce8ba24411209981093834f193e96822568cbb; Content-Range: bytes 1000-1015/4667337; Content-Type: application/octet-stream. .�J.�f6��M�����m; --1941f188e1f15cbc8af2c2ce8ba24411209981093834f193e96822568cbb--; ```. That is wrong?; First of all content type must be: ""Content-Type: multipart/something""; In the same line one should have boundary like ""boundary=61c842e35204a0c7""; Such line is not present in cernbox response.; Without clearly specified ""boundary"" it is not possible to decode data afterwards. My conclusion - malformed http response and large latency make impossible to use cernbox http server.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13018#issuecomment-1592696000:2836,clear,clearly,2836,https://root.cern,https://github.com/root-project/root/issues/13018#issuecomment-1592696000,2,['clear'],['clearly']
Usability,"guess the behavior of TTaskGroup should mimic what TThreadExecutor does, e.g. it should use the task arena if it exists, and it should construct one if it doesn't. What's the rationale for doing things independently of ROOT's task arena? Does this mean users might see more cores used than they expect in some cases?. I believe this change only removes an unnecessary restriction on when `TTaskGroup` can be used (i.e. after looking through the implementation, I don't think having IMT globally enabled is a precondition for the use of `TTaskGroup` and test benchmarks using this implementation seem to perform the same). > 2. Are you ok with silently do nothing if R__IMT is undefined? Would it be better to print a warning?. Thank you, yes, a warning would probably be better. > 3. Can we also have a way to disable RNTuple's multi-threading even if implicit MT is enabled, like TTree has?. Yes, this makes sense to me. It will probably need a big warning in the docs about when to call it and/or some graceful shutdown logic. Even if this PR doesn't make it that method might be valuable by itself. > the rationale behind my question is that we should not have N different multi-threading behaviors for N components. I completely agree, it is very nice to be able to say ""if you want multithreading, call `EnableImplicitMT` and you're done"". > and we should play well with the TBB settings of frameworks such as CMSSW, but it's not clear to me how we do that now, actually. For the RNTuple NanoAOD project, we were hoping to plug in the CMSSW tbb instance with `RPageStorage::SetTaskScheduler` (for both page sink and source): https://github.com/root-project/root/blob/a9c61d56afd70b74425779f330a4ec2cc581bb0b/tree/ntuple/v7/inc/ROOT/RPageStorage.hxx#L136. by implementing a derived `RTaskScheduler` on the CMSSW side so they have control over task isolation etc. ; https://github.com/root-project/root/blob/4118c0cb6db03998ae77f56f57cc372ac150c9df/tree/ntuple/v7/inc/ROOT/RPageStorage.hxx#L66-L76",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8334#issuecomment-854977563:1492,clear,clear,1492,https://root.cern,https://github.com/root-project/root/pull/8334#issuecomment-854977563,2,['clear'],['clear']
Usability,"he app is not able to go forward. . As a summary of the problem, it shows up on the lines of m_vIntData and m_vIntDatSD, below:; ```; class CytStatInfo : public TObject {; private:; 	int m_iMachineSize;; 	int m_bMachineSizeSet;; 	double m_dMotorPos;; 	int m_iFIndex;; 	std::vector<int> m_vChNum;; 	std::vector<int> m_vNoEv;; 	std::vector<long long> m_vTsFirst;; 	std::vector<double> m_vVel;; 	std::vector<double> m_vOpPow;; 	std::vector<double> m_vPulseMag;; 	std::vector<double> m_vIntData[NUMBER_OF_COLORS];; 	std::vector<double> m_vIntDataSD[NUMBER_OF_COLORS];; 	std::vector<double> m_vPkRatio;; 	std::vector<int> m_vEvtErr;; 	std::vector<double> m_vEvRate;; 	std::vector<double> m_vGEV;; 	std::vector<int> m_vChEnbMask;. 	bool m_bAllChannelsEnabled;; ```. Here, NUMBER_OF_COLORS = 5. The generated _dict file in root 5 show, at one point (note the vector declaration), . ```; {; for (Int_t R__l = 0; R__l < 5; R__l++) {; vector<double> &R__stl = m_vIntData[R__l];; R__stl.clear();; int R__i, R__n;; R__b >> R__n;; R__stl.reserve(R__n);; for (R__i = 0; R__i < R__n; R__i++) {; double R__t;; R__b >> R__t;; R__stl.push_back(R__t);; }; }; }; ```. This seems to work well. But in root 6 it produces (note the [5] after vector<double>). ```; for (Int_t R__l = 0; R__l < 5; R__l++) {; vector<double>[5] &R__stl = m_vIntData[R__l];; R__stl.clear();; int R__i, R__n;; R__b >> R__n;; R__stl.reserve(R__n);; for (R__i = 0; R__i < R__n; R__i++) {; double R__t;; R__b >> R__t;; R__stl.push_back(R__t);; }; }; }. ```. this produces the compilation error:. ```; g++ -O -Wall -fPIC -pthread -std=c++14 -m64 -I/usr/include/root -I/home/vmecomp/Projects/Cytogate/CytCommon -I../../Include -I. -I/usr/include -I/home/vmecomp/Projects/Cytogate/Bus -I/home/vmecomp/Projects/Cytogate/Include -I/home/vmecomp/Projects/Cytogate/CytCommon -I/usr/include/root -c -o CytStatInfo_dict.o CytStatInfo_dict.C; CytStatInfo_dict.C: In member function ‘virtual void CytStatInfo::Streamer(TBuffer&)’:; CytStatInfo_dict.C:202:25: er",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12755#issuecomment-1534658132:1354,clear,clear,1354,https://root.cern,https://github.com/root-project/root/issues/12755#issuecomment-1534658132,2,['clear'],['clear']
Usability,"here; https://lcgapp-services.cern.ch/root-jenkins/job/root-nightly-master/LABEL=ROOT-ubuntu18.04,SPEC=nortcxxmod,V=master/2956/testReport/projectroot.roottest.python/distrdf/roottest_python_distrdf_spark_test_reducer_merge/. This kind of warning is apparently common in Python unittests that use socket, both with [pyspark](https://stackoverflow.com/questions/49361286/unittesting-with-pyspark-unclosed-socket-warnings) and [others](https://stackoverflow.com/questions/14938716/socket-resourcewarning-using-urllib-in-python-3). The reason they are shown is that in Python3 the unittest module has been updated to use the ""default"" level of warnings filters, as mentioned [in the docs](https://docs.python.org/3.5/library/warnings.html#updating-code-for-new-versions-of-python). For the particular case of `pyspark`, these warnings are actually present in any application that uses the same ""default"" level:; ```py; $: cat sparktest.py ; import pyspark; import warnings. warnings.simplefilter(""default"", ResourceWarning). sc = pyspark.SparkContext.getOrCreate(). sc.parallelize([1,2,3,4,5]).map(lambda x: 1).reduce(lambda x,y: x+y); ```. ```bash; $: python sparktest.py ; 21/08/30 11:04:59 WARN NativeCodeLoader: Unable to load native-hadoop library for your platform... using builtin-java classes where applicable; Using Spark's default log4j profile: org/apache/spark/log4j-defaults.properties; Setting default log level to ""WARN"".; To adjust logging level use sc.setLogLevel(newLevel). For SparkR, use setLogLevel(newLevel).; /usr/lib64/python3.8/socket.py:740: ResourceWarning: unclosed <socket.socket fd=7, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6, laddr=('127.0.0.1', 35374), raddr=('127.0.0.1', 36167)>; self._sock = None; ResourceWarning: Enable tracemalloc to get the object allocation traceback; ```. This commit adds an extra call in the setup part of unittests that use pyspark, to ignore these warnings. The default level for the warnings is restored after the t",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8938:1078,simpl,simplefilter,1078,https://root.cern,https://github.com/root-project/root/pull/8938,1,['simpl'],['simplefilter']
Usability,"https://github.com/root-project/root/issues/7657. To add a member of type `PushTransactionRAII*` to `Transaction`, the former must end up in a separate header - else `Transaction.h` must `#include` `Interpreter.h` which seems worse. As we don't guarantee backward compatibility for cling, just move the type out of `Interpreter`, without even leaving a type alias in `Interpreter`. Keeps things simple and straight. Kudos to @vgvassilev for the idea of ""push_if_none""!",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7752:395,simpl,simple,395,https://root.cern,https://github.com/root-project/root/pull/7752,1,['simpl'],['simple']
Usability,https://github.com/root-project/root/pull/7033/files#diff-db4685eef4f677b824081ed3667b66c57d14b163edaef2b5d545b2a708ec1e15R217-R226; ```c++; #ifdef R__USE_IMT; std::unique_ptr<ROOT::TThreadExecutor> fThreadExecutor;; #else; #define fThreadExecutor fSequentialExecutor; #endif; #ifndef R__WIN32; std::unique_ptr<ROOT::TProcessExecutor> fProcessExecutor;; #else; #define fProcessExecutor fSequentialExecutor; #endif; ```. This is very non-intuitive because it only works for code that follows this declaration. Additionally I would guess these `define`s spill over to user code with potentially very confusing problems and error messages...,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7033#issuecomment-759494622:437,intuit,intuitive,437,https://root.cern,https://github.com/root-project/root/pull/7033#issuecomment-759494622,2,['intuit'],['intuitive']
Usability,https://root.cern/root/htmldoc/guides/users-guide/Trees.html; \- probably should be in the documentation hierarchy.; https://root.cern/root/; \- an absolutely empty page (check other pages on that path though).,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7282#issuecomment-785256156:31,guid,guides,31,https://root.cern,https://github.com/root-project/root/issues/7282#issuecomment-785256156,4,['guid'],"['guide', 'guides']"
Usability,"https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->; I have run into issue reported on ROOT forum here:; https://root-forum.cern.ch/t/tpython-problem/46064; and managed to narrow it down a little. When ROOT is compiled with python3.8/3.9, running the following (in both compiled code and interactively):; ; const char * b = (const char*) TPython::Eval(""'done'"");. leads to following error:. input_line_29:74:12: error: expected member name or ';' after declaration specifiers; TPyReturn isascii() {; ~~~~~~~~~ ^; /usr/include/ctype.h:234:22: note: expanded from macro 'isascii'; # define isascii(c) __isascii (c); ^; .; .; . ; (const char *) nullptr. It does not happen with python 3.6. ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->; Running the TPython::Eval command should simply return ""done"". Tested with ROOT 6.24.6+python3.6. root [1] const char * b = (const char*) TPython::Eval(""'done'""); (const char *) ""done"". ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->; Compile ROOT (tested with 6.24.6 and 6.26.8) with python 3.8 or 3.9 and run following in root interactive:. root [1] const char * b = (const char*) TPython::Eval(""'done'""). ### Setup; <!--; 1. ROOT version; 2. Operating system; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->; 1. 6.24.6 + python3.8/ 6.26.8 +python3.9; 2. Ubuntu18.04/centos7; 3. compiled locally / provided by remote host. ### Extra note:; I have been told that R",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12182:1123,clear,clear,1123,https://root.cern,https://github.com/root-project/root/issues/12182,1,['clear'],['clear']
Usability,"humm ... I see ... @etejedor (and likely me :) ) seems to have thought it was needed in 2016 (7dec9bd96090a5bedac1c8a17b8154d39b6ef865) ... . However indeed the doc is clear (even back then): "" so that each thread works with its own TFile and TTree objects"". So back to reading the protected code and the lock is actually protecting the global list of pids. ... so now trying to remember why we elected to have a lock local to TFile protects this global ...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5288#issuecomment-608606454:168,clear,clear,168,https://root.cern,https://github.com/root-project/root/pull/5288#issuecomment-608606454,2,['clear'],['clear']
Usability,"i am struggling to reconcile the number. I see:; ```; TTree: 2.41 2.65 2.42 2.40 2.49 2.45; master TTreeReader: 4.41 4.72 4.79 4.66 4.75 4.81; ```; and; ```; indeed with the patch the number of calls to TBranch::GetEntry ; ```; Which would mean that master TTreeReader is still about twice as slow as TTree *but* with the same number of GetEntry (or at least the same time spent in GetEntry). Then visually inspecting the flamme graph, it is clear that master-TTreeReader takes more time, but I fails to see the magnitude of the overhead being about the same as the magnitude of the cost of GetEntry (which is necessary to explain the doubling) .... The number quoted for GetEntry:; ```; 8,189,455,484 ???:TBranch::GetEntry(long long, int) [/home/eguiraud/ROOT/pcanal_patch_build/lib/libTree.so] ; ```; where do they come from. what is the unit?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3216#issuecomment-455686354:442,clear,clear,442,https://root.cern,https://github.com/root-project/root/pull/3216#issuecomment-455686354,2,['clear'],['clear']
Usability,"ibCling.so); ==30221== by 0x844457C: cling::Interpreter::EvaluateInternal(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::CompilationOptions, cling::Value*, cling::Transaction**, unsigned long) (in /home/axel/build/root/24/rel/lib/libCling.so); ==30221== by 0x8349A5F: TCling::Calc(char const*, TInterpreter::EErrorCode*) (in /home/axel/build/root/24/rel/lib/libCling.so); ==30221== by 0x48F1A4D: ROOT::Internal::RDF::InterpreterCalc(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) (in /home/axel/build/root/24/rel/lib/libROOTDataFrame.so); ==30221== by 0x48FA766: ROOT::Detail::RDF::RLoopManager::Jit() (in /home/axel/build/root/24/rel/lib/libROOTDataFrame.so); ==30221== by 0x49030D3: ROOT::Detail::RDF::RLoopManager::Run() (in /home/axel/build/root/24/rel/lib/libROOTDataFrame.so); ==30221== by 0x153A71: SimpleParallelRDFs()::{lambda()#1}::operator()() const [clone .isra.0] (in /home/axel/build/root/24/rel/tree/dataframe/test/dataframe_concurrency); ==30221== by 0x153AD5: std::_Function_handler<void (unsigned int), std::vector<std::result_of<SimpleParallelRDFs()::{lambda()#1} ()>::type, std::allocator<std::result_of<SimpleParallelRDFs()::{lambda()#1} ()> > > ROOT::TThreadExecutor::MapImpl<SimpleParallelRDFs()::{lambda()#1}, void>(std::result_of, unsigned int)::{lambda(unsigned int)#1}>::_M_invoke(std::_Any_data const&, unsigned int&&) (in /home/axel/build/root/24/rel/tree/dataframe/test/dataframe_concurrency); ==30221== by 0x4AD5362: tbb::interface9::internal::start_for<tbb::blocked_range<unsigned int>, tbb::internal::parallel_for_body<std::function<void (unsigned int)>, unsigned int>, tbb::auto_partitioner const>::execute() (in /home/axel/build/root/24/rel/lib/libImt.so); ==30221== by 0x670D544: ??? (in /usr/lib/x86_64-linux-gnu/libtbb.so.2); ==30221== by 0x670D80E: ??? (in /usr/lib/x86_64-linux-gnu/li",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8899:3778,Simpl,SimpleParallelRDFs,3778,https://root.cern,https://github.com/root-project/root/issues/8899,1,['Simpl'],['SimpleParallelRDFs']
Usability,"ication (Failed); 1070 - tutorial-tmva-TMVA_RNN_Classification (Failed); 1071 - tutorial-tmva-TMVA_SOFIE_PyTorch (Failed); 1203 - tutorial-dataframe-df102_NanoAODDimuonAnalysis-py (Failed); 1205 - tutorial-dataframe-df104_HiggsToTwoPhotons-py (Failed); 1261 - tutorial-rcanvas-df104-py (Failed); 1564 - roottest-python-JupyROOT-importROOT_notebook (Failed); 1565 - roottest-python-JupyROOT-simpleCppMagic_notebook (Failed); 1566 - roottest-python-JupyROOT-thread_local_notebook (Failed); 1567 - roottest-python-JupyROOT-ROOT_kernel_notebook (Failed); 1568 - roottest-python-JupyROOT-tpython_notebook (Failed); 1664 - roottest-python-distrdf-backends-test_all (Failed); ```; The specific run I references only failed the `TMapFile` test (which sometimes fails, sometimes succeed). The set of failure types is as follow:; ```; Warning in <TMVA_CNN_Classification>: TMVA is not build with GPU or CPU multi-thread support. Cannot use TMVA Deep Learning for CNN; Running with nthreads = 4; [37;41;1m<FATAL> : Can't import __main__[0m; ***> abort program execution; ```; ```; Setup TMVA...; [37;41;1m<FATAL> : Can't import __main__[0m; ***> abort program execution; ```; ```; Generate PyTorch model...; Traceback (most recent call last):; File ""/github/home/ROOT-CI/build/tmva/pymva/test/generatePyTorchModelClassification.py"", line 1, in <module>; import torch; ModuleNotFoundError: No module named 'torch'; ```; ```; RDataFrame::Run: event loop was interrupted; Traceback (most recent call last):; File ""/github/home/ROOT-CI/src/tutorials/dataframe/df102_NanoAODDimuonAnalysis.py"", line 50, in <module>; h.SetTitle(""""); ^^^^^^^^^^; cppyy.gbl.std.bad_alloc: TH1D& ROOT::RDF::RResultPtr<TH1D>::operator*() =>; bad_alloc: std::bad_alloc; CMake Error at /github/home/ROOT-CI/build/RootTestDriver.cmake:232 (message):; error code: 1; ```; ```; Traceback (most recent call last):; File ""/github/home/ROOT-CI/src/tutorials/dataframe/df104_HiggsToTwoPhotons.py"", line 87, in <module>; ROOT.RDF.RunGraphs([hist",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/16242:2471,Learn,Learning,2471,https://root.cern,https://github.com/root-project/root/issues/16242,1,['Learn'],['Learning']
Usability,"if you need 1e-9 simply change it when you call Integral, that is what ""defined by eps"" means. You defined it, either by using the default value 1e-6 or by specifying this parameter.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13005#issuecomment-1591002768:17,simpl,simply,17,https://root.cern,https://github.com/root-project/root/issues/13005#issuecomment-1591002768,2,['simpl'],['simply']
Usability,"iggerRun); +TEST_P(RDFVary, VariationsForDoesNotTriggerRun); {; ROOT::RDataFrame df(10);; auto h = df.Define(""x"", [] { return 1; }).Histo1D<int>(""x"");; @@ -242,7 +246,7 @@ TEST(RDFVary, VariationsForDoesNotTriggerRun); EXPECT_EQ(df.GetNRuns(), 0);; }; ; -TEST(RDFVary, VariationsForWithNoVariations); +TEST_P(RDFVary, VariationsForWithNoVariations); {; ROOT::RDataFrame df(10);; auto h = df.Define(""x"", [] { return 1; }).Histo1D<int>(""x"");; @@ -250,7 +254,7 @@ TEST(RDFVary, VariationsForWithNoVariations); EXPECT_EQ(hs.GetKeys(), std::vector<std::string>{""nominal""});; }; ; -TEST(RDFVary, GetVariations); +TEST_P(RDFVary, GetVariations); {; auto df = ROOT::RDataFrame(10).Define(""x"", [] { return 0; }).Define(""y"", [] { return 10; });; auto df2 = df.Vary(""x"", SimpleVariation, {}, 2); @@ -269,7 +273,7 @@ TEST(RDFVary, GetVariations); ""Variations {x:0, x:1} affect column x\nVariations {xy:0, xy:1} affect columns {x, y}\n"");; }; ; -TEST(RDataFrameInterface, VaryFriend); +TEST(RDFVary, VaryFriend); {; int x = 0;; TTree main(""main"", ""main"");; @@ -295,7 +299,7 @@ TEST(RDataFrameInterface, VaryFriend); EXPECT_EQ(sum2vars[""var:0""], 43);; }; ; -TEST(RDFVary, ResultMapIteration); +TEST_P(RDFVary, ResultMapIteration); {; auto df = ROOT::RDataFrame(10).Define(""x"", [] { return 0; }).Vary(""x"", SimpleVariation, {}, 2);; auto s = df.Sum<int>(""x"");; @@ -327,7 +331,7 @@ TEST_P(RDFVary, VaryDefinePerSample); EXPECT_EQ(ss[""x:1""], 2 * 10);; }; ; -TEST(RDFVary, SaveGraph); +TEST_P(RDFVary, SaveGraph); {; ROOT::RDataFrame df(1);; auto c = df.Define(""x"", [] { return 0; }); @@ -622,7 +626,7 @@ TEST_P(RDFVary, DefineDependingOnVariations); EXPECT_EQ(sums[""yshift:low""], 410);; }; ; -TEST(RDFVary, VaryAndAlias); +TEST_P(RDFVary, VaryAndAlias); {; auto df = ROOT::RDataFrame(10).Define(""x"", [] { return 1; }).Alias(""y"", ""x"").Vary(""x"", SimpleVariation, {}, 2);; auto s1 = df.Sum<int>(""y"");; @@ -1000,7 +1004,7 @@ struct MyCounter : public ROOT::Detail::RDF::RActionImpl<MyCounter> {; }; };; ; -TEST(RDFVary, Var",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10715#issuecomment-1150873429:3424,Simpl,SimpleVariation,3424,https://root.cern,https://github.com/root-project/root/pull/10715#issuecomment-1150873429,1,['Simpl'],['SimpleVariation']
Usability,"igned int old_excepts;. if (fegetenv(&fenv)) {; return -1;; }; old_excepts = fenv.__control & FE_ALL_EXCEPT;. // unmask; fenv.__control &= ~new_excepts;; fenv.__mxcsr &= ~(new_excepts << 7);. return fesetenv(&fenv) ? -1 : old_excepts;; }. inline int fedisableexcept(unsigned int excepts); {; static fenv_t fenv;; unsigned int new_excepts = excepts & FE_ALL_EXCEPT;; // all previous masks; unsigned int old_excepts;. if (fegetenv(&fenv)) {; return -1;; }; old_excepts = fenv.__control & FE_ALL_EXCEPT;. // mask; fenv.__control |= new_excepts;; fenv.__mxcsr |= new_excepts << 7;. return fesetenv(&fenv) ? -1 : old_excepts;; }. #else; inline int feenableexcept(unsigned int excepts); {; #pragma STDC FENV_ACCESS ON; fexcept_t flags;; /* Save current exception flags. */; fegetexceptflag(&flags, FE_ALL_EXCEPT);. feclearexcept(FE_ALL_EXCEPT); /* clear all fp exception conditions */; return fesetexceptflag(&flags, excepts) != 0 ? -1 : flags; /* set new flags */. }. inline int fedisableexcept(unsigned int excepts); {; #pragma STDC FENV_ACCESS ON; fexcept_t flags;; /* Save current exception flags. */; fegetexceptflag(&flags, FE_ALL_EXCEPT);. feclearexcept(FE_ALL_EXCEPT); /* clear all fp exception conditions */; return fesetexceptflag(&flags, ~excepts) != 0 ? -1 : flags; /* set new flags */; }. #endif; #endif. int main(int argc, char **argv) {; feenableexcept(FE_DIVBYZERO | FE_INVALID | FE_OVERFLOW);; Float_t fHue=-1.0; ; Float_t fLight=-1.0;; Float_t fSaturation = -1.0;; Float_t r=212.467392f;; Float_t g=0.529984f;; Float_t b=94.476196f;; TColor::RGB2HLS(r ,g, b,fHue, fLight, fSaturation);; return 0;; }. ```; produces FPE on Mac+ ROOT 6.22. The problem is that TColor::RGB2HLS is a static function and when I try to take it of and compile standalone, everything works.; Have no idea what is happening.; My very wild speculation is that the build setup of the 6.22 release on Mac is bugged because of bugged clang or linker there.; But again, that is just a speculation. Best regards,. Andrii",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6373#issuecomment-712188134:1769,clear,clear,1769,https://root.cern,https://github.com/root-project/root/issues/6373#issuecomment-712188134,2,['clear'],['clear']
Usability,ild/169780/testReport/projectroot.roottest.root/multicore/roottest_root_multicore_tp_process_imt_build/); - [projectroot.roottest.root.multicore.roottest_root_multicore_tprofile_build](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/169780/testReport/projectroot.roottest.root/multicore/roottest_root_multicore_tprofile_build/); - [projectroot.roottest.root.multicore.roottest_root_multicore_ttree_read_imt_build](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/169780/testReport/projectroot.roottest.root/multicore/roottest_root_multicore_ttree_read_imt_build/); - [projectroot.roottest.root.multicore.roottest_root_multicore_th1f_fill_build](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/169780/testReport/projectroot.roottest.root/multicore/roottest_root_multicore_th1f_fill_build/); - [projectroot.roottest.root.meta.tclass.roottest_root_meta_tclass_libInitOrderDups_build](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/169780/testReport/projectroot.roottest.root.meta/tclass/roottest_root_meta_tclass_libInitOrderDups_build/); - [projectroot.roottest.root.meta.genreflex.ROOT-5709.roottest_root_meta_genreflex_ROOT_5709_Tau_libgen_build](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/169780/testReport/projectroot.roottest.root.meta.genreflex/ROOT-5709/roottest_root_meta_genreflex_ROOT_5709_Tau_libgen_build/); - [projectroot.roottest.root.multicore.roottest_root_multicore_testSetAddress_build](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/169780/testReport/projectroot.roottest.root/multicore/roottest_root_multicore_testSetAddress_build/); - [projectroot.roottest.root.selector.simple.roottest_root_selector_simple_testSelector_build](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/169780/testReport/projectroot.roottest.root.selector/simple/roottest_root_selector_simple_testSelector_build/). And 155 more,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12415#issuecomment-1456017123:2626,simpl,simple,2626,https://root.cern,https://github.com/root-project/root/pull/12415#issuecomment-1456017123,4,['simpl'],['simple']
Usability,"ileExtension>, std::allocator<std::shared_ptr<clang::ModuleFileExtension> > > const&, bool, cling::Interpreter const*) () from /home/geonwoo/root/lib/libCling.so; #16 0x00007fd7ce21b224 in TCling::TCling(char const*, char const*, char const* const*) () from /home/geonwoo/root/lib/libCling.so; #17 0x00007fd7ce21ceea in CreateInterpreter () from /home/geonwoo/root/lib/libCling.so; #18 0x00007fd7d1edeb13 in TROOT::InitInterpreter() () from /home/geonwoo/root/lib/libCore.so.6.22; #19 0x00007fd7d1edf00f in ROOT::Internal::GetROOT2() () from /home/geonwoo/root/lib/libCore.so.6.22; #20 0x00007fd7d1eebdcd in TApplication::TApplication(char const*, int*, char**, void*, int) () from /home/geonwoo/root/lib/libCore.so.6.22; #21 0x00007fd7d2263f0f in TRint::TRint(char const*, int*, char**, void*, int, bool) () from /home/geonwoo/root/lib/libRint.so.6.22; #22 0x0000561a6211b174 in main (); ===========================================================; ```. ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->; i installed root from homepage, ; ```; $ wget https://root.cern/download/root_v6.22.00.Linux-ubuntu19-x86_64-gcc9.2.tar.gz; $ tar -xzvf root_v6.22.00.Linux-ubuntu19-x86_64-gcc9.2.tar.gz; $ source root/bin/thisroot.sh # also available: thisroot.{csh,fish,bat}; ```; i finished these steps and finally i had tried to excute root by $root and then this error message had poped up . ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->. ### Setup; <!--; 1. ROOT version; 2. Operating system; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->; 1.latest version 2. oracle VM VirtualBox in window 10 3.i don't know i just followed steps from cern homepage. ### Additional context",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6859:9471,clear,clear,9471,https://root.cern,https://github.com/root-project/root/issues/6859,1,['clear'],['clear']
Usability,ilt target obj.clangLex; [ 69%] Built target LLVMCodeGen; [ 69%] Built target obj.clangEdit; [ 69%] Built target obj.clangRewrite; [ 69%] Built target clang-headers; [ 69%] Built target LLVMX86CodeGen; [ 69%] Built target obj.clangSerialization; [ 69%] Built target clangParse; [ 70%] Built target obj.clangAnalysis; [ 70%] Built target clangASTMatchers; [ 70%] Built target obj.clangDriver; [ 71%] Built target obj.clangRewriteFrontend; [ 71%] Built target clangEdit; [ 71%] Built target obj.clangFrontend; [ 71%] Built target clangLex; [ 71%] Built target clangRewrite; [ 71%] Built target obj.clangAST; [ 71%] Built target clangAnalysis; [ 71%] Built target clangSerialization; [ 71%] Built target LLVMOrcJIT; [ 71%] Built target obj.clingMetaProcessor; [ 71%] Built target clangRewriteFrontend; [ 71%] Built target obj.clingUtils; [ 71%] Built target clangFrontend; [ 71%] Built target clangDriver; [ 71%] Building CXX object interpreter/llvm/src/tools/clang/lib/Basic/CMakeFiles/obj.clangBasic.dir/Version.cpp.o; [ 72%] Built target obj.clangCodeGen; [ 72%] Built target clangAST; [ 72%] Built target obj.clangSema; [ 72%] Built target clingMetaProcessor; [ 72%] Built target clingUtils; [ 72%] Built target clangCodeGen; [ 72%] Built target clangSema; [ 72%] Built target obj.clingInterpreter; [ 72%] Built target clingInterpreter; [ 72%] Built target clad; [ 72%] Built target CLING; [ 72%] Built target LLVMRES; [ 72%] Built target Dictgen; [ 72%] Built target ClingUtils; [ 73%] Built target MetaCling; [ 73%] Built target obj.clangBasic; [ 73%] Linking CXX static library ../../../../lib/libclangBasic.a; [ 73%] Built target clangBasic; [ 73%] Linking CXX shared library ../../../lib/libCling.so; [ 73%] Linking CXX executable src/rootcling_stage1; // ... snip ...; ```. ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->. Checking out a different revision of a given file should only trigger a rebuild of the targets that depend on that file.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7893:7317,clear,clear,7317,https://root.cern,https://github.com/root-project/root/issues/7893,1,['clear'],['clear']
Usability,"inFrame (const TGWindow *p=0, UInt_t w=1, UInt_t h=1, UInt_t options=kVerticalFrame)` constructor from the `__init__` method of the derived class:. ```python; import ROOT. class pMainFrame( ROOT.TGMainFrame ):; def __init__( self, parent, width, height ):; ROOT.TGMainFrame.__init__( self, parent, width, height). window = pMainFrame( ROOT.gClient.GetRoot(), 200, 200 ); ```. This prints:. ```; Traceback (most recent call last):; File ""../examples/mainframerepro.py"", line 10, in <module>; window = pMainFrame( ROOT.gClient.GetRoot(), 200, 200 ); File ""../examples/mainframerepro.py"", line 6, in __init__; ROOT.TGMainFrame.__init__( self, parent, width, height) # does not work; TypeError: none of the 2 overloaded methods succeeded. Full details:; Dispatcher1::Dispatcher1(const __cppyy_internal::Dispatcher1& other) =>; TypeError: takes at most 1 arguments (3 given); Dispatcher1::Dispatcher1() =>; TypeError: takes at most 0 arguments (3 given); ```. ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->. It should be possible to invoke the `TGMainFrame` constructor. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->. The following code is a C++ reproducer of the issue, where we see that the line `using TGMainFrame::TGMainFrame;` has no effect, since the aforementioned `TGMainFrame` constructor does not appear in the list of methods of `Dispatcher1` (while, for instance, `GetMWMinpString` does):. ```c++; namespace __cppyy_internal {; class Dispatcher1 : public ::TGMainFrame {; public:; virtual ~Dispatcher1() {}; using TGMainFrame::TGMainFrame;; using TGMainFrame::GetMWMinpString;; };; }. void tgmainframe_repro(); {; TClassRef dispClass(""__cppyy_internal::Dispatcher1"");. for (auto m : *dispClass->GetListOfMet",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6578:1110,clear,clear,1110,https://root.cern,https://github.com/root-project/root/issues/6578,1,['clear'],['clear']
Usability,"include\tuple(332,1): fatal error C1060: compiler is out of heap space (compiling source file C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\lib\CodeGen\SelectionDAG\StatepointLowering.cpp) [C:\build\workspace\root-pullrequests-build\build\interpreter\llvm\src\lib\CodeGen\SelectionDAG\LLVMSelectionDAG.vcxproj] ; - [2021-04-20T14:33:47.529Z] C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\include\llvm/ADT/SmallVector.h(581,1): fatal error C1060: compiler is out of heap space (compiling source file C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\tools\clang\lib\Frontend\FrontendAction.cpp) [C:\build\workspace\root-pullrequests-build\build\interpreter\llvm\src\tools\clang\lib\Frontend\obj.clangFrontend.vcxproj] ; - [2021-04-20T14:33:47.529Z] C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\tuple(564,1): fatal error C1060: compiler is out of heap space (compiling source file C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\lib\Transforms\Scalar\SimpleLoopUnswitch.cpp) [C:\build\workspace\root-pullrequests-build\build\interpreter\llvm\src\lib\Transforms\Scalar\LLVMScalarOpts.vcxproj] ; - [2021-04-20T14:33:47.529Z] C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\include\llvm/ADT/DenseMap.h(1237,1): fatal error C1060: compiler is out of heap space (compiling source file C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\lib\Transforms\Scalar\SeparateConstOffsetFromGEP.cpp) [C:\build\workspace\root-pullrequests-build\build\interpreter\llvm\src\lib\Transforms\Scalar\LLVMScalarOpts.vcxproj] ; - [2021-04-20T14:33:47.529Z] C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\include\llvm/Analysis/ScalarEvolutionExpressions.h(576,29): fatal error C1060: compiler is out of heap space (compiling source file C:\build\workspace\root-pullrequests-build\root\interpreter\llvm\src\lib\Transforms\Scalar\S",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7937#issuecomment-823327556:2866,Simpl,SimpleLoopUnswitch,2866,https://root.cern,https://github.com/root-project/root/pull/7937#issuecomment-823327556,1,['Simpl'],['SimpleLoopUnswitch']
Usability,"ing it, see if it fails, and if it doesn't fail declare it ""portable"" is exactly what causes folks to still cast pointers to long, for example. This would never happen if code was written with portability in mind from the get-go. But your closer exemplifies that even better: given the choice between *potential* scaling problems and *guaranteed* portability problems, you choose to accept the latter. Clearly, portability isn't high on your list. Portability is, however, very important. By providing a portable solution that works well within other environments, cppyy is now being used on large code bases in mathematics, chemistry, and biology. That work uncovers errors even deep inside Cling, because it is pushed harder and used differently than in the CINT-tamed HEP world. Here is a current problem I'm working on for example. Try it in ROOT master, and watch memory consumption grow with top or whatever:. ```; $ root -l -b; root [0] template <class T, class U> class __gmp_expr;; root [1] typedef struct{ } __mpz_struct;; root [2] typedef __gmp_expr<__mpz_struct[1],__mpz_struct[1]> mpz_class;; root [3] for (;;) gInterpreter->ClassInfo_IsEnum(""std::vector<mpz_class>::value_type""); ```. That leak occurs when `findScope` in the LookupHelper starts parsing whenever `quickFindDecl()` fails (it's nothing to do with `mpz_class` or `ClassInfo_IsEnum` per se, just that that's where it was first found). If `quickFindDecl()` succeeds, then no leak. Since this is an accumulation of internal state, it will _not_ be reported by valgrind as a leak. Use of `findScope` is pervasive, not just from Python, but also from I/O and in clingutils. So, you're sitting on a leak even in HEP (where, especially in the LHC experiments, memory is precious), but your standard test tools won't catch it. To discover these types of deep problems, you need portable software, as that allows it to be used by a wider audience, causing it to be better tested simply through the virtue of having more eyes on it.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6393#issuecomment-707273510:4700,simpl,simply,4700,https://root.cern,https://github.com/root-project/root/issues/6393#issuecomment-707273510,2,['simpl'],['simply']
Usability,"ing zero bits in LSHR/SHL (PR44526); git bisect bad d65ddca83ff85c7345fe9a0f5a15750f01e38420; # good: [15a74b64dfa9bc1213cd582415f849b4dba51bad] [VPlan] Manage pairs of incoming (VPValue, VPBB) in VPWidenPHIRecipe.; git bisect good 15a74b64dfa9bc1213cd582415f849b4dba51bad; # good: [dd68f3cf2899c554cab7baf3ccdcd3f987d77736] [RISCV] Support insertion of misaligned subvectors; git bisect good dd68f3cf2899c554cab7baf3ccdcd3f987d77736; # good: [97a304cc8f949e40693d63b855b4b24bc81fa729] [scan-build-py] Add sarif-html support in scan-build-py; git bisect good 97a304cc8f949e40693d63b855b4b24bc81fa729; # bad: [0f279c7a5c34eaae797c325c18614def21eba921] Revert ""patch"" it wass my mistake inusing git; git bisect bad 0f279c7a5c34eaae797c325c18614def21eba921; # bad: [56d228a14e3631de157ae98dd61d21193e4502d5] [SimplifyCFG] Update passingValueIsAlwaysUndefined to check more attributes; git bisect bad 56d228a14e3631de157ae98dd61d21193e4502d5; # good: [3adb89bb9f8e73c82787babb2f877fece7394770] [ThinLTO] Make cloneUsedGlobalVariables deterministic; git bisect good 3adb89bb9f8e73c82787babb2f877fece7394770; # good: [af4451eb4f38ce492ca38add91c8378f32b93eca] [NFC] Make TrailingObjects non-copyable/non-movable; git bisect good af4451eb4f38ce492ca38add91c8378f32b93eca; # good: [3c4cdd0b6a6fd760707be9b5dec32378ec55c549] [mlir] ExecutionEngine needs special handling for COFF binaries; git bisect good 3c4cdd0b6a6fd760707be9b5dec32378ec55c549; # good: [ab5b00ada9e77437ed2c76f73cfb8481bb9826a5] Revert ""[Driver][Windows] Support per-target runtimes dir layout for profile instr generate""; git bisect good ab5b00ada9e77437ed2c76f73cfb8481bb9826a5; # first bad commit: [56d228a14e3631de157ae98dd61d21193e4502d5] [SimplifyCFG] Update passingValueIsAlwaysUndefined to check more attributes; ```. ```; 56d228a14e3631de157ae98dd61d21193e4502d5 is the first bad commit; commit 56d228a14e3631de157ae98dd61d21193e4502d5; Author: Juneyoung Lee <aqjune@gmail.com>; Date: Tue Feb 23 11:46:59 2021 +0900. [SimplifyCFG]",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9547#issuecomment-1011201311:2005,Simpl,SimplifyCFG,2005,https://root.cern,https://github.com/root-project/root/issues/9547#issuecomment-1011201311,2,['Simpl'],['SimplifyCFG']
Usability,"inor edits to TStreamerInfo. I have attempted this myself for vector&amp;lt;double&amp;gt; (see the attached) and had success with the following:. \- A branch made directly from a vector&amp;lt;double&amp;gt;; \- A branch made out of a class (call it &amp;quot;TTestClass&amp;quot;) that derives from TObject and contains a vector&amp;lt;double&amp;gt; as a data member; \- A branch made out of a class containing a data member that is a TClonesArray of TTestClass's. The basic idea was to imitate the special-case-handling for the std::string class in the TStreamerInfo::PrintValue() and TStreamerInfo::PrintValueAux(). One issue is that for the STL classes, counter-intuitively TStreamerInfo::fLength = 1, no matter how many entries are in the container, so that PrintValueAux() always gets called with aleng = 1 instead of something related to the size of the array. Rather than mess with fLength, which appears to have important function outside of the PrintValue*() routines, I thought it would be better to simply add lenmax as an additional final parameter to PrintValueAux(), to be used in place of aleng by the stl classes. This could then be compared to the container length and used in the printf loop in the same way that aleng is used for arrays of basic data types. The other issue I ran into is that it is not easy to format the output to make it look &amp;quot;nice&amp;quot;. The PrintCR() function used by other data types in PrintValueAux() works well for vector&amp;lt;double&amp;gt; in PrintValue(), so I suggest moving that function declaration up so that it can be used there. However, in PrintValueAux() the printing somehow always looks funny for the case of the TClonesArray of TTestClass's. My guess is that the printing looks funny as well for the other array types handled by PrintValueAux() so maybe this is considered to be okay? At any rate, I tried a number of options and left them in the file in my order of preference with all but the first one (no carriage returns",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14555:1557,simpl,simply,1557,https://root.cern,https://github.com/root-project/root/issues/14555,1,['simpl'],['simply']
Usability,"int excepts); {; static fenv_t fenv;; unsigned int new_excepts = excepts & FE_ALL_EXCEPT;; // previous masks; unsigned int old_excepts;. if (fegetenv(&fenv)) {; return -1;; }; old_excepts = fenv.__control & FE_ALL_EXCEPT;. // unmask; fenv.__control &= ~new_excepts;; fenv.__mxcsr &= ~(new_excepts << 7);. return fesetenv(&fenv) ? -1 : old_excepts;; }. inline int fedisableexcept(unsigned int excepts); {<!--; static fenv_t fenv;; unsigned int new_excepts = excepts & FE_ALL_EXCEPT;; // all previous masks; unsigned int old_excepts;. if (fegetenv(&fenv)) {; return -1;; }; old_excepts = fenv.__control & FE_ALL_EXCEPT;. // mask; fenv.__control |= new_excepts;; fenv.__mxcsr |= new_excepts << 7;. return fesetenv(&fenv) ? -1 : old_excepts;; }. #else; inline int feenableexcept(unsigned int excepts); {; #pragma STDC FENV_ACCESS ON; fexcept_t flags;; /* Save current exception flags. */; fegetexceptflag(&flags, FE_ALL_EXCEPT);. feclearexcept(FE_ALL_EXCEPT); /* clear all fp exception conditions */; return fesetexceptflag(&flags, excepts) != 0 ? -1 : flags; /* set new flags */. }. inline int fedisableexcept(unsigned int excepts); {; #pragma STDC FENV_ACCESS ON; fexcept_t flags;; /* Save current exception flags. */; fegetexceptflag(&flags, FE_ALL_EXCEPT);. feclearexcept(FE_ALL_EXCEPT); /* clear all fp exception conditions */; return fesetexceptflag(&flags, ~excepts) != 0 ? -1 : flags; /* set new flags */; }. #endif; #endif. int main(int argc, char **argv) {; feenableexcept(FE_DIVBYZERO | FE_INVALID | FE_OVERFLOW);; TColor* c= new TColor();; TRandom* r= new TRandom();; float rgb[3];; //c->SetRGB(212.467392, 0.529984, 94.476196);; for (size_t i=0; i<1000000;i++); {; rgb[0]=512*(1.0-r->Rndm());; rgb[1]=512*(1.0-r->Rndm());; rgb[2]=512*(1.0-r->Rndm());; printf(""%f %f %f\n"",rgb[0],rgb[1],rgb[2]);; c->SetRGB(rgb[0],rgb[1],rgb[2]);; }; delete c;; delete r;; return 0;; }; ```; Compile; ```; clang++ color.cxx $(root-config --glibs --cflags --libs) -o color; ```; Run; ```; ./color; ```; ## Setup",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6373:1945,clear,clear,1945,https://root.cern,https://github.com/root-project/root/issues/6373,1,['clear'],['clear']
Usability,"int) (this=0x5960390, event=21, px=1031, py=120) at /usr/src/debug/root-6.22.02/graf2d/gpad/src/TPad.cxx:2149; #6 0x00007fc5a100442d in TCanvas::HandleInput(EEventType, int, int) (this=0x3566d70, event=kButton1Motion, px=637, py=120) at /usr/src/debug/root-6.22.02/graf2d/gpad/src/TCanvas.cxx:1291; #7 0x00007fc5a156c04b in TRootEmbeddedCanvas::HandleContainerMotion(Event_t*) (this=0x3565110, event=0x7ffe06062550) at /usr/src/debug/root-6.22.02/gui/gui/src/TRootEmbeddedCanvas.cxx:387; #8 0x00007fc5a14a19f1 in TGFrame::HandleEvent(Event_t*) (this=0x35665d0, event=0x7ffe06062550) at /usr/src/debug/root-6.22.02/gui/gui/src/TGFrame.cxx:531; #9 0x00007fc5a1458a48 in TGClient::HandleEvent(Event_t*) (this=0x2e17e80, event=0x7ffe06062550) at /usr/src/debug/root-6.22.02/gui/gui/src/TGClient.cxx:843; #10 0x00007fc5a1458f85 in TGClient::ProcessOneEvent() (this=this; ```. I was able to trace the problem to the math operations performed in the TPad.cxx and TPavelabel.cxx and it looks in many cases there are simply divisions by zero. e.g. in TPaveLabel.cxx instead of . ```; Double_t wh = (Double_t)gPad->XtoPixel(gPad->GetX2());; Double_t hh = (Double_t)gPad->YtoPixel(gPad->GetY1());; Double_t labelsize, textsize = GetTextSize();; Int_t automat = 0;; if (GetTextFont()%10 > 2) { // fixed size font specified in pixels; labelsize = GetTextSize();; } else {; if (TMath::Abs(textsize -0.99) < 0.001) automat = 1;; if (textsize == 0) { textsize = 0.99; automat = 1;}; Int_t ypixel = TMath::Abs(gPad->YtoPixel(y1) - gPad->YtoPixel(y2));; labelsize = textsize*ypixel/hh;; if (wh < hh) labelsize *= hh/wh;; }; ```; One can have; ```; Double_t wh = gPad->XtoPixel(gPad->GetX2())==0?1.0:(Double_t)gPad->XtoPixel(gPad->GetX2());; Double_t hh = gPad->YtoPixel(gPad->GetY1())==0?1.0:(Double_t)gPad->YtoPixel(gPad->GetY1());; ....; ```. In the TPad.cxx there are many unsafe operations in the TPad::ExecuteEvent and TPad::Resize, e.g. ```; // Compute new pad positions in the NDC space of parent; fXlowNDC = Do",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6344:1339,simpl,simply,1339,https://root.cern,https://github.com/root-project/root/issues/6344,1,['simpl'],['simply']
Usability,"int, FTMesh*)’} to ‘GLUTesselatorFunction’ {aka ‘void (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/graf3d/ftgl/src/FTVectoriser.cxx:187:76: warning: cast between incompatible function types from ‘void (*)(void*, FTMesh*)’ to ‘GLUTesselatorFunction’ {aka ‘void (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/graf3d/ftgl/src/FTVectoriser.cxx:188:76: warning: cast between incompatible function types from ‘void (*)(FTGL_DOUBLE*, void**, GLfloat*, void**, FTMesh*)’ {aka ‘void (*)(double*, void**, float*, void**, FTMesh*)’} to ‘GLUTesselatorFunction’ {aka ‘void (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/graf3d/ftgl/src/FTVectoriser.cxx:189:76: warning: cast between incompatible function types from ‘void (*)(FTMesh*)’ to ‘GLUTesselatorFunction’ {aka ‘void (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/graf3d/ftgl/src/FTVectoriser.cxx:190:76: warning: cast between incompatible function types from ‘void (*)(GLenum, FTMesh*)’ {aka ‘void (*)(unsigned int, FTMesh*)’} to ‘GLUTesselatorFunction’ {aka ‘void (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/proof/proofd/src/XrdProofdProtocol.cxx:527:45: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘class XrdSecEntity’; use assignment or value-initialization instead [-Wclass-memaccess] . And 193 more. ### Failing tests:; - [projectroot.roottest.cling.functionTemplate.roottest_cling_functionTemplate_testcint](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/43493/testReport/projectroot.roottest.cling/functionTemplate/roottest_cling_functionTemplate_testcint/); - [projectroot.roottest.root.multicore.roottest_root_multicore_processExecutorH1Test](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/43493/testReport/projectroot.roottest.root/multicore/roottest_root_multicore_processExecutorH1Test/)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2768#issuecomment-427830089:2647,clear,clearing,2647,https://root.cern,https://github.com/root-project/root/pull/2768#issuecomment-427830089,2,['clear'],['clearing']
Usability,"irly easy to reproduce. It seems that one can not provide `-isystem` and `-D` command line options to `genreflex` in any order. Specifying `-D` flags after `-isystem` flags seems to not work. ### Reproducer. Take the following file, called `header.h`:. ```c++; #ifndef HEADER_H; #define HEADER_H. // Require the preprocessor definition.; #ifndef DO_NOT_FAIL; #error ""Preprocessor definition not set!""; #endif. /// Dummy type; struct TypeWithDictionary {; int foo;; };. #endif; ```. With the following additional `selection.xml` file:. ```xml; <lcgdict>; <class name=""TypeWithDictionary"" />; </lcgdict>; ```. With these two, I can run the following happily:. ```; [bash][atspot01]:root-dict-isystem > genreflex header.h --select=selection.xml -o test_dict_success.cpp -D DO_NOT_FAIL -isystem /some/path; [bash][atspot01]:root-dict-isystem > head test_dict_success.cpp ; // Do NOT change. Changes will be lost next time file is generated. #define R__DICTIONARY_FILENAME test_dict_success; #define R__NO_DEPRECATION. /*******************************************************************/; #include <stddef.h>; #include <stdio.h>; #include <stdlib.h>; #include <string.h>; [bash][atspot01]:root-dict-isystem >; ```. But the following fails:. ```; [bash][atspot01]:root-dict-isystem > genreflex header.h --select=selection.xml -o test_dict_fail.cpp -isystem /some/path -D DO_NOT_FAIL; input_line_7:8:2: error: ""Preprocessor definition not set!""; #error ""Preprocessor definition not set!""; ^; Error: rootcling: compilation failure (./test_dict_fail5dde80a7de_dictUmbrella.h); [bash][atspot01]:root-dict-isystem >; ```. My guess is that `-isystem` in general is not taken correctly into account, but as I wrote in the description, I couldn't clearly demonstrate that thing just yet... ### ROOT version. Tried `6.26.06` and `v6-28-00-patches`. ### Installation method. Does not play a role here. ### Operating system. `x86_64-ubuntu2004-gcc9-opt`, `x86_64-el9-gcc13-opt`. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13207:2607,clear,clearly,2607,https://root.cern,https://github.com/root-project/root/issues/13207,1,['clear'],['clearly']
Usability,"is works from the build directory but it then has issues once `make install` is ran. More details are in the comment copied at the end of this issue. I think this is an issue with root's install commands rather than the conda-recipe, but you can reproduce what I'm doing it docker by running:. ```bash; git clone https://github.com/chrisburr/root-feedstock.git; cd root-feedstock; git checkout llvm90-install-error; # Adjust CPU_COUNT as required; CPU_COUNT=192 ./build-locally.py --debug --output-id '*root_base*' linux_64_numpy1.16python3.8.____cpython; # When the container launches, look at the output and run the suggested command; # which will be of the form:; cd xxxxx && source xxxxx/build_env_setup.sh; source $RECIPE_DIR/build_root-base.sh; # Anything with ROOT will now fail, e.g.; root; # Rather than waiting to build again, you can roll back to before; # ""make install"" was ran by running; cd ../..; rm -rf $PWD/*; cp -rp $PWD.bak/* $PWD/; cd -; ```. >The command I'm running was simply `root` to get the interactive prompt. The full output of trying to run `1+2` is below:; >```log; >$ root -b -q -x -e 1+2; >input_line_1:1:2: fatal error: module 'libc' imported by AST file '/home/cburr/mambaforge/conda-bld/root_1609268594446/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placeh/lib/std.pcm' found in a different module map file (/home/cburr/mambaforge/conda-bld/root_1609268594446/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placeh/etc/cling/libc.modulemap) than when the importing AST file was built (/home/cburr/mambaforge/conda-bld/root_1609268594446/work/build-dir/etc/cling/libc.modulemap); >#include <new>; > ^; >input_line_1:1:2: note: imported by module 'std' in '/home/c",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7055:1254,simpl,simply,1254,https://root.cern,https://github.com/root-project/root/issues/7055,1,['simpl'],['simply']
Usability,"issues?q=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->; When passing a argument to a formula based RooFit function (e.g. `RooFormulaVar` or `RooGenericPdf`), RooFit will search for all occurrences of the object name in the formula and replace them with an ordinal parameter (needed for the underling `TFormula`). However, when the argument is a `RooConst` the name is just a string containing the value and this can break if there are numeric literals inside the formula.; For example; ```; RooFormulaVar f(""f"", ""2.7*@0"", RooFit::RooConst(2.)); ```; becomes inside the `TFormula`; ```; x[0].7*x[0]; ```; because the name 2 of the `RooConst` matched the 2 of the numeric literal. This of course breaks during formula compilation. ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->; The variables do not replace numeric literals no matter the name. Possibly `RooConst`s should be matched only by index?. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->; ```; RooFormulaVar f(""f"", ""2.7*@0"", RooFit::RooConst(2.)); ```. ### Setup; <!--; 1. ROOT version; 2. Operating system; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->; HEAD of ROOT 6.26 from LCG dev4. ### Additional context; <!--; Add any other context about the problem here.; -->; `RooFormulaVar f(""f"", ""2.7*@0"", RooFit::RooConst(2.7))` creates `x[0]*x[0]`, which is mostly fine but may break if servers are redirected",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11992:1162,clear,clear,1162,https://root.cern,https://github.com/root-project/root/issues/11992,1,['clear'],['clear']
Usability,it also makes things clearer when reading the tutorial code,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6102#issuecomment-666978548:21,clear,clearer,21,https://root.cern,https://github.com/root-project/root/pull/6102#issuecomment-666978548,2,['clear'],['clearer']
Usability,it could be also the the call to `gethostname` failed and there's simply garbage:; https://github.com/xrootd/xrootd/blob/master/src/XrdNet/XrdNetUtils.cc#L622. @Axel-Naumann : are there debug symbols on cvmfs? were the libs rebuild or installed from EPEL?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6948#issuecomment-760269958:66,simpl,simply,66,https://root.cern,https://github.com/root-project/root/issues/6948#issuecomment-760269958,2,['simpl'],['simply']
Usability,"ith SO_LoadedLast.; >; > I would appreciate if we can coordinate next time such breaking; > changes before asking for a llvm review and land patches in these; > particularly sensitive areas.; >; > I explicitly added you to the list of reviewers for the original ; > patch, there is little more I can do than that. And more coordination ; > is exactly what I am trying to do now. If we cannot reach a conclusion ; > may I at least be added to review whatever your solution looks like?; >; > 1. I plan to remove the NDEBUG assert; >; > Already done in D33529; >; > 2. Make the std::vector<void*> a; > std::vector<llvm::PointerIntPair<void*, 1, bool>>; >; > How can you guarantee that the platform will deliver a pointer with ; > proper alignment for that?; >; > 3. I will change the search order to search for first the one; > that are not marked RTLD_GLOBAL.; >; > So any other client that wants to open thing's with RTLD_LOCAL will ; > then expose what they thought were private symbols to the JIT as a whole?; >; > One of the issues is that it is not clear to me is what exactly is; > your use case and this is why there are misunderstandings.; >; > I also don't understand why there are mis-understandings, but have ; > explained the use case a few times now and *3* will explicitly break ; > that as well as provide bizarre default behavior:; >; > libc++.so, libA.so; > libA.so defines an overload for global operator new/delete; >; > |DynamicLibrary::getPermanentLibrary(NULL) // Other code; > DynamicLibrary::getPermanentLibrary(""libA.so"") |; >; > In your scheme the JIT can pull operator new/delete from libA.so,; > and worse is that whether it pulls operator new/delete from; > libA.so is dependent on whether operator new/delete has been; > resolved in *// Other code* before libA.so has been loaded.; >; > The example can be expanded to RTTI information, exceptions, and a ; > host of other problems.; >; No, this would not break the case you mentioned. The case that will ; have a special be",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/744#issuecomment-313802370:2296,clear,clear,2296,https://root.cern,https://github.com/root-project/root/pull/744#issuecomment-313802370,1,['clear'],['clear']
Usability,"ithDebInfo; Install path /usr/local; Compiler GNU 9.3.0; Compiler flags:; C -Wno-implicit-fallthrough -pipe -Wall -W -pthread -O3 -g -DNDEBUG; C++ -std=c++14 -Wno-implicit-fallthrough -Wno-noexcept-type -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread -O3 -g -DNDEBUG; Linker flags:; Executable -rdynamic; Module ; Shared -Wl,--no-undefined -Wl,--hash-style=""both"". -- Enabled support for: asimage builtin_afterimage builtin_clang builtin_cling builtin_llvm builtin_lz4 builtin_lzma builtin_nlohmannjson builtin_openssl builtin_openui5 builtin_pcre builtin_tbb builtin_vdt builtin_xxhash builtin_zstd ccache clad dataframe exceptions gdml http imt mlp pyroot roofit webgui root7 runtime_cxxmodules shared ssl tmva spectrum uring vdt x11; -- Configuring incomplete, errors occurred!; See also ""/home/max/projects/rootdev/root/new-build/CMakeFiles/CMakeOutput.log"".; See also ""/home/max/projects/rootdev/root/new-build/CMakeFiles/CMakeError.log"".; ```; <!--; A clear and concise description of what the wrong behavior is.; -->. ### Setup; * ROOT master; * Ubuntu 18.04; * gcc 9.3; * CMake 3.10.2; <!--; 1. ROOT master; 2. Operating system; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->. ### Possible fix; We could use a workaround similar to #5396 (this diff builds cleanly but is untested).; ```diff; diff --git a/cmake/modules/SearchInstalledSoftware.cmake b/cmake/modules/SearchInstalledSoftware.cmake; index 1778dba165..a6d51ddd6f 100644; --- a/cmake/modules/SearchInstalledSoftware.cmake; +++ b/cmake/modules/SearchInstalledSoftware.cmake; @@ -1779,7 +1779,9 @@ if (testing); add_dependencies(${lib} googletest); if(""${CMAKE_CXX_COMPILER_ID}"" STREQUAL ""GNU"" AND; ${CMAKE_CXX_COMPILER_VERSION} VERSION_GREATER_EQUAL 9); - target_compile_options(${lib} INTERFACE -Wno-deprecated-copy); + # TODO cmake 3.11; + #target_compile_options(${lib} INTERFACE -Wno-deprecated-copy); + SET_PROPERTY(TARGET ${lib} APPEND PROPERTY INTERFACE_COM",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7654:5495,clear,clear,5495,https://root.cern,https://github.com/root-project/root/issues/7654,1,['clear'],['clear']
Usability,jectroot.roottest.cling.template.roottest_cling_template_runtemplatefriend](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146424/testReport/projectroot.roottest.cling/template/roottest_cling_template_runtemplatefriend/); - [projectroot.roottest.python.cpp.roottest_python_cpp_advanced](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146424/testReport/projectroot.roottest.python/cpp/roottest_python_cpp_advanced/); - [projectroot.roottest.root.aclic.load.roottest_root_aclic_load_reload](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146424/testReport/projectroot.roottest.root.aclic/load/roottest_root_aclic_load_reload/); - [projectroot.roottest.root.aclic.misc.roottest_root_aclic_misc_assertROOT7027](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146424/testReport/projectroot.roottest.root.aclic/misc/roottest_root_aclic_misc_assertROOT7027/); - [projectroot.roottest.root.io.interface.roottest_root_io_interface_make](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146424/testReport/projectroot.roottest.root.io/interface/roottest_root_io_interface_make/); - [projectroot.roottest.root.meta.callfunc.roottest_root_meta_callfunc_assertUnload_auto](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146424/testReport/projectroot.roottest.root.meta/callfunc/roottest_root_meta_callfunc_assertUnload_auto/); - [projectroot.roottest.root.meta.cmsUnload.roottest_root_meta_cmsUnload_make](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146424/testReport/projectroot.roottest.root.meta/cmsUnload/roottest_root_meta_cmsUnload_make/); - [projectroot.roottest.root.selector.simple.roottest_root_selector_simple_runtestLoadingSelector](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146424/testReport/projectroot.roottest.root.selector/simple/roottest_root_selector_simple_runtestLoadingSelector/),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10294#issuecomment-1143358479:2450,simpl,simple,2450,https://root.cern,https://github.com/root-project/root/pull/10294#issuecomment-1143358479,4,['simpl'],['simple']
Usability,jectroot.roottest.cling.template.roottest_cling_template_runtemplatefriend](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/147284/testReport/projectroot.roottest.cling/template/roottest_cling_template_runtemplatefriend/); - [projectroot.roottest.python.cpp.roottest_python_cpp_advanced](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/147284/testReport/projectroot.roottest.python/cpp/roottest_python_cpp_advanced/); - [projectroot.roottest.root.aclic.load.roottest_root_aclic_load_reload](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/147284/testReport/projectroot.roottest.root.aclic/load/roottest_root_aclic_load_reload/); - [projectroot.roottest.root.aclic.misc.roottest_root_aclic_misc_assertROOT7027](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/147284/testReport/projectroot.roottest.root.aclic/misc/roottest_root_aclic_misc_assertROOT7027/); - [projectroot.roottest.root.io.interface.roottest_root_io_interface_make](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/147284/testReport/projectroot.roottest.root.io/interface/roottest_root_io_interface_make/); - [projectroot.roottest.root.meta.callfunc.roottest_root_meta_callfunc_assertUnload_auto](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/147284/testReport/projectroot.roottest.root.meta/callfunc/roottest_root_meta_callfunc_assertUnload_auto/); - [projectroot.roottest.root.meta.cmsUnload.roottest_root_meta_cmsUnload_make](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/147284/testReport/projectroot.roottest.root.meta/cmsUnload/roottest_root_meta_cmsUnload_make/); - [projectroot.roottest.root.selector.simple.roottest_root_selector_simple_runtestLoadingSelector](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/147284/testReport/projectroot.roottest.root.selector/simple/roottest_root_selector_simple_runtestLoadingSelector/),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10294#issuecomment-1153748598:2450,simpl,simple,2450,https://root.cern,https://github.com/root-project/root/pull/10294#issuecomment-1153748598,4,['simpl'],['simple']
Usability,jectroot.roottest.python.cpp.roottest_python_cpp_advanced](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146660/testReport/projectroot.roottest.python/cpp/roottest_python_cpp_advanced/); - [projectroot.roottest.root.aclic.load.roottest_root_aclic_load_reload](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146660/testReport/projectroot.roottest.root.aclic/load/roottest_root_aclic_load_reload/); - [projectroot.roottest.root.aclic.misc.roottest_root_aclic_misc_assertROOT7027](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146660/testReport/projectroot.roottest.root.aclic/misc/roottest_root_aclic_misc_assertROOT7027/); - [projectroot.roottest.root.io.interface.roottest_root_io_interface_make](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146660/testReport/projectroot.roottest.root.io/interface/roottest_root_io_interface_make/); - [projectroot.roottest.root.meta.callfunc.roottest_root_meta_callfunc_assertUnload_auto](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146660/testReport/projectroot.roottest.root.meta/callfunc/roottest_root_meta_callfunc_assertUnload_auto/); - [projectroot.roottest.root.meta.cmsUnload.roottest_root_meta_cmsUnload_make](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146660/testReport/projectroot.roottest.root.meta/cmsUnload/roottest_root_meta_cmsUnload_make/); - [projectroot.roottest.cling.template.roottest_cling_template_runtemplatefriend](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146660/testReport/projectroot.roottest.cling/template/roottest_cling_template_runtemplatefriend/); - [projectroot.roottest.root.selector.simple.roottest_root_selector_simple_runtestLoadingSelector](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146660/testReport/projectroot.roottest.root.selector/simple/roottest_root_selector_simple_runtestLoadingSelector/),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10294#issuecomment-1144990827:2450,simpl,simple,2450,https://root.cern,https://github.com/root-project/root/pull/10294#issuecomment-1144990827,4,['simpl'],['simple']
Usability,"jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. I have my own project that uses ROOT (and Python); my CMakeList file contains following ilnes ; ```; find_package(ROOT 6 CONFIG REQUIRED ); ...; find_package(Python3 ${PY3VERSION_ROOT} COMPONENTS Interpreter Development NumPy). ```; And it build, works, and everything is fine . To follow up development in ROOT, I regularly rebuild my project using ROOT version from LCG nighlies dev3 build. And starting from Tuesday, August 31 I have a build error - numpy i snot found. ```; -- Could NOT find Python3 (missing: Python3_NumPy_INCLUDE_DIRS NumPy) (found suitable version ""3.9.6"", minimum required is ""3.9.6""); ```. As a result all binaries/libraries in my project are invalid and result in segfaults. . It is not clear if this is ROOT,CMAKE or LCG-nighlies problem. . ### Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->. for ROOT-based project ; cmake does not find NumPy for dev3 LCG nighlies built Staring form August 31, 2021 . ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->. cmake should find NumPy . ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->. 1. lxplus.cern.ch ; 2. source /cvmfs/sft.cern.ch/lcg/views/dev3/Tue/x86_64-centos7-gcc9-opt/setup.sh; 3. any CMAKe project with these two ilnes included ; ```; find_package(ROOT 6 CONFIG REQUIRED ); ...; find_package(Python3 3.6.9 COMPONENTS Interpreter Development NumPy); ```. ### Setup; <!--; 1. ROOT version; 2. Operating system; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8942:1160,clear,clear,1160,https://root.cern,https://github.com/root-project/root/issues/8942,1,['clear'],['clear']
Usability,"kEntryBeyondEnd is what is expected to be set at the end of a `while(r.Next())` event loop. This change is not backward-compatible if anyone relied on `kEntryNotFound` being set even at the end of a well-behaved event loop. On the other hand, the second usage example in TTreeReader's docs (https://root.cern/doc/master/classTTreeReader.html) as well as the names of the enum values seem to indicate that `kEntryNotFound` is an error state and `kEntryBeyondEnd` is what indicates a normal completion of the event loop. P.S.; to be clear, the problem I'm trying to solve is that in the current state it's hard (maybe impossible) to distinguish between a TTreeReader event loop that ended well and one that ended because an entry that was supposed to be there was not found",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8747:531,clear,clear,531,https://root.cern,https://github.com/root-project/root/pull/8747,1,['clear'],['clear']
Usability,"ke_canvas.C; namespace root_global { ; unique_ptr<TCanvas> c1;; }. void make_canvas() {; // we decide at the top level to use a global here:; my_subroutine(root_global::c1);. //This one doesn't use a global and will die, our choice; unique_ptr<TCanvas> local_canvas;; my_subroutine(local_canvas);; }; ```; or if being a little more lazy, I'd likely use static instead of the namespace, but the root interpreter doesn't respect translation unit boundaries well. Really I'd use a class though in case I need to add more global things easily:. ```; //display.h. class display {; private:; unique_ptr<TCanvas> c1;; public:; void make_canvas() {; c1.reset(); ; c1.reset(new TCanvas());; }; };; ```; And use it like:; ```; //make_display.C; #include ""display.h"". namespace root_global { ; display my_display;; }. // main routine:; void make_display() { ; // This one will stick around; root_global::my_display.make_canvas();. // This one wont. ; display local_display;; local_display.make_canvas();; }; ```. There are two main differences compared to the PR. 1) I'm not letting the subroutine allocate heap objects that aren't handled explicitly by the caller. 2) I'm using standard C++ that even works fine right now in root 6. That's nice because it's easier to learn, recognize, understand, and apply elsewhere. Maybe it's a bonus that syntax for creating the TCanvas is always the same and separated from syntax for keeping it. Maybe (1) can be done with RDirectory, and just isn't done in the PR example. I don't know enough about it. If the root objects all had some kind of empty non-displayed initial state, and their own reset() re-initializer, we wouldn't even need the unique_ptr. . Of course you could still end up calling make_display() as a subtroutine from another file, and if you do then it's still become a subroutine allocating ""its own"" heap objects. I just wouldn't, but with a little extra work for the usual extern declarations you could still access the memory elsewhere if you did.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7305#issuecomment-787621241:1918,learn,learn,1918,https://root.cern,https://github.com/root-project/root/pull/7305#issuecomment-787621241,2,['learn'],['learn']
Usability,"l::RDF::InterpreterCalc(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) (in /home/axel/build/root/24/rel/lib/libROOTDataFrame.so); ==30221== by 0x48FA766: ROOT::Detail::RDF::RLoopManager::Jit() (in /home/axel/build/root/24/rel/lib/libROOTDataFrame.so); ==30221== by 0x49030D3: ROOT::Detail::RDF::RLoopManager::Run() (in /home/axel/build/root/24/rel/lib/libROOTDataFrame.so); ==30221== by 0x153A71: SimpleParallelRDFs()::{lambda()#1}::operator()() const [clone .isra.0] (in /home/axel/build/root/24/rel/tree/dataframe/test/dataframe_concurrency); ==30221== by 0x153AD5: std::_Function_handler<void (unsigned int), std::vector<std::result_of<SimpleParallelRDFs()::{lambda()#1} ()>::type, std::allocator<std::result_of<SimpleParallelRDFs()::{lambda()#1} ()> > > ROOT::TThreadExecutor::MapImpl<SimpleParallelRDFs()::{lambda()#1}, void>(std::result_of, unsigned int)::{lambda(unsigned int)#1}>::_M_invoke(std::_Any_data const&, unsigned int&&) (in /home/axel/build/root/24/rel/tree/dataframe/test/dataframe_concurrency); ==30221== by 0x4AD5362: tbb::interface9::internal::start_for<tbb::blocked_range<unsigned int>, tbb::internal::parallel_for_body<std::function<void (unsigned int)>, unsigned int>, tbb::auto_partitioner const>::execute() (in /home/axel/build/root/24/rel/lib/libImt.so); ==30221== by 0x670D544: ??? (in /usr/lib/x86_64-linux-gnu/libtbb.so.2); ==30221== by 0x670D80E: ??? (in /usr/lib/x86_64-linux-gnu/libtbb.so.2); ==30221== by 0x670AB67: ??? (in /usr/lib/x86_64-linux-gnu/libtbb.so.2); ==30221== by 0x4AD339E: tbb::interface7::internal::delegated_function<ROOT::TThreadExecutor::ParallelFor(unsigned int, unsigned int, unsigned int, std::function<void (unsigned int)> const&)::{lambda()#1}::operator()() const::{lambda()#1} const, void>::operator()() const (in /home/axel/build/root/24/rel/lib/libImt.so); ==30221== by 0x6706ED8: tbb::interface7::internal::is",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8899:4020,Simpl,SimpleParallelRDFs,4020,https://root.cern,https://github.com/root-project/root/issues/8899,3,['Simpl'],['SimpleParallelRDFs']
Usability,"lLValue.cxx#L93) or [this line in the code](https://github.com/root-project/root/blob/98f6c2f17918a5fcf16f84d6d64a3dd1f11d0fab/roofit/roofitcore/src/RooAbsRealLValue.cxx#L132), where I found that RooFit actually adds `1e-6` to either side of that comparison. I couldn't find this documented anywhere, and I'm not really sure why it's there to begin with, but maybe someone here with more knowledge of the code has a reason for why this is the way it is. This is less of a bug and more a lack of documentation. I would also consider the second implementation of `inRange` [here](https://github.com/root-project/root/blob/98f6c2f17918a5fcf16f84d6d64a3dd1f11d0fab/roofit/roofitcore/src/RooAbsRealLValue.cxx#L493) troubling, as it adds an `epsilon = 1e-8 * fabs(val)` to the comparison (and switches from `<` to `<=`. Again, maybe this is intentional, but these will certainly give different results in edge cases. The assignment operator uses the first one. ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->; I expect the following behavior:; ```; RooRealVar t1(""t1"", ""Some variable"", 0.001, 1.0);; t1 = 0.000998;; cout << t1.getVal() << endl;; // returns 0.001 since it's outside the range specified; t1 = 0.000999;; cout << t1.getVal() << endl;; // should also return 0.001, since it's outside the range; ```. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->; ```; RooRealVar t1(""t1"", ""Some variable"", 0.001, 1.0);; t1 = 0.000999;; cout << t1.getVal() << endl;; // returns 0.000999; // lest this be attributed to some floating point arithmetic:; t1 = 0.0009990000;; cout << t1.getVal() << endl;; // yields 0.000999 but; t1 = 0.0009999999;; cout << t1.getVal() << endl;; // yields 0.0001 as expected; ```. ### Setup; <!--;",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11954:1857,clear,clear,1857,https://root.cern,https://github.com/root-project/root/issues/11954,1,['clear'],['clear']
Usability,"large originally independent package are the (debatable) exceptions (roofit, tmva), otherwise we request for all files to have the same copyright and licenses. for simplicity and clarity. thanks.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1712#issuecomment-371599798:164,simpl,simplicity,164,https://root.cern,https://github.com/root-project/root/pull/1712#issuecomment-371599798,2,['simpl'],['simplicity']
Usability,"ld/AnalysisBaseExternals/src/Python/Include/cpython/abstract.h:127; #39 _PyObject_FastCall (nargs=1, args=0x7ffdb628f890, func=0x7faf4b960e80); at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Include/cpython/abstract.h:147; ...; ```. Unfortunately all I could decipher from this is that things go south while accessing the `DataVector<xAOD::TauJet_v3>` type in Python. That access itself happens in a fairly complicated way itself, in this helper code:. https://gitlab.cern.ch/atlas/athena/-/blob/master/Control/xAODRootAccess/python/GenerateDVIterators.py. As before, I found that by explicitly accessing types ""in the right order"", I can work around the issue. (See: https://gitlab.cern.ch/atlas/athena/-/merge_requests/44843) But I'd really like to understand what the underlying issue actually is. Note that this problem only shows up in a debug build. In an optimised build the test in question runs just fine. ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->. The code should not encounter an assertion inside LLVM/Cling. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->. Unfortunately this would be pretty involved to describe. :frowning: Especially the setup that I used with Cling compiled in Debug mode. So I'm rather just hoping for input on how I myself could debug this further. ### Setup; <!--; 1. ROOT version; 2. Operating system; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->; - ROOT 6.24/00; - `x86_64-centos7-gcc8-dbg`; - ROOT built using: https://gitlab.cern.ch/atlas/atlasexternals/-/tree/master/External/ROOT. ### Additional context; <!--; Add any other context about the problem here.; -->. I guess my quest",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8578:11495,clear,clear,11495,https://root.cern,https://github.com/root-project/root/issues/8578,1,['clear'],['clear']
Usability,"le analytical answer), but it turned out that it's not possible to set bounds for it. [RooUniform](https://root.cern/doc/master/classRooUniform.html) creates a uniform distribution for the whole range of its variable (or many variables in the case of many dimensions). On the [forum](https://root-forum.cern.ch/t/rooaddpdf-sum-of-uniform-distributions/18927/2) @lmoneta writes in 2015: ""You cannot really assign weights to a RooUniformPdf."" (but probably this has already changed, because I see that it is a subclass of RooAbsPdf, like RooGaussian). ### Describe the solution you'd like; Change the constructor to. RooUniform(const char *name, const char *title, RooAbsReal &x_low, RooAbsReal &x_up). One- and multidimensional uniform distributions should become separate (like [RooGaussian](https://root.cern/doc/master/classRooGaussian.html) and [RooMultiVarGaussian](https://root.cern/doc/master/classRooMultiVarGaussian.html) (note also a spurious line break in its docs)). Probably there is even no need for the multidimensional uniform distribution, since it's just a product of one-dimensional pdfs (if you don't model complicated support shapes). The uniform (rectangular) distribution is just one of pdfs (see Wikipedia, [Continuous uniform distribution](https://en.wikipedia.org/wiki/Continuous_uniform_distribution)). It is a normal pdf, and its parameters are its lower and upper bounds. They should be set like other pdf parameters in RooFit. ### Describe alternatives you've considered; I think that there are no alternatives. No reason to model this with step functions or histograms. The uniform distribution is a simple and pretty basic probability distribution. ### Additional context; I [asked about this on the forum](https://root-forum.cern.ch/t/uniform-rectangular-pdf-with-variable-range/44232), but now as I better understand RooFit and as I see no answers for RooUniform, I think this is the only solution. P.S. There is a spurious line break in RooUniform class description.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7880:1766,simpl,simple,1766,https://root.cern,https://github.com/root-project/root/issues/7880,1,['simpl'],['simple']
Usability,"lear and concise description of what the wrong behavior is.; -->. I have some data in RDataFrame, and I want to fit them using RooFit. I book a `RooDataSet` using the `RooDataSetHelper` like this; ```cpp; auto data_set = df.Book<double, double>(; RooDataSetHelper(""data_set"", ""title"", RooArgSet(var1, var2)), {""var1"", ""var2""});; ```; The fit is wrong because the `data_set` doesn't respect the limits on `var1` and `var2`, resulting in an incorrect normalization. The only difference in the following simplified fits is that I used; ```cpp; auto data_set = df.Book<double, double>(; ```; for the first one, and ; ```cpp; auto data_set = df.Filter(""var2>2005 && var2<2020"").Book<double, double>(; ```; for the second one. ![all_wrong](https://user-images.githubusercontent.com/23052054/180235896-9f9d8cdb-5804-4567-9f0f-e1279c141777.png); ![all_right](https://user-images.githubusercontent.com/23052054/180235919-42ba997b-7bcb-4462-8b81-eab405454b1d.png). ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->; I expected the RooDataSet to account for the RooRealVar range. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->; 1. Get any `RDataFrame`; 2. Create a `RooRealVar` with limits narrower than the corresponding data in the `RDataFrame`; 3. Use `RooDataSetHelper` to book a `RooDataSet` from the `RDataFrame` using the `RooRealVar`; 4. Fit the `RooRealVar` of the `RooDataSet`; 5. The fit will be wrong unless you cut on the `RDataFrame` to match the limits of the `RooRealVar`. ### Setup; <!--; 1. ROOT version; 6. Operating system; 7. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->; ROOT 6.26/04; macOS 12.4; Brew install. ### Additional context; <!--; Add any other cont",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11017:1378,clear,clear,1378,https://root.cern,https://github.com/root-project/root/issues/11017,1,['clear'],['clear']
Usability,"led support for: asimage builtin_clang builtin_cling builtin_llvm builtin_nlohmannjson builtin_openui5 builtin_unuran builtin_vdt builtin_xrootd builtin_xxhash clad dataframe davix dcache exceptions fftw3 fitsio fortran gdml gfal gnuinstall gsl_shared gviz http fcgi mathmore mlp minuit2 mysql odbc opengl pgsql pyroot pythia8 r roofit webgui rpath shadowpw shared soversion sqlite ssl tmva tmva-pymva tmva-rmva spectrum unuran vdt x11 xml xrootd; ```; with the error; ```; [ 71%] Linking CXX executable ../bin/rootcling; /usr/bin/ld: ../lib/libCling.so.6.26.04: undefined reference to `typeinfo for clang::sema::FunctionScopeInfo' ; collect2: error: ld returned 1 exit status; make[4]: *** [main/CMakeFiles/rootcling.dir/build.make:101: bin/rootcling] Error 1; ```. This looks like an incompatibility between clang and cling - which both are builtin.; Building in a 20.04 `pbuilder` sandbox succeeds (same set of features as above, minus `webgui`, btw). ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->; The same set of build instructions (with identical dependencies) succeeds on Debian 11 Bullseye and 10 Buster, with; ```; -- Enabled support for: asimage builtin_clang builtin_cling builtin_llvm builtin_nlohmannjson builtin_openui5 builtin_unuran builtin_vdt builtin_xrootd builtin_xxhash clad dataframe davix dcache exceptions fftw3 fitsio fortran gdml gfal gnuinstall gsl_shared gviz http fcgi mathmore mlp minuit2 mysql odbc opengl pgsql pyroot pythia8 r roofit rpath shadowpw shared soversion sqlite ssl tmva tmva-pymva tmva-rmva spectrum unuran vdt x11 xml xrootd; ```. (`webgui` is missing for a yet unknown reason). ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->. Install required and optional dependencie",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10777:1557,clear,clear,1557,https://root.cern,https://github.com/root-project/root/issues/10777,1,['clear'],['clear']
Usability,"lines regarding the integrals indicates that the model after the fit does not describe data well, despite a small EDM):. ```; Param of Interest: RawRDst; Saving PDF snapshot; DEBUG: BEFORE FIT:; 89215 data, 	73919.4 model; integral: 73919.4; ==============================; Minimizing the Minuit (Migrad). ... 6.97828e-06; Fit ran with status 0; Stat error on R(D*) is 0.000011; EDM at end was 0.000007; RooArgList:: = (Lumi,Nmu,RawRDst,alpha_BFD1); CURRENT NUISANCE PARAMETERS:; 0: Lumi			 = 3 +/- 1.68695e-05; 1: Nmu			 = 1e+06 +/- 5.62344; 3: alpha_BFD1			 = 3 +/- 0.000235825. 4x4 matrix is as follows. | 0 | 1 | 2 | 3 |; ---------------------------------------------------------; 0 | 1 -1.634e-08 7.913e-15 -8.172e-09 ; 1 | -1.634e-08 1 1.04e-08 -2.452e-08 ; 2 | 7.913e-15 1.04e-08 1 -9.891e-07 ; 3 | -8.172e-09 -2.452e-08 -9.891e-07 1 . Stopwatch: fit ran in 0.589563 seconds with 0.843554 seconds in prep; DEBUG: AFTER FIT:; 89215 data, 	4.92006e+06 model; integral: 7.56395e-83; ```. ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->. The fit converges. ### To Reproduce. We have our demo fitter publicly available at: https://github.com/umd-lhcb/histfactory-fitter-demo/tree/dev. The `dev` branch contains our latest development. The baseline fit was performed with `make fit-noshapes` so all shape variations are turned off. ### Setup. 1. ROOT version: 6.28.02; 2. Operating system: NixOS (Linux) with `gcc12`; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. We build our self with the help of `nix`. ### Additional information. We noticed that newer ROOT started to use `RooBinWidthFunction` to support histogram templates with arbitrary binning scheme:. https://github.com/root-project/root/commit/dc65afe00ec72d18ebc5d31e7b2d6b50c6a20423#diff-42ea09980f1ed2bacde4381f212c35d78be6ddedccf746953dc99d6455525d8aL1256-R1221. Maybe there's a bug when introducing `RooBinWidthFunction`?. FYI @guitargeek",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12729:1873,clear,clear,1873,https://root.cern,https://github.com/root-project/root/issues/12729,1,['clear'],['clear']
Usability,"lines).; For example: from the main page I can see a link to the documentation,; https://root.cern/d/documentation.html; If I delete the last part, I get; https://root.cern/d/; which is a) meaningless b) same as the main page. ; The third link to that same page is ; https://root.cern/d/index.html. Surprisingly, the link; https://root.cern/index.html; has different contents!. Probably there is little surprise that there exists the 2nd version of the site,; https://root.cern.ch/ (with its own index.html, and all these links).; I think there should be one canonical link, and other links should redirect to that. . 2a) https://root.cern/d/documentation.html ; should ideally become just ; https://root.cern/documentation. 2b) or all documentation should be put into one directory with a clearer name, like; https://root.cern/doc/; In that case the manual (and other docs) should also be in that directory, not at; https://root.cern/manual/. 3a) User Guide is located at; https://root.cern/d/guides/users-guide.html; On parent path; https://root.cern/d/guides/; there is an automatic list of guides (which is better than nothing/forbidden), but it would be better if it was not automatic (had the same design as the other site). 3b) the same for; https://root.cern/doc/; (automatic list). 4\) As I understand, the main page for documentation is; https://root.cern.ch/d/documentation.html; There is also; https://root.cern/doc/master/; these two pages should probably be one page. 5\) Rearrange ""Provide your feedback""; I think github issues should go before the Forum in the list of options (if there are really two ways), because one can see closed and open issues (on the Forum I found several complaints about the links, but it's not clear whether they are open or closed without opening them). 6\) From the documentation page ""A number of topical User Guides and Manuals for various components of the system."" leads to; https://root.cern/get_started/; which, in turn, repeats description of som",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7282:1265,guid,guides,1265,https://root.cern,https://github.com/root-project/root/issues/7282,2,['guid'],"['guide', 'guides']"
Usability,"ls using AD. This commits adds support for including analytical integrals into the mock code-squashing test by introducing a private header that stores the stateless implementation details.; [RF][HS3] Consistent range for nominal alpha params with HistFactory; [RF][HS3] Remember simultaneous channel names when writing JSON; [RF][HS3] Avoid turning RooConstVar into RooRealVar in JSON roundtrip; [RF][HS3] Use `RooConstVar` for sigma parameters in HF constraints; [RF][HS3] Don't mix up free functions and class impl in JSON tool; [RF][HS3] Consistently have implicit fallback for HistFactory variables; [RF][HS3] Don't import datasets that are parts of a combined dataset; [RF][HS3] Some code simplification in `RooJSONFactoryWSTool`; [RF][HS3] Generate input file for testHS3HistFactory on the fly; [RF][HS3] Improvements to the HS3 HistFactory implementation; [RF] Use `std::vector` diretly in RooVectorDataStore::RealFullVector; [RF][HS3] Some refactoring for less lines of code; [RF][HS3] Ordering fixes; [RF][HS3] Achieved closure for ATLAS ttW workspace; [RF][HS3] Sorting distributions; [RF][HS3] Bugfixes for histfactory workspaces; [RF][HS3] Small renamings; [RF][HS3] Improved attribute handling, caught some typecast-errors; [RF][HS3] Bugfix for FlexibleInterpVar; [RF] Avoid unnecessary warnings in `FlexibleInterpVar::setInterpCode`; [RF] Enable analytic integration of RooHistPdfs with RooLinearVars; [RF] Replace `RooAbsReal::_lastNSet` pointer with ID of last normSet; [RF] Remove `evaluateSpan()` from RooGenericPdf and RooFormulaVar; [RF][HS3] Re-retrieve element after exporting dependants; [RF][HS3] Don't write `histfactory_dist` axes redundantly; [RF] Exclude RooHistError from IO; [RF] Remove `add(row, weight, weightError)` from RooAbsData interface; [RF] Code-format `testRooDataHist.cxx`; [RF][HS3] Change analysis and likelihoods fields to match HS3 standard; [RF] Remove native buffers from `RooVectorDataStore::RealFullVector`; [RF] Modernize `RooVectorDataStore::RealF",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12590#issuecomment-1491813664:2723,simpl,simplification,2723,https://root.cern,https://github.com/root-project/root/pull/12590#issuecomment-1491813664,4,['simpl'],['simplification']
Usability,"lumns are re-definable. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->. 1. Generate a file containing a simple tree containing a `std::vector<Float_t>` branch:. `gen_tree.C`; ```C++; #include <Rtypes.h>; #include <TFile.h>; #include <TTree.h>; #include <TBranch.h>. #include <vector>; #include <string>; #include <cstdlib>; #include <iostream>. void gen_tree(const std::string pathFile = ""file_float_vector.root"") {; 	TFile *tfOut = TFile::Open(pathFile.c_str(), ""RECREATE"");; 	tfOut->cd();; 	TTree *ttOut = new TTree(""Events"", ""Tree of float vectors"");; 	std::vector<Float_t> vTest(8);; 	vTest.clear();; 	ttOut->Branch(""TestVar"", &vTest);; 	constexpr size_t nEntries = 100;; 	for (size_t jEntry = 0; jEntry < nEntries; ++jEntry) {; 		const Float_t var0 = rand() / static_cast<Float_t>(RAND_MAX);; 		const size_t nVar = rand() % 8;; 		std::cerr << ""jEntry: "" << jEntry << ""\tnVar: "" << nVar << ""\tvar0: "" << var0 << std::endl;; 		vTest.resize(nVar, 0.);; 		for (size_t iVar = 0; iVar < nVar; ++iVar) {; 			vTest[iVar] = var0 + 0.125 * iVar;; 			std::cerr << vTest[iVar] << "" "" << std::flush;; 		}; 		std::cerr << std::endl;; 		ttOut->Fill();; 	}; 	ttOut->Write();; 	tfOut->Close();; }; ```; 2. Read with `RDataFrame`, define a column, redefine it, and save the two columns to histograms:; `reproduce.C`; ```C++; #include <Rtypes.h>; #include <TFile.h>; #include <TTree.h>; #include <TBranch.h>; #include <TH1.h>; #include <ROOT/RDataFrame.hxx>. #include <vector>; #include <string>. void reproduce(const std::string pathFileIn = ""file_float_vector.root"", const std::string pathFileOut = ""file_out.root"") {; 	TFile *tfIn = TFile::Open(pathFileIn.c_str());; 	TTree *ttIn = tfIn->Get<TTree>(""Events"");; 	ROOT::RDataFrame dfIn(*ttIn);; 	std::cerr << ""Creating a custom c",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8857:1429,clear,clear,1429,https://root.cern,https://github.com/root-project/root/issues/8857,1,['clear'],['clear']
Usability,m () from /lib64/libc.so.6; #2 0x00007f6cdecce102 in TUnixSystem::StackTrace() () from /cvmfs/atlas-nightlies.cern.ch/repo/sw/21.0_Athena_x86_64-centos7-gcc62-opt/sw/lcg/releases/ROOT/6.08.06-d7e12/x86_64-centos7-gcc62-opt/lib/libCore.so; #3 0x00007f6cdecd061c in TUnixSystem::DispatchSignals(ESignals) () from /cvmfs/atlas-nightlies.cern.ch/repo/sw/21.0_Athena_x86_64-centos7-gcc62-opt/sw/lcg/releases/ROOT/6.08.06-d7e12/x86_64-centos7-gcc62-opt/lib/libCore.so; #4 <signal handler called>; #5 0x0000000001209080 in ?? (); #6 0x00007f6cdec52005 in TList::FindObject(TObject const*) const () from /cvmfs/atlas-nightlies.cern.ch/repo/sw/21.0_Athena_x86_64-centos7-gcc62-opt/sw/lcg/releases/ROOT/6.08.06-d7e12/x86_64-centos7-gcc62-opt/lib/libCore.so; #7 0x00007f6cdec5237c in TList::Clear(char const*) () from /cvmfs/atlas-nightlies.cern.ch/repo/sw/21.0_Athena_x86_64-centos7-gcc62-opt/sw/lcg/releases/ROOT/6.08.06-d7e12/x86_64-centos7-gcc62-opt/lib/libCore.so; #8 0x00007f6cdec50a01 in THashTable::Clear(char const*) () from /cvmfs/atlas-nightlies.cern.ch/repo/sw/21.0_Athena_x86_64-centos7-gcc62-opt/sw/lcg/releases/ROOT/6.08.06-d7e12/x86_64-centos7-gcc62-opt/lib/libCore.so; #9 0x00007f6cdec504dd in THashList::Clear(char const*) () from /cvmfs/atlas-nightlies.cern.ch/repo/sw/21.0_Athena_x86_64-centos7-gcc62-opt/sw/lcg/releases/ROOT/6.08.06-d7e12/x86_64-centos7-gcc62-opt/lib/libCore.so; #10 0x00007f6cdec9d1a7 in TListOfDataMembers::Unload() () from /cvmfs/atlas-nightlies.cern.ch/repo/sw/21.0_Athena_x86_64-centos7-gcc62-opt/sw/lcg/releases/ROOT/6.08.06-d7e12/x86_64-centos7-gcc62-opt/lib/libCore.so; #11 0x00007f6cdec7f2d0 in TClass::SetUnloaded() () from /cvmfs/atlas-nightlies.cern.ch/repo/sw/21.0_Athena_x86_64-centos7-gcc62-opt/sw/lcg/releases/ROOT/6.08.06-d7e12/x86_64-centos7-gcc62-opt/lib/libCore.so; #12 0x00007f6cdec4a574 in ROOT::RemoveClass(char const*) () from /cvmfs/atlas-nightlies.cern.ch/repo/sw/21.0_Athena_x86_64-centos7-gcc62-opt/sw/lcg/releases/ROOT/6.08.06-d7e12/x86_64-cento,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/15964#issuecomment-2202499805:1641,Clear,Clear,1641,https://root.cern,https://github.com/root-project/root/issues/15964#issuecomment-2202499805,1,['Clear'],['Clear']
Usability,"m to affect fit results, which are the same before and after 6.28.; Instead, the problem is that those integrals may not be easy to compute: this issue was noticed because among the extra integrals was a complex numeric integral that had to be evaluated at each event in the dataset, was extremely slow, and in practice caused the fit to never converge. ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->; No extra integrals over unnamed ranges, passing the full range to fitTo does not add integrals, calling `fixAddCoefRange` removes all coefnorm integrals. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->; ```Python; import ROOT; from ROOT.RooFit import RooConst. # in this simple example the symptoms are only in the logs, in the names of the integrals evaluated; ROOT.RooMsgService.instance().addStream(ROOT.RooFit.INFO, Topic = ROOT.RooFit.Integration). x = ROOT.RooRealVar('x', '', 0, 1). g = ROOT.RooGaussian('g', '', x, RooConst(0.5), RooConst(0.2)); u = ROOT.RooUniform('u', '', x). f = ROOT.RooRealVar('f', '', 0.5, 0, 1); a = ROOT.RooAddPdf('a', '', [g, u], [f]). dt = a.generate({x}, NumEvents = 1000). x.setRange('limited', 0.2, 0.8); x.setRange('full', 0, 1). a.fitTo(dt, Range = 'full', PrintLevel = -1). a.fitTo(dt, Range = 'limited', PrintLevel = -1). a.fixAddCoefRange('full'); a.fitTo(dt, Range = 'full', PrintLevel = -1). a.fixAddCoefRange('limited'); a.fitTo(dt, Range = 'limited', PrintLevel = -1). ```; Compare 6.26 with master. ### Setup; <!--; 1. ROOT version; 2. Operating system; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->; ROOT 6.26 from LCG 102b; ROOT master from LCG dev3. ### Additional context; <!--; Add any other context about the p",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12645:2473,simpl,simple,2473,https://root.cern,https://github.com/root-project/root/issues/12645,1,['simpl'],['simple']
Usability,"m with linking libraries:. [100%] Linking CXX shared library ../../lib/libRMySQL.so; ld: library not found for -lzlib; clang: error: linker command failed with exit code 1 (use -v to see invocation); make[2]: *** [lib/libRMySQL.6.28.04.so] Error 1; make[1]: *** [sql/mysql/CMakeFiles/RMySQL.dir/all] Error 2; make: *** [all] Error 2. However, this library is present in the system and during the cmake it is found:; cmake:; -- Looking for ZLib; -- Found ZLIB: /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX13.3.sdk/usr/lib/libz.tbd (found version ""1.2.11""). The temporary, one-time solution that worked for me was to edit the file created by cmake:; [build directory]/sql/mysql/CMakeFiles/RMySQL.dir/link.txt; I removed the ""-lzlib -lzstd"" part from the list of libraries and the link completed without problems. It looks like the problem is in the build system; Best regards.; Yury. - [ ] Checked for duplicates; <!--; Please search in; * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->. ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->. ### Setup; <!--; 1. ROOT version; 2. Operating system; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->. ### Additional context; <!--; Add any other context about the problem here.; -->",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12820:1366,clear,clear,1366,https://root.cern,https://github.com/root-project/root/issues/12820,2,['clear'],['clear']
Usability,miliMinimize.h Minuit2/MnFunctionCross.h Minuit2/MnGlobalCorrelationCoeff.h Minuit2/MnHesse.h Minuit2/MnLineSearch.h Minuit2/MnMachinePrecision.h Minuit2/MnMatrix.h Minuit2/MnMigrad.h Minuit2/MnMinimize.h Minuit2/MnMinos.h Minuit2/MnParabola.h Minuit2/MnParabolaFactory.h Minuit2/MnParabolaPoint.h Minuit2/MnParameterScan.h Minuit2/MnPlot.h Minuit2/MnPosDef.h Minuit2/MnPrint.h Minuit2/MnRefCountedPointer.h Minuit2/MnReferenceCounter.h Minuit2/MnScan.h Minuit2/MnSeedGenerator.h Minuit2/MnSimplex.h Minuit2/MnStrategy.h Minuit2/MnTiny.h Minuit2/MnTraceObject.h Minuit2/MnUserCovariance.h Minuit2/MnUserFcn.h Minuit2/MnUserParameterState.h Minuit2/MnUserParameters.h Minuit2/MnUserTransformation.h Minuit2/MnVectorTransform.h Minuit2/ModularFunctionMinimizer.h Minuit2/NegativeG2LineSearch.h Minuit2/Numerical2PGradientCalculator.h Minuit2/ParametricFunction.h Minuit2/ScanBuilder.h Minuit2/ScanMinimizer.h Minuit2/SimplexBuilder.h Minuit2/SimplexMinimizer.h Minuit2/SimplexParameters.h Minuit2/SimplexSeedGenerator.h Minuit2/SinParameterTransformation.h Minuit2/SqrtLowParameterTransformation.h Minuit2/SqrtUpParameterTransformation.h Minuit2/StackAllocator.h Minuit2/VariableMetricBuilder.h Minuit2/VariableMetricEDMEstimator.h Minuit2/VariableMetricMinimizer.h Minuit2/VectorOuterProduct.h TMinuit2TraceObject.h /mnt/build/workspace/root-pullrequests-build/root/math/minuit2/inc/LinkDef.h ; - [2020-10-25T10:36:13.979Z] /mnt/build/workspace/root-pullrequests-build/build/include/Minuit2/MnPrint.h:130:69: error: use of undeclared identifier 't' ; - [2020-10-25T10:36:13.979Z] /mnt/build/workspace/root-pullrequests-build/build/include/Minuit2/MnPrint.h:132:24: error: no member named 'Warning' in 'ROOT::Minuit2::MnPrintLevel' ; - [2020-10-25T10:36:13.979Z] /mnt/build/workspace/root-pullrequests-build/build/include/Minuit2/MnPrint.h:133:71: error: use of undeclared identifier 't' ; - [2020-10-25T10:36:13.979Z] /mnt/build/workspace/root-pullrequests-build/build/include/Minuit2/MnPrint.h:137:68:,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6705#issuecomment-716125314:5263,Simpl,SimplexSeedGenerator,5263,https://root.cern,https://github.com/root-project/root/pull/6705#issuecomment-716125314,1,['Simpl'],['SimplexSeedGenerator']
Usability,"n (item=item; entry=0xe65770 ""RunEtaC()"", known3=known3; entry=0x7ffcac8dcee4, memfunc_flag=<optimized out>, memfunc_flag; entry=0) at /home/gnp78160/alice/sw/SOURCES/ROOT/v5-34-30-alice10/v5-34-30-alice10/cint/cint/src/func.cxx:2901; #23 0x00007fba331e1752 in G__getitem (item=0xe65770 ""RunEtaC()"") at /home/gnp78160/alice/sw/SOURCES/ROOT/v5-34-30-alice10/v5-34-30-alice10/cint/cint/src/expr.cxx:1918; #24 0x00007fba331e5c70 in G__getexpr (expression=expression; entry=0x2315180 ""RunEtaC()"") at /home/gnp78160/alice/sw/SOURCES/ROOT/v5-34-30-alice10/v5-34-30-alice10/cint/cint/src/expr.cxx:1488; #25 0x00007fba331f090c in G__calc_internal (exprwithspace=<optimized out>) at /home/gnp78160/alice/sw/SOURCES/ROOT/v5-34-30-alice10/v5-34-30-alice10/cint/cint/src/expr.cxx:1071; #26 0x00007fba33262efe in G__process_cmd (line=line; entry=0x2314690 "".X /home/gnp78160/18r.296691_co4_1/./RunEtaC.C"", prompt=prompt; entry=0xe550a8 """", more=more; entry=0xe550a0, err=err; entry=0x7ffcac8e070c, rslt=rslt; entry=0x7ffcac8e0710) at /home/gnp78160/alice/sw/SOURCES/ROOT/v5-34-30-alice10/v5-34-30-alice10/cint/cint/src/pause.cxx:2331; #27 0x00007fba37e4b1c0 in TCint::ProcessLine (this=0xe55060, line=0x2314690 "".X /home/gnp78160/18r.296691_co4_1/./RunEtaC.C"", error=0x7ffcac8e1474) at /home/gnp78160/alice/sw/SOURCES/ROOT/v5-34-30-alice10/v5-34-30-alice10/core/meta/src/TCint.cxx:549; #28 0x00007fba37e46687 in TCint::ProcessLineSynch (this=0xe55060, line=0x2314690 "".X /home/gnp78160/18r.296691_co4_1/./RunEtaC.C"", error=0x7ffcac8e1474) at /home/gnp78160/alice/sw/SOURCES/ROOT/v5-34-30-alice10/v5-34-30-alice10/core/meta/src/TCint.cxx:631; #29 0x00007fba37e91c05 in TApplication::ExecuteFile (file=<optimized out>, error=0x7ffcac8e1474, keep=<optimized out>) at /home/gnp78160/alice/sw/SOURCES/ROOT/v5-34-30-alice10/v5-34-30-alice10/core/base/src/TApplication.cxx:1110; #30 0x00007fba37e92ef7 in TApplication::ProcessLine (this=0x1464300, line=<optimized out>, sync=<optimized out>, err=0x7ffcac8e1474) at /home/",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6977:6604,pause,pause,6604,https://root.cern,https://github.com/root-project/root/issues/6977,1,['pause'],['pause']
Usability,"n RooFit JSON IO; [RF] Add test for a simultaneous model written and read from JSON; [RF] Skip the RooSimultaneous in JSON IO; [RF] Don't export `factory_tag` in JSON; [RF][HS3] Move the default variable values to the estimates section; [RF] RooFit JSON: no need to tag variables, just export them; [RF] Rename fields in JSON file to match new standard; [RF] Complete also the reading of likelihoods and analysis fields; [RF] Add likelihoods and analyses fields for HS3 v2; [RF] Decouple `RooDataHist` reading from rest of workspace in RooFitHS3; [RF] Some refactoring of RooFit HS3; [RF] New `domains` section in JSON to store variable ranges; Fix modules and modules.idx generation on Windows and disable a few more modules causing potential crashes (#12252); [RF] Clearly mark `RooFit::CloneData()` as deprecated; [RF] Again code-format RooMinimizer; [RF] Avoid overhead of tracking evaluation error msgs when not needed; [RF] Implement safe way to set eval error logging in RooMinimizer; [RF] Use proper infinity checks in RooFit HS3; [RF] Avoid `sin` or `cos` of infinity in RooTruthModel integral code; [RF] RooTruthModel: local `xmin` and `xmax` to make code more readable; [RF] Define infinity as `std::numeric_limits<double>::infinity()`; [RF] Inline infinity constant and checks in `RooNumber`; [RF] Code-format RooNumber.h and RooNumber.cxx; [RF] Fill weight errors when importing RooDataHists to RooDataSet; [RF] Make it possible to directly import RooDataHist to RooDataSet; [RF] Reduce code duplication in RooDataSet constructor; [RF] Always create weight var in RooDataSet when importing weighted data; [RF] Implicitly create `WeightVar` for RooDataSet if it doesn't exist; [RF] Support also importing `RooDataHists` into RooDataSets; [RF] Avoid some code duplication in `RooDataSet` with importing slices; [RF] Split RooFuncWrapper into '.h' and '.cxx'.; [RF] Add observables as another parameter in RooFuncWrapper.; [RF] Test rough prototype of code generation in `testRooFuncWrapper`",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12590#issuecomment-1491813664:8212,Clear,Clearly,8212,https://root.cern,https://github.com/root-project/root/pull/12590#issuecomment-1491813664,1,['Clear'],['Clearly']
Usability,"n all the branches that have been added:; for branch_name, branch_dict in self.new_branches.items():; branch_dict[""value""].clear(); # self.new_tree; branch_dict[""f""](self.new_tree); # [branch_dict['value'].push_back(result) for result in branch_dict['f'](self.new_tree)]. # Fill entry with all computed branches; self.new_tree.Fill(). if i % 10000 == 0:; print_memory(i). self.new_tree.Write(); self.new_file.Close(); self.src_file.Close(). file_path = ""_src.root"". file = ROOT.TFile.Open(file_path, ""recreate""); tree = ROOT.TTree(""DDTree"", ""DDTree""). # Branch: value1; value1_value = ROOT.std.vector(""float"")(); value1_branch = tree.Branch(""value1"", value1_value). # Branch: value2; value2_value = ROOT.std.vector(""float"")(); value2_branch = tree.Branch(""value2"", value2_value). value_length = 20; nentries = 100000; for i in range(nentries):; tree.GetEntry(i). value1_value.clear(); [value1_value.push_back(result) for result in np.random.uniform(-999, 999, value_length)]. value2_value.clear(); [value2_value.push_back(result) for result in np.random.uniform(-99, 999, value_length)]. tree.Fill(). file.Write(); file.Close(). tree_name = ""DDTree""; src_path = ""_src.root""; new_path = ""_new.root"". retupler = reTupler(""DDTree"", new_path, src_path); retupler.add_branch(""new_branch"", macro, ""float""). retupler.run(); ```. Output without this PR:; ```txt; 0 memory usage 361424 1544100; 10000 memory usage 380580 1548912; 20000 memory usage 386148 1554504; 30000 memory usage 391332 1559540; 40000 memory usage 396324 1565324; 50000 memory usage 402084 1572740; 60000 memory usage 407652 1577572; 70000 memory usage 413028 1582796; 80000 memory usage 418596 1588976; 90000 memory usage 423780 1594012. ________________________________________________________; Executed in 3.40 secs fish external; usr time 3.33 secs 399.00 micros 3.33 secs; sys time 1.96 secs 106.00 micros 1.96 secs; ```. Output with this PR:; ```txt; 0 memory usage 361396 1544116; 10000 memory usage 375848 1544304; 20000 memory usa",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15608:3553,clear,clear,3553,https://root.cern,https://github.com/root-project/root/pull/15608,1,['clear'],['clear']
Usability,"n be specified besides the compression level: this is https://github.com/root-project/root/issues/6438; - `ROOT:::CompressionSettings` is undocumented (I only just now realized that it does precisely this conversion). One of the overloads has one line of documentation that mention it is deprecated but it is not actually deprecated with `R__DEPRECATE` ; - expected usage of `RCompressionSetting::EAlgorithm::EValues` is unclear (see https://root.cern/doc/master/structROOT_1_1RCompressionSetting_1_1EAlgorithm.html), the docs should probably point to `ROOT::CompressionSettings`. The docstring ""Note: this is only temporarily a struct and will become a enum class hence the name. "" should probably not appear in Doxygen, seems to be a not for developers; - `ROOT::CompressionSettings` requires that the user mentions the desired compression level. most of the time users just want to use whatever ROOT's default is. IIRC there is an enum for that too, but I could not find it in Doxygen. I would suggest the following improvements:; - `hadd --help` should mention that `-f` can also be used to trigger the compression algorithm, and it could have an examples section that shows how to use it and mentions `ROOT::CompressionSettings` as the API to recover the required integer given the desired compression algorithm; - `RCompressionSetting` should be documented with an example usage and pointers to the enums/structs to be used in conjunction to it; - the deprecated `RCompressionSetting` should be actually deprecated; - `RCompressionSetting` should provide a default value for the second argument that simply provides ROOT's default compression level for the specified compression algorithm; - the `RCompressionSetting::EAlgorithm` enum (which is currently a struct) should be made an enum, and its docs should point to `RCompressionSetting`; - the deprecated [ECompressionAlgorithm](https://root.cern/doc/master/namespaceROOT.html#a60945f6fe634f9f3be9872e57bf87f2e) should actually be deprecated",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8444:1972,simpl,simply,1972,https://root.cern,https://github.com/root-project/root/issues/8444,1,['simpl'],['simply']
Usability,"namespace)::X86DAGToDAGISel::runOnMachineFunction(llvm::MachineFunction&) (in /home/axel/build/root/24/rel/lib/libCling.so); ==30221== by 0x9FE37CA: llvm::MachineFunctionPass::runOnFunction(llvm::Function&) (in /home/axel/build/root/24/rel/lib/libCling.so); ==30221== by 0xB1BAA47: llvm::FPPassManager::runOnFunction(llvm::Function&) (in /home/axel/build/root/24/rel/lib/libCling.so); ==30221== by 0xB1BAAD0: llvm::FPPassManager::runOnModule(llvm::Module&) (in /home/axel/build/root/24/rel/lib/libCling.so); ==30221== by 0xB1B9A9F: llvm::legacy::PassManagerImpl::run(llvm::Module&) (in /home/axel/build/root/24/rel/lib/libCling.so); ==30221== by 0x965F899: llvm::orc::SimpleCompiler::operator()(llvm::Module&) (in /home/axel/build/root/24/rel/lib/libCling.so); ==30221== by 0x84B1E3A: std::_Function_handler<llvm::Expected<unsigned long> (), llvm::orc::LazyEmittingLayer<llvm::orc::LegacyIRCompileLayer<cling::IncrementalJIT::RemovableObjectLinkingLayer, llvm::orc::SimpleCompiler> >::EmissionDeferredModule::find(llvm::StringRef, bool, llvm::orc::LegacyIRCompileLayer<cling::IncrementalJIT::RemovableObjectLinkingLayer, llvm::orc::SimpleCompiler>&)::{lambda()#1}>::_M_invoke(std::_Any_data const&) (in /home/axel/build/root/24/rel/lib/libCling.so); ==30221== by 0x84A2F16: cling::IncrementalExecutor::executeWrapper(llvm::StringRef, cling::Value*) const (in /home/axel/build/root/24/rel/lib/libCling.so); ==30221== by 0x8441754: cling::Interpreter::RunFunction(clang::FunctionDecl const*, cling::Value*) (in /home/axel/build/root/24/rel/lib/libCling.so); ==30221== by 0x844457C: cling::Interpreter::EvaluateInternal(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::CompilationOptions, cling::Value*, cling::Transaction**, unsigned long) (in /home/axel/build/root/24/rel/lib/libCling.so); ==30221== by 0x8349A5F: TCling::Calc(char const*, TInterpreter::EErrorCode*) (in /home/axel/build/root/24/rel/lib/libCling.so); ==30221== by 0x48F1A4D: ROOT::Internal",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8899:2218,Simpl,SimpleCompiler,2218,https://root.cern,https://github.com/root-project/root/issues/8899,2,['Simpl'],['SimpleCompiler']
Usability,"nclude ""Minuit2/FCNBase.h"". #include <fenv.h>. using namespace ROOT::Minuit2;. class TestChi2 : public ROOT::Minuit2::FCNBase; {; public:; TestChi2() {}; ~TestChi2() {}; virtual double Up() const {return 1.0;}; virtual double operator () (const std::vector<double> &a) const; {; return std::pow(a.at(0)-0.11,2)+std::pow(a.at(1)-0.5,2)/100.0;; }; };. int main(int argc, char ** argv); {; feenableexcept(FE_DIVBYZERO | FE_INVALID | FE_OVERFLOW);; MnUserParameters fit_parameters;; fit_parameters.Add(""A"",0.118,0.01,0,1);; fit_parameters.Add(""B"",0.5,0.1,0.1,100.0);; fit_parameters.Fix(""A"");; fit_parameters.Fix(""B"");; TestChi2* FULL= new TestChi2();; MnUserParameters temp_fit_parameters=fit_parameters;; MnMigrad migrad0(*FULL, temp_fit_parameters); ; FunctionMinimum min_migrad0 = migrad0(); // OK; MnSimplex simplex0(*FULL, temp_fit_parameters);; FunctionMinimum min_simplex0 = simplex0(); // FPE; exit(0);; }; ```; ```; g++ simplex.cc -o simplex.exe $(root-config --glibs --cflags) -lMinuit2; ./simplex.exe; ```; results in . ```; The lines below might hint at the cause of the crash.; You may get help by asking at the ROOT forum http://root.cern.ch/forum; Only if you are really convinced it is a bug in ROOT then please submit a; report at http://root.cern.ch/bugs Please post the ENTIRE stack trace; from above as an attachment in addition to anything else; that might help us fixing this issue.; ===========================================================; #5 ROOT::Minuit2::SimplexBuilder::Minimum (this=0x7ffcf9555c58, mfcn=..., seed=..., maxfcn=200, minedm=0.10000000000000001) at /usr/src/debug/root-6.22.02/math/minuit2/src/SimplexBuilder.cxx:48; #6 0x00007f045c93e1cd in ROOT::Minuit2::ModularFunctionMinimizer::Minimize (this=<optimized out>, mfcn=..., gc=..., seed=..., strategy=..., maxfcn=200, toler=<optimized out>) at /usr/src/debug/root-6.22.02/math/minuit2/src/ModularFunctionMinimizer.cxx:166; #7 0x00007f045c93c737 in ROOT::Minuit2::ModularFunctionMinimizer::Minimize (this=0x7f",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6775:1322,simpl,simplex,1322,https://root.cern,https://github.com/root-project/root/issues/6775,1,['simpl'],['simplex']
Usability,"nclude/c++/12/backward' at runtime.; -- And then fallback to: 'ccache'; CMake Error: Could not open file for write in copy operation /usr/lib/llvm-13/lib/cmake/cling/ClingConfig.cmake.tmp; CMake Error: : System Error: No such file or directory; CMake Error at interpreter/cling/cmake/modules/CMakeLists.txt:22 (configure_file):; configure_file Problem configuring file; ```. The error is thrown in [interpreter/cling/cmake/modules/CMakeLists.txt:22-25](https://github.com/root-project/root/blob/fd244e56523bf5c5957bfae5117b36ca73c27813/interpreter/cling/cmake/modules/CMakeLists.txt#L22-L25) when trying to create a file in `cling_cmake_builddir` which is not writable. The bug originates from [interpreter/cling/cmake/modules/CMakeLists.txt:5](https://github.com/root-project/root/blob/fd244e56523bf5c5957bfae5117b36ca73c27813/interpreter/cling/cmake/modules/CMakeLists.txt#L5) and was introduced in 2b283ccf3a624f70dab3e8783d361d25c13e2c65 from #10294. ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->. I think there are three options to fix this:; - 2b283ccf3a624f70dab3e8783d361d25c13e2c65 is reverted (the commit mentions some fixes though); - CMake checks for `builtin_llvm=OFF` and sets the dir accordingly; - Some other path is found that prevents the issues mentioned in 2b283ccf3a624f70dab3e8783d361d25c13e2c65 (maybe `CLING_BINARY_DIR`?). ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->. Build from master with `builtin_llvm=OFF`. ### Setup; <!--; 1. ROOT version; 2. Operating system; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->. git master, Debian Sid. ### Additional context; <!--; Add any other context about the problem here.; -->. /cc @hahnjo @vgvas",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12151:1863,clear,clear,1863,https://root.cern,https://github.com/root-project/root/issues/12151,1,['clear'],['clear']
Usability,"nd make sure src_tree and new_tree are synced; self.src_tree.GetEntry(i); self.new_tree.GetEntry(i). # Now loop on all the branches that have been added:; for branch_name, branch_dict in self.new_branches.items():; branch_dict[""value""].clear(); # self.new_tree; branch_dict[""f""](self.new_tree); # [branch_dict['value'].push_back(result) for result in branch_dict['f'](self.new_tree)]. # Fill entry with all computed branches; self.new_tree.Fill(). if i % 10000 == 0:; print_memory(i). self.new_tree.Write(); self.new_file.Close(); self.src_file.Close(). file_path = ""_src.root"". file = ROOT.TFile.Open(file_path, ""recreate""); tree = ROOT.TTree(""DDTree"", ""DDTree""). # Branch: value1; value1_value = ROOT.std.vector(""float"")(); value1_branch = tree.Branch(""value1"", value1_value). # Branch: value2; value2_value = ROOT.std.vector(""float"")(); value2_branch = tree.Branch(""value2"", value2_value). value_length = 20; nentries = 100000; for i in range(nentries):; tree.GetEntry(i). value1_value.clear(); [value1_value.push_back(result) for result in np.random.uniform(-999, 999, value_length)]. value2_value.clear(); [value2_value.push_back(result) for result in np.random.uniform(-99, 999, value_length)]. tree.Fill(). file.Write(); file.Close(). tree_name = ""DDTree""; src_path = ""_src.root""; new_path = ""_new.root"". retupler = reTupler(""DDTree"", new_path, src_path); retupler.add_branch(""new_branch"", macro, ""float""). retupler.run(); ```. Output without this PR:; ```txt; 0 memory usage 361424 1544100; 10000 memory usage 380580 1548912; 20000 memory usage 386148 1554504; 30000 memory usage 391332 1559540; 40000 memory usage 396324 1565324; 50000 memory usage 402084 1572740; 60000 memory usage 407652 1577572; 70000 memory usage 413028 1582796; 80000 memory usage 418596 1588976; 90000 memory usage 423780 1594012. ________________________________________________________; Executed in 3.40 secs fish external; usr time 3.33 secs 399.00 micros 3.33 secs; sys time 1.96 secs 106.00 micros 1.96 secs; ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15608:3440,clear,clear,3440,https://root.cern,https://github.com/root-project/root/pull/15608,1,['clear'],['clear']
Usability,"nd we merely get the class name (e.g. &amp;quot;vector&amp;lt;double&amp;gt;&amp;quot;) and the value of the pointer to the container, which tells you nothing more than that the container is allocated. I think it is possible to add this feature with some minor edits to TStreamerInfo. I have attempted this myself for vector&amp;lt;double&amp;gt; (see the attached) and had success with the following:. \- A branch made directly from a vector&amp;lt;double&amp;gt;; \- A branch made out of a class (call it &amp;quot;TTestClass&amp;quot;) that derives from TObject and contains a vector&amp;lt;double&amp;gt; as a data member; \- A branch made out of a class containing a data member that is a TClonesArray of TTestClass's. The basic idea was to imitate the special-case-handling for the std::string class in the TStreamerInfo::PrintValue() and TStreamerInfo::PrintValueAux(). One issue is that for the STL classes, counter-intuitively TStreamerInfo::fLength = 1, no matter how many entries are in the container, so that PrintValueAux() always gets called with aleng = 1 instead of something related to the size of the array. Rather than mess with fLength, which appears to have important function outside of the PrintValue*() routines, I thought it would be better to simply add lenmax as an additional final parameter to PrintValueAux(), to be used in place of aleng by the stl classes. This could then be compared to the container length and used in the printf loop in the same way that aleng is used for arrays of basic data types. The other issue I ran into is that it is not easy to format the output to make it look &amp;quot;nice&amp;quot;. The PrintCR() function used by other data types in PrintValueAux() works well for vector&amp;lt;double&amp;gt; in PrintValue(), so I suggest moving that function declaration up so that it can be used there. However, in PrintValueAux() the printing somehow always looks funny for the case of the TClonesArray of TTestClass's. My guess is that the printi",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14555:1212,intuit,intuitively,1212,https://root.cern,https://github.com/root-project/root/issues/14555,1,['intuit'],['intuitively']
Usability,"ndling of default units in ROOT's geometry system. Although this commit is an ostensible improvement, reducing points of maintenance, there are some consequences that were maybe not anticipated. I refer to the [units README file](https://github.com/root-project/root/blob/master/geom/geom/README_units.md). In that file it states:. > To ensure backwards compatibility ROOT's default system of units is - as it was before - based on centimeters, seconds and GigaElectronVolts, ie. the defaults are equivalent to:; > ; > ```c++; > TGeoManager::SetDefaultUnits(kRootUnits);; > ```. Unfortunately, this statement is not true. As you see from the definition of the `TGeoManager::fgDefaultUnits` static data member https://github.com/root-project/root/blob/49d0be0b9455e026e6d68e2e651113af3f1e4654/geom/geom/src/TGeoManager.cxx#L302 the default units are G4 units, which it has been for some time (perhaps the beginning?). There was thus an inconsistency with the default units and with those assumed by TGDMLParse, which, before the above commit, made an unconditional assumption of ROOT units. The above commit addresses this inconsistency, but the neutrino community at Fermilab (specifically the LArSoft project and the experiments it supports) experienced an [unintended consequence](https://github.com/LArSoft/larcorealg/pull/18)--the default units are now honored by the TGDML parser, but they are simply G4 units instead of ROOT units. In order to make ROOT units the default, we use the workaround:. ```c++; TGeoManager::LockDefaultUnits(false);; TGeoManager::SetDefaultUnits(TGeoManager::kRootUnits);; TGeoManager::LockDefaultUnits(true);; ```. as the units are locked upon library load: https://github.com/root-project/root/blob/612b68ea1f70c3f5ce7deb8a6b664b8a08987991/geom/geom/src/TGeoManager.cxx#L304. This issue requests two things:. - Please correct the README file to accurately state the default units (G4).; - Suggest a better mechanism to allow the user to establish the default units.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8695:1533,simpl,simply,1533,https://root.cern,https://github.com/root-project/root/issues/8695,1,['simpl'],['simply']
Usability,"ne canonical link, and other links should redirect to that. . 2a) https://root.cern/d/documentation.html ; should ideally become just ; https://root.cern/documentation. 2b) or all documentation should be put into one directory with a clearer name, like; https://root.cern/doc/; In that case the manual (and other docs) should also be in that directory, not at; https://root.cern/manual/. 3a) User Guide is located at; https://root.cern/d/guides/users-guide.html; On parent path; https://root.cern/d/guides/; there is an automatic list of guides (which is better than nothing/forbidden), but it would be better if it was not automatic (had the same design as the other site). 3b) the same for; https://root.cern/doc/; (automatic list). 4\) As I understand, the main page for documentation is; https://root.cern.ch/d/documentation.html; There is also; https://root.cern/doc/master/; these two pages should probably be one page. 5\) Rearrange ""Provide your feedback""; I think github issues should go before the Forum in the list of options (if there are really two ways), because one can see closed and open issues (on the Forum I found several complaints about the links, but it's not clear whether they are open or closed without opening them). 6\) From the documentation page ""A number of topical User Guides and Manuals for various components of the system."" leads to; https://root.cern/get_started/; which, in turn, repeats description of some existing resources. Could you please refactor these two pages into one, trying to repeat as little information as possible?. 7\) On the page https://root.cern/about/; there is no link to the documentation. This is some other version of the site, not the version at https://root.cern/d/. 8\) I found this page using the search window,; https://root.cern/d/root-user-guides-and-manuals.html; I think this is a very good reference page for documentation. Could you link this from the main documentation overview page? (or just use this page instead of that)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7282:1781,feedback,feedback,1781,https://root.cern,https://github.com/root-project/root/issues/7282,4,"['Guid', 'clear', 'feedback', 'guid']","['Guides', 'clear', 'feedback', 'guides-and-manuals']"
Usability,"ne. This is implemented in my latest patch https://github.com/root-project/root/pull/6705/commits/365bd46563c025a5341b48e6d199b2aa4be76c4e. I think we need to collect the prefix stack if we want to be able to filter out, for example, messages from MnLineSearch that happen inside MnMigrad, but not those that happen inside MnHesse. That's why I think the prefix stack should stay. It is also fast, since only a couple of pointers are copied around. However, there is no need to show the full stack of prefixes. By default, MnPrint could just show the prefix from the innermost scope. I added the static method `MnPrint::ShowPrefixStack(bool yes)` to toggle showing the full prefix or not. The default is off so that the messages are not too long. I also now implemented filtering of messages based on the value of the prefix stack. When no filters are set, all messages are shown. Once a filter is set, only messages that match the filter are shown. This is done with strings, using `MnPrint::AddFilter` and `MnPrint::ClearFilter` to reset the filters. Filtering works like `grep` on the full prefix, the message is shown if any of the filter strings match. To only see messages from `MnHesse`, one can do:; ```c++; MnPrint::AddFilter(""MnHesse"");; ```; To only see messages from `MnHesse` called from VariableMetrixBuilder, one can do:; ```c++; MnPrint::AddFilter(""VariableMetricBuilder:MnHesse"");; ```; To only match the beginning of the prefix string, use ""^"". For example,; ```c++; MnPrint::AddFilter(""^MnHesse"");; ```; only matches direct execution of MnHesse, but not MnHesse called by MnMigrad. It also works with substrings. To see all messages from any Gradient calculator, one can do:; ```c++; MnPrint::AddFilter(""Gradient"");; ```; to match AnalyticalGradientCalculator, Numerical2PGradientCalculator, and InitialGradientCalculator. Filtering is not implemented in a very efficient way to keep the code simple, but the performance drop is opt-in. If no filters are used, then there is no perf",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6705#issuecomment-733046580:1116,Clear,ClearFilter,1116,https://root.cern,https://github.com/root-project/root/pull/6705#issuecomment-733046580,1,['Clear'],['ClearFilter']
Usability,"ned int excepts); {; static fenv_t fenv;; unsigned int new_excepts = excepts & FE_ALL_EXCEPT;; // previous masks; unsigned int old_excepts;. if (fegetenv(&fenv)) {; return -1;; }; old_excepts = fenv.__control & FE_ALL_EXCEPT;. // unmask; fenv.__control &= ~new_excepts;; fenv.__mxcsr &= ~(new_excepts << 7);. return fesetenv(&fenv) ? -1 : old_excepts;; }. inline int fedisableexcept(unsigned int excepts); {; static fenv_t fenv;; unsigned int new_excepts = excepts & FE_ALL_EXCEPT;; // all previous masks; unsigned int old_excepts;. if (fegetenv(&fenv)) {; return -1;; }; old_excepts = fenv.__control & FE_ALL_EXCEPT;. // mask; fenv.__control |= new_excepts;; fenv.__mxcsr |= new_excepts << 7;. return fesetenv(&fenv) ? -1 : old_excepts;; }. #else; inline int feenableexcept(unsigned int excepts); {; #pragma STDC FENV_ACCESS ON; fexcept_t flags;; /* Save current exception flags. */; fegetexceptflag(&flags, FE_ALL_EXCEPT);. feclearexcept(FE_ALL_EXCEPT); /* clear all fp exception conditions */; return fesetexceptflag(&flags, excepts) != 0 ? -1 : flags; /* set new flags */. }. inline int fedisableexcept(unsigned int excepts); {; #pragma STDC FENV_ACCESS ON; fexcept_t flags;; /* Save current exception flags. */; fegetexceptflag(&flags, FE_ALL_EXCEPT);. feclearexcept(FE_ALL_EXCEPT); /* clear all fp exception conditions */; return fesetexceptflag(&flags, ~excepts) != 0 ? -1 : flags; /* set new flags */; }. #endif; #endif. int main(int argc, char **argv) {; feenableexcept(FE_DIVBYZERO | FE_INVALID | FE_OVERFLOW);; Float_t fHue=-1.0; ; Float_t fLight=-1.0;; Float_t fSaturation = -1.0;; Float_t r=212.467392f;; Float_t g=0.529984f;; Float_t b=94.476196f;; TColor::RGB2HLS(r ,g, b,fHue, fLight, fSaturation);; return 0;; }. ```; produces FPE on Mac+ ROOT 6.22. The problem is that TColor::RGB2HLS is a static function and when I try to take it of and compile standalone, everything works.; Have no idea what is happening.; My very wild speculation is that the build setup of the 6.22 release on ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6373#issuecomment-712188134:1437,clear,clear,1437,https://root.cern,https://github.com/root-project/root/issues/6373#issuecomment-712188134,2,['clear'],['clear']
Usability,"ned int excepts); {; static fenv_t fenv;; unsigned int new_excepts = excepts & FE_ALL_EXCEPT;; // previous masks; unsigned int old_excepts;. if (fegetenv(&fenv)) {; return -1;; }; old_excepts = fenv.__control & FE_ALL_EXCEPT;. // unmask; fenv.__control &= ~new_excepts;; fenv.__mxcsr &= ~(new_excepts << 7);. return fesetenv(&fenv) ? -1 : old_excepts;; }. inline int fedisableexcept(unsigned int excepts); {; static fenv_t fenv;; unsigned int new_excepts = excepts & FE_ALL_EXCEPT;; // all previous masks; unsigned int old_excepts;. if (fegetenv(&fenv)) {; return -1;; }; old_excepts = fenv.__control & FE_ALL_EXCEPT;. // mask; fenv.__control |= new_excepts;; fenv.__mxcsr |= new_excepts << 7;. return fesetenv(&fenv) ? -1 : old_excepts;; }. #else; inline int feenableexcept(unsigned int excepts); {; #pragma STDC FENV_ACCESS ON; fexcept_t flags;; /* Save current exception flags. */; fegetexceptflag(&flags, FE_ALL_EXCEPT);. feclearexcept(FE_ALL_EXCEPT); /* clear all fp exception conditions */; return fesetexceptflag(&flags, excepts) != 0 ? -1 : flags; /* set new flags */. }. inline int fedisableexcept(unsigned int excepts); {; #pragma STDC FENV_ACCESS ON; fexcept_t flags;; /* Save current exception flags. */; fegetexceptflag(&flags, FE_ALL_EXCEPT);. feclearexcept(FE_ALL_EXCEPT); /* clear all fp exception conditions */; return fesetexceptflag(&flags, ~excepts) != 0 ? -1 : flags; /* set new flags */; }. #endif; #endif. int main(int argc, char **argv) {; feenableexcept(FE_DIVBYZERO | FE_INVALID | FE_OVERFLOW);; TCanvas* C= new TCanvas(""canvas"",""canvas"",1024,768);; C->cd();; Double_t w=0, h=0, xl=0, yb=0;; TH1D* o=new TH1D();; TPad* c= new TPad();; c->PlaceBox(o,w,h,xl,yb);; delete c;; delete C;; return 0;; }; ```; compile; ```; g++ pad2.cxx $(root-config --glibs --cflags --libs) -o pad2 -g; ```; run; ```; ./pad2; ```. ## Setup. ROOT 6.22.02 CentOS7 gcc4.8.5 ; and ; lxplus with ; ```; source /cvmfs/sft.cern.ch/lcg/views/dev3python3/latest/x86_64-centos7-gcc10-opt/setup.sh; ```; Shou",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6428:3768,clear,clear,3768,https://root.cern,https://github.com/root-project/root/issues/6428,1,['clear'],['clear']
Usability,"ned int excepts); {; static fenv_t fenv;; unsigned int new_excepts = excepts & FE_ALL_EXCEPT;; // previous masks; unsigned int old_excepts;. if (fegetenv(&fenv)) {; return -1;; }; old_excepts = fenv.__control & FE_ALL_EXCEPT;. // unmask; fenv.__control &= ~new_excepts;; fenv.__mxcsr &= ~(new_excepts << 7);. return fesetenv(&fenv) ? -1 : old_excepts;; }. inline int fedisableexcept(unsigned int excepts); {; static fenv_t fenv;; unsigned int new_excepts = excepts & FE_ALL_EXCEPT;; // all previous masks; unsigned int old_excepts;. if (fegetenv(&fenv)) {; return -1;; }; old_excepts = fenv.__control & FE_ALL_EXCEPT;. // mask; fenv.__control |= new_excepts;; fenv.__mxcsr |= new_excepts << 7;. return fesetenv(&fenv) ? -1 : old_excepts;; }. #else; inline int feenableexcept(unsigned int excepts); {; #pragma STDC FENV_ACCESS ON; fexcept_t flags;; /* Save current exception flags. */; fegetexceptflag(&flags, FE_ALL_EXCEPT);. feclearexcept(FE_ALL_EXCEPT); /* clear all fp exception conditions */; return fesetexceptflag(&flags, excepts) != 0 ? -1 : flags; /* set new flags */. }. inline int fedisableexcept(unsigned int excepts); {; #pragma STDC FENV_ACCESS ON; fexcept_t flags;; /* Save current exception flags. */; fegetexceptflag(&flags, FE_ALL_EXCEPT);. feclearexcept(FE_ALL_EXCEPT); /* clear all fp exception conditions */; return fesetexceptflag(&flags, ~excepts) != 0 ? -1 : flags; /* set new flags */; }. #endif; #endif. int main(int argc, char **argv) {; feenableexcept(FE_DIVBYZERO | FE_INVALID | FE_OVERFLOW);; TCanvas* C= new TCanvas(""canvas"",""canvas"",5,5);//fails; // TCanvas* C= new TCanvas(""canvas"",""canvas"",50,50);//works; C->cd();; Double_t w=20, h=20, xl=0, yb=20;; TBox* o=new TBox();; TPad* c= new TPad();; c->SetPad(0,0,1,1);; c->cd(1);; c->PlaceBox(o,w,h,xl,yb);; return 0;; }. ```. I see. ```; [@test]$ ./pad5.exe . *** Break *** floating point exception. ===========================================================; There was a crash.; This is the entire stack trace of all thr",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6428#issuecomment-698590998:1364,clear,clear,1364,https://root.cern,https://github.com/root-project/root/issues/6428#issuecomment-698590998,2,['clear'],['clear']
Usability,"ned int excepts); {; static fenv_t fenv;; unsigned int new_excepts = excepts & FE_ALL_EXCEPT;; // previous masks; unsigned int old_excepts;. if (fegetenv(&fenv)) {; return -1;; }; old_excepts = fenv.__control & FE_ALL_EXCEPT;. // unmask; fenv.__control &= ~new_excepts;; fenv.__mxcsr &= ~(new_excepts << 7);. return fesetenv(&fenv) ? -1 : old_excepts;; }. inline int fedisableexcept(unsigned int excepts); {; static fenv_t fenv;; unsigned int new_excepts = excepts & FE_ALL_EXCEPT;; // all previous masks; unsigned int old_excepts;. if (fegetenv(&fenv)) {; return -1;; }; old_excepts = fenv.__control & FE_ALL_EXCEPT;. // mask; fenv.__control |= new_excepts;; fenv.__mxcsr |= new_excepts << 7;. return fesetenv(&fenv) ? -1 : old_excepts;; }. #else; inline int feenableexcept(unsigned int excepts); {; #pragma STDC FENV_ACCESS ON; fexcept_t flags;; /* Save current exception flags. */; fegetexceptflag(&flags, FE_ALL_EXCEPT);. feclearexcept(FE_ALL_EXCEPT); /* clear all fp exception conditions */; return fesetexceptflag(&flags, excepts) != 0 ? -1 : flags; /* set new flags */. }. inline int fedisableexcept(unsigned int excepts); {; #pragma STDC FENV_ACCESS ON; fexcept_t flags;; /* Save current exception flags. */; fegetexceptflag(&flags, FE_ALL_EXCEPT);. feclearexcept(FE_ALL_EXCEPT); /* clear all fp exception conditions */; return fesetexceptflag(&flags, ~excepts) != 0 ? -1 : flags; /* set new flags */; }. #endif; #endif. int main(int argc, char **argv) {; feenableexcept(FE_DIVBYZERO | FE_INVALID | FE_OVERFLOW);; TRandom* R1= new TRandom();; TRandom* R2= new TRandom();; TRandom* R3= new TRandom();; Float_t r1,g1,b1;; Float_t r2,g2,b2;; Float_t r3,g3,b3;; Float_t fHue1=-1.0f; ; Float_t fLight1=-1.0f;; Float_t fSaturation1 = -1.0f;; Float_t fHue2=-1.0f; ; Float_t fLight2=-1.0f;; Float_t fSaturation2 = -1.0f;; Float_t fHue3=-1.0f; ; Float_t fLight3=-1.0f;; Float_t fSaturation3 = -1.0f;; for (size_t i=0; i<1000000;i++); {; r1=16.0f*(1.0f-float(R1->Rndm()));; g1=16.0f*(1.0f-float(R1->Rndm",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6684#issuecomment-713684777:1367,clear,clear,1367,https://root.cern,https://github.com/root-project/root/pull/6684#issuecomment-713684777,2,['clear'],['clear']
Usability,"ned int excepts); {; static fenv_t fenv;; unsigned int new_excepts = excepts & FE_ALL_EXCEPT;; // previous masks; unsigned int old_excepts;. if (fegetenv(&fenv)) {; return -1;; }; old_excepts = fenv.__control & FE_ALL_EXCEPT;. // unmask; fenv.__control &= ~new_excepts;; fenv.__mxcsr &= ~(new_excepts << 7);. return fesetenv(&fenv) ? -1 : old_excepts;; }. inline int fedisableexcept(unsigned int excepts); {; static fenv_t fenv;; unsigned int new_excepts = excepts & FE_ALL_EXCEPT;; // all previous masks; unsigned int old_excepts;. if (fegetenv(&fenv)) {; return -1;; }; old_excepts = fenv.__control & FE_ALL_EXCEPT;. // mask; fenv.__control |= new_excepts;; fenv.__mxcsr |= new_excepts << 7;. return fesetenv(&fenv) ? -1 : old_excepts;; }. #else; inline int feenableexcept(unsigned int excepts); {; #pragma STDC FENV_ACCESS ON; fexcept_t flags;; /* Save current exception flags. */; fegetexceptflag(&flags, FE_ALL_EXCEPT);. feclearexcept(FE_ALL_EXCEPT); /* clear all fp exception conditions */; return fesetexceptflag(&flags, excepts) != 0 ? -1 : flags; /* set new flags */. }. inline int fedisableexcept(unsigned int excepts); {; #pragma STDC FENV_ACCESS ON; fexcept_t flags;; /* Save current exception flags. */; fegetexceptflag(&flags, FE_ALL_EXCEPT);. feclearexcept(FE_ALL_EXCEPT); /* clear all fp exception conditions */; return fesetexceptflag(&flags, ~excepts) != 0 ? -1 : flags; /* set new flags */; }. #endif; #endif. void FakeRGB2HLS(Float_t rr, Float_t gg, Float_t bb,; Float_t &hue, Float_t &light, Float_t &satur); {; Float_t rnorm, gnorm, bnorm, minval, maxval, msum, mdiff, r, g, b;; minval = maxval =0 ;; r = g = b = 0;; if (rr > 0) {; r = rr;; if (r > 1) r = 1;; }; if (gg > 0) {; g = gg;; if (g > 1) g = 1;; }; if (bb > 0) {; b = bb;; if (b > 1) b = 1;; }. minval = r;; if (g < minval) minval = g;; if (b < minval) minval = b;; maxval = r;; if (g > maxval) maxval = g;; if (b > maxval) maxval = b;. rnorm = gnorm = bnorm = 0;; mdiff = maxval - minval;; msum = maxval + minval;; pri",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6677:1940,clear,clear,1940,https://root.cern,https://github.com/root-project/root/issues/6677,1,['clear'],['clear']
Usability,"ned int excepts); {; static fenv_t fenv;; unsigned int new_excepts = excepts & FE_ALL_EXCEPT;; // previous masks; unsigned int old_excepts;. if (fegetenv(&fenv)) {; return -1;; }; old_excepts = fenv.__control & FE_ALL_EXCEPT;. // unmask; fenv.__control &= ~new_excepts;; fenv.__mxcsr &= ~(new_excepts << 7);. return fesetenv(&fenv) ? -1 : old_excepts;; }. inline int fedisableexcept(unsigned int excepts); {; static fenv_t fenv;; unsigned int new_excepts = excepts & FE_ALL_EXCEPT;; // all previous masks; unsigned int old_excepts;. if (fegetenv(&fenv)) {; return -1;; }; old_excepts = fenv.__control & FE_ALL_EXCEPT;. // mask; fenv.__control |= new_excepts;; fenv.__mxcsr |= new_excepts << 7;. return fesetenv(&fenv) ? -1 : old_excepts;; }. #else; inline int feenableexcept(unsigned int excepts); {; #pragma STDC FENV_ACCESS ON; fexcept_t flags;; /* Save current exception flags. */; fegetexceptflag(&flags, FE_ALL_EXCEPT);. feclearexcept(FE_ALL_EXCEPT); /* clear all fp exception conditions */; return fesetexceptflag(&flags, excepts) != 0 ? -1 : flags; /* set new flags */. }. inline int fedisableexcept(unsigned int excepts); {; #pragma STDC FENV_ACCESS ON; fexcept_t flags;; /* Save current exception flags. */; fegetexceptflag(&flags, FE_ALL_EXCEPT);. feclearexcept(FE_ALL_EXCEPT); /* clear all fp exception conditions */; return fesetexceptflag(&flags, ~excepts) != 0 ? -1 : flags; /* set new flags */; }. #endif; #endif. void FakeRGB2HLS(Float_t rr, Float_t gg, Float_t bb,; Float_t &hue, Float_t &light, Float_t &satur); {; Float_t rnorm, gnorm, bnorm, minval, maxval, msum, mdiff, r, g, b;; minval = maxval =0 ;; r = g = b = 0;; if (rr > 0) {; r = rr;; if (r > 1) r = 1;; }; if (gg > 0) {; g = gg;; if (g > 1) g = 1;; }; if (bb > 0) {; b = bb;; if (b > 1) b = 1;; }. minval = r;; if (g < minval) minval = g;; if (b < minval) minval = b;; maxval = r;; if (g > maxval) maxval = g;; if (b > maxval) maxval = b;. rnorm = gnorm = bnorm = 0;; mdiff = maxval - minval;; msum = maxval + minval;; pri",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6373#issuecomment-712842902:1352,clear,clear,1352,https://root.cern,https://github.com/root-project/root/issues/6373#issuecomment-712842902,2,['clear'],['clear']
Usability,"ng at the ROOT forum http://root.cern.ch/forum; Only if you are really convinced it is a bug in ROOT then please submit a; report at http://root.cern.ch/bugs Please post the ENTIRE stack trace; from above as an attachment in addition to anything else; that might help us fixing this issue.; ===========================================================; #5 0x00007fb46db2607d in TViewer3DPad::AddObject(TBuffer3D const&, bool*) () from /nfs/mnemosyne/sys/cc7/sw/root/x86-64/6.22.02/system/root/lib/libGpad.so; #6 0x00007fb451224035 in TGeoPainter::PaintShape(TGeoShape const&, char const*) const () from /nfs/mnemosyne/sys/cc7/sw/root/x86-64/6.22.02/system/root/lib/libGeomPainter.so; #7 0x00007fb4512261ad in TGeoPainter::PaintVolume(TGeoVolume*, char const*, TGeoMatrix*) () from /nfs/mnemosyne/sys/cc7/sw/root/x86-64/6.22.02/system/root/lib/libGeomPainter.so; #8 0x00007fb451224a01 in TGeoPainter::Paint(char const*) () from /nfs/mnemosyne/sys/cc7/sw/root/x86-64/6.22.02/system/root/lib/libGeomPainter.so; #9 0x00007fb451222460 in TGeoPainter::DrawVolume(TGeoVolume*, char const*) () from /nfs/mnemosyne/sys/cc7/sw/root/x86-64/6.22.02/system/root/lib/libGeomPainter.so; #10 0x0000000000400a94 in main (); ===========================================================; ```. ### Expected behavior; Loading of the *.GDML file without issues - default behaviour for non-existing ""type"" argument. ### To Reproduce; 1. Create a GDML file with G4 (10.5) containing a tessellated object; 2. Importing it with ROOT TGeoManager::Import(). ### Setup; 1. ROOT version: 6.22.02; 2. Operating system: CC7; 3. How you obtained ROOT: built myself. ### Additional context; I add an example *gdml file with the missing ""type"" attribute in the tessellated object. The CAD part are here the simple ""Cubes"" for testing - tiny things at the very front. Don't get confused by the ""normal"" G4 geometry ""TPC' object in the center; [withTessCAD.gdml.zip](https://github.com/root-project/root/files/5583749/withTessCAD.gdml.zip)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6868:4334,simpl,simple,4334,https://root.cern,https://github.com/root-project/root/issues/6868,1,['simpl'],['simple']
Usability,"ng class in the TStreamerInfo::PrintValue() and TStreamerInfo::PrintValueAux(). One issue is that for the STL classes, counter-intuitively TStreamerInfo::fLength = 1, no matter how many entries are in the container, so that PrintValueAux() always gets called with aleng = 1 instead of something related to the size of the array. Rather than mess with fLength, which appears to have important function outside of the PrintValue*() routines, I thought it would be better to simply add lenmax as an additional final parameter to PrintValueAux(), to be used in place of aleng by the stl classes. This could then be compared to the container length and used in the printf loop in the same way that aleng is used for arrays of basic data types. The other issue I ran into is that it is not easy to format the output to make it look &amp;quot;nice&amp;quot;. The PrintCR() function used by other data types in PrintValueAux() works well for vector&amp;lt;double&amp;gt; in PrintValue(), so I suggest moving that function declaration up so that it can be used there. However, in PrintValueAux() the printing somehow always looks funny for the case of the TClonesArray of TTestClass's. My guess is that the printing looks funny as well for the other array types handled by PrintValueAux() so maybe this is considered to be okay? At any rate, I tried a number of options and left them in the file in my order of preference with all but the first one (no carriage returns) commented out. I also thought it was best to make the entry delimiter in PrintValueClones() and; PrintValueSTL() from &amp;quot;,&amp;quot; to &amp;quot;;&amp;quot;. It should be simple to add this feature for other STL containers, such as vector&amp;lt;int&amp;gt;, vector&amp;lt;float&amp;gt;, vector&amp;lt;string&amp;gt;, etc. It would be nice to also add output for maps, e.g. if `map<keytype, valtype>` could print as. key1 => val1, key1 => val2, ... ### Alternatives considered. _No response_. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14555:2726,simpl,simple,2726,https://root.cern,https://github.com/root-project/root/issues/14555,1,['simpl'],['simple']
Usability,"ng issues: increasing memory and CPU consumption with; increasing number of arenas, becuase trying to allocate a new; non-overlapping arena often fails. 2. Amplification of memory leaks in user code:; If one of the elements in the arena leaks, the whole arena will; leak. Since each arena has 6000 elements, this means a leak of a; RooArgSet will be ampilfied by a factor 6000 in the worst case. This commit proposes a solution to the scaling/performance issues and; the leak amplification. Explained for the example for RooArgSet, the idea is to use each arena; 120 times because this is the size of RooArgSet in bytes. This can be; done while still having unique adresses for each RooArgSet:. 1. Keep a gap of 120 bytes between each RooArgSet; 2. When an address was used before, add one byte and in can be used; again. So at the cost of allocating 2x more memory per arena, we can reuse each; arena 120 times. Now, the good thing is that the interval of creating/deleting; RooArgSets is usually higher than 6000. So when reusing an arena; multiple times, they will eventually be filled only by leaking; RooArgSets if there is a leak. Meaning the leak amplification effect; should be gone. This was checked with the CMS Higgs combine toy fit example from the; Higgs combine tutorial. Without this commit, there is a GB-level leak; that can be clearly observed with `top`, but with this commit the leak; becomes negligible again. The PR is still kind of a draft PR. I will check with the bot if this solution works on all platforms and then continue improving the code. This should be backported together with https://github.com/root-project/root/pull/7935. This should finally fix https://github.com/root-project/root/issues/7933. Profile of the CMS toy experiment example with a ROOT Debug build:; * [without this PR](https://rembserj.web.cern.ch/rembserj/cgi-bin/igprof-navigator/combine_example_2_old); * [with this PR](https://rembserj.web.cern.ch/rembserj/cgi-bin/igprof-navigator/arena_1_new)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7954:1394,clear,clearly,1394,https://root.cern,https://github.com/root-project/root/pull/7954,1,['clear'],['clearly']
Usability,"ngCodeGen.a(CGExprComplex.cpp.o): in function `(anonymous namespace)::ComplexExprEmitter::EmitLoadOfLValue(clang::CodeGen::LValue, clang::SourceLocation)':; CGExprComplex.cpp:(.text._ZN12_GLOBAL__N_118ComplexExprEmitter16EmitLoadOfLValueEN5clang7CodeGen6LValueENS1_14SourceLocationE+0x15c): undefined reference to `clang::CodeGen::CodeGenFunction::EmitAtomicLoad(clang::CodeGen::LValue, clang::SourceLocation, clang::CodeGen::AggValueSlot)'; /usr/bin/ld: ../../interpreter/llvm/src/lib/libclangCodeGen.a(CGExprComplex.cpp.o): in function `(anonymous namespace)::ComplexExprEmitter::Visit(clang::Expr*)':; CGExprComplex.cpp:(.text._ZN12_GLOBAL__N_118ComplexExprEmitter5VisitEPN5clang4ExprE+0x97d): undefined reference to `clang::CodeGen::CodeGenFunction::EmitAtomicExpr(clang::AtomicExpr*)'; collect2: error: ld returned 1 exit status; make[2]: *** [core/rootcling_stage1/CMakeFiles/rootcling_stage1.dir/build.make:228: core/rootcling_stage1/src/rootcling_stage1] Error 1; make[1]: *** [CMakeFiles/Makefile2:27877: core/rootcling_stage1/CMakeFiles/rootcling_stage1.dir/all] Error 2; make: *** [Makefile:152: all] Error 2; ```; <!--; A clear and concise description of what the wrong behavior is.; -->. ### Expected behavior; It work?; <!--; A clear and concise description of what you expected to happen.; -->. ### To Reproduce; I ran:; ```; mkdir rootinstall rootbuild; cd rootbuild; cmake -DCMAKE_INSTALL_PREFIX=../rootintstall ../root; cmake --build . -- -j4; ```; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->. ### Setup; <!--; 1. ROOT version; 2. Operating system; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->; Master branch of root-project/root; ### Additional context; <!--; Add any other context about the problem here.; -->",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8487:14484,clear,clear,14484,https://root.cern,https://github.com/root-project/root/issues/8487,2,['clear'],['clear']
Usability,"ningful in itself (see Django guidelines).; For example: from the main page I can see a link to the documentation,; https://root.cern/d/documentation.html; If I delete the last part, I get; https://root.cern/d/; which is a) meaningless b) same as the main page. ; The third link to that same page is ; https://root.cern/d/index.html. Surprisingly, the link; https://root.cern/index.html; has different contents!. Probably there is little surprise that there exists the 2nd version of the site,; https://root.cern.ch/ (with its own index.html, and all these links).; I think there should be one canonical link, and other links should redirect to that. . 2a) https://root.cern/d/documentation.html ; should ideally become just ; https://root.cern/documentation. 2b) or all documentation should be put into one directory with a clearer name, like; https://root.cern/doc/; In that case the manual (and other docs) should also be in that directory, not at; https://root.cern/manual/. 3a) User Guide is located at; https://root.cern/d/guides/users-guide.html; On parent path; https://root.cern/d/guides/; there is an automatic list of guides (which is better than nothing/forbidden), but it would be better if it was not automatic (had the same design as the other site). 3b) the same for; https://root.cern/doc/; (automatic list). 4\) As I understand, the main page for documentation is; https://root.cern.ch/d/documentation.html; There is also; https://root.cern/doc/master/; these two pages should probably be one page. 5\) Rearrange ""Provide your feedback""; I think github issues should go before the Forum in the list of options (if there are really two ways), because one can see closed and open issues (on the Forum I found several complaints about the links, but it's not clear whether they are open or closed without opening them). 6\) From the documentation page ""A number of topical User Guides and Manuals for various components of the system."" leads to; https://root.cern/get_started/; which, ",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7282:1224,Guid,Guide,1224,https://root.cern,https://github.com/root-project/root/issues/7282,1,['Guid'],['Guide']
Usability,"nings generated.; [8479/9530] Building CXX object graf2d/cocoa/CMakeFiles/GCocoa.dir/src/MenuLoader.mm.o; /Users/rdm/rootsrc/graf2d/cocoa/src/MenuLoader.mm:92:16: warning: variable 'menuItem' set but not used [-Wunused-but-set-variable]; NSMenuItem *menuItem = [aMenu addItemWithTitle : NSLocalizedString(@""Minimize"", nil); ^; 1 warning generated.; [8627/9530] Building CXX object gui/fitpanel/CMakeFiles/FitPanel.dir/src/TFitEditor.cxx.o; /Users/rdm/rootsrc/gui/fitpanel/src/TFitEditor.cxx:2806:26: warning: variable 'py1old' set but not used [-Wunused-but-set-variable]; static Int_t px1old, py1old, px2old, py2old; // to remember the square drawn.; ^; /Users/rdm/rootsrc/gui/fitpanel/src/TFitEditor.cxx:2806:34: warning: variable 'px2old' set but not used [-Wunused-but-set-variable]; static Int_t px1old, py1old, px2old, py2old; // to remember the square drawn.; ^; /Users/rdm/rootsrc/gui/fitpanel/src/TFitEditor.cxx:2806:42: warning: variable 'py2old' set but not used [-Wunused-but-set-variable]; static Int_t px1old, py1old, px2old, py2old; // to remember the square drawn.; ^; /Users/rdm/rootsrc/gui/fitpanel/src/TFitEditor.cxx:2806:18: warning: variable 'px1old' set but not used [-Wunused-but-set-variable]; static Int_t px1old, py1old, px2old, py2old; // to remember the square drawn.; ^; 4 warnings generated.; ```. ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->; No warnings. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->; Compile on macOS with Cocoa. ### Setup; <!--; 1. ROOT version; 2. Operating system; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->. Current master. ### Additional context; <!--; Add any other context about the problem here.; -->",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10572:3875,clear,clear,3875,https://root.cern,https://github.com/root-project/root/issues/10572,1,['clear'],['clear']
Usability,"no.h' not found ; - [2022-12-21T14:38:19.707Z] /home/sftnight/build/workspace/root-pullrequests-build/build/etc/cling/Interpreter/DynamicLookupLifetimeHandler.h:56:7: error: use of undeclared identifier 'std' ; - [2022-12-21T14:38:19.708Z] /home/sftnight/build/workspace/root-pullrequests-build/build/etc/cling/std20.modulemap:438:12: error: header 'bits/chrono.h' not found ; - [2022-12-21T14:38:19.708Z] /home/sftnight/build/workspace/root-pullrequests-build/build/etc/cling/Interpreter/Value.h:93:41: error: use of undeclared identifier 'std' ; - [2022-12-21T14:38:19.708Z] /home/sftnight/build/workspace/root-pullrequests-build/build/etc/cling/Interpreter/Value.h:93:55: error: expected ',' or '&gt;' in template-parameter-list ; - [2022-12-21T14:38:19.708Z] /home/sftnight/build/workspace/root-pullrequests-build/build/etc/cling/Interpreter/Value.h:93:75: error: no type named 'value' in the global namespace; did you mean 'Value'? ; - [2022-12-21T14:38:19.708Z] /home/sftnight/build/workspace/root-pullrequests-build/build/etc/cling/Interpreter/Value.h:93:82: error: expected member name or ';' after declaration specifiers . And 30 more. ### Warnings:; - [2022-12-21T14:26:00.154Z] /home/sftnight/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:422:54: warning: using value of simple assignment with ‘volatile’-qualified left operand is deprecated [-Wvolatile] ; - [2022-12-21T14:26:23.830Z] /home/sftnight/build/workspace/root-pullrequests-build/root/core/base/src/TSystem.cxx:4040:42: warning: bitwise operation between different enumeration types ‘TSystem::EAclicProperties’ and ‘TObject::&lt;unnamed enum&gt;’ is deprecated [-Wdeprecated-enum-enum-conversion] ; - [2022-12-21T14:26:23.830Z] /home/sftnight/build/workspace/root-pullrequests-build/root/core/base/src/TSystem.cxx:4042:43: warning: bitwise operation between different enumeration types ‘TSystem::EAclicProperties’ and ‘TObject::&lt;unnamed enum&gt;’ is deprecated [-Wdeprecated-enum-enum-conversion]",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11874#issuecomment-1361406497:2230,simpl,simple,2230,https://root.cern,https://github.com/root-project/root/pull/11874#issuecomment-1361406497,2,['simpl'],['simple']
Usability,"no.h' not found ; - [2022-12-28T08:32:45.548Z] /home/sftnight/build/workspace/root-pullrequests-build/build/etc/cling/Interpreter/DynamicLookupLifetimeHandler.h:56:7: error: use of undeclared identifier 'std' ; - [2022-12-28T08:32:45.548Z] /home/sftnight/build/workspace/root-pullrequests-build/build/etc/cling/std20.modulemap:438:12: error: header 'bits/chrono.h' not found ; - [2022-12-28T08:32:45.548Z] /home/sftnight/build/workspace/root-pullrequests-build/build/etc/cling/Interpreter/Value.h:93:41: error: use of undeclared identifier 'std' ; - [2022-12-28T08:32:45.548Z] /home/sftnight/build/workspace/root-pullrequests-build/build/etc/cling/Interpreter/Value.h:93:55: error: expected ',' or '&gt;' in template-parameter-list ; - [2022-12-28T08:32:45.548Z] /home/sftnight/build/workspace/root-pullrequests-build/build/etc/cling/Interpreter/Value.h:93:75: error: no type named 'value' in the global namespace; did you mean 'Value'? ; - [2022-12-28T08:32:45.548Z] /home/sftnight/build/workspace/root-pullrequests-build/build/etc/cling/Interpreter/Value.h:93:82: error: expected member name or ';' after declaration specifiers . And 30 more. ### Warnings:; - [2022-12-28T08:32:20.829Z] /home/sftnight/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:422:54: warning: using value of simple assignment with ‘volatile’-qualified left operand is deprecated [-Wvolatile] ; - [2022-12-28T08:32:21.099Z] /home/sftnight/build/workspace/root-pullrequests-build/root/core/base/src/TSystem.cxx:4040:42: warning: bitwise operation between different enumeration types ‘TSystem::EAclicProperties’ and ‘TObject::&lt;unnamed enum&gt;’ is deprecated [-Wdeprecated-enum-enum-conversion] ; - [2022-12-28T08:32:21.099Z] /home/sftnight/build/workspace/root-pullrequests-build/root/core/base/src/TSystem.cxx:4042:43: warning: bitwise operation between different enumeration types ‘TSystem::EAclicProperties’ and ‘TObject::&lt;unnamed enum&gt;’ is deprecated [-Wdeprecated-enum-enum-conversion]",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11874#issuecomment-1366467620:2230,simpl,simple,2230,https://root.cern,https://github.com/root-project/root/pull/11874#issuecomment-1366467620,2,['simpl'],['simple']
Usability,"nt by valgrind when checked the reproducer in the commit message:; ```; Conditional jump or move depends on uninitialised value(s); at 0x402E09: TStorage::UpdateIsOnHeap(unsigned int const volatile&, unsigned int volatile&) (TStorage.h:132); by 0x501B33D: TDirectory::TDirectory() (in /usr/lib64/root/libCore.so.6.26.10); by 0x5816D81: TDirectoryFile::TDirectoryFile() (in /usr/lib64/root/libRIO.so.6.26.10); by 0x5833AF8: TFile::TFile(char const*, char const*, char const*, int) (in /usr/lib64/root/libRIO.so.6.26.10); by 0xE2D86A6: TCling::LoadPCM(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >) (in /usr/lib64/root/libCling.so.6.26.10); by 0xE2D9A17: TCling::RegisterModule(char const*, char const**, char const**, char const*, char const*, void (*)(), std::vector<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >,; allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int> > > const&, char const**, bool, bool) (in /usr/lib64/root/libCling.so.6.26.10); by 0x4FF098E: TROOT::InitInterpreter() (in /usr/lib64/root/libCore.so.6.26.10); by 0x4FF0C9E: ROOT::Internal::GetROOT2() (in /usr/lib64/root/libCore.so.6.26.10); by 0x510209C: ROOT::TGenericClassInfo::GetClass() (in /usr/lib64/root/libCore.so.6.26.10); by 0x90B67CA: TFoamCell::Class() (in /usr/lib64/root/libFoam.so.6.26.10); by 0x504BE7A: TRef::operator=(TObject*) (in /usr/lib64/root/libCore.so.6.26.10); by 0x90B126F: TFoamCell::Fill(int, TFoamCell*, TFoamCell*, TFoamCell*) (in /usr/lib64/root/libFoam.so.6.26.10); Uninitialised value was created by a stack allocation; at 0xE2D8106: TCling::LoadPCM(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >) (in /usr/lib64/root/libCling.so.6.26.10); ```. This made me think that maybe TRef is the problem, and indeed replacind the TRef with simple indices solved the problem. Is there something that you can make of that valgrind output maybe?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12061#issuecomment-1397463096:2188,simpl,simple,2188,https://root.cern,https://github.com/root-project/root/pull/12061#issuecomment-1397463096,2,['simpl'],['simple']
Usability,"numsWithLock.h TListOfFunctions.h TListOfFunctionTemplates.h TMemberStreamer.h TMethodArg.h TMethodCall.h TMethod.h TProtoClass.h TRealData.h TSchemaHelper.h TSchemaRule.h TSchemaRuleSet.h TStatusBitsChecker.h TStreamerElement.h TStreamer.h TVirtualIsAProxy.h TVirtualRefProxy.h TVirtualStreamerInfo.h TVirtualArray.h TVirtualObject.h Getline.h /home/cai/root/root-6.26.06/core/base/inc/LinkDef.h ; Segmentation fault; gmake[2]: *** [core/CMakeFiles/G__Core.dir/build.make:470: core/G__Core.cxx] Error 1; gmake[1]: *** [CMakeFiles/Makefile2:33018: core/CMakeFiles/G__Core.dir/all] Error 2; gmake: *** [Makefile:156: all] Error 2. I've tried some times, the build never success, here I come for help. reeBSD# gcc --version ; gcc (FreeBSD Ports Collection) 11.3.0; Copyright (C) 2021 Free Software Foundation, Inc.; This is free software; see the source for copying conditions. There is NO; warranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. the compiler I installed:; FreeBSD# c++ --version; FreeBSD clang version 13.0.0 (git@github.com:llvm/llvm-project.git llvmorg-13.0.0-0-gd7b669b3a303); Target: x86_64-unknown-freebsd13.1; Thread model: posix; InstalledDir: /usr/bin; FreeBSD# clang --version; FreeBSD clang version 13.0.0 (git@github.com:llvm/llvm-project.git llvmorg-13.0.0-0-gd7b669b3a303); Target: x86_64-unknown-freebsd13.1; Thread model: posix; InstalledDir: /usr/bin; -->. ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->. ### Setup; <!--; 1. ROOT version 6.26.06; 2. Operating system FreeBSD13.1; 3. How you obtained ROOT: built it from source.; -->. ### Additional context; <!--; Add any other context about the problem here.; -->",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11430:8062,clear,clear,8062,https://root.cern,https://github.com/root-project/root/issues/11430,1,['clear'],['clear']
Usability,"o store these indexes in the trees when they are produced? If not, currently you have three possible solutions that I can think of:. - calculate the index from the value of `rdfentry_`, knowing how many entries are in each tree and their ordering inside the TChain; - store some unique identifier in each tree when it's produced (even a timestamp works, and although it's not elegant you don't have to worry about having that same value stored in each event because it will compress almost perfectly, occupying very little extra space on disk). With that unique identifier per tree you can build another tree that serves as a lookup table between id and index. It will have two branches, `id` and `index`, with the first taking the values of the ids of each tree and the second being an index from 0 to nTrees-1. Then you can use `TTree::BuildIndex` and `TChain::AddFriend` to add that lookup table tree as a friend of the original chain and thanks to `BuildIndex` the correct value of `index` will be returned for each event depending on the value of `id` in the original chain. More info at https://root.cern/manual/trees/#indexing-trees; - do a pass on each input tree to calculate whatever other quantities you need to calculate (let's call these trees `aux1`, `aux2` etc.), then make a TChain out of the original trees, another TChain out of the `aux` trees, and then add the second chain as a friend of the first (effectively creating a single large ""virtual"" TTree with everything in it). The simplest solution: with the upcoming `DefinePerSample` method you can solve this more easily, but the feature will only be merged in ROOT master in a few days ([PR here](https://github.com/root-project/root/pull/8841)). With `DefinePerSample` you could write something like this:. ```cpp; df.DefinePerSample(""index"", ""GetIndex(rdfsampleinfo_.AsString())""); ```. where `rdfsampleinfo_.AsString()` will be of the form `<filename>/<treename>`. I expect to merge this feature in master today or tomorrow.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9030#issuecomment-929346153:1838,simpl,simplest,1838,https://root.cern,https://github.com/root-project/root/issues/9030#issuecomment-929346153,2,['simpl'],['simplest']
Usability,"o use instead of ""groups"" (dataset is probably best). I see there are these two schools of thought but I cannot grasp how much of the community leans towards one vs the other. Do you think we should poll the larger audience at some point, for this and probably other questions? One other option could be just accepting both ""datasets"" and ""samples"" as the top-level key in the JSON object. > Cover TTree but plan for RNTuple support (metadata should not care about file formats, your program does). Indeed, this point was more directed towards us developers rather than user-facing. Metadata will definitely be orthogonal to the data format. > Allowing them opens up many possibilities, including mixed modes and joins across rather heterogenous datasets. This is an interesting comment, something that I hadn't put too much thought into. I think that it is much related with the other comment regarding joins. Mixed modes sounds intriguing although I can't see a clear path for its implementation in the I/O layer, rather we may be better off doing this at the analysis tool layer directly. In general, the usecase of reading the output of some ML pipeline during the execution of the analysis is definitely something we want to address. For what concerns this specification, the easy part is just deciding for something more generic than ""treenames"" when specifying these other data formats; the trickier part is deciding how these other input data should be read. See the next comment for more discussion about this. > The more general term for this is a a join, and I think you should use that concept here rather than the precise concept of friends in TTree/RNtuple. Yes I agree we can describe adding more columns to the main dataset as a join, with the implicit but crucial clarification that it is a view on the join operation and not a concrete join operation that would involve copying the two operands. With this sense, a friend TTree is equivalent to a left join where both unique IDs corr",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11624#issuecomment-1297411993:1316,clear,clear,1316,https://root.cern,https://github.com/root-project/root/issues/11624#issuecomment-1297411993,2,['clear'],['clear']
Usability,"ob, locals()); SyntaxError: function 'inner' uses import * and bare exec, which are illegal because it is a nested function; ```; Even though the Python 3 code path it not executed by Python 2, it must still be parsable by the Python 2 interpreter. ### test4.py. We now try to modify the Python 3 code path so that it is both valid Python 2 and valid Python 3, and still does the right thing when run as Python 3:; ```python; import sys; def test():; def inner():; glob = dict(globals()); glob['a'] = 123; if sys.version_info[0] >= 3:; exec('print(a); b = 456', glob, locals()) in {}; else:; exec('print(a); b = 456') in glob, locals(); print(locals()['b']); return inner(); test(); ```; This still works for Python 3. Checking whether the return value of the exec funtion (i.e. None) is a member of the empty set doesn't really change anything:; ```; $ python3 test4.py ; 123; 456; ```; However, the change results in that the Python 3 part no longer triggers a syntax error whe using Python 2:; ```; $ python2 test4.py ; 123; 456; ```; So we are happy now!. ### test5.py . Wait... If the new Python 3 code path no longer triggera an error for Python 2, can't we use that for Python 2 as well. That would be simpler:; ```python; def test():; def inner():; glob = dict(globals()); glob['a'] = 123; exec('print(a); b = 456', glob, locals()) in {}; print(locals()['b']); return inner(); test(); ```; This obiously works for Python 3:; ```; $ python3 test5.py ; 123; 456; ```; But although it doesn't trigger a syntax error fpr Python 2, it does trigger a runtime error:; ```; [ellert@bestlapp test]$ python2 test5.py ; Traceback (most recent call last):; File ""test5.py"", line 8, in <module>; test(); File ""test5.py"", line 7, in test; return inner(); File ""test5.py"", line 5, in inner; exec('print(a); b = 456', glob, locals()) in {}; TypeError: exec: arg 1 must be a string, file, or code object; ```; So no, that is not possible. The proposed change to the root code is based on the test4.py example.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5960:4354,simpl,simpler,4354,https://root.cern,https://github.com/root-project/root/pull/5960,1,['simpl'],['simpler']
Usability,"of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->; I have run into issue reported on ROOT forum here:; https://root-forum.cern.ch/t/tpython-problem/46064; and managed to narrow it down a little. When ROOT is compiled with python3.8/3.9, running the following (in both compiled code and interactively):; ; const char * b = (const char*) TPython::Eval(""'done'"");. leads to following error:. input_line_29:74:12: error: expected member name or ';' after declaration specifiers; TPyReturn isascii() {; ~~~~~~~~~ ^; /usr/include/ctype.h:234:22: note: expanded from macro 'isascii'; # define isascii(c) __isascii (c); ^; .; .; . ; (const char *) nullptr. It does not happen with python 3.6. ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->; Running the TPython::Eval command should simply return ""done"". Tested with ROOT 6.24.6+python3.6. root [1] const char * b = (const char*) TPython::Eval(""'done'""); (const char *) ""done"". ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->; Compile ROOT (tested with 6.24.6 and 6.26.8) with python 3.8 or 3.9 and run following in root interactive:. root [1] const char * b = (const char*) TPython::Eval(""'done'""). ### Setup; <!--; 1. ROOT version; 2. Operating system; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->; 1. 6.24.6 + python3.8/ 6.26.8 +python3.9; 2. Ubuntu18.04/centos7; 3. compiled locally / provided by remote host. ### Extra note:; I have been told that ROOT 6.26.10+python3.9 does not have this issue, so maybe some change in the pytho",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12182:1232,simpl,simply,1232,https://root.cern,https://github.com/root-project/root/issues/12182,1,['simpl'],['simply']
Usability,"ok, I have figured it out, it's because of; >0x01 	64 	Index64 	Mother columns of (nested) collections, counting is relative to the cluster; 0x02 	32 	Index32 	Mother columns of (nested) collections, counting is relative to the cluster. specifically, ""counting is relative to the cluster"" was not clear to me. But what it means is, if you have 2 pages of `Index64` for a column in this cluster, after ""de-split encoding"" you will get these two arrays:. ```julia; first page: [30, 4, 18, 14, 5, 8, 10, 7, 8, 18, ..., 22, 1, 16, 14, 14, 12, 4, 7, 15, 24]; first page after cumsum: [..., 81317, 81318, 81334, 81348, 81362, 81374, 81378, 81385, 81400, 81424]. second page: [81428, 13, 9, 7, 5, 20, 21, 4, 8, 6, ..., 128487, 128505, 128513, 128527, 128543, 128549, 128557, 128564, 128575, 128584]; ``` . you can see that the second page doesn't start with 4, instead, it starts with a huge number `81428`. I guess it means index pages are to be interpreted individually within the cluster.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14949#issuecomment-1999929430:297,clear,clear,297,https://root.cern,https://github.com/root-project/root/issues/14949#issuecomment-1999929430,2,['clear'],['clear']
Usability,"onda` libzmq build (which I was using in my dev setup) had a more favorable configuration than for instance most Linux native builds, especially because those native builds lack CMake configuration files. That latter fact made me decide to just make the built-in dependency the default; this way I wouldn't have to figure out how to best detect libzmq on each platform (or find / cobble together a good and freely licensed FindZeroMQ.cmake, but the general feeling around the ZeroMQ community is that this is a waste of effort, because the CMake config files that come along with libzmq itself already solve this finding problem; it's just unfortunate that the Linux distro's won't include them...). So in the end, because of time constraints, I made the choice to prioritize other things over putting a lot of effort into this dependency which will probably end up different in the near future anyway (because of the ppoll PR, which will make things a lot easier on the ROOT side). So, long story, I hope it is clear. Do you think that given this (temporary) situation, the choice for built-in only is acceptable?. Then about the RooFitZMQ option: agreed, I should add an option for that. The only catch is that this PR is part of a bigger series and the ""real"" end-product that should be optional in my opinion is RooFit::MultiProcess, so I wanted to wait with such an option until that PR (hopefully I'll be able to submit that one today). In this PR, RooFitZMQ is not used for anything and later on it will just be a library for RooFit::MultiProcess as well, so there would typically not really be a point for a user to want to build RooFitZMQ but not RooFit::MultiProcess. Do you think in this situation it makes sense to add the option for RooFitZMQ already or should I just do it for RooFit::MultiProcess? So, this option (say `-Droofit_multiprocess=ON`) would activate both RooFit::MultiProcess and RooFitZMQ, and also builtin_zeromq. I think that fail-on-missing is only relevant in case the",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8385#issuecomment-870411730:1875,clear,clear,1875,https://root.cern,https://github.com/root-project/root/pull/8385#issuecomment-870411730,2,['clear'],['clear']
Usability,"onsistentType); // throwing exceptions from jitted code cause problems on windows and MacOS+M1; #if !defined(_MSC_VER) || defined(R__ENABLE_BROKEN_WIN_TESTS); #if !(defined(R__MACOSX) && defined(__arm64__)); -TEST(RDFVary, RequireVariationsHaveConsistentTypeJitted); +TEST_P(RDFVary, RequireVariationsHaveConsistentTypeJitted); {; // non-jitted Define, jitted Vary with incompatible type; auto df = ROOT::RDataFrame(10).Define(""x"", [] { return 1.f; });; @@ -196,7 +196,7 @@ TEST(RDFVary, RequireVariationsHaveConsistentTypeJitted); #endif; #endif; ; -TEST(RDFVary, RequireReturnTypeIsRVec); +TEST_P(RDFVary, RequireReturnTypeIsRVec); {; auto df = ROOT::RDataFrame(10).Define(""x"", [] { return 1; });; EXPECT_THROW(; @@ -209,7 +209,7 @@ TEST(RDFVary, RequireReturnTypeIsRVec); std::runtime_error);; }; ; -TEST(RDFVary, RequireNVariationsIsConsistent); +TEST_P(RDFVary, RequireNVariationsIsConsistent); {; auto df = ROOT::RDataFrame(10).Define(""x"", [] { return 1; });; auto s = df.Vary(""x"", SimpleVariation, {}, /*wrong=*/3).Sum<int>(""x"");; @@ -231,10 +231,14 @@ TEST(RDFVary, RequireNVariationsIsConsistent); std::runtime_error);; ; std::cerr.rdbuf(oldCerrStreamBuf);; - EXPECT_EQ(strCerr.str(), ""RDataFrame::Run: event loop was interrupted\n"");; + std::string msg;; + const auto nRepetitions = GetParam() ? std::min(4u, std::thread::hardware_concurrency()) : 1u;; + for (auto i = 0u; i < nRepetitions; ++i); + msg += ""RDataFrame::Run: event loop was interrupted\n"";; + EXPECT_EQ(strCerr.str(), msg);; }; ; -TEST(RDFVary, VariationsForDoesNotTriggerRun); +TEST_P(RDFVary, VariationsForDoesNotTriggerRun); {; ROOT::RDataFrame df(10);; auto h = df.Define(""x"", [] { return 1; }).Histo1D<int>(""x"");; @@ -242,7 +246,7 @@ TEST(RDFVary, VariationsForDoesNotTriggerRun); EXPECT_EQ(df.GetNRuns(), 0);; }; ; -TEST(RDFVary, VariationsForWithNoVariations); +TEST_P(RDFVary, VariationsForWithNoVariations); {; ROOT::RDataFrame df(10);; auto h = df.Define(""x"", [] { return 1; }).Histo1D<int>(""x"");; @@ -250,7 +254,7 ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10715#issuecomment-1150873429:2110,Simpl,SimpleVariation,2110,https://root.cern,https://github.com/root-project/root/pull/10715#issuecomment-1150873429,1,['Simpl'],['SimpleVariation']
Usability,"oot/issues/8523), a next step is to translate also the [RooStats tutorials](https://root.cern/doc/master/group__tutorial__roostats.html) to pyROOT. The RooStats tutorials can be found in the [tutorials/roostats](https://github.com/root-project/root/tree/master/tutorials/roostats) directory. Right now, none of the tutorials are translated to Python yet. For a start, one could start with the translation of the very popular [StandardHypoTestInvDemo](https://root.cern.ch/doc/master/StandardHypoTestInvDemo_8C.html) tutorial, which explains the widely used AsymptoticCalculator and HypoTestInverter classes. Any new Python tutorials should be formatted with [black](https://github.com/psf/black):; ```; black --line-length=120 <tutorial file>.py; ```. *Please note:* if you want to work on this issue, please don't open a PR with all tutorials translated at once! This makes the review process unsustainable. For example, if you submit one translation at a time, you will get feedback that will help you improving your next translation, so the same comments don't have to be made redundantly. This saves time for both the contributor and reviewer :slightly_smiling_face: . Here is the list of all the RooStats tutorials and whether they have already been translated:. - [x] FourBinInstructional.C; - [x] HybridInstructional.C; - [x] HybridStandardForm.C; - [x] IntervalExamples.C; - [ ] ModelInspector.C; - [x] MultivariateGaussianTest.C; - [ ] OneSidedFrequentistUpperLimitWithBands.C; - [x] rs101_limitexample.C; - [ ] rs102_hypotestwithshapes.C; - [x] rs301_splot.C; - [ ] rs302_JeffreysPriorDemo.C; - [x] rs401c_FeldmanCousins.C; - [ ] rs401d_FeldmanCousins.C; - [x] rs601_HLFactoryexample.C; - [ ] rs602_HLFactoryCombinationexample.C; - [ ] rs603_HLFactoryElaborateExample.C; - [x] rs701_BayesianCalculator.C; - [x] rs_bernsteinCorrection.C; - [ ] rs_numberCountingCombination.C; - [x] rs_numbercountingutils.C; - [ ] StandardBayesianMCMCDemo.C; - [ ] StandardBayesianNumericalDemo.C; - [ ] Stan",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8758:1086,feedback,feedback,1086,https://root.cern,https://github.com/root-project/root/issues/8758,1,['feedback'],['feedback']
Usability,oottest_cling_other_assertDirWithParen/); - [projectroot.roottest.cling.staticinit.ROOT-10426.roottest_cling_staticinit_ROOT_10426_ROOT_10426](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/149178/testReport/projectroot.roottest.cling.staticinit/ROOT-10426/roottest_cling_staticinit_ROOT_10426_ROOT_10426/); - [projectroot.roottest.python.cling.roottest_python_cling_api](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/149178/testReport/projectroot.roottest.python/cling/roottest_python_cling_api/); - [projectroot.roottest.python.cling.roottest_python_cling_class](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/149178/testReport/projectroot.roottest.python/cling/roottest_python_cling_class/); - [projectroot.roottest.python.cpp.roottest_python_cpp_advanced](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/149178/testReport/projectroot.roottest.python/cpp/roottest_python_cpp_advanced/); - [projectroot.roottest.root.meta.roottest_root_meta_execUnloading_auto](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/149178/testReport/projectroot.roottest.root/meta/roottest_root_meta_execUnloading_auto/); - [projectroot.roottest.root.aclic.load.roottest_root_aclic_load_reload](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/149178/testReport/projectroot.roottest.root.aclic/load/roottest_root_aclic_load_reload/); - [projectroot.roottest.root.selector.simple.roottest_root_selector_simple_runtestLoadingSelector](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/149178/testReport/projectroot.roottest.root.selector/simple/roottest_root_selector_simple_runtestLoadingSelector/); - [projectroot.roottest.root.tree.addresses.roottest_root_tree_addresses_make](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/149178/testReport/projectroot.roottest.root.tree/addresses/roottest_root_tree_addresses_make/),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10294#issuecomment-1175116758:2544,simpl,simple,2544,https://root.cern,https://github.com/root-project/root/pull/10294#issuecomment-1175116758,4,['simpl'],['simple']
Usability,"or field descriptors</summary>; <br>; We wanted to be able to iterate over `FieldDescriptors` in alphabetical order by name, this is implemented in a3a3da6 using a layer of indirection, namely a vector of offsets `RFieldDescriptorRange::fOffsets`. ; I decided on making this an optional adapter method `SortByNames` instead of the default ordering, because it turns out iterating over `FieldDescriptors` is used elsewhere in the code (see improvements in API client code in 222a412). It also removes move-only semantics on `RFieldDescriptor` (my eventual intent is to remove move-only semantics on all `Descriptors`). `RFieldDescriptor` is made up of value-types only, so there are no resources to worry about. . For merging `NTuples`, we need to copy many descriptors (possibly with some small adjustments). ; With move-only semantics, we'd have to implement a `Clone` method for `RFieldDescriptor`. ; This is disadvantageous compared to relying on value semantics. `Clone`, while conceptually simple, is additional code to maintain.; * If we ever add fields to the class, Clone could be buggy (missing the added field); In contrast, the copy constructor will never miss any fields. ; * Move-only object lifetimes are non-trivial to reason about, we increase the risk of introducing UB by relying on a moved-from object, etc. . Regarding performance concerns (`RFieldDescriptor` has a vector member), I think C++ helps us here with Return Value Optimization and copy elision (simplified example here: https://godbolt.org/z/FwmKaD). . The high-level changes are: ; * define default values for a field descriptor; * remove move-only restriction on `RFieldDescriptor`; * implement a builder class for `RFieldDescriptor` to make construction (and using `RNTupleDescriptorBuilder`) more explicit. ; </details>. We introduce a new type, `RDanglingFieldDescriptor`, that supports the builder pattern for field descriptor values, e.g. ; ```c++; RFieldDescriptor fieldDesc = RDanglingFieldDescriptor(); .Fiel",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5934:1289,simpl,simple,1289,https://root.cern,https://github.com/root-project/root/pull/5934,1,['simpl'],['simple']
Usability,or simply delete the testfile on the server :-),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8292#issuecomment-872039777:3,simpl,simply,3,https://root.cern,https://github.com/root-project/root/issues/8292#issuecomment-872039777,2,['simpl'],['simply']
Usability,"ore/unix/src/TUnixSystem.cxx:407; #6 0x00007f4fcd162628 in sighandler (sig=11) at /home/vpadulan/Programs/rootproject/root/core/unix/src/TUnixSystem.cxx:3620; #7 <signal handler called>; #8 0x0000000000000000 in ?? (); #9 0x00000000004012fb in main () at tbuffermerger_setmaxsize_seq.cpp:25; ===========================================================. The lines below might hint at the cause of the crash.; You may get help by asking at the ROOT forum http://root.cern.ch/forum; Only if you are really convinced it is a bug in ROOT then please submit a; report at http://root.cern.ch/bugs Please post the ENTIRE stack trace; from above as an attachment in addition to anything else; that might help us fixing this issue.; ===========================================================; #8 0x0000000000000000 in ?? (); #9 0x00000000004012fb in main () at tbuffermerger_setmaxsize_seq.cpp:25; ===========================================================; ```. ## Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->; The program doesn't crash. TBufferMergerFile is updated alongside the tree (i.e. it should be the same pointer as `TTree::GetCurrentFile()`) and the partial files are correctly saved when the TTree changes to new ones. ## To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->; See the following gist:; https://gist.github.com/vepadulano/fc09150516193f1a801e0991591958ee. ## Setup; <!--; 1. ROOT version; 2. Operating system; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->; 1. ROOT master; 2. Fedora 32; 3. ROOT built with cmake: `cmake -GNinja -Ddev=ON -DCMAKE_BUILD_TYPE=Debug -Dtesting=ON -Droottest=ON`. ## Additional Context. Some print statements from `gdb`, also comme",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6523:3075,clear,clear,3075,https://root.cern,https://github.com/root-project/root/issues/6523,1,['clear'],['clear']
Usability,"ort`, `int16_t`, `uint16_t`, `int`, `unsigned int`, `long`, `unsigned long`, `long long`, and `unsigned long long` to try. Sure, let's do `str` to `const char*`, but that won't work for `std::string&`, and `std::string` usage is more common. But ah, what about `wchar_t`, `char16_t`, `char32_t`, `std::wstring`?. Collections, sure, but what if instead I have a tuple or list on the Python side and the template expects some STL container? Then it can not just be that STL container of say `T*`, but also the STL container of pointer any of the base classes, or worse, a mix thereof. And what if the tuple isn't actually targeting a container, but is an initalizer_list? There is often no (relevant) type information available at that point in Python, but many cases can still be resolved b/c the C++ side has some hints. For example `template<typename T, int N> void func(const std::array<T, N>&)` being given a Python tuple `(1, 2, 3)`. Absolutely clear what needs to be done for the conversion to work, but otherwise yet another case to add to the combinatorics. The above, current, situation is very much ""eeew"" and ""might not like the result."" It has also reached its breaking point, as you can see from the open bug reports and the constant hacking on workarounds. I appreciate that for the old PyROOT no-one actually seriously used templates, as folks avoided it in their interfaces b/c of non-support in the CINT world. The only client with moderately interesting templates would be RDataFrame. But in the real world, folks write modern C++ and template usage is much more pervasive. Just last week, I was looking at a massive series of variadically templated constructors: each peeled of an argument to eventually initialize a grand total of 3 data members. It was just a struct with an `unsigned int`, a `double`, and an `std::array<double, 3>`. The point of the whole set of constructors being that you can use initializer syntax with the data member in every order, either the ""naked"" types",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6393#issuecomment-696889449:2062,clear,clear,2062,https://root.cern,https://github.com/root-project/root/issues/6393#issuecomment-696889449,2,['clear'],['clear']
Usability,"ortunately I can not reproduce the problem with simple PDFs. ; There were no problem with last week nighlies as well as there are no problems with any released verisons of ROOT. - [ ] Checked for duplicates; <!--; Please search in; * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->. Segmentation fault for drawing complicated multicomponent PDFs in PyROOT/RooFit in calling for `plotOn` method.; Problem appears from the start of this week. There were no problem till with last week nightlies ; as well as there are no problems with any released versions of ROOT. . ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->. ### Setup; <!--; 1. ROOT version; 2. Operating system; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->. 1. ROOT version 6.25.01 from dev3 nightlies slot ; 2. lxplus.cern.ch ; 3. LCG nightlies dev3 slot . ### Additional context; <!--; Add any other context about the problem here.; -->. There are no problems with any released ROOT versions, and my tests with dev-3 LCG nightly slot till the mid mid of the previous week were successfull (unfortnuately I'venot run test Last Thursday and Friday). There are no problems with ""simple"" PDFs, and there is no problems with PDF-only plots.; Problem appears when I make plot of DATA with multicomponent PDFs.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8474:2071,simpl,simple,2071,https://root.cern,https://github.com/root-project/root/issues/8474,1,['simpl'],['simple']
Usability,"ot/issues?q=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->; RooProdPdf can accept the parameter Conditional, which tells RooFit what observables this pdf needs to be normalized on. ; This parameter has two forms:; * pdf, normalization observables, depsAreCond = false (default); * pdf, conditional observables, depsAreCond = true. The two forms are supposed to be identical if {conditional observables} = {all observables} - {normalization observables}.; This is true when not using BatchMode. With BatchMode on (cpu) instead what happens is that depsAreCond is always considered false and the pdf behaves as if conditional observables were normalization. ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->; No difference between the two forms of the RooProdPdf, even when using BatchMode. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->; ```c++; void test_batchmodecond() {; using namespace RooFit;. RooRealVar x(""x"", """", 0, 1);; RooRealVar xErr(""xErr"", """", 0.0001, 0.1);. RooGaussModel gm(""gm"", """", x, RooConst(0), xErr);; ; RooRealVar tau(""tau"", """", 0.4, 0, 1);; RooDecay decayPdf(""decayPdf"", """", x, tau, gm, RooDecay::SingleSided);; ; RooGamma errPdf(""errPdf"", """", xErr, RooConst(4), RooConst(0.005), RooConst(0));; ; ; RooProdPdf pdf1(""pdf1"", """", RooArgSet(errPdf), Conditional(decayPdf, x, false)); // what we want: decayPdf(x|xErr)*errPdf(xErr); RooProdPdf pdf2(""pdf2"", """", RooArgSet(errPdf), Conditional(decayPdf,",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11332:1085,clear,clear,1085,https://root.cern,https://github.com/root-project/root/issues/11332,1,['clear'],['clear']
Usability,"ote: candidate expects 1 argument, 0 provided; /usr/include/c++/11/bits/unique_ptr.h:211:7: note: candidate: ‘std::__uniq_ptr_data<_Tp, _Dp, <anonymous>, <anonymous> >::__uniq_ptr_data(std::__uniq_ptr_data<_Tp, _Dp, <anonymous>, <anonymous> >&&) [with _Tp = TInterpreterValue; _Dp = std::default_delete<TInterpreterValue>; bool <anonymous> = true; bool <anonymous> = true]’; 211 | __uniq_ptr_data(__uniq_ptr_data&&) = default;; | ^~~~~~~~~~~~~~~; /usr/include/c++/11/bits/unique_ptr.h:211:7: note: candidate expects 1 argument, 0 provided; make[3]: *** [geom/vecgeom/CMakeFiles/G__ConverterVG.dir/build.make:96: geom/vecgeom/CMakeFiles/G__ConverterVG.dir/G__ConverterVG.cxx.o] Error 1; make[3]: Leaving directory '<builddir>'; make[2]: *** [CMakeFiles/Makefile2:33593: geom/vecgeom/CMakeFiles/G__ConverterVG.dir/all] Error 2; make[2]: Leaving directory '<builddir>'; make[1]: *** [Makefile:159: all] Error 2; make[1]: Leaving directory '<builddir>'; ```. ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->; The compilation does not fail. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->; Compile with `vecgeom` option. ### Setup; <!--; 1. ROOT version; 2. Operating system; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->; Compiling ROOT v6.26.04 on Debian Unstable (amd64), with GCC 11.3.0 and VecGeom 1.2.0, with this configuration:; ```; -- ROOT Configuration . System Linux-5.18.0-2-amd64; Processor 4 core Intel(R) Core(TM) i5-8250U CPU @ 1.60GHz (x86_64); Build type None; Install path /usr; Compiler GNU 11.3.0; Compiler flags:; C -g -O2 -ffile-prefix-map=<srcdir>=. -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2 -Wno-impl",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10984:4343,clear,clear,4343,https://root.cern,https://github.com/root-project/root/issues/10984,1,['clear'],['clear']
Usability,"other compression algorithms already do this,. Indeed. The diffs was made less obvious because:; ZLIB decompression is already doing the right thing.; ZLIB and LZMA use a struct to pass the configuration rather than function argument so the code pattern is slight different.; ; > it seems that all existing code paths in TKey.cxx, TBufferXML.cxx, TMessage.cxx, and TBasket.cxx allocate a buffer that is slightly larger, so it's probably not an as critical problem . Right, the allocations is done:; ```; Int_t buflen = TMath::Max(512,fKeylen + fObjlen + 9*nbuffers + 28); //add 28 bytes in case object is placed in a deleted gap; ```; and used via; ```; char *bufcur = &fBuffer[fKeylen];; ```; so the only extra is `9*nbuffers + 28` which reduces the risk of writing the end since the size is larger than `fObjlen + kHeaderSize` but that leaves 2 additional question:; * why are those added?; * why doesn't RNTuple need it?. 01bb6965557fcc63d5d2e535b89f57e025922731 hints that the compression engine were seen as writing past the end ... it is plausible since the prior delta was ``9*nbuffers + 8` with `nbuffers==0` is common case. (in hindsight, this commit was not investigated long enough and needed a test). The `9*nbuffers` is meant to be for the keys and is now inaccurate (most algorithms have a 9 bytes header but for lz4 we have seemingly 73. This part is missing from the `RNTuple` usage. The consequences is that on data set that is not compressible `TTree` might use a bit more space (header + barely compressed size) vs `RNTuple` (uncompressed size which might be less than header + barely compressed size). This of course assume that the compression algorithm strictly respect the limit given (it would be a serious security risk if not). The `8` is commented as ""8 bytes in case object is placed in a deleted gap"" (the 20 was seemingly added to work-around the bug fixed here) ~and is not clear to me (the 'delete gap' is most likely talking about a space 'freed' inside a ROOT file.~",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14523#issuecomment-1932803605:1968,clear,clear,1968,https://root.cern,https://github.com/root-project/root/pull/14523#issuecomment-1932803605,2,['clear'],['clear']
Usability,"ould they go to a new subpackage of RooFit?. All YML/JSON-related things would best go into something that can be switched on/off based on the availability of YML/JSON. Something like `roofit/YMLFactory`?; > code placement: Is the way I split the functionality up into different source files acceptable, or would you wish for a smaller/higher granularity of the splitting?. I didn't really check that. Maybe we do this when there's a bit less noise after splitting off the const-ness fixes and interface changes.; > build system: Is the way I encoded the optional dependency acceptable?. I don't know. @oshadura? @Axel-Naumann ?; > class and function names: Are the names of classes and functions acceptable, or should things be renamed to be more conformant?. As long as classes and function names say what these things do, you have quite some freedom. Maybe just check whether the surrounding code capitalises functions or not. > Please don't review yet:; > ; > lack of functionality - more things will be added over time; > individual violations of the style guide (e.g. missing spaces or newlines). Sure, NP. > Please specifically suggest where documenation should be added!; > Does every function need a docstring, or just the ones announced in header files? Do these docstrings need to exist also for the Interface class added, and also for the implementations of that, or only for the RooFit-side of the code?. It would be good if every function and class had documentation. They are best placed in the implementation like in; https://root.cern.ch/doc/master/RooAbsPdf_8cxx_source.html. Header-only functions can have small docstrings in the header. The class documentation should explain what the class does, maybe give examples of how to use it. The function documentation should at least say what the function does, what kind of inputs it needs, and what it outputs.; An a-bit-too-long example is:; https://root.cern.ch/doc/master/RooAbsPdf_8cxx_source.html#l01255. **EDIT**:; Oh, and the f",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5151#issuecomment-598765709:1432,guid,guide,1432,https://root.cern,https://github.com/root-project/root/pull/5151#issuecomment-598765709,2,['guid'],['guide']
Usability,"ound than they should be maintained and improved occasionally. Of course maintenance takes resources. And I know that nobody ever has time to do it. But leaving everything as is in the face of possible improvements also has a cost that we pay be doing nothing. For this particular PR, if I jump into a header file, I do not know which methods are overriding something from a base class. But this knowledge helps me when reading new code. Now I pay the cost for having to look this information up in the inheritance hierarchy. In recent years we are lucky enough to even have automatic refactoring tools. They are far from perfect. But they are good. And applying them has very little cost for a moderate benefit. So I think at least those automatic refactorings should be applied to old code. Regular manual refactoring of production code would be even better, but I know I live in a dream world here ;). There is also the broken window theory, stating that code with bad quality encourages people working on it to also tolerate new code to be bad. I just started here in ROOT and I already heard from a few people that ROOT code is bad and I should have low expectations. So if we would improve the old code just a little we could also improve this mindset by a bit 👍 . So please consider to apply at least automatic refactorings!. > We cannot merge this as is. @bernhardmgruber what do you want to do with this? Can we close this, discuss, and then do what we converged on? I don't think this ""monster PR"" :-) will survive without conflicts for long, and it still needs a ton of work. @hageboeck mentioned somewhere to me that he would prefer to have smaller PRs just targeting subparts of ROOT, even if the changes are simple/automatic. I guess I could break up the PR into smaller pieces. And maybe just focus on the parts I am involved with the most. However, I would like to see clang-tidy checks enabled on the entire code at some point. So we can raise the quality bar just a little bit more.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6007#issuecomment-669905387:2601,simpl,simple,2601,https://root.cern,https://github.com/root-project/root/pull/6007#issuecomment-669905387,2,['simpl'],['simple']
Usability,"our message seems to suggest that it's only with GCC11 headers); > ; > * the ""stack trace"", i.e. `/usr/include/c++/12/experimental/string_view:43:10: note: submodule of top-level module 'std' implicitly imported here` and then `/home/sftnight/build/night/LABEL/ROOT-fedora36/SPEC/default/V/master/build/include/Rtypes.h:195:10: fatal error: could not build module 'ROOT_Foundation_Stage1_NoRTTI'` and then `#include ""TIsAProxy.h""`; > ; > ; > In general we tell our users (+/- always) ""can we please see the actual diagnostic"", and for the same reasons it's super helpful to include them here. The time we discussed this is waaay larger than the time it would have taken you to update the log to what Philippe proposes, rather than updating it to something that tries to address the issues (but seemingly fails?); > ; > But it's Philippe's review, I let him comment / deal with this if you still prefer to keep your current commit log. I simply wanted to add an explanation why Philippe suggests the inclusion of the actual diagnostic (and why I found it convincing and do it ever since he propose it to me). This issue exists on gcc11 and gcc12 (and I guess any gcc that made changes to libstdc++ and the experimental/string_view header file). I am not sure if pasting a diagnostic from a random system makes this clearer in any form. I agree with you this should have be 1 min review fixing an important failure that we introduced with the c++20 support and some of the new releases of maybe libstdc++. @pcanal I find pasting errors in the logs a bad practice, especially when it obfuscates the real fix. Can you suggest a commit message which adds enough information which makes me happy as well?. In general it is a bit unfortunate how the whole review went for this PR. This should been just a simple ""approve"" as I thought we needed a quick fix which I developed in between travels and a business trip... I suspect this would help me define urgent/important in similar circumstances in future...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12276#issuecomment-1430019305:1730,simpl,simply,1730,https://root.cern,https://github.com/root-project/root/pull/12276#issuecomment-1430019305,6,"['clear', 'simpl']","['clearer', 'simple', 'simply']"
Usability,ovarianceSqueeze.h Minuit2/MnCross.h Minuit2/MnEigen.h Minuit2/MnFcn.h Minuit2/MnFumiliMinimize.h Minuit2/MnFunctionCross.h Minuit2/MnGlobalCorrelationCoeff.h Minuit2/MnHesse.h Minuit2/MnLineSearch.h Minuit2/MnMachinePrecision.h Minuit2/MnMatrix.h Minuit2/MnMigrad.h Minuit2/MnMinimize.h Minuit2/MnMinos.h Minuit2/MnParabola.h Minuit2/MnParabolaFactory.h Minuit2/MnParabolaPoint.h Minuit2/MnParameterScan.h Minuit2/MnPlot.h Minuit2/MnPosDef.h Minuit2/MnPrint.h Minuit2/MnRefCountedPointer.h Minuit2/MnReferenceCounter.h Minuit2/MnScan.h Minuit2/MnSeedGenerator.h Minuit2/MnSimplex.h Minuit2/MnStrategy.h Minuit2/MnTiny.h Minuit2/MnTraceObject.h Minuit2/MnUserCovariance.h Minuit2/MnUserFcn.h Minuit2/MnUserParameterState.h Minuit2/MnUserParameters.h Minuit2/MnUserTransformation.h Minuit2/MnVectorTransform.h Minuit2/ModularFunctionMinimizer.h Minuit2/NegativeG2LineSearch.h Minuit2/Numerical2PGradientCalculator.h Minuit2/ParametricFunction.h Minuit2/ScanBuilder.h Minuit2/ScanMinimizer.h Minuit2/SimplexBuilder.h Minuit2/SimplexMinimizer.h Minuit2/SimplexParameters.h Minuit2/SimplexSeedGenerator.h Minuit2/SinParameterTransformation.h Minuit2/SqrtLowParameterTransformation.h Minuit2/SqrtUpParameterTransformation.h Minuit2/StackAllocator.h Minuit2/VariableMetricBuilder.h Minuit2/VariableMetricEDMEstimator.h Minuit2/VariableMetricMinimizer.h Minuit2/VectorOuterProduct.h TMinuit2TraceObject.h /mnt/build/workspace/root-pullrequests-build/root/math/minuit2/inc/LinkDef.h ; - [2020-10-25T10:36:13.979Z] /mnt/build/workspace/root-pullrequests-build/build/include/Minuit2/MnPrint.h:130:69: error: use of undeclared identifier 't' ; - [2020-10-25T10:36:13.979Z] /mnt/build/workspace/root-pullrequests-build/build/include/Minuit2/MnPrint.h:132:24: error: no member named 'Warning' in 'ROOT::Minuit2::MnPrintLevel' ; - [2020-10-25T10:36:13.979Z] /mnt/build/workspace/root-pullrequests-build/build/include/Minuit2/MnPrint.h:133:71: error: use of undeclared identifier 't' ; - [2020-10-25T10:36:13.979Z] /,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6705#issuecomment-716125314:5183,Simpl,SimplexBuilder,5183,https://root.cern,https://github.com/root-project/root/pull/6705#issuecomment-716125314,1,['Simpl'],['SimplexBuilder']
Usability,"panda 2.2 used to be the more recent version and a special check was needed in case a version older that 2.2 was used.; Some options were backward incompatible between version older that 2.2 and version 2.2. Now on the jenkins machine used to build the guides, the pandoc version is 2.5 so we do not need to check on pandoc version anymore. And the way the test was done produced a wrong set of options for versions above 2.2.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5931:253,guid,guides,253,https://root.cern,https://github.com/root-project/root/pull/5931,1,['guid'],['guides']
Usability,"plicates; <!--; Please search in; * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->; When fitting a RooSimultaneous pdf using BatchMode(true) (which should be cpu) the fit contains additional parameters, one for each observable, called `_<first category label>_<obs name>`, where the category is the one used in the RooSimultaneous.; The fit converges, but fails at the HESSE step, leading to an ""approximation only"" covariance matrix.; The label used is, from what I understood, based on label ordering and not the indices.; The mapping from category label to index however influences the fit result. ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->; No extra parameters, successful HESSE. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->; ```C++; void test_batchModeCategory() {; RooRealVar x(""x"", """", 0, 1);; RooRealVar rnd(""rnd"", """", 0, 1);; // change this mapping from labels to indices to change the fit result (slightly); RooThresholdCategory catThr(""cat"", """", rnd, ""a"", 2);; catThr.addThreshold(1./3, ""b"", 0);; catThr.addThreshold(2./3, ""c"", 1);; ; RooRealVar m(""m"", """", 0.5, 0, 1);; RooGaussian g(""g"", """", x, m, RooFit::RooConst(0.1));; RooUniform rndPdf(""rndPdf"", """", rnd);; RooProdPdf pdf(""pdf"", """", RooArgSet(g, rndPdf));; ; auto ds = pdf.generate(RooArgSet(x, rnd), RooFit::Name(""ds""), RooFit::NumEvents(100));; auto cat = dynamic_cast<RooCategory*>(ds-",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10991:1006,clear,clear,1006,https://root.cern,https://github.com/root-project/root/issues/10991,1,['clear'],['clear']
Usability,"pped; -- Detecting CXX compile features; -- Detecting CXX compile features - done; -- Found nlohmann_json: /usr/local/share/cmake/nlohmann_json/nlohmann_jsonConfig.cmake (found suitable version ""3.11.2"", minimum required is ""3.11.2"") ; CMake Error at /usr/local/Cellar/cmake/3.27.8/share/cmake/Modules/FindPackageHandleStandardArgs.cmake:230 (message):; Could NOT find Vdt (missing: VDT_INCLUDE_DIR VDT_LIBRARY); Call Stack (most recent call first):; /usr/local/Cellar/cmake/3.27.8/share/cmake/Modules/FindPackageHandleStandardArgs.cmake:600 (_FPHSA_FAILURE_MESSAGE); /usr/local/Cellar/root/6.30.00/share/root/cmake/modules/FindVdt.cmake:63 (find_package_handle_standard_args); /usr/local/Cellar/cmake/3.27.8/share/cmake/Modules/CMakeFindDependencyMacro.cmake:76 (find_package); /usr/local/share/root/cmake/rootConfig.cmake:132 (find_dependency); CMakeLists.txt:3 (find_package). -- Configuring incomplete, errors occurred!; ```. ### Reproducer. - Install Root and CMake using Homebrew.; - Create a simple project.; ```cmake; cmake_minimum_required(VERSION 3.20); project(minimum_root); find_package(Root CONFIG REQUIRED); ```; - Run CMake with `cmake -S .`. ### ROOT version; ```; ------------------------------------------------------------------; | Welcome to ROOT 6.30/00 https://root.cern |; | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |; | Built for macosx64 on Nov 06 2023, 16:07:43 |; | From heads/v6-30-patches@tags/v6-30-00 |; | With Apple clang version 15.0.0 (clang-1500.0.40.1) |; | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |; ------------------------------------------------------------------; ```. ### Installation method. homebrew. ### Operating system. MacOS(14.1.1). ### Additional context. Since the update in the Homebrew formulae at [this commit](https://github.com/Homebrew/homebrew-core/commit/46e299a429160ea85f93dd15a4359b9cc63e8efb), an issue has arisen. As a temporary workaround, set the following values in `CMakeLists.txt` b",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14113:1777,simpl,simple,1777,https://root.cern,https://github.com/root-project/root/issues/14113,1,['simpl'],['simple']
Usability,"proved and how. There are several issues with the class RooBarlowBeestonLL on the master. Short version:. - [ ] The name suggests it implements the Barlow-Beeston likelihood, while in fact it implements Conway's approximation. The class name is misleading, since it does not match the implementation. The difference between the two matters, they are not equivalent. - [ ] The code documentation, shown here https://root.cern/doc/master/classRooStats_1_1HistFactory_1_1RooBarlowBeestonLL.html, says it is the Barlow-Beeston likelihood, which is incorrect. - [ ] References to Conway in code documentation and user guide (https://cds.cern.ch/record/1456844/files/CERN-OPEN-2012-016.pdf, page 5) are missing. The reference is https://inspirehep.net/literature/891252. Note that the user guide under that link contains no bibliography at all. - [ ] Clarification wrt usage of weighted samples. It should be clarified both in the code documentation and in the user guide, if the implementation can handle weighted templates in the asymptotic limit, by applying the SPD approximation discussed by Bohm and Zech, 2014. This is possible (as we show in our paper https://inspirehep.net/literature/2512593), but only if the implementations handles this special case. Conway's paper does not discuss weighted templates and does not explain how to use the SPD approximation in this context. Long version:. The code documentation of RooBarlowBeestonLL on the master is incorrect. It is stated that this class implements the Barlow-Beeston likelihood computation, but it actually implements an approximation introduced by Conway in 2011. The approximation is only asymptotically equivalent to Barlow-Beeston, for small samples it is inferior. We recently published a paper about a new approximation to Barlow-Beeston (https://inspirehep.net/literature/2512593), which is fast to compute and can be used with weighted templates and weighted data. In this paper, we compare the performance of Barlow-Beeston and seve",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/15252:1001,guid,guide,1001,https://root.cern,https://github.com/root-project/root/issues/15252,1,['guid'],['guide']
Usability,"ps://github.com/root-project/root/issues?q=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug; Running our test on SWAN, I found that TFIile can not read anymore a remote ROOT file from github.; The code; `; TFile::Open(""https://raw.githubusercontent.com/iml-wg/tmvatutorials/master/inputdata.root"");; `. produces; `; Error in <DavixOpen>: can not open file ""https://raw.githubusercontent.com/iml-wg/tmvatutorials/master/inputdata.root"" with davix: Result HTTP 404 : File not found after 3 attempts (18) ; `; The file exists and the code works with LCG_99. I did an additional test with a ROOT different ROOT file inside the domain cern.ch and it works for LCG_100; `; TFile::Open(""https://root.cern.ch/files/summer_student_tutorial_tracks.root"");; `; <!--; A clear and concise description of what the wrong behavior is.; -->. ### Expected behavior; TFIle should be able to read the file from github.; <!--; A clear and concise description of what you expected to happen.; -->. ### To Reproduce; on lxplus; `; source /cvmfs/sft.cern.ch/lcg/views/LCG_100/x86_64-centos7-gcc8-opt/setup.sh. [ozapatam@lxplus7103 ~]$ root -l -b. root [0] auto f=TFile::Open(""https://raw.githubusercontent.com/iml-wg/tmvatutorials/master/inputdata.root"");. Error in <DavixOpen>: can not open file ""https://raw.githubusercontent.com/iml-wg/tmvatutorials/master/inputdata.root"" with davix: Result HTTP 404 : File not found after 3 attempts (18); `. on LCG_99 it works; `; source /cvmfs/sft.cern.ch/lcg/views/LCG_99/x86_64-centos7-gcc8-opt/setup.sh . [ozapatam@lxplus7120 ~]$ root -l. root [0] auto f=TFile::Open(""https://raw.githubusercontent.com/iml-wg/tmvatutorials/master/inputdata.root"");. root [1] f->ls();; TDavixFile** https://raw.githubusercontent.com/iml-wg/tmvatutorials/master/inputdata.root; ",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8155:1048,clear,clear,1048,https://root.cern,https://github.com/root-project/root/issues/8155,1,['clear'],['clear']
Usability,"pts;. if (fegetenv(&fenv)) {; return -1;; }; old_excepts = fenv.__control & FE_ALL_EXCEPT;. // unmask; fenv.__control &= ~new_excepts;; fenv.__mxcsr &= ~(new_excepts << 7);. return fesetenv(&fenv) ? -1 : old_excepts;; }. inline int fedisableexcept(unsigned int excepts); {<!--; static fenv_t fenv;; unsigned int new_excepts = excepts & FE_ALL_EXCEPT;; // all previous masks; unsigned int old_excepts;. if (fegetenv(&fenv)) {; return -1;; }; old_excepts = fenv.__control & FE_ALL_EXCEPT;. // mask; fenv.__control |= new_excepts;; fenv.__mxcsr |= new_excepts << 7;. return fesetenv(&fenv) ? -1 : old_excepts;; }. #else; inline int feenableexcept(unsigned int excepts); {; #pragma STDC FENV_ACCESS ON; fexcept_t flags;; /* Save current exception flags. */; fegetexceptflag(&flags, FE_ALL_EXCEPT);. feclearexcept(FE_ALL_EXCEPT); /* clear all fp exception conditions */; return fesetexceptflag(&flags, excepts) != 0 ? -1 : flags; /* set new flags */. }. inline int fedisableexcept(unsigned int excepts); {; #pragma STDC FENV_ACCESS ON; fexcept_t flags;; /* Save current exception flags. */; fegetexceptflag(&flags, FE_ALL_EXCEPT);. feclearexcept(FE_ALL_EXCEPT); /* clear all fp exception conditions */; return fesetexceptflag(&flags, ~excepts) != 0 ? -1 : flags; /* set new flags */; }. #endif; #endif. int main(int argc, char **argv) {; feenableexcept(FE_DIVBYZERO | FE_INVALID | FE_OVERFLOW);; TColor* c= new TColor();; TRandom* r= new TRandom();; float rgb[3];; //c->SetRGB(212.467392, 0.529984, 94.476196);; for (size_t i=0; i<1000000;i++); {; rgb[0]=512*(1.0-r->Rndm());; rgb[1]=512*(1.0-r->Rndm());; rgb[2]=512*(1.0-r->Rndm());; printf(""%f %f %f\n"",rgb[0],rgb[1],rgb[2]);; c->SetRGB(rgb[0],rgb[1],rgb[2]);; }; delete c;; delete r;; return 0;; }; ```; Compile; ```; clang++ color.cxx $(root-config --glibs --cflags --libs) -o color; ```; Run; ```; ./color; ```; ## Setup; 1. ROOT 6.22.02 from the official site that matches XCode. ## Additional context; This is similar to #6344 but seen only on Mac.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6373:2277,clear,clear,2277,https://root.cern,https://github.com/root-project/root/issues/6373,1,['clear'],['clear']
Usability,"pyROOT uses special thread for events processing, where `gSystem->ProcessEvents()` are called.; Both in script and interactive mode. Problem that thread id is not known from beginning and changing once when running python in script mode. Therefore special mode is now implemented, which simply uses `gSystem->ProcessEvents()` calls to allow processing; of web-windows communication. RWebWindow simply ""trust"" that ProcessEvents will not be called concurrently. Also improve timeout handling in THttpServer and in TWebCanvas. Both using special timers to process their events.; While it is not always possible `TurnOn/TurnOff` timers (it fails from inside timeout handler), just increase/decrease timeout interval, but always let run timer.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13630:287,simpl,simply,287,https://root.cern,https://github.com/root-project/root/pull/13630,2,['simpl'],['simply']
Usability,"qqqqqqq : abort process; .which [file] : show path of macro file; .![OS_command] : execute OS-specific shell command; .!root -? : print ROOT usage (CLI options); ```. ```; root [1] .? edit. ROOT terminal keyboard shortcuts (GNU-readline style).; ==============================================================================; Arrow_Left : move cursor left [Ctrl+B]; Arrow_Right : move cursor right [Ctrl+F] [Ctrl+G]; Home : move cursor to beginning of line [Ctrl+A]; End : move cursor to end of line [Ctrl+E]; Ctrl+Arrow_Left : jump to previous word [Esc,B] [Alt,B]; Ctrl+Arrow_Right : jump to next word [Esc,F] [Alt,F]; Backspace : delete previous character [Ctrl+H]; Del : delete next character [Ctrl+D]; Esc,Backspace : delete previous word [Ctrl+W] [Esc,Ctrl+H] [Alt+Backspace] [Esc,Del] [Esc,Ctrl+Del]; Ctrl+Del : delete next word [Esc,D] [Alt,D]; Ctrl+U : cut all characters between cursor and start of line; Ctrl+K : cut all characters between cursor and end of line; Ctrl+T : transpose characters; Esc,C : character to upper and jump to next word; Esc,L : word to lower case and jump to its end; Esc,U : word to upper case and jump to its end; Ctrl+Shift+C : copy clipboard content; Ctrl+Shift+V : paste clipboard content [Ctrl+Y] [Alt+Y]; Ins : toggle overwrite mode; Ctrl+_ : undo last keypress action; Tab : autocomplete command or print suggestions [Ctrl+I] [Esc,Tab]; Enter : execute command [Ctrl+J] [Ctrl+M]; Ctrl+L : clear prompt screen; Ctrl+D : quit ROOT (if empty line); Ctrl+C : send kSigInt interrupt signal; Ctrl+Z : send kSigStop pause job signal; Arrow_Down : navigate downwards in command history [Ctrl+N]; Arrow_Up : navigate upwards in command history [Ctrl+P]; Ctrl+R ; Ctrl+S : search command in your history by typing a string.; Use Backspace if you mistyped (but not arrows).; Press Ctrl+R (Ctrl+S) repeateadly to navigate matches in reverse (forward) order; Arrow_Right : after Ctrl+R (Ctrl+S), select current match of the history search; [Ctrl+O] [Enter] [Ctrl+J] [Ctr",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10121#issuecomment-1084927674:4968,undo,undo,4968,https://root.cern,https://github.com/root-project/root/pull/10121#issuecomment-1084927674,6,"['clear', 'pause', 'undo']","['clear', 'pause', 'undo']"
Usability,"r TTree but plan for RNTuple support (metadata should not care about file formats, your program does); * Should support friend trees per group *** (see below); * Should support entry ranges per group (why? this makes little operational sense from the POV of an analyst); * No indexed friend trees (at least for now) *** (also); """"""; This specification of requirements mixes things that are describing the data (metadata) and and how to react to it (something in a program, not part of the schema). I believe a clean factorization along these lines is very important to creating a well-adopted schema if you intend to develop a standard. As to files - it is not very common but people do use parquet or hdf5 in analysis. Removing those formats as concepts to describe a dataset is rather limiting. Allowing them opens up many possibilities, including mixed modes and joins across rather heterogenous datasets. This can make things much easier in the case that, for instance, some random machine learning tool cannot output root files but can produce some other usefully structured data format. . *** - The more general term for this is a a join, and I think you should use that concept here rather than the precise concept of friends in TTree/RNtuple, which is limiting in scope for what is possible for dataset augmentation. Moreover, this allows the definition of left/right/inner/outer joins at the metadata level which is extremely useful for understanding how that additional data is intended to be used (are you just augmenting the number of columns in the dataset, are you x-referencing two datasets, etc.). It is then up to the system ingesting this data to implement the join specified by the user correctly (which can be tested for). For the second *** reference, this is also a restriction of your program, not the metadata, an error should be thrown by whatever is executing and cannot handle a case rather than restricting concepts for describing a dataset. Furthermore, going to joins as",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11624#issuecomment-1293743624:2368,learn,learning,2368,https://root.cern,https://github.com/root-project/root/issues/11624#issuecomment-1293743624,2,['learn'],['learning']
Usability,"r"".; -->. ### Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->. I my project I use ROOT from LCG nightlies build dev3 slot; And for my tests (with ctest and nose) I get an error:. ``` ; Traceback (most recent call last):; File ""/afs/cern.ch/user/i/ibelyaev/cmtuser/RELEASE/ostap/build/INSTALL/LCGdev3/x86_64-centos7-gcc11-opt/lib/python3.9/site-packages/ostap/core/build_dir.py"", line 28, in <module>; import ROOT, os, glob ; File ""/cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Thu/x86_64-centos7-gcc11-opt/lib/ROOT/__init__.py"", line 69, in <module>; module = importlib.import_module(pyz.__name__ + '.' + module_name); File ""/cvmfs/sft-nightlies.cern.ch/lcg/latest/Python/3.9.6-b0f98/x86_64-centos7-gcc11-opt/lib/python3.9/importlib/__init__.py"", line 127, in import_module; return _bootstrap._gcd_import(name[level:], package, level); File ""/cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Thu/x86_64-centos7-gcc11-opt/lib/ROOT/pythonization/_roofit/__init__.py"", line 26, in <module>; from ._roocategory import RooCategory; File ""/cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Thu/x86_64-centos7-gcc11-opt/lib/ROOT/pythonization/_roofit/_roocategory.py"", line 18; """"""Constructor of RooCategory takes a map as an argument also supports python dictionaries.; ^; SyntaxError: invalid escape sequence \c; ```. ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->. ### Setup; <!--; 1. ROOT version; 2. Operating system; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->. ROOT version from LCG nightlies dev3 slot . ### Additional context; <!--; Add any other context about the problem here.; -->",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8902:1724,clear,clear,1724,https://root.cern,https://github.com/root-project/root/issues/8902,1,['clear'],['clear']
Usability,"r, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<ROOT::Detail::RDF::RDefineBase> >, true> > >::_M_deallocate_node (__n=0x22dedd0, this=<optimized out>) at /usr/include/c++/12/bits/hashtable_policy.h:1984; #16 std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<ROOT::Detail::RDF::RDefineBase> >, true> > >::_M_deallocate_nodes (this=<optimized out>, __n=0x22ded30) at /usr/include/c++/12/bits/hashtable_policy.h:2006; #17 std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<ROOT::Detail::RDF::RDefineBase> >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<ROOT::Detail::RDF::RDefineBase> > >, std::__detail::_Select1st, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >::clear (this=0x1cf6570) at /usr/include/c++/12/bits/hashtable.h:2500; #18 std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<ROOT::Detail::RDF::RDefineBase> >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<ROOT::Detail::RDF::RDefineBase> > >, std::__detail::_Select1st, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12023:16567,clear,clear,16567,https://root.cern,https://github.com/root-project/root/issues/12023,2,['clear'],['clear']
Usability,"ra/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->; `RooKeysPdf` do not have an internal generation method, and relies on numerical generation (e.g. `RooAcceptReject`).; However, if the call to generate contains `ProtoData`, the distribution of the generated data is not correct. ; I tried the same with other numerically generated pdf, specifically `RooGenericPdf`, but only `RooKeysPdf` seems to be affected.; This may be caused by a bad interaction between `RooKeysPdf` and `RooAcceptReject`, since adding a prototype switches the generator from `RooFoamGenerator` to `RooAcceptReject`.; I verified that forcing `RooFoamGenerator` (which I can only do by recompiling ROOT, as far as I know) solves the issue. ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->; Generation works correctly regardless of prototype data. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->; ```; import ROOT. x = ROOT.RooRealVar('x', '', 0, 1); pdf_x = ROOT.RooGenericPdf('pdf_x', 'x', [x]). # correct, of course; dt_base = pdf_x.generate({x}, NumEvents = 10000). pdf_keys = ROOT.RooKeysPdf('pdf_keys', '', x, dt_base, ROOT.RooKeysPdf.MirrorBoth). # also correct; dt_keys = pdf_keys.generate({x}, NumEvents = 10000). y = ROOT.RooRealVar('y', '', 0, 1); proto = ROOT.RooDataSet('proto_y', '', {y}); proto.add(ROOT.RooArgSet(y)). # still correct; dt_base_with_proto = pdf_x.generate({x}, NumEvents = 10000, ProtoData = proto). # broken; dt_keys_with_proto = pdf_keys.generate({x}, NumEvents = 10000, ",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12286:1149,clear,clear,1149,https://root.cern,https://github.com/root-project/root/issues/12286,1,['clear'],['clear']
Usability,"rain(ws->argSet(""norm_bkg,gamma_stat_CR_bin_0,gamma_stat_SR_bin_0,gamma_stat_SR_bin_1,gamma_stat_SR_bin_2,gamma_stat_SR_bin_3,gamma_stat_SR_bin_4,gamma_stat_SR_bin_5,gamma_stat_SR_bin_6,gamma_stat_SR_bin_7,gamma_stat_SR_bin_8,gamma_stat_SR_bin_9,gamma_stat_SR_bin_10,norm_bkg,gamma_stat_CR_bin_0,gamma_stat_SR_bin_0,gamma_stat_SR_bin_1,gamma_stat_SR_bin_2,gamma_stat_SR_bin_3,gamma_stat_SR_bin_4,gamma_stat_SR_bin_5,gamma_stat_SR_bin_6,gamma_stat_SR_bin_7,gamma_stat_SR_bin_8,gamma_stat_SR_bin_9,gamma_stat_SR_bin_10"")),GlobalObservables(ws->argSet(""nominalLumi,nom_gamma_stat_CR_bin_0,nom_gamma_stat_SR_bin_0,nom_gamma_stat_SR_bin_1,nom_gamma_stat_SR_bin_2,nom_gamma_stat_SR_bin_3,nom_gamma_stat_SR_bin_4,nom_gamma_stat_SR_bin_5,nom_gamma_stat_SR_bin_6,nom_gamma_stat_SR_bin_7,nom_gamma_stat_SR_bin_8,nom_gamma_stat_SR_bin_9,nom_gamma_stat_SR_bin_10,nominalLumi,nom_gamma_stat_CR_bin_0,nom_gamma_stat_SR_bin_0,nom_gamma_stat_SR_bin_1,nom_gamma_stat_SR_bin_2,nom_gamma_stat_SR_bin_3,nom_gamma_stat_SR_bin_4,nom_gamma_stat_SR_bin_5,nom_gamma_stat_SR_bin_6,nom_gamma_stat_SR_bin_7,nom_gamma_stat_SR_bin_8,nom_gamma_stat_SR_bin_9,nom_gamma_stat_SR_bin_10"")));. std::cout << ""starting point : "" << nll->getVal() << std::endl;; RooArgSet params(*nll->getParameters((RooArgSet*)0));; params.Print(""v"");; ; gErrorIgnoreLevel = 0;; ROOT::Minuit2::MnPrint::ClearFilter();; ROOT::Math::MinimizerOptions::SetDefaultPrintLevel(2);; ; RooMinimizer mini(*nll);; mini.setMaxFunctionCalls(10000);; mini.setMaxIterations(175000);; mini.setPrintLevel(2);; mini.optimizeConst(1);; mini.setMinimizerType(""Minuit2"");; mini.setEvalErrorWall(1);; mini.setOffsetting(1);; mini.setPrintEvalErrors(5);; mini.setVerbose(0);; mini.setProfile(1);; mini.setStrategy(2);; mini.setEps(0.001);; ; std::cout << ""starting minimization"" << std::endl;; ; mini.minimize(""Minuit2"",""Migrad"");. // the call to nll->getVal() here seems to break it; std::cout << ""nll val at minimum is "" << nll->getVal() << std::endl;; ; mini.hesse();; }; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7659:2035,Clear,ClearFilter,2035,https://root.cern,https://github.com/root-project/root/issues/7659,1,['Clear'],['ClearFilter']
Usability,raw_input is simply input in Python 3. suggested in https://sft.its.cern.ch/jira/browse/ROOT-10721,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5517:13,simpl,simply,13,https://root.cern,https://github.com/root-project/root/pull/5517,1,['simpl'],['simply']
Usability,"rc::LegacyRTDyldObjectLinkingLayer::LegacyRTDyldObjectLinkingLayer(llvm::orc::ExecutionSession&, llvm::orc::LegacyRTDyldObjectLinkingLayer::ResourcesGetter, llvm::orc::LegacyRTDyldObjectLinkingLayer::NotifyLoadedFtor, llvm::orc::LegacyRTDyldObjectLinkingLayer::NotifyFinalizedFtor, llvm::orc::LegacyRTDyldObjectLinkingLayer::NotifyFreedFtor)’ is deprecated (declared at /data/sftnight/workspace/root-pullrequests-build/root/interpreter/llvm/src/include/llvm/ExecutionEngine/Orc/RTDyldObjectLinkingLayer.h:356) [-Wdeprecated-declarations] ; - [2020-09-27T10:44:21.421Z] /data/sftnight/workspace/root-pullrequests-build/root/interpreter/cling/lib/Interpreter/IncrementalJIT.cpp:344:33: warning: ‘llvm::orc::LegacyIRCompileLayer&lt;BaseLayerT, CompileFtor&gt;::LegacyIRCompileLayer(BaseLayerT&, CompileFtor, llvm::orc::LegacyIRCompileLayer&lt;BaseLayerT, CompileFtor&gt;::NotifyCompiledCallback) [with BaseLayerT = cling::IncrementalJIT::RemovableObjectLinkingLayer; CompileFtor = llvm::orc::SimpleCompiler; llvm::orc::LegacyIRCompileLayer&lt;BaseLayerT, CompileFtor&gt;::NotifyCompiledCallback = std::function&lt;void(long unsigned int, std::unique_ptr&lt;llvm::Module&gt;)&gt;]’ is deprecated (declared at /data/sftnight/workspace/root-pullrequests-build/root/interpreter/llvm/src/include/llvm/ExecutionEngine/Orc/IRCompileLayer.h:136) [-Wdeprecated-declarations] ; - [2020-09-27T10:44:21.421Z] /data/sftnight/workspace/root-pullrequests-build/root/interpreter/cling/lib/Interpreter/IncrementalJIT.cpp:344:33: warning: ‘llvm::orc::LazyEmittingLayer&lt;BaseLayerT&gt;::LazyEmittingLayer(BaseLayerT&) [with BaseLayerT = llvm::orc::LegacyIRCompileLayer&lt;cling::IncrementalJIT::RemovableObjectLinkingLayer, llvm::orc::SimpleCompiler&gt;]’ is deprecated (declared at /data/sftnight/workspace/root-pullrequests-build/root/interpreter/llvm/src/include/llvm/ExecutionEngine/Orc/LazyEmittingLayer.h:265) [-Wdeprecated-declarations] ; - [2020-09-27T10:44:21.421Z] /data/sftnight/workspace/root-pullrequests-bu",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6385#issuecomment-699618396:2830,Simpl,SimpleCompiler,2830,https://root.cern,https://github.com/root-project/root/pull/6385#issuecomment-699618396,1,['Simpl'],['SimpleCompiler']
Usability,"re broken?. > I would appreciate if we can coordinate next time such breaking changes before asking for a llvm review and land patches in these particularly sensitive areas. I explicitly added you to the list of reviewers for the original patch, there is little more I can do than that. And more coordination is exactly what I am trying to do now. If we cannot reach a conclusion may I at least be added to review whatever your solution looks like?. > 1. I plan to remove the NDEBUG assert. Already done in D33529. > 2. Make the std::vector<void*> a std::vector<llvm::PointerIntPair<void*, 1, bool>>. How can you guarantee that the platform will deliver a pointer with proper alignment for that?. > 3. I will change the search order to search for first the one that are not marked RTLD_GLOBAL. So any other client that wants to open thing's with RTLD_LOCAL will then expose what they thought were private symbols to the JIT as a whole?. > One of the issues is that it is not clear to me is what exactly is your use case and this is why there are misunderstandings. I also don't understand why there are mis-understandings, but have explained the use case a few times now and **3** will explicitly break that as well as provide bizarre default behavior:. > libc++.so, libA.so; > libA.so defines an overload for global operator new/delete; > ; > ```; > DynamicLibrary::getPermanentLibrary(NULL); > // Other code; > DynamicLibrary::getPermanentLibrary(""libA.so""); > ```; > In your scheme the JIT can pull operator new/delete from libA.so, and worse is that whether it pulls operator new/delete from libA.so is dependent on whether operator new/delete has been resolved in **// Other code** before libA.so has been loaded.; > . The example can be expanded to RTTI information, exceptions, and a host of other problems.; And even worse than that is that in your scheme there is no way of hiding symbols from the global scope, in fact it promotes everything that the user reasonably expected to be private ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/744#issuecomment-313799028:1894,clear,clear,1894,https://root.cern,https://github.com/root-project/root/pull/744#issuecomment-313799028,1,['clear'],['clear']
Usability,"rely on the nightlies to catch any portability issues. That's a very poor approach b/c your matrix is necessarily limited given the enormous number of possible combinations. (That's another way of saying it's carefully selected.). I don't actually know if all those Linux systems are SLC, but did note for example that the build failed on SuSE Tumbleweed with gcc9, b/c SuSE does not install TBB by default to go with that compiler, and the build was missing headers as a consequence. So I do strongly suspects a lot of conformity in distros there. As-is, this approach of trying it, see if it fails, and if it doesn't fail declare it ""portable"" is exactly what causes folks to still cast pointers to long, for example. This would never happen if code was written with portability in mind from the get-go. But your closer exemplifies that even better: given the choice between *potential* scaling problems and *guaranteed* portability problems, you choose to accept the latter. Clearly, portability isn't high on your list. Portability is, however, very important. By providing a portable solution that works well within other environments, cppyy is now being used on large code bases in mathematics, chemistry, and biology. That work uncovers errors even deep inside Cling, because it is pushed harder and used differently than in the CINT-tamed HEP world. Here is a current problem I'm working on for example. Try it in ROOT master, and watch memory consumption grow with top or whatever:. ```; $ root -l -b; root [0] template <class T, class U> class __gmp_expr;; root [1] typedef struct{ } __mpz_struct;; root [2] typedef __gmp_expr<__mpz_struct[1],__mpz_struct[1]> mpz_class;; root [3] for (;;) gInterpreter->ClassInfo_IsEnum(""std::vector<mpz_class>::value_type""); ```. That leak occurs when `findScope` in the LookupHelper starts parsing whenever `quickFindDecl()` fails (it's nothing to do with `mpz_class` or `ClassInfo_IsEnum` per se, just that that's where it was first found). If `quickFin",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6393#issuecomment-707273510:3154,Clear,Clearly,3154,https://root.cern,https://github.com/root-project/root/issues/6393#issuecomment-707273510,1,['Clear'],['Clearly']
Usability,"ressions. I discarded that because of two reasons:; - They are more costly that simple string comparison.; - They complicate the registration of pythonizors per scope. In this new `@pythonization` decorator, the scope of the class is parsed (e.g. `NS1::NS2` for `NS1::NS2::C`) and the pythonizor is _registered for that scope_. This allows for more efficient lookup of the pythonizors to apply, because when a class is accessed for the first time, only the pythonizors registered for its scope will be attempted. This is nice for user classes, because if a user class belongs to `UserNamespace`, when the user script first accesses the class only the pythonizors for classes in `UserNamespace` will be tried, and not every single registered pythonizor (in particular, not all the pythonizors ROOT registers for its classes in the global namespace). So I prefer to have a clean static prefix that unambiguously tells me what the target scope is than something like `NS1::(.+)::C`. And if the user wants to do an additional complex matching with regular expressions, they can still do so in their pythonizor code via the `name` parameter. I'd like to hear the opinion of @pikacic and @daritter about this since we've discussed about this decorator in the past (no need to review the whole PR, giving your opinion on the programming examples is already more than enough!). EDIT: I have received some feedback from @eguiraud on the `name` parameter: he thinks it could be removed since some users won't need it (they won't do any further filtering inside the pythonizor). As an alternative, `name` could be injected in `klass` before the user pythonizor runs (so users would access it as `klass.name`), but that could cause a clash if `name` is already a static member of the class. There is also `klass.__cpp_name__` that is provided by cppyy with the fully qualified name of the class, so we could rely on that too. @vepadulano would rather keep `name` as a parameter. I'd like to hear more opinions :)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9128:3643,feedback,feedback,3643,https://root.cern,https://github.com/root-project/root/pull/9128,1,['feedback'],['feedback']
Usability,"rformance-wise and functionality-wise would still work if for the duration of the trials, the state needed to do the matching is kept alive. That was mostly the idea with the code above, but is not how I would solve it today. So, to your points:. No, it does not need to be instantiated first. For example, if I know that a _potential_ match has a signature of `T*`, then I'm not going to ask it to match `T&`, so even before instantiation, the lookup has useful information. Right now, CPyCppyy loops over each, so will eventually match if all types are by-pointer or all are by reference, but that fails combinations. Another good case is knowing which arguments are based on template parameters and which are not, so that the non-template ones need not be varied. No, on the Python side it is fair game to provide the template arguments, and thus non-ADL happens, too. E.g. all int types are equivalent as far as Python is concerned, and although CPyCppyy will increase the template int argument if it has an argument value larger than will fit, it is not uncommon for Python users to simply fill in `int64_t` or whatever. In fact, as-is, if the prototype lookup, ie. argument dependent, fails, CPyCppyy will assume that we're dealing with the common case where all argument types are template parameters. (It's a human thing to make that order consistent, which is why it works quite often, but it is not a language requirement/guarantee.) It then asks for the full name in a non-ADL manner. ROOT/meta (lookupHelper, I think) does not even support friends, so no worries there. Whether you think it is ""eeew"" or not is irrelevant. That's highly a technical term. What is relevant is that just before the lookupHelper does a `BestViableFunction()` it has a `OverloadCandidateSet` and I can do a much better job finding my own match than can do Sema, b/c the rules to apply aren't exactly the C++ ones (the only ones that Sema knows). Unfortunately, I can't just return the set, as it's deep in the ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6393#issuecomment-696817778:1090,simpl,simply,1090,https://root.cern,https://github.com/root-project/root/issues/6393#issuecomment-696817778,2,['simpl'],['simply']
Usability,"rguing that the status quo (last top-level expression's value is printed if missing trailing semicolon) should be kept for consistency and simplicity reasons.; > ; > Let's hear some other opinions here, e.g. @SimeonEhrig @jalopezg-uc3m @pcanal ?. I do realize my post was terse. Here is more text as the discussion went in another direction. Since early days, as you already mentioned, the rule seems to be ""the last expression without a trailing semicolon should print"". If that is the rule, then it clearly does not handle short-hand operators. Namely, `if (x) expr`. That rule does not extend to your examples `do 1 while(true)` as `while` is not really an user-defined expression. `if (x) { expr }` does not fall there either as it is in a compound statement. It is pretty clear where we stop. The construct `if(x) expr`, as shown in the example, enables an interactive programming pattern wrt error handling where in case of an error we can just ask cling to print details. > I'd prefer to keep value printing simple. The implementation of what I propose requires 2-3 lines [here](https://github.com/vgvassilev/cling/blob/856f8e92f82f9037b3dbb27ae7f94add2ed6121f/lib/Utils/AST.cpp#L141-L152). And actually makes the value printing rule more comprehensible. It took me some time to realize what's wrong and I implemented it, so I'd say it would be less comprehensible to other people. > and instead invest where it's relevant: devtoolset, debug symbols, llvm upgrade (to llvm 11!), etc. This is a trade-off we should consciously do, and given that this is the first time I hear a request for value printing within nested blocks . We have had that in the past. I do not think having not user requests should be an argument against this bug. > I'm not yet convinced that it's worth the effort (and yes, that's an additional counter argument). And I'm not just talking dev time but also long-term maintenance: more code, more clang interfaces used. The implementation does not require clang interfac",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6644#issuecomment-713756223:1182,simpl,simple,1182,https://root.cern,https://github.com/root-project/root/issues/6644#issuecomment-713756223,2,['simpl'],['simple']
Usability,"rn.ch:/build/workspace/root-pullrequests-build; [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/151341/console).; ### Errors:; - [2022-08-05T22:57:53.738Z] FAILED: tree/dataframe/test/CMakeFiles/dataframe_vary.dir/dataframe_vary.cxx.o ; - [2022-08-05T22:57:53.995Z] /mnt/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDF/ActionHelpers.hxx:507:49: error: call to non-constexpr function ‘ROOT::Internal::RDF::FillHelper&lt;HIST&gt;::Exec(unsigned int, const Xs& ...)::&lt;lambda(const auto:2&)&gt; [with auto:2 = std::array&lt;bool, 1&gt;; Xs = {ROOT::VecOps::RVec&lt;int&gt;}; typename std::enable_if&lt;ROOT::Internal::RDF::Disjunction&lt;ROOT::Internal::RDF::IsDataContainer&lt;ValTypes&gt;...&gt;::value, int&gt;::type &lt;anonymous&gt; = 0; HIST = TH1D]’ ; - [2022-08-05T22:57:53.995Z] /mnt/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDF/ActionHelpers.hxx:498:44: error: the value of ‘i’ is not usable in a constant expression ; - [2022-08-05T22:57:53.995Z] /mnt/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDF/ActionHelpers.hxx:512:58: error: no matching function for call to ‘GetNthElement&lt;colidx&gt;(const ROOT::VecOps::RVec&lt;int&gt;&)’ ; - [2022-08-05T22:57:54.253Z] /mnt/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDF/ActionHelpers.hxx:507:49: error: call to non-constexpr function ‘ROOT::Internal::RDF::FillHelper&lt;HIST&gt;::Exec(unsigned int, const Xs& ...)::&lt;lambda(const auto:2&)&gt; [with auto:2 = std::array&lt;bool, 3&gt;; Xs = {ROOT::VecOps::RVec&lt;int&gt;, ROOT::VecOps::RVec&lt;int&gt;, ROOT::VecOps::RVec&lt;int&gt;}; typename std::enable_if&lt;ROOT::Internal::RDF::Disjunction&lt;ROOT::Internal::RDF::IsDataContainer&lt;ValTypes&gt;...&gt;::value, int&gt;::type &lt;anonymous&gt; = 0; HIST = TProfile2D]’ ; - [2022-08-05T22:57:54.253Z] /mnt/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDF/ActionHel",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11127#issuecomment-1207076516:1070,usab,usable,1070,https://root.cern,https://github.com/root-project/root/pull/11127#issuecomment-1207076516,2,['usab'],['usable']
Usability,"rom command line; collect2: error: ld returned 1 exit status; ```. Digging a bit deeper with the `-Wl,--verbose` linker flag:. ```; <<snip>>; attempt to open /usr/lib/llvm-13/lib/libLLVM-13.so.1 succeeded; /usr/lib/llvm-13/lib/libLLVM-13.so.1; <<snip>>; libedit.so.2 needed by /usr/lib/llvm-13/lib/libLLVM-13.so.1; <<snip>>; libbsd.so.0 needed by /lib/x86_64-linux-gnu/libedit.so.2; attempt to open /usr/lib/llvm-13/lib/libbsd.so.0 failed; <<snip>>; found libbsd.so.0 at /lib/x86_64-linux-gnu/libbsd.so.0; /usr/bin/ld: core/dictgen/CMakeFiles/Dictgen.dir/src/rootcling_impl.cxx.o: undefined reference to symbol 'strlcat@@LIBBSD_0.0'; /usr/bin/ld: /lib/x86_64-linux-gnu/libbsd.so.0: error adding symbols: DSO missing from command line; ```. So the issue is that the system `libLLVM-13.so.1` links against `libbsd.so.0`, which defines `strlcat` as a global symbol. Since `rootcling_impl` also defines this symbol as global, there is an unresolved conflict. ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->. Tbh I'm not sure how this should be fixed. Clearly by default there is no `strlcat` et al on linux by default, *but* there is libbsd and this should be checked somwhere. Currently this check is in [core/foundation/inc/ROOT/RConfig.hxx:248-276](https://github.com/root-project/root/blob/fd244e56523bf5c5957bfae5117b36ca73c27813/core/foundation/inc/ROOT/RConfig.hxx#L248-L276) and only takes into account the operating system. Check with [`__has_include`](https://en.cppreference.com/w/cpp/preprocessor/include) if `bsd/string.h` exists on other unixes *might* be a way to do it, but I would have no clue how to do the proper linking. Also it doesn't fix the issue if libbsd is introduced in a downstream project using ROOT. Alternatively, I think the ""better"" solution is to add a `link_libbsd` build option (disabled by default ofc). If enabled, it adds `-lbsd` to the public link flags of `Clib` and sets some compile flag like `HAS_STRLCPY_VIA_L",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12152:9938,clear,clear,9938,https://root.cern,https://github.com/root-project/root/issues/12152,1,['clear'],['clear']
Usability,roottest.python are actual errors (now).; roottest_cling_functionTemplate_testcint is likely fixed by fixing roottest.python.; roottest_cling_functionTemplate_cintrun needs simply an updated ref file.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3858#issuecomment-495648191:173,simpl,simply,173,https://root.cern,https://github.com/root-project/root/pull/3858#issuecomment-495648191,2,['simpl'],['simply']
Usability,"rotocols, etc. There is increasing amount of papers trying to address how we put C++ modules at scale (https://wg21.link/p2656, https://wg21.link/P2409, https://youtu.be/_LGR0U5Opdg?si=AbLazREvyl5PXVFG). Some papers/talks are more radical claiming that we cannot even roll out modules (as written in the standard) at such scale. . For modules to be useful and work reliably we know that we need to apply modularization bottom up. That means that before modularizing cmssw/art we need everything below starting from libc and libxml to become modular. That's something we observed during our modularization efforts in cmssw (see https://github.com/cms-sw/cmssw/issues/15248). The reasons we cannot make it yet default is discussed here: https://github.com/cms-sw/cmssw/issues/41810#issuecomment-1578982627 and here https://github.com/root-project/root/pull/13000 Not surprisingly we have observed similar comments coming from modularization efforts in gcc and msvc. . Let's assume we live in an platonic world where all of the above is resolved. It still seems we will be able to use our dictionary system as it is because we will in the end have a build system that processes textual files to build them. There we could use any custom flavor of modules (or something better) that makes our I/O work. We can go one step further and claim that, even if we introduce strict interface encapsulation via C++ 20 modules, our I/O system would require to know more about the non-exported entities so that we can serialize and deserialize the private dependencies of the exported entities. That is, we will probably end up with a very similar system that we have today. I would personally like to tackle the engineering challenge as you have described. However I believe we are not there yet and any efforts into trying to adapt to a still volatile area would probably cause disturbances in our user base for not yet clear final goal. Does that address/answer the concerns you had when you opened that request?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13536#issuecomment-1693395998:3690,clear,clear,3690,https://root.cern,https://github.com/root-project/root/issues/13536#issuecomment-1693395998,2,['clear'],['clear']
Usability,"rters/exporter.py"", line 316, in _preprocess; nbc, resc = preprocessor(nbc, resc); File ""/usr/lib/python3/dist-packages/nbconvert/preprocessors/base.py"", line 47, in __call__; return self.preprocess(nb, resources); File ""/usr/lib/python3/dist-packages/nbconvert/preprocessors/execute.py"", line 405, in preprocess; nb, resources = super(ExecutePreprocessor, self).preprocess(nb, resources); File ""/usr/lib/python3/dist-packages/nbconvert/preprocessors/base.py"", line 69, in preprocess; nb.cells[index], resources = self.preprocess_cell(cell, resources, index); File ""/usr/lib/python3/dist-packages/nbconvert/preprocessors/execute.py"", line 448, in preprocess_cell; raise CellExecutionError.from_cell_and_msg(cell, out); nbconvert.preprocessors.execute.CellExecutionError: An error occurred while executing the following cell:; ------------------; parser = argparse.ArgumentParser(); parser.add_argument(""--lumi-scale"", type=float, default=0.001,; help=""Run only on a fraction of the total available 10 fb^-1 (only usable together with --full-dataset)""); parser.add_argument(""--full-dataset"", action=""store_true"", default=False,; help=""Use the full dataset (use --lumi-scale to run only on a fraction of it)""); parser.add_argument(""-b"", action=""store_true"", default=False, help=""Use ROOT batch mode""); parser.add_argument(""-t"", action=""store_true"", default=False, help=""Use implicit multi threading (for the full dataset only possible with --lumi-scale 1.0)""); args = parser.parse_args(). if args.b: ROOT.gROOT.SetBatch(True); if args.t: ROOT.EnableImplicitMT(). if not args.full_dataset: lumi_scale = 0.001 # The preskimmed dataset contains only 0.01 fb^-1; else: lumi_scale = args.lumi_scale; lumi = 10064.0; print('Run on data corresponding to {:.2f} fb^-1 ...'.format(lumi * lumi_scale / 1000.0)). if args.full_dataset: dataset_path = ""root://eospublic.cern.ch//eos/opendata/atlas/OutreachDatasets/2020-01-22""; else: dataset_path = ""root://eospublic.cern.ch//eos/root-eos/reduced_atlas_opendata/w"";",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10430:2615,usab,usable,2615,https://root.cern,https://github.com/root-project/root/issues/10430,1,['usab'],['usable']
Usability,"s that have been defined are:. evaluate, simply gives the value of the relativisitic voigt at the point requested; dumpingFunction, this is a commonly used function which is defined as the value of the relativistic voigt at its peak, divided by the value of the relativistic breit wigner at the peak that is part of the relativistic voigt. This is useful as it quantifies how much the voigt is smeared by the gaussian, which as a physical effect in particle physics is usually easily translated to how much sensitivity to a signal you lose due to detector effects. A tutorial Voigt.C has been added in tutorials/math which produces plots comparing the non relativistic and relativistic case of voigt and the dumping function. The output plots from tutorials/math/Voigt.C which produces a plot using the new VoigtRelativistic class which is added in this pull request is here [Voigt](https://cernbox.cern.ch/index.php/s/3Vu40dk74wUDfWe) [DumpingFunction](https://cernbox.cern.ch/index.php/s/Xv3act8hvpaqeCM). As mentioned this relativistic voigt is implemented in mathmore, however there is already a non relativistic voigt in TMath ( called Voigt https://root.cern.ch/doc/master/namespaceTMath.html ). I'm unsure if this is possible but it would be ideal if the documentation here could mention in the non relativistic voigt case that there is a relativistic version available as I think as is very few people even if they want a relativistic case would realise there is one now available (in fact I think many people would just assume the voigt in TMath is relativistic). I have not added a test as I am unsure exactly how to and the non relativistic voigt that already exists does not have a test either to use as a template. I will try to learn how to add tests in the future and hopefully add one for this and the relativistic breit wigner case in the future. Thank you for your help,; Jack. ## Changes or fixes:. ## Checklist:. - [x] tested changes locally; - [x] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11049:4572,learn,learn,4572,https://root.cern,https://github.com/root-project/root/pull/11049,1,['learn'],['learn']
Usability,"s(ESignals) () from /home/vpadulan/Programs/rootproject/rootinstall/v6-24-00/lib/libCore.so; #5 <signal handler called>; #6 0x0000000000000000 in ?? (); #7 0x000000000040237c in ROOT::Experimental::RHist<1, double, ROOT::Experimental::RHistStatContent, ROOT::Experimental::RHistStatUncertainty>::Fill(ROOT::Experimental::Hist::RCoordArray<1> const&, double) (); #8 0x00000000004021e4 in main (); ===========================================================. The lines below might hint at the cause of the crash.; You may get help by asking at the ROOT forum https://root.cern.ch/forum; Only if you are really convinced it is a bug in ROOT then please submit a; report at https://root.cern.ch/bugs Please post the ENTIRE stack trace; from above as an attachment in addition to anything else; that might help us fixing this issue.; ===========================================================; #6 0x0000000000000000 in ?? (); #7 0x000000000040237c in ROOT::Experimental::RHist<1, double, ROOT::Experimental::RHistStatContent, ROOT::Experimental::RHistStatUncertainty>::Fill(ROOT::Experimental::Hist::RCoordArray<1> const&, double) (); #8 0x00000000004021e4 in main (); ===========================================================; ```. ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->; No segfault, plus either; * Entries are filled correctly; * I get a clear error of what I'm doing wrong; ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->; Everything is shown above; ### Setup; <!--; 1. ROOT version; 2. Operating system; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->. ROOT 6.24.00; Built on Fedora32 with following cmake command `cmake -GNinja -DCMAKE_BUILD_TYPE=Release`",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7971:2519,clear,clear,2519,https://root.cern,https://github.com/root-project/root/issues/7971,2,['clear'],['clear']
Usability,"s; <!--; Please search in; * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug; In pyroot, when passing arrays of mixed int and float type into TGraphAsymmErrors, the corresponding error values will be filled with uninitialized values instead of raising error/warning. For example, if x is an array of type int whereas xerr_lo or xerr_hi is an array of type float then the error values will be filled with uninitialized values. <!--; A clear and concise description of what the wrong behavior is.; -->. ### Expected behavior; Either:; Automatically convert the data type of the arrays and fill the error with the correct values; Or:; Raising error/warning when mixed data types are passed. <!--; A clear and concise description of what you expected to happen.; -->. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->; ```; import numpy as np; import ROOT; n = 1; x = np.array([1]); y = np.array([2]); xerr_hi, xerr_lo = np.array([0.1]), np.array([0.1]); yerr_hi, yerr_lo = np.array([0.2]), np.array([0.2]); reproducer = ROOT.TGraphAsymmErrors(n, x, y, xerr_lo, xerr_hi, yerr_lo, yerr_hi); print(reproducer.GetErrorXlow(1), reproducer.GetErrorXhigh(1), reproducer.GetErrorYlow(1), reproducer.GetErrorYhigh(1)); # result:; # 4.67050093411236e-310 4.6705009350649e-310 4.67050094601894e-310 4.67050094110516e-310; ```; ### Setup; <!--; 1. ROOT version; 2. Operating system; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->; ROOT version: JupyROOT 6.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7393:1001,clear,clear,1001,https://root.cern,https://github.com/root-project/root/issues/7393,1,['clear'],['clear']
Usability,"sEdit.h TError.h ThreadLocalStorage.h ROOT/RLogger.hxx ROOT/RNotFn.hxx ROOT/RRangeCast.hxx ROOT/RSpan.hxx ROOT/RStringView.hxx ROOT/StringUtils.hxx ROOT/span.hxx ROOT/TypeTraits.hxx ROOT/RError.hxx GuiTypes.h TApplicationImp.h TBrowser.h TBrowserImp.h TCanvasImp.h TClassMenuItem.h TContextMenu.h TContextMenuImp.h TControlBarImp.h TGuiFactory.h TInspectorImp.h TObjectSpy.h TToggleGroup.h TToggle.h TBaseClass.h TClassGenerator.h TClass.h TClassRef.h TClassStreamer.h TDataMember.h TDataType.h TDictAttributeMap.h TDictionary.h TEnumConstant.h TEnum.h TFileMergeInfo.h TFunction.h TFunctionTemplate.h TGenericClassInfo.h TGlobal.h TInterpreter.h TInterpreterValue.h TIsAProxy.h TListOfDataMembers.h TListOfEnums.h TListOfEnumsWithLock.h TListOfFunctions.h TListOfFunctionTemplates.h TMemberStreamer.h TMethodArg.h TMethodCall.h TMethod.h TProtoClass.h TRealData.h TSchemaHelper.h TSchemaRule.h TSchemaRuleSet.h TStatusBitsChecker.h TStreamerElement.h TStreamer.h TVirtualIsAProxy.h TVirtualRefProxy.h TVirtualStreamerInfo.h TVirtualArray.h TVirtualObject.h Getline.h TUnixSystem.h /home/stephan/Projects/ROOT/core/base/inc/LinkDef.h; : CommandLine Error: Option 'W' registered more than once!; LLVM ERROR: inconsistency in registered CommandLine options; ```. ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->. Build does not fail. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->. Building git master with #12154 and `builtin_llvm=OFF libbsd=ON`. ### Setup; <!--; 1. ROOT version; 2. Operating system; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->. git master with #12154, 13.0.1-11+b2. ### Additional context; <!--; Add any other context about the problem here.; -->",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12156:5974,clear,clear,5974,https://root.cern,https://github.com/root-project/root/issues/12156,1,['clear'],['clear']
Usability,"sLineSynch (this=0xe55060, line=0x2314690 "".X /home/gnp78160/18r.296691_co4_1/./RunEtaC.C"", error=0x7ffcac8e1474) at /home/gnp78160/alice/sw/SOURCES/ROOT/v5-34-30-alice10/v5-34-30-alice10/core/meta/src/TCint.cxx:631; #29 0x00007fba37e91c05 in TApplication::ExecuteFile (file=<optimized out>, error=0x7ffcac8e1474, keep=<optimized out>) at /home/gnp78160/alice/sw/SOURCES/ROOT/v5-34-30-alice10/v5-34-30-alice10/core/base/src/TApplication.cxx:1110; #30 0x00007fba37e92ef7 in TApplication::ProcessLine (this=0x1464300, line=<optimized out>, sync=<optimized out>, err=0x7ffcac8e1474) at /home/gnp78160/alice/sw/SOURCES/ROOT/v5-34-30-alice10/v5-34-30-alice10/core/base/src/TApplication.cxx:959; #31 0x00007fba37817692 in TRint::Run (this=this; entry=0x1464300, retrn=retrn; entry=false) at /home/gnp78160/alice/sw/SOURCES/ROOT/v5-34-30-alice10/v5-34-30-alice10/core/rint/src/TRint.cxx:417; #32 0x0000000000401ee2 in main (argc=<optimized out>, argv=0x7ffcac8e3658) at /home/gnp78160/alice/sw/SOURCES/AliRoot/aliroot5/0/ALIROOT/aliroot.cxx:152; ===========================================================. The lines below might hint at the cause of the crash.; If they do not help you then please submit a bug report at; http://root.cern.ch/bugs. Please post the ENTIRE stack trace; from above as an attachment in addition to anything else; that might help us fixing this issue.; ===========================================================; #6 0x00007fba36ddb793 in AliAnalysisTask::SetUsed (this=0x27a9980, flag=flag; entry=true) at /home/gnp78160/alice/sw/SOURCES/AliRoot/aliroot5/0/ANALYSIS/ANALYSIS/AliAnalysisTask.cxx:540; #7 0x00007fba36dc471a in AliAnalysisManager::InitAnalysis (this=0x24a9f30) at /home/gnp78160/alice/sw/SOURCES/AliRoot/aliroot5/0/ANALYSIS/ANALYSIS/AliAnalysisManager.cxx:1633; ===========================================================. Root > Function RunEtaC() busy flag cleared; ```. I want to merge all the jobs and create a .root file. Please help me to solve this problem.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6977:8805,clear,cleared,8805,https://root.cern,https://github.com/root-project/root/issues/6977,1,['clear'],['cleared']
Usability,"sToFourLeptons_8C.html) crashes when it is compiled and run (it runs fine if interpreted).; This is due to jitted code in some filters that call user-defined functions whose signature is unknown to Cling. This is a general problem with functions that evaluate code at runtime and, while it might not be possible to fix in all cases, it should at least be better documented. The tutorials themselves should be written to work both when compiled and when interpreted, or specify why they cannot be run as-is if compiled. There is also a more general discussion to be made about RDF and the kind of guarantees that it should provide to its users. Ideally there should be a way to use RDF such that it will be guaranteed to run correctly regardless of being compiled or interpreted. Finally, the documentation of RDF should be updated to better clarify the caveats and limitations of passing C++ expressions as strings, both in terms of performance and, especially, in terms of compatibility with compiled code (i.e. it should be clear to a user that a filter using an interpreted string containing a user-defined function may not work when AOT-compiled without additional efforts on the user side - like manually passing the signatures to cling beforehand). ### Bullet point recap; - [ ] fix the tutorials so they run properly when compiled AOT; - [ ] update the doc of RDF to include caveats and limitations of using jitted expressions; - [ ] (to be discussed) introduce an opt-in ""strict mode"" for RDF (C++ only) that checks and rejects all cases when jitting is required. This would allow a user to catch code that may incur in performance penalties and may not work properly when AOT-compiled. . ### Reproducer. 1. download the source code of [this tutorial](https://root.cern/doc/master/df106__HiggsToFourLeptons_8C.html); 2. compile it; 3. run it. ### ROOT version. 6.33.01. ### Installation method. from source. ### Operating system. Debian GNU/Linux trixie. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/15638:1170,clear,clear,1170,https://root.cern,https://github.com/root-project/root/issues/15638,1,['clear'],['clear']
Usability,"sdk; drwxr-xr-x 7 root wheel 224 8 Jun 2023 MacOSX12.3.sdk; lrwxr-xr-x 1 root wheel 14 8 Jun 2023 MacOSX12.sdk -> MacOSX12.3.sdk; drwxr-xr-x 7 root wheel 224 1 May 00:16 MacOSX14.5.sdk; lrwxr-xr-x 1 root wheel 14 17 Sep 17:17 MacOSX14.sdk -> MacOSX14.5.sdk; drwxr-xr-x 7 root wheel 224 21 Aug 17:15 MacOSX15.0.sdk; lrwxr-xr-x 1 root wheel 14 17 Sep 17:16 MacOSX15.sdk -> MacOSX15.0.sdk; sftnight@macphsft31 ~ % clang++ -x c++ /dev/null -E -v; Apple clang version 16.0.0 (clang-1600.0.26.3); Target: arm64-apple-darwin24.0.0; Thread model: posix; InstalledDir: /Library/Developer/CommandLineTools/usr/bin; ignoring nonexistent directory ""/Library/Developer/CommandLineTools/usr/bin/../include/c++/v1""; ""/Library/Developer/CommandLineTools/usr/bin/clang"" -cc1 -triple arm64-apple-macosx15.0.0 -Wundef-prefix=TARGET_OS_ -Wdeprecated-objc-isa-usage -Werror=deprecated-objc-isa-usage -Werror=implicit-function-declaration -E -disable-free -clear-ast-before-backend -disable-llvm-verifier -discard-value-names -main-file-name null -mrelocation-model pic -pic-level 2 -mframe-pointer=non-leaf -fno-strict-return -ffp-contract=on -fno-rounding-math -funwind-tables=1 -fobjc-msgsend-selector-stubs -target-sdk-version=15.0 -fvisibility-inlines-hidden-static-local-var -fno-modulemap-allow-subdirectory-search -target-cpu apple-m1 -target-feature +v8.5a -target-feature +aes -target-feature +crc -target-feature +dotprod -target-feature +fp-armv8 -target-feature +fp16fml -target-feature +lse -target-feature +ras -target-feature +rcpc -target-feature +rdm -target-feature +sha2 -target-feature +sha3 -target-feature +neon -target-feature +zcm -target-feature +zcz -target-feature +fullfp16 -target-abi darwinpcs -debugger-tuning=lldb -target-linker-version 1115.7.3 -v -fcoverage-compilation-dir=/Users/sftnight -resource-dir /Library/Developer/CommandLineTools/usr/lib/clang/16 -isysroot /Library/Developer/CommandLineTools/SDKs/MacOSX.sdk -I/usr/local/include -internal-isystem /Library/Developer/CommandLine",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16494#issuecomment-2373214590:9756,clear,clear-ast-before-backend,9756,https://root.cern,https://github.com/root-project/root/pull/16494#issuecomment-2373214590,2,['clear'],['clear-ast-before-backend']
Usability,"silev Let me clarify the disconnect. The title says ""Add **a** module for experimental/string_view""; The commit says:. That should fix a recent nightly failure with gcc11 avoiding to require; module ""bits/ranges_base.h"" in C++20 context. The code says:; ```; module ""experimental/string_view"" {; export *; header ""experimental/algorithm""; }; ```; ; The commit content as-is seems completely unrelated to the commit log as far as I could tell (without doing research on the relationship between `range_base`, `string_view` and `algorithm`.; ; So I pondered whether the fix was the right fix for a problem I did not know anything about ... ; ; The right thing to do would have probably be have been to request a complete explanation of what the original problem was, what was the mechanism leading to the error and why this solution was the best solution. This was obviously much more than this seemingly simple fix required. So instead I thought to ask for a very low cost, straight forward solution: simply copy/pasting the error with no additional effort to explain in detail. > Can you suggest a commit message which adds enough information which makes me happy as well?. That requires to paraphrase the error and add a few more details. ```; That should fix a recent nightly failure with gcc11. The failure presented during dictionary generation in a C++14 and C++17 build and incorrectly complained about needing the 'cplusplus20' feature for the 'std.bits/ranges_base.h' module. The issue was triggered by an inclusion of `<bits/ranges_base.h>` from `string_view`. This issue exists on gcc11 and gcc12 (and I guess any gcc that made changes to libstdc++ and the experimental/string_view header file). . It seems the issue is solved by exporting `algorithm` as part of the `string_view` module.; ```. Actually, I still don't know why adding `algorithm` fixes a problem with `range_base.h`, so I can't add that to the commit ... maybe it is something like ""... by avoiding to use the module maps p",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12276#issuecomment-1430326540:1006,simpl,simply,1006,https://root.cern,https://github.com/root-project/root/pull/12276#issuecomment-1430326540,2,['simpl'],['simply']
Usability,sorry it was not clear to me that you were actually asking for this change. done.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5276#issuecomment-607694511:17,clear,clear,17,https://root.cern,https://github.com/root-project/root/pull/5276#issuecomment-607694511,2,['clear'],['clear']
Usability,"sr/include; /Library/Developer/CommandLineTools/usr/include; /Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/System/Library/Frameworks (framework directory); End of search list.; # 1 ""/dev/null""; # 1 ""<built-in>"" 1; # 1 ""<built-in>"" 3; # 439 ""<built-in>"" 3; # 1 ""<command line>"" 1; # 1 ""<built-in>"" 2; # 1 ""/dev/null"" 2. sftnight@macphsft31 ~ % clang++ -isysroot /Library/Developer/CommandLineTools/SDKs/MacOSX.sdk -x c++ /dev/null -E -v; Apple clang version 16.0.0 (clang-1600.0.26.3); Target: arm64-apple-darwin24.0.0; Thread model: posix; InstalledDir: /Library/Developer/CommandLineTools/usr/bin; ignoring nonexistent directory ""/Library/Developer/CommandLineTools/usr/bin/../include/c++/v1""; ""/Library/Developer/CommandLineTools/usr/bin/clang"" -cc1 -triple arm64-apple-macosx15.0.0 -Wundef-prefix=TARGET_OS_ -Wdeprecated-objc-isa-usage -Werror=deprecated-objc-isa-usage -Werror=implicit-function-declaration -E -disable-free -clear-ast-before-backend -disable-llvm-verifier -discard-value-names -main-file-name null -mrelocation-model pic -pic-level 2 -mframe-pointer=non-leaf -fno-strict-return -ffp-contract=on -fno-rounding-math -funwind-tables=1 -fobjc-msgsend-selector-stubs -target-sdk-version=15.0 -fvisibility-inlines-hidden-static-local-var -fno-modulemap-allow-subdirectory-search -target-cpu apple-m1 -target-feature +v8.5a -target-feature +aes -target-feature +crc -target-feature +dotprod -target-feature +fp-armv8 -target-feature +fp16fml -target-feature +lse -target-feature +ras -target-feature +rcpc -target-feature +rdm -target-feature +sha2 -target-feature +sha3 -target-feature +neon -target-feature +zcm -target-feature +zcz -target-feature +fullfp16 -target-abi darwinpcs -debugger-tuning=lldb -target-linker-version 1115.7.3 -v -fcoverage-compilation-dir=/Users/sftnight -resource-dir /Library/Developer/CommandLineTools/usr/lib/clang/16 -isysroot /Library/Developer/CommandLineTools/SDKs/MacOSX.sdk -internal-isystem /Library/Developer/CommandLineTools/SDKs/MacOSX.sdk",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16494#issuecomment-2373214590:13822,clear,clear-ast-before-backend,13822,https://root.cern,https://github.com/root-project/root/pull/16494#issuecomment-2373214590,2,['clear'],['clear-ast-before-backend']
Usability,"sr/include; /Library/Developer/CommandLineTools/usr/include; /Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/System/Library/Frameworks (framework directory); End of search list.; # 1 ""/dev/null""; # 1 ""<built-in>"" 1; # 1 ""<built-in>"" 3; # 439 ""<built-in>"" 3; # 1 ""<command line>"" 1; # 1 ""<built-in>"" 2; # 1 ""/dev/null"" 2. sftnight@macphsft34 ~ % clang++ -isysroot /Library/Developer/CommandLineTools/SDKs/MacOSX.sdk -x c++ /dev/null -E -v; Apple clang version 16.0.0 (clang-1600.0.26.3); Target: arm64-apple-darwin24.1.0; Thread model: posix; InstalledDir: /Library/Developer/CommandLineTools/usr/bin; ignoring nonexistent directory ""/Library/Developer/CommandLineTools/usr/bin/../include/c++/v1""; ""/Library/Developer/CommandLineTools/usr/bin/clang"" -cc1 -triple arm64-apple-macosx15.0.0 -Wundef-prefix=TARGET_OS_ -Wdeprecated-objc-isa-usage -Werror=deprecated-objc-isa-usage -Werror=implicit-function-declaration -E -disable-free -clear-ast-before-backend -disable-llvm-verifier -discard-value-names -main-file-name null -mrelocation-model pic -pic-level 2 -mframe-pointer=non-leaf -fno-strict-return -ffp-contract=on -fno-rounding-math -funwind-tables=1 -fobjc-msgsend-selector-stubs -target-sdk-version=15.0 -fvisibility-inlines-hidden-static-local-var -fno-modulemap-allow-subdirectory-search -target-cpu apple-m1 -target-feature +v8.5a -target-feature +aes -target-feature +crc -target-feature +dotprod -target-feature +fp-armv8 -target-feature +fp16fml -target-feature +lse -target-feature +ras -target-feature +rcpc -target-feature +rdm -target-feature +sha2 -target-feature +sha3 -target-feature +neon -target-feature +zcm -target-feature +zcz -target-feature +fullfp16 -target-abi darwinpcs -debugger-tuning=lldb -target-linker-version 1115.7.3 -v -fcoverage-compilation-dir=/Users/sftnight -resource-dir /Library/Developer/CommandLineTools/usr/lib/clang/16 -isysroot /Library/Developer/CommandLineTools/SDKs/MacOSX.sdk -internal-isystem /Library/Developer/CommandLineTools/SDKs/MacOSX.sdk",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16494#issuecomment-2373214590:22626,clear,clear-ast-before-backend,22626,https://root.cern,https://github.com/root-project/root/pull/16494#issuecomment-2373214590,2,['clear'],['clear-ast-before-backend']
Usability,"st JSON. . The attached class `TJSON` allows for this in a relatively straight forward manner. For example, one can do . ```c++; TJSON null;; TJSON b(true);; TJSON s(""RawString"");; TJSON s2(std::string(""C++String""));; TJSON i(42);; TJSON f(3.14);; TJSON a = TJSON::Array();; TJSON o = TJSON::Object();; ```; for null, boolean, string, numbers (int and float), arrays or objects (associative container). . A more complex object can be created like . ```c++ ; TJSON o2 = std::map<std::string,TJSON>{; {""key1"",""value""},; {""key2"",true},; {""key3"",; {""key4"", TJSON::Array(""This"",""is"",""an"",""array""),; ""key5"",; {""boolean"", true}; }; }; };; ```. and elements are accessed via `operator[]` . ```c++; assert o2[""key1""] == ""value"";; assert o2[""key3""][""key4""][1] == ""is""; ```. One can loop over arrays or objects via `TJSON::ArrayRange` or `TJSON::ObjectRange` respectively. . ```c++; TJSON a = TJSON::Array();; TJSON o = TJSON::Object();. for (size_t i = 0; i < 4; i++); a[i] = ""Test""+std::to_string(i);. o[""key0""] = ""value1"";; o[""key1""] = a;; o[""key2""] = 123;. std::cout << ""Array: "" << std::endl;; for (auto& e : a.ArrayRange()); std::cout << e << std::endl;. std::cout << ""Object: "" << std::endl;; for (auto& kv : o.ObjectRange()); std::cout << ""o["" << kv.first << ""] = "" << kv.second << std::endl;; ```. JSON can be read and written to streams . ```c++; std::cout << ""=== Loading ==="" << std::endl;; std::string s(""{\""key1\"":\""string\"",""; 		"" \""key2\"": true,""; 		"" \""key3\"": 1234,""; 		"" \""key4\"":null}"");. std::stringstream str(s);. TJSON j;; str >> j;; std::cout << j << std::endl;; ; TJSON j2 = TJSON::Load(s);; std::cout << j2 << std::endl;; ```. I attach `TJSON.h` and `TJSON.cxx` as well as a script with examples `Example.C`. Note, objects of the class are clearly not meant to by stored in ROOT files and thus there is no call to the `ClassImp` macro. . . Feel free to incorporate the code as you see fit. . Yours, . Christian; [TJSON.zip](https://github.com/root-project/root/files/5614520/TJSON.zip)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6889:2259,clear,clearly,2259,https://root.cern,https://github.com/root-project/root/issues/6889,1,['clear'],['clearly']
Usability,"st compilers with the same compiler ABI) to compile libA and libB (this is a common behavior), the compiler ABI condition is automatically met. On the other hand, the C++ standard library API is specified by ISO C++, and we can believe that the implementation of the standard library is compatible between different standards. So generally speaking, libA and libB are compatible even if they are compiled by different standards. However, in practice, the sequence of tokens of the same entity in the library may be different between different C++ standards, so the same symbol (such as a function) may correspond to different binaries, which indeed violates the ODR. However, as long as their behaviors are compatible, no matter which version of the linker is selected, there should be no serious problems. In other words, it can be considered that this is only a minor ODR violation, because it does not produce observable effects. The GCC document does not seem to clearly indicate whether compiling with mixed standards would work, but its [ABI policy](https://gcc.gnu.org/onlinedocs/libstdc++/manual/abi.html) seems to imply that this is feasible. In addition, this issue has also been [discussed on StackOverflow](https://stackoverflow.com/questions/46746878/is-it-safe-to-link-c17-c14-and-c11-objects), and the view is that it is feasible to do so. Back to our current issue, ideally, as long as there is no explicit ODR violation in the header file, the only thing left is to ensure ABI compatibility, which should be guaranteed by the compiler. It can be said that if the current `span` implementation of ROOT is compatible with the implementation of the standard library, the problem of mixed standards is not serious, but it is difficult to always guarantee. But as I said, if there is something like `cxx20::span` instead of crashing with the standard library, this issue can be solved from its source. The rest is just the ABI compatibility of this `cxx20::span`, which is guaranteed by t",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11311#issuecomment-1254026839:1514,clear,clearly,1514,https://root.cern,https://github.com/root-project/root/pull/11311#issuecomment-1254026839,2,['clear'],['clearly']
Usability,"st part, I get; https://root.cern/d/; which is a) meaningless b) same as the main page. ; The third link to that same page is ; https://root.cern/d/index.html. Surprisingly, the link; https://root.cern/index.html; has different contents!. Probably there is little surprise that there exists the 2nd version of the site,; https://root.cern.ch/ (with its own index.html, and all these links).; I think there should be one canonical link, and other links should redirect to that. . 2a) https://root.cern/d/documentation.html ; should ideally become just ; https://root.cern/documentation. 2b) or all documentation should be put into one directory with a clearer name, like; https://root.cern/doc/; In that case the manual (and other docs) should also be in that directory, not at; https://root.cern/manual/. 3a) User Guide is located at; https://root.cern/d/guides/users-guide.html; On parent path; https://root.cern/d/guides/; there is an automatic list of guides (which is better than nothing/forbidden), but it would be better if it was not automatic (had the same design as the other site). 3b) the same for; https://root.cern/doc/; (automatic list). 4\) As I understand, the main page for documentation is; https://root.cern.ch/d/documentation.html; There is also; https://root.cern/doc/master/; these two pages should probably be one page. 5\) Rearrange ""Provide your feedback""; I think github issues should go before the Forum in the list of options (if there are really two ways), because one can see closed and open issues (on the Forum I found several complaints about the links, but it's not clear whether they are open or closed without opening them). 6\) From the documentation page ""A number of topical User Guides and Manuals for various components of the system."" leads to; https://root.cern/get_started/; which, in turn, repeats description of some existing resources. Could you please refactor these two pages into one, trying to repeat as little information as possible?. 7\) On the p",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7282:1326,guid,guides,1326,https://root.cern,https://github.com/root-project/root/issues/7282,2,['guid'],['guides']
Usability,"st.h>; #include <iostream>. int main(){; auto start_1{0};; auto start_2{0};; auto end_1{20};; auto end_2{10};. TEntryList elists;; TEntryList elist1{""e"",""e"",""entries"",""file_20entries_1.root""};; TEntryList elist2{""e"",""e"",""entries"",""file_20entries_1.root""};. for(auto entry = start_1; entry < end_1; entry++){; elist1.Enter(entry);; }. for(auto entry = start_2; entry < end_2; entry++){; elist2.Enter(entry);; }. elists.Add(&elist1);; elists.Add(&elist2);. TChain chain{""entries""};; chain.Add(""file_20entries_1.root"");; chain.Add(""file_20entries_1.root"");. chain.SetEntryList(&elists);. ROOT::RDataFrame df{chain};. std::cout << df.Count().GetValue() << ""\n"";; }; ```; Will output the following; ```; vpadulan@fedorathinkpad-T550 [~/Projects/rootcode]: g++ -o tentrylist_emptysource_twofiles tentrylist_emptysource_twofiles.cpp `root-config --cflags --glibs`; vpadulan@fedorathinkpad-T550 [~/Projects/rootcode]: ./tentrylist_emptysource_twofiles ; 20; ```. ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->; The expected result of the above snippet is 30, that is 20 entries from the first TEntryList and 10 entries from the second. Note that, if I create a second file identical to the first one and call it `file_20entries_2.root`, changing the above snippet with; ```diff; - TEntryList elist2{""e"",""e"",""entries"",""file_20entries_1.root""};; + TEntryList elist2{""e"",""e"",""entries"",""file_20entries_2.root""};; ...; TChain chain{""entries""};; chain.Add(""file_20entries_1.root"");; - chain.Add(""file_20entries_1.root"");; + chain.Add(""file_20entries_2.root"");; ```; yields the correct result:; ```; vpadulan@fedorathinkpad-T550 [~/Projects/rootcode]: g++ -o tentrylist_emptysource_twofiles tentrylist_emptysource_twofiles.cpp `root-config --cflags --glibs`; vpadulan@fedorathinkpad-T550 [~/Projects/rootcode]: ./tentrylist_emptysource_twofiles; 30; ```. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a par",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8505:1651,clear,clear,1651,https://root.cern,https://github.com/root-project/root/issues/8505,1,['clear'],['clear']
Usability,"strings. properly, for example treating cases such as 'branch0' and 'branch01'.; The code of the helper FindUsedColumnNames has been simplified.; A test has been added.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3353:133,simpl,simplified,133,https://root.cern,https://github.com/root-project/root/pull/3353,1,['simpl'],['simplified']
Usability,"t in memory; pick 275d909504 Adding new option to set MaxVirtualSize to a negative value causing that many clusters of baskets kept in memory Just some indentation changes.; pick c25ea30332 Make some clang format changes; pick dae3241bee Fix whitespace; pick baa80f53a4 Fix memory leak; pick a8324c92ee Undo TBranch version change, thanks Philippe.; ```. Then, you can change the commits you want to fuse from `pick` to `fixup`, which will combine them with the previous commit, like this:. ```; pick ede15457be Adding new option to set MaxVirtualSize to a negative value causing one cluster of baskets kept in memory; fixup 3035c73a31 Adding new option to set MaxVirtualSize to a negative value causing that many clusters of baskets kept in memory; fixup 275d909504 Adding new option to set MaxVirtualSize to a negative value causing that many clusters of baskets kept in memory Just some indentation changes.; fixup c25ea30332 Make some clang format changes; fixup dae3241bee Fix whitespace; fixup baa80f53a4 Fix memory leak; fixup a8324c92ee Undo TBranch version change, thanks Philippe.; ```. Then you save and quit, and git will rebase for you, leaving you with a single commit:. ```; commit 304f38e812556a7d8c4dcaaf5a71fca4d3ba9bf2; Author: Peter van Gemmeren <gemmeren@anl.gov>; Date: Tue Jul 18 17:47:58 2017 -0500. Adding new option to set MaxVirtualSize to a negative value causing one cluster of baskets kept in memory; ```. Since the message is quite long, I also did `git commit --amend`, which lets you edit your message and save it. At the end, I have this:. ```; commit 891b51caa6089e13997e2d2e0aa25f869970e878; Author: Peter van Gemmeren <gemmeren@anl.gov>; Date: Tue Jul 18 17:47:58 2017 -0500. [TBranch] Add new option to help in keeping baskets in memory; ; Set MaxVirtualSize to a negative value causing one cluster of baskets; kept in memory.; ```. The final commit has all the changes combined, and a nice short message and separate long explanation. Let me know if you have an",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/796#issuecomment-317761739:1622,Undo,Undo,1622,https://root.cern,https://github.com/root-project/root/pull/796#issuecomment-317761739,1,['Undo'],['Undo']
Usability,"t in the `CMAKE_CXX_FLAGS` variable itself). Actually changing them to CMake lists directly might break users code, so this way is safer.~~. Target based approach before (showing the old INCLUDE issue too). ```cmake; cmake_minimum_required(VERSION 3.4). project(RootSimpleExample LANGUAGES CXX); find_package(ROOT CONFIG REQUIRED COMPONENTS RooFit RooFitCore); # Note: Symbols missing compiling error if user forgets RooFitCore!. # Already fixed in ROOT master; set_property(TARGET ROOT::Core PROPERTY; INTERFACE_INCLUDE_DIRECTORIES ""${ROOT_INCLUDE_DIRS}""). # Fix for ROOT_*_FLAGS not actually being a CMake list; separate_arguments(ROOT_CXX_FLAGS); separate_arguments(ROOT_EXE_LINKER_FLAGS). # Setting up the recommended ROOT flags; add_library(ROOT::Flags IMPORTED INTERFACE); set_property(TARGET ROOT::Flags APPEND PROPERTY; INTERFACE_COMPILE_OPTIONS ${ROOT_CXX_FLAGS}); set_property(TARGET ROOT::Flags APPEND PROPERTY; INTERFACE_COMPILE_DEFINITIONS ${ROOT_DEFINITIONS}); #set_property(TARGET ROOT::Flags APPEND PROPERTY; # INTERFACE_LINK_LIBRARIES ${ROOT_EXE_LINKER_FLAGS}). # Adding an exectuable program and linking to needed ROOT libraries; add_executable(RootSimpleExample SimpleExample.cxx); target_link_libraries(RootSimpleExample PUBLIC; ROOT::Core ROOT::Imt ROOT::RIO ROOT::Net ROOT::Hist; ROOT::Graf ROOT::Graf3d ROOT::Gpad ROOT::Tree ROOT::TreePlayer; ROOT::Rint ROOT::Postscript ROOT::Matrix ROOT::Physics; ROOT::MathCore ROOT::Thread ROOT::RooFit; ROOT::Flags); ```; > Note: I'm listing all the libraries that ROOT adds by default, though due to dependency resolution, a few of them might not be needed to achieve the same result. After:. ```cmake; cmake_minimum_required(VERSION 3.4). project(RootSimpleExample LANGUAGES CXX); find_package(ROOT CONFIG REQUIRED COMPONENTS RooFit). # Adding an exectuable program and linking to needed ROOT libraries; add_executable(RootSimpleExample SimpleExample.cxx); target_link_libraries(RootSimpleExample PUBLIC ROOT::Libraries ROOT::Flags); ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1959:2009,Simpl,SimpleExample,2009,https://root.cern,https://github.com/root-project/root/pull/1959,2,['Simpl'],['SimpleExample']
Usability,"t my test is based on. So, my next step is to test the CUDA mode with the root version.; > > > ; > > > ; > > > One way to test cling within ROOT would be to get this PR and then configure with `-DCMAKE_BUILD_TYPE=Debug -DLLVM_BUILD_TYPE=Debug -Dclingtest=On` and then type `make -j cling` and that should build the cling binary ready to use.; > > ; > > ; > > The root PR does not solve my problem. I looked a little bit in the code with the gdb and found out, where the application crashes. In `IncrementalCUDADeviceCompiler::generatePTX()` the line `llvm::Module* module = m_PTX_interp->getLastTransaction()->getModule();` returns a `nullptr`. But this only happens, if I define a Cuda `__global__` kernel. If use a normal C++ statement, like `int i = 3;` or define a Cuda `__device__` function everything is fine. I'm not sure, if there more cases. @vgvassilev Do you have an idea? Maybe you saw something, which can help me, during your porting work. If not, it is not problem. Then, I simply have to spent more time.; > ; > I found the problem and a possible fix. The problem happens in the Interpreter instance for the device code. In the function `IncrementalExecutor::runStaticInitializersOnce()`, there is the line `llvm::orc::VModuleKey K = emitModule(T.takeModule(), T.getCompilationOpts().OptLevel);`, which removes the `llvm::Module` from the transaction. Because `generatePTX()` is called afterwards, `getLastTransaction->getModule` returns a `nullptr`. At the moment, I don't know, why the device compiler creates a static initializer on the device site. On the host site, it is necessary to register the CUDA kernel. At the moment, my solution is a if-guard in `Interpreter::executeTransaction()`:; > ; > ```c++; > if(!m_Opts.CompilerOpts.CUDADevice); > ExeRes = m_Executor->runStaticInitializersOnce(T);; > ```; > ; > I need to verify, if this is a good solution. That's what I was about to say, now the JIT takes the ownership of the `llvm::Module` and then, once it is done JITing, ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6385#issuecomment-777250984:3891,simpl,simply,3891,https://root.cern,https://github.com/root-project/root/pull/6385#issuecomment-777250984,2,['simpl'],['simply']
Usability,"t of unavailable class TObject, offset=1171537962 pointer will be 0; Error in <TExMap::Remove>: key 586225820 not found at 447; Warning in <TBufferFile::CheckObject>: reference to object of unavailable class TObject, offset=586225820 pointer will be 0; Error in <TExMap::Remove>: key 423978783 not found at 84; Warning in <TBufferFile::CheckObject>: reference to object of unavailable class TList, offset=423978783 pointer will be 0; Warning in <TBufferFile::CheckObject>: reference to object of unavailable class TObject, offset=4207193 pointer will be 0; Error in <TExMap::Remove>: key 839042239 not found at 12; Warning in <TBufferFile::CheckObject>: reference to object of unavailable class TBranchRef, offset=839042239 pointer will be 0; Error in <TBufferFile::CheckByteCount>: object of class TTree read too many bytes: 883788679 instead of 526307551; Warning in <TBufferFile::CheckByteCount>: TTree::Streamer() not in sync with data, fix Streamer(). *** Break *** segmentation violation; root.exe(60607,0x102138580) malloc: Incorrect checksum for freed object 0x15c1e1a00: probably modified after being freed.; Corrupt value: 0x0; root.exe(60607,0x102138580) malloc: *** set a breakpoint in malloc_error_break to debug; ```. ### Expected behavior. The tree should be written to file without failures. ### To Reproduce. I have prepared a rather minimal example: https://cernbox.cern.ch/s/jhiOyKZJN89I3Hq ; It is based on the [RooFit example](https://root.cern/doc/master/rs301__splot_8C.html) because my actual use case is saving the result of the sPlot into a TTree, but the sPlot is not the issue here. . ### Setup. 1. ROOT version: 6.28/02; 2. Operating system: MacOS (but the same happens on lxplus); 3. How you obtained ROOT: macports (but the same happens on lxplus). ### Additional context. I would be glad to learn if there is a more efficient way of saving RooDataSet into a TTree. I tried to find if there is a RooDataSet conversion to RDataFrame but found only the inverse operation.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12710:3222,learn,learn,3222,https://root.cern,https://github.com/root-project/root/issues/12710,1,['learn'],['learn']
Usability,"t the cause of the crash. If you see question; marks as part of the stack trace, try to recompile with debugging information; enabled and export CLING_DEBUG=1 environment variable before running.; You may get help by asking at the ROOT forum https://root.cern/forum; Only if you are really convinced it is a bug in ROOT then please submit a; report at https://root.cern/bugs Please post the ENTIRE stack trace; from above as an attachment in addition to anything else; that might help us fixing this issue.; ===========================================================; #6 0x00007f2da746e068 in llvm::PHINode::getIncomingValueForBlock(llvm::BasicBlock const*) const () from /home/user/Builds/root_build/lib/libCling.so; #7 0x00007f2da82a91e8 in llvm::TryToSimplifyUncondBranchFromEmptyBlock(llvm::BasicBlock*, llvm::DomTreeUpdater*) () from /home/user/Builds/root_build/lib/libCling.so; #8 0x00007f2da83255f9 in llvm::simplifyCFG(llvm::BasicBlock*, llvm::TargetTransformInfo const&, llvm::DomTreeUpdater*, llvm::SimplifyCFGOptions const&, llvm::ArrayRef<llvm::WeakVH>) () from /home/user/Builds/root_build/lib/libCling.so; #9 0x00007f2da7e3dac6 in iterativelySimplifyCFG(llvm::Function&, llvm::TargetTransformInfo const&, llvm::DomTreeUpdater*, llvm::SimplifyCFGOptions const&) () from /home/user/Builds/root_build/lib/libCling.so; #10 0x00007f2da7e62d63 in simplifyFunctionCFGImpl(llvm::Function&, llvm::TargetTransformInfo const&, llvm::DominatorTree*, llvm::SimplifyCFGOptions const&) () from /home/user/Builds/root_build/lib/libCling.so; #11 0x00007f2da87a6698 in llvm::FPPassManager::runOnFunction(llvm::Function&) () from /home/user/Builds/root_build/lib/libCling.so; #12 0x00007f2da87a699e in llvm::legacy::FunctionPassManagerImpl::run(llvm::Function&) () from /home/user/Builds/root_build/lib/libCling.so; #13 0x00007f2da625bdb7 in cling::Interpreter::executeTransaction(cling::Transaction&) () from /home/user/Builds/root_build/lib/libCling.so; #14 0x00007f2da62a2d7a in cling::IncrementalPar",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14037:5998,simpl,simplifyCFG,5998,https://root.cern,https://github.com/root-project/root/issues/14037,2,"['Simpl', 'simpl']","['SimplifyCFGOptions', 'simplifyCFG']"
Usability,t/ROOT-10426/roottest_cling_staticinit_ROOT_10426_ROOT_10426/); - [projectroot.roottest.python.cling.roottest_python_cling_api](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/149180/testReport/projectroot.roottest.python/cling/roottest_python_cling_api/); - [projectroot.roottest.python.cling.roottest_python_cling_class](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/149180/testReport/projectroot.roottest.python/cling/roottest_python_cling_class/); - [projectroot.roottest.root.dataframe.roottest_root_dataframe_missingBranches](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/149180/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_missingBranches/); - [projectroot.roottest.cling.other.roottest_cling_other_checkMissingSymbolExitCode](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/149180/testReport/projectroot.roottest.cling/other/roottest_cling_other_checkMissingSymbolExitCode/); - [projectroot.roottest.cling.other.roottest_cling_other_assertDirWithParen](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/149180/testReport/projectroot.roottest.cling/other/roottest_cling_other_assertDirWithParen/); - [projectroot.roottest.python.cpp.roottest_python_cpp_advanced](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/149180/testReport/projectroot.roottest.python/cpp/roottest_python_cpp_advanced/); - [projectroot.roottest.root.meta.roottest_root_meta_execUnloading_auto](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/149180/testReport/projectroot.roottest.root/meta/roottest_root_meta_execUnloading_auto/); - [projectroot.roottest.root.selector.simple.roottest_root_selector_simple_runtestLoadingSelector](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/149180/testReport/projectroot.roottest.root.selector/simple/roottest_root_selector_simple_runtestLoadingSelector/),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10294#issuecomment-1175163072:2815,simpl,simple,2815,https://root.cern,https://github.com/root-project/root/pull/10294#issuecomment-1175163072,4,['simpl'],['simple']
Usability,"t/root/issues?q=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. I have my own project that uses ROOT (and Python); my CMakeList file contains following ilnes ; ```; find_package(ROOT 6 CONFIG REQUIRED ); ...; find_package(Python3 ${PY3VERSION_ROOT} COMPONENTS Interpreter Development NumPy). ```; And it build, works, and everything is fine . To follow up development in ROOT, I regularly rebuild my project using ROOT version from LCG nighlies dev3 build. And starting from Tuesday, August 31 I have a build error - numpy i snot found. ```; -- Could NOT find Python3 (missing: Python3_NumPy_INCLUDE_DIRS NumPy) (found suitable version ""3.9.6"", minimum required is ""3.9.6""); ```. As a result all binaries/libraries in my project are invalid and result in segfaults. . It is not clear if this is ROOT,CMAKE or LCG-nighlies problem. . ### Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->. for ROOT-based project ; cmake does not find NumPy for dev3 LCG nighlies built Staring form August 31, 2021 . ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->. cmake should find NumPy . ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->. 1. lxplus.cern.ch ; 2. source /cvmfs/sft.cern.ch/lcg/views/dev3/Tue/x86_64-centos7-gcc9-opt/setup.sh; 3. any CMAKe project with these two ilnes included ; ```; find_package(ROOT 6 CONFIG REQUIRED ); ...; find_package(Python3 3.6.9 COMPONENTS Interpreter Development NumPy); ```. ### Setup; <!--; 1. ROOT version; 2. Operating system; 3. How you obtain",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8942:1075,clear,clear,1075,https://root.cern,https://github.com/root-project/root/issues/8942,1,['clear'],['clear']
Usability,"t@macphsft18 ~ % ls -l /Library/Developer/CommandLineTools/SDKs/; total 0; lrwxr-xr-x 1 root wheel 14 19 Sep 13:58 MacOSX.sdk -> MacOSX15.0.sdk; drwxr-xr-x 7 root wheel 224 1 May 00:16 MacOSX14.5.sdk; lrwxr-xr-x 1 root wheel 14 19 Sep 13:57 MacOSX14.sdk -> MacOSX14.5.sdk; drwxr-xr-x 7 root wheel 224 21 Aug 17:15 MacOSX15.0.sdk; lrwxr-xr-x 1 root wheel 14 19 Sep 13:56 MacOSX15.sdk -> MacOSX15.0.sdk; sftnight@macphsft18 ~ % clang++ -x c++ /dev/null -E -v; Apple clang version 16.0.0 (clang-1600.0.26.3); Target: x86_64-apple-darwin23.6.0; Thread model: posix; InstalledDir: /Library/Developer/CommandLineTools/usr/bin; ignoring nonexistent directory ""/Library/Developer/CommandLineTools/usr/bin/../include/c++/v1""; ""/Library/Developer/CommandLineTools/usr/bin/clang"" -cc1 -triple x86_64-apple-macosx14.0.0 -Wundef-prefix=TARGET_OS_ -Wdeprecated-objc-isa-usage -Werror=deprecated-objc-isa-usage -Werror=implicit-function-declaration -E -disable-free -clear-ast-before-backend -disable-llvm-verifier -discard-value-names -main-file-name null -mrelocation-model pic -pic-level 2 -mframe-pointer=all; -fno-strict-return -ffp-contract=on -fno-rounding-math -funwind-tables=2 -target-sdk-version=15.0 -fvisibility-inlines-hidden-static-local-var -fno-modulemap-allow-subdirectory-search -target-cpu penryn -tune-cpu generic -debugger-tuning=lldb -target-linker-version 1115.7.3 -v -fcoverage-compilation-dir=/Users/sftnight -resource-dir /Library/Developer/CommandLineTools/usr/lib/clang/16 -isysroot /Library/Developer/CommandLineTools/SDKs/MacOSX.sdk -I/usr/local/include -internal-isystem /Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/c++/v1 -internal-isystem /Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/local/include -internal-isystem /Library/Developer/CommandLineTools/usr/lib/clang/16/include -internal-externc-isystem /Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include -internal-externc-isystem /Library/Developer/CommandLineTools/usr/include -Wno-reorde",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16494#issuecomment-2373214590:1663,clear,clear-ast-before-backend,1663,https://root.cern,https://github.com/root-project/root/pull/16494#issuecomment-2373214590,2,['clear'],['clear-ast-before-backend']
Usability,t](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/79381/console).; ### Errors:; - error: refs/heads/pcanal-v6-18-00-patches does not point to a valid object! ; - error: refs/heads/pcanal-v6-18-00-patches does not point to a valid object! ; - error: refs/heads/pcanal-v6-18-00-patches does not point to a valid object! ; - error: refs/heads/pcanal-v6-18-00-patches does not point to a valid object! ; - error: refs/heads/pcanal-v6-18-00-patches does not point to a valid object! ; - error: refs/heads/pcanal-v6-18-00-patches does not point to a valid object! ; - error: refs/heads/pcanal-v6-18-00-patches does not point to a valid object! ; - error: refs/heads/pcanal-v6-18-00-patches does not point to a valid object! . ### Failing tests:; - [projectroot.runtutorials.tutorial_roofit_rf104_classfactory_py](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/79381/testReport/projectroot/runtutorials/tutorial_roofit_rf104_classfactory_py/); - [projectroot.roottest.root.selector.simple.roottest_root_selector_simple_runtestLoadingSelector](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/79381/testReport/projectroot.roottest.root.selector/simple/roottest_root_selector_simple_runtestLoadingSelector/); - [projectroot.roottest.root.tree.selector.roottest_root_tree_selector_make](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/79381/testReport/projectroot.roottest.root.tree/selector/roottest_root_tree_selector_make/); - [projectroot.roottest.root.treeproxy.roottest_root_treeproxy_make](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/79381/testReport/projectroot.roottest.root/treeproxy/roottest_root_treeproxy_make/); - [projectroot.roottest.root.meta.MakeProject.roottest_root_meta_MakeProject_runatlasaod](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/79381/testReport/projectroot.roottest.root.meta/MakeProject/roottest_root_meta_MakeProject_runatlasaod/); - [projectroot.roottest.root.meta.MakeProject.roottest_root_meta_MakeProject,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5030#issuecomment-589606883:1047,simpl,simple,1047,https://root.cern,https://github.com/root-project/root/pull/5030#issuecomment-589606883,2,['simpl'],['simple']
Usability,"table used to back a higher level representation of table in which case the columns are not independent - they would be related (unless ""independent columns"" is being used to mean statistically independent variables). And I came across ""event"" in code comments which sounds very like ""event"" is a ""row"" of data which'd make sense from a Cern perspective but is ambiguous/meaningless/confusing to a newbie. ### share how it could be improved. A Glossary with ROOT term equivalents in other frames of reference. Eg. Event ~ row ~ tuple ~ observation (assuming I guessed correctly). TTRee ~ RDataFrame/TDataFrame ~ dataset ~ Table ~ 1 or 2 dimensional Array or Tensor ~ a grid of data with one row per event/observation/record.; TBranch ~ column of data in a grid or table of data; TLeaf ~ element ~ cell - a single observation of single variable. And where these are not correct list the differences between them to clarify what they actually are. Without a clear and precise understanding of what the terms mean you are never sure about what you are doing. ----------------------------------------------------------; Some (more) high level notes on how the framework works would be very useful at the start of the primer or comments in the code to explain ""magic"" when it happens - I was scratching my head as to how one particular object knew to use another when no relationship appeared in the code anywhere;; ```. // The canvas on which we'll draw the graph; auto mycanvas = new TCanvas();. // lots of code like... // Draw the graph !; graph.DrawClone(""APE"");. // but no mention of mycanvas again until... . mycanvas->Print(""graph_with_law.pdf"");; ```. which raises all sorts of questions ( as it is not obvious what is going on ).; ; ------------------------------------------------------------. Basic stuff first: . Most people will want to read in a multi column file and get stats/analysis on those columns - fromCSV is buried pretty deep considering - why why why am I reading about ""TTree""s w",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11967:1225,clear,clear,1225,https://root.cern,https://github.com/root-project/root/issues/11967,1,['clear'],['clear']
Usability,"tbb::interface7::internal::isolate_within_arena(tbb::interface7::internal::delegate_base&, long) (in /usr/lib/x86_64-linux-gnu/libtbb.so.2); ==30221== by 0x4AD30F6: tbb::interface7::internal::delegated_function<ROOT::TThreadExecutor::ParallelFor(unsigned int, unsigned int, unsigned int, std::function<void (unsigned int)> const&)::{lambda()#1} const, void>::operator()() const (in /home/axel/build/root/24/rel/lib/libImt.so); ==30221== by 0x6707E65: tbb::interface7::internal::task_arena_base::internal_execute(tbb::interface7::internal::delegate_base&) const (in /usr/lib/x86_64-linux-gnu/libtbb.so.2); ==30221== by 0x4AD4917: ROOT::TThreadExecutor::ParallelFor(unsigned int, unsigned int, unsigned int, std::function<void (unsigned int)> const&) (in /home/axel/build/root/24/rel/lib/libImt.so); ==30221== by 0x153BD2: SimpleParallelRDFs() (in /home/axel/build/root/24/rel/tree/dataframe/test/dataframe_concurrency); ==30221== by 0x19B770: void testing::internal::HandleExceptionsInMethodIfSupported<testing::Test, void>(testing::Test*, void (testing::Test::*)(), char const*) (in /home/axel/build/root/24/rel/tree/dataframe/test/dataframe_concurrency); ==30221== by 0x189F39: testing::Test::Run() [clone .part.0] (in /home/axel/build/root/24/rel/tree/dataframe/test/dataframe_concurrency); ==30221== by 0x18A3D1: testing::TestInfo::Run() [clone .part.0] (in /home/axel/build/root/24/rel/tree/dataframe/test/dataframe_concurrency); ==30221== by 0x18A5DD: testing::TestSuite::Run() [clone .part.0] (in /home/axel/build/root/24/rel/tree/dataframe/test/dataframe_concurrency); ==30221== by 0x18B69C: testing::internal::UnitTestImpl::RunAllTests() (in /home/axel/build/root/24/rel/tree/dataframe/test/dataframe_concurrency); ==30221== by 0x18BC07: testing::UnitTest::Run() (in /home/axel/build/root/24/rel/tree/dataframe/test/dataframe_concurrency); ==30221== by 0x19C4D3: main (in /home/axel/build/root/24/rel/tree/dataframe/test/dataframe_concurrency); ==30221== Uninitialised value was created by a s",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8899:6045,Simpl,SimpleParallelRDFs,6045,https://root.cern,https://github.com/root-project/root/issues/8899,1,['Simpl'],['SimpleParallelRDFs']
Usability,"te expects some STL container? Then it can not just be that STL container of say `T*`, but also the STL container of pointer any of the base classes, or worse, a mix thereof. And what if the tuple isn't actually targeting a container, but is an initalizer_list? There is often no (relevant) type information available at that point in Python, but many cases can still be resolved b/c the C++ side has some hints. For example `template<typename T, int N> void func(const std::array<T, N>&)` being given a Python tuple `(1, 2, 3)`. Absolutely clear what needs to be done for the conversion to work, but otherwise yet another case to add to the combinatorics. The above, current, situation is very much ""eeew"" and ""might not like the result."" It has also reached its breaking point, as you can see from the open bug reports and the constant hacking on workarounds. I appreciate that for the old PyROOT no-one actually seriously used templates, as folks avoided it in their interfaces b/c of non-support in the CINT world. The only client with moderately interesting templates would be RDataFrame. But in the real world, folks write modern C++ and template usage is much more pervasive. Just last week, I was looking at a massive series of variadically templated constructors: each peeled of an argument to eventually initialize a grand total of 3 data members. It was just a struct with an `unsigned int`, a `double`, and an `std::array<double, 3>`. The point of the whole set of constructors being that you can use initializer syntax with the data member in every order, either the ""naked"" types or with casts of explicitly named typedefs. Oh, it works _now_, with yet another workaround, but it actually crashed `lookupHelper` (segfault and die; and it's not the only one; I have a few more for Vassil, e.g. lookup in an unnamed namespace also crashes deep, deep inside Cling/Clang). So, I consider that another strong argument against ""trying"": anything beyond the usual basic stuff simply segfaults.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6393#issuecomment-696889449:3504,simpl,simply,3504,https://root.cern,https://github.com/root-project/root/issues/6393#issuecomment-696889449,2,['simpl'],['simply']
Usability,"tegral was linked:; * [RooDoubleCB.h](https://gitlab.cern.ch/lhcb/Erasmus/blob/b58c1441bb4233b11b0b5bb5816fa268add7c97c/Bu2D0H/Bu2D0H_FIT/src/RooDoubleCB.h); * [RooDoubleCB.C](https://gitlab.cern.ch/lhcb/Erasmus/blob/b58c1441bb4233b11b0b5bb5816fa268add7c97c/Bu2D0H/Bu2D0H_FIT/src/RooDoubleCB.C). This suggestion can be taken as an opportunity to improve the crystal ball shapes in RooFit in general. Right now there is the [RooCBShape](https://github.com/root-project/root/blob/master/roofit/roofit/src/RooCBShape.cxx) that only has a left non-Gaussian tail and [RooDSCBShape](https://github.com/root-project/root/blob/master/roofit/roofit/src/RooDSCBShape.cxx) that has two separately parametrized tails. The implementation of the RooDSCBShape is not super elegant because it has a lot of code duplication that would only get worse with the further parametrzation. To clear this up, we could implement one modern and fully parametrized crystal ball shape with a clear name like **RooCrystalBall** that can serve as a drop-in replacement for both RooCBShape and RooDSCBShape as well as cover the usecase of the asymmetric Gaussian core. Such a class and a rigurous test is implemented in https://github.com/root-project/root/pull/7257, which can serve as a starting point for this development. In addition to the commit suggested in the PR, there are a few more things that could be done to make RooCrystalBall the new standard:. * Write documentation.; * Implement batch computation interface.; * Maybe even deprecate the old shapes somehow. They probably need to be kept for backwards compatibility, but they could be put in RooFitMore and the user gets a nudge to use the new shape if it is used. Probably we should also look at the crystal ball implementation in Higgs combine to see if we can take some of the improvements upstream:; * [RooDoubleCBFast.h](https://github.com/cms-analysis/HiggsAnalysis-CombinedLimit/blob/102x/interface/RooDoubleCBFast.h); * [RooDoubleCBFast.cc](https://github.co",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7258:1207,clear,clear,1207,https://root.cern,https://github.com/root-project/root/issues/7258,2,['clear'],['clear']
Usability,"tems or if running other heavy applications - the number of your own threads running at any time may be lower than the limit due to demand on the CPU. 3. The 'Real Time' is similar to 'CPU Time / number of threads' AND 'Compressed Throughput' is lower than expected for your storage medium:; This would imply that your CPU threads aren't decompressing data as fast as your storage medium can provide it, and so decompression is the bottleneck. The best way to decrease your runtime would be to utilise a system with a faster CPU, or make use use of more threads when running, or use a compression algorithm with a higher decompression rate such as LZ4, possibly at the cost of some extra file size. A note on caching:. If your data is stored on a local disk, the system may cache some/all of the file in memory after it is first read. If this is realistic of how your analysis will run - then there is no concern. However, if you expect to only read files once in a while - and as such the files are unlikely to be in the cache - consider clearing the cache before running rootreadspeed. On Linux this can be done by running `echo 3 > /proc/sys/vm/drop_caches` as a superuser or a specific file can be dropped from the cache with `dd of=<FILENAME> oflag=nocache conv=notrunc,fdatasync count=0 > /dev/null 2>&1`. Known overhead of TTreeReader, RDataFrame:. rootreadspeed is designed to read all data present in the specified branches, trees and files at the highest possible speed. When the application bottleneck is not in the computations performed by analysis logic, higher-level interfaces built on top of TTree such as TTreeReader and RDataFrame are known to add a significant runtime overhead with respect to the runtimes reported by rootreadspeed (up to a factor 2). In realistic analysis applications it has been observed that a large part of that overhead is compensated by the ability of TTreeReader and RDataFrame to read branch values selectively, based on event cuts, and this overhead wi",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14039:5484,clear,clearing,5484,https://root.cern,https://github.com/root-project/root/pull/14039,1,['clear'],['clearing']
Usability,"ten the tolerance of tests in testLikelihoodSerial, testLikelihoodJob and testLikelihoodGradientJob, with many tests now passing EXPECT_EQ.; * testLikelihoodGradientJob adds offsetting to the parameterized test matrices of the LikelihoodGradientJobTest cases to test all the above (and below) changes. - Offset synchronization:; * LikelihoodWrapper and LikelihoodGradientWrapper now store a shared_ptr to the offsets instead of raw offsets. At construction time within a MinuitFcnGrad, they get passed the same single offset object so that it is always kept synced between the different likelihood calculators. If it isn't synced and the likelihood gets different offsets at different times, the minimizer understandably gets very confused. This was the case before this commit, which was, in fact, a bug.; * For LikelihoodJob and LikelihoodGradientJob, the offsets are also synchronized to all workers via update_state. For this, we simply check before evaluation whether offsets have changed since the previous evaluation and if so they are sent over the MultiProcess::Messenger. Note that while the LikelihoodGradientJob doesn't itself use the offset (it doesn't calculate the likelihood), it must still synchronize offsets, because during the gradient calculation the LikelihoodSerial objects on the workers are used to calculate the likelihoods there, so for them the offsets must be up to date.; * The LikelihoodJob contains a LikelihoodSerial member as well now. This allows the LikelihoodJob to trigger calculating the offsets on the master process before sending them to the workers.; * LikelihoodWrapper has some added private helper functions for managing offsets. - Other miscellaneous changes:; * LikelihoodWrapper::setApplyWeightSquared was implemented properly for RooSumL likelihoods as well, passing along the call to component RooUnbinnedLs. Note, however, that it is currently not reachable for users because there is no interface to pass this along from the RooMinimizer, which con",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12202:2447,simpl,simply,2447,https://root.cern,https://github.com/root-project/root/pull/12202,1,['simpl'],['simply']
Usability,"ter (similar to how `TApplication` ignores `argc` and `argv` if `numOptions==-1`), but that is certainly not a design pattern leading to modern, readable code, so better not spread it more ;-). ; `failOnUnknownArgs` sounds like a great choice of name, it clarifies the intent clearly. . > It would be wonderful to have that as unit test in `core/rint/test` [...]. It seems this does already exist, and has a unit test checking that errors are producted by `TRint` if unrecognitzed options are encountered ;-). Still, it seems I lack sufficient experience with `gtest`, since I don't understand why (for example) `TRint` with unsupported arguments does not `Terminate()` the test — so it's unclear to me how to write a test checking that it does not actually try to `Terminate()` when provided with a to-be-added `failOnUnknownArgs = false`. . In pseudo-steps, I think possible changes / additions to the existing test in `core/rint/test/TRintTests.cxx` to cover the use case as completely as possible could be:; 1. The existing test should be changed to set `failOnUnknownArgs = true` (after that is implemented). ; 2. A second test could be added, not setting `failOnUnknownArgs` (i.e. the default of `false` is used). This test then needs to check that no `stderr` is produced, and `Terminate()` is not called (here I'm unsure how to do these with `gtest`). ; 3. A third test could try to do the following, for complete coverage of the use case:; i. Create a `TRint (let's name it `myApp for simplicity here)`, passing in supported and unsupported options. ; ii. Check the unsupported options are accessible via `myApp->Argv()`. ; iii. Call `myApp`->Run(kTRUE)`, inject `.q` via `stdin` and test that the execution flow returns to after that line. . Does that sound reasonable? ; Since I am slightly at a loss on how to solve these ideas within `gtest`, I would be fine with going the back and forth approach (learning more `gtest` along the way so I can better contribute tests in the future) ;-).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10090#issuecomment-1064634456:1939,simpl,simplicity,1939,https://root.cern,https://github.com/root-project/root/issues/10090#issuecomment-1064634456,4,"['learn', 'simpl']","['learning', 'simplicity']"
Usability,"th it.; }; ```; ```cpp; //make_th1.C; #include <ROOT/RDirectory.hxx> // one extra line ;); #ifdef __CINT__; // shared_ptr<TH1> mc_global_x,mc_global_y,mc_global_z; // but saved one line here...; #endif. void make_th1() {; shared_ptr<TH1> x,y,z;; my_subroutine(x);; my_subroutine(y);; my_subroutine(z);. // and the last we do is leave globals on the heap for interactive user if needed:; #ifdef __CINT__ // I wouldn't leave the globals in compiled code. ; RDirectory::Heap().Add(""test1"",x); // this line is ""extra"" compared to PR, but puts caller in control.; RDirectory::Heap().Add(""test2"",y); // but using RDirectory requires 3 lines now ;); RDirectory::Heap().Add(""test3"",z); // ; #endif; }; ```; I'm ok with this. I like vanilla better, but I got a clean ownership model up until the end here, and made the globals right before exiting, almost like a return statement. If I want to put this in a compiled batch code that loops over this 50 times, pauses 1 second, and displays 3 things each time, I'd just add a loop with sleeps, and Bob's your uncle without even modifying the underlying implementation to get three instances. But this RDirectory version shown here and the C++ global version here are certainly not different in that respect. The C++ globals actually win on line count here if you like this code structure better (I do). I'd argue if one needs the extern header declarations to pass things around in compiled code, he should ask if he's doing it wrong, and that's not an usual sentiment. The whole point is I think to make things visible from the interpreter or other things spawned from it. That's surely why we got here, and if C++ globals makes it tedious to access them everywhere in compiled code, I call that a bonus. . On the other hand I don't like this ; example2: ; ```cpp; {; // my_subroutines.C; unique_ptr<TH1> x // used in my_subroutine. void my_subroutine() {; x.reset(); ; x.reset(new TH1F());; // .. do something with it.; }; ```; except for maybe quick temporary",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7305#issuecomment-791104038:2146,pause,pauses,2146,https://root.cern,https://github.com/root-project/root/pull/7305#issuecomment-791104038,2,['pause'],['pauses']
Usability,"th of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:4757:26: warning: ‘char* strncpy(char*, const char*, size_t)’ output may be truncated copying 10 bytes from a string of length 10 [-Wstringop-truncation] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:490:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing between 2147483648 and 2147483647 bytes at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 4294967295] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:761:21: warning: ‘%lu’ directive writing between 1 and 20 bytes into a region of size between 0 and 8191 [-Wformat-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/proof/proofd/src/XrdProofdProtocol.cxx:527:45: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘class XrdSecEntity’; use assignment or value-initialization instead [-Wclass-memaccess] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TSystem.cxx:1148:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing 1 byte at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 2147483649] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1770:96: warning: cast between incompatible function types from ‘TVirtualPad*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1774:94: warning: cast between incompatible function types from ‘TVirtualX*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1776:95: warning: cast between incompatible function types from ‘TDirectory*& (*)()’ to ‘TGlobalMappedFunction::Gl",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/774#issuecomment-410732358:1474,clear,clearing,1474,https://root.cern,https://github.com/root-project/root/pull/774#issuecomment-410732358,243,['clear'],['clearing']
Usability,"th of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:4757:26: warning: ‘char* strncpy(char*, const char*, size_t)’ output may be truncated copying 10 bytes from a string of length 10 [-Wstringop-truncation] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:490:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing between 2147483648 and 2147483647 bytes at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 4294967295] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:761:21: warning: ‘%lu’ directive writing between 1 and 20 bytes into a region of size between 0 and 8191 [-Wformat-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/proof/proofd/src/XrdProofdProtocol.cxx:527:45: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘class XrdSecEntity’; use assignment or value-initialization instead [-Wclass-memaccess] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TSystem.cxx:1148:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing 1 byte at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 2147483649] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TVirtualGL.cxx:31:85: warning: cast between incompatible function types from ‘TGLManager*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1770:96: warning: cast between incompatible function types from ‘TVirtualPad*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1774:94: warning: cast between incompatible function types from ‘TVirtualX*& (*)()’ to ‘TGlobalMappedFunction:",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2691#issuecomment-424741755:1474,clear,clearing,1474,https://root.cern,https://github.com/root-project/root/pull/2691#issuecomment-424741755,4,['clear'],['clearing']
Usability,"th of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:4757:26: warning: ‘char* strncpy(char*, const char*, size_t)’ output may be truncated copying 10 bytes from a string of length 10 [-Wstringop-truncation] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:490:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing between 2147483648 and 2147483647 bytes at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 4294967295] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:761:21: warning: ‘%lu’ directive writing between 1 and 20 bytes into a region of size between 0 and 8191 [-Wformat-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/proof/proofd/src/XrdProofdProtocol.cxx:527:45: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘class XrdSecEntity’; use assignment or value-initialization instead [-Wclass-memaccess] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TSystem.cxx:1149:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing 1 byte at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 2147483649] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1769:96: warning: cast between incompatible function types from ‘TVirtualPad*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1773:94: warning: cast between incompatible function types from ‘TVirtualX*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1775:95: warning: cast between incompatible function types from ‘TDirectory*& (*)()’ to ‘TGlobalMappedFunction::Gl",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2519#issuecomment-415844036:1474,clear,clearing,1474,https://root.cern,https://github.com/root-project/root/pull/2519#issuecomment-415844036,6,['clear'],['clearing']
Usability,thank you @jblomer for being so responsive to comments!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2322#issuecomment-417241965:32,responsiv,responsive,32,https://root.cern,https://github.com/root-project/root/pull/2322#issuecomment-417241965,2,['responsiv'],['responsive']
Usability,"that will be a challenge. We see this after we package ROOT in an RPM. I can try to setup something but not on lxplus and it will take time. . Meanwhile, could you tell me if there is a way to force ROOT to look for the modulemap.module in a given place ? ; Why would ROOT not find the modulemap installed in an item of `ROOT_INCLUDE_PATH` ? . I can reproduce the issue on a local setup by simply deleting the `module.modulemap`. So it is really just ROOT not finding the module.modulemap.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/15318#issuecomment-2152689664:390,simpl,simply,390,https://root.cern,https://github.com/root-project/root/issues/15318#issuecomment-2152689664,2,['simpl'],['simply']
Usability,"the cause of the crash.; You may get help by asking at the ROOT forum http://root.cern.ch/forum; Only if you are really convinced it is a bug in ROOT then please submit a; report at http://root.cern.ch/bugs Please post the ENTIRE stack trace; from above as an attachment in addition to anything else; that might help us fixing this issue.; ===========================================================; #5 0x00007fc0d9056288 in TPad::Close(char const*) () from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3python3/Fri/x86_64-centos7-gcc10-opt/lib/libGpad.so; #6 0x00007fc0d905f746 in TPad::~TPad() [clone .part.0] () from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3python3/Fri/x86_64-centos7-gcc10-opt/lib/libGpad.so; #7 0x00007fc0d905f919 in TPad::~TPad() () from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3python3/Fri/x86_64-centos7-gcc10-opt/lib/libGpad.so; #8 0x000000000040124b in main (argc=<optimized out>, argv=<optimized out>) at /test/pad6.cxx:9; ===========================================================. ```. ## Expected behavior; No crash. ## To Reproduce; Code ; ```; #include <TCanvas.h>. int main(int argc, char **argv) {; TCanvas* C= new TCanvas(""cnvas"",""canvas"",1024,768);; C->cd();; TPad* c= new TPad();; c->SetPad(0,0,1,1);; c->cd(1);; delete c;; delete C;; return 0;; }. ```; Compile; ```; g++ pad6.cxx $(root-config --glibs --cflags --libs) -o pad6 -g; ```. Run; ```; ./pad6; ```. ## Setup; EPEL ROOT 62202/gcc485/CentOS7; ROOT night buil/gcc10/lxplus; ; ## Additional context; Possible fix in Tpad::Close; Replace; ```; if (fCanvas->GetPadSave() == this); fCanvas->ClearPadSave();; if (fCanvas->GetSelectedPad() == this); fCanvas->SetSelectedPad(0);; if (fCanvas->GetClickSelectedPad() == this); fCanvas->SetClickSelectedPad(0);; ```; with. ```; if (fCanvas); {; if (fCanvas->GetPadSave() == this); fCanvas->ClearPadSave();; if (fCanvas->GetSelectedPad() == this); fCanvas->SetSelectedPad(0);; if (fCanvas->GetClickSelectedPad() == this); fCanvas->SetClickSelectedPad(0);; }; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6453:3064,Clear,ClearPadSave,3064,https://root.cern,https://github.com/root-project/root/issues/6453,2,['Clear'],['ClearPadSave']
Usability,"the fact that all the rest of RooFit still compiles, and that tutorials run).; This is the chance to modernise/improve the `RooCategory` interface. It would be nice if you could specifically look at `RooCategory.h`, maybe in conjunction with the modernised tutorial on how they can be used in the future:; https://github.com/hageboeck/root/blob/cleanupCategories/tutorials/roofit/rf404_categories.C. More details what happened:; - Replace RooCatType by an integer.; - Replace names saved in each instance of RooCatType by a map in; RooAbsCategory that maps state numbers to strings. This saves 64 bytes; + the size of TObject for each event, and makes loading strings in each; event unnecessary.; - Convert RooVectorDataStore from saving RooCatType to integers of; category states.; - With this, also reduce the amount of unnecessary members in RooVectorDataStore. - Provide new interfaces for categories to work without RooCatType.; - Prevent clearing of shapeDirty in RooAbsCategory::evaluate(), since; derived category classes might need to recompute their shapes if one; of their input categories change.; - Add function to define multiple category states at once with; initialiser lists. - Mark legacy interfaces exposing RooCatType as deprecated in doxygen.; - Stop including RooCatType when R__LESS_INCLUDES is set.; - Flag legacy interface with R__SUGGEST_ALTERNATIVE.; - Create RooCatType instances on-demand in case users continue to use; the legacy interface. - Consolidate RooMultiCategory and RooSuperCategory. These share almost; all the code, so RooSuperCategory will now use a RooMultiCategory for; state definition and retrieval. The only additional functionality for; RooSuperCategory is that it can assign states to its subcategories. - Replace ineffective assert(0) by throws.; - Deprecate RooCategorySharedProperties, replace by a shared_ptr to a; map of allowed ranges.; - Deprecate RooMultiCatIter, remove from dictionaries.; - Remove the seemingly unused class RooMapCatEntry.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5219:1650,clear,clearing,1650,https://root.cern,https://github.com/root-project/root/pull/5219,1,['clear'],['clearing']
Usability,"the implementation of histo models has been simplified avoiding code duplication.; The creation of the shared_pointer containing the histogram has been moved to; the model classes, in order to simplify the TDFInterface.; Test coverage has been significantly increased.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1770:44,simpl,simplified,44,https://root.cern,https://github.com/root-project/root/pull/1770,2,['simpl'],"['simplified', 'simplify']"
Usability,"theMethod, TString methodTitle, TString theOption = """") =>; runtime_error: FATAL error; TMVA::MethodBase* TMVA::Factory::BookMethod(TMVA::DataLoader*, TMVA::Types::EMVA, TString, TString, TMVA::Types::EMVA, TString) =>; TypeError: takes at least 6 arguments (4 given); CMake Error at /builddir/build/BUILD/root-6.28.00/redhat-linux-build/RootTestDriver.cmake:232 (message):; error code: 1; ~~~. #### tutorial-tmva-TMVA_RNN_Classification-py. TypeError: none of the 3 overloaded methods succeeded.; ~~~; 1272/1272 Test #1269: tutorial-tmva-TMVA_RNN_Classification-py ............................***Failed 1.39 sec; Warning in <TMVA_RNN_Classificaton>: Skip using Keras since tensorflow is not installed; Warning in <TMVA_RNN_Classification>: TMVA is not build with GPU or CPU multi-thread support. Cannot use TMVA Deep Learning for RNN; DataSetInfo : [dataset] : Added class ""Signal""; : Add Tree sgn of type Signal with 2000 events; DataSetInfo : [dataset] : Added class ""Background""; : Add Tree bkg of type Background with 2000 events; <FATAL> : Unknown method index in map: 0; ***> abort program execution; Running with nthreads = 25769803776; --- RNNClassification : Using input file: time_data_t10_d30.root; number of variables is 300; vars_time0[0]; [ --- ]; vars_time9[29]; prepared DATA LOADER ; Traceback (most recent call last):; File ""/builddir/build/BUILD/root-6.28.00/tutorials/tmva/TMVA_RNN_Classification.py"", line 331, in <module>; factory.BookMethod(; File ""/builddir/build/BUILD/root-6.28.00/redhat-linux-build/lib/ROOT/_pythonization/_tmva/_factory.py"", line 61, in BookMethod; return self._BookMethod(*args, **kwargs); ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^; TypeError: none of the 3 overloaded methods succeeded. Full details:; TMVA::MethodBase* TMVA::Factory::BookMethod(TMVA::DataLoader* loader, TString theMethodName, TString methodTitle, TString theOption = """") =>; TypeError: could not convert argument 2; TMVA::MethodBase* TMVA::Factory::BookMethod(TMVA::DataLoader* loader, TMVA::",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12429:12827,Learn,Learning,12827,https://root.cern,https://github.com/root-project/root/issues/12429,1,['Learn'],['Learning']
Usability,"this=0x7fa202db6d00 <textinput::TerminalConfigUnix::Get()::s>, signum=11) at /opt/root_src/core/textinput/src/textinput/TerminalConfigUnix.cpp:99; #9 0x00007fa202aa1194 in (anonymous namespace)::TerminalConfigUnix__handleSignal (signum=11) at /opt/root_src/core/textinput/src/textinput/TerminalConfigUnix.cpp:36; #10 <signal handler called>; #11 0x00005630924075b0 in ?? (); #12 0x00007fa1e65ad3d9 in operator() (__closure=0x7ffe8194d453, obj=0x563091644350) at /opt/root_src/graf2d/gpad/src/TRatioPlot.cxx:116; #13 0x00007fa1e65ad44e in TRatioPlot::~TRatioPlot (this=0x563092404020, __in_chrg=<optimized out>) at /opt/root_src/graf2d/gpad/src/TRatioPlot.cxx:119; #14 0x00007fa1e65ad6b8 in TRatioPlot::~TRatioPlot (this=0x563092404020, __in_chrg=<optimized out>) at /opt/root_src/graf2d/gpad/src/TRatioPlot.cxx:139; #15 0x00007fa2029d267d in TCollection::GarbageCollect (obj=0x563092404020) at /opt/root_src/core/cont/src/TCollection.cxx:736; #16 0x00007fa2029daf97 in TList::Clear (this=0x5630923e3c00, option=0x7fa1e65ce0fc """") at /opt/root_src/core/cont/src/TList.cxx:449; #17 0x00007fa1e657ad87 in TPad::Close (this=0x563090edf1c0) at /opt/root_src/graf2d/gpad/src/TPad.cxx:981; #18 0x00007fa1e65522b0 in TCanvas::Close (this=0x563090edf1c0, option=0x7fa20211a000 """") at /opt/root_src/graf2d/gpad/src/TCanvas.cxx:802; #19 0x00007fa1faab4788 in cling::IncrementalExecutor::executeWrapper(llvm::StringRef, cling::Value*) const () from /home/user/build/build-root-Desktop-Debug/lib/libCling.so; #20 0x00007fa1faa3787c in cling::Interpreter::RunFunction(clang::FunctionDecl const*, cling::Value*) () from /home/user/build/build-root-Desktop-Debug/lib/libCling.so; #21 0x00007fa1faa37fc7 in cling::Interpreter::EvaluateInternal(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::CompilationOptions, cling::Value*, cling::Transaction**, unsigned long) () from /home/user/build/build-root-Desktop-Debug/lib/libCling.so; #22 0x00007fa1faa381e8 in cling::Interpr",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14855#issuecomment-1970869205:2246,Clear,Clear,2246,https://root.cern,https://github.com/root-project/root/issues/14855#issuecomment-1970869205,1,['Clear'],['Clear']
Usability,"thread T0; #0 0x7f530c576a65 in TMVA::TSpline2::Eval(double) const root/tmva/tmva/src/TSpline2.cxx:84; #1 0x7f530c3dd685 in TMVA::PDF::FillSplineToHist() root/tmva/tmva/src/PDF.cxx:539; #2 0x7f530c3de1e8 in TMVA::PDF::BuildSplinePDF() root/tmva/tmva/src/PDF.cxx:364; #3 0x7f530c3dfc62 in TMVA::PDF::BuildPDF(TH1 const*) root/tmva/tmva/src/PDF.cxx:299; #4 0x7f530be8247c in TMVA::MethodBase::CreateMVAPdfs() root/tmva/tmva/src/MethodBase.cxx:2220; #5 0x7f530beaaa67 in TMVA::MethodBase::TrainMethod() root/tmva/tmva/src/MethodBase.cxx:691; #6 0x7f530bd67bb7 in TMVA::Factory::TrainAllMethods() root/tmva/tmva/src/Factory.cxx:1173; #7 0x7f5311416107 in Belle2::MVA::TMVATeacher::trainFactory(TMVA::Factory&, TMVA::DataLoader&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const belle2/mva/methods/src/TMVA.cc:164; #8 0x7f5311418389 in Belle2::MVA::TMVATeacherClassification::train(Belle2::MVA::Dataset&) const belle2/mva/methods/src/TMVA.cc:303; #9 0x90859d in (anonymous namespace)::TMVATest_TMVAClassificationInterface_Test::TestBody() belle2/mva/methods/tests/test_TMVA.cc:153; ```. Looking at the TH1 Warning about only having one bin and the code in `TSpline2::Eval` there is indeed a problem if the histogram/TGraph has only one point as (bin+2) is accessed. Now I'm fully aware interpolating a 1 point histogram doesn't make much sense but still, a heap-overflow is not the expected behavior. ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->; Probably just return the value itself if only one point is in the graph. ### To Reproduce. ```c++; void tspline() {; double x{1};; TGraph* g = new TGraph(1, &x, &x);; TMVA::TSpline2 s(""spline"", g);; s.Eval(x);; }; ```. ### Setup. * ROOT 6.24.0; * GCC 10.2; * Ubuntu 18.04. ## Additional Context. I would also like to point out that `TSpline2.cxx` claims it doesn't own the `TGraph` instance in a comment in the constructor and contradicts this ten lines later.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8021:2352,clear,clear,2352,https://root.cern,https://github.com/root-project/root/issues/8021,1,['clear'],['clear']
Usability,"tic case already exists in TMath). As previously discussed in the ROOT forum https://root-forum.cern.ch/t/relativistic-breit-wigner-and-relativistic-voigt/48844 , the relativistic version has been added to mathmore rather than TMath, as it requires including a header file with an integrator which is CPU intensive. This has hence been added as it's own class in mathmore, with two functions:. static double evaluate(double x, double median, double sigma, double lg, double integrationRange=26.615717509251260);; static double dumpingFunction(double median, double sigma, double lg, double integrationRange=26.615717509251260);. The default integrationRange was chosen as the integral has been wrote in a form where it is multiplied by exp(-t^2), and this value of integrationRange results in going to the point where exp(-t^2) reaches the minimum value stored by a double. A relativistic voigt is a convolution of a relativistic breit wigner and a gaussian, doing this naively is computationally infeasible however a fairly simple redefinition of variables allows rewriting the integral in a form that is reasonable to compute. This is shown in https://arxiv.org/pdf/1711.09304.pdf equation 9 which has been used here. I am unsure how referencing works with ROOT. [Note: the function used here is not actually identical to equation 9, as the paper linked uses a different normalization than ROOT does for the non relativistic voigt which is already implemented in TMath. I have renormalized this equation to be consistent with the non relativistic case already in ROOT). The two functions that have been defined are:. evaluate, simply gives the value of the relativisitic voigt at the point requested; dumpingFunction, this is a commonly used function which is defined as the value of the relativistic voigt at its peak, divided by the value of the relativistic breit wigner at the peak that is part of the relativistic voigt. This is useful as it quantifies how much the voigt is smeared by the gaus",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11049:2267,simpl,simple,2267,https://root.cern,https://github.com/root-project/root/pull/11049,1,['simpl'],['simple']
Usability,"till exists in today's master"".; -->. ### Describe the bug; ROOT 6.22/06 crashes when reading a RooWorkspace from a file written with ROOT 5.34. ### Expected behavior; The RooWorkspace should be read from the file, as it did when read with ROOT 6.22/00.; ROOT 6.22/06 also successfully reads files created with ROOT 6.02/12 and later. ### To Reproduce; * Create any workspace file with ROOT 5.34, eg.; ```; % root -b; ROOT 5.34/32 (v5-34-32@v5-34-32, Jul 28 2015, 17:41:47 on linuxx8664gcc); root [0] RooWorkspace w(""w"");; root [1] w.factory(""Gaussian::sigx(x[-10,10],m[0,-10,10],s[3,0.1,10])"");; root [4] w.writeToFile(""simplest-53432.root"");; ```; * Since it isn't easy to get ROOT 5.34 running on CentOS7 these days, I have saved some workspace files here:; * `/afs/cern.ch/user/a/adye/public/root/bug-62206/simplest-53425.root` (created with ROOT 5.34/25); * `/afs/cern.ch/user/a/adye/public/root/bug-62206/simplest-53432.root` (created with ROOT 5.34/32); * `/afs/cern.ch/user/a/adye/public/root/bug-62206/simplest-60212.root` (created with ROOT 6.02/12); * Setup ROOT 6.22/06 and load the file:; ```; % . /cvmfs/sft.cern.ch/lcg/views/setupViews.sh LCG_99 x86_64-centos7-gcc8-dbg; % root -b; root [0] TFile::Open(""simplest-53432.root""); *** Break *** segmentation violation; ...; #10 std::__atomic_base<TVirtualStreamerInfo*>::load (__m=std::memory_order_seq_cst, this=0x1d8) at /cvmfs/sft.cern.ch/lcg/releases/gcc/8.3.0-cebb0/x86_64-centos7/include/c++/8.3.0/bits/atomic_base.h:713; #11 std::__atomic_base<TVirtualStreamerInfo*>::operator TVirtualStreamerInfo* (this=0x1d8) at /cvmfs/sft.cern.ch/lcg/releases/gcc/8.3.0-cebb0/x86_64-centos7/include/c++/8.3.0/bits/atomic_base.h:590; #12 0x00007f791c62f23e in std::atomic<TVirtualStreamerInfo*>::operator TVirtualStreamerInfo* (this=0x1d8) at /cvmfs/sft.cern.ch/lcg/releases/gcc/8.3.0-cebb0/x86_64-centos7/include/c++/8.3.0/atomic:367; #13 0x00007f791c625873 in TClass::GetStreamerInfo (this=0x0, version=0, isTransient=false) at /build/jenkins/w",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7276:1334,simpl,simplest-,1334,https://root.cern,https://github.com/root-project/root/issues/7276,1,['simpl'],['simplest-']
Usability,"timized out>, filename=<optimized out>, opt=<optimized out>, library_specified=<optimized out>, build_dir=<optimized out>, dirmode=<optimized out>) at /usr/local/src/conda/root_base-6.25.2/root-source/core/base/src/TSystem.cxx:3813; ===========================================================. Root > pure virtual method called; terminate called without an active exception; Aborted (core dumped); ```. </p>; </details>. ### Expected behavior. No crash? 😄. ### To Reproduce. This reproducer should work on any machine with docker once you replace `PATH_FOR_REPRODUCING` with a suitable folder on your system. (The build includes LLVM+Clang debug information so it requires ~20GB of space and benefits from fast storage.). 1. Start a docker container with a directory mounted from the host (to make switching between CentOS 7 and 8 easier):. ```bash; PATH_FOR_REPRODUCING=/scratch2/root-debug2; mkdir -p ""$PATH_FOR_REPRODUCING""; docker run --rm -it -v ""$PATH_FOR_REPRODUCING"":""$PATH_FOR_REPRODUCING"" -w ""$PATH_FOR_REPRODUCING"" centos:7 bash; ```. 2. Inside the CentOS 7 docker container install mamba and ROOT:. ```bash; curl -LO https://github.com/conda-forge/miniforge/releases/latest/download/Mambaforge-Linux-x86_64.sh; bash Mambaforge-Linux-x86_64.sh -b -p $PWD/mambaforge; source $PWD/mambaforge/bin/activate; mamba create --yes --prefix $PWD/env1 root gdb -c https://cburr.web.cern.ch/cburr/conda/root-fix-9301/ -c conda-forge; exit; ```. 3. Run the docker container again (changing `centos:7` to `centos:8` if you want to see it not crash) and compile a simple hello world program:. ```bash; source ""$PWD/mambaforge/bin/activate"" ""$PWD/env1""; echo -e '#include <iostream>\nsize_t test() { std::cout << ""Hello world"" << std::endl; return 0; }' > test.cpp; # These always work; EXTRA_CLING_ARGS='-O0' root.exe -l -b -q -x test.cpp; EXTRA_CLING_ARGS='-O0' root.exe -l -b -q -x test.cpp++; # This crashes under centos:7 but not centos:8; EXTRA_CLING_ARGS='-O1' root.exe -l -b -q -x test.cpp++; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9595:29765,simpl,simple,29765,https://root.cern,https://github.com/root-project/root/issues/9595,1,['simpl'],['simple']
Usability,"tionRange results in going to the point where exp(-t^2) reaches the minimum value stored by a double. A relativistic voigt is a convolution of a relativistic breit wigner and a gaussian, doing this naively is computationally infeasible however a fairly simple redefinition of variables allows rewriting the integral in a form that is reasonable to compute. This is shown in https://arxiv.org/pdf/1711.09304.pdf equation 9 which has been used here. I am unsure how referencing works with ROOT. [Note: the function used here is not actually identical to equation 9, as the paper linked uses a different normalization than ROOT does for the non relativistic voigt which is already implemented in TMath. I have renormalized this equation to be consistent with the non relativistic case already in ROOT). The two functions that have been defined are:. evaluate, simply gives the value of the relativisitic voigt at the point requested; dumpingFunction, this is a commonly used function which is defined as the value of the relativistic voigt at its peak, divided by the value of the relativistic breit wigner at the peak that is part of the relativistic voigt. This is useful as it quantifies how much the voigt is smeared by the gaussian, which as a physical effect in particle physics is usually easily translated to how much sensitivity to a signal you lose due to detector effects. A tutorial Voigt.C has been added in tutorials/math which produces plots comparing the non relativistic and relativistic case of voigt and the dumping function. The output plots from tutorials/math/Voigt.C which produces a plot using the new VoigtRelativistic class which is added in this pull request is here [Voigt](https://cernbox.cern.ch/index.php/s/3Vu40dk74wUDfWe) [DumpingFunction](https://cernbox.cern.ch/index.php/s/Xv3act8hvpaqeCM). As mentioned this relativistic voigt is implemented in mathmore, however there is already a non relativistic voigt in TMath ( called Voigt https://root.cern.ch/doc/master/namesp",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11049:2871,simpl,simply,2871,https://root.cern,https://github.com/root-project/root/pull/11049,1,['simpl'],['simply']
Usability,"tions; entry=0, usage=usage; entry=0x0) at ../sysdeps/unix/sysv/linux/wait4.c:30; #1 0x00007f2dab100c4b in __GI___waitpid (pid=<optimized out>, stat_loc=stat_loc; entry=0x7fff17431338, options=options; entry=0) at waitpid.c:38; #2 0x00007f2dab05051b in do_system (line=<optimized out>) at ../sysdeps/posix/system.c:172; #3 0x00007f2dabac274b in TUnixSystem::StackTrace() () from /home/user/Builds/root_build/lib/libCore.so; #4 0x00007f2dabac7624 in TUnixSystem::DispatchSignals(ESignals) () from /home/user/Builds/root_build/lib/libCore.so; #5 <signal handler called>; #6 0x00007f2da746e068 in llvm::PHINode::getIncomingValueForBlock(llvm::BasicBlock const*) const () from /home/user/Builds/root_build/lib/libCling.so; #7 0x00007f2da82a91e8 in llvm::TryToSimplifyUncondBranchFromEmptyBlock(llvm::BasicBlock*, llvm::DomTreeUpdater*) () from /home/user/Builds/root_build/lib/libCling.so; #8 0x00007f2da83255f9 in llvm::simplifyCFG(llvm::BasicBlock*, llvm::TargetTransformInfo const&, llvm::DomTreeUpdater*, llvm::SimplifyCFGOptions const&, llvm::ArrayRef<llvm::WeakVH>) () from /home/user/Builds/root_build/lib/libCling.so; #9 0x00007f2da7e3dac6 in iterativelySimplifyCFG(llvm::Function&, llvm::TargetTransformInfo const&, llvm::DomTreeUpdater*, llvm::SimplifyCFGOptions const&) () from /home/user/Builds/root_build/lib/libCling.so; #10 0x00007f2da7e62d63 in simplifyFunctionCFGImpl(llvm::Function&, llvm::TargetTransformInfo const&, llvm::DominatorTree*, llvm::SimplifyCFGOptions const&) () from /home/user/Builds/root_build/lib/libCling.so; #11 0x00007f2da87a6698 in llvm::FPPassManager::runOnFunction(llvm::Function&) () from /home/user/Builds/root_build/lib/libCling.so; #12 0x00007f2da87a699e in llvm::legacy::FunctionPassManagerImpl::run(llvm::Function&) () from /home/user/Builds/root_build/lib/libCling.so; #13 0x00007f2da625bdb7 in cling::Interpreter::executeTransaction(cling::Transaction&) () from /home/user/Builds/root_build/lib/libCling.so; #14 0x00007f2da62a2d7a in cling::IncrementalPar",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14037:2350,simpl,simplifyCFG,2350,https://root.cern,https://github.com/root-project/root/issues/14037,2,"['Simpl', 'simpl']","['SimplifyCFGOptions', 'simplifyCFG']"
Usability,"tlevel = 99, TDirectory *dir = gDirectory). (it's easy to learn that a TDirectory object can be a TFile, which is used very often). There is a [TTree:Write](https://root.cern/doc/master/classTTree.html#af6f2d9ae4048ad85fcae5d2afa05100f) method (actually there are two of them; when I read the code I found that the non-const just calls a const method, so it looks like an ugly patch; but anyway). In the documentation it's said that it writes to the current directory (which is correct). I found an explanation by pcanal, that [TObject::Write semantically is explicitly to store the current object in the current TFile](https://root-forum.cern.ch/t/writing-trees-to-different-files/5640/3?u=ynikitenko). Why I was looking for that: I remembered from the old good User's Guide that there is a 'global directory' and many other global variables in ROOT. I wanted to have two trees written to two different files in one session from Python. But the trees (as now is clear) were written to the most recently opened file, not to those with which they were initialized. In the link above, I found the way to solve this:. TFile.Write(). would save its objects. I find this very non-straightforward. I think that if a file is associated with TTree, it should be written to that file. On the line 891 of [TTree.cxx](https://root.cern/doc/master/TTree_8cxx_source.html) there is a fixme comment:. > // Insert ourself into the current directory.; // FIXME: This is very annoying behaviour, we should; // be able to choose to not do this like we; // can with a histogram. That comment was misleading for me, I thought that was not implemented and was looking for hackish ways not to do that. ### Optional: share how it could be improved; I see several ways how it could be improved:. 1) make Write use TTree's file if that was set in the constructor. This is natural and doesn't contradict inheritance from TObject, because a) not all ROOT objects belong to the global directory b) virtual functions can be reimp",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7308:1187,clear,clear,1187,https://root.cern,https://github.com/root-project/root/issues/7308,1,['clear'],['clear']
Usability,"to be clear, as I said above, the profile changed, however the total sum for cling initialisation is still at 70MB.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13000#issuecomment-1630736477:6,clear,clear,6,https://root.cern,https://github.com/root-project/root/issues/13000#issuecomment-1630736477,2,['clear'],['clear']
Usability,ts-build/164079/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_test_snapshot/); - [projectroot.roottest.root.dataframe.roottest_root_dataframe_test_nested_rvec_snapshot](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/164079/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_test_nested_rvec_snapshot/); - [projectroot.roottest.root.dataframe.roottest_root_dataframe_misc](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/164079/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_misc/); - [projectroot.roottest.root.dataframe.roottest_root_dataframe_regression_multipletriggerrun](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/164079/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_regression_multipletriggerrun/); - [projectroot.roottest.root.io.stdarray.roottest_root_io_stdarray_modelCheckValues](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/164079/testReport/projectroot.roottest.root.io/stdarray/roottest_root_io_stdarray_modelCheckValues/); - [projectroot.roottest.root.meta.dictSelection.roottest_root_meta_dictSelection_execAtlasTest2](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/164079/testReport/projectroot.roottest.root.meta/dictSelection/roottest_root_meta_dictSelection_execAtlasTest2/); - [projectroot.roottest.root.selector.simple.roottest_root_selector_simple_runtestLoadingSelector](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/164079/testReport/projectroot.roottest.root.selector/simple/roottest_root_selector_simple_runtestLoadingSelector/); - [projectroot.roottest.root.tree.fastcloning.roottest_root_tree_fastcloning_execCheckClusterRange](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/164079/testReport/projectroot.roottest.root.tree/fastcloning/roottest_root_tree_fastcloning_execCheckClusterRange/),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12018#issuecomment-1380875995:2127,simpl,simple,2127,https://root.cern,https://github.com/root-project/root/pull/12018#issuecomment-1380875995,4,['simpl'],['simple']
Usability,ts-build/build/core/G__Core.cxx:11318:52: error: no type named 'TVirtualRWMutex' in the global namespace; did you mean simply 'TVirtualRWMutex'? ; - [2023-05-11T12:18:54.761Z] /Users/sftnight/build/jenkins/workspace/root-pullrequests-build/build/core/G__Core.cxx:11324:52: error: no type named 'TVirtualRWMutex' in the global namespace; did you mean simply 'TVirtualRWMutex'? ; - [2023-05-11T12:18:54.761Z] /Users/sftnight/build/jenkins/workspace/root-pullrequests-build/build/core/G__Core.cxx:11330:53: error: no type named 'TVirtualRWMutex' in the global namespace; did you mean simply 'TVirtualRWMutex'? ; - [2023-05-11T12:18:54.761Z] /Users/sftnight/build/jenkins/workspace/root-pullrequests-build/build/core/G__Core.cxx:11337:107: error: no type named 'TVirtualRWMutex' in the global namespace; did you mean simply 'TVirtualRWMutex'? ; - [2023-05-11T12:18:54.761Z] /Users/sftnight/build/jenkins/workspace/root-pullrequests-build/build/core/G__Core.cxx:11355:52: error: no type named 'TReadLockGuard' in the global namespace; did you mean simply 'TReadLockGuard'? ; - [2023-05-11T12:18:54.761Z] /Users/sftnight/build/jenkins/workspace/root-pullrequests-build/build/core/G__Core.cxx:11361:52: error: no type named 'TReadLockGuard' in the global namespace; did you mean simply 'TReadLockGuard'? ; - [2023-05-11T12:18:54.761Z] /Users/sftnight/build/jenkins/workspace/root-pullrequests-build/build/core/G__Core.cxx:11367:53: error: no type named 'TReadLockGuard' in the global namespace; did you mean simply 'TReadLockGuard'? ; - [2023-05-11T12:18:54.761Z] /Users/sftnight/build/jenkins/workspace/root-pullrequests-build/build/core/G__Core.cxx:11374:107: error: no type named 'TReadLockGuard' in the global namespace; did you mean simply 'TReadLockGuard'? ; - [2023-05-11T12:18:54.761Z] /Users/sftnight/build/jenkins/workspace/root-pullrequests-build/build/core/G__Core.cxx:11392:52: error: no type named 'TWriteLockGuard' in the global namespace; did you mean simply 'TWriteLockGuard'? . And 11 more,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11027#issuecomment-1543894216:1465,simpl,simply,1465,https://root.cern,https://github.com/root-project/root/pull/11027#issuecomment-1543894216,10,['simpl'],['simply']
Usability,ttest.cling.template.roottest_cling_template_runtemplatefriend](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146495/testReport/projectroot.roottest.cling/template/roottest_cling_template_runtemplatefriend/); - [projectroot.roottest.python.cpp.roottest_python_cpp_advanced](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146495/testReport/projectroot.roottest.python/cpp/roottest_python_cpp_advanced/); - [projectroot.roottest.root.aclic.load.roottest_root_aclic_load_reload](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146495/testReport/projectroot.roottest.root.aclic/load/roottest_root_aclic_load_reload/); - [projectroot.roottest.root.aclic.misc.roottest_root_aclic_misc_assertROOT7027](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146495/testReport/projectroot.roottest.root.aclic/misc/roottest_root_aclic_misc_assertROOT7027/); - [projectroot.roottest.root.io.interface.roottest_root_io_interface_make](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146495/testReport/projectroot.roottest.root.io/interface/roottest_root_io_interface_make/); - [projectroot.roottest.root.meta.callfunc.roottest_root_meta_callfunc_assertUnload_auto](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146495/testReport/projectroot.roottest.root.meta/callfunc/roottest_root_meta_callfunc_assertUnload_auto/); - [projectroot.roottest.root.meta.cmsUnload.roottest_root_meta_cmsUnload_make](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146495/testReport/projectroot.roottest.root.meta/cmsUnload/roottest_root_meta_cmsUnload_make/); - [projectroot.roottest.root.selector.simple.roottest_root_selector_simple_runtestLoadingSelector](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146495/testReport/projectroot.roottest.root.selector/simple/roottest_root_selector_simple_runtestLoadingSelector/). And 1 more,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10294#issuecomment-1143554468:2450,simpl,simple,2450,https://root.cern,https://github.com/root-project/root/pull/10294#issuecomment-1143554468,4,['simpl'],['simple']
Usability,ttest.root.meta.roottest_root_meta_runnamespace_auto](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/118086/testReport/projectroot.roottest.root/meta/roottest_root_meta_runnamespace_auto/); - [projectroot.roottest.root.io.clones.roottest_root_io_clones_make](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/118086/testReport/projectroot.roottest.root.io/clones/roottest_root_io_clones_make/); - [projectroot.roottest.root.io.datamodelevolution.roottest_root_io_datamodelevolution_make](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/118086/testReport/projectroot.roottest.root.io/datamodelevolution/roottest_root_io_datamodelevolution_make/); - [projectroot.roottest.root.io.interface.roottest_root_io_interface_make](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/118086/testReport/projectroot.roottest.root.io/interface/roottest_root_io_interface_make/); - [projectroot.roottest.root.meta.ROOT-7462.roottest_root_meta_ROOT_7462_make](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/118086/testReport/projectroot.roottest.root.meta/ROOT-7462/roottest_root_meta_ROOT_7462_make/); - [projectroot.roottest.root.meta.tclass.roottest_root_meta_tclass_execDuplicate](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/118086/testReport/projectroot.roottest.root.meta/tclass/roottest_root_meta_tclass_execDuplicate/); - [projectroot.roottest.root.selector.simple.roottest_root_selector_simple_runtestLoadingSelector](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/118086/testReport/projectroot.roottest.root.selector/simple/roottest_root_selector_simple_runtestLoadingSelector/); - [projectroot.roottest.root.treeformula.stl.roottest_root_treeformula_stl_make](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/118086/testReport/projectroot.roottest.root.treeformula/stl/roottest_root_treeformula_stl_make/),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8204#issuecomment-844253147:2029,simpl,simple,2029,https://root.cern,https://github.com/root-project/root/pull/8204#issuecomment-844253147,4,['simpl'],['simple']
Usability,uests-build/174395/console).; ### Errors:; - [2023-05-11T12:18:54.188Z] FAILED: core/CMakeFiles/G__Core.dir/G__Core.cxx.o ; - [2023-05-11T12:18:54.761Z] /Users/sftnight/build/jenkins/workspace/root-pullrequests-build/build/core/G__Core.cxx:11318:52: error: no type named 'TVirtualRWMutex' in the global namespace; did you mean simply 'TVirtualRWMutex'? ; - [2023-05-11T12:18:54.761Z] /Users/sftnight/build/jenkins/workspace/root-pullrequests-build/build/core/G__Core.cxx:11324:52: error: no type named 'TVirtualRWMutex' in the global namespace; did you mean simply 'TVirtualRWMutex'? ; - [2023-05-11T12:18:54.761Z] /Users/sftnight/build/jenkins/workspace/root-pullrequests-build/build/core/G__Core.cxx:11330:53: error: no type named 'TVirtualRWMutex' in the global namespace; did you mean simply 'TVirtualRWMutex'? ; - [2023-05-11T12:18:54.761Z] /Users/sftnight/build/jenkins/workspace/root-pullrequests-build/build/core/G__Core.cxx:11337:107: error: no type named 'TVirtualRWMutex' in the global namespace; did you mean simply 'TVirtualRWMutex'? ; - [2023-05-11T12:18:54.761Z] /Users/sftnight/build/jenkins/workspace/root-pullrequests-build/build/core/G__Core.cxx:11355:52: error: no type named 'TReadLockGuard' in the global namespace; did you mean simply 'TReadLockGuard'? ; - [2023-05-11T12:18:54.761Z] /Users/sftnight/build/jenkins/workspace/root-pullrequests-build/build/core/G__Core.cxx:11361:52: error: no type named 'TReadLockGuard' in the global namespace; did you mean simply 'TReadLockGuard'? ; - [2023-05-11T12:18:54.761Z] /Users/sftnight/build/jenkins/workspace/root-pullrequests-build/build/core/G__Core.cxx:11367:53: error: no type named 'TReadLockGuard' in the global namespace; did you mean simply 'TReadLockGuard'? ; - [2023-05-11T12:18:54.761Z] /Users/sftnight/build/jenkins/workspace/root-pullrequests-build/build/core/G__Core.cxx:11374:107: error: no type named 'TReadLockGuard' in the global namespace; did you mean simply 'TReadLockGuard'? ; - [2023-05-11T12:18:54.761Z] /Users,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11027#issuecomment-1543894216:1235,simpl,simply,1235,https://root.cern,https://github.com/root-project/root/pull/11027#issuecomment-1543894216,2,['simpl'],['simply']
Usability,"uild/67064/console).; ### Warnings:; - /mnt/build/workspace/root-pullrequests-build/root/core/clingutils/test/TClingUtilsTests.cxx:39:47: warning: ignoring return value of ‘int symlink(const char*, const char*)’, declared with attribute warn_unused_result [-Wunused-result] ; - /mnt/build/workspace/root-pullrequests-build/root/core/clingutils/test/TClingUtilsTests.cxx:40:61: warning: ignoring return value of ‘int symlink(const char*, const char*)’, declared with attribute warn_unused_result [-Wunused-result] ; - /mnt/build/workspace/root-pullrequests-build/root/core/clingutils/test/TClingUtilsTests.cxx:43:64: warning: ignoring return value of ‘int symlink(const char*, const char*)’, declared with attribute warn_unused_result [-Wunused-result] ; - /mnt/build/workspace/root-pullrequests-build/root/core/clingutils/test/TClingUtilsTests.cxx:44:78: warning: ignoring return value of ‘int symlink(const char*, const char*)’, declared with attribute warn_unused_result [-Wunused-result] ; - /mnt/build/workspace/root-pullrequests-build/root/core/clingutils/test/TClingUtilsTests.cxx:46:64: warning: ignoring return value of ‘int symlink(const char*, const char*)’, declared with attribute warn_unused_result [-Wunused-result] ; - /mnt/build/workspace/root-pullrequests-build/root/core/clingutils/test/TClingUtilsTests.cxx:47:78: warning: ignoring return value of ‘int symlink(const char*, const char*)’, declared with attribute warn_unused_result [-Wunused-result] ; - /mnt/build/workspace/root-pullrequests-build/root/core/clingutils/test/TClingUtilsTests.cxx:49:85: warning: ignoring return value of ‘int symlink(const char*, const char*)’, declared with attribute warn_unused_result [-Wunused-result] . ### Failing tests:; - [projectroot.roottest.root.selector.simple.roottest_root_selector_simple_runtestLoadingSelector](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/67064/testReport/projectroot.roottest.root.selector/simple/roottest_root_selector_simple_runtestLoadingSelector/)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4338#issuecomment-527804099:1883,simpl,simple,1883,https://root.cern,https://github.com/root-project/root/pull/4338#issuecomment-527804099,4,['simpl'],['simple']
Usability,"ullrequests-build/root/net/rpdutils/src/rpdutils.cxx:4757:26: warning: ‘char* strncpy(char*, const char*, size_t)’ output may be truncated copying 10 bytes from a string of length 10 [-Wstringop-truncation] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:490:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing between 2147483648 and 2147483647 bytes at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 4294967295] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:761:21: warning: ‘%lu’ directive writing between 1 and 20 bytes into a region of size between 0 and 8191 [-Wformat-overflow=] ; - include/ROOT/RConcurrentHashColl.hxx:39:19: warning: variable ‘d’ set but not used [-Wunused-but-set-variable] ; - /mnt/build/workspace/root-pullrequests-build/root/proof/proofd/src/XrdProofdProtocol.cxx:527:45: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘class XrdSecEntity’; use assignment or value-initialization instead [-Wclass-memaccess] ; - include/ROOT/RConcurrentHashColl.hxx:39:19: warning: variable ‘d’ set but not used [-Wunused-but-set-variable] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TVirtualGL.cxx:31:85: warning: cast between incompatible function types from ‘TGLManager*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TSystem.cxx:1148:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing 1 byte at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 2147483649] [-Wrestrict] . And 387 more. ### Failing tests:; - [projectroot.roottest.cling.functionTemplate.roottest_cling_functionTemplate_testcint](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/42551/testReport/projectroot.roottest.cling/functionTemplate/roottest_cling_functionTemplate_testcint/)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2715#issuecomment-425565118:1589,clear,clearing,1589,https://root.cern,https://github.com/root-project/root/pull/2715#issuecomment-425565118,2,['clear'],['clearing']
Usability,"unavailable>, arrayMode=0) at TStreamerInfoReadBuffer.cxx:923:65 [opt]; frame #3: 0x0000000103ffc888 libRIO.so`TStreamerInfoActions::GenericReadAction(buf=0x000060e00010ef00, addr=0x0000602000056bd0, config=0x0000604000149910) at TStreamerInfoActions.cxx:195:45; frame #4: 0x0000000103caa5ec libRIO.so`TStreamerInfoActions::TConfiguredAction::operator()(this=0x00006030001693f0, buffer=0x000060e00010ef00, object=0x0000602000056bd0) const at TStreamerInfoActions.h:123:17; frame #5: 0x0000000103ca9ef8 libRIO.so`TBufferFile::ApplySequence(this=0x000060e00010ef00, sequence=0x000060600011ac20, obj=0x0000602000056bd0) at TBufferFile.cxx:3702:10; frame #6: 0x00000001064bc570 libTree.so`TBranchElement::ReadLeavesMemberBranchCount(this=0x0000619000566380, b=0x000060e00010ef00) at TBranchElement.cxx:4603:6; frame #7: 0x0000000106455ce4 libTree.so`TBranch::GetEntry(this=0x0000619000566380, entry=0, getall=0) at TBranch.cxx:1753:4; frame #8: 0x00000001064a1764 libTree.so`TBranchElement::GetEntry(this=0x0000619000566380, entry=0, getall=0) at TBranchElement.cxx:2783:27; frame #9: 0x000000010739915c libTreePlayer.so`ROOT::Detail::TBranchProxy::Read(this=0x00006110000c9580) at TBranchProxy.h:163:42; frame #10: 0x0000000107649ba8 libTreePlayer.so`(anonymous namespace)::TObjectArrayReader::At(this=0x0000603000169900, proxy=0x00006110000c9580, idx=1) at TTreeReaderArray.cxx:176:22; frame #11: 0x000000010000c2e4 repro.out`ROOT::Internal::TTreeReaderArrayBase::UntypedAt(this=0x000000016fdfe740, idx=1) const at TTreeReaderArray.h:41:62; frame #12: 0x000000010000c200 repro.out`TTreeReaderArray<double>::At(this=0x000000016fdfe740, idx=1) at TTreeReaderArray.h:205:54; frame #13: 0x00000001000065e0 repro.out`TTreeReaderArray<double>::operator[](this=0x000000016fdfe740, idx=1) at TTreeReaderArray.h:207:44; frame #14: 0x0000000100007b48 repro.out`simpleTest() at repro.cpp:123:26; frame #15: 0x0000000100007e10 repro.out`main at repro.cpp:128:5; frame #16: 0x000000018c718274 dyld`start + 2840; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16501:6895,simpl,simpleTest,6895,https://root.cern,https://github.com/root-project/root/pull/16501,1,['simpl'],['simpleTest']
Usability,"und containers (or C++ objects in general), the right question to ask is whether they implement the iterator protocol. E.g. an `std::list` is a sequence and can be iterated over, but not through indexing, as it's not random-access. For `std::map` the same issues exist as for Python, but of course with no special-case exception made in `PySequence_Check` and `std::map<int, T>` is a particular hot mess. Then there's the fact that `operator[](T)` can be redefined in both C++ and Python to mean whatever ... Note that an iterator protocol check would be for `hasattr(obj, '__iter__')` and not `iter(obj)`, as the latter would succeed b/c of that index-based `iterator` mentioned. I'm not really convinced by the `is_sequence()` method proposed, as it would currently fail for this:; ```; import cppyy. cppyy.cppdef(""""""\; struct MyStruct {};; MyStruct* fff = nullptr;; """"""). def is_sequence(obj):; try:; obj[0]; return True; except TypeError as e:; print(e); return False. print(is_sequence(cppyy.gbl.fff)); ```; which prints `True` as all data members are presumed both `*` and `[]`. This should perhaps also be extended to function return types, but returning arrays that way seems to be much less common in practice. Or at least, I've never had that request. Regardless, the problem remains that C++ is simply ambiguous here and I even think it would be fair to assume that `obj[0]` is only every done if `obj` is in fact an array. (Currently not the case, but why not.). Maybe `__getitem__` can be refined to only appear after lookup through `__getattr__`, i.e. to make it fully instance-specific. The result might be confusing as it would still have to be permissive to cover all cases. However, if the check for `__getitem__` is then performed on the class, instead of on the object, it would give you the old behavior back. (I know that that's not how `PySequence_Check` is supposed to work here, but as already explained, it's not the thing that gives the correct answer in all cases anyhow.)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/15161#issuecomment-2057616934:1473,simpl,simply,1473,https://root.cern,https://github.com/root-project/root/issues/15161#issuecomment-2057616934,2,['simpl'],['simply']
Usability,undo fix to remove extra ///,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5433:0,undo,undo,0,https://root.cern,https://github.com/root-project/root/pull/5433,2,['undo'],['undo']
Usability,"ur issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->; When plotting a RooFit function the `RooCurve` will try to use the `plotSamplingHint` method to get a list of optimal point locations. When using a `RooHistPdf` or `RooHistFunc` the list contains points a little (~1e-8*range) before and after each bin boundary. ; If the bins are aligned to the range (as they often are), one point per side falls outside the range.; However, there is no guarantee that the function is safe to execute there, so this may cause a NaN to be inserted in the plot.; Furthermore, when this happens the `RooCurve` seems to stop collecting points and just uses the current list, which in case of an histogram only contains the bin boundaries, meaning that the curve is not smooth between bins. ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->; The function is evaluated only in range, no NaN in frame, smooth function between bin boundaries. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->; ```C++; void testRooHistPdfBinning() {; RooRealVar x(""x"", """", 0., 1);; ; RooGenericPdf sqrtPdf(""sqrtPdf"", ""sqrt(x)"", x);; ; TH1F h(""h"", """", 2, 0., 1);; h.Fill(0.2, 2);; h.Fill(0.8, 1);; RooDataHist dh(""dh"", """", x, RooFit::Import(h));; RooHistPdf hpdf(""hpdf"", """", x, dh);; ; RooRealVar frac(""frac"", """", 0.5, 0, 1);; RooAddPdf p(""p"", """", RooArgSet(sqrtPdf, hpdf), frac);; ; auto frame = x.frame();; p.plotOn(frame);; frame->Draw();; }; ```. ### Setup; <!--; 1. ROOT version; 2. Operating system; 3. How you obtained ROOT, such as `dnf install` / binary download / you ",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11482:1209,clear,clear,1209,https://root.cern,https://github.com/root-project/root/issues/11482,1,['clear'],['clear']
Usability,"ur issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug; ROOT 6.22/06 crashes when reading a RooWorkspace from a file written with ROOT 5.34. ### Expected behavior; The RooWorkspace should be read from the file, as it did when read with ROOT 6.22/00.; ROOT 6.22/06 also successfully reads files created with ROOT 6.02/12 and later. ### To Reproduce; * Create any workspace file with ROOT 5.34, eg.; ```; % root -b; ROOT 5.34/32 (v5-34-32@v5-34-32, Jul 28 2015, 17:41:47 on linuxx8664gcc); root [0] RooWorkspace w(""w"");; root [1] w.factory(""Gaussian::sigx(x[-10,10],m[0,-10,10],s[3,0.1,10])"");; root [4] w.writeToFile(""simplest-53432.root"");; ```; * Since it isn't easy to get ROOT 5.34 running on CentOS7 these days, I have saved some workspace files here:; * `/afs/cern.ch/user/a/adye/public/root/bug-62206/simplest-53425.root` (created with ROOT 5.34/25); * `/afs/cern.ch/user/a/adye/public/root/bug-62206/simplest-53432.root` (created with ROOT 5.34/32); * `/afs/cern.ch/user/a/adye/public/root/bug-62206/simplest-60212.root` (created with ROOT 6.02/12); * Setup ROOT 6.22/06 and load the file:; ```; % . /cvmfs/sft.cern.ch/lcg/views/setupViews.sh LCG_99 x86_64-centos7-gcc8-dbg; % root -b; root [0] TFile::Open(""simplest-53432.root""); *** Break *** segmentation violation; ...; #10 std::__atomic_base<TVirtualStreamerInfo*>::load (__m=std::memory_order_seq_cst, this=0x1d8) at /cvmfs/sft.cern.ch/lcg/releases/gcc/8.3.0-cebb0/x86_64-centos7/include/c++/8.3.0/bits/atomic_base.h:713; #11 std::__atomic_base<TVirtualStreamerInfo*>::operator TVirtualStreamerInfo* (this=0x1d8) at /cvmfs/sft.cern.ch/lcg/releases/gcc/8.3.0-cebb0/x86_64-centos7/include/c++/8.3.0/bits/atomic_base.h:590; #12 0x00007f791c62f23e in std::atomic<TVirtualStreamerInfo*>::operator TVirtualStreamerInfo* (this=0x1d8) at /cvmfs/sft.cern.ch/lcg/releases/gcc/8.3.0-cebb0/x86_64-centos7/include/c++/8.3.0/atomic:367; #13 0x0000",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7276:1234,simpl,simplest-,1234,https://root.cern,https://github.com/root-project/root/issues/7276,1,['simpl'],['simplest-']
Usability,"ur issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug; Running our test on SWAN, I found that TFIile can not read anymore a remote ROOT file from github.; The code; `; TFile::Open(""https://raw.githubusercontent.com/iml-wg/tmvatutorials/master/inputdata.root"");; `. produces; `; Error in <DavixOpen>: can not open file ""https://raw.githubusercontent.com/iml-wg/tmvatutorials/master/inputdata.root"" with davix: Result HTTP 404 : File not found after 3 attempts (18) ; `; The file exists and the code works with LCG_99. I did an additional test with a ROOT different ROOT file inside the domain cern.ch and it works for LCG_100; `; TFile::Open(""https://root.cern.ch/files/summer_student_tutorial_tracks.root"");; `; <!--; A clear and concise description of what the wrong behavior is.; -->. ### Expected behavior; TFIle should be able to read the file from github.; <!--; A clear and concise description of what you expected to happen.; -->. ### To Reproduce; on lxplus; `; source /cvmfs/sft.cern.ch/lcg/views/LCG_100/x86_64-centos7-gcc8-opt/setup.sh. [ozapatam@lxplus7103 ~]$ root -l -b. root [0] auto f=TFile::Open(""https://raw.githubusercontent.com/iml-wg/tmvatutorials/master/inputdata.root"");. Error in <DavixOpen>: can not open file ""https://raw.githubusercontent.com/iml-wg/tmvatutorials/master/inputdata.root"" with davix: Result HTTP 404 : File not found after 3 attempts (18); `. on LCG_99 it works; `; source /cvmfs/sft.cern.ch/lcg/views/LCG_99/x86_64-centos7-gcc8-opt/setup.sh . [ozapatam@lxplus7120 ~]$ root -l. root [0] auto f=TFile::Open(""https://raw.githubusercontent.com/iml-wg/tmvatutorials/master/inputdata.root"");. root [1] f->ls();; TDavixFile** https://raw.githubusercontent.com/iml-wg/tmvatutorials/master/inputdata.root; TDavixFile* https://raw.githubusercontent.com/iml-wg/tmvatutorials/master/inputdata.root; KEY: TTree TreeS;1 TreeS; KEY: TTree TreeB;1 TreeB; KEY: TTree Sig",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8155:1198,clear,clear,1198,https://root.cern,https://github.com/root-project/root/issues/8155,1,['clear'],['clear']
Usability,"urn main; ```; Then calling `df = Dask.RDataFrame(chain, daskclient=connection, npartitions=nparts)`. 1. Is it intentional not to use a spec instead?; 2. From the breakpoint I printed the contents of file and tree names and they looked all file:; ```py; (Pdb) p FILENAMES; ['distrdf_check_friend_trees_alignment_dask_file_1.root', 'distrdf_check_friend_trees_alignment_dask_file_2.root', 'distrdf_check_friend_trees_alignment_dask_file_3.root', 'distrdf_check_friend_trees_alignment_dask_file_4.root', 'distrdf_check_friend_trees_alignment_dask_file_5.root', 'distrdf_check_friend_trees_alignment_dask_file_6.root']; (Pdb) p TREENAMES; ['distrdf_check_friend_trees_alignment_dask_tree_1.root', 'distrdf_check_friend_trees_alignment_dask_tree_2.root', 'distrdf_check_friend_trees_alignment_dask_tree_3.root', 'distrdf_check_friend_trees_alignment_dask_tree_4.root', 'distrdf_check_friend_trees_alignment_dask_tree_5.root', 'distrdf_check_friend_trees_alignment_dask_tree_6.root']; ```; 3. Locally this test fails for me on `s1val = s1.GetValue()`. From pdb I get this stack strace:; ```py; ... > rdf_node = rdf_operation(*in_task_op.args, **in_task_op.kwargs); E cppyy.ll.SegmentationViolation: Template method resolution failed:; E ROOT::RDF::RResultPtr<double> ROOT::RDF::RInterface<ROOT::Detail::RDF::RLoopManager,void>::Sum(basic_string_view<char,char_traits<char> > columnName = """", double& initValue = RDFDetail::SumReturnType_t<RInferredType>{}) =>; E SegmentationViolation: segfault in C++; program state was reset; E ROOT::RDF::RResultPtr<double> ROOT::RDF::RInterface<ROOT::Detail::RDF::RLoopManager,void>::Sum(basic_string_view<char,char_traits<char> > columnName = """", double& initValue = RDFDetail::SumReturnType_t<RInferredType>{}) =>; E SegmentationViolation: segfault in C++; program state was reset. ../../../../rb/lib/DistRDF/ComputationGraphGenerator.py:134: SegmentationViolation; ```; This is also what jenkins complains about. I don't clearly see what is wrong. Investigating ...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11526#issuecomment-1340908063:2957,clear,clearly,2957,https://root.cern,https://github.com/root-project/root/pull/11526#issuecomment-1340908063,2,['clear'],['clearly']
Usability,"using namespace RooFit;. void rf801_mcstudy(); {; RooRealVar x(""x"", ""x"", 0, 10);; x.setBins(40);. RooRealVar mean(""mean"", """", 5, 0, 10);; RooRealVar sigma(""sg"", """", 0.5);; RooGaussian pdf(""pdf"", """", x, mean, sigma);. RooMCStudy *mcstudy = new RooMCStudy(pdf, x, Binned(kTRUE), Silence(true), Extended(true), FitOptions(Save(kTRUE), PrintEvalErrors(0)));; //RooMCStudy *mcstudy = new RooMCStudy(pdf, x, Binned(kFALSE), Silence(true), Extended(true), FitOptions(Save(kTRUE), PrintEvalErrors(0)); mcstudy->generateAndFit(1000, 1000);; }; ```; ![image](https://user-images.githubusercontent.com/14037062/147851308-1eb033f3-94ea-4e53-a88b-f7e017a278aa.png). which is not ideal, here a progress bar would be better, it would prevent the screen from been filled. However, having a 10 fits step seems reasonable. . On the other hand, when running the fit with unbinned data (uncomment the line in the code above), I see:. ![image](https://user-images.githubusercontent.com/14037062/147851372-3197ea2f-d44c-4cd7-ae03-e92389ddb6a3.png). which is a terrible design. It completely fills the monitor with 1000 lines of useless information. The only way that I found to silence this is doing something like:. ```python; msg = ROOT.RooMsgService.instance(); str_z=msg.getStream(0); str_z.minLevel = ROOT.RooFit.WARNING; ```; which also turns off the `PROGRESS` message telling me how many toys have been run. So either I make it hide everything or I get 1000 messages. ### Optional: share how it could be improved; If I would have time I would:. 1. Make the `now generating` message a `DEBUG` one.; 2. Use a progress bar for the `run` message. ### To Reproduce; You can just run the code I put above. ### Setup; 1. ROOT version: 6.24/06; 2. Operating system: Linux manjaro 5.15.7-1-MANJARO; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself: Manjaro package manager, probably related to pacman. ### Additional context; <!--; Add any other context about the problem here.; -->",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9489:1765,progress bar,progress bar,1765,https://root.cern,https://github.com/root-project/root/issues/9489,1,['progress bar'],['progress bar']
Usability,"usr/lib/llvm-13/lib/libLLVM-13.so.1 succeeded; /usr/lib/llvm-13/lib/libLLVM-13.so.1; <<snip>>; libedit.so.2 needed by /usr/lib/llvm-13/lib/libLLVM-13.so.1; <<snip>>; libbsd.so.0 needed by /lib/x86_64-linux-gnu/libedit.so.2; attempt to open /usr/lib/llvm-13/lib/libbsd.so.0 failed; <<snip>>; found libbsd.so.0 at /lib/x86_64-linux-gnu/libbsd.so.0; /usr/bin/ld: core/dictgen/CMakeFiles/Dictgen.dir/src/rootcling_impl.cxx.o: undefined reference to symbol 'strlcat@@LIBBSD_0.0'; /usr/bin/ld: /lib/x86_64-linux-gnu/libbsd.so.0: error adding symbols: DSO missing from command line; ```. So the issue is that the system `libLLVM-13.so.1` links against `libbsd.so.0`, which defines `strlcat` as a global symbol. Since `rootcling_impl` also defines this symbol as global, there is an unresolved conflict. ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->. Tbh I'm not sure how this should be fixed. Clearly by default there is no `strlcat` et al on linux by default, *but* there is libbsd and this should be checked somwhere. Currently this check is in [core/foundation/inc/ROOT/RConfig.hxx:248-276](https://github.com/root-project/root/blob/fd244e56523bf5c5957bfae5117b36ca73c27813/core/foundation/inc/ROOT/RConfig.hxx#L248-L276) and only takes into account the operating system. Check with [`__has_include`](https://en.cppreference.com/w/cpp/preprocessor/include) if `bsd/string.h` exists on other unixes *might* be a way to do it, but I would have no clue how to do the proper linking. Also it doesn't fix the issue if libbsd is introduced in a downstream project using ROOT. Alternatively, I think the ""better"" solution is to add a `link_libbsd` build option (disabled by default ofc). If enabled, it adds `-lbsd` to the public link flags of `Clib` and sets some compile flag like `HAS_STRLCPY_VIA_LIBBSD` (in addition to `HAS_STRLCPY`) that triggers the inclusion of bsd/string.h in clib/inc/strlcpy.h in the `#else` case of `#ifndef HAS_STRLCPY`. ### To Re",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12152:10049,Clear,Clearly,10049,https://root.cern,https://github.com/root-project/root/issues/12152,1,['Clear'],['Clearly']
Usability,"uto Filename = ""output.o"";; + std::error_code EC;; + //llvm::raw_fd_ostream dest(Filename, EC, sys::fs::F_None);; + ; + static unsigned counter = 0;; + std::string FileStem;; + {; + llvm::raw_string_ostream FileStemStream(FileStem);; + FileStemStream << M.getModuleIdentifier() << ""."" << ++counter;; + }; + llvm::raw_fd_ostream ModuleStream(FileStem + "".ll"", EC, llvm::sys::fs::F_None);; + ModuleStream << M;; + llvm::raw_fd_ostream ObjectStream(FileStem + "".o"", EC, llvm::sys::fs::F_None);; + ObjectStream.write(R->getBufferStart(), R->getBufferSize());; +; +/* if (R) {; + M.dump();; + //printf(""MemBuf '%.*s'\n"", (int) R->getBufferSize(), R->getBufferStart());; + printf(""MemBuf '%s'\n"", R->getBuffer().data());; + // dump M and object file *R here.; + }*/; + return R;; + }; + };; +; class IncrementalJIT {; public:; using SymbolMapT = llvm::StringMap<llvm::JITTargetAddress>;; @@ -131,9 +162,24 @@ private:; SymbolMapT& m_SymbolMap;; };; ; +/* class MySimpleCompiler : public llvm::orc::SimpleCompiler {; + public:; + MySimpleCompiler(llvm::TargetMachine &TM, llvm::ObjectCache *ObjCache = nullptr); + : SimpleCompiler(TM, ObjCache) {}; + CompileResult operator()(llvm::Module &M) {; + auto R = SimpleCompiler::operator()(M);; + if (R) {; + M.dump();; + printf(""MemBuf '%.*s'"", (int) R->getBufferSize(), R->getBufferStart());; + // dump M and object file *R here.; + }; + return R;; + }; + };*/; +; typedef RemovableObjectLinkingLayer ObjectLayerT;; typedef llvm::orc::LegacyIRCompileLayer<ObjectLayerT,; - llvm::orc::SimpleCompiler> CompileLayerT;; + MySimpleCompiler> CompileLayerT;; typedef llvm::orc::LazyEmittingLayer<CompileLayerT> LazyEmitLayerT;; ; std::unique_ptr<llvm::TargetMachine> m_TM;; diff --git a/interpreter/cling/lib/Interpreter/Interpreter.cpp b/interpreter/cling/lib/Interpreter/Interpreter.cpp; index 544d946..d10eaea 100644; --- a/interpreter/cling/lib/Interpreter/Interpreter.cpp; +++ b/interpreter/cling/lib/Interpreter/Interpreter.cpp; @@ -251,10 +251,9 @@ namespace cl",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9380#issuecomment-985923087:3071,Simpl,SimpleCompiler,3071,https://root.cern,https://github.com/root-project/root/pull/9380#issuecomment-985923087,3,['Simpl'],['SimpleCompiler']
Usability,"utorial time... You basically have 2 ways in my mind to solve this nicely.; 1. Switch to using the `VDT::VDT` library during the build.; - For this you need to introduce a global imported library for `builtin_vdt`. Something like:. ```diff; diff --git a/cmake/modules/SearchInstalledSoftware.cmake b/cmake/modules/SearchInstalledSoftware.cmake; index 7947fddfc0..7ad5fd91af 100644; --- a/cmake/modules/SearchInstalledSoftware.cmake; +++ b/cmake/modules/SearchInstalledSoftware.cmake; @@ -1678,6 +1678,12 @@ if(vdt OR builtin_vdt); DESTINATION ${CMAKE_INSTALL_INCLUDEDIR} COMPONENT extra-headers); set(vdt ON CACHE BOOL ""Enabled because builtin_vdt enabled (${vdt_description})"" FORCE); set_property(GLOBAL APPEND PROPERTY ROOT_BUILTIN_TARGETS VDT); + add_library(VDT::VDT UNKNOWN IMPORTED GLOBAL); + set_target_properties(VDT::VDT; + PROPERTIES; + IMPORTED_LOCATION ""${VDT_LIBRARIES}""; + INTERFACE_INCLUDE_DIRECTORIES ""${VDT_INCLUDE_DIRS}""; + ); endif(); endif(); ```. - At this point you could simplify the build configuration to:. ```diff; diff --git a/math/vecops/CMakeLists.txt b/math/vecops/CMakeLists.txt; index 09fde3eb40..e15b5ea186 100644; --- a/math/vecops/CMakeLists.txt; +++ b/math/vecops/CMakeLists.txt; @@ -8,10 +8,6 @@; # CMakeLists.txt file for building ROOT math/vecops package; ############################################################################; ; -if(builtin_vdt); - link_directories(${CMAKE_LIBRARY_OUTPUT_DIRECTORY}); -endif(); -; ROOT_STANDARD_LIBRARY_PACKAGE(ROOTVecOps; HEADERS; ROOT/RVec.hxx; @@ -24,13 +20,7 @@ ROOT_STANDARD_LIBRARY_PACKAGE(ROOTVecOps; ); ; if(builtin_vdt OR vdt); - target_include_directories(ROOTVecOps PRIVATE ${VDT_INCLUDE_DIRS} INTERFACE $<BUILD_INTERFACE:${VDT_INCLUDE_DIRS}>); -endif(); -; -if(builtin_vdt); - target_link_libraries(ROOTVecOps PRIVATE ${VDT_LIBRARIES}); -elseif(vdt); - target_link_libraries(ROOTVecOps PUBLIC ${VDT_LIBRARIES}); + target_link_libraries(ROOTVecOps PUBLIC VDT::VDT); endif(); ; if(MSVC); ```. - Finally, you w",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11797#issuecomment-1339057027:1008,simpl,simplify,1008,https://root.cern,https://github.com/root-project/root/issues/11797#issuecomment-1339057027,2,['simpl'],['simplify']
Usability,"valid next size (fast); ninja: build stopped: subcommand failed.; ```. ### Notes:. - I've pasted the instructions used to build the code in the reproducer section. Compiler is gcc-13/g++-13 from OpenSUSE repos and target architecture is znver3 (5800X3D); - I had to make a small change to `root_src/interpreter/cling/lib/Interpreter/CIFactory.cpp`. The option `argvCompile.push_back(""-O0 -fno-omit-frame-pointer"");` at line 1349 needed to be split into two lines. This bug appears to be unrelated. Unfortunately I'm writing this in a rush so may have missed something that you need/got the formatting ugly. Don't be afraid to ask if you need any clarification.; Thanks!. ### Reproducer. ```; mkdir root_build;; git clone --branch latest-stable --depth=1 https://github.com/root-project/root.git root_src; cd root_build; cmake --build . --target clean && rm -rf ./* && cmake -G Ninja -DCMAKE_BUILD_TYPE=release -DCMAKE_C_COMPILER=gcc-13 -DCMAKE_CXX_COMPILER=g++-13 -DCMAKE_Fortran_COMPILER=gfortran-13 -DCMAKE_ASM_FLAGS=""-flto -march=native"" -DCMAKE_C_FLAGS=""-flto -march=native"" -DCMAKE_CXX_FLAGS=""-flto -march=native"" -DCMAKE_ASM_FLAGS_RELEASE=""-O3 -DNDEBUG"" -DCMAKE_C_FLAGS_RELEASE=""-O3 -DNDEBUG"" -DCMAKE_CXX_FLAGS_RELEASE=""-O3 -DNDEBUG"" -Dccache=ON -Dgnuinstall=ON -Dimt=OFF -Dminuit2-omp=ON -Dminuit2-mpi=ON -Dminuit2=ON -Dmpi=ON -Dpyroot=OFF -Dxrootd=OFF -Dveccore=ON -Dvc=ON -Dcudnn=OFF -Dtmva-pymva=OFF -DLLVM_TARGETS_TO_BUILD=""X86;NVPTX;AMDGPU"" -Ddoxygen=ON ../root_src && clear && cmake --build . -- -j 16; ```. [CMakeCache.txt](https://github.com/root-project/root/files/13313400/CMakeCache.txt). ### ROOT version. V6.28/06. ### Installation method. Built from source. ### Operating system. `Linux version 6.5.9-1-default (geeko@buildhost) (gcc (SUSE Linux) 13.2.1 20230912 [revision b96e66fd4ef3e36983969fb8cdd1956f551a074b], GNU ld (GNU Binutils; openSUSE Tumbleweed) 2.40.0.20230412-5) #1 SMP PREEMPT_DYNAMIC Wed Oct 25 10:31:37 UTC 2023 (29edc7c)`. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14037:9514,clear,clear,9514,https://root.cern,https://github.com/root-project/root/issues/14037,1,['clear'],['clear']
Usability,"vassilev is right about the global statements being a non-critical change and wouldn't be accepted upstream. And I am sure when he said that, he didn't mean that Vincenzo's efforts were wasteful. Finally, AFAIU Vincenzo thinks that global statements are unnecessary because the code acts in the same way whether you keep them or not. I have a few counterpoints to this:. 1. It gives programmers an idea about where the variable was initialized before use. Modifying the code provided by Vincenzo:. ```python; cache = {}. def foo():; .....; .... Many lines of code ...; .....; cache[""foo""] = 1. .....; .... Many lines of code ...; ..... def bar():; .....; .... Many lines of code ...; .....; cache[""bar""] = 2; ```. I hope you can see it becomes difficult to understand where did cache come from. A `global cache` statement at the top of the function or before its use clarifies the intent. 2. Removing the `global` statement doesn't affect the scope of the variable. It is purely meant to [guide Python for the code block it is used in.](https://docs.python.org/3/reference/simple_stmts.html#the-global-statement). 3. ROOT already uses `global` keyword in [JupyROOT](https://github.com/root-project/root/blame/a90d76b7798dc4332425d29794089fceaebccb60/bindings/jupyroot/python/JupyROOT/helpers/utils.py#L126 ). So unless ""we should never use `global`"" is a new convention being followed in ROOT, I believe it doesn't seem to track. 4. As seen in this [SO answer](https://stackoverflow.com/a/4693392), Python used to differentiate between having a global statement or not. And even though the answer is more than ten years old, I experienced this firsthand when I started using Python (about four years back). So even though Python changed how it treats the variable binding in the newer versions, I would say it doesn't harm us by keeping them and might benefit us in the future. If these counterpoints do not convince you, I will remove the global statements in the PR. :). Sorry for the long comment.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11096#issuecomment-1603484912:1540,guid,guide,1540,https://root.cern,https://github.com/root-project/root/pull/11096#issuecomment-1603484912,2,['guid'],['guide']
Usability,"w users can register a drawing of a result histogram in the same way in single- and multi-thread analysis, like this:. ```c++; // Draw partial result on canvas every 500 events; TCanvas c(""c"", ""Running event loop..."");; h.OnPartialResult(100, [&c](TH1D &h_) {; c.cd();; h_.Draw();; c.Update();; });; ```; @Axel-Naumann users can open a `TBrowser` and check result updates while the event loop is running quite easily:; ```c++; // create ""TDFResults"" directory in TBrowser; TBrowser b(""b"", ""event loop peeper"");; TMemFile m(""TDFResults"", ""RECREATE"");. // add partial result to the ""TDFResults""; m.Browse(&b); // it would be cool if we could change the current directory in the TBrowser to `TDFResults` here; h.OnPartialResult(decltype(h)::kOnce, [&m](TH1D &h_) { m.Add(&h_); });. // call ProcessEvents every once in a while during the event loop to allow users to navigate the TBrowser; h.OnPartialResult(50, [](TH1D &hist) { gSystem->ProcessEvents(); });; ```; @peremato here is how one would implement a thread-safe progress bar for a TDF multi-thread analysis; ```c++; // Update progress bar every 100 events; std::string progress;; std::mutex bar_mutex;; c.OnPartialResultSlot(nEvents / 100, [&progress, &bar_mutex](unsigned int, ULong64_t &c_) {; std::lock_guard<std::mutex> lg(bar_mutex);; progress.push_back('#');; std::cout << ""\r["" << std::left << std::setw(100) << progress << ']' << std::flush;; });; ```. Here are the corresponding self-contained, fully working code examples:; [draw_partial_result.txt](https://github.com/root-project/root/files/1327464/draw_partial_result.txt); [inspect_analysis.txt](https://github.com/root-project/root/files/1327466/inspect_analysis.txt); [progress_bar.txt](https://github.com/root-project/root/files/1327469/progress_bar.txt); (for some reason github does not allow files with `.cpp` extension :man_shrugging: ). For common-enough callbacks one can always imagine to provide helper functions of course.; I like this feature a lot. What do you think?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1037#issuecomment-331722007:1027,progress bar,progress bar,1027,https://root.cern,https://github.com/root-project/root/pull/1037#issuecomment-331722007,4,['progress bar'],['progress bar']
Usability,"webgui: simply ignore Show() in batch, update most of tutorials",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2655:8,simpl,simply,8,https://root.cern,https://github.com/root-project/root/pull/2655,2,['simpl'],['simply']
Usability,"when i want to run root file like root (filename).root this came Warning in <TClass::Init>: no dictionary for class TRootLHEFEvent is available Warning in <TClass::Init>: no dictionary for class TRootWeight is available Warning in <TClass::Init>: no dictionary for class TRootLHEFParticle is available Warning in <TClass::Init>: no dictionary for class TSortableObject is available (TFile *) 0x5614f99a3290 how can i resolve this. - [ ] Checked for duplicates; <!--; Please search in; * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->. ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->. ### Setup; <!--; 1. ROOT version; 2. Operating system; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->. ### Additional context; <!--; Add any other context about the problem here.; -->",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9123:822,clear,clear,822,https://root.cern,https://github.com/root-project/root/issues/9123,2,['clear'],['clear']
Usability,"y sources I see. ```; // Since CINT ignores the std namespace, we need to do so in this file.; namespace std {} using namespace std;; ```. (this is from 6.14.08. 6.22.02 has a slightly different comment of `The generated code does not explicitly qualifies STL entities` (sic), but still does the `using...`). This is placed very early on, even before the include of the header files passed as arguments. Unfortunately, this causes problems, specifically when one of those header files pulls in Kokkos core headers, and there's a name clash with `rank` which is a free function in the kokkos namespace, and std::rank. ```; /opt/kokkos/cuda/3.2-shlib/include/Kokkos_View.hpp:1896:30: error: return type specified for deduction guide; KOKKOS_INLINE_FUNCTION constexpr unsigned rank(const View<D, P...>& V) {; ^; /opt/kokkos/cuda/3.2-shlib/include/Kokkos_View.hpp:1895:42: error: decl-specifier in declaration of deduction guide; template <typename D, class... P>; ^ ; /opt/kokkos/cuda/3.2-shlib/include/Kokkos_View.hpp:1895:32: error: decl-specifier in declaration of deduction guide; template <typename D, class... P>; ^~ ; /opt/kokkos/cuda/3.2-shlib/include/Kokkos_View.hpp:1896:30: error: 'signed' or 'unsigned' invalid for '__dguide_rank'; KOKKOS_INLINE_FUNCTION constexpr unsigned rank(const View<D, P...>& V) {; ^; /opt/kokkos/cuda/3.2-shlib/include/Kokkos_View.hpp:1896:1: error: deduction guide for 'std::rank< <template-parameter-1-1> >' must have trailing return type; KOKKOS_INLINE_FUNCTION constexpr unsigned rank(const View<D, P...>& V) {; ^~~~; /bld4/opt/gcc/8.4.0/include/c++/8.4.0/type_traits:1251:8: note: 'template<class> struct std::rank' declared here; struct rank; ^~~~; ```. Is there any way to make the `using namespace` appear AFTER the include of the user header files instead of before?. If I manually edit the generated file, and move the `using namespace` to after the includes, it compiles fine. FWIW, the actual compilation is done with nvcc 11, and c++17. thanks, Charles.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6343:1105,guid,guide,1105,https://root.cern,https://github.com/root-project/root/issues/6343,2,['guid'],['guide']
Usability,yes i will learn a bit about Root and get back to this issue; Thankyou for the guidance.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9546#issuecomment-1010928254:11,learn,learn,11,https://root.cern,https://github.com/root-project/root/pull/9546#issuecomment-1010928254,4,"['guid', 'learn']","['guidance', 'learn']"
Usability,"you should see the warnings regarding the comparisons of `unsigned long` and `int` as well on your system. can you check? the tests for all builds seem to be fine. is it possible for you to access [cdash.cern.ch](cdash.cern.ch)?. as well, please rebase and squash your commits in a single commit with a meaningful message. last change: please put a `[TMVA]` tag at the begin of your commit message so that it's clear what you've worked on in the commit history.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2309#issuecomment-404080279:411,clear,clear,411,https://root.cern,https://github.com/root-project/root/pull/2309#issuecomment-404080279,2,['clear'],['clear']
Usability,"ype='2 * {x: var * var * float64}'>; data_frame = <cppyy.gbl.ROOT.RDF.RInterface<ROOT::Detail::RDF::RLoopManager,void> object at 0x7f857a496dc0>; filename = '/private/var/folders/wr/rfy5xgb56ls2dygmfnhx35lc0000gn/T/pytest-of-yana/pytest-15/test_data_frame_vec_of_vec_of_0/test-listarray.root'; tmp_path = PosixPath('/private/var/folders/wr/rfy5xgb56ls2dygmfnhx35lc0000gn/T/pytest-of-yana/pytest-15/test_data_frame_vec_of_vec_of_0'). tests/test_1781-rdataframe-snapshot.py:53: SystemError; ```; while running the same code line by line in `Python` or in `lldb`:; ```python; >>> data_frame.Snapshot(""ListArray"", ""listarray.root"", (""x"",)); Error in <TStreamerInfo::Build>: awkward::ArrayView, discarding: long* ptrs_, no [dimension]. TStreamerInfo::Build:0: RuntimeWarning: awkward::ListArray_zKlKkVLNo: base class awkward::ArrayView has no streamer or dictionary it will not be saved; <cppyy.gbl.ROOT.RDF.RResultPtr<ROOT::RDF::RInterface<ROOT::Detail::RDF::RLoopManager,void> > object at 0x1dc7b5090>; ```; ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->; The first `TStreamerInfo::Build` error can be avoided by appending a comment `//!` to `long* ptrs_` line.; Would it be possible to propagate the `TStreamerInfo::Build:0: RuntimeWarning` message to the user?. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->; Unfortunately, it is not reproducible if the code is run line by line in `Python`:; ```python; % python ; Python 3.10.6 | packaged by conda-forge | (main, Aug 22 2022, 20:43:44) [Clang 13.0.1 ] on darwin; Type ""help"", ""copyright"", ""credits"" or ""license"" for more information.; >>> import awkward as ak; >>> import ROOT; >>> ak_array_in = ak.Array([[[1.1], [2.2]], [[3.3], [4.4, 5.5]]]); >>> data_frame = a",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11602:4100,clear,clear,4100,https://root.cern,https://github.com/root-project/root/issues/11602,1,['clear'],['clear']
Usability,"ystery to me at the moment. I recommend that it is actually investigated and understood as this 'seeming random behavior' is likely to be 'use of undefined behavior in the code (somewhere)' or (less likely) the correct behavior but we are completely misunderstanding what's going on under the hood. > It seems to me that failure is the right behavior. It is not :) . I am sure we can agree that an 'undo X' should return the state to a point as if the last X cling related actions had not happened. I.e. the simplified example:. ```; struct Marker { ~Marker() { fprintf(stdout,""dest\n""); } };; .L lib/libStrip.so ; Marker m2;; gInterpreter->AutoParse(""SiStripCluster"");; .undo 2; SiStripCluster obj;; ```. should actually have the same result (assuming no side effect for Marker::Marker) as. ```; struct Marker { ~Marker() { fprintf(stdout,""dest\n""); } };; .L lib/libStrip.so ; SiStripCluster obj;; ```. and it does not (when modules are turned on) ... possibly because the implicit AutoParse (that is triggered by the use of the symbol SiStripCluster) is no longer possible, in the module case, after the first execution (for example because the first execution of the AutoParse is switching some flag, like I already read this part of the pcm file, that is not 'reset'/'reverted' by the undo. > @pcanal, can you remember what exactly we were testing there?. It is testing both that in this setup the undo is not running into an infinite loop and that we correctly support an (implicit or explicit) AutoParse followed by undo followed by an implicit AutoParse. See the related commit:; ```; commit b6296198c2735101051daa33af89fe8ae641991e (fix_cms); Author: Philippe Canal <pcanal@fnal.gov>; Date: Wed Oct 21 21:59:31 2015 -0500. Allow redoing autoparsing undo by a transaction rollback.; ; For each autoparse record to under which transaction it is being done. If this transaction is; rolled back, make sure to clear the caches that noted that this autoparsing had be done.; ```. Cheers,; Philippe.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2852#issuecomment-434478365:1631,undo,undo,1631,https://root.cern,https://github.com/root-project/root/pull/2852#issuecomment-434478365,10,"['clear', 'undo']","['clear', 'undo']"
Usability,zations.test.pyunittests_pyroot_import_load_libs](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/164000/testReport/projectroot.bindings.pyroot.pythonizations/test/pyunittests_pyroot_import_load_libs/); - [projectroot.roottest.cling.offset.roottest_cling_offset_interpreted](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/164000/testReport/projectroot.roottest.cling/offset/roottest_cling_offset_interpreted/); - [projectroot.roottest.cling.other.roottest_cling_other_execValuePrint](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/164000/testReport/projectroot.roottest.cling/other/roottest_cling_other_execValuePrint/); - [projectroot.roottest.root.meta.dictSelection.roottest_root_meta_dictSelection_execAtlasTest2](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/164000/testReport/projectroot.roottest.root.meta/dictSelection/roottest_root_meta_dictSelection_execAtlasTest2/); - [projectroot.roottest.root.selector.simple.roottest_root_selector_simple_runtestLoadingSelector](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/164000/testReport/projectroot.roottest.root.selector/simple/roottest_root_selector_simple_runtestLoadingSelector/); - [projectroot.roottest.root.tree.reader.roottest_root_tree_reader_make](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/164000/testReport/projectroot.roottest.root.tree/reader/roottest_root_tree_reader_make/); - [projectroot.roottest.root.tree.selector.roottest_root_tree_selector_make](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/164000/testReport/projectroot.roottest.root.tree/selector/roottest_root_tree_selector_make/); - [projectroot.roottest.root.treeformula.stl.roottest_root_treeformula_stl_make](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/164000/testReport/projectroot.roottest.root.treeformula/stl/roottest_root_treeformula_stl_make/),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12018#issuecomment-1380358995:1511,simpl,simple,1511,https://root.cern,https://github.com/root-project/root/pull/12018#issuecomment-1380358995,4,['simpl'],['simple']
Usability,"ze (this=0x8ea890, JD=...) at /home/jhahnfel/ROOT/llvm13/src/interpreter/llvm/src/lib/ExecutionEngine/Orc/LLJIT.cpp:215; > #12 0x00007fffeeace5f9 in llvm::orc::LLJIT::initialize (this=0x8eb360, JD=...) at /home/jhahnfel/ROOT/llvm13/src/interpreter/llvm/src/include/llvm/ExecutionEngine/Orc/LLJIT.h:155; > #13 0x00007fffeeaccc6c in cling::IncrementalJIT::runCtors (this=0xfffffffffffffe00) at /home/jhahnfel/ROOT/llvm13/src/interpreter/cling/lib/Interpreter/IncrementalJIT.h:74; > #14 cling::IncrementalExecutor::runStaticInitializersOnce (this=0x698d80, T=...) at /home/jhahnfel/ROOT/llvm13/src/interpreter/cling/lib/Interpreter/IncrementalExecutor.cpp:260; > #15 0x00007fffeea63d43 in cling::Interpreter::executeTransaction (this=<optimized out>, T=...) at /home/jhahnfel/ROOT/llvm13/src/interpreter/cling/lib/Interpreter/Interpreter.cpp:1714; > #16 0x00007fffeea6da53 in cling::IncrementalParser::commitTransaction (this=0x4f6670, PRT=..., ClearDiagClient=<optimized out>) at /home/jhahnfel/ROOT/llvm13/src/interpreter/cling/lib/Interpreter/IncrementalParser.cpp:675; > #17 0x00007fffeea5dd71 in cling::Interpreter::PushTransactionRAII::pop (this=0x7fffffffb0c0) at /home/jhahnfel/ROOT/llvm13/src/interpreter/cling/lib/Interpreter/Interpreter.cpp:116; > #18 cling::Interpreter::PushTransactionRAII::~PushTransactionRAII (this=0x7fffffffb0c0) at /home/jhahnfel/ROOT/llvm13/src/interpreter/cling/lib/Interpreter/Interpreter.cpp:106; > #19 0x00007fffee9f9d90 in ClingMemberIterInternal::DCIter::DCIter (this=0x7fffffffb140, DC=<optimized out>, interp=<optimized out>) at /home/jhahnfel/ROOT/llvm13/src/core/metacling/src/TClingMemberIter.cxx:33; > #20 0x00007fffee9f649b in TClingMemberIter::TClingMemberIter (this=0x7fffffffb128, interp=0x0, DC=0x80) at /home/jhahnfel/ROOT/llvm13/src/core/metacling/src/TClingMemberIter.h:145; > #21 TClingDataMemberIter::TClingDataMemberIter (this=0x7fffffffb128, interp=0x0, DC=0x80, selection=TDictionary::EMemberSelection::kAlsoUsingDecls) at /home/jhahnfel/ROOT/",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10294#issuecomment-1098026446:4433,Clear,ClearDiagClient,4433,https://root.cern,https://github.com/root-project/root/pull/10294#issuecomment-1098026446,1,['Clear'],['ClearDiagClient']
Usability,"~~~; /home/bgruber/root/hist/hist/inc/TF1.h: In member function ‘virtual Double_t TF2::FindMinMax(Double_t*, Bool_t) const’:; /home/bgruber/root/hist/hist/inc/TF1.h:764:18: note: by argument 2 of type ‘const Double_t*’ {aka ‘const double*’} to ‘Double_t (TF1::)(const Double_t*, const Double_t*)’ {aka ‘double (TF1::)(const double*, const double*)’}; /home/bgruber/root/hist/hist/src/TF2.cxx:349:13: note: ‘xx’ declared here; 349 | Double_t xx[2];; | ^~; ```. ```; /home/bgruber/root/graf2d/graf/src/TText.cxx: In member function ‘virtual void TText::Copy(TObject&) const’:; /home/bgruber/root/graf2d/graf/src/TText.cxx:117:72: warning: ‘void operator delete(void*, std::size_t)’ called on pointer ‘obj’ with nonzero offset 112 [-Wfree-nonheap-object]; 117 | delete reinterpret_cast<std::wstring*>(&((TText&)obj).fWcsTitle);; | ^; ```. ```; /home/bgruber/root/geom/geom/src/TGeoManager.cxx:521:4: warning: this ‘if’ clause does not guard... [-Wmisleading-indentation]; 521 | if (fHashVolumes) fHashVolumes->Clear(""nodelete""); SafeDelete(fHashVolumes);; | ^~; ...; /home/bgruber/root/core/foundation/inc/ROOT/RConfig.hxx:534:26: note: ...this statement, but the latter is misleadingly indented as if it were guarded by the ‘if’; 534 | # define SafeDelete(p) { if (p) { delete p; p = 0; } }; | ^; ```. Several `may be used uninitialized` warnings in `/home/bgruber/root/graf2d/asimage/src/TASImage.cxx` and `/home/bgruber/root/gui/gui/src/TGNumberEntry.cxx`. ```; In function ‘char* strncpy(char*, const char*, size_t)’,; inlined from ‘TGTextLine::TGTextLine(const char*)’ at /home/bgruber/root/gui/gui/src/TGText.cxx:74:14:; /usr/include/bits/string_fortified.h:95:34: warning: ‘char* __builtin_strncpy(char*, const char*, long unsigned int)’ output truncated before terminating nul copying as many bytes from a string as its length; -Wstringop-truncation]; 95 | return __builtin___strncpy_chk (__dest, __src, __len,; | ~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~; 96 | __glibc_objsize (__dest));; ",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8129:4383,Clear,Clear,4383,https://root.cern,https://github.com/root-project/root/issues/8129,1,['Clear'],['Clear']
Usability,"‘llvm::orc::LegacyIRCompileLayer&lt;BaseLayerT, CompileFtor&gt;::LegacyIRCompileLayer(BaseLayerT&, CompileFtor, llvm::orc::LegacyIRCompileLayer&lt;BaseLayerT, CompileFtor&gt;::NotifyCompiledCallback) [with BaseLayerT = cling::IncrementalJIT::RemovableObjectLinkingLayer; CompileFtor = llvm::orc::SimpleCompiler; llvm::orc::LegacyIRCompileLayer&lt;BaseLayerT, CompileFtor&gt;::NotifyCompiledCallback = std::function&lt;void(long unsigned int, std::unique_ptr&lt;llvm::Module&gt;)&gt;]’ is deprecated (declared at /data/sftnight/workspace/root-pullrequests-build/root/interpreter/llvm/src/include/llvm/ExecutionEngine/Orc/IRCompileLayer.h:136) [-Wdeprecated-declarations] ; - [2020-09-27T10:44:21.421Z] /data/sftnight/workspace/root-pullrequests-build/root/interpreter/cling/lib/Interpreter/IncrementalJIT.cpp:344:33: warning: ‘llvm::orc::LazyEmittingLayer&lt;BaseLayerT&gt;::LazyEmittingLayer(BaseLayerT&) [with BaseLayerT = llvm::orc::LegacyIRCompileLayer&lt;cling::IncrementalJIT::RemovableObjectLinkingLayer, llvm::orc::SimpleCompiler&gt;]’ is deprecated (declared at /data/sftnight/workspace/root-pullrequests-build/root/interpreter/llvm/src/include/llvm/ExecutionEngine/Orc/LazyEmittingLayer.h:265) [-Wdeprecated-declarations] ; - [2020-09-27T10:44:21.421Z] /data/sftnight/workspace/root-pullrequests-build/root/interpreter/cling/lib/Interpreter/IncrementalJIT.h:108:74: warning: ‘llvm::orc::LegacyRTDyldObjectLinkingLayer::LegacyRTDyldObjectLinkingLayer(llvm::orc::ExecutionSession&, llvm::orc::LegacyRTDyldObjectLinkingLayer::ResourcesGetter, llvm::orc::LegacyRTDyldObjectLinkingLayer::NotifyLoadedFtor, llvm::orc::LegacyRTDyldObjectLinkingLayer::NotifyFinalizedFtor, llvm::orc::LegacyRTDyldObjectLinkingLayer::NotifyFreedFtor)’ is deprecated (declared at /data/sftnight/workspace/root-pullrequests-build/root/interpreter/llvm/src/include/llvm/ExecutionEngine/Orc/RTDyldObjectLinkingLayer.h:356) [-Wdeprecated-declarations] ; - [2020-09-27T10:44:21.421Z] /data/sftnight/workspace/root-pullreque",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6385#issuecomment-699618396:3556,Simpl,SimpleCompiler,3556,https://root.cern,https://github.com/root-project/root/pull/6385#issuecomment-699618396,1,['Simpl'],['SimpleCompiler']
Usability,… and to clear the TLines instances used for the dashed lines. This is needed to trigger recreation after a pad clear from the outside. @couet,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/235:9,clear,clear,9,https://root.cern,https://github.com/root-project/root/pull/235,2,['clear'],['clear']
Usability,"… spectrum and adjust final plot. The files are taken form publiceos!. The final plot looks like this:. ![x](https://user-images.githubusercontent.com/6951222/47027878-93b95200-d168-11e8-96d8-790d5a024e7e.png). **Edit:**. I've restuctured the tutorial a little and simplified the cuts. Now, it's very clear without index magic and much more condense! The simplification comes from requiring *exactly* two muons for each events. We loose a little statistics but the analysis is now easier to understand. I leave the complicated stuff to the upcoming Higgs analysis tutorial ;) The plot looks now like this:. ![x](https://user-images.githubusercontent.com/6951222/47138237-21a45280-d2b9-11e8-809c-044751d2b112.png). And I've added a cut-flow report! ->. ```; Events with exactly two muons: pass=33370298 all=66128870 -- 50.463 %; Muons with opposite charge: pass=25794885 all=33370298 -- 77.299 %; ```. Runtime depends heavily on the xrootd connection. From my experience about 1 to 3 minutes with files read remotely and about 20s with files read from local disk.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2803:265,simpl,simplified,265,https://root.cern,https://github.com/root-project/root/pull/2803,3,"['clear', 'simpl']","['clear', 'simplification', 'simplified']"
Usability,"… tutorials. # This Pull request: df001_Introduction tutorial. ## Changes or fixes:. The explanation of the actions in the part ""Operations on dataframe"" using ForEach() and TActionResultPtr<T> does not match with the RDataFrame Reference guide and is hence outdated. Now there is an updated text. Also, a few grammar mistakes are now corrected for. ## Checklist:. - [ ] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11005:239,guid,guide,239,https://root.cern,https://github.com/root-project/root/pull/11005,1,['guid'],['guide']
Usability,"──────────────────── registers ────; $rax : 0xd0000000d ; $rbx : 0x00000003aed770 → 0x007fffd6f29030 → 0x007ffff583b790 → <TObject::DoError(int,+0> push r15; $rcx : 0x007fffd8004400 → 0x0000000000000000; $rdx : 0xffffffff ; $rsp : 0x007fffdf211020 → 0x0000001900000002; $rbp : 0x00000004729d00 → 0x007fffde172a90 → 0x007ffff583b790 → <TObject::DoError(int,+0> push r15; $rsi : 0x0 ; $rdi : 0x000000043c5a70 → 0x00000d0000000d (""\r""?); $rip : 0x007fffddef621d → <TCanvas::Resize(char+0> call QWORD PTR [rax+0x208]; $r8 : 0x007fffd801d870 → 0x0000000000000000; $r9 : 0x007fffd80044b0 → 0x007fffd801d870 → 0x0000000000000000; $r10 : 0x19000200800015 ; $r11 : 0x0 ; $r12 : 0x0000000402a3a0 → 0x007ffff2e17250 → 0x007ffff2bfaf50 → <ROOT::TRWMutexImp<std::mutex,+0> mov rax, QWORD PTR [rip+0x21e681] # 0x7ffff2e195d8; $r13 : 0x000000043c5a70 → 0x00000d0000000d (""\r""?); $r14 : 0x3 ; $r15 : 0x0000000339ea90 → 0x00007fff00000001; $eflags: [ZERO carry PARITY adjust sign trap INTERRUPT direction overflow RESUME virtualx86 identification]; $cs: 0x33 $ss: 0x2b $ds: 0x00 $es: 0x00 $fs: 0x00 $gs: 0x00 ; ───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── stack ────; 0x007fffdf211020│+0x0000: 0x0000001900000002	 ← $rsp; 0x007fffdf211028│+0x0008: 0x0000000402a3a0 → 0x007ffff2e17250 → 0x007ffff2bfaf50 → <ROOT::TRWMutexImp<std::mutex,+0> mov rax, QWORD PTR [rip+0x21e681] # 0x7ffff2e195d8; 0x007fffdf211030│+0x0010: 0x0000000463e910 → 0x007fffd6f60388 → 0x007ffff583b790 → <TObject::DoError(int,+0> push r15; 0x007fffdf211038│+0x0018: 0x007fffdf211150 → 0x0000000000000a (""\n""?); 0x007fffdf211040│+0x0020: 0x007fffdf211080 → 0x007ffff5c8abf0 → 0x007ffff583b790 → <TObject::DoError(int,+0> push r15; 0x007fffdf211048│+0x0028: 0x007fffd6c2bae8 → <TRootCanvas::HandleContainerConfigure(Event_t*)+40> mov rdi, QWORD PTR [rbp+0x198]; 0x007fffdf211050│+0x0030: 0x007fffdf211080 → 0x007ffff5c8abf0 → 0x007ffff583b790 → <TObject::DoError(in",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12496#issuecomment-1564113510:2572,RESUME,RESUME,2572,https://root.cern,https://github.com/root-project/root/issues/12496#issuecomment-1564113510,1,['RESUME'],['RESUME']
